/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/checkout/payment/route";
exports.ids = ["app/api/checkout/payment/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/mysql2/lib sync recursive ^cardinal.*$":
/*!****************************************************!*\
  !*** ./node_modules/mysql2/lib/ sync ^cardinal.*$ ***!
  \****************************************************/
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => ([]);
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "(rsc)/./node_modules/mysql2/lib sync recursive ^cardinal.*$";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "./action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/client/components/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/action-async-storage.external.js");

/***/ }),

/***/ "./request-async-storage.external":
/*!********************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external.js" ***!
  \********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/request-async-storage.external.js");

/***/ }),

/***/ "./static-generation-async-storage.external":
/*!******************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external.js" ***!
  \******************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/static-generation-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = require("child_process");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "dns":
/*!**********************!*\
  !*** external "dns" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("dns");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "process":
/*!**************************!*\
  !*** external "process" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("process");

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("querystring");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "string_decoder":
/*!*********************************!*\
  !*** external "string_decoder" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("string_decoder");

/***/ }),

/***/ "timers":
/*!*************************!*\
  !*** external "timers" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("timers");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcheckout%2Fpayment%2Froute&page=%2Fapi%2Fcheckout%2Fpayment%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcheckout%2Fpayment%2Froute.ts&appDir=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcheckout%2Fpayment%2Froute&page=%2Fapi%2Fcheckout%2Fpayment%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcheckout%2Fpayment%2Froute.ts&appDir=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_ASUS_AngularWebApp_crumbled_website_app_api_checkout_payment_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/checkout/payment/route.ts */ \"(rsc)/./app/api/checkout/payment/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/checkout/payment/route\",\n        pathname: \"/api/checkout/payment\",\n        filename: \"route\",\n        bundlePath: \"app/api/checkout/payment/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\ASUS\\\\AngularWebApp\\\\crumbled-website\\\\app\\\\api\\\\checkout\\\\payment\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_ASUS_AngularWebApp_crumbled_website_app_api_checkout_payment_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/checkout/payment/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZjaGVja291dCUyRnBheW1lbnQlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmNoZWNrb3V0JTJGcGF5bWVudCUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmNoZWNrb3V0JTJGcGF5bWVudCUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNBU1VTJTVDQW5ndWxhcldlYkFwcCU1Q2NydW1ibGVkLXdlYnNpdGUlNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUMlM0ElNUNVc2VycyU1Q0FTVVMlNUNBbmd1bGFyV2ViQXBwJTVDY3J1bWJsZWQtd2Vic2l0ZSZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD1zdGFuZGFsb25lJnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ3VDO0FBQ3BIO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY3J1bWJsZWQtd2Vic2l0ZS8/MTcyYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCJDOlxcXFxVc2Vyc1xcXFxBU1VTXFxcXEFuZ3VsYXJXZWJBcHBcXFxcY3J1bWJsZWQtd2Vic2l0ZVxcXFxhcHBcXFxcYXBpXFxcXGNoZWNrb3V0XFxcXHBheW1lbnRcXFxccm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwic3RhbmRhbG9uZVwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9jaGVja291dC9wYXltZW50L3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvY2hlY2tvdXQvcGF5bWVudFwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvY2hlY2tvdXQvcGF5bWVudC9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIkM6XFxcXFVzZXJzXFxcXEFTVVNcXFxcQW5ndWxhcldlYkFwcFxcXFxjcnVtYmxlZC13ZWJzaXRlXFxcXGFwcFxcXFxhcGlcXFxcY2hlY2tvdXRcXFxccGF5bWVudFxcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvY2hlY2tvdXQvcGF5bWVudC9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcheckout%2Fpayment%2Froute&page=%2Fapi%2Fcheckout%2Fpayment%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcheckout%2Fpayment%2Froute.ts&appDir=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/checkout/payment/route.ts":
/*!*******************************************!*\
  !*** ./app/api/checkout/payment/route.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth */ \"(rsc)/../../node_modules/next-auth/index.js\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_auth__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/headers */ \"(rsc)/./node_modules/next/dist/api/headers.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uuid */ \"(rsc)/../../node_modules/uuid/dist/esm-node/v4.js\");\n/* harmony import */ var _lib_auth_options__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/auth-options */ \"(rsc)/./lib/auth-options.ts\");\n/* harmony import */ var _lib_services_databaseService__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/services/databaseService */ \"(rsc)/./lib/services/databaseService.ts\");\n/* harmony import */ var _lib_services_paymobService__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/services/paymobService */ \"(rsc)/./lib/services/paymobService.ts\");\n/* harmony import */ var _lib_services_emailService__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/lib/services/emailService */ \"(rsc)/./lib/services/emailService.ts\");\n\n\n\n\n\n\n\n\n// Helper function to get or create cart (same as cart API)\nasync function getOrCreateCart() {\n    const cookieStore = (0,next_headers__WEBPACK_IMPORTED_MODULE_2__.cookies)();\n    let cartId = cookieStore.get(\"cart_id\")?.value;\n    if (!cartId) {\n        const sessionId = (0,uuid__WEBPACK_IMPORTED_MODULE_7__[\"default\"])();\n        const result = await _lib_services_databaseService__WEBPACK_IMPORTED_MODULE_4__.databaseService.query('INSERT INTO carts (session_id, status, created_at) VALUES (?, \"active\", NOW())', [\n            sessionId\n        ]);\n        cartId = result.insertId.toString();\n        setCartCookie(cartId);\n        console.log(\"Created new cart:\", cartId);\n    } else {\n        const cartExists = await _lib_services_databaseService__WEBPACK_IMPORTED_MODULE_4__.databaseService.query('SELECT * FROM carts WHERE id = ? AND status = \"active\"', [\n            cartId\n        ]);\n        if (!Array.isArray(cartExists) || cartExists.length === 0) {\n            const sessionId = (0,uuid__WEBPACK_IMPORTED_MODULE_7__[\"default\"])();\n            const result = await _lib_services_databaseService__WEBPACK_IMPORTED_MODULE_4__.databaseService.query('INSERT INTO carts (session_id, status, created_at) VALUES (?, \"active\", NOW())', [\n                sessionId\n            ]);\n            cartId = result.insertId.toString();\n            setCartCookie(cartId);\n            console.log(\"Created new cart (old one invalid):\", cartId);\n        }\n    }\n    return cartId;\n}\nfunction setCartCookie(cartId) {\n    const cookieStore = (0,next_headers__WEBPACK_IMPORTED_MODULE_2__.cookies)();\n    cookieStore.set(\"cart_id\", cartId, {\n        httpOnly: true,\n        secure: \"development\" === \"production\",\n        sameSite: \"strict\",\n        maxAge: 7 * 24 * 60 * 60\n    });\n}\n// Real Paymob integration\nconst generatePaymobPayment = async (orderData, customerInfo, orderId)=>{\n    try {\n        console.log(\"\\uD83D\\uDD0D [DEBUG] generatePaymobPayment - Starting Paymob payment generation\");\n        console.log(\"\\uD83D\\uDD0D [DEBUG] generatePaymobPayment - Order Data:\", orderData);\n        console.log(\"\\uD83D\\uDD0D [DEBUG] generatePaymobPayment - Customer Info:\", customerInfo);\n        console.log(\"\\uD83D\\uDD0D [DEBUG] generatePaymobPayment - Order ID:\", orderId);\n        // Create Paymob order\n        console.log(\"\\uD83D\\uDD0D [DEBUG] generatePaymobPayment - Creating Paymob order\");\n        const paymobOrder = await _lib_services_paymobService__WEBPACK_IMPORTED_MODULE_5__.paymobService.createOrder({\n            amount: orderData.cart.total,\n            items: orderData.cart.items.map((item)=>({\n                    name: item.name,\n                    amount: item.total,\n                    description: item.flavorDetails || item.name,\n                    quantity: item.quantity\n                })),\n            delivery_needed: true\n        });\n        console.log(\"\\uD83D\\uDD0D [DEBUG] generatePaymobPayment - Paymob order created:\", paymobOrder.id);\n        // Generate payment key\n        console.log(\"\\uD83D\\uDD0D [DEBUG] generatePaymobPayment - Generating payment key\");\n        const paymentKey = await _lib_services_paymobService__WEBPACK_IMPORTED_MODULE_5__.paymobService.generatePaymentKey({\n            orderId: paymobOrder.id,\n            amount: orderData.cart.total,\n            billingData: {\n                first_name: customerInfo.name.split(\" \")[0] || customerInfo.name,\n                last_name: customerInfo.name.split(\" \").slice(1).join(\" \") || customerInfo.name,\n                email: customerInfo.email,\n                phone_number: customerInfo.phone,\n                street: orderData.deliveryAddress.street_address,\n                city: orderData.deliveryAddress.city_name,\n                country: \"Egypt\",\n                apartment: orderData.deliveryAddress.additional_info || \"NA\",\n                building: \"NA\",\n                floor: \"NA\",\n                postal_code: \"NA\",\n                state: \"NA\"\n            }\n        });\n        console.log(\"\\uD83D\\uDD0D [DEBUG] generatePaymobPayment - Payment key generated:\", paymentKey.token);\n        // Get payment URL with order ID in the URL parameters\n        const paymentUrl = `${_lib_services_paymobService__WEBPACK_IMPORTED_MODULE_5__.paymobService.getPaymentUrl(paymentKey.token)}&order_id=${orderId}`;\n        console.log(\"\\uD83D\\uDD0D [DEBUG] generatePaymobPayment - Payment URL generated:\", paymentUrl);\n        return {\n            paymentToken: paymentKey.token,\n            paymentUrl,\n            paymobOrderId: paymobOrder.id\n        };\n    } catch (error) {\n        console.error(\"❌ [DEBUG] generatePaymobPayment - Error:\", error);\n        throw new Error(\"Failed to generate Paymob payment\");\n    }\n};\nasync function POST(request) {\n    try {\n        console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API called\");\n        const session = await (0,next_auth__WEBPACK_IMPORTED_MODULE_1__.getServerSession)(_lib_auth_options__WEBPACK_IMPORTED_MODULE_3__.authOptions);\n        const { paymentMethod, orderData } = await request.json();\n        const cartId = await getOrCreateCart();\n        console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Session:\", session?.user?.email);\n        console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Payment Method:\", paymentMethod);\n        console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Cart ID:\", cartId);\n        console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Order Data:\", orderData);\n        console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Cart items structure:\", JSON.stringify(orderData.cart.items, null, 2));\n        // Validate request\n        if (!cartId || !paymentMethod || !orderData) {\n            console.error(\"❌ [DEBUG] Payment API - Missing required fields\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                message: \"Missing required fields\",\n                error: \"Cart not found, payment method, and order data are required\"\n            }, {\n                status: 400\n            });\n        }\n        // Validate payment method\n        if (![\n            \"cod\",\n            \"paymob\"\n        ].includes(paymentMethod)) {\n            console.error(\"❌ [DEBUG] Payment API - Invalid payment method:\", paymentMethod);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                message: \"Invalid payment method\",\n                error: 'Payment method must be either \"cod\" or \"paymob\"'\n            }, {\n                status: 400\n            });\n        }\n        console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Starting database transaction\");\n        // Start database transaction\n        const result = await _lib_services_databaseService__WEBPACK_IMPORTED_MODULE_4__.databaseService.transaction(async (connection)=>{\n            // Create order\n            const orderStatus = \"pending\"; // Use 'pending' for both COD and Paymob initially\n            const paymentStatus = paymentMethod === \"cod\" ? \"pending\" : \"pending\";\n            let customerId = null;\n            if (session?.user) {\n                // Authenticated user - find in customers table\n                console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Processing authenticated user\");\n                console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - User email:\", session.user.email);\n                // Find customer in customers table\n                const [customerRows] = await connection.query(\"SELECT id FROM customers WHERE email = ?\", [\n                    session.user.email\n                ]);\n                console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Customer lookup result:\", customerRows);\n                if (Array.isArray(customerRows) && customerRows.length > 0) {\n                    customerId = customerRows[0].id;\n                    console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Found existing customer with ID:\", customerId);\n                } else {\n                    console.error(\"❌ [DEBUG] Payment API - Customer not found in customers table\");\n                    throw new Error(\"Customer not found in database\");\n                }\n            } else {\n                // Guest user - create customer record from guest data\n                console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Processing guest user\");\n                if (!orderData.customerInfo) {\n                    throw new Error(\"Customer information is required for guest checkout\");\n                }\n                console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Guest customer info:\", orderData.customerInfo);\n                // Check if guest customer already exists\n                console.log(`🔍 [DEBUG] Payment API - Checking for existing customer with email: ${orderData.customerInfo.email}`);\n                const [existingCustomerRows] = await connection.query(\"SELECT id, type FROM customers WHERE email = ?\", [\n                    orderData.customerInfo.email\n                ]);\n                console.log(`🔍 [DEBUG] Payment API - Existing customer query result:`, existingCustomerRows);\n                console.log(`🔍 [DEBUG] Payment API - Existing customer rows type:`, typeof existingCustomerRows);\n                console.log(`🔍 [DEBUG] Payment API - Existing customer rows is array:`, Array.isArray(existingCustomerRows));\n                console.log(`🔍 [DEBUG] Payment API - Existing customer rows length:`, Array.isArray(existingCustomerRows) ? existingCustomerRows.length : \"Not an array\");\n                if (Array.isArray(existingCustomerRows) && existingCustomerRows.length > 0) {\n                    // Use existing customer (regardless of type)\n                    customerId = existingCustomerRows[0].id;\n                    console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Found existing customer with ID:\", customerId, \"Type:\", existingCustomerRows[0].type);\n                } else {\n                    console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - No existing customer found, creating new one\");\n                    // Create new guest customer record in customers table\n                    const [insertResult] = await connection.query(\"INSERT INTO customers (first_name, last_name, email, phone, type, password) VALUES (?, ?, ?, ?, ?, ?)\", [\n                        orderData.customerInfo.name.split(\" \")[0] || orderData.customerInfo.name,\n                        orderData.customerInfo.name.split(\" \").slice(1).join(\" \") || \"\",\n                        orderData.customerInfo.email,\n                        orderData.customerInfo.phone,\n                        \"guest\",\n                        \"\" // Empty password for guest users\n                    ]);\n                    customerId = insertResult.insertId;\n                    console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Created new guest customer record in customers table with ID:\", customerId);\n                }\n            }\n            if (!customerId) {\n                console.error(\"❌ [DEBUG] Payment API - No customer ID obtained, throwing error\");\n                throw new Error(\"Failed to create or find customer record\");\n            }\n            console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Final customer ID:\", customerId);\n            const [orderResult] = await connection.query(`INSERT INTO orders (\n          customer_id, \n          customer_phone,\n          total, \n          status, \n          payment_method,\n          delivery_address,\n          delivery_city,\n          delivery_zone,\n          zone,\n          delivery_fee,\n          subtotal,\n          created_at\n        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, NOW())`, [\n                customerId,\n                orderData.customerInfo.phone,\n                Number(orderData.cart.total),\n                orderStatus,\n                paymentMethod === \"cod\" ? \"cash\" : \"card\",\n                orderData.deliveryAddress.street_address,\n                orderData.deliveryAddress.city_name,\n                orderData.deliveryAddress.zone_name,\n                orderData.deliveryAddress.zone_name,\n                orderData.cart.deliveryFee,\n                orderData.cart.subtotal\n            ]);\n            const orderId = orderResult.insertId;\n            console.log(`🔍 [DEBUG] Payment API - Order created with ID: ${orderId}`);\n            // Create order items for each cart item\n            console.log(`🔍 [DEBUG] Payment API - About to start order items creation`);\n            console.log(`🔍 [DEBUG] Payment API - Starting order items creation for ${orderData.cart.items.length} items`);\n            for (const item of orderData.cart.items){\n                try {\n                    console.log(`🔍 [DEBUG] Payment API - Processing item:`, item);\n                    // First, create or find product_instance\n                    let productInstanceId;\n                    if (item.isPack) {\n                        console.log(`🔍 [DEBUG] Payment API - Creating product_instance for pack`);\n                        // For packs, we need to create a product_instance for the pack\n                        const [packInstanceResult] = await connection.query(`INSERT INTO product_instance (product_type, product_id, size_id, quantity) \n               VALUES ('cookie_pack', ?, ?, ?)`, [\n                            item.id,\n                            1,\n                            1 // default quantity\n                        ]);\n                        productInstanceId = packInstanceResult.insertId;\n                        console.log(`🔍 [DEBUG] Payment API - Created product_instance for pack with ID: ${productInstanceId}`);\n                        // Create product_instance_flavor records for each flavor\n                        console.log(`🔍 [DEBUG] Payment API - Creating flavor records for ${item.flavors.length} flavors`);\n                        for (const flavor of item.flavors){\n                            await connection.query(`INSERT INTO product_instance_flavor (product_instance_id, flavor_id, size_id, quantity) \n                 VALUES (?, ?, ?, ?)`, [\n                                productInstanceId,\n                                flavor.id,\n                                flavor.size === \"Mini\" ? 1 : flavor.size === \"Medium\" ? 2 : 3,\n                                flavor.quantity\n                            ]);\n                            console.log(`🔍 [DEBUG] Payment API - Created flavor record for ${flavor.name}`);\n                        }\n                    } else {\n                        console.log(`🔍 [DEBUG] Payment API - Creating product_instance for individual product`);\n                        // For individual products, create product_instance\n                        const [productInstanceResult] = await connection.query(`INSERT INTO product_instance (product_type, product_id, size_id, quantity) \n               VALUES ('beverage', ?, ?, ?)`, [\n                            item.id,\n                            1,\n                            1 // default quantity\n                        ]);\n                        productInstanceId = productInstanceResult.insertId;\n                        console.log(`🔍 [DEBUG] Payment API - Created product_instance for product with ID: ${productInstanceId}`);\n                    }\n                    // Create order_item record with unit_price\n                    console.log(`🔍 [DEBUG] Payment API - Creating order_item with productInstanceId: ${productInstanceId}, quantity: ${item.quantity}, unit_price: ${item.basePrice}`);\n                    await connection.query(`INSERT INTO order_items (order_id, product_instance_id, quantity, unit_price) \n             VALUES (?, ?, ?, ?)`, [\n                        orderId,\n                        productInstanceId,\n                        item.quantity,\n                        item.basePrice\n                    ]);\n                    console.log(`✅ Created order item for ${item.name} with quantity ${item.quantity}`);\n                } catch (itemError) {\n                    console.error(`❌ Error creating order item for ${item.name}:`, itemError);\n                // Continue with other items even if one fails\n                }\n            }\n            // Update stock for items (order items will be handled separately when we have proper schema)\n            for (const item of orderData.cart.items){\n                if (item.isPack) {\n                    // For packs, update flavor stock instead of product stock\n                    for (const flavor of item.flavors){\n                        const stockField = `stock_quantity_${flavor.size.toLowerCase()}`;\n                        await connection.query(`UPDATE flavors SET ${stockField} = ${stockField} - ? WHERE id = ?`, [\n                            flavor.quantity,\n                            flavor.id\n                        ]);\n                    }\n                } else {\n                    // For individual products, update product stock\n                    await connection.query(\"UPDATE products SET stock_quantity = stock_quantity - ? WHERE id = ?\", [\n                        item.quantity,\n                        item.id\n                    ]);\n                }\n            }\n            // Clear cart\n            await connection.query(\"DELETE FROM cart_items WHERE cart_id = ?\", [\n                cartId\n            ]);\n            return {\n                orderId\n            };\n        });\n        const { orderId } = result;\n        if (paymentMethod === \"cod\") {\n            // Cash on Delivery - order is complete\n            try {\n                // Fetch delivery rules for the zone\n                let deliveryRules = null;\n                try {\n                    const zoneId = await _lib_services_databaseService__WEBPACK_IMPORTED_MODULE_4__.databaseService.query(\"SELECT z.id FROM zones z JOIN cities c ON z.city_id = c.id WHERE c.name = ? AND z.name = ?\", [\n                        orderData.deliveryAddress.city_name,\n                        orderData.deliveryAddress.zone_name\n                    ]);\n                    if (Array.isArray(zoneId) && zoneId.length > 0) {\n                        const currentDate = new Date().toISOString().split(\"T\")[0];\n                        const deliveryRulesResponse = await fetch(`${process.env.NEXT_PUBLIC_APP_URL || \"http://localhost:3001\"}/api/zones/delivery-rules?zoneId=${zoneId[0].id}&orderDate=${currentDate}`);\n                        if (deliveryRulesResponse.ok) {\n                            const deliveryRulesData = await deliveryRulesResponse.json();\n                            if (deliveryRulesData.success) {\n                                deliveryRules = deliveryRulesData.deliveryRules;\n                            }\n                        }\n                    }\n                } catch (rulesError) {\n                    console.error(\"❌ Failed to fetch delivery rules:\", rulesError);\n                // Continue without delivery rules if fetch fails\n                }\n                // Send order confirmation email\n                await _lib_services_emailService__WEBPACK_IMPORTED_MODULE_6__.emailService.sendOrderConfirmationEmail(orderData.customerInfo.email, orderId.toString(), {\n                    items: orderData.cart.items,\n                    subtotal: orderData.cart.subtotal,\n                    deliveryFee: orderData.cart.deliveryFee,\n                    total: orderData.cart.total,\n                    status: \"pending\",\n                    paymentMethod: \"cod\",\n                    customerInfo: orderData.customerInfo,\n                    deliveryAddress: orderData.deliveryAddress,\n                    deliveryRules: deliveryRules\n                });\n                console.log(\"✅ Order confirmation email sent for COD order\");\n            } catch (emailError) {\n                console.error(\"❌ Failed to send order confirmation email:\", emailError);\n            // Don't fail the order if email fails\n            }\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                message: \"Order placed successfully with Cash on Delivery\",\n                data: {\n                    orderId\n                }\n            });\n        } else {\n            // Paymob payment - generate payment URL\n            console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Generating Paymob payment\");\n            const { paymentToken, paymentUrl } = await generatePaymobPayment(orderData, orderData.customerInfo, orderId);\n            console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Paymob payment generated\");\n            console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Payment Token:\", paymentToken);\n            console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Payment URL:\", paymentUrl);\n            // Store payment token for webhook validation\n            await _lib_services_databaseService__WEBPACK_IMPORTED_MODULE_4__.databaseService.query(\"UPDATE orders SET payment_token = ? WHERE id = ?\", [\n                paymentToken,\n                orderId\n            ]);\n            console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Payment token stored in database\");\n            const responseData = {\n                success: true,\n                message: \"Payment URL generated successfully\",\n                data: {\n                    orderId,\n                    paymentUrl,\n                    paymentToken\n                }\n            };\n            console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Final Response Data:\", responseData);\n            console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Payment URL in response:\", responseData.data.paymentUrl);\n            console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Payment Token in response:\", responseData.data.paymentToken);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(responseData);\n        }\n    } catch (error) {\n        console.error(\"Error processing payment:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            message: \"Failed to process payment\",\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/checkout/payment/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/auth-options.ts":
/*!*****************************!*\
  !*** ./lib/auth-options.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authOptions: () => (/* binding */ authOptions)\n/* harmony export */ });\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth/providers/credentials */ \"(rsc)/../../node_modules/next-auth/providers/credentials.js\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bcryptjs */ \"(rsc)/./node_modules/bcryptjs/index.js\");\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./db */ \"(rsc)/./lib/db.ts\");\n\n\n\nconst authOptions = {\n    providers: [\n        (0,next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n            name: \"Credentials\",\n            credentials: {\n                email: {\n                    label: \"Email\",\n                    type: \"email\"\n                },\n                password: {\n                    label: \"Password\",\n                    type: \"password\"\n                }\n            },\n            async authorize (credentials) {\n                if (!credentials?.email || !credentials?.password) {\n                    return null;\n                }\n                const [rows] = await _db__WEBPACK_IMPORTED_MODULE_2__[\"default\"].query(\"SELECT * FROM customers WHERE email = ?\", [\n                    credentials.email\n                ]);\n                const user = rows[0];\n                if (!user) {\n                    return null;\n                }\n                // Compare password with bcrypt\n                const isPasswordValid = await (0,bcryptjs__WEBPACK_IMPORTED_MODULE_1__.compare)(credentials.password, user.password);\n                if (!isPasswordValid) {\n                    return null;\n                }\n                return {\n                    id: user.id.toString(),\n                    email: user.email,\n                    name: `${user.first_name} ${user.last_name}`,\n                    firstName: user.first_name,\n                    lastName: user.last_name,\n                    phone: user.phone\n                };\n            }\n        })\n    ],\n    callbacks: {\n        async jwt ({ token, user }) {\n            if (user) {\n                token.id = user.id;\n                token.firstName = user.firstName;\n                token.lastName = user.lastName;\n                token.phone = user.phone;\n            }\n            return token;\n        },\n        async session ({ session, token }) {\n            if (session.user) {\n                session.user.id = token.id;\n                session.user.firstName = token.firstName;\n                session.user.lastName = token.lastName;\n                session.user.phone = token.phone;\n            }\n            return session;\n        }\n    },\n    pages: {\n        signIn: \"/auth/login\",\n        signOut: \"/auth/signout\"\n    },\n    session: {\n        strategy: \"jwt\",\n        maxAge: 24 * 60 * 60\n    },\n    jwt: {\n        maxAge: 24 * 60 * 60\n    },\n    secret: process.env.NEXTAUTH_SECRET || \"x+1DNU9w01MI2M7bNhUuI9F74OxrivACw4XemPMY8gE=\",\n    debug: \"development\" === \"development\",\n    useSecureCookies: \"development\" === \"production\",\n    cookies: {\n        sessionToken: {\n            name: `next-auth.session-token`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: \"development\" === \"production\"\n            }\n        }\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvYXV0aC1vcHRpb25zLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDa0U7QUFDL0I7QUFDYjtBQWdDZixNQUFNRyxjQUErQjtJQUMxQ0MsV0FBVztRQUNUSiwyRUFBbUJBLENBQUM7WUFDbEJLLE1BQU07WUFDTkMsYUFBYTtnQkFDWEMsT0FBTztvQkFBRUMsT0FBTztvQkFBU0MsTUFBTTtnQkFBUTtnQkFDdkNDLFVBQVU7b0JBQUVGLE9BQU87b0JBQVlDLE1BQU07Z0JBQVc7WUFDbEQ7WUFDQSxNQUFNRSxXQUFVTCxXQUFXO2dCQUN6QixJQUFJLENBQUNBLGFBQWFDLFNBQVMsQ0FBQ0QsYUFBYUksVUFBVTtvQkFDakQsT0FBTztnQkFDVDtnQkFFQSxNQUFNLENBQUNFLEtBQUssR0FBRyxNQUFNViwyQ0FBRUEsQ0FBQ1csS0FBSyxDQUMzQiwyQ0FDQTtvQkFBQ1AsWUFBWUMsS0FBSztpQkFBQztnQkFHckIsTUFBTU8sT0FBTyxJQUFlLENBQUMsRUFBRTtnQkFFL0IsSUFBSSxDQUFDQSxNQUFNO29CQUNULE9BQU87Z0JBQ1Q7Z0JBRUEsK0JBQStCO2dCQUMvQixNQUFNQyxrQkFBa0IsTUFBTWQsaURBQU9BLENBQUNLLFlBQVlJLFFBQVEsRUFBRUksS0FBS0osUUFBUTtnQkFFekUsSUFBSSxDQUFDSyxpQkFBaUI7b0JBQ3BCLE9BQU87Z0JBQ1Q7Z0JBRUEsT0FBTztvQkFDTEMsSUFBSUYsS0FBS0UsRUFBRSxDQUFDQyxRQUFRO29CQUNwQlYsT0FBT08sS0FBS1AsS0FBSztvQkFDakJGLE1BQU0sQ0FBQyxFQUFFUyxLQUFLSSxVQUFVLENBQUMsQ0FBQyxFQUFFSixLQUFLSyxTQUFTLENBQUMsQ0FBQztvQkFDNUNDLFdBQVdOLEtBQUtJLFVBQVU7b0JBQzFCRyxVQUFVUCxLQUFLSyxTQUFTO29CQUN4QkcsT0FBT1IsS0FBS1EsS0FBSztnQkFDbkI7WUFDRjtRQUNGO0tBQ0Q7SUFDREMsV0FBVztRQUNULE1BQU1DLEtBQUksRUFBRUMsS0FBSyxFQUFFWCxJQUFJLEVBQUU7WUFDdkIsSUFBSUEsTUFBTTtnQkFDUlcsTUFBTVQsRUFBRSxHQUFHRixLQUFLRSxFQUFFO2dCQUNsQlMsTUFBTUwsU0FBUyxHQUFHTixLQUFLTSxTQUFTO2dCQUNoQ0ssTUFBTUosUUFBUSxHQUFHUCxLQUFLTyxRQUFRO2dCQUM5QkksTUFBTUgsS0FBSyxHQUFHUixLQUFLUSxLQUFLO1lBQzFCO1lBQ0EsT0FBT0c7UUFDVDtRQUNBLE1BQU1DLFNBQVEsRUFBRUEsT0FBTyxFQUFFRCxLQUFLLEVBQUU7WUFDOUIsSUFBSUMsUUFBUVosSUFBSSxFQUFFO2dCQUNoQlksUUFBUVosSUFBSSxDQUFDRSxFQUFFLEdBQUdTLE1BQU1ULEVBQUU7Z0JBQzFCVSxRQUFRWixJQUFJLENBQUNNLFNBQVMsR0FBR0ssTUFBTUwsU0FBUztnQkFDeENNLFFBQVFaLElBQUksQ0FBQ08sUUFBUSxHQUFHSSxNQUFNSixRQUFRO2dCQUN0Q0ssUUFBUVosSUFBSSxDQUFDUSxLQUFLLEdBQUdHLE1BQU1ILEtBQUs7WUFDbEM7WUFDQSxPQUFPSTtRQUNUO0lBQ0Y7SUFDQUMsT0FBTztRQUNMQyxRQUFRO1FBQ1JDLFNBQVM7SUFDWDtJQUNBSCxTQUFTO1FBQ1BJLFVBQVU7UUFDVkMsUUFBUSxLQUFLLEtBQUs7SUFDcEI7SUFDQVAsS0FBSztRQUNITyxRQUFRLEtBQUssS0FBSztJQUNwQjtJQUNBQyxRQUFRQyxRQUFRQyxHQUFHLENBQUNDLGVBQWUsSUFBSTtJQUN2Q0MsT0FBT0gsa0JBQXlCO0lBQ2hDSSxrQkFBa0JKLGtCQUF5QjtJQUMzQ0ssU0FBUztRQUNQQyxjQUFjO1lBQ1psQyxNQUFNLENBQUMsdUJBQXVCLENBQUM7WUFDL0JtQyxTQUFTO2dCQUNQQyxVQUFVO2dCQUNWQyxVQUFVO2dCQUNWQyxNQUFNO2dCQUNOQyxRQUFRWCxrQkFBeUI7WUFDbkM7UUFDRjtJQUNGO0FBQ0YsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL2NydW1ibGVkLXdlYnNpdGUvLi9saWIvYXV0aC1vcHRpb25zLnRzP2FhNzEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dEF1dGhPcHRpb25zIH0gZnJvbSAnbmV4dC1hdXRoJztcbmltcG9ydCBDcmVkZW50aWFsc1Byb3ZpZGVyIGZyb20gJ25leHQtYXV0aC9wcm92aWRlcnMvY3JlZGVudGlhbHMnO1xuaW1wb3J0IHsgY29tcGFyZSB9IGZyb20gJ2JjcnlwdGpzJztcbmltcG9ydCBkYiBmcm9tICcuL2RiJztcbmltcG9ydCB7IEpXVCB9IGZyb20gJ25leHQtYXV0aC9qd3QnO1xuXG5pbnRlcmZhY2UgVXNlciB7XG4gIGlkOiBzdHJpbmc7XG4gIGVtYWlsOiBzdHJpbmc7XG4gIG5hbWU6IHN0cmluZztcbiAgZmlyc3ROYW1lOiBzdHJpbmc7XG4gIGxhc3ROYW1lOiBzdHJpbmc7XG4gIHBob25lOiBzdHJpbmc7XG59XG5cbmRlY2xhcmUgbW9kdWxlICduZXh0LWF1dGgnIHtcbiAgaW50ZXJmYWNlIFNlc3Npb24ge1xuICAgIHVzZXI6IFVzZXI7XG4gIH1cbiAgaW50ZXJmYWNlIFVzZXIge1xuICAgIGZpcnN0TmFtZTogc3RyaW5nO1xuICAgIGxhc3ROYW1lOiBzdHJpbmc7XG4gICAgcGhvbmU6IHN0cmluZztcbiAgfVxufVxuXG5kZWNsYXJlIG1vZHVsZSAnbmV4dC1hdXRoL2p3dCcge1xuICBpbnRlcmZhY2UgSldUIHtcbiAgICBpZDogc3RyaW5nO1xuICAgIGZpcnN0TmFtZTogc3RyaW5nO1xuICAgIGxhc3ROYW1lOiBzdHJpbmc7XG4gICAgcGhvbmU6IHN0cmluZztcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgYXV0aE9wdGlvbnM6IE5leHRBdXRoT3B0aW9ucyA9IHtcbiAgcHJvdmlkZXJzOiBbXG4gICAgQ3JlZGVudGlhbHNQcm92aWRlcih7XG4gICAgICBuYW1lOiAnQ3JlZGVudGlhbHMnLFxuICAgICAgY3JlZGVudGlhbHM6IHtcbiAgICAgICAgZW1haWw6IHsgbGFiZWw6ICdFbWFpbCcsIHR5cGU6ICdlbWFpbCcgfSxcbiAgICAgICAgcGFzc3dvcmQ6IHsgbGFiZWw6ICdQYXNzd29yZCcsIHR5cGU6ICdwYXNzd29yZCcgfVxuICAgICAgfSxcbiAgICAgIGFzeW5jIGF1dGhvcml6ZShjcmVkZW50aWFscykge1xuICAgICAgICBpZiAoIWNyZWRlbnRpYWxzPy5lbWFpbCB8fCAhY3JlZGVudGlhbHM/LnBhc3N3b3JkKSB7XG4gICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBbcm93c10gPSBhd2FpdCBkYi5xdWVyeShcbiAgICAgICAgICAnU0VMRUNUICogRlJPTSBjdXN0b21lcnMgV0hFUkUgZW1haWwgPSA/JyxcbiAgICAgICAgICBbY3JlZGVudGlhbHMuZW1haWxdXG4gICAgICAgICk7XG5cbiAgICAgICAgY29uc3QgdXNlciA9IChyb3dzIGFzIGFueVtdKVswXTtcblxuICAgICAgICBpZiAoIXVzZXIpIHtcbiAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIENvbXBhcmUgcGFzc3dvcmQgd2l0aCBiY3J5cHRcbiAgICAgICAgY29uc3QgaXNQYXNzd29yZFZhbGlkID0gYXdhaXQgY29tcGFyZShjcmVkZW50aWFscy5wYXNzd29yZCwgdXNlci5wYXNzd29yZCk7XG4gICAgICAgIFxuICAgICAgICBpZiAoIWlzUGFzc3dvcmRWYWxpZCkge1xuICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBpZDogdXNlci5pZC50b1N0cmluZygpLFxuICAgICAgICAgIGVtYWlsOiB1c2VyLmVtYWlsLFxuICAgICAgICAgIG5hbWU6IGAke3VzZXIuZmlyc3RfbmFtZX0gJHt1c2VyLmxhc3RfbmFtZX1gLFxuICAgICAgICAgIGZpcnN0TmFtZTogdXNlci5maXJzdF9uYW1lLFxuICAgICAgICAgIGxhc3ROYW1lOiB1c2VyLmxhc3RfbmFtZSxcbiAgICAgICAgICBwaG9uZTogdXNlci5waG9uZVxuICAgICAgICB9O1xuICAgICAgfVxuICAgIH0pXG4gIF0sXG4gIGNhbGxiYWNrczoge1xuICAgIGFzeW5jIGp3dCh7IHRva2VuLCB1c2VyIH0pIHtcbiAgICAgIGlmICh1c2VyKSB7XG4gICAgICAgIHRva2VuLmlkID0gdXNlci5pZDtcbiAgICAgICAgdG9rZW4uZmlyc3ROYW1lID0gdXNlci5maXJzdE5hbWU7XG4gICAgICAgIHRva2VuLmxhc3ROYW1lID0gdXNlci5sYXN0TmFtZTtcbiAgICAgICAgdG9rZW4ucGhvbmUgPSB1c2VyLnBob25lO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRva2VuO1xuICAgIH0sXG4gICAgYXN5bmMgc2Vzc2lvbih7IHNlc3Npb24sIHRva2VuIH0pIHtcbiAgICAgIGlmIChzZXNzaW9uLnVzZXIpIHtcbiAgICAgICAgc2Vzc2lvbi51c2VyLmlkID0gdG9rZW4uaWQ7XG4gICAgICAgIHNlc3Npb24udXNlci5maXJzdE5hbWUgPSB0b2tlbi5maXJzdE5hbWU7XG4gICAgICAgIHNlc3Npb24udXNlci5sYXN0TmFtZSA9IHRva2VuLmxhc3ROYW1lO1xuICAgICAgICBzZXNzaW9uLnVzZXIucGhvbmUgPSB0b2tlbi5waG9uZTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBzZXNzaW9uO1xuICAgIH1cbiAgfSxcbiAgcGFnZXM6IHtcbiAgICBzaWduSW46ICcvYXV0aC9sb2dpbicsXG4gICAgc2lnbk91dDogJy9hdXRoL3NpZ25vdXQnXG4gIH0sXG4gIHNlc3Npb246IHtcbiAgICBzdHJhdGVneTogJ2p3dCcsXG4gICAgbWF4QWdlOiAyNCAqIDYwICogNjAsIC8vIDI0IGhvdXJzXG4gIH0sXG4gIGp3dDoge1xuICAgIG1heEFnZTogMjQgKiA2MCAqIDYwLCAvLyAyNCBob3Vyc1xuICB9LFxuICBzZWNyZXQ6IHByb2Nlc3MuZW52Lk5FWFRBVVRIX1NFQ1JFVCB8fCAneCsxRE5VOXcwMU1JMk03Yk5oVXVJOUY3NE94cml2QUN3NFhlbVBNWThnRT0nLFxuICBkZWJ1ZzogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcsXG4gIHVzZVNlY3VyZUNvb2tpZXM6IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicsXG4gIGNvb2tpZXM6IHtcbiAgICBzZXNzaW9uVG9rZW46IHtcbiAgICAgIG5hbWU6IGBuZXh0LWF1dGguc2Vzc2lvbi10b2tlbmAsXG4gICAgICBvcHRpb25zOiB7XG4gICAgICAgIGh0dHBPbmx5OiB0cnVlLFxuICAgICAgICBzYW1lU2l0ZTogJ2xheCcsXG4gICAgICAgIHBhdGg6ICcvJyxcbiAgICAgICAgc2VjdXJlOiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nXG4gICAgICB9XG4gICAgfVxuICB9XG59OyAiXSwibmFtZXMiOlsiQ3JlZGVudGlhbHNQcm92aWRlciIsImNvbXBhcmUiLCJkYiIsImF1dGhPcHRpb25zIiwicHJvdmlkZXJzIiwibmFtZSIsImNyZWRlbnRpYWxzIiwiZW1haWwiLCJsYWJlbCIsInR5cGUiLCJwYXNzd29yZCIsImF1dGhvcml6ZSIsInJvd3MiLCJxdWVyeSIsInVzZXIiLCJpc1Bhc3N3b3JkVmFsaWQiLCJpZCIsInRvU3RyaW5nIiwiZmlyc3RfbmFtZSIsImxhc3RfbmFtZSIsImZpcnN0TmFtZSIsImxhc3ROYW1lIiwicGhvbmUiLCJjYWxsYmFja3MiLCJqd3QiLCJ0b2tlbiIsInNlc3Npb24iLCJwYWdlcyIsInNpZ25JbiIsInNpZ25PdXQiLCJzdHJhdGVneSIsIm1heEFnZSIsInNlY3JldCIsInByb2Nlc3MiLCJlbnYiLCJORVhUQVVUSF9TRUNSRVQiLCJkZWJ1ZyIsInVzZVNlY3VyZUNvb2tpZXMiLCJjb29raWVzIiwic2Vzc2lvblRva2VuIiwib3B0aW9ucyIsImh0dHBPbmx5Iiwic2FtZVNpdGUiLCJwYXRoIiwic2VjdXJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./lib/auth-options.ts\n");

/***/ }),

/***/ "(rsc)/./lib/db.ts":
/*!*******************!*\
  !*** ./lib/db.ts ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getOrderByTracking: () => (/* binding */ getOrderByTracking),\n/* harmony export */   getOrderDetails: () => (/* binding */ getOrderDetails),\n/* harmony export */   getOrders: () => (/* binding */ getOrders),\n/* harmony export */   saveOrder: () => (/* binding */ saveOrder),\n/* harmony export */   testConnection: () => (/* binding */ testConnection),\n/* harmony export */   updateOrderStatus: () => (/* binding */ updateOrderStatus)\n/* harmony export */ });\n/* harmony import */ var mysql2_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mysql2/promise */ \"(rsc)/./node_modules/mysql2/promise.js\");\n\n// Create MySQL connection pool\nconst pool = mysql2_promise__WEBPACK_IMPORTED_MODULE_0__.createPool({\n    host: process.env.DB_HOST || \"localhost\",\n    user: process.env.DB_USER || \"root\",\n    password: process.env.DB_PASSWORD || \"Goodmorning@1\",\n    database: process.env.DB_NAME || \"crumbled_nextDB\",\n    waitForConnections: true,\n    connectionLimit: 10,\n    queueLimit: 0,\n    enableKeepAlive: true,\n    keepAliveInitialDelay: 10000,\n    idleTimeout: 60000,\n    maxIdle: 5 // Maximum number of idle connections to keep\n});\n// Test connection function\nasync function testConnection() {\n    let connection;\n    try {\n        connection = await pool.getConnection();\n        const [result] = await connection.query(\"SELECT NOW() as `current_time`, VERSION() as mysql_version\");\n        return {\n            success: true,\n            message: \"Database connected successfully\",\n            timestamp: result[0].current_time,\n            version: result[0].mysql_version\n        };\n    } catch (error) {\n        console.error(\"Database connection failed:\", error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Unknown connection error\"\n        };\n    } finally{\n        if (connection) {\n            connection.release();\n        }\n    }\n}\nasync function saveOrder(orderData) {\n    let connection;\n    try {\n        connection = await pool.getConnection();\n        // Check if orders table exists\n        const [tableCheck] = await connection.query(\"SELECT COUNT(*) as count FROM information_schema.tables WHERE table_schema = 'crumbled_nextDB' AND table_name = 'orders'\");\n        if (tableCheck[0].count === 0) {\n            return {\n                success: false,\n                error: \"Orders table does not exist. Please set up the database first.\"\n            };\n        }\n        // Generate tracking ID if not provided\n        if (!orderData.trackingId) {\n            orderData.trackingId = `CC${Math.random().toString(36).substring(2, 10).toUpperCase()}`;\n        }\n        // Start transaction by inserting order first\n        const [orderResult] = await connection.query(`INSERT INTO orders (\n        customer_name, \n        customer_email, \n        customer_phone, \n        address, \n        city, \n        state, \n        zip_code, \n        total_amount,\n        tracking_id,\n        order_status\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, 'pending')`, [\n            orderData.customerName,\n            orderData.customerEmail,\n            orderData.customerPhone,\n            orderData.address,\n            orderData.city,\n            orderData.state,\n            orderData.zipCode,\n            orderData.totalAmount,\n            orderData.trackingId || `CC${Math.random().toString(36).substring(2, 10).toUpperCase()}`\n        ]);\n        const orderId = orderResult.insertId;\n        // Process each item and update stock\n        for (const item of orderData.items){\n            // Insert order item\n            await connection.query(`INSERT INTO order_items (\n          order_id, \n          product_id, \n          product_name, \n          quantity, \n          price, \n          is_bundle, \n          bundle_size, \n          bundle_items\n        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)`, [\n                orderId,\n                item.id,\n                item.name,\n                item.quantity,\n                item.price,\n                !!item.isBundle,\n                item.bundleSize || null,\n                item.bundleItems ? JSON.stringify(item.bundleItems) : null\n            ]);\n            // Update stock for individual items\n            if (!item.isBundle) {\n                // For regular items, reduce stock directly\n                const [stockUpdate] = await connection.query(`UPDATE stock \n           SET quantity = quantity - ?, updated_at = CURRENT_TIMESTAMP\n           WHERE product_id = ?\n           RETURNING quantity`, [\n                    item.quantity,\n                    item.id\n                ]);\n                // Check if stock went negative (optional warning)\n                if (stockUpdate.length > 0 && stockUpdate[0].quantity < 0) {\n                    console.warn(`Warning: Stock for product ${item.name} (ID: ${item.id}) went negative: ${stockUpdate[0].quantity}`);\n                }\n            } else {\n                // For bundles, reduce stock for each bundled item\n                if (item.bundleItems && Array.isArray(item.bundleItems)) {\n                    for (const bundleItem of item.bundleItems){\n                        const [stockUpdate] = await connection.query(`UPDATE stock \n               SET quantity = quantity - ?, updated_at = CURRENT_TIMESTAMP\n               WHERE product_id = ?\n               RETURNING quantity, product_name`, [\n                            item.quantity,\n                            bundleItem.id\n                        ]);\n                        if (stockUpdate.length > 0 && stockUpdate[0].quantity < 0) {\n                            console.warn(`Warning: Stock for bundled product ${stockUpdate[0].product_name} (ID: ${bundleItem.id}) went negative: ${stockUpdate[0].quantity}`);\n                        }\n                    }\n                }\n            }\n        }\n        return {\n            success: true,\n            orderId,\n            trackingId: orderData.trackingId\n        };\n    } catch (error) {\n        console.error(\"Error saving order:\", error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Database operation failed\"\n        };\n    } finally{\n        if (connection) {\n            connection.release();\n        }\n    }\n}\nasync function getOrders() {\n    let connection;\n    try {\n        connection = await pool.getConnection();\n        // Check if orders table exists\n        const [tableCheck] = await connection.query(\"SELECT COUNT(*) as count FROM information_schema.tables WHERE table_schema = 'crumbled_nextDB' AND table_name = 'orders'\");\n        if (tableCheck[0].count === 0) {\n            return {\n                success: false,\n                error: \"Orders table does not exist. Please set up the database first.\"\n            };\n        }\n        const [orders] = await connection.query(\"SELECT * FROM orders ORDER BY created_at DESC\");\n        return {\n            success: true,\n            orders\n        };\n    } catch (error) {\n        console.error(\"Error fetching orders:\", error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Database connection failed\"\n        };\n    } finally{\n        if (connection) {\n            connection.release();\n        }\n    }\n}\nasync function getOrderDetails(orderId) {\n    let connection;\n    try {\n        connection = await pool.getConnection();\n        const [order] = await connection.query(\"SELECT * FROM orders WHERE id = ?\", [\n            orderId\n        ]);\n        if (order.length === 0) {\n            return {\n                success: false,\n                error: \"Order not found\"\n            };\n        }\n        const [items] = await connection.query(\"SELECT * FROM order_items WHERE order_id = ?\", [\n            orderId\n        ]);\n        return {\n            success: true,\n            order: order[0],\n            items\n        };\n    } catch (error) {\n        console.error(\"Error fetching order details:\", error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Database operation failed\"\n        };\n    } finally{\n        if (connection) {\n            connection.release();\n        }\n    }\n}\nasync function getOrderByTracking(trackingId, email) {\n    let connection;\n    try {\n        connection = await pool.getConnection();\n        const [order] = await connection.query(\"SELECT * FROM orders WHERE tracking_id = ? AND customer_email = ?\", [\n            trackingId,\n            email\n        ]);\n        if (order.length === 0) {\n            return {\n                success: false,\n                error: \"Order not found or email doesn't match\"\n            };\n        }\n        const [items] = await connection.query(\"SELECT * FROM order_items WHERE order_id = ?\", [\n            order[0].id\n        ]);\n        return {\n            success: true,\n            order: order[0],\n            items\n        };\n    } catch (error) {\n        console.error(\"Error fetching order by tracking:\", error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Database operation failed\"\n        };\n    } finally{\n        if (connection) {\n            connection.release();\n        }\n    }\n}\nasync function updateOrderStatus(orderId, status) {\n    let connection;\n    try {\n        connection = await pool.getConnection();\n        const [result] = await connection.query(\"UPDATE orders SET order_status = ?, updated_at = CURRENT_TIMESTAMP WHERE id = ?\", [\n            status,\n            orderId\n        ]);\n        return {\n            success: true,\n            message: \"Order status updated successfully\"\n        };\n    } catch (error) {\n        console.error(\"Error updating order status:\", error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Database operation failed\"\n        };\n    } finally{\n        if (connection) {\n            connection.release();\n        }\n    }\n}\n// Export the pool as default\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (pool);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/db.ts\n");

/***/ }),

/***/ "(rsc)/./lib/services/databaseService.ts":
/*!*****************************************!*\
  !*** ./lib/services/databaseService.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   databaseService: () => (/* binding */ databaseService)\n/* harmony export */ });\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/db */ \"(rsc)/./lib/db.ts\");\n\nconst databaseService = {\n    async query (sql, params) {\n        let connection;\n        try {\n            connection = await _lib_db__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getConnection();\n            const [rows] = await connection.execute(sql, params);\n            return rows;\n        } catch (error) {\n            console.error(\"Database query error:\", error);\n            throw error;\n        } finally{\n            if (connection) {\n                connection.release();\n            }\n        }\n    },\n    async transaction (callback) {\n        const connection = await _lib_db__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getConnection();\n        try {\n            await connection.beginTransaction();\n            const result = await callback(connection);\n            await connection.commit();\n            return result;\n        } catch (error) {\n            await connection.rollback();\n            throw error;\n        } finally{\n            connection.release();\n        }\n    },\n    async testConnection () {\n        let connection;\n        try {\n            connection = await _lib_db__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getConnection();\n            const [result] = await connection.query(\"SELECT NOW() as `current_time`, VERSION() as mysql_version\");\n            return {\n                success: true,\n                data: result[0]\n            };\n        } catch (error) {\n            console.error(\"Database connection test failed:\", error);\n            return {\n                success: false,\n                error: error instanceof Error ? error.message : \"Unknown error\"\n            };\n        } finally{\n            if (connection) {\n                connection.release();\n            }\n        }\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvc2VydmljZXMvZGF0YWJhc2VTZXJ2aWNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQzRCO0FBRXJCLE1BQU1DLGtCQUFrQjtJQUM3QixNQUFNQyxPQUFlQyxHQUFXLEVBQUVDLE1BQWM7UUFDOUMsSUFBSUM7UUFDSixJQUFJO1lBQ0ZBLGFBQWEsTUFBTUwsK0NBQUlBLENBQUNNLGFBQWE7WUFDckMsTUFBTSxDQUFDQyxLQUFLLEdBQUcsTUFBTUYsV0FBV0csT0FBTyxDQUFDTCxLQUFLQztZQUM3QyxPQUFPRztRQUNULEVBQUUsT0FBT0UsT0FBTztZQUNkQyxRQUFRRCxLQUFLLENBQUMseUJBQXlCQTtZQUN2QyxNQUFNQTtRQUNSLFNBQVU7WUFDUixJQUFJSixZQUFZO2dCQUNkQSxXQUFXTSxPQUFPO1lBQ3BCO1FBQ0Y7SUFDRjtJQUVBLE1BQU1DLGFBQWVDLFFBQXNEO1FBQ3pFLE1BQU1SLGFBQWEsTUFBTUwsK0NBQUlBLENBQUNNLGFBQWE7UUFDM0MsSUFBSTtZQUNGLE1BQU1ELFdBQVdTLGdCQUFnQjtZQUNqQyxNQUFNQyxTQUFTLE1BQU1GLFNBQVNSO1lBQzlCLE1BQU1BLFdBQVdXLE1BQU07WUFDdkIsT0FBT0Q7UUFDVCxFQUFFLE9BQU9OLE9BQU87WUFDZCxNQUFNSixXQUFXWSxRQUFRO1lBQ3pCLE1BQU1SO1FBQ1IsU0FBVTtZQUNSSixXQUFXTSxPQUFPO1FBQ3BCO0lBQ0Y7SUFFQSxNQUFNTztRQUNKLElBQUliO1FBQ0osSUFBSTtZQUNGQSxhQUFhLE1BQU1MLCtDQUFJQSxDQUFDTSxhQUFhO1lBQ3JDLE1BQU0sQ0FBQ1MsT0FBTyxHQUFHLE1BQU1WLFdBQVdILEtBQUssQ0FBQztZQUN4QyxPQUFPO2dCQUNMaUIsU0FBUztnQkFDVEMsTUFBTUwsTUFBTSxDQUFDLEVBQUU7WUFDakI7UUFDRixFQUFFLE9BQU9OLE9BQU87WUFDZEMsUUFBUUQsS0FBSyxDQUFDLG9DQUFvQ0E7WUFDbEQsT0FBTztnQkFDTFUsU0FBUztnQkFDVFYsT0FBT0EsaUJBQWlCWSxRQUFRWixNQUFNYSxPQUFPLEdBQUc7WUFDbEQ7UUFDRixTQUFVO1lBQ1IsSUFBSWpCLFlBQVk7Z0JBQ2RBLFdBQVdNLE9BQU87WUFDcEI7UUFDRjtJQUNGO0FBQ0YsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL2NydW1ibGVkLXdlYnNpdGUvLi9saWIvc2VydmljZXMvZGF0YWJhc2VTZXJ2aWNlLnRzP2I4NGEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG15c3FsIGZyb20gJ215c3FsMi9wcm9taXNlJztcbmltcG9ydCBwb29sIGZyb20gJ0AvbGliL2RiJztcblxuZXhwb3J0IGNvbnN0IGRhdGFiYXNlU2VydmljZSA9IHtcbiAgYXN5bmMgcXVlcnk8VCA9IGFueT4oc3FsOiBzdHJpbmcsIHBhcmFtcz86IGFueVtdKTogUHJvbWlzZTxUPiB7XG4gICAgbGV0IGNvbm5lY3Rpb247XG4gICAgdHJ5IHtcbiAgICAgIGNvbm5lY3Rpb24gPSBhd2FpdCBwb29sLmdldENvbm5lY3Rpb24oKTtcbiAgICAgIGNvbnN0IFtyb3dzXSA9IGF3YWl0IGNvbm5lY3Rpb24uZXhlY3V0ZShzcWwsIHBhcmFtcyk7XG4gICAgICByZXR1cm4gcm93cyBhcyBUO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdEYXRhYmFzZSBxdWVyeSBlcnJvcjonLCBlcnJvcik7XG4gICAgICB0aHJvdyBlcnJvcjtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgaWYgKGNvbm5lY3Rpb24pIHtcbiAgICAgICAgY29ubmVjdGlvbi5yZWxlYXNlKCk7XG4gICAgICB9XG4gICAgfVxuICB9LFxuXG4gIGFzeW5jIHRyYW5zYWN0aW9uPFQ+KGNhbGxiYWNrOiAoY29ubmVjdGlvbjogbXlzcWwuQ29ubmVjdGlvbikgPT4gUHJvbWlzZTxUPik6IFByb21pc2U8VD4ge1xuICAgIGNvbnN0IGNvbm5lY3Rpb24gPSBhd2FpdCBwb29sLmdldENvbm5lY3Rpb24oKTtcbiAgICB0cnkge1xuICAgICAgYXdhaXQgY29ubmVjdGlvbi5iZWdpblRyYW5zYWN0aW9uKCk7XG4gICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBjYWxsYmFjayhjb25uZWN0aW9uKTtcbiAgICAgIGF3YWl0IGNvbm5lY3Rpb24uY29tbWl0KCk7XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBhd2FpdCBjb25uZWN0aW9uLnJvbGxiYWNrKCk7XG4gICAgICB0aHJvdyBlcnJvcjtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgY29ubmVjdGlvbi5yZWxlYXNlKCk7XG4gICAgfVxuICB9LFxuXG4gIGFzeW5jIHRlc3RDb25uZWN0aW9uKCkge1xuICAgIGxldCBjb25uZWN0aW9uO1xuICAgIHRyeSB7XG4gICAgICBjb25uZWN0aW9uID0gYXdhaXQgcG9vbC5nZXRDb25uZWN0aW9uKCk7XG4gICAgICBjb25zdCBbcmVzdWx0XSA9IGF3YWl0IGNvbm5lY3Rpb24ucXVlcnkoJ1NFTEVDVCBOT1coKSBhcyBgY3VycmVudF90aW1lYCwgVkVSU0lPTigpIGFzIG15c3FsX3ZlcnNpb24nKTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgIGRhdGE6IHJlc3VsdFswXVxuICAgICAgfTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRGF0YWJhc2UgY29ubmVjdGlvbiB0ZXN0IGZhaWxlZDonLCBlcnJvcik7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgZXJyb3I6IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogJ1Vua25vd24gZXJyb3InXG4gICAgICB9O1xuICAgIH0gZmluYWxseSB7XG4gICAgICBpZiAoY29ubmVjdGlvbikge1xuICAgICAgICBjb25uZWN0aW9uLnJlbGVhc2UoKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn07ICJdLCJuYW1lcyI6WyJwb29sIiwiZGF0YWJhc2VTZXJ2aWNlIiwicXVlcnkiLCJzcWwiLCJwYXJhbXMiLCJjb25uZWN0aW9uIiwiZ2V0Q29ubmVjdGlvbiIsInJvd3MiLCJleGVjdXRlIiwiZXJyb3IiLCJjb25zb2xlIiwicmVsZWFzZSIsInRyYW5zYWN0aW9uIiwiY2FsbGJhY2siLCJiZWdpblRyYW5zYWN0aW9uIiwicmVzdWx0IiwiY29tbWl0Iiwicm9sbGJhY2siLCJ0ZXN0Q29ubmVjdGlvbiIsInN1Y2Nlc3MiLCJkYXRhIiwiRXJyb3IiLCJtZXNzYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./lib/services/databaseService.ts\n");

/***/ }),

/***/ "(rsc)/./lib/services/emailService.ts":
/*!**************************************!*\
  !*** ./lib/services/emailService.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   emailService: () => (/* binding */ emailService)\n/* harmony export */ });\n/* harmony import */ var nodemailer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nodemailer */ \"(rsc)/../../node_modules/nodemailer/lib/nodemailer.js\");\n/* harmony import */ var _databaseService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./databaseService */ \"(rsc)/./lib/services/databaseService.ts\");\n\n\nclass EmailService {\n    constructor(){\n        this.settings = null;\n        this.transporter = null;\n    }\n    static getInstance() {\n        if (!EmailService.instance) {\n            EmailService.instance = new EmailService();\n        }\n        return EmailService.instance;\n    }\n    async loadSettings() {\n        if (this.settings) return;\n        const settings = await _databaseService__WEBPACK_IMPORTED_MODULE_1__.databaseService.query(\"SELECT * FROM email_settings WHERE is_active = true ORDER BY id DESC LIMIT 1\");\n        if (!Array.isArray(settings) || settings.length === 0) {\n            throw new Error(\"No active email settings found\");\n        }\n        const emailSettings = settings[0];\n        this.settings = emailSettings;\n        if (emailSettings.use_ssl) {\n            this.transporter = nodemailer__WEBPACK_IMPORTED_MODULE_0__.createTransport({\n                host: emailSettings.smtp_host,\n                port: emailSettings.smtp_port,\n                secure: true,\n                auth: {\n                    user: emailSettings.smtp_username,\n                    pass: emailSettings.smtp_password\n                },\n                tls: {\n                    rejectUnauthorized: true,\n                    ciphers: \"SSLv3\"\n                }\n            });\n        } else if (emailSettings.use_tls) {\n            this.transporter = nodemailer__WEBPACK_IMPORTED_MODULE_0__.createTransport({\n                host: emailSettings.smtp_host,\n                port: emailSettings.smtp_port,\n                secure: false,\n                auth: {\n                    user: emailSettings.smtp_username,\n                    pass: emailSettings.smtp_password\n                },\n                tls: {\n                    rejectUnauthorized: true,\n                    ciphers: \"SSLv3\"\n                }\n            });\n        } else {\n            // Unencrypted connection (not recommended)\n            this.transporter = nodemailer__WEBPACK_IMPORTED_MODULE_0__.createTransport({\n                host: emailSettings.smtp_host,\n                port: emailSettings.smtp_port,\n                secure: false,\n                auth: {\n                    user: emailSettings.smtp_username,\n                    pass: emailSettings.smtp_password\n                }\n            });\n        }\n    }\n    async sendEmail(options) {\n        try {\n            await this.loadSettings();\n            if (!this.transporter || !this.settings) {\n                throw new Error(\"Email service not properly initialized\");\n            }\n            const mailOptions = {\n                from: `\"${this.settings.from_name}\" <${this.settings.from_email}>`,\n                to: Array.isArray(options.to) ? options.to.join(\", \") : options.to,\n                subject: options.subject,\n                text: options.text,\n                html: options.html\n            };\n            const info = await this.transporter.sendMail(mailOptions);\n            return info;\n        } catch (error) {\n            console.error(\"Error sending email:\", error);\n            throw error;\n        }\n    }\n    async sendVerificationEmail(to, token) {\n        const verificationUrl = `${process.env.NEXT_PUBLIC_APP_URL}/verify-email?token=${token}`;\n        await this.sendEmail({\n            to,\n            subject: \"Verify Your Email Address\",\n            html: `\r\n        <h1>Welcome to Crumbled!</h1>\r\n        <p>Please verify your email address by clicking the link below:</p>\r\n        <p>\r\n          <a href=\"${verificationUrl}\" style=\"\r\n            display: inline-block;\r\n            padding: 12px 24px;\r\n            background-color: #ec4899;\r\n            color: white;\r\n            text-decoration: none;\r\n            border-radius: 6px;\r\n            font-weight: 500;\r\n          \">\r\n            Verify Email Address\r\n          </a>\r\n        </p>\r\n        <p>If you did not create an account, you can safely ignore this email.</p>\r\n        <hr>\r\n        <p><small>This is an automated message, please do not reply.</small></p>\r\n      `\n        });\n    }\n    async sendPasswordResetEmail(to, token) {\n        const resetUrl = `${process.env.NEXT_PUBLIC_APP_URL}/reset-password?token=${token}`;\n        await this.sendEmail({\n            to,\n            subject: \"Reset Your Password\",\n            html: `\r\n        <h1>Password Reset Request</h1>\r\n        <p>You requested to reset your password. Click the link below to proceed:</p>\r\n        <p>\r\n          <a href=\"${resetUrl}\" style=\"\r\n            display: inline-block;\r\n            padding: 12px 24px;\r\n            background-color: #ec4899;\r\n            color: white;\r\n            text-decoration: none;\r\n            border-radius: 6px;\r\n            font-weight: 500;\r\n          \">\r\n            Reset Password\r\n          </a>\r\n        </p>\r\n        <p>If you did not request a password reset, you can safely ignore this email.</p>\r\n        <hr>\r\n        <p><small>This is an automated message, please do not reply.</small></p>\r\n      `\n        });\n    }\n    async sendOrderConfirmationEmail(to, orderId, orderDetails) {\n        const logoUrl = `${process.env.NEXT_PUBLIC_APP_URL || \"http://localhost:3001\"}/logo-with-background.jpg`;\n        await this.sendEmail({\n            to,\n            subject: `Order Confirmation - Order #${orderId}`,\n            html: `\r\n        <!DOCTYPE html>\r\n        <html lang=\"en\">\r\n        <head>\r\n          <meta charset=\"UTF-8\">\r\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n          <title>Order Confirmation</title>\r\n          <style>\r\n            body { \r\n              font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; \r\n              line-height: 1.6; \r\n              color: #333; \r\n              margin: 0; \r\n              padding: 0; \r\n              background-color: #fdf2f8;\r\n            }\r\n            .container { \r\n              max-width: 600px; \r\n              margin: 0 auto; \r\n              background: white; \r\n              border-radius: 12px; \r\n              overflow: hidden; \r\n              box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n            }\r\n            .header { \r\n              background: linear-gradient(135deg, #ec4899 0%, #be185d 100%); \r\n              padding: 30px; \r\n              text-align: center; \r\n              color: white;\r\n            }\r\n            .logo { \r\n              max-width: 200px; \r\n              height: auto; \r\n              margin-bottom: 20px;\r\n            }\r\n            .content { \r\n              padding: 40px 30px; \r\n            }\r\n            .order-number { \r\n              background: #fdf2f8; \r\n              padding: 20px; \r\n              border-radius: 8px; \r\n              text-align: center; \r\n              margin-bottom: 30px;\r\n              border-left: 4px solid #ec4899;\r\n            }\r\n            .order-number h2 { \r\n              margin: 0; \r\n              color: #ec4899; \r\n              font-size: 24px;\r\n            }\r\n            .order-number p { \r\n              margin: 5px 0 0 0; \r\n              color: #666; \r\n              font-size: 14px;\r\n            }\r\n            .section { \r\n              margin-bottom: 30px; \r\n            }\r\n            .section h3 { \r\n              color: #ec4899; \r\n              border-bottom: 2px solid #fdf2f8; \r\n              padding-bottom: 10px; \r\n              margin-bottom: 20px;\r\n            }\r\n            .item { \r\n              display: flex; \r\n              justify-content: space-between; \r\n              align-items: center; \r\n              padding: 15px 0; \r\n              border-bottom: 1px solid #f3f4f6;\r\n            }\r\n            .item:last-child { \r\n              border-bottom: none; \r\n            }\r\n            .item-details { \r\n              flex: 1; \r\n            }\r\n            .item-name { \r\n              font-weight: 600; \r\n              color: #1f2937; \r\n              margin-bottom: 5px;\r\n            }\r\n            .item-description { \r\n              color: #6b7280; \r\n              font-size: 14px; \r\n              margin-bottom: 5px;\r\n            }\r\n            .item-price { \r\n              font-weight: 600; \r\n              color: #ec4899; \r\n              text-align: right;\r\n            }\r\n            .totals { \r\n              background: #fdf2f8; \r\n              padding: 20px; \r\n              border-radius: 8px; \r\n              margin-top: 20px;\r\n            }\r\n            .total-row { \r\n              display: flex; \r\n              justify-content: space-between; \r\n              margin-bottom: 10px; \r\n            }\r\n            .total-row:last-child { \r\n              margin-bottom: 0; \r\n              padding-top: 10px; \r\n              border-top: 1px solid #e5e7eb; \r\n              font-weight: 600; \r\n              font-size: 18px; \r\n              color: #ec4899;\r\n            }\r\n            .delivery-info { \r\n              background: #f0f9ff; \r\n              padding: 20px; \r\n              border-radius: 8px; \r\n              border-left: 4px solid #0ea5e9;\r\n            }\r\n            .delivery-info h4 { \r\n              margin: 0 0 10px 0; \r\n              color: #0ea5e9; \r\n            }\r\n            .delivery-info p { \r\n              margin: 5px 0; \r\n              color: #374151;\r\n            }\r\n            .footer { \r\n              background: #f9fafb; \r\n              padding: 30px; \r\n              text-align: center; \r\n              color: #6b7280;\r\n            }\r\n            .footer a { \r\n              color: #ec4899; \r\n              text-decoration: none;\r\n            }\r\n            .status-badge { \r\n              display: inline-block; \r\n              padding: 4px 12px; \r\n              border-radius: 20px; \r\n              font-size: 12px; \r\n              font-weight: 600; \r\n              text-transform: uppercase;\r\n            }\r\n            .status-confirmed { \r\n              background: #dcfce7; \r\n              color: #166534;\r\n            }\r\n            .status-pending { \r\n              background: #fef3c7; \r\n              color: #92400e;\r\n            }\r\n            .payment-method { \r\n              display: inline-block; \r\n              padding: 4px 12px; \r\n              border-radius: 20px; \r\n              font-size: 12px; \r\n              font-weight: 600; \r\n              text-transform: uppercase;\r\n            }\r\n            .payment-cod { \r\n              background: #fef3c7; \r\n              color: #92400e;\r\n            }\r\n            .payment-paymob { \r\n              background: #dcfce7; \r\n              color: #166534;\r\n            }\r\n          </style>\r\n        </head>\r\n        <body>\r\n          <div class=\"container\">\r\n            <div class=\"header\">\r\n              <img src=\"${logoUrl}\" alt=\"Crumbled Logo\" class=\"logo\">\r\n              <h1 style=\"margin: 0; font-size: 28px;\">Thank You for Your Order!</h1>\r\n              <p style=\"margin: 10px 0 0 0; opacity: 0.9;\">Your order has been received and is being processed</p>\r\n            </div>\r\n            \r\n            <div class=\"content\">\r\n              <div class=\"order-number\">\r\n                <h2>Order #${orderId}</h2>\r\n                <p>Placed on ${new Date().toLocaleDateString(\"en-US\", {\n                year: \"numeric\",\n                month: \"long\",\n                day: \"numeric\",\n                hour: \"2-digit\",\n                minute: \"2-digit\"\n            })}</p>\r\n                <span class=\"status-badge status-${orderDetails.status === \"confirmed\" ? \"confirmed\" : \"pending\"}\">\r\n                  ${orderDetails.status}\r\n                </span>\r\n                <span class=\"payment-method payment-${orderDetails.paymentMethod === \"cod\" ? \"cod\" : \"paymob\"}\">\r\n                  ${orderDetails.paymentMethod === \"cod\" ? \"Cash on Delivery\" : \"Online Payment\"}\r\n                </span>\r\n              </div>\r\n\r\n              <div class=\"section\">\r\n                <h3>Order Items</h3>\r\n                ${orderDetails.items.map((item)=>`\r\n                  <div class=\"item\">\r\n                    <div class=\"item-details\">\r\n                      <div class=\"item-name\">${item.name}</div>\r\n                      ${item.flavorDetails ? `<div class=\"item-description\">${item.flavorDetails}</div>` : \"\"}\r\n                      <div class=\"item-description\">Quantity: ${item.quantity}</div>\r\n                    </div>\r\n                    <div class=\"item-price\">${Number(item.total).toFixed(2)} EGP</div>\r\n                  </div>\r\n                `).join(\"\")}\r\n              </div>\r\n\r\n              <div class=\"totals\">\r\n                <div class=\"total-row\">\r\n                  <span>Subtotal:</span>\r\n                  <span>${Number(orderDetails.subtotal).toFixed(2)} EGP</span>\r\n                </div>\r\n                <div class=\"total-row\">\r\n                  <span>Delivery Fee:</span>\r\n                  <span>${Number(orderDetails.deliveryFee).toFixed(2)} EGP</span>\r\n                </div>\r\n                <div class=\"total-row\">\r\n                  <span>Total:</span>\r\n                  <span>${Number(orderDetails.total).toFixed(2)} EGP</span>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"section\">\r\n                <h3>Delivery Information</h3>\r\n                <div class=\"delivery-info\">\r\n                  <h4>${orderDetails.customerInfo.name}</h4>\r\n                  <p><strong>Address:</strong> ${orderDetails.deliveryAddress.street_address}</p>\r\n                  ${orderDetails.deliveryAddress.additional_info ? `<p><strong>Additional Info:</strong> ${orderDetails.deliveryAddress.additional_info}</p>` : \"\"}\r\n                  <p><strong>Location:</strong> ${orderDetails.deliveryAddress.city_name}, ${orderDetails.deliveryAddress.zone_name}</p>\r\n                  <p><strong>Phone:</strong> ${orderDetails.customerInfo.phone}</p>\r\n                  <p><strong>Email:</strong> ${orderDetails.customerInfo.email}</p>\r\n                  <p><strong>Delivery Fee:</strong> ${Number(orderDetails.deliveryFee).toFixed(2)} EGP</p>\r\n                  ${orderDetails.deliveryRules ? `\r\n                    <div style=\"margin-top: 15px; padding-top: 15px; border-top: 1px solid #e5e7eb;\">\r\n                      <h5 style=\"margin: 0 0 10px 0; color: #0ea5e9;\">Delivery Details</h5>\r\n                      <p><strong>Delivery Time:</strong> ${orderDetails.deliveryRules.formattedDeliveryDate ? `Expected delivery on ${orderDetails.deliveryRules.formattedDeliveryDate}` : orderDetails.deliveryRules.deliveryDays === 0 ? \"Same day\" : orderDetails.deliveryRules.deliveryDays === 1 ? \"Next day\" : `${orderDetails.deliveryRules.deliveryDays} days`}</p>\r\n                      ${orderDetails.deliveryRules.timeSlot ? `\r\n                        <p><strong>Time Slot:</strong> ${orderDetails.deliveryRules.timeSlot.name} (${orderDetails.deliveryRules.timeSlot.fromHour} - ${orderDetails.deliveryRules.timeSlot.toHour})</p>\r\n                      ` : \"\"}\r\n                    </div>\r\n                  ` : \"\"}\r\n                </div>\r\n              </div>\r\n\r\n              ${orderDetails.paymentMethod === \"cod\" ? `\r\n                <div class=\"section\">\r\n                  <h3>Payment Information</h3>\r\n                  <p>You have chosen <strong>Cash on Delivery</strong> as your payment method. Please have the exact amount ready when your order arrives.</p>\r\n                  <p><strong>Total Amount Due:</strong> ${Number(orderDetails.total).toFixed(2)} EGP</p>\r\n                </div>\r\n              ` : `\r\n                <div class=\"section\">\r\n                  <h3>Payment Information</h3>\r\n                  <p>Your payment has been processed successfully through our secure payment gateway.</p>\r\n                  <p><strong>Payment Status:</strong> <span class=\"status-badge status-confirmed\">Paid</span></p>\r\n                </div>\r\n              `}\r\n\r\n              <div class=\"section\">\r\n                <h3>Need to Cancel?</h3>\r\n                <p>If you need to cancel your order, please click the button below. Orders can only be cancelled within 30 minutes of placement.</p>\r\n                <div style=\"text-align: center; margin: 20px 0;\">\r\n                  <a href=\"${process.env.NEXT_PUBLIC_APP_URL || \"http://localhost:3001\"}/api/orders/${orderId}/cancel?email=${encodeURIComponent(orderDetails.customerInfo.email)}\" \r\n                     style=\"\r\n                       display: inline-block;\r\n                       padding: 12px 24px;\r\n                       background: #ef4444;\r\n                       color: white;\r\n                       text-decoration: none;\r\n                       border-radius: 8px;\r\n                       font-weight: 600;\r\n                       font-size: 14px;\r\n                       box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n                       transition: all 0.3s ease;\r\n                     \"\r\n                     onmouseover=\"this.style.transform='translateY(-1px)';this.style.boxShadow='0 4px 8px rgba(0,0,0,0.15)'\"\r\n                     onmouseout=\"this.style.transform='translateY(0)';this.style.boxShadow='0 2px 4px rgba(0,0,0,0.1)'\">\r\n                    ❌ Cancel Order\r\n                  </a>\r\n                </div>\r\n                <p style=\"font-size: 12px; color: #6b7280; text-align: center;\">\r\n                  <strong>Note:</strong> Cancellation is only available within 30 minutes of order placement.\r\n                </p>\r\n              </div>\r\n\r\n              <div class=\"section\">\r\n                <h3>What's Next?</h3>\r\n                <p>We'll notify you when your order is being prepared and when it's out for delivery. You can track your order status by clicking the button below or contacting our customer service.</p>\r\n                <div style=\"text-align: center; margin: 30px 0;\">\r\n                  <a href=\"${process.env.NEXT_PUBLIC_APP_URL || \"http://localhost:3001\"}/track-order?email=${encodeURIComponent(orderDetails.customerInfo.email)}&tracking=${orderId}\" \r\n                     style=\"\r\n                       display: inline-block;\r\n                       padding: 15px 30px;\r\n                       background: linear-gradient(135deg, #ec4899 0%, #be185d 100%);\r\n                       color: white;\r\n                       text-decoration: none;\r\n                       border-radius: 8px;\r\n                       font-weight: 600;\r\n                       font-size: 16px;\r\n                       box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n                       transition: all 0.3s ease;\r\n                     \"\r\n                     onmouseover=\"this.style.transform='translateY(-2px)';this.style.boxShadow='0 6px 12px rgba(0,0,0,0.15)'\"\r\n                     onmouseout=\"this.style.transform='translateY(0)';this.style.boxShadow='0 4px 6px rgba(0,0,0,0.1)'\">\r\n                    📦 Track My Order\r\n                  </a>\r\n                </div>\r\n                <p>If you have any questions about your order, please don't hesitate to contact us.</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"footer\">\r\n              <p>Thank you for choosing Crumbled!</p>\r\n              <p>For support, contact us at <a href=\"mailto:support@crumbled.com\">support@crumbled.com</a></p>\r\n              <p style=\"font-size: 12px; margin-top: 20px;\">\r\n                This is an automated message, please do not reply to this email.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </body>\r\n        </html>\r\n      `\n        });\n    }\n}\nconst emailService = EmailService.getInstance();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/services/emailService.ts\n");

/***/ }),

/***/ "(rsc)/./lib/services/paymobService.ts":
/*!***************************************!*\
  !*** ./lib/services/paymobService.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   paymobService: () => (/* binding */ paymobService)\n/* harmony export */ });\nclass PaymobService {\n    constructor(){\n        this.config = {\n            apiKey: process.env.PAYMOB_API_KEY || \"\",\n            integrationId: parseInt(process.env.PAYMOB_INTEGRATION_ID || \"0\"),\n            iframeId: process.env.PAYMOB_IFRAME_ID ? parseInt(process.env.PAYMOB_IFRAME_ID) : undefined,\n            baseUrl: process.env.PAYMOB_BASE_URL || \"https://accept.paymob.com/api\"\n        };\n    }\n    async getAuthToken() {\n        try {\n            const response = await fetch(`${this.config.baseUrl}/auth/tokens`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    api_key: this.config.apiKey\n                })\n            });\n            if (!response.ok) {\n                throw new Error(`Paymob auth failed: ${response.statusText}`);\n            }\n            const data = await response.json();\n            return data.token;\n        } catch (error) {\n            console.error(\"Paymob auth error:\", error);\n            throw new Error(\"Failed to authenticate with Paymob\");\n        }\n    }\n    async createOrder(orderData) {\n        try {\n            const authToken = await this.getAuthToken();\n            const orderRequest = {\n                auth_token: authToken,\n                delivery_needed: orderData.delivery_needed || false,\n                amount_cents: Math.round(orderData.amount * 100),\n                currency: \"EGP\",\n                items: orderData.items.map((item)=>({\n                        ...item,\n                        amount_cents: Math.round(item.amount * 100)\n                    }))\n            };\n            const response = await fetch(`${this.config.baseUrl}/ecommerce/orders`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(orderRequest)\n            });\n            if (!response.ok) {\n                throw new Error(`Paymob order creation failed: ${response.statusText}`);\n            }\n            const data = await response.json();\n            return data;\n        } catch (error) {\n            console.error(\"Paymob order creation error:\", error);\n            throw new Error(\"Failed to create Paymob order\");\n        }\n    }\n    async generatePaymentKey(orderData) {\n        try {\n            const authToken = await this.getAuthToken();\n            const callbackUrl = `${process.env.NEXT_PUBLIC_APP_URL}/payment/callback`;\n            const paymentKeyRequest = {\n                auth_token: authToken,\n                amount_cents: Math.round(orderData.amount * 100),\n                expiration: 3600,\n                order_id: orderData.orderId,\n                billing_data: {\n                    apartment: orderData.billingData.apartment || \"NA\",\n                    email: orderData.billingData.email,\n                    floor: orderData.billingData.floor || \"NA\",\n                    first_name: orderData.billingData.first_name,\n                    street: orderData.billingData.street,\n                    building: orderData.billingData.building || \"NA\",\n                    phone_number: orderData.billingData.phone_number,\n                    shipping_method: \"NA\",\n                    postal_code: orderData.billingData.postal_code || \"NA\",\n                    city: orderData.billingData.city,\n                    country: orderData.billingData.country,\n                    last_name: orderData.billingData.last_name,\n                    state: orderData.billingData.state || \"NA\"\n                },\n                currency: \"EGP\",\n                integration_id: this.config.integrationId,\n                lock_order_when_paid: true\n            };\n            const response = await fetch(`${this.config.baseUrl}/acceptance/payment_keys`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(paymentKeyRequest)\n            });\n            if (!response.ok) {\n                throw new Error(`Paymob payment key generation failed: ${response.statusText}`);\n            }\n            const data = await response.json();\n            return data;\n        } catch (error) {\n            console.error(\"Paymob payment key error:\", error);\n            throw new Error(\"Failed to generate Paymob payment key\");\n        }\n    }\n    getPaymentUrl(paymentKey) {\n        // For redirect flow, use the direct payment URL\n        // If iframe ID is provided, use iframe URL, otherwise use redirect URL\n        if (this.config.iframeId) {\n            return `https://accept.paymob.com/api/acceptance/iframes/${this.config.iframeId}?payment_token=${paymentKey}`;\n        } else {\n            // Redirect flow - direct payment URL\n            return `https://accept.paymob.com/api/acceptance/payments/pay?payment_token=${paymentKey}`;\n        }\n    }\n    async verifyTransaction(transactionId) {\n        try {\n            const authToken = await this.getAuthToken();\n            const response = await fetch(`${this.config.baseUrl}/acceptance/transactions/${transactionId}`, {\n                method: \"GET\",\n                headers: {\n                    \"Authorization\": `Bearer ${authToken}`,\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            if (!response.ok) {\n                throw new Error(`Paymob transaction verification failed: ${response.statusText}`);\n            }\n            const data = await response.json();\n            return data;\n        } catch (error) {\n            console.error(\"Paymob transaction verification error:\", error);\n            throw new Error(\"Failed to verify Paymob transaction\");\n        }\n    }\n}\nconst paymobService = new PaymobService();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/services/paymobService.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/next-auth","vendor-chunks/@babel","vendor-chunks/mysql2","vendor-chunks/aws-ssl-profiles","vendor-chunks/iconv-lite","vendor-chunks/long","vendor-chunks/lru-cache","vendor-chunks/denque","vendor-chunks/is-property","vendor-chunks/lru.min","vendor-chunks/sqlstring","vendor-chunks/seq-queue","vendor-chunks/named-placeholders","vendor-chunks/generate-function","vendor-chunks/safer-buffer","vendor-chunks/openid-client","vendor-chunks/bcryptjs","vendor-chunks/oauth","vendor-chunks/object-hash","vendor-chunks/preact","vendor-chunks/preact-render-to-string","vendor-chunks/oidc-token-hash","vendor-chunks/@panva","vendor-chunks/uuid","vendor-chunks/nodemailer"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcheckout%2Fpayment%2Froute&page=%2Fapi%2Fcheckout%2Fpayment%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcheckout%2Fpayment%2Froute.ts&appDir=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();