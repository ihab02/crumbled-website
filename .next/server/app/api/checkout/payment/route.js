/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/checkout/payment/route";
exports.ids = ["app/api/checkout/payment/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/mysql2/lib sync recursive ^cardinal.*$":
/*!****************************************************!*\
  !*** ./node_modules/mysql2/lib/ sync ^cardinal.*$ ***!
  \****************************************************/
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => ([]);
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "(rsc)/./node_modules/mysql2/lib sync recursive ^cardinal.*$";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "./action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/client/components/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/action-async-storage.external.js");

/***/ }),

/***/ "./request-async-storage.external":
/*!********************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external.js" ***!
  \********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/request-async-storage.external.js");

/***/ }),

/***/ "./static-generation-async-storage.external":
/*!******************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external.js" ***!
  \******************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/static-generation-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = require("child_process");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "dns":
/*!**********************!*\
  !*** external "dns" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("dns");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "process":
/*!**************************!*\
  !*** external "process" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("process");

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("querystring");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "string_decoder":
/*!*********************************!*\
  !*** external "string_decoder" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("string_decoder");

/***/ }),

/***/ "timers":
/*!*************************!*\
  !*** external "timers" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("timers");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcheckout%2Fpayment%2Froute&page=%2Fapi%2Fcheckout%2Fpayment%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcheckout%2Fpayment%2Froute.ts&appDir=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcheckout%2Fpayment%2Froute&page=%2Fapi%2Fcheckout%2Fpayment%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcheckout%2Fpayment%2Froute.ts&appDir=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_ASUS_AngularWebApp_crumbled_website_app_api_checkout_payment_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/checkout/payment/route.ts */ \"(rsc)/./app/api/checkout/payment/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/checkout/payment/route\",\n        pathname: \"/api/checkout/payment\",\n        filename: \"route\",\n        bundlePath: \"app/api/checkout/payment/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\ASUS\\\\AngularWebApp\\\\crumbled-website\\\\app\\\\api\\\\checkout\\\\payment\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_ASUS_AngularWebApp_crumbled_website_app_api_checkout_payment_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/checkout/payment/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZjaGVja291dCUyRnBheW1lbnQlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmNoZWNrb3V0JTJGcGF5bWVudCUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmNoZWNrb3V0JTJGcGF5bWVudCUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNBU1VTJTVDQW5ndWxhcldlYkFwcCU1Q2NydW1ibGVkLXdlYnNpdGUlNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUMlM0ElNUNVc2VycyU1Q0FTVVMlNUNBbmd1bGFyV2ViQXBwJTVDY3J1bWJsZWQtd2Vic2l0ZSZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDdUM7QUFDcEg7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jcnVtYmxlZC13ZWJzaXRlLz8wYTBhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIkM6XFxcXFVzZXJzXFxcXEFTVVNcXFxcQW5ndWxhcldlYkFwcFxcXFxjcnVtYmxlZC13ZWJzaXRlXFxcXGFwcFxcXFxhcGlcXFxcY2hlY2tvdXRcXFxccGF5bWVudFxcXFxyb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvY2hlY2tvdXQvcGF5bWVudC9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2NoZWNrb3V0L3BheW1lbnRcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL2NoZWNrb3V0L3BheW1lbnQvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJDOlxcXFxVc2Vyc1xcXFxBU1VTXFxcXEFuZ3VsYXJXZWJBcHBcXFxcY3J1bWJsZWQtd2Vic2l0ZVxcXFxhcHBcXFxcYXBpXFxcXGNoZWNrb3V0XFxcXHBheW1lbnRcXFxccm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL2NoZWNrb3V0L3BheW1lbnQvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcheckout%2Fpayment%2Froute&page=%2Fapi%2Fcheckout%2Fpayment%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcheckout%2Fpayment%2Froute.ts&appDir=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/checkout/payment/route.ts":
/*!*******************************************!*\
  !*** ./app/api/checkout/payment/route.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth */ \"(rsc)/../../node_modules/next-auth/index.js\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_auth__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/headers */ \"(rsc)/./node_modules/next/dist/api/headers.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uuid */ \"(rsc)/../../node_modules/uuid/dist/esm-node/v4.js\");\n/* harmony import */ var _lib_auth_options__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/auth-options */ \"(rsc)/./lib/auth-options.ts\");\n/* harmony import */ var _lib_services_databaseService__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/services/databaseService */ \"(rsc)/./lib/services/databaseService.ts\");\n/* harmony import */ var _lib_services_paymobService__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/services/paymobService */ \"(rsc)/./lib/services/paymobService.ts\");\n/* harmony import */ var _lib_services_emailService__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/lib/services/emailService */ \"(rsc)/./lib/services/emailService.ts\");\n\n\n\n\n\n\n\n\n// Helper function to get or create cart (same as cart API)\nasync function getOrCreateCart() {\n    const cookieStore = (0,next_headers__WEBPACK_IMPORTED_MODULE_2__.cookies)();\n    let cartId = cookieStore.get(\"cart_id\")?.value;\n    if (!cartId) {\n        const sessionId = (0,uuid__WEBPACK_IMPORTED_MODULE_7__[\"default\"])();\n        const result = await _lib_services_databaseService__WEBPACK_IMPORTED_MODULE_4__.databaseService.query('INSERT INTO carts (session_id, status, created_at) VALUES (?, \"active\", NOW())', [\n            sessionId\n        ]);\n        cartId = result.insertId.toString();\n        setCartCookie(cartId);\n        console.log(\"Created new cart:\", cartId);\n    } else {\n        const cartExists = await _lib_services_databaseService__WEBPACK_IMPORTED_MODULE_4__.databaseService.query('SELECT * FROM carts WHERE id = ? AND status = \"active\"', [\n            cartId\n        ]);\n        if (!Array.isArray(cartExists) || cartExists.length === 0) {\n            const sessionId = (0,uuid__WEBPACK_IMPORTED_MODULE_7__[\"default\"])();\n            const result = await _lib_services_databaseService__WEBPACK_IMPORTED_MODULE_4__.databaseService.query('INSERT INTO carts (session_id, status, created_at) VALUES (?, \"active\", NOW())', [\n                sessionId\n            ]);\n            cartId = result.insertId.toString();\n            setCartCookie(cartId);\n            console.log(\"Created new cart (old one invalid):\", cartId);\n        }\n    }\n    return cartId;\n}\nfunction setCartCookie(cartId) {\n    const cookieStore = (0,next_headers__WEBPACK_IMPORTED_MODULE_2__.cookies)();\n    cookieStore.set(\"cart_id\", cartId, {\n        httpOnly: true,\n        secure: \"development\" === \"production\",\n        sameSite: \"strict\",\n        maxAge: 7 * 24 * 60 * 60\n    });\n}\n// Real Paymob integration\nconst generatePaymobPayment = async (orderData, customerInfo, orderId)=>{\n    try {\n        console.log(\"\\uD83D\\uDD0D [DEBUG] generatePaymobPayment - Starting Paymob payment generation\");\n        console.log(\"\\uD83D\\uDD0D [DEBUG] generatePaymobPayment - Order Data:\", orderData);\n        console.log(\"\\uD83D\\uDD0D [DEBUG] generatePaymobPayment - Customer Info:\", customerInfo);\n        console.log(\"\\uD83D\\uDD0D [DEBUG] generatePaymobPayment - Order ID:\", orderId);\n        // Create Paymob order\n        console.log(\"\\uD83D\\uDD0D [DEBUG] generatePaymobPayment - Creating Paymob order\");\n        const paymobOrder = await _lib_services_paymobService__WEBPACK_IMPORTED_MODULE_5__.paymobService.createOrder({\n            amount: orderData.cart.total,\n            items: orderData.cart.items.map((item)=>({\n                    name: item.name,\n                    amount: item.total,\n                    description: item.flavorDetails || item.name,\n                    quantity: item.quantity\n                })),\n            delivery_needed: true\n        });\n        console.log(\"\\uD83D\\uDD0D [DEBUG] generatePaymobPayment - Paymob order created:\", paymobOrder.id);\n        // Generate payment key\n        console.log(\"\\uD83D\\uDD0D [DEBUG] generatePaymobPayment - Generating payment key\");\n        const paymentKey = await _lib_services_paymobService__WEBPACK_IMPORTED_MODULE_5__.paymobService.generatePaymentKey({\n            orderId: paymobOrder.id,\n            amount: orderData.cart.total,\n            billingData: {\n                first_name: customerInfo.name.split(\" \")[0] || customerInfo.name,\n                last_name: customerInfo.name.split(\" \").slice(1).join(\" \") || customerInfo.name,\n                email: customerInfo.email,\n                phone_number: customerInfo.phone,\n                street: orderData.deliveryAddress.street_address,\n                city: orderData.deliveryAddress.city_name,\n                country: \"Egypt\",\n                apartment: orderData.deliveryAddress.additional_info || \"NA\",\n                building: \"NA\",\n                floor: \"NA\",\n                postal_code: \"NA\",\n                state: \"NA\"\n            }\n        });\n        console.log(\"\\uD83D\\uDD0D [DEBUG] generatePaymobPayment - Payment key generated:\", paymentKey.token);\n        // Get payment URL with order ID in the URL parameters\n        const paymentUrl = `${_lib_services_paymobService__WEBPACK_IMPORTED_MODULE_5__.paymobService.getPaymentUrl(paymentKey.token)}&order_id=${orderId}`;\n        console.log(\"\\uD83D\\uDD0D [DEBUG] generatePaymobPayment - Payment URL generated:\", paymentUrl);\n        return {\n            paymentToken: paymentKey.token,\n            paymentUrl,\n            paymobOrderId: paymobOrder.id\n        };\n    } catch (error) {\n        console.error(\"❌ [DEBUG] generatePaymobPayment - Error:\", error);\n        throw new Error(\"Failed to generate Paymob payment\");\n    }\n};\nasync function POST(request) {\n    try {\n        console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API called\");\n        const session = await (0,next_auth__WEBPACK_IMPORTED_MODULE_1__.getServerSession)(_lib_auth_options__WEBPACK_IMPORTED_MODULE_3__.authOptions);\n        const { paymentMethod, orderData } = await request.json();\n        const cartId = await getOrCreateCart();\n        console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Session:\", session?.user?.email);\n        console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Payment Method:\", paymentMethod);\n        console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Cart ID:\", cartId);\n        console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Order Data:\", orderData);\n        // Validate request\n        if (!cartId || !paymentMethod || !orderData) {\n            console.error(\"❌ [DEBUG] Payment API - Missing required fields\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                message: \"Missing required fields\",\n                error: \"Cart not found, payment method, and order data are required\"\n            }, {\n                status: 400\n            });\n        }\n        // Validate payment method\n        if (![\n            \"cod\",\n            \"paymob\"\n        ].includes(paymentMethod)) {\n            console.error(\"❌ [DEBUG] Payment API - Invalid payment method:\", paymentMethod);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                message: \"Invalid payment method\",\n                error: 'Payment method must be either \"cod\" or \"paymob\"'\n            }, {\n                status: 400\n            });\n        }\n        console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Starting database transaction\");\n        // Start database transaction\n        const result = await _lib_services_databaseService__WEBPACK_IMPORTED_MODULE_4__.databaseService.transaction(async (connection)=>{\n            // Create order\n            const orderStatus = paymentMethod === \"cod\" ? \"Pending\" : \"Unpaid\";\n            const paymentStatus = paymentMethod === \"cod\" ? \"Pending\" : \"Unpaid\";\n            let customerId = null;\n            if (session?.user) {\n                // Authenticated user - handle as before\n                console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Processing authenticated user\");\n                console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - User email:\", session.user.email);\n                // First try to find customer in the customer table (for orders foreign key)\n                const customerResult = await connection.query(\"SELECT id FROM customer WHERE email = ?\", [\n                    session.user.email\n                ]);\n                console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Customer lookup result:\", customerResult);\n                if (Array.isArray(customerResult) && customerResult.length > 0) {\n                    customerId = customerResult[0].id;\n                    console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Found existing customer with ID:\", customerId);\n                } else {\n                    console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Customer not found in customer table, checking customers table\");\n                    // Customer not found in customer table, get from customers table and create in customer table\n                    const customersResult = await connection.query(\"SELECT first_name, last_name, email, phone FROM customers WHERE email = ?\", [\n                        session.user.email\n                    ]);\n                    console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Customers table lookup result:\", customersResult);\n                    if (Array.isArray(customersResult) && customersResult.length > 0) {\n                        const customer = customersResult[0];\n                        console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Found customer in customers table:\", customer);\n                        // Create customer record in customer table\n                        const insertResult = await connection.query(\"INSERT INTO customer (name, email, mobile, type) VALUES (?, ?, ?, ?)\", [\n                            `${customer.first_name} ${customer.last_name}`,\n                            customer.email,\n                            customer.phone,\n                            \"registered\"\n                        ]);\n                        customerId = insertResult.insertId;\n                        console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Created customer record in customer table with ID:\", customerId);\n                    } else {\n                        console.error(\"❌ [DEBUG] Payment API - Customer not found in customers table either\");\n                    }\n                }\n            } else {\n                // Guest user - create customer record from guest data\n                console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Processing guest user\");\n                if (!orderData.customerInfo) {\n                    throw new Error(\"Customer information is required for guest checkout\");\n                }\n                console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Guest customer info:\", orderData.customerInfo);\n                // Create guest customer record in customer table\n                const insertResult = await connection.query(\"INSERT INTO customer (name, email, mobile, type) VALUES (?, ?, ?, ?)\", [\n                    orderData.customerInfo.name,\n                    orderData.customerInfo.email,\n                    orderData.customerInfo.phone,\n                    \"guest\"\n                ]);\n                customerId = insertResult.insertId;\n                console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Created guest customer record in customer table with ID:\", customerId);\n            }\n            if (!customerId) {\n                console.error(\"❌ [DEBUG] Payment API - No customer ID obtained, throwing error\");\n                throw new Error(\"Failed to create or find customer record\");\n            }\n            console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Final customer ID:\", customerId);\n            const orderResult = await connection.query(`INSERT INTO orders (\n          customer_id, \n          total, \n          status, \n          payment_method,\n          created_at\n        ) VALUES (?, ?, ?, ?, NOW())`, [\n                customerId,\n                Number(orderData.cart.total),\n                orderStatus,\n                paymentMethod === \"cod\" ? \"cash\" : \"card\"\n            ]);\n            const orderId = orderResult.insertId;\n            // Update stock for items (order items will be handled separately when we have proper schema)\n            for (const item of orderData.cart.items){\n                if (item.isPack) {\n                    // For packs, update flavor stock instead of product stock\n                    for (const flavor of item.flavors){\n                        const stockField = `stock_quantity_${flavor.size.toLowerCase()}`;\n                        await connection.query(`UPDATE flavors SET ${stockField} = ${stockField} - ? WHERE id = ?`, [\n                            flavor.quantity,\n                            flavor.id\n                        ]);\n                    }\n                } else {\n                    // For individual products, update product stock\n                    await connection.query(\"UPDATE products SET stock_quantity = stock_quantity - ? WHERE id = ?\", [\n                        item.quantity,\n                        item.id\n                    ]);\n                }\n            }\n            // Clear cart\n            await connection.query(\"DELETE FROM cart_items WHERE cart_id = ?\", [\n                cartId\n            ]);\n            return {\n                orderId\n            };\n        });\n        const { orderId } = result;\n        if (paymentMethod === \"cod\") {\n            // Cash on Delivery - order is complete\n            try {\n                // Send order confirmation email\n                await _lib_services_emailService__WEBPACK_IMPORTED_MODULE_6__.emailService.sendOrderConfirmationEmail(orderData.customerInfo.email, orderId.toString(), {\n                    items: orderData.cart.items,\n                    subtotal: orderData.cart.subtotal,\n                    deliveryFee: orderData.cart.deliveryFee,\n                    total: orderData.cart.total,\n                    status: \"Pending\",\n                    paymentMethod: \"cod\",\n                    customerInfo: orderData.customerInfo,\n                    deliveryAddress: orderData.deliveryAddress\n                });\n                console.log(\"✅ Order confirmation email sent for COD order\");\n            } catch (emailError) {\n                console.error(\"❌ Failed to send order confirmation email:\", emailError);\n            // Don't fail the order if email fails\n            }\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                message: \"Order placed successfully with Cash on Delivery\",\n                data: {\n                    orderId\n                }\n            });\n        } else {\n            // Paymob payment - generate payment URL\n            console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Generating Paymob payment\");\n            const { paymentToken, paymentUrl } = await generatePaymobPayment(orderData, orderData.customerInfo, orderId);\n            console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Paymob payment generated\");\n            console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Payment Token:\", paymentToken);\n            console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Payment URL:\", paymentUrl);\n            // Store payment token for webhook validation\n            await _lib_services_databaseService__WEBPACK_IMPORTED_MODULE_4__.databaseService.query(\"UPDATE orders SET payment_token = ? WHERE id = ?\", [\n                paymentToken,\n                orderId\n            ]);\n            console.log(\"\\uD83D\\uDD0D [DEBUG] Payment API - Payment token stored in database\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                message: \"Payment URL generated successfully\",\n                data: {\n                    orderId,\n                    paymentUrl,\n                    paymentToken\n                }\n            });\n        }\n    } catch (error) {\n        console.error(\"Error processing payment:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            message: \"Failed to process payment\",\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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UUMsR0FBRyxDQUFDLG1EQUF5Q3FEO1lBRXJELDZDQUE2QztZQUM3QyxNQUFNcEUsMEVBQWVBLENBQUNVLEtBQUssQ0FDekIsb0RBQ0E7Z0JBQUM0RDtnQkFBY3pDO2FBQVE7WUFHekJmLFFBQVFDLEdBQUcsQ0FBQztZQUVaLE9BQU9yQixxREFBWUEsQ0FBQ29GLElBQUksQ0FBQztnQkFDdkJFLFNBQVM7Z0JBQ1RDLFNBQVM7Z0JBQ1R3QixNQUFNO29CQUNKNUU7b0JBQ0F1QztvQkFDQUU7Z0JBQ0Y7WUFDRjtRQUNGO0lBRUYsRUFBRSxPQUFPRSxPQUFPO1FBQ2QxRCxRQUFRMEQsS0FBSyxDQUFDLDZCQUE2QkE7UUFDM0MsT0FBTzlFLHFEQUFZQSxDQUFDb0YsSUFBSSxDQUFDO1lBQ3ZCRSxTQUFTO1lBQ1RDLFNBQVM7WUFDVFQsT0FBTztRQUNULEdBQUc7WUFBRVUsUUFBUTtRQUFJO0lBQ25CO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jcnVtYmxlZC13ZWJzaXRlLy4vYXBwL2FwaS9jaGVja291dC9wYXltZW50L3JvdXRlLnRzPzFhNzEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJztcbmltcG9ydCB7IGdldFNlcnZlclNlc3Npb24gfSBmcm9tICduZXh0LWF1dGgnO1xuaW1wb3J0IHsgY29va2llcyB9IGZyb20gJ25leHQvaGVhZGVycyc7XG5pbXBvcnQgeyB2NCBhcyB1dWlkdjQgfSBmcm9tICd1dWlkJztcbmltcG9ydCB7IGF1dGhPcHRpb25zIH0gZnJvbSAnQC9saWIvYXV0aC1vcHRpb25zJztcbmltcG9ydCB7IGRhdGFiYXNlU2VydmljZSB9IGZyb20gJ0AvbGliL3NlcnZpY2VzL2RhdGFiYXNlU2VydmljZSc7XG5pbXBvcnQgeyBwYXltb2JTZXJ2aWNlIH0gZnJvbSAnQC9saWIvc2VydmljZXMvcGF5bW9iU2VydmljZSc7XG5pbXBvcnQgeyBlbWFpbFNlcnZpY2UgfSBmcm9tICdAL2xpYi9zZXJ2aWNlcy9lbWFpbFNlcnZpY2UnO1xuXG5pbnRlcmZhY2UgQ2hlY2tvdXRQYXltZW50UmVxdWVzdCB7XG4gIGNhcnRJZD86IHN0cmluZztcbiAgcGF5bWVudE1ldGhvZDogJ2NvZCcgfCAncGF5bW9iJztcbiAgb3JkZXJEYXRhOiB7XG4gICAgY2FydDoge1xuICAgICAgaXRlbXM6IEFycmF5PHtcbiAgICAgICAgaWQ6IG51bWJlcjtcbiAgICAgICAgbmFtZTogc3RyaW5nO1xuICAgICAgICBiYXNlUHJpY2U6IG51bWJlcjtcbiAgICAgICAgcXVhbnRpdHk6IG51bWJlcjtcbiAgICAgICAgaXNQYWNrOiBib29sZWFuO1xuICAgICAgICBwYWNrU2l6ZTogc3RyaW5nO1xuICAgICAgICBpbWFnZVVybDogc3RyaW5nO1xuICAgICAgICBjb3VudDogbnVtYmVyO1xuICAgICAgICBmbGF2b3JEZXRhaWxzOiBzdHJpbmc7XG4gICAgICAgIHRvdGFsOiBudW1iZXI7XG4gICAgICAgIGZsYXZvcnM6IEFycmF5PHtcbiAgICAgICAgICBpZDogbnVtYmVyO1xuICAgICAgICAgIG5hbWU6IHN0cmluZztcbiAgICAgICAgICBxdWFudGl0eTogbnVtYmVyO1xuICAgICAgICAgIHByaWNlOiBudW1iZXI7XG4gICAgICAgICAgc2l6ZTogc3RyaW5nO1xuICAgICAgICB9PjtcbiAgICAgIH0+O1xuICAgICAgc3VidG90YWw6IG51bWJlcjtcbiAgICAgIGRlbGl2ZXJ5RmVlOiBudW1iZXI7XG4gICAgICB0b3RhbDogbnVtYmVyO1xuICAgICAgaXRlbUNvdW50OiBudW1iZXI7XG4gICAgfTtcbiAgICBkZWxpdmVyeUFkZHJlc3M6IHtcbiAgICAgIHN0cmVldF9hZGRyZXNzOiBzdHJpbmc7XG4gICAgICBhZGRpdGlvbmFsX2luZm8/OiBzdHJpbmc7XG4gICAgICBjaXR5X25hbWU6IHN0cmluZztcbiAgICAgIHpvbmVfbmFtZTogc3RyaW5nO1xuICAgICAgZGVsaXZlcnlfZmVlOiBudW1iZXI7XG4gICAgfTtcbiAgICBjdXN0b21lckluZm86IHtcbiAgICAgIG5hbWU6IHN0cmluZztcbiAgICAgIGVtYWlsOiBzdHJpbmc7XG4gICAgICBwaG9uZTogc3RyaW5nO1xuICAgIH07XG4gIH07XG59XG5cbmludGVyZmFjZSBDaGVja291dFBheW1lbnRSZXNwb25zZSB7XG4gIHN1Y2Nlc3M6IGJvb2xlYW47XG4gIG1lc3NhZ2U6IHN0cmluZztcbiAgZGF0YT86IHtcbiAgICBvcmRlcklkPzogbnVtYmVyO1xuICAgIHBheW1lbnRVcmw/OiBzdHJpbmc7XG4gICAgcGF5bWVudFRva2VuPzogc3RyaW5nO1xuICB9O1xuICBlcnJvcj86IHN0cmluZztcbn1cblxuLy8gSGVscGVyIGZ1bmN0aW9uIHRvIGdldCBvciBjcmVhdGUgY2FydCAoc2FtZSBhcyBjYXJ0IEFQSSlcbmFzeW5jIGZ1bmN0aW9uIGdldE9yQ3JlYXRlQ2FydCgpOiBQcm9taXNlPHN0cmluZz4ge1xuICBjb25zdCBjb29raWVTdG9yZSA9IGNvb2tpZXMoKTtcbiAgbGV0IGNhcnRJZCA9IGNvb2tpZVN0b3JlLmdldCgnY2FydF9pZCcpPy52YWx1ZTtcblxuICBpZiAoIWNhcnRJZCkge1xuICAgIGNvbnN0IHNlc3Npb25JZCA9IHV1aWR2NCgpO1xuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGRhdGFiYXNlU2VydmljZS5xdWVyeTx7IGluc2VydElkOiBudW1iZXIgfT4oXG4gICAgICAnSU5TRVJUIElOVE8gY2FydHMgKHNlc3Npb25faWQsIHN0YXR1cywgY3JlYXRlZF9hdCkgVkFMVUVTICg/LCBcImFjdGl2ZVwiLCBOT1coKSknLFxuICAgICAgW3Nlc3Npb25JZF1cbiAgICApO1xuICAgIFxuICAgIGNhcnRJZCA9IHJlc3VsdC5pbnNlcnRJZC50b1N0cmluZygpO1xuICAgIHNldENhcnRDb29raWUoY2FydElkKTtcbiAgICBjb25zb2xlLmxvZygnQ3JlYXRlZCBuZXcgY2FydDonLCBjYXJ0SWQpO1xuICB9IGVsc2Uge1xuICAgIGNvbnN0IGNhcnRFeGlzdHMgPSBhd2FpdCBkYXRhYmFzZVNlcnZpY2UucXVlcnkoXG4gICAgICAnU0VMRUNUICogRlJPTSBjYXJ0cyBXSEVSRSBpZCA9ID8gQU5EIHN0YXR1cyA9IFwiYWN0aXZlXCInLFxuICAgICAgW2NhcnRJZF1cbiAgICApO1xuXG4gICAgaWYgKCFBcnJheS5pc0FycmF5KGNhcnRFeGlzdHMpIHx8IGNhcnRFeGlzdHMubGVuZ3RoID09PSAwKSB7XG4gICAgICBjb25zdCBzZXNzaW9uSWQgPSB1dWlkdjQoKTtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGRhdGFiYXNlU2VydmljZS5xdWVyeTx7IGluc2VydElkOiBudW1iZXIgfT4oXG4gICAgICAgICdJTlNFUlQgSU5UTyBjYXJ0cyAoc2Vzc2lvbl9pZCwgc3RhdHVzLCBjcmVhdGVkX2F0KSBWQUxVRVMgKD8sIFwiYWN0aXZlXCIsIE5PVygpKScsXG4gICAgICAgIFtzZXNzaW9uSWRdXG4gICAgICApO1xuICAgICAgXG4gICAgICBjYXJ0SWQgPSByZXN1bHQuaW5zZXJ0SWQudG9TdHJpbmcoKTtcbiAgICAgIHNldENhcnRDb29raWUoY2FydElkKTtcbiAgICAgIGNvbnNvbGUubG9nKCdDcmVhdGVkIG5ldyBjYXJ0IChvbGQgb25lIGludmFsaWQpOicsIGNhcnRJZCk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGNhcnRJZDtcbn1cblxuZnVuY3Rpb24gc2V0Q2FydENvb2tpZShjYXJ0SWQ6IHN0cmluZykge1xuICBjb25zdCBjb29raWVTdG9yZSA9IGNvb2tpZXMoKTtcbiAgY29va2llU3RvcmUuc2V0KCdjYXJ0X2lkJywgY2FydElkLCB7XG4gICAgaHR0cE9ubHk6IHRydWUsXG4gICAgc2VjdXJlOiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nLFxuICAgIHNhbWVTaXRlOiAnc3RyaWN0JyxcbiAgICBtYXhBZ2U6IDcgKiAyNCAqIDYwICogNjBcbiAgfSk7XG59XG5cbi8vIFJlYWwgUGF5bW9iIGludGVncmF0aW9uXG5jb25zdCBnZW5lcmF0ZVBheW1vYlBheW1lbnQgPSBhc3luYyAob3JkZXJEYXRhOiBhbnksIGN1c3RvbWVySW5mbzogYW55LCBvcmRlcklkOiBudW1iZXIpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zb2xlLmxvZygn8J+UjSBbREVCVUddIGdlbmVyYXRlUGF5bW9iUGF5bWVudCAtIFN0YXJ0aW5nIFBheW1vYiBwYXltZW50IGdlbmVyYXRpb24nKVxuICAgIGNvbnNvbGUubG9nKCfwn5SNIFtERUJVR10gZ2VuZXJhdGVQYXltb2JQYXltZW50IC0gT3JkZXIgRGF0YTonLCBvcmRlckRhdGEpXG4gICAgY29uc29sZS5sb2coJ/CflI0gW0RFQlVHXSBnZW5lcmF0ZVBheW1vYlBheW1lbnQgLSBDdXN0b21lciBJbmZvOicsIGN1c3RvbWVySW5mbylcbiAgICBjb25zb2xlLmxvZygn8J+UjSBbREVCVUddIGdlbmVyYXRlUGF5bW9iUGF5bWVudCAtIE9yZGVyIElEOicsIG9yZGVySWQpXG5cbiAgICAvLyBDcmVhdGUgUGF5bW9iIG9yZGVyXG4gICAgY29uc29sZS5sb2coJ/CflI0gW0RFQlVHXSBnZW5lcmF0ZVBheW1vYlBheW1lbnQgLSBDcmVhdGluZyBQYXltb2Igb3JkZXInKVxuICAgIGNvbnN0IHBheW1vYk9yZGVyID0gYXdhaXQgcGF5bW9iU2VydmljZS5jcmVhdGVPcmRlcih7XG4gICAgICBhbW91bnQ6IG9yZGVyRGF0YS5jYXJ0LnRvdGFsLFxuICAgICAgaXRlbXM6IG9yZGVyRGF0YS5jYXJ0Lml0ZW1zLm1hcCgoaXRlbTogYW55KSA9PiAoe1xuICAgICAgICBuYW1lOiBpdGVtLm5hbWUsXG4gICAgICAgIGFtb3VudDogaXRlbS50b3RhbCxcbiAgICAgICAgZGVzY3JpcHRpb246IGl0ZW0uZmxhdm9yRGV0YWlscyB8fCBpdGVtLm5hbWUsXG4gICAgICAgIHF1YW50aXR5OiBpdGVtLnF1YW50aXR5XG4gICAgICB9KSksXG4gICAgICBkZWxpdmVyeV9uZWVkZWQ6IHRydWVcbiAgICB9KTtcblxuICAgIGNvbnNvbGUubG9nKCfwn5SNIFtERUJVR10gZ2VuZXJhdGVQYXltb2JQYXltZW50IC0gUGF5bW9iIG9yZGVyIGNyZWF0ZWQ6JywgcGF5bW9iT3JkZXIuaWQpXG5cbiAgICAvLyBHZW5lcmF0ZSBwYXltZW50IGtleVxuICAgIGNvbnNvbGUubG9nKCfwn5SNIFtERUJVR10gZ2VuZXJhdGVQYXltb2JQYXltZW50IC0gR2VuZXJhdGluZyBwYXltZW50IGtleScpXG4gICAgY29uc3QgcGF5bWVudEtleSA9IGF3YWl0IHBheW1vYlNlcnZpY2UuZ2VuZXJhdGVQYXltZW50S2V5KHtcbiAgICAgIG9yZGVySWQ6IHBheW1vYk9yZGVyLmlkLFxuICAgICAgYW1vdW50OiBvcmRlckRhdGEuY2FydC50b3RhbCxcbiAgICAgIGJpbGxpbmdEYXRhOiB7XG4gICAgICAgIGZpcnN0X25hbWU6IGN1c3RvbWVySW5mby5uYW1lLnNwbGl0KCcgJylbMF0gfHwgY3VzdG9tZXJJbmZvLm5hbWUsXG4gICAgICAgIGxhc3RfbmFtZTogY3VzdG9tZXJJbmZvLm5hbWUuc3BsaXQoJyAnKS5zbGljZSgxKS5qb2luKCcgJykgfHwgY3VzdG9tZXJJbmZvLm5hbWUsXG4gICAgICAgIGVtYWlsOiBjdXN0b21lckluZm8uZW1haWwsXG4gICAgICAgIHBob25lX251bWJlcjogY3VzdG9tZXJJbmZvLnBob25lLFxuICAgICAgICBzdHJlZXQ6IG9yZGVyRGF0YS5kZWxpdmVyeUFkZHJlc3Muc3RyZWV0X2FkZHJlc3MsXG4gICAgICAgIGNpdHk6IG9yZGVyRGF0YS5kZWxpdmVyeUFkZHJlc3MuY2l0eV9uYW1lLFxuICAgICAgICBjb3VudHJ5OiAnRWd5cHQnLFxuICAgICAgICBhcGFydG1lbnQ6IG9yZGVyRGF0YS5kZWxpdmVyeUFkZHJlc3MuYWRkaXRpb25hbF9pbmZvIHx8ICdOQScsXG4gICAgICAgIGJ1aWxkaW5nOiAnTkEnLFxuICAgICAgICBmbG9vcjogJ05BJyxcbiAgICAgICAgcG9zdGFsX2NvZGU6ICdOQScsXG4gICAgICAgIHN0YXRlOiAnTkEnXG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBjb25zb2xlLmxvZygn8J+UjSBbREVCVUddIGdlbmVyYXRlUGF5bW9iUGF5bWVudCAtIFBheW1lbnQga2V5IGdlbmVyYXRlZDonLCBwYXltZW50S2V5LnRva2VuKVxuXG4gICAgLy8gR2V0IHBheW1lbnQgVVJMIHdpdGggb3JkZXIgSUQgaW4gdGhlIFVSTCBwYXJhbWV0ZXJzXG4gICAgY29uc3QgcGF5bWVudFVybCA9IGAke3BheW1vYlNlcnZpY2UuZ2V0UGF5bWVudFVybChwYXltZW50S2V5LnRva2VuKX0mb3JkZXJfaWQ9JHtvcmRlcklkfWA7XG4gICAgY29uc29sZS5sb2coJ/CflI0gW0RFQlVHXSBnZW5lcmF0ZVBheW1vYlBheW1lbnQgLSBQYXltZW50IFVSTCBnZW5lcmF0ZWQ6JywgcGF5bWVudFVybClcblxuICAgIHJldHVybiB7XG4gICAgICBwYXltZW50VG9rZW46IHBheW1lbnRLZXkudG9rZW4sXG4gICAgICBwYXltZW50VXJsLFxuICAgICAgcGF5bW9iT3JkZXJJZDogcGF5bW9iT3JkZXIuaWRcbiAgICB9O1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBbREVCVUddIGdlbmVyYXRlUGF5bW9iUGF5bWVudCAtIEVycm9yOicsIGVycm9yKTtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBnZW5lcmF0ZSBQYXltb2IgcGF5bWVudCcpO1xuICB9XG59O1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gUE9TVChyZXF1ZXN0OiBOZXh0UmVxdWVzdCk6IFByb21pc2U8TmV4dFJlc3BvbnNlPENoZWNrb3V0UGF5bWVudFJlc3BvbnNlPj4ge1xuICB0cnkge1xuICAgIGNvbnNvbGUubG9nKCfwn5SNIFtERUJVR10gUGF5bWVudCBBUEkgY2FsbGVkJylcbiAgICBjb25zdCBzZXNzaW9uID0gYXdhaXQgZ2V0U2VydmVyU2Vzc2lvbihhdXRoT3B0aW9ucyk7XG4gICAgY29uc3QgeyBwYXltZW50TWV0aG9kLCBvcmRlckRhdGEgfSA9IGF3YWl0IHJlcXVlc3QuanNvbigpIGFzIENoZWNrb3V0UGF5bWVudFJlcXVlc3Q7XG4gICAgY29uc3QgY2FydElkID0gYXdhaXQgZ2V0T3JDcmVhdGVDYXJ0KCk7XG5cbiAgICBjb25zb2xlLmxvZygn8J+UjSBbREVCVUddIFBheW1lbnQgQVBJIC0gU2Vzc2lvbjonLCBzZXNzaW9uPy51c2VyPy5lbWFpbClcbiAgICBjb25zb2xlLmxvZygn8J+UjSBbREVCVUddIFBheW1lbnQgQVBJIC0gUGF5bWVudCBNZXRob2Q6JywgcGF5bWVudE1ldGhvZClcbiAgICBjb25zb2xlLmxvZygn8J+UjSBbREVCVUddIFBheW1lbnQgQVBJIC0gQ2FydCBJRDonLCBjYXJ0SWQpXG4gICAgY29uc29sZS5sb2coJ/CflI0gW0RFQlVHXSBQYXltZW50IEFQSSAtIE9yZGVyIERhdGE6Jywgb3JkZXJEYXRhKVxuXG4gICAgLy8gVmFsaWRhdGUgcmVxdWVzdFxuICAgIGlmICghY2FydElkIHx8ICFwYXltZW50TWV0aG9kIHx8ICFvcmRlckRhdGEpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBbREVCVUddIFBheW1lbnQgQVBJIC0gTWlzc2luZyByZXF1aXJlZCBmaWVsZHMnKVxuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIG1lc3NhZ2U6ICdNaXNzaW5nIHJlcXVpcmVkIGZpZWxkcycsXG4gICAgICAgIGVycm9yOiAnQ2FydCBub3QgZm91bmQsIHBheW1lbnQgbWV0aG9kLCBhbmQgb3JkZXIgZGF0YSBhcmUgcmVxdWlyZWQnXG4gICAgICB9LCB7IHN0YXR1czogNDAwIH0pO1xuICAgIH1cblxuICAgIC8vIFZhbGlkYXRlIHBheW1lbnQgbWV0aG9kXG4gICAgaWYgKCFbJ2NvZCcsICdwYXltb2InXS5pbmNsdWRlcyhwYXltZW50TWV0aG9kKSkge1xuICAgICAgY29uc29sZS5lcnJvcign4p2MIFtERUJVR10gUGF5bWVudCBBUEkgLSBJbnZhbGlkIHBheW1lbnQgbWV0aG9kOicsIHBheW1lbnRNZXRob2QpXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgbWVzc2FnZTogJ0ludmFsaWQgcGF5bWVudCBtZXRob2QnLFxuICAgICAgICBlcnJvcjogJ1BheW1lbnQgbWV0aG9kIG11c3QgYmUgZWl0aGVyIFwiY29kXCIgb3IgXCJwYXltb2JcIidcbiAgICAgIH0sIHsgc3RhdHVzOiA0MDAgfSk7XG4gICAgfVxuXG4gICAgY29uc29sZS5sb2coJ/CflI0gW0RFQlVHXSBQYXltZW50IEFQSSAtIFN0YXJ0aW5nIGRhdGFiYXNlIHRyYW5zYWN0aW9uJylcblxuICAgIC8vIFN0YXJ0IGRhdGFiYXNlIHRyYW5zYWN0aW9uXG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZGF0YWJhc2VTZXJ2aWNlLnRyYW5zYWN0aW9uKGFzeW5jIChjb25uZWN0aW9uKSA9PiB7XG4gICAgICAvLyBDcmVhdGUgb3JkZXJcbiAgICAgIGNvbnN0IG9yZGVyU3RhdHVzID0gcGF5bWVudE1ldGhvZCA9PT0gJ2NvZCcgPyAnUGVuZGluZycgOiAnVW5wYWlkJztcbiAgICAgIGNvbnN0IHBheW1lbnRTdGF0dXMgPSBwYXltZW50TWV0aG9kID09PSAnY29kJyA/ICdQZW5kaW5nJyA6ICdVbnBhaWQnO1xuXG4gICAgICBsZXQgY3VzdG9tZXJJZCA9IG51bGw7XG4gICAgICBcbiAgICAgIGlmIChzZXNzaW9uPy51c2VyKSB7XG4gICAgICAgIC8vIEF1dGhlbnRpY2F0ZWQgdXNlciAtIGhhbmRsZSBhcyBiZWZvcmVcbiAgICAgICAgY29uc29sZS5sb2coJ/CflI0gW0RFQlVHXSBQYXltZW50IEFQSSAtIFByb2Nlc3NpbmcgYXV0aGVudGljYXRlZCB1c2VyJylcbiAgICAgICAgY29uc29sZS5sb2coJ/CflI0gW0RFQlVHXSBQYXltZW50IEFQSSAtIFVzZXIgZW1haWw6Jywgc2Vzc2lvbi51c2VyLmVtYWlsKVxuICAgICAgICBcbiAgICAgICAgLy8gRmlyc3QgdHJ5IHRvIGZpbmQgY3VzdG9tZXIgaW4gdGhlIGN1c3RvbWVyIHRhYmxlIChmb3Igb3JkZXJzIGZvcmVpZ24ga2V5KVxuICAgICAgICBjb25zdCBjdXN0b21lclJlc3VsdCA9IGF3YWl0IGNvbm5lY3Rpb24ucXVlcnkoJ1NFTEVDVCBpZCBGUk9NIGN1c3RvbWVyIFdIRVJFIGVtYWlsID0gPycsIFtzZXNzaW9uLnVzZXIuZW1haWxdKTtcbiAgICAgICAgY29uc29sZS5sb2coJ/CflI0gW0RFQlVHXSBQYXltZW50IEFQSSAtIEN1c3RvbWVyIGxvb2t1cCByZXN1bHQ6JywgY3VzdG9tZXJSZXN1bHQpXG4gICAgICAgIFxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShjdXN0b21lclJlc3VsdCkgJiYgY3VzdG9tZXJSZXN1bHQubGVuZ3RoID4gMCkge1xuICAgICAgICAgIGN1c3RvbWVySWQgPSAoY3VzdG9tZXJSZXN1bHRbMF0gYXMgYW55KS5pZDtcbiAgICAgICAgICBjb25zb2xlLmxvZygn8J+UjSBbREVCVUddIFBheW1lbnQgQVBJIC0gRm91bmQgZXhpc3RpbmcgY3VzdG9tZXIgd2l0aCBJRDonLCBjdXN0b21lcklkKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNvbnNvbGUubG9nKCfwn5SNIFtERUJVR10gUGF5bWVudCBBUEkgLSBDdXN0b21lciBub3QgZm91bmQgaW4gY3VzdG9tZXIgdGFibGUsIGNoZWNraW5nIGN1c3RvbWVycyB0YWJsZScpXG4gICAgICAgICAgLy8gQ3VzdG9tZXIgbm90IGZvdW5kIGluIGN1c3RvbWVyIHRhYmxlLCBnZXQgZnJvbSBjdXN0b21lcnMgdGFibGUgYW5kIGNyZWF0ZSBpbiBjdXN0b21lciB0YWJsZVxuICAgICAgICAgIGNvbnN0IGN1c3RvbWVyc1Jlc3VsdCA9IGF3YWl0IGNvbm5lY3Rpb24ucXVlcnkoJ1NFTEVDVCBmaXJzdF9uYW1lLCBsYXN0X25hbWUsIGVtYWlsLCBwaG9uZSBGUk9NIGN1c3RvbWVycyBXSEVSRSBlbWFpbCA9ID8nLCBbc2Vzc2lvbi51c2VyLmVtYWlsXSk7XG4gICAgICAgICAgY29uc29sZS5sb2coJ/CflI0gW0RFQlVHXSBQYXltZW50IEFQSSAtIEN1c3RvbWVycyB0YWJsZSBsb29rdXAgcmVzdWx0OicsIGN1c3RvbWVyc1Jlc3VsdClcbiAgICAgICAgICBcbiAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShjdXN0b21lcnNSZXN1bHQpICYmIGN1c3RvbWVyc1Jlc3VsdC5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBjb25zdCBjdXN0b21lciA9IGN1c3RvbWVyc1Jlc3VsdFswXSBhcyBhbnk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygn8J+UjSBbREVCVUddIFBheW1lbnQgQVBJIC0gRm91bmQgY3VzdG9tZXIgaW4gY3VzdG9tZXJzIHRhYmxlOicsIGN1c3RvbWVyKVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBDcmVhdGUgY3VzdG9tZXIgcmVjb3JkIGluIGN1c3RvbWVyIHRhYmxlXG4gICAgICAgICAgICBjb25zdCBpbnNlcnRSZXN1bHQgPSBhd2FpdCBjb25uZWN0aW9uLnF1ZXJ5KFxuICAgICAgICAgICAgICAnSU5TRVJUIElOVE8gY3VzdG9tZXIgKG5hbWUsIGVtYWlsLCBtb2JpbGUsIHR5cGUpIFZBTFVFUyAoPywgPywgPywgPyknLFxuICAgICAgICAgICAgICBbYCR7Y3VzdG9tZXIuZmlyc3RfbmFtZX0gJHtjdXN0b21lci5sYXN0X25hbWV9YCwgY3VzdG9tZXIuZW1haWwsIGN1c3RvbWVyLnBob25lLCAncmVnaXN0ZXJlZCddXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBjdXN0b21lcklkID0gKGluc2VydFJlc3VsdCBhcyBhbnkpLmluc2VydElkO1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ/CflI0gW0RFQlVHXSBQYXltZW50IEFQSSAtIENyZWF0ZWQgY3VzdG9tZXIgcmVjb3JkIGluIGN1c3RvbWVyIHRhYmxlIHdpdGggSUQ6JywgY3VzdG9tZXJJZClcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcign4p2MIFtERUJVR10gUGF5bWVudCBBUEkgLSBDdXN0b21lciBub3QgZm91bmQgaW4gY3VzdG9tZXJzIHRhYmxlIGVpdGhlcicpXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBHdWVzdCB1c2VyIC0gY3JlYXRlIGN1c3RvbWVyIHJlY29yZCBmcm9tIGd1ZXN0IGRhdGFcbiAgICAgICAgY29uc29sZS5sb2coJ/CflI0gW0RFQlVHXSBQYXltZW50IEFQSSAtIFByb2Nlc3NpbmcgZ3Vlc3QgdXNlcicpXG4gICAgICAgIFxuICAgICAgICBpZiAoIW9yZGVyRGF0YS5jdXN0b21lckluZm8pIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0N1c3RvbWVyIGluZm9ybWF0aW9uIGlzIHJlcXVpcmVkIGZvciBndWVzdCBjaGVja291dCcpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBjb25zb2xlLmxvZygn8J+UjSBbREVCVUddIFBheW1lbnQgQVBJIC0gR3Vlc3QgY3VzdG9tZXIgaW5mbzonLCBvcmRlckRhdGEuY3VzdG9tZXJJbmZvKVxuICAgICAgICBcbiAgICAgICAgLy8gQ3JlYXRlIGd1ZXN0IGN1c3RvbWVyIHJlY29yZCBpbiBjdXN0b21lciB0YWJsZVxuICAgICAgICBjb25zdCBpbnNlcnRSZXN1bHQgPSBhd2FpdCBjb25uZWN0aW9uLnF1ZXJ5KFxuICAgICAgICAgICdJTlNFUlQgSU5UTyBjdXN0b21lciAobmFtZSwgZW1haWwsIG1vYmlsZSwgdHlwZSkgVkFMVUVTICg/LCA/LCA/LCA/KScsXG4gICAgICAgICAgW29yZGVyRGF0YS5jdXN0b21lckluZm8ubmFtZSwgb3JkZXJEYXRhLmN1c3RvbWVySW5mby5lbWFpbCwgb3JkZXJEYXRhLmN1c3RvbWVySW5mby5waG9uZSwgJ2d1ZXN0J11cbiAgICAgICAgKTtcbiAgICAgICAgXG4gICAgICAgIGN1c3RvbWVySWQgPSAoaW5zZXJ0UmVzdWx0IGFzIGFueSkuaW5zZXJ0SWQ7XG4gICAgICAgIGNvbnNvbGUubG9nKCfwn5SNIFtERUJVR10gUGF5bWVudCBBUEkgLSBDcmVhdGVkIGd1ZXN0IGN1c3RvbWVyIHJlY29yZCBpbiBjdXN0b21lciB0YWJsZSB3aXRoIElEOicsIGN1c3RvbWVySWQpXG4gICAgICB9XG4gICAgICBcbiAgICAgIGlmICghY3VzdG9tZXJJZCkge1xuICAgICAgICBjb25zb2xlLmVycm9yKCfinYwgW0RFQlVHXSBQYXltZW50IEFQSSAtIE5vIGN1c3RvbWVyIElEIG9idGFpbmVkLCB0aHJvd2luZyBlcnJvcicpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGNyZWF0ZSBvciBmaW5kIGN1c3RvbWVyIHJlY29yZCcpO1xuICAgICAgfVxuICAgICAgXG4gICAgICBjb25zb2xlLmxvZygn8J+UjSBbREVCVUddIFBheW1lbnQgQVBJIC0gRmluYWwgY3VzdG9tZXIgSUQ6JywgY3VzdG9tZXJJZClcblxuICAgICAgY29uc3Qgb3JkZXJSZXN1bHQgPSBhd2FpdCBjb25uZWN0aW9uLnF1ZXJ5KFxuICAgICAgICBgSU5TRVJUIElOVE8gb3JkZXJzIChcbiAgICAgICAgICBjdXN0b21lcl9pZCwgXG4gICAgICAgICAgdG90YWwsIFxuICAgICAgICAgIHN0YXR1cywgXG4gICAgICAgICAgcGF5bWVudF9tZXRob2QsXG4gICAgICAgICAgY3JlYXRlZF9hdFxuICAgICAgICApIFZBTFVFUyAoPywgPywgPywgPywgTk9XKCkpYCxcbiAgICAgICAgW1xuICAgICAgICAgIGN1c3RvbWVySWQsXG4gICAgICAgICAgTnVtYmVyKG9yZGVyRGF0YS5jYXJ0LnRvdGFsKSxcbiAgICAgICAgICBvcmRlclN0YXR1cyxcbiAgICAgICAgICBwYXltZW50TWV0aG9kID09PSAnY29kJyA/ICdjYXNoJyA6ICdjYXJkJ1xuICAgICAgICBdXG4gICAgICApO1xuXG4gICAgICBjb25zdCBvcmRlcklkID0gKG9yZGVyUmVzdWx0IGFzIGFueSkuaW5zZXJ0SWQ7XG5cbiAgICAgIC8vIFVwZGF0ZSBzdG9jayBmb3IgaXRlbXMgKG9yZGVyIGl0ZW1zIHdpbGwgYmUgaGFuZGxlZCBzZXBhcmF0ZWx5IHdoZW4gd2UgaGF2ZSBwcm9wZXIgc2NoZW1hKVxuICAgICAgZm9yIChjb25zdCBpdGVtIG9mIG9yZGVyRGF0YS5jYXJ0Lml0ZW1zKSB7XG4gICAgICAgIGlmIChpdGVtLmlzUGFjaykge1xuICAgICAgICAgIC8vIEZvciBwYWNrcywgdXBkYXRlIGZsYXZvciBzdG9jayBpbnN0ZWFkIG9mIHByb2R1Y3Qgc3RvY2tcbiAgICAgICAgICBmb3IgKGNvbnN0IGZsYXZvciBvZiBpdGVtLmZsYXZvcnMpIHtcbiAgICAgICAgICAgIGNvbnN0IHN0b2NrRmllbGQgPSBgc3RvY2tfcXVhbnRpdHlfJHtmbGF2b3Iuc2l6ZS50b0xvd2VyQ2FzZSgpfWA7XG4gICAgICAgICAgICBhd2FpdCBjb25uZWN0aW9uLnF1ZXJ5KFxuICAgICAgICAgICAgICBgVVBEQVRFIGZsYXZvcnMgU0VUICR7c3RvY2tGaWVsZH0gPSAke3N0b2NrRmllbGR9IC0gPyBXSEVSRSBpZCA9ID9gLFxuICAgICAgICAgICAgICBbZmxhdm9yLnF1YW50aXR5LCBmbGF2b3IuaWRdXG4gICAgICAgICAgICApO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBGb3IgaW5kaXZpZHVhbCBwcm9kdWN0cywgdXBkYXRlIHByb2R1Y3Qgc3RvY2tcbiAgICAgICAgICBhd2FpdCBjb25uZWN0aW9uLnF1ZXJ5KFxuICAgICAgICAgICAgJ1VQREFURSBwcm9kdWN0cyBTRVQgc3RvY2tfcXVhbnRpdHkgPSBzdG9ja19xdWFudGl0eSAtID8gV0hFUkUgaWQgPSA/JyxcbiAgICAgICAgICAgIFtpdGVtLnF1YW50aXR5LCBpdGVtLmlkXVxuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gQ2xlYXIgY2FydFxuICAgICAgYXdhaXQgY29ubmVjdGlvbi5xdWVyeSgnREVMRVRFIEZST00gY2FydF9pdGVtcyBXSEVSRSBjYXJ0X2lkID0gPycsIFtjYXJ0SWRdKTtcblxuICAgICAgcmV0dXJuIHsgb3JkZXJJZCB9O1xuICAgIH0pO1xuXG4gICAgY29uc3QgeyBvcmRlcklkIH0gPSByZXN1bHQ7XG5cbiAgICBpZiAocGF5bWVudE1ldGhvZCA9PT0gJ2NvZCcpIHtcbiAgICAgIC8vIENhc2ggb24gRGVsaXZlcnkgLSBvcmRlciBpcyBjb21wbGV0ZVxuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gU2VuZCBvcmRlciBjb25maXJtYXRpb24gZW1haWxcbiAgICAgICAgYXdhaXQgZW1haWxTZXJ2aWNlLnNlbmRPcmRlckNvbmZpcm1hdGlvbkVtYWlsKFxuICAgICAgICAgIG9yZGVyRGF0YS5jdXN0b21lckluZm8uZW1haWwsIFxuICAgICAgICAgIG9yZGVySWQudG9TdHJpbmcoKSwgXG4gICAgICAgICAge1xuICAgICAgICAgICAgaXRlbXM6IG9yZGVyRGF0YS5jYXJ0Lml0ZW1zLFxuICAgICAgICAgICAgc3VidG90YWw6IG9yZGVyRGF0YS5jYXJ0LnN1YnRvdGFsLFxuICAgICAgICAgICAgZGVsaXZlcnlGZWU6IG9yZGVyRGF0YS5jYXJ0LmRlbGl2ZXJ5RmVlLFxuICAgICAgICAgICAgdG90YWw6IG9yZGVyRGF0YS5jYXJ0LnRvdGFsLFxuICAgICAgICAgICAgc3RhdHVzOiAnUGVuZGluZycsXG4gICAgICAgICAgICBwYXltZW50TWV0aG9kOiAnY29kJyxcbiAgICAgICAgICAgIGN1c3RvbWVySW5mbzogb3JkZXJEYXRhLmN1c3RvbWVySW5mbyxcbiAgICAgICAgICAgIGRlbGl2ZXJ5QWRkcmVzczogb3JkZXJEYXRhLmRlbGl2ZXJ5QWRkcmVzc1xuICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgY29uc29sZS5sb2coJ+KchSBPcmRlciBjb25maXJtYXRpb24gZW1haWwgc2VudCBmb3IgQ09EIG9yZGVyJyk7XG4gICAgICB9IGNhdGNoIChlbWFpbEVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBGYWlsZWQgdG8gc2VuZCBvcmRlciBjb25maXJtYXRpb24gZW1haWw6JywgZW1haWxFcnJvcik7XG4gICAgICAgIC8vIERvbid0IGZhaWwgdGhlIG9yZGVyIGlmIGVtYWlsIGZhaWxzXG4gICAgICB9XG5cbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XG4gICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgIG1lc3NhZ2U6ICdPcmRlciBwbGFjZWQgc3VjY2Vzc2Z1bGx5IHdpdGggQ2FzaCBvbiBEZWxpdmVyeScsXG4gICAgICAgIGRhdGE6IHtcbiAgICAgICAgICBvcmRlcklkXG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBQYXltb2IgcGF5bWVudCAtIGdlbmVyYXRlIHBheW1lbnQgVVJMXG4gICAgICBjb25zb2xlLmxvZygn8J+UjSBbREVCVUddIFBheW1lbnQgQVBJIC0gR2VuZXJhdGluZyBQYXltb2IgcGF5bWVudCcpXG4gICAgICBjb25zdCB7IHBheW1lbnRUb2tlbiwgcGF5bWVudFVybCB9ID0gYXdhaXQgZ2VuZXJhdGVQYXltb2JQYXltZW50KG9yZGVyRGF0YSwgb3JkZXJEYXRhLmN1c3RvbWVySW5mbywgb3JkZXJJZCk7XG5cbiAgICAgIGNvbnNvbGUubG9nKCfwn5SNIFtERUJVR10gUGF5bWVudCBBUEkgLSBQYXltb2IgcGF5bWVudCBnZW5lcmF0ZWQnKVxuICAgICAgY29uc29sZS5sb2coJ/CflI0gW0RFQlVHXSBQYXltZW50IEFQSSAtIFBheW1lbnQgVG9rZW46JywgcGF5bWVudFRva2VuKVxuICAgICAgY29uc29sZS5sb2coJ/CflI0gW0RFQlVHXSBQYXltZW50IEFQSSAtIFBheW1lbnQgVVJMOicsIHBheW1lbnRVcmwpXG5cbiAgICAgIC8vIFN0b3JlIHBheW1lbnQgdG9rZW4gZm9yIHdlYmhvb2sgdmFsaWRhdGlvblxuICAgICAgYXdhaXQgZGF0YWJhc2VTZXJ2aWNlLnF1ZXJ5KFxuICAgICAgICAnVVBEQVRFIG9yZGVycyBTRVQgcGF5bWVudF90b2tlbiA9ID8gV0hFUkUgaWQgPSA/JyxcbiAgICAgICAgW3BheW1lbnRUb2tlbiwgb3JkZXJJZF1cbiAgICAgICk7XG5cbiAgICAgIGNvbnNvbGUubG9nKCfwn5SNIFtERUJVR10gUGF5bWVudCBBUEkgLSBQYXltZW50IHRva2VuIHN0b3JlZCBpbiBkYXRhYmFzZScpXG5cbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XG4gICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgIG1lc3NhZ2U6ICdQYXltZW50IFVSTCBnZW5lcmF0ZWQgc3VjY2Vzc2Z1bGx5JyxcbiAgICAgICAgZGF0YToge1xuICAgICAgICAgIG9yZGVySWQsXG4gICAgICAgICAgcGF5bWVudFVybCxcbiAgICAgICAgICBwYXltZW50VG9rZW5cbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgcHJvY2Vzc2luZyBwYXltZW50OicsIGVycm9yKTtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICBtZXNzYWdlOiAnRmFpbGVkIHRvIHByb2Nlc3MgcGF5bWVudCcsXG4gICAgICBlcnJvcjogJ0ludGVybmFsIHNlcnZlciBlcnJvcidcbiAgICB9LCB7IHN0YXR1czogNTAwIH0pO1xuICB9XG59Il0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsImdldFNlcnZlclNlc3Npb24iLCJjb29raWVzIiwidjQiLCJ1dWlkdjQiLCJhdXRoT3B0aW9ucyIsImRhdGFiYXNlU2VydmljZSIsInBheW1vYlNlcnZpY2UiLCJlbWFpbFNlcnZpY2UiLCJnZXRPckNyZWF0ZUNhcnQiLCJjb29raWVTdG9yZSIsImNhcnRJZCIsImdldCIsInZhbHVlIiwic2Vzc2lvbklkIiwicmVzdWx0IiwicXVlcnkiLCJpbnNlcnRJZCIsInRvU3RyaW5nIiwic2V0Q2FydENvb2tpZSIsImNvbnNvbGUiLCJsb2ciLCJjYXJ0RXhpc3RzIiwiQXJyYXkiLCJpc0FycmF5IiwibGVuZ3RoIiwic2V0IiwiaHR0cE9ubHkiLCJzZWN1cmUiLCJwcm9jZXNzIiwic2FtZVNpdGUiLCJtYXhBZ2UiLCJnZW5lcmF0ZVBheW1vYlBheW1lbnQiLCJvcmRlckRhdGEiLCJjdXN0b21lckluZm8iLCJvcmRlcklkIiwicGF5bW9iT3JkZXIiLCJjcmVhdGVPcmRlciIsImFtb3VudCIsImNhcnQiLCJ0b3RhbCIsIml0ZW1zIiwibWFwIiwiaXRlbSIsIm5hbWUiLCJkZXNjcmlwdGlvbiIsImZsYXZvckRldGFpbHMiLCJxdWFudGl0eSIsImRlbGl2ZXJ5X25lZWRlZCIsImlkIiwicGF5bWVudEtleSIsImdlbmVyYXRlUGF5bWVudEtleSIsImJpbGxpbmdEYXRhIiwiZmlyc3RfbmFtZSIsInNwbGl0IiwibGFzdF9uYW1lIiwic2xpY2UiLCJqb2luIiwiZW1haWwiLCJwaG9uZV9udW1iZXIiLCJwaG9uZSIsInN0cmVldCIsImRlbGl2ZXJ5QWRkcmVzcyIsInN0cmVldF9hZGRyZXNzIiwiY2l0eSIsImNpdHlfbmFtZSIsImNvdW50cnkiLCJhcGFydG1lbnQiLCJhZGRpdGlvbmFsX2luZm8iLCJidWlsZGluZyIsImZsb29yIiwicG9zdGFsX2NvZGUiLCJzdGF0ZSIsInRva2VuIiwicGF5bWVudFVybCIsImdldFBheW1lbnRVcmwiLCJwYXltZW50VG9rZW4iLCJwYXltb2JPcmRlcklkIiwiZXJyb3IiLCJFcnJvciIsIlBPU1QiLCJyZXF1ZXN0Iiwic2Vzc2lvbiIsInBheW1lbnRNZXRob2QiLCJqc29uIiwidXNlciIsInN1Y2Nlc3MiLCJtZXNzYWdlIiwic3RhdHVzIiwiaW5jbHVkZXMiLCJ0cmFuc2FjdGlvbiIsImNvbm5lY3Rpb24iLCJvcmRlclN0YXR1cyIsInBheW1lbnRTdGF0dXMiLCJjdXN0b21lcklkIiwiY3VzdG9tZXJSZXN1bHQiLCJjdXN0b21lcnNSZXN1bHQiLCJjdXN0b21lciIsImluc2VydFJlc3VsdCIsIm9yZGVyUmVzdWx0IiwiTnVtYmVyIiwiaXNQYWNrIiwiZmxhdm9yIiwiZmxhdm9ycyIsInN0b2NrRmllbGQiLCJzaXplIiwidG9Mb3dlckNhc2UiLCJzZW5kT3JkZXJDb25maXJtYXRpb25FbWFpbCIsInN1YnRvdGFsIiwiZGVsaXZlcnlGZWUiLCJlbWFpbEVycm9yIiwiZGF0YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./app/api/checkout/payment/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/auth-options.ts":
/*!*****************************!*\
  !*** ./lib/auth-options.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authOptions: () => (/* binding */ authOptions)\n/* harmony export */ });\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth/providers/credentials */ \"(rsc)/../../node_modules/next-auth/providers/credentials.js\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bcryptjs */ \"(rsc)/./node_modules/bcryptjs/index.js\");\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./db */ \"(rsc)/./lib/db.ts\");\n\n\n\nconst authOptions = {\n    providers: [\n        (0,next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n            name: \"Credentials\",\n            credentials: {\n                email: {\n                    label: \"Email\",\n                    type: \"email\"\n                },\n                password: {\n                    label: \"Password\",\n                    type: \"password\"\n                }\n            },\n            async authorize (credentials) {\n                if (!credentials?.email || !credentials?.password) {\n                    return null;\n                }\n                const [rows] = await _db__WEBPACK_IMPORTED_MODULE_2__[\"default\"].query(\"SELECT * FROM customers WHERE email = ?\", [\n                    credentials.email\n                ]);\n                const user = rows[0];\n                if (!user) {\n                    return null;\n                }\n                // Compare password with bcrypt\n                const isPasswordValid = await (0,bcryptjs__WEBPACK_IMPORTED_MODULE_1__.compare)(credentials.password, user.password);\n                if (!isPasswordValid) {\n                    return null;\n                }\n                return {\n                    id: user.id.toString(),\n                    email: user.email,\n                    name: `${user.first_name} ${user.last_name}`,\n                    firstName: user.first_name,\n                    lastName: user.last_name,\n                    phone: user.phone\n                };\n            }\n        })\n    ],\n    callbacks: {\n        async jwt ({ token, user }) {\n            if (user) {\n                token.id = user.id;\n                token.firstName = user.firstName;\n                token.lastName = user.lastName;\n                token.phone = user.phone;\n            }\n            return token;\n        },\n        async session ({ session, token }) {\n            if (session.user) {\n                session.user.id = token.id;\n                session.user.firstName = token.firstName;\n                session.user.lastName = token.lastName;\n                session.user.phone = token.phone;\n            }\n            return session;\n        }\n    },\n    pages: {\n        signIn: \"/auth/login\",\n        signOut: \"/auth/signout\"\n    },\n    session: {\n        strategy: \"jwt\",\n        maxAge: 24 * 60 * 60\n    },\n    jwt: {\n        maxAge: 24 * 60 * 60\n    },\n    secret: process.env.NEXTAUTH_SECRET || \"x+1DNU9w01MI2M7bNhUuI9F74OxrivACw4XemPMY8gE=\",\n    debug: \"development\" === \"development\",\n    useSecureCookies: \"development\" === \"production\",\n    cookies: {\n        sessionToken: {\n            name: `next-auth.session-token`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: \"development\" === \"production\"\n            }\n        }\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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XSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dEF1dGhPcHRpb25zIH0gZnJvbSAnbmV4dC1hdXRoJztcbmltcG9ydCBDcmVkZW50aWFsc1Byb3ZpZGVyIGZyb20gJ25leHQtYXV0aC9wcm92aWRlcnMvY3JlZGVudGlhbHMnO1xuaW1wb3J0IHsgY29tcGFyZSB9IGZyb20gJ2JjcnlwdGpzJztcbmltcG9ydCBkYiBmcm9tICcuL2RiJztcbmltcG9ydCB7IEpXVCB9IGZyb20gJ25leHQtYXV0aC9qd3QnO1xuXG5pbnRlcmZhY2UgVXNlciB7XG4gIGlkOiBzdHJpbmc7XG4gIGVtYWlsOiBzdHJpbmc7XG4gIG5hbWU6IHN0cmluZztcbiAgZmlyc3ROYW1lOiBzdHJpbmc7XG4gIGxhc3ROYW1lOiBzdHJpbmc7XG4gIHBob25lOiBzdHJpbmc7XG59XG5cbmRlY2xhcmUgbW9kdWxlICduZXh0LWF1dGgnIHtcbiAgaW50ZXJmYWNlIFNlc3Npb24ge1xuICAgIHVzZXI6IFVzZXI7XG4gIH1cbiAgaW50ZXJmYWNlIFVzZXIge1xuICAgIGZpcnN0TmFtZTogc3RyaW5nO1xuICAgIGxhc3ROYW1lOiBzdHJpbmc7XG4gICAgcGhvbmU6IHN0cmluZztcbiAgfVxufVxuXG5kZWNsYXJlIG1vZHVsZSAnbmV4dC1hdXRoL2p3dCcge1xuICBpbnRlcmZhY2UgSldUIHtcbiAgICBpZDogc3RyaW5nO1xuICAgIGZpcnN0TmFtZTogc3RyaW5nO1xuICAgIGxhc3ROYW1lOiBzdHJpbmc7XG4gICAgcGhvbmU6IHN0cmluZztcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgYXV0aE9wdGlvbnM6IE5leHRBdXRoT3B0aW9ucyA9IHtcbiAgcHJvdmlkZXJzOiBbXG4gICAgQ3JlZGVudGlhbHNQcm92aWRlcih7XG4gICAgICBuYW1lOiAnQ3JlZGVudGlhbHMnLFxuICAgICAgY3JlZGVudGlhbHM6IHtcbiAgICAgICAgZW1haWw6IHsgbGFiZWw6ICdFbWFpbCcsIHR5cGU6ICdlbWFpbCcgfSxcbiAgICAgICAgcGFzc3dvcmQ6IHsgbGFiZWw6ICdQYXNzd29yZCcsIHR5cGU6ICdwYXNzd29yZCcgfVxuICAgICAgfSxcbiAgICAgIGFzeW5jIGF1dGhvcml6ZShjcmVkZW50aWFscykge1xuICAgICAgICBpZiAoIWNyZWRlbnRpYWxzPy5lbWFpbCB8fCAhY3JlZGVudGlhbHM/LnBhc3N3b3JkKSB7XG4gICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBbcm93c10gPSBhd2FpdCBkYi5xdWVyeShcbiAgICAgICAgICAnU0VMRUNUICogRlJPTSBjdXN0b21lcnMgV0hFUkUgZW1haWwgPSA/JyxcbiAgICAgICAgICBbY3JlZGVudGlhbHMuZW1haWxdXG4gICAgICAgICk7XG5cbiAgICAgICAgY29uc3QgdXNlciA9IChyb3dzIGFzIGFueVtdKVswXTtcblxuICAgICAgICBpZiAoIXVzZXIpIHtcbiAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIENvbXBhcmUgcGFzc3dvcmQgd2l0aCBiY3J5cHRcbiAgICAgICAgY29uc3QgaXNQYXNzd29yZFZhbGlkID0gYXdhaXQgY29tcGFyZShjcmVkZW50aWFscy5wYXNzd29yZCwgdXNlci5wYXNzd29yZCk7XG4gICAgICAgIFxuICAgICAgICBpZiAoIWlzUGFzc3dvcmRWYWxpZCkge1xuICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBpZDogdXNlci5pZC50b1N0cmluZygpLFxuICAgICAgICAgIGVtYWlsOiB1c2VyLmVtYWlsLFxuICAgICAgICAgIG5hbWU6IGAke3VzZXIuZmlyc3RfbmFtZX0gJHt1c2VyLmxhc3RfbmFtZX1gLFxuICAgICAgICAgIGZpcnN0TmFtZTogdXNlci5maXJzdF9uYW1lLFxuICAgICAgICAgIGxhc3ROYW1lOiB1c2VyLmxhc3RfbmFtZSxcbiAgICAgICAgICBwaG9uZTogdXNlci5waG9uZVxuICAgICAgICB9O1xuICAgICAgfVxuICAgIH0pXG4gIF0sXG4gIGNhbGxiYWNrczoge1xuICAgIGFzeW5jIGp3dCh7IHRva2VuLCB1c2VyIH0pIHtcbiAgICAgIGlmICh1c2VyKSB7XG4gICAgICAgIHRva2VuLmlkID0gdXNlci5pZDtcbiAgICAgICAgdG9rZW4uZmlyc3ROYW1lID0gdXNlci5maXJzdE5hbWU7XG4gICAgICAgIHRva2VuLmxhc3ROYW1lID0gdXNlci5sYXN0TmFtZTtcbiAgICAgICAgdG9rZW4ucGhvbmUgPSB1c2VyLnBob25lO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRva2VuO1xuICAgIH0sXG4gICAgYXN5bmMgc2Vzc2lvbih7IHNlc3Npb24sIHRva2VuIH0pIHtcbiAgICAgIGlmIChzZXNzaW9uLnVzZXIpIHtcbiAgICAgICAgc2Vzc2lvbi51c2VyLmlkID0gdG9rZW4uaWQ7XG4gICAgICAgIHNlc3Npb24udXNlci5maXJzdE5hbWUgPSB0b2tlbi5maXJzdE5hbWU7XG4gICAgICAgIHNlc3Npb24udXNlci5sYXN0TmFtZSA9IHRva2VuLmxhc3ROYW1lO1xuICAgICAgICBzZXNzaW9uLnVzZXIucGhvbmUgPSB0b2tlbi5waG9uZTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBzZXNzaW9uO1xuICAgIH1cbiAgfSxcbiAgcGFnZXM6IHtcbiAgICBzaWduSW46ICcvYXV0aC9sb2dpbicsXG4gICAgc2lnbk91dDogJy9hdXRoL3NpZ25vdXQnXG4gIH0sXG4gIHNlc3Npb246IHtcbiAgICBzdHJhdGVneTogJ2p3dCcsXG4gICAgbWF4QWdlOiAyNCAqIDYwICogNjAsIC8vIDI0IGhvdXJzXG4gIH0sXG4gIGp3dDoge1xuICAgIG1heEFnZTogMjQgKiA2MCAqIDYwLCAvLyAyNCBob3Vyc1xuICB9LFxuICBzZWNyZXQ6IHByb2Nlc3MuZW52Lk5FWFRBVVRIX1NFQ1JFVCB8fCAneCsxRE5VOXcwMU1JMk03Yk5oVXVJOUY3NE94cml2QUN3NFhlbVBNWThnRT0nLFxuICBkZWJ1ZzogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcsXG4gIHVzZVNlY3VyZUNvb2tpZXM6IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicsXG4gIGNvb2tpZXM6IHtcbiAgICBzZXNzaW9uVG9rZW46IHtcbiAgICAgIG5hbWU6IGBuZXh0LWF1dGguc2Vzc2lvbi10b2tlbmAsXG4gICAgICBvcHRpb25zOiB7XG4gICAgICAgIGh0dHBPbmx5OiB0cnVlLFxuICAgICAgICBzYW1lU2l0ZTogJ2xheCcsXG4gICAgICAgIHBhdGg6ICcvJyxcbiAgICAgICAgc2VjdXJlOiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nXG4gICAgICB9XG4gICAgfVxuICB9XG59OyAiXSwibmFtZXMiOlsiQ3JlZGVudGlhbHNQcm92aWRlciIsImNvbXBhcmUiLCJkYiIsImF1dGhPcHRpb25zIiwicHJvdmlkZXJzIiwibmFtZSIsImNyZWRlbnRpYWxzIiwiZW1haWwiLCJsYWJlbCIsInR5cGUiLCJwYXNzd29yZCIsImF1dGhvcml6ZSIsInJvd3MiLCJxdWVyeSIsInVzZXIiLCJpc1Bhc3N3b3JkVmFsaWQiLCJpZCIsInRvU3RyaW5nIiwiZmlyc3RfbmFtZSIsImxhc3RfbmFtZSIsImZpcnN0TmFtZSIsImxhc3ROYW1lIiwicGhvbmUiLCJjYWxsYmFja3MiLCJqd3QiLCJ0b2tlbiIsInNlc3Npb24iLCJwYWdlcyIsInNpZ25JbiIsInNpZ25PdXQiLCJzdHJhdGVneSIsIm1heEFnZSIsInNlY3JldCIsInByb2Nlc3MiLCJlbnYiLCJORVhUQVVUSF9TRUNSRVQiLCJkZWJ1ZyIsInVzZVNlY3VyZUNvb2tpZXMiLCJjb29raWVzIiwic2Vzc2lvblRva2VuIiwib3B0aW9ucyIsImh0dHBPbmx5Iiwic2FtZVNpdGUiLCJwYXRoIiwic2VjdXJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./lib/auth-options.ts\n");

/***/ }),

/***/ "(rsc)/./lib/db.ts":
/*!*******************!*\
  !*** ./lib/db.ts ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getOrderByTracking: () => (/* binding */ getOrderByTracking),\n/* harmony export */   getOrderDetails: () => (/* binding */ getOrderDetails),\n/* harmony export */   getOrders: () => (/* binding */ getOrders),\n/* harmony export */   saveOrder: () => (/* binding */ saveOrder),\n/* harmony export */   testConnection: () => (/* binding */ testConnection),\n/* harmony export */   updateOrderStatus: () => (/* binding */ updateOrderStatus)\n/* harmony export */ });\n/* harmony import */ var mysql2_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mysql2/promise */ \"(rsc)/./node_modules/mysql2/promise.js\");\n\n// Create MySQL connection pool\nconst pool = mysql2_promise__WEBPACK_IMPORTED_MODULE_0__.createPool({\n    host: process.env.DB_HOST || \"localhost\",\n    user: process.env.DB_USER || \"root\",\n    password: process.env.DB_PASSWORD || \"Goodmorning@1\",\n    database: process.env.DB_NAME || \"crumbled_nextDB\",\n    waitForConnections: true,\n    connectionLimit: 10,\n    queueLimit: 0,\n    enableKeepAlive: true,\n    keepAliveInitialDelay: 10000,\n    idleTimeout: 60000,\n    maxIdle: 5 // Maximum number of idle connections to keep\n});\n// Test connection function\nasync function testConnection() {\n    let connection;\n    try {\n        connection = await pool.getConnection();\n        const [result] = await connection.query(\"SELECT NOW() as current_time, VERSION() as mysql_version\");\n        return {\n            success: true,\n            message: \"Database connected successfully\",\n            timestamp: result[0].current_time,\n            version: result[0].mysql_version\n        };\n    } catch (error) {\n        console.error(\"Database connection failed:\", error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Unknown connection error\"\n        };\n    } finally{\n        if (connection) {\n            connection.release();\n        }\n    }\n}\nasync function saveOrder(orderData) {\n    let connection;\n    try {\n        connection = await pool.getConnection();\n        // Check if orders table exists\n        const [tableCheck] = await connection.query(\"SELECT COUNT(*) as count FROM information_schema.tables WHERE table_schema = 'crumbled_nextDB' AND table_name = 'orders'\");\n        if (tableCheck[0].count === 0) {\n            return {\n                success: false,\n                error: \"Orders table does not exist. Please set up the database first.\"\n            };\n        }\n        // Generate tracking ID if not provided\n        if (!orderData.trackingId) {\n            orderData.trackingId = `CC${Math.random().toString(36).substring(2, 10).toUpperCase()}`;\n        }\n        // Start transaction by inserting order first\n        const [orderResult] = await connection.query(`INSERT INTO orders (\n        customer_name, \n        customer_email, \n        customer_phone, \n        address, \n        city, \n        state, \n        zip_code, \n        total_amount,\n        tracking_id,\n        order_status\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, 'pending')`, [\n            orderData.customerName,\n            orderData.customerEmail,\n            orderData.customerPhone,\n            orderData.address,\n            orderData.city,\n            orderData.state,\n            orderData.zipCode,\n            orderData.totalAmount,\n            orderData.trackingId || `CC${Math.random().toString(36).substring(2, 10).toUpperCase()}`\n        ]);\n        const orderId = orderResult.insertId;\n        // Process each item and update stock\n        for (const item of orderData.items){\n            // Insert order item\n            await connection.query(`INSERT INTO order_items (\n          order_id, \n          product_id, \n          product_name, \n          quantity, \n          price, \n          is_bundle, \n          bundle_size, \n          bundle_items\n        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)`, [\n                orderId,\n                item.id,\n                item.name,\n                item.quantity,\n                item.price,\n                !!item.isBundle,\n                item.bundleSize || null,\n                item.bundleItems ? JSON.stringify(item.bundleItems) : null\n            ]);\n            // Update stock for individual items\n            if (!item.isBundle) {\n                // For regular items, reduce stock directly\n                const [stockUpdate] = await connection.query(`UPDATE stock \n           SET quantity = quantity - ?, updated_at = CURRENT_TIMESTAMP\n           WHERE product_id = ?\n           RETURNING quantity`, [\n                    item.quantity,\n                    item.id\n                ]);\n                // Check if stock went negative (optional warning)\n                if (stockUpdate.length > 0 && stockUpdate[0].quantity < 0) {\n                    console.warn(`Warning: Stock for product ${item.name} (ID: ${item.id}) went negative: ${stockUpdate[0].quantity}`);\n                }\n            } else {\n                // For bundles, reduce stock for each bundled item\n                if (item.bundleItems && Array.isArray(item.bundleItems)) {\n                    for (const bundleItem of item.bundleItems){\n                        const [stockUpdate] = await connection.query(`UPDATE stock \n               SET quantity = quantity - ?, updated_at = CURRENT_TIMESTAMP\n               WHERE product_id = ?\n               RETURNING quantity, product_name`, [\n                            item.quantity,\n                            bundleItem.id\n                        ]);\n                        if (stockUpdate.length > 0 && stockUpdate[0].quantity < 0) {\n                            console.warn(`Warning: Stock for bundled product ${stockUpdate[0].product_name} (ID: ${bundleItem.id}) went negative: ${stockUpdate[0].quantity}`);\n                        }\n                    }\n                }\n            }\n        }\n        return {\n            success: true,\n            orderId,\n            trackingId: orderData.trackingId\n        };\n    } catch (error) {\n        console.error(\"Error saving order:\", error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Database operation failed\"\n        };\n    } finally{\n        if (connection) {\n            connection.release();\n        }\n    }\n}\nasync function getOrders() {\n    let connection;\n    try {\n        connection = await pool.getConnection();\n        // Check if orders table exists\n        const [tableCheck] = await connection.query(\"SELECT COUNT(*) as count FROM information_schema.tables WHERE table_schema = 'crumbled_nextDB' AND table_name = 'orders'\");\n        if (tableCheck[0].count === 0) {\n            return {\n                success: false,\n                error: \"Orders table does not exist. Please set up the database first.\"\n            };\n        }\n        const [orders] = await connection.query(\"SELECT * FROM orders ORDER BY created_at DESC\");\n        return {\n            success: true,\n            orders\n        };\n    } catch (error) {\n        console.error(\"Error fetching orders:\", error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Database connection failed\"\n        };\n    } finally{\n        if (connection) {\n            connection.release();\n        }\n    }\n}\nasync function getOrderDetails(orderId) {\n    let connection;\n    try {\n        connection = await pool.getConnection();\n        const [order] = await connection.query(\"SELECT * FROM orders WHERE id = ?\", [\n            orderId\n        ]);\n        if (order.length === 0) {\n            return {\n                success: false,\n                error: \"Order not found\"\n            };\n        }\n        const [items] = await connection.query(\"SELECT * FROM order_items WHERE order_id = ?\", [\n            orderId\n        ]);\n        return {\n            success: true,\n            order: order[0],\n            items\n        };\n    } catch (error) {\n        console.error(\"Error fetching order details:\", error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Database operation failed\"\n        };\n    } finally{\n        if (connection) {\n            connection.release();\n        }\n    }\n}\nasync function getOrderByTracking(trackingId, email) {\n    let connection;\n    try {\n        connection = await pool.getConnection();\n        const [order] = await connection.query(\"SELECT * FROM orders WHERE tracking_id = ? AND customer_email = ?\", [\n            trackingId,\n            email\n        ]);\n        if (order.length === 0) {\n            return {\n                success: false,\n                error: \"Order not found\"\n            };\n        }\n        const [items] = await connection.query(\"SELECT * FROM order_items WHERE order_id = ?\", [\n            order[0].id\n        ]);\n        return {\n            success: true,\n            order: order[0],\n            items\n        };\n    } catch (error) {\n        console.error(\"Error fetching order by tracking:\", error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Database operation failed\"\n        };\n    } finally{\n        if (connection) {\n            connection.release();\n        }\n    }\n}\nasync function updateOrderStatus(orderId, status) {\n    let connection;\n    try {\n        connection = await pool.getConnection();\n        await connection.query(\"UPDATE orders SET order_status = ?, updated_at = CURRENT_TIMESTAMP WHERE id = ?\", [\n            status,\n            orderId\n        ]);\n        return {\n            success: true\n        };\n    } catch (error) {\n        console.error(\"Error updating order status:\", error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Database operation failed\"\n        };\n    } finally{\n        if (connection) {\n            connection.release();\n        }\n    }\n}\n// Export the pool as default\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (pool);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/db.ts\n");

/***/ }),

/***/ "(rsc)/./lib/services/databaseService.ts":
/*!*****************************************!*\
  !*** ./lib/services/databaseService.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   databaseService: () => (/* binding */ databaseService)\n/* harmony export */ });\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/db */ \"(rsc)/./lib/db.ts\");\n\nconst databaseService = {\n    async query (sql, params) {\n        let connection;\n        try {\n            connection = await _lib_db__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getConnection();\n            const [rows] = await connection.execute(sql, params);\n            return rows;\n        } catch (error) {\n            console.error(\"Database query error:\", error);\n            throw error;\n        } finally{\n            if (connection) {\n                connection.release();\n            }\n        }\n    },\n    async transaction (callback) {\n        const connection = await _lib_db__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getConnection();\n        try {\n            await connection.beginTransaction();\n            const result = await callback(connection);\n            await connection.commit();\n            return result;\n        } catch (error) {\n            await connection.rollback();\n            throw error;\n        } finally{\n            connection.release();\n        }\n    },\n    async testConnection () {\n        let connection;\n        try {\n            connection = await _lib_db__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getConnection();\n            const [result] = await connection.query(\"SELECT NOW() as current_time, VERSION() as mysql_version\");\n            return {\n                success: true,\n                data: result[0]\n            };\n        } catch (error) {\n            console.error(\"Database connection test failed:\", error);\n            return {\n                success: false,\n                error: error instanceof Error ? error.message : \"Unknown error\"\n            };\n        } finally{\n            if (connection) {\n                connection.release();\n            }\n        }\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvc2VydmljZXMvZGF0YWJhc2VTZXJ2aWNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQzRCO0FBRXJCLE1BQU1DLGtCQUFrQjtJQUM3QixNQUFNQyxPQUFlQyxHQUFXLEVBQUVDLE1BQWM7UUFDOUMsSUFBSUM7UUFDSixJQUFJO1lBQ0ZBLGFBQWEsTUFBTUwsK0NBQUlBLENBQUNNLGFBQWE7WUFDckMsTUFBTSxDQUFDQyxLQUFLLEdBQUcsTUFBTUYsV0FBV0csT0FBTyxDQUFDTCxLQUFLQztZQUM3QyxPQUFPRztRQUNULEVBQUUsT0FBT0UsT0FBTztZQUNkQyxRQUFRRCxLQUFLLENBQUMseUJBQXlCQTtZQUN2QyxNQUFNQTtRQUNSLFNBQVU7WUFDUixJQUFJSixZQUFZO2dCQUNkQSxXQUFXTSxPQUFPO1lBQ3BCO1FBQ0Y7SUFDRjtJQUVBLE1BQU1DLGFBQWVDLFFBQXNEO1FBQ3pFLE1BQU1SLGFBQWEsTUFBTUwsK0NBQUlBLENBQUNNLGFBQWE7UUFDM0MsSUFBSTtZQUNGLE1BQU1ELFdBQVdTLGdCQUFnQjtZQUNqQyxNQUFNQyxTQUFTLE1BQU1GLFNBQVNSO1lBQzlCLE1BQU1BLFdBQVdXLE1BQU07WUFDdkIsT0FBT0Q7UUFDVCxFQUFFLE9BQU9OLE9BQU87WUFDZCxNQUFNSixXQUFXWSxRQUFRO1lBQ3pCLE1BQU1SO1FBQ1IsU0FBVTtZQUNSSixXQUFXTSxPQUFPO1FBQ3BCO0lBQ0Y7SUFFQSxNQUFNTztRQUNKLElBQUliO1FBQ0osSUFBSTtZQUNGQSxhQUFhLE1BQU1MLCtDQUFJQSxDQUFDTSxhQUFhO1lBQ3JDLE1BQU0sQ0FBQ1MsT0FBTyxHQUFHLE1BQU1WLFdBQVdILEtBQUssQ0FBd0I7WUFDL0QsT0FBTztnQkFDTGlCLFNBQVM7Z0JBQ1RDLE1BQU1MLE1BQU0sQ0FBQyxFQUFFO1lBQ2pCO1FBQ0YsRUFBRSxPQUFPTixPQUFPO1lBQ2RDLFFBQVFELEtBQUssQ0FBQyxvQ0FBb0NBO1lBQ2xELE9BQU87Z0JBQ0xVLFNBQVM7Z0JBQ1RWLE9BQU9BLGlCQUFpQlksUUFBUVosTUFBTWEsT0FBTyxHQUFHO1lBQ2xEO1FBQ0YsU0FBVTtZQUNSLElBQUlqQixZQUFZO2dCQUNkQSxXQUFXTSxPQUFPO1lBQ3BCO1FBQ0Y7SUFDRjtBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jcnVtYmxlZC13ZWJzaXRlLy4vbGliL3NlcnZpY2VzL2RhdGFiYXNlU2VydmljZS50cz9iODRhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBteXNxbCBmcm9tICdteXNxbDIvcHJvbWlzZSc7XG5pbXBvcnQgcG9vbCBmcm9tICdAL2xpYi9kYic7XG5cbmV4cG9ydCBjb25zdCBkYXRhYmFzZVNlcnZpY2UgPSB7XG4gIGFzeW5jIHF1ZXJ5PFQgPSBhbnk+KHNxbDogc3RyaW5nLCBwYXJhbXM/OiBhbnlbXSk6IFByb21pc2U8VD4ge1xuICAgIGxldCBjb25uZWN0aW9uO1xuICAgIHRyeSB7XG4gICAgICBjb25uZWN0aW9uID0gYXdhaXQgcG9vbC5nZXRDb25uZWN0aW9uKCk7XG4gICAgICBjb25zdCBbcm93c10gPSBhd2FpdCBjb25uZWN0aW9uLmV4ZWN1dGUoc3FsLCBwYXJhbXMpO1xuICAgICAgcmV0dXJuIHJvd3MgYXMgVDtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRGF0YWJhc2UgcXVlcnkgZXJyb3I6JywgZXJyb3IpO1xuICAgICAgdGhyb3cgZXJyb3I7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGlmIChjb25uZWN0aW9uKSB7XG4gICAgICAgIGNvbm5lY3Rpb24ucmVsZWFzZSgpO1xuICAgICAgfVxuICAgIH1cbiAgfSxcblxuICBhc3luYyB0cmFuc2FjdGlvbjxUPihjYWxsYmFjazogKGNvbm5lY3Rpb246IG15c3FsLkNvbm5lY3Rpb24pID0+IFByb21pc2U8VD4pOiBQcm9taXNlPFQ+IHtcbiAgICBjb25zdCBjb25uZWN0aW9uID0gYXdhaXQgcG9vbC5nZXRDb25uZWN0aW9uKCk7XG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IGNvbm5lY3Rpb24uYmVnaW5UcmFuc2FjdGlvbigpO1xuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgY2FsbGJhY2soY29ubmVjdGlvbik7XG4gICAgICBhd2FpdCBjb25uZWN0aW9uLmNvbW1pdCgpO1xuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgYXdhaXQgY29ubmVjdGlvbi5yb2xsYmFjaygpO1xuICAgICAgdGhyb3cgZXJyb3I7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGNvbm5lY3Rpb24ucmVsZWFzZSgpO1xuICAgIH1cbiAgfSxcblxuICBhc3luYyB0ZXN0Q29ubmVjdGlvbigpIHtcbiAgICBsZXQgY29ubmVjdGlvbjtcbiAgICB0cnkge1xuICAgICAgY29ubmVjdGlvbiA9IGF3YWl0IHBvb2wuZ2V0Q29ubmVjdGlvbigpO1xuICAgICAgY29uc3QgW3Jlc3VsdF0gPSBhd2FpdCBjb25uZWN0aW9uLnF1ZXJ5PG15c3FsLlJvd0RhdGFQYWNrZXRbXT4oJ1NFTEVDVCBOT1coKSBhcyBjdXJyZW50X3RpbWUsIFZFUlNJT04oKSBhcyBteXNxbF92ZXJzaW9uJyk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgICBkYXRhOiByZXN1bHRbMF1cbiAgICAgIH07XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0RhdGFiYXNlIGNvbm5lY3Rpb24gdGVzdCBmYWlsZWQ6JywgZXJyb3IpO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIGVycm9yOiBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6ICdVbmtub3duIGVycm9yJ1xuICAgICAgfTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgaWYgKGNvbm5lY3Rpb24pIHtcbiAgICAgICAgY29ubmVjdGlvbi5yZWxlYXNlKCk7XG4gICAgICB9XG4gICAgfVxuICB9XG59OyAiXSwibmFtZXMiOlsicG9vbCIsImRhdGFiYXNlU2VydmljZSIsInF1ZXJ5Iiwic3FsIiwicGFyYW1zIiwiY29ubmVjdGlvbiIsImdldENvbm5lY3Rpb24iLCJyb3dzIiwiZXhlY3V0ZSIsImVycm9yIiwiY29uc29sZSIsInJlbGVhc2UiLCJ0cmFuc2FjdGlvbiIsImNhbGxiYWNrIiwiYmVnaW5UcmFuc2FjdGlvbiIsInJlc3VsdCIsImNvbW1pdCIsInJvbGxiYWNrIiwidGVzdENvbm5lY3Rpb24iLCJzdWNjZXNzIiwiZGF0YSIsIkVycm9yIiwibWVzc2FnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./lib/services/databaseService.ts\n");

/***/ }),

/***/ "(rsc)/./lib/services/emailService.ts":
/*!**************************************!*\
  !*** ./lib/services/emailService.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   emailService: () => (/* binding */ emailService)\n/* harmony export */ });\n/* harmony import */ var nodemailer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nodemailer */ \"(rsc)/../../node_modules/nodemailer/lib/nodemailer.js\");\n/* harmony import */ var _databaseService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./databaseService */ \"(rsc)/./lib/services/databaseService.ts\");\n\n\nclass EmailService {\n    constructor(){\n        this.settings = null;\n        this.transporter = null;\n    }\n    static getInstance() {\n        if (!EmailService.instance) {\n            EmailService.instance = new EmailService();\n        }\n        return EmailService.instance;\n    }\n    async loadSettings() {\n        if (this.settings) return;\n        const [settings] = await _databaseService__WEBPACK_IMPORTED_MODULE_1__.databaseService.query(\"SELECT * FROM email_settings WHERE is_active = true ORDER BY id DESC LIMIT 1\");\n        if (settings.length === 0) {\n            throw new Error(\"No active email settings found\");\n        }\n        const emailSettings = settings[0];\n        this.settings = emailSettings;\n        if (emailSettings.use_ssl) {\n            this.transporter = nodemailer__WEBPACK_IMPORTED_MODULE_0__.createTransport({\n                host: emailSettings.smtp_host,\n                port: emailSettings.smtp_port,\n                secure: true,\n                auth: {\n                    user: emailSettings.smtp_username,\n                    pass: emailSettings.smtp_password\n                },\n                tls: {\n                    rejectUnauthorized: true,\n                    ciphers: \"SSLv3\"\n                }\n            });\n        } else if (emailSettings.use_tls) {\n            this.transporter = nodemailer__WEBPACK_IMPORTED_MODULE_0__.createTransport({\n                host: emailSettings.smtp_host,\n                port: emailSettings.smtp_port,\n                secure: false,\n                auth: {\n                    user: emailSettings.smtp_username,\n                    pass: emailSettings.smtp_password\n                },\n                tls: {\n                    rejectUnauthorized: true,\n                    ciphers: \"SSLv3\"\n                }\n            });\n        } else {\n            // Unencrypted connection (not recommended)\n            this.transporter = nodemailer__WEBPACK_IMPORTED_MODULE_0__.createTransport({\n                host: emailSettings.smtp_host,\n                port: emailSettings.smtp_port,\n                secure: false,\n                auth: {\n                    user: emailSettings.smtp_username,\n                    pass: emailSettings.smtp_password\n                }\n            });\n        }\n    }\n    async sendEmail(options) {\n        try {\n            await this.loadSettings();\n            if (!this.transporter || !this.settings) {\n                throw new Error(\"Email service not properly initialized\");\n            }\n            const mailOptions = {\n                from: `\"${this.settings.from_name}\" <${this.settings.from_email}>`,\n                to: Array.isArray(options.to) ? options.to.join(\", \") : options.to,\n                subject: options.subject,\n                text: options.text,\n                html: options.html\n            };\n            const info = await this.transporter.sendMail(mailOptions);\n            return info;\n        } catch (error) {\n            console.error(\"Error sending email:\", error);\n            throw error;\n        }\n    }\n    async sendVerificationEmail(to, token) {\n        const verificationUrl = `${process.env.NEXT_PUBLIC_APP_URL}/verify-email?token=${token}`;\n        await this.sendEmail({\n            to,\n            subject: \"Verify Your Email Address\",\n            html: `\n        <h1>Welcome to Crumbled!</h1>\n        <p>Please verify your email address by clicking the link below:</p>\n        <p>\n          <a href=\"${verificationUrl}\" style=\"\n            display: inline-block;\n            padding: 12px 24px;\n            background-color: #ec4899;\n            color: white;\n            text-decoration: none;\n            border-radius: 6px;\n            font-weight: 500;\n          \">\n            Verify Email Address\n          </a>\n        </p>\n        <p>If you did not create an account, you can safely ignore this email.</p>\n        <hr>\n        <p><small>This is an automated message, please do not reply.</small></p>\n      `\n        });\n    }\n    async sendPasswordResetEmail(to, token) {\n        const resetUrl = `${process.env.NEXT_PUBLIC_APP_URL}/reset-password?token=${token}`;\n        await this.sendEmail({\n            to,\n            subject: \"Reset Your Password\",\n            html: `\n        <h1>Password Reset Request</h1>\n        <p>You requested to reset your password. Click the link below to proceed:</p>\n        <p>\n          <a href=\"${resetUrl}\" style=\"\n            display: inline-block;\n            padding: 12px 24px;\n            background-color: #ec4899;\n            color: white;\n            text-decoration: none;\n            border-radius: 6px;\n            font-weight: 500;\n          \">\n            Reset Password\n          </a>\n        </p>\n        <p>If you did not request a password reset, you can safely ignore this email.</p>\n        <hr>\n        <p><small>This is an automated message, please do not reply.</small></p>\n      `\n        });\n    }\n    async sendOrderConfirmationEmail(to, orderId, orderDetails) {\n        const logoUrl = `${process.env.NEXT_PUBLIC_APP_URL}/images/logo-with-background.jpg`;\n        await this.sendEmail({\n            to,\n            subject: `Order Confirmation - Order #${orderId}`,\n            html: `\n        <!DOCTYPE html>\n        <html lang=\"en\">\n        <head>\n          <meta charset=\"UTF-8\">\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n          <title>Order Confirmation</title>\n          <style>\n            body { \n              font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; \n              line-height: 1.6; \n              color: #333; \n              margin: 0; \n              padding: 0; \n              background-color: #fdf2f8;\n            }\n            .container { \n              max-width: 600px; \n              margin: 0 auto; \n              background: white; \n              border-radius: 12px; \n              overflow: hidden; \n              box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n            }\n            .header { \n              background: linear-gradient(135deg, #ec4899 0%, #be185d 100%); \n              padding: 30px; \n              text-align: center; \n              color: white;\n            }\n            .logo { \n              max-width: 200px; \n              height: auto; \n              margin-bottom: 20px;\n            }\n            .content { \n              padding: 40px 30px; \n            }\n            .order-number { \n              background: #fdf2f8; \n              padding: 20px; \n              border-radius: 8px; \n              text-align: center; \n              margin-bottom: 30px;\n              border-left: 4px solid #ec4899;\n            }\n            .order-number h2 { \n              margin: 0; \n              color: #ec4899; \n              font-size: 24px;\n            }\n            .order-number p { \n              margin: 5px 0 0 0; \n              color: #666; \n              font-size: 14px;\n            }\n            .section { \n              margin-bottom: 30px; \n            }\n            .section h3 { \n              color: #ec4899; \n              border-bottom: 2px solid #fdf2f8; \n              padding-bottom: 10px; \n              margin-bottom: 20px;\n            }\n            .item { \n              display: flex; \n              justify-content: space-between; \n              align-items: center; \n              padding: 15px 0; \n              border-bottom: 1px solid #f3f4f6;\n            }\n            .item:last-child { \n              border-bottom: none; \n            }\n            .item-details { \n              flex: 1; \n            }\n            .item-name { \n              font-weight: 600; \n              color: #1f2937; \n              margin-bottom: 5px;\n            }\n            .item-description { \n              color: #6b7280; \n              font-size: 14px; \n              margin-bottom: 5px;\n            }\n            .item-price { \n              font-weight: 600; \n              color: #ec4899; \n              text-align: right;\n            }\n            .totals { \n              background: #fdf2f8; \n              padding: 20px; \n              border-radius: 8px; \n              margin-top: 20px;\n            }\n            .total-row { \n              display: flex; \n              justify-content: space-between; \n              margin-bottom: 10px; \n            }\n            .total-row:last-child { \n              margin-bottom: 0; \n              padding-top: 10px; \n              border-top: 1px solid #e5e7eb; \n              font-weight: 600; \n              font-size: 18px; \n              color: #ec4899;\n            }\n            .delivery-info { \n              background: #f0f9ff; \n              padding: 20px; \n              border-radius: 8px; \n              border-left: 4px solid #0ea5e9;\n            }\n            .delivery-info h4 { \n              margin: 0 0 10px 0; \n              color: #0ea5e9; \n            }\n            .delivery-info p { \n              margin: 5px 0; \n              color: #374151;\n            }\n            .footer { \n              background: #f9fafb; \n              padding: 30px; \n              text-align: center; \n              color: #6b7280;\n            }\n            .footer a { \n              color: #ec4899; \n              text-decoration: none;\n            }\n            .status-badge { \n              display: inline-block; \n              padding: 4px 12px; \n              border-radius: 20px; \n              font-size: 12px; \n              font-weight: 600; \n              text-transform: uppercase;\n            }\n            .status-confirmed { \n              background: #dcfce7; \n              color: #166534;\n            }\n            .status-pending { \n              background: #fef3c7; \n              color: #92400e;\n            }\n            .payment-method { \n              display: inline-block; \n              padding: 4px 12px; \n              border-radius: 20px; \n              font-size: 12px; \n              font-weight: 600; \n              text-transform: uppercase;\n            }\n            .payment-cod { \n              background: #fef3c7; \n              color: #92400e;\n            }\n            .payment-paymob { \n              background: #dcfce7; \n              color: #166534;\n            }\n          </style>\n        </head>\n        <body>\n          <div class=\"container\">\n            <div class=\"header\">\n              <img src=\"${logoUrl}\" alt=\"Crumbled Logo\" class=\"logo\">\n              <h1 style=\"margin: 0; font-size: 28px;\">Thank You for Your Order!</h1>\n              <p style=\"margin: 10px 0 0 0; opacity: 0.9;\">Your order has been received and is being processed</p>\n            </div>\n            \n            <div class=\"content\">\n              <div class=\"order-number\">\n                <h2>Order #${orderId}</h2>\n                <p>Placed on ${new Date().toLocaleDateString(\"en-US\", {\n                year: \"numeric\",\n                month: \"long\",\n                day: \"numeric\",\n                hour: \"2-digit\",\n                minute: \"2-digit\"\n            })}</p>\n                <span class=\"status-badge status-${orderDetails.status === \"Confirmed\" ? \"confirmed\" : \"pending\"}\">\n                  ${orderDetails.status}\n                </span>\n                <span class=\"payment-method payment-${orderDetails.paymentMethod === \"cod\" ? \"cod\" : \"paymob\"}\">\n                  ${orderDetails.paymentMethod === \"cod\" ? \"Cash on Delivery\" : \"Online Payment\"}\n                </span>\n              </div>\n\n              <div class=\"section\">\n                <h3>Order Items</h3>\n                ${orderDetails.items.map((item)=>`\n                  <div class=\"item\">\n                    <div class=\"item-details\">\n                      <div class=\"item-name\">${item.name}</div>\n                      ${item.flavorDetails ? `<div class=\"item-description\">${item.flavorDetails}</div>` : \"\"}\n                      <div class=\"item-description\">Quantity: ${item.quantity}</div>\n                    </div>\n                    <div class=\"item-price\">$${item.total.toFixed(2)}</div>\n                  </div>\n                `).join(\"\")}\n              </div>\n\n              <div class=\"totals\">\n                <div class=\"total-row\">\n                  <span>Subtotal:</span>\n                  <span>$${orderDetails.subtotal.toFixed(2)}</span>\n                </div>\n                <div class=\"total-row\">\n                  <span>Delivery Fee:</span>\n                  <span>$${orderDetails.deliveryFee.toFixed(2)}</span>\n                </div>\n                <div class=\"total-row\">\n                  <span>Total:</span>\n                  <span>$${orderDetails.total.toFixed(2)}</span>\n                </div>\n              </div>\n\n              <div class=\"section\">\n                <h3>Delivery Information</h3>\n                <div class=\"delivery-info\">\n                  <h4>${orderDetails.customerInfo.name}</h4>\n                  <p>${orderDetails.deliveryAddress.street_address}</p>\n                  ${orderDetails.deliveryAddress.additional_info ? `<p>${orderDetails.deliveryAddress.additional_info}</p>` : \"\"}\n                  <p>${orderDetails.deliveryAddress.city_name}, ${orderDetails.deliveryAddress.zone_name}</p>\n                  <p>Phone: ${orderDetails.customerInfo.phone}</p>\n                  <p>Email: ${orderDetails.customerInfo.email}</p>\n                </div>\n              </div>\n\n              ${orderDetails.paymentMethod === \"cod\" ? `\n                <div class=\"section\">\n                  <h3>Payment Information</h3>\n                  <p>You have chosen <strong>Cash on Delivery</strong> as your payment method. Please have the exact amount ready when your order arrives.</p>\n                  <p><strong>Total Amount Due:</strong> $${orderDetails.total.toFixed(2)}</p>\n                </div>\n              ` : `\n                <div class=\"section\">\n                  <h3>Payment Information</h3>\n                  <p>Your payment has been processed successfully through our secure payment gateway.</p>\n                  <p><strong>Payment Status:</strong> <span class=\"status-badge status-confirmed\">Paid</span></p>\n                </div>\n              `}\n\n              <div class=\"section\">\n                <h3>What's Next?</h3>\n                <p>We'll notify you when your order is being prepared and when it's out for delivery. You can track your order status by contacting our customer service.</p>\n                <p>If you have any questions about your order, please don't hesitate to contact us.</p>\n              </div>\n            </div>\n\n            <div class=\"footer\">\n              <p>Thank you for choosing Crumbled!</p>\n              <p>For support, contact us at <a href=\"mailto:support@crumbled.com\">support@crumbled.com</a></p>\n              <p style=\"font-size: 12px; margin-top: 20px;\">\n                This is an automated message, please do not reply to this email.\n              </p>\n            </div>\n          </div>\n        </body>\n        </html>\n      `\n        });\n    }\n}\nconst emailService = EmailService.getInstance();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/services/emailService.ts\n");

/***/ }),

/***/ "(rsc)/./lib/services/paymobService.ts":
/*!***************************************!*\
  !*** ./lib/services/paymobService.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   paymobService: () => (/* binding */ paymobService)\n/* harmony export */ });\nclass PaymobService {\n    constructor(){\n        this.config = {\n            apiKey: process.env.PAYMOB_API_KEY || \"\",\n            integrationId: parseInt(process.env.PAYMOB_INTEGRATION_ID || \"0\"),\n            iframeId: process.env.PAYMOB_IFRAME_ID ? parseInt(process.env.PAYMOB_IFRAME_ID) : undefined,\n            baseUrl: process.env.PAYMOB_BASE_URL || \"https://accept.paymob.com/api\"\n        };\n    }\n    async getAuthToken() {\n        try {\n            const response = await fetch(`${this.config.baseUrl}/auth/tokens`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    api_key: this.config.apiKey\n                })\n            });\n            if (!response.ok) {\n                throw new Error(`Paymob auth failed: ${response.statusText}`);\n            }\n            const data = await response.json();\n            return data.token;\n        } catch (error) {\n            console.error(\"Paymob auth error:\", error);\n            throw new Error(\"Failed to authenticate with Paymob\");\n        }\n    }\n    async createOrder(orderData) {\n        try {\n            const authToken = await this.getAuthToken();\n            const orderRequest = {\n                auth_token: authToken,\n                delivery_needed: orderData.delivery_needed || false,\n                amount_cents: Math.round(orderData.amount * 100),\n                currency: \"EGP\",\n                items: orderData.items.map((item)=>({\n                        ...item,\n                        amount_cents: Math.round(item.amount * 100)\n                    }))\n            };\n            const response = await fetch(`${this.config.baseUrl}/ecommerce/orders`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(orderRequest)\n            });\n            if (!response.ok) {\n                throw new Error(`Paymob order creation failed: ${response.statusText}`);\n            }\n            const data = await response.json();\n            return data;\n        } catch (error) {\n            console.error(\"Paymob order creation error:\", error);\n            throw new Error(\"Failed to create Paymob order\");\n        }\n    }\n    async generatePaymentKey(orderData) {\n        try {\n            const authToken = await this.getAuthToken();\n            const callbackUrl = `${process.env.NEXT_PUBLIC_APP_URL}/payment/callback`;\n            const paymentKeyRequest = {\n                auth_token: authToken,\n                amount_cents: Math.round(orderData.amount * 100),\n                expiration: 3600,\n                order_id: orderData.orderId,\n                billing_data: {\n                    apartment: orderData.billingData.apartment || \"NA\",\n                    email: orderData.billingData.email,\n                    floor: orderData.billingData.floor || \"NA\",\n                    first_name: orderData.billingData.first_name,\n                    street: orderData.billingData.street,\n                    building: orderData.billingData.building || \"NA\",\n                    phone_number: orderData.billingData.phone_number,\n                    shipping_method: \"NA\",\n                    postal_code: orderData.billingData.postal_code || \"NA\",\n                    city: orderData.billingData.city,\n                    country: orderData.billingData.country,\n                    last_name: orderData.billingData.last_name,\n                    state: orderData.billingData.state || \"NA\"\n                },\n                currency: \"EGP\",\n                integration_id: this.config.integrationId,\n                lock_order_when_paid: true\n            };\n            const response = await fetch(`${this.config.baseUrl}/acceptance/payment_keys`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(paymentKeyRequest)\n            });\n            if (!response.ok) {\n                throw new Error(`Paymob payment key generation failed: ${response.statusText}`);\n            }\n            const data = await response.json();\n            return data;\n        } catch (error) {\n            console.error(\"Paymob payment key error:\", error);\n            throw new Error(\"Failed to generate Paymob payment key\");\n        }\n    }\n    getPaymentUrl(paymentKey) {\n        // For redirect flow, use the direct payment URL\n        // If iframe ID is provided, use iframe URL, otherwise use redirect URL\n        if (this.config.iframeId) {\n            return `https://accept.paymob.com/api/acceptance/iframes/${this.config.iframeId}?payment_token=${paymentKey}`;\n        } else {\n            // Redirect flow - direct payment URL\n            return `https://accept.paymob.com/api/acceptance/payments/pay?payment_token=${paymentKey}`;\n        }\n    }\n    async verifyTransaction(transactionId) {\n        try {\n            const authToken = await this.getAuthToken();\n            const response = await fetch(`${this.config.baseUrl}/acceptance/transactions/${transactionId}`, {\n                method: \"GET\",\n                headers: {\n                    \"Authorization\": `Bearer ${authToken}`,\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            if (!response.ok) {\n                throw new Error(`Paymob transaction verification failed: ${response.statusText}`);\n            }\n            const data = await response.json();\n            return data;\n        } catch (error) {\n            console.error(\"Paymob transaction verification error:\", error);\n            throw new Error(\"Failed to verify Paymob transaction\");\n        }\n    }\n}\nconst paymobService = new PaymobService();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/services/paymobService.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/mysql2","vendor-chunks/aws-ssl-profiles","vendor-chunks/next","vendor-chunks/iconv-lite","vendor-chunks/long","vendor-chunks/named-placeholders","vendor-chunks/denque","vendor-chunks/is-property","vendor-chunks/lru.min","vendor-chunks/sqlstring","vendor-chunks/seq-queue","vendor-chunks/generate-function","vendor-chunks/safer-buffer","vendor-chunks/next-auth","vendor-chunks/openid-client","vendor-chunks/bcryptjs","vendor-chunks/oauth","vendor-chunks/@babel","vendor-chunks/object-hash","vendor-chunks/preact","vendor-chunks/preact-render-to-string","vendor-chunks/oidc-token-hash","vendor-chunks/@panva","vendor-chunks/uuid","vendor-chunks/nodemailer"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcheckout%2Fpayment%2Froute&page=%2Fapi%2Fcheckout%2Fpayment%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcheckout%2Fpayment%2Froute.ts&appDir=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();