/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/admin/orders/route";
exports.ids = ["app/api/admin/orders/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/mysql2/lib sync recursive ^cardinal.*$":
/*!****************************************************!*\
  !*** ./node_modules/mysql2/lib/ sync ^cardinal.*$ ***!
  \****************************************************/
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => ([]);
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "(rsc)/./node_modules/mysql2/lib sync recursive ^cardinal.*$";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "process":
/*!**************************!*\
  !*** external "process" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("process");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "string_decoder":
/*!*********************************!*\
  !*** external "string_decoder" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("string_decoder");

/***/ }),

/***/ "timers":
/*!*************************!*\
  !*** external "timers" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("timers");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fadmin%2Forders%2Froute&page=%2Fapi%2Fadmin%2Forders%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fadmin%2Forders%2Froute.ts&appDir=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fadmin%2Forders%2Froute&page=%2Fapi%2Fadmin%2Forders%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fadmin%2Forders%2Froute.ts&appDir=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_ASUS_AngularWebApp_crumbled_website_app_api_admin_orders_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/admin/orders/route.ts */ \"(rsc)/./app/api/admin/orders/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/admin/orders/route\",\n        pathname: \"/api/admin/orders\",\n        filename: \"route\",\n        bundlePath: \"app/api/admin/orders/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\ASUS\\\\AngularWebApp\\\\crumbled-website\\\\app\\\\api\\\\admin\\\\orders\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_ASUS_AngularWebApp_crumbled_website_app_api_admin_orders_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/admin/orders/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZhZG1pbiUyRm9yZGVycyUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGYWRtaW4lMkZvcmRlcnMlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZhZG1pbiUyRm9yZGVycyUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNBU1VTJTVDQW5ndWxhcldlYkFwcCU1Q2NydW1ibGVkLXdlYnNpdGUlNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUMlM0ElNUNVc2VycyU1Q0FTVVMlNUNBbmd1bGFyV2ViQXBwJTVDY3J1bWJsZWQtd2Vic2l0ZSZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD1zdGFuZGFsb25lJnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ21DO0FBQ2hIO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY3J1bWJsZWQtd2Vic2l0ZS8/YmNkYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCJDOlxcXFxVc2Vyc1xcXFxBU1VTXFxcXEFuZ3VsYXJXZWJBcHBcXFxcY3J1bWJsZWQtd2Vic2l0ZVxcXFxhcHBcXFxcYXBpXFxcXGFkbWluXFxcXG9yZGVyc1xcXFxyb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJzdGFuZGFsb25lXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2FkbWluL29yZGVycy9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2FkbWluL29yZGVyc1wiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvYWRtaW4vb3JkZXJzL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiQzpcXFxcVXNlcnNcXFxcQVNVU1xcXFxBbmd1bGFyV2ViQXBwXFxcXGNydW1ibGVkLXdlYnNpdGVcXFxcYXBwXFxcXGFwaVxcXFxhZG1pblxcXFxvcmRlcnNcXFxccm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL2FkbWluL29yZGVycy9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fadmin%2Forders%2Froute&page=%2Fapi%2Fadmin%2Forders%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fadmin%2Forders%2Froute.ts&appDir=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/admin/orders/route.ts":
/*!***************************************!*\
  !*** ./app/api/admin/orders/route.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   PATCH: () => (/* binding */ PATCH)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_services_databaseService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/services/databaseService */ \"(rsc)/./lib/services/databaseService.ts\");\n/* harmony import */ var _lib_middleware_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/middleware/auth */ \"(rsc)/./lib/middleware/auth.ts\");\n\n\n\nconst db = _lib_services_databaseService__WEBPACK_IMPORTED_MODULE_1__.databaseService;\n// Helper function to safely extract arrays from database query results\nfunction safeExtractArray(result) {\n    if (Array.isArray(result)) {\n        return result;\n    }\n    if (result && Array.isArray(result[0])) {\n        return result[0];\n    }\n    if (result && typeof result === \"object\" && result[0]) {\n        return Array.isArray(result[0]) ? result[0] : [];\n    }\n    return [];\n}\nasync function GET(request) {\n    try {\n        // Verify admin authentication\n        const token = request.cookies.get(\"adminToken\")?.value;\n        if (!token) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Unauthorized\"\n            }, {\n                status: 401\n            });\n        }\n        const decoded = await (0,_lib_middleware_auth__WEBPACK_IMPORTED_MODULE_2__.verifyJWT)(token);\n        if (!decoded || decoded.type !== \"admin\") {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Unauthorized\"\n            }, {\n                status: 401\n            });\n        }\n        // Get pagination parameters\n        const { searchParams } = new URL(request.url);\n        const page = parseInt(searchParams.get(\"page\") || \"1\");\n        const limit = parseInt(searchParams.get(\"limit\") || \"10\");\n        const offset = (page - 1) * limit;\n        // Ensure parameters are valid numbers\n        if (isNaN(page) || isNaN(limit) || isNaN(offset)) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Invalid pagination parameters\"\n            }, {\n                status: 400\n            });\n        }\n        // Get total count for pagination\n        const countSql = `\n      SELECT COUNT(*) as total\n      FROM orders o\n      LEFT JOIN customers c ON o.customer_id = c.id\n    `;\n        const countResult = await db.query(countSql);\n        const totalOrders = safeExtractArray(countResult)[0]?.total || 0;\n        const totalPages = Math.ceil(totalOrders / limit);\n        // Fetch orders with customer information and pagination\n        // Use string interpolation for LIMIT and OFFSET since they are safe numeric values\n        const sql = `\n      SELECT \n        o.id,\n        o.total,\n        o.status,\n        o.created_at,\n        o.payment_method,\n        o.guest_otp,\n        o.otp_verified,\n        o.customer_id,\n        o.customer_phone,\n        o.delivery_address,\n        o.delivery_city,\n        o.delivery_zone,\n        o.zone,\n        o.delivery_fee,\n        o.subtotal,\n        c.id as customer_id_from_customers,\n        CONCAT(c.first_name, ' ', c.last_name) as customer_name,\n        c.email as customer_email,\n        COALESCE(c.phone, o.customer_phone) as customer_phone,\n        COALESCE(z.delivery_days, 0) as delivery_days,\n        dts.name as delivery_time_slot_name,\n        dts.from_hour,\n        dts.to_hour,\n        CASE \n          WHEN COALESCE(z.delivery_days, 0) > 0 THEN \n            DATE_ADD(o.created_at, INTERVAL z.delivery_days DAY)\n          ELSE NULL\n        END as expected_delivery_date\n      FROM orders o\n      LEFT JOIN customers c ON o.customer_id = c.id\n      LEFT JOIN zones z ON TRIM(o.delivery_zone) COLLATE utf8mb4_general_ci = TRIM(z.name) COLLATE utf8mb4_general_ci\n      LEFT JOIN delivery_time_slots dts ON z.time_slot_id = dts.id\n      ORDER BY o.created_at DESC\n      LIMIT ${limit} OFFSET ${offset}\n    `;\n        console.log(\"\\uD83D\\uDD0D [DEBUG] Query with interpolated values - limit:\", limit, \"offset:\", offset);\n        console.log(\"\\uD83D\\uDD0D [DEBUG] Final SQL:\", sql);\n        const ordersResult = await db.query(sql, []);\n        console.log(\"Orders query result:\", ordersResult);\n        console.log(\"Orders result type:\", typeof ordersResult);\n        console.log(\"Orders result length:\", Array.isArray(ordersResult) ? ordersResult.length : \"Not an array\");\n        // Extract orders from the result - handle different possible structures\n        const orders = safeExtractArray(ordersResult);\n        // Debug: Check first order's delivery info\n        if (orders.length > 0) {\n            const firstOrder = orders[0];\n            console.log(\"\\uD83D\\uDD0D [DEBUG] First order delivery info:\", {\n                delivery_zone: firstOrder.delivery_zone,\n                delivery_days: firstOrder.delivery_days,\n                delivery_time_slot_name: firstOrder.delivery_time_slot_name,\n                from_hour: firstOrder.from_hour,\n                to_hour: firstOrder.to_hour,\n                expected_delivery_date: firstOrder.expected_delivery_date\n            });\n        }\n        console.log(\"Extracted orders:\", orders);\n        console.log(\"Orders type:\", typeof orders);\n        console.log(\"Orders is array:\", Array.isArray(orders));\n        console.log(\"Orders length:\", orders.length);\n        // For each order, fetch the order items\n        const ordersWithItems = await Promise.all(orders.map(async (order)=>{\n            try {\n                // Fetch order items\n                console.log(`🔍 [DEBUG] Fetching order items for order ${order.id}`);\n                // Try the new schema first (product_instance based)\n                let orderItemsResult = await db.query(`\n            SELECT \n              oi.id,\n              oi.quantity,\n              oi.unit_price,\n              oi.product_instance_id,\n              pi.product_type,\n              pi.product_id,\n              pi.size_id,\n              cs.label as size_label,\n              CASE \n                WHEN pi.product_type = 'cookie_pack' THEN \n                  CASE \n                    WHEN pr.name IS NOT NULL THEN pr.name\n                    WHEN pi.product_id BETWEEN 1 AND 100 THEN 'Custom Cookie Pack'\n                    ELSE 'Cookie Pack'\n                  END\n                WHEN pi.product_type = 'beverage' THEN COALESCE(p.name, 'Beverage')\n                WHEN pi.product_type = 'cake' THEN COALESCE(p.name, 'Cake')\n                ELSE 'Product'\n              END as product_name\n            FROM order_items oi\n            LEFT JOIN product_instance pi ON oi.product_instance_id = pi.id\n            LEFT JOIN cookie_size cs ON pi.size_id = cs.id\n            LEFT JOIN products pr ON pi.product_id = pr.id AND pi.product_type = 'cookie_pack'\n            LEFT JOIN products p ON pi.product_id = p.id AND pi.product_type IN ('beverage', 'cake')\n            WHERE oi.order_id = ?\n          `, [\n                    order.id\n                ]);\n                let orderItems = safeExtractArray(orderItemsResult);\n                console.log(`🔍 [DEBUG] New schema order items result for order ${order.id}:`, orderItems);\n                // If no items found with new schema, try old schema\n                if (orderItems.length === 0) {\n                    console.log(`🔍 [DEBUG] No items found with new schema, trying old schema for order ${order.id}`);\n                    orderItemsResult = await db.query(`\n              SELECT \n                oi.id,\n                oi.quantity,\n                oi.unit_price,\n                'legacy' as product_type,\n                oi.product_instance_id as product_id,\n                1 as size_id,\n                'Standard' as size_label,\n                'Legacy Product' as product_name\n              FROM order_items oi\n              WHERE oi.order_id = ?\n            `, [\n                        order.id\n                    ]);\n                    orderItems = safeExtractArray(orderItemsResult);\n                    console.log(`🔍 [DEBUG] Old schema order items result for order ${order.id}:`, orderItems);\n                }\n                console.log(`🔍 [DEBUG] Final order items for order ${order.id}:`, orderItems);\n                // Get flavors for cookie packs\n                const itemsWithFlavors = await Promise.all(orderItems.map(async (item)=>{\n                    try {\n                        if (item.product_type === \"cookie_pack\") {\n                            const flavorsResult = await db.query(`\n                    SELECT \n                      f.name as flavor_name,\n                      pif.quantity as flavor_quantity,\n                      cs.label as size_label\n                    FROM product_instance_flavor pif\n                    LEFT JOIN flavors f ON pif.flavor_id = f.id\n                    LEFT JOIN cookie_size cs ON pif.size_id = cs.id\n                    WHERE pif.product_instance_id = ?\n                  `, [\n                                item.product_instance_id\n                            ]);\n                            const flavors = safeExtractArray(flavorsResult);\n                            return {\n                                ...item,\n                                flavors: flavors\n                            };\n                        }\n                        return item;\n                    } catch (flavorError) {\n                        console.error(`Error fetching flavors for item ${item.id}:`, flavorError);\n                        return {\n                            ...item,\n                            flavors: []\n                        };\n                    }\n                }));\n                return {\n                    ...order,\n                    items: itemsWithFlavors\n                };\n            } catch (itemError) {\n                console.error(`Error fetching items for order ${order.id}:`, itemError);\n                return {\n                    ...order,\n                    items: []\n                };\n            }\n        }));\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            orders: ordersWithItems,\n            pagination: {\n                currentPage: page,\n                totalPages,\n                totalOrders,\n                limit,\n                hasNextPage: page < totalPages,\n                hasPrevPage: page > 1\n            }\n        });\n    } catch (error) {\n        console.error(\"Error fetching orders:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to fetch orders\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function PATCH(request) {\n    try {\n        // Verify admin authentication\n        const token = request.cookies.get(\"adminToken\")?.value;\n        if (!token) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Unauthorized\"\n            }, {\n                status: 401\n            });\n        }\n        const decoded = await (0,_lib_middleware_auth__WEBPACK_IMPORTED_MODULE_2__.verifyJWT)(token);\n        if (!decoded || decoded.type !== \"admin\") {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Unauthorized\"\n            }, {\n                status: 401\n            });\n        }\n        const { orderId, status } = await request.json();\n        if (!orderId || !status) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Order ID and status are required\"\n            }, {\n                status: 400\n            });\n        }\n        // Update order status\n        await db.query(\"UPDATE orders SET status = ? WHERE id = ?\", [\n            status,\n            orderId\n        ]);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            message: \"Order status updated successfully\"\n        });\n    } catch (error) {\n        console.error(\"Error updating order status:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to update order status\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/admin/orders/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/auth-config.ts":
/*!****************************!*\
  !*** ./lib/auth-config.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authConfig: () => (/* binding */ authConfig),\n/* harmony export */   getJwtSecret: () => (/* binding */ getJwtSecret),\n/* harmony export */   validateAuthConfig: () => (/* binding */ validateAuthConfig),\n/* harmony export */   validatePassword: () => (/* binding */ validatePassword)\n/* harmony export */ });\n// Authentication configuration with separate secrets for customer and admin\nconst authConfig = {\n    // JWT Secrets - MUST be set in environment variables\n    customerJwtSecret: process.env.CUSTOMER_JWT_SECRET,\n    adminJwtSecret: process.env.ADMIN_JWT_SECRET,\n    // Fallback secrets (for development only)\n    fallbackCustomerSecret: \"customer-dev-secret-change-in-production\",\n    fallbackAdminSecret: \"admin-dev-secret-change-in-production\",\n    // Token expiration times (in seconds)\n    customerTokenExpiry: 24 * 60 * 60,\n    adminTokenExpiry: 7 * 24 * 60 * 60,\n    refreshTokenExpiry: 30 * 24 * 60 * 60,\n    // Rate limiting\n    maxLoginAttempts: 5,\n    lockoutDuration: 15 * 60,\n    // Password requirements\n    minPasswordLength: 8,\n    requireUppercase: true,\n    requireLowercase: true,\n    requireNumbers: true,\n    requireSpecialChars: false,\n    // Session management\n    sessionTimeout: 30 * 60,\n    maxConcurrentSessions: 3,\n    // Cookie settings\n    cookieSettings: {\n        httpOnly: true,\n        secure: \"development\" === \"production\",\n        sameSite: \"strict\",\n        path: \"/\"\n    }\n};\n// Validate environment variables\nfunction validateAuthConfig() {\n    const errors = [];\n    if (!authConfig.customerJwtSecret && \"development\" === \"production\") {}\n    if (!authConfig.adminJwtSecret && \"development\" === \"production\") {}\n    if (errors.length > 0) {\n        throw new Error(`Authentication configuration errors:\\n${errors.join(\"\\n\")}`);\n    }\n}\n// Get JWT secret based on user type\nfunction getJwtSecret(userType) {\n    if (userType === \"customer\") {\n        return authConfig.customerJwtSecret || authConfig.fallbackCustomerSecret;\n    } else {\n        return authConfig.adminJwtSecret || authConfig.fallbackAdminSecret;\n    }\n}\n// Password validation\nfunction validatePassword(password) {\n    const errors = [];\n    if (password.length < authConfig.minPasswordLength) {\n        errors.push(`Password must be at least ${authConfig.minPasswordLength} characters long`);\n    }\n    if (authConfig.requireUppercase && !/[A-Z]/.test(password)) {\n        errors.push(\"Password must contain at least one uppercase letter\");\n    }\n    if (authConfig.requireLowercase && !/[a-z]/.test(password)) {\n        errors.push(\"Password must contain at least one lowercase letter\");\n    }\n    if (authConfig.requireNumbers && !/\\d/.test(password)) {\n        errors.push(\"Password must contain at least one number\");\n    }\n    if (authConfig.requireSpecialChars && !/[!@#$%^&*(),.?\":{}|<>]/.test(password)) {\n        errors.push(\"Password must contain at least one special character\");\n    }\n    return {\n        isValid: errors.length === 0,\n        errors\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvYXV0aC1jb25maWcudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLDRFQUE0RTtBQUNyRSxNQUFNQSxhQUFhO0lBQ3hCLHFEQUFxRDtJQUNyREMsbUJBQW1CQyxRQUFRQyxHQUFHLENBQUNDLG1CQUFtQjtJQUNsREMsZ0JBQWdCSCxRQUFRQyxHQUFHLENBQUNHLGdCQUFnQjtJQUU1QywwQ0FBMEM7SUFDMUNDLHdCQUF3QjtJQUN4QkMscUJBQXFCO0lBRXJCLHNDQUFzQztJQUN0Q0MscUJBQXFCLEtBQUssS0FBSztJQUMvQkMsa0JBQWtCLElBQUksS0FBSyxLQUFLO0lBQ2hDQyxvQkFBb0IsS0FBSyxLQUFLLEtBQUs7SUFFbkMsZ0JBQWdCO0lBQ2hCQyxrQkFBa0I7SUFDbEJDLGlCQUFpQixLQUFLO0lBRXRCLHdCQUF3QjtJQUN4QkMsbUJBQW1CO0lBQ25CQyxrQkFBa0I7SUFDbEJDLGtCQUFrQjtJQUNsQkMsZ0JBQWdCO0lBQ2hCQyxxQkFBcUI7SUFFckIscUJBQXFCO0lBQ3JCQyxnQkFBZ0IsS0FBSztJQUNyQkMsdUJBQXVCO0lBRXZCLGtCQUFrQjtJQUNsQkMsZ0JBQWdCO1FBQ2RDLFVBQVU7UUFDVkMsUUFBUXJCLGtCQUF5QjtRQUNqQ3NCLFVBQVU7UUFDVkMsTUFBTTtJQUNSO0FBQ0YsRUFBRTtBQUVGLGlDQUFpQztBQUMxQixTQUFTQztJQUNkLE1BQU1DLFNBQW1CLEVBQUU7SUFFM0IsSUFBSSxDQUFDM0IsV0FBV0MsaUJBQWlCLElBQUlDLGtCQUF5QixjQUFjLEVBRTNFO0lBRUQsSUFBSSxDQUFDRixXQUFXSyxjQUFjLElBQUlILGtCQUF5QixjQUFjLEVBRXhFO0lBRUQsSUFBSXlCLE9BQU9FLE1BQU0sR0FBRyxHQUFHO1FBQ3JCLE1BQU0sSUFBSUMsTUFBTSxDQUFDLHNDQUFzQyxFQUFFSCxPQUFPSSxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQzlFO0FBQ0Y7QUFFQSxvQ0FBb0M7QUFDN0IsU0FBU0MsYUFBYUMsUUFBOEI7SUFDekQsSUFBSUEsYUFBYSxZQUFZO1FBQzNCLE9BQU9qQyxXQUFXQyxpQkFBaUIsSUFBSUQsV0FBV08sc0JBQXNCO0lBQzFFLE9BQU87UUFDTCxPQUFPUCxXQUFXSyxjQUFjLElBQUlMLFdBQVdRLG1CQUFtQjtJQUNwRTtBQUNGO0FBRUEsc0JBQXNCO0FBQ2YsU0FBUzBCLGlCQUFpQkMsUUFBZ0I7SUFDL0MsTUFBTVIsU0FBbUIsRUFBRTtJQUUzQixJQUFJUSxTQUFTTixNQUFNLEdBQUc3QixXQUFXYyxpQkFBaUIsRUFBRTtRQUNsRGEsT0FBT0MsSUFBSSxDQUFDLENBQUMsMEJBQTBCLEVBQUU1QixXQUFXYyxpQkFBaUIsQ0FBQyxnQkFBZ0IsQ0FBQztJQUN6RjtJQUVBLElBQUlkLFdBQVdlLGdCQUFnQixJQUFJLENBQUMsUUFBUXFCLElBQUksQ0FBQ0QsV0FBVztRQUMxRFIsT0FBT0MsSUFBSSxDQUFDO0lBQ2Q7SUFFQSxJQUFJNUIsV0FBV2dCLGdCQUFnQixJQUFJLENBQUMsUUFBUW9CLElBQUksQ0FBQ0QsV0FBVztRQUMxRFIsT0FBT0MsSUFBSSxDQUFDO0lBQ2Q7SUFFQSxJQUFJNUIsV0FBV2lCLGNBQWMsSUFBSSxDQUFDLEtBQUttQixJQUFJLENBQUNELFdBQVc7UUFDckRSLE9BQU9DLElBQUksQ0FBQztJQUNkO0lBRUEsSUFBSTVCLFdBQVdrQixtQkFBbUIsSUFBSSxDQUFDLHlCQUF5QmtCLElBQUksQ0FBQ0QsV0FBVztRQUM5RVIsT0FBT0MsSUFBSSxDQUFDO0lBQ2Q7SUFFQSxPQUFPO1FBQ0xTLFNBQVNWLE9BQU9FLE1BQU0sS0FBSztRQUMzQkY7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY3J1bWJsZWQtd2Vic2l0ZS8uL2xpYi9hdXRoLWNvbmZpZy50cz9lZmUzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEF1dGhlbnRpY2F0aW9uIGNvbmZpZ3VyYXRpb24gd2l0aCBzZXBhcmF0ZSBzZWNyZXRzIGZvciBjdXN0b21lciBhbmQgYWRtaW5cclxuZXhwb3J0IGNvbnN0IGF1dGhDb25maWcgPSB7XHJcbiAgLy8gSldUIFNlY3JldHMgLSBNVVNUIGJlIHNldCBpbiBlbnZpcm9ubWVudCB2YXJpYWJsZXNcclxuICBjdXN0b21lckp3dFNlY3JldDogcHJvY2Vzcy5lbnYuQ1VTVE9NRVJfSldUX1NFQ1JFVCxcclxuICBhZG1pbkp3dFNlY3JldDogcHJvY2Vzcy5lbnYuQURNSU5fSldUX1NFQ1JFVCxcclxuICBcclxuICAvLyBGYWxsYmFjayBzZWNyZXRzIChmb3IgZGV2ZWxvcG1lbnQgb25seSlcclxuICBmYWxsYmFja0N1c3RvbWVyU2VjcmV0OiAnY3VzdG9tZXItZGV2LXNlY3JldC1jaGFuZ2UtaW4tcHJvZHVjdGlvbicsXHJcbiAgZmFsbGJhY2tBZG1pblNlY3JldDogJ2FkbWluLWRldi1zZWNyZXQtY2hhbmdlLWluLXByb2R1Y3Rpb24nLFxyXG4gIFxyXG4gIC8vIFRva2VuIGV4cGlyYXRpb24gdGltZXMgKGluIHNlY29uZHMpXHJcbiAgY3VzdG9tZXJUb2tlbkV4cGlyeTogMjQgKiA2MCAqIDYwLCAvLyAyNCBob3Vyc1xyXG4gIGFkbWluVG9rZW5FeHBpcnk6IDcgKiAyNCAqIDYwICogNjAsIC8vIDcgZGF5c1xyXG4gIHJlZnJlc2hUb2tlbkV4cGlyeTogMzAgKiAyNCAqIDYwICogNjAsIC8vIDMwIGRheXNcclxuICBcclxuICAvLyBSYXRlIGxpbWl0aW5nXHJcbiAgbWF4TG9naW5BdHRlbXB0czogNSxcclxuICBsb2Nrb3V0RHVyYXRpb246IDE1ICogNjAsIC8vIDE1IG1pbnV0ZXNcclxuICBcclxuICAvLyBQYXNzd29yZCByZXF1aXJlbWVudHNcclxuICBtaW5QYXNzd29yZExlbmd0aDogOCxcclxuICByZXF1aXJlVXBwZXJjYXNlOiB0cnVlLFxyXG4gIHJlcXVpcmVMb3dlcmNhc2U6IHRydWUsXHJcbiAgcmVxdWlyZU51bWJlcnM6IHRydWUsXHJcbiAgcmVxdWlyZVNwZWNpYWxDaGFyczogZmFsc2UsXHJcbiAgXHJcbiAgLy8gU2Vzc2lvbiBtYW5hZ2VtZW50XHJcbiAgc2Vzc2lvblRpbWVvdXQ6IDMwICogNjAsIC8vIDMwIG1pbnV0ZXNcclxuICBtYXhDb25jdXJyZW50U2Vzc2lvbnM6IDMsXHJcbiAgXHJcbiAgLy8gQ29va2llIHNldHRpbmdzXHJcbiAgY29va2llU2V0dGluZ3M6IHtcclxuICAgIGh0dHBPbmx5OiB0cnVlLFxyXG4gICAgc2VjdXJlOiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nLFxyXG4gICAgc2FtZVNpdGU6ICdzdHJpY3QnIGFzIGNvbnN0LFxyXG4gICAgcGF0aDogJy8nLFxyXG4gIH1cclxufTtcclxuXHJcbi8vIFZhbGlkYXRlIGVudmlyb25tZW50IHZhcmlhYmxlc1xyXG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVBdXRoQ29uZmlnKCkge1xyXG4gIGNvbnN0IGVycm9yczogc3RyaW5nW10gPSBbXTtcclxuICBcclxuICBpZiAoIWF1dGhDb25maWcuY3VzdG9tZXJKd3RTZWNyZXQgJiYgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xyXG4gICAgZXJyb3JzLnB1c2goJ0NVU1RPTUVSX0pXVF9TRUNSRVQgZW52aXJvbm1lbnQgdmFyaWFibGUgaXMgcmVxdWlyZWQgaW4gcHJvZHVjdGlvbicpO1xyXG4gIH1cclxuICBcclxuICBpZiAoIWF1dGhDb25maWcuYWRtaW5Kd3RTZWNyZXQgJiYgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xyXG4gICAgZXJyb3JzLnB1c2goJ0FETUlOX0pXVF9TRUNSRVQgZW52aXJvbm1lbnQgdmFyaWFibGUgaXMgcmVxdWlyZWQgaW4gcHJvZHVjdGlvbicpO1xyXG4gIH1cclxuICBcclxuICBpZiAoZXJyb3JzLmxlbmd0aCA+IDApIHtcclxuICAgIHRocm93IG5ldyBFcnJvcihgQXV0aGVudGljYXRpb24gY29uZmlndXJhdGlvbiBlcnJvcnM6XFxuJHtlcnJvcnMuam9pbignXFxuJyl9YCk7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBHZXQgSldUIHNlY3JldCBiYXNlZCBvbiB1c2VyIHR5cGVcclxuZXhwb3J0IGZ1bmN0aW9uIGdldEp3dFNlY3JldCh1c2VyVHlwZTogJ2N1c3RvbWVyJyB8ICdhZG1pbicpOiBzdHJpbmcge1xyXG4gIGlmICh1c2VyVHlwZSA9PT0gJ2N1c3RvbWVyJykge1xyXG4gICAgcmV0dXJuIGF1dGhDb25maWcuY3VzdG9tZXJKd3RTZWNyZXQgfHwgYXV0aENvbmZpZy5mYWxsYmFja0N1c3RvbWVyU2VjcmV0O1xyXG4gIH0gZWxzZSB7XHJcbiAgICByZXR1cm4gYXV0aENvbmZpZy5hZG1pbkp3dFNlY3JldCB8fCBhdXRoQ29uZmlnLmZhbGxiYWNrQWRtaW5TZWNyZXQ7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBQYXNzd29yZCB2YWxpZGF0aW9uXHJcbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZVBhc3N3b3JkKHBhc3N3b3JkOiBzdHJpbmcpOiB7IGlzVmFsaWQ6IGJvb2xlYW47IGVycm9yczogc3RyaW5nW10gfSB7XHJcbiAgY29uc3QgZXJyb3JzOiBzdHJpbmdbXSA9IFtdO1xyXG4gIFxyXG4gIGlmIChwYXNzd29yZC5sZW5ndGggPCBhdXRoQ29uZmlnLm1pblBhc3N3b3JkTGVuZ3RoKSB7XHJcbiAgICBlcnJvcnMucHVzaChgUGFzc3dvcmQgbXVzdCBiZSBhdCBsZWFzdCAke2F1dGhDb25maWcubWluUGFzc3dvcmRMZW5ndGh9IGNoYXJhY3RlcnMgbG9uZ2ApO1xyXG4gIH1cclxuICBcclxuICBpZiAoYXV0aENvbmZpZy5yZXF1aXJlVXBwZXJjYXNlICYmICEvW0EtWl0vLnRlc3QocGFzc3dvcmQpKSB7XHJcbiAgICBlcnJvcnMucHVzaCgnUGFzc3dvcmQgbXVzdCBjb250YWluIGF0IGxlYXN0IG9uZSB1cHBlcmNhc2UgbGV0dGVyJyk7XHJcbiAgfVxyXG4gIFxyXG4gIGlmIChhdXRoQ29uZmlnLnJlcXVpcmVMb3dlcmNhc2UgJiYgIS9bYS16XS8udGVzdChwYXNzd29yZCkpIHtcclxuICAgIGVycm9ycy5wdXNoKCdQYXNzd29yZCBtdXN0IGNvbnRhaW4gYXQgbGVhc3Qgb25lIGxvd2VyY2FzZSBsZXR0ZXInKTtcclxuICB9XHJcbiAgXHJcbiAgaWYgKGF1dGhDb25maWcucmVxdWlyZU51bWJlcnMgJiYgIS9cXGQvLnRlc3QocGFzc3dvcmQpKSB7XHJcbiAgICBlcnJvcnMucHVzaCgnUGFzc3dvcmQgbXVzdCBjb250YWluIGF0IGxlYXN0IG9uZSBudW1iZXInKTtcclxuICB9XHJcbiAgXHJcbiAgaWYgKGF1dGhDb25maWcucmVxdWlyZVNwZWNpYWxDaGFycyAmJiAhL1shQCMkJV4mKigpLC4/XCI6e318PD5dLy50ZXN0KHBhc3N3b3JkKSkge1xyXG4gICAgZXJyb3JzLnB1c2goJ1Bhc3N3b3JkIG11c3QgY29udGFpbiBhdCBsZWFzdCBvbmUgc3BlY2lhbCBjaGFyYWN0ZXInKTtcclxuICB9XHJcbiAgXHJcbiAgcmV0dXJuIHtcclxuICAgIGlzVmFsaWQ6IGVycm9ycy5sZW5ndGggPT09IDAsXHJcbiAgICBlcnJvcnNcclxuICB9O1xyXG59ICJdLCJuYW1lcyI6WyJhdXRoQ29uZmlnIiwiY3VzdG9tZXJKd3RTZWNyZXQiLCJwcm9jZXNzIiwiZW52IiwiQ1VTVE9NRVJfSldUX1NFQ1JFVCIsImFkbWluSnd0U2VjcmV0IiwiQURNSU5fSldUX1NFQ1JFVCIsImZhbGxiYWNrQ3VzdG9tZXJTZWNyZXQiLCJmYWxsYmFja0FkbWluU2VjcmV0IiwiY3VzdG9tZXJUb2tlbkV4cGlyeSIsImFkbWluVG9rZW5FeHBpcnkiLCJyZWZyZXNoVG9rZW5FeHBpcnkiLCJtYXhMb2dpbkF0dGVtcHRzIiwibG9ja291dER1cmF0aW9uIiwibWluUGFzc3dvcmRMZW5ndGgiLCJyZXF1aXJlVXBwZXJjYXNlIiwicmVxdWlyZUxvd2VyY2FzZSIsInJlcXVpcmVOdW1iZXJzIiwicmVxdWlyZVNwZWNpYWxDaGFycyIsInNlc3Npb25UaW1lb3V0IiwibWF4Q29uY3VycmVudFNlc3Npb25zIiwiY29va2llU2V0dGluZ3MiLCJodHRwT25seSIsInNlY3VyZSIsInNhbWVTaXRlIiwicGF0aCIsInZhbGlkYXRlQXV0aENvbmZpZyIsImVycm9ycyIsInB1c2giLCJsZW5ndGgiLCJFcnJvciIsImpvaW4iLCJnZXRKd3RTZWNyZXQiLCJ1c2VyVHlwZSIsInZhbGlkYXRlUGFzc3dvcmQiLCJwYXNzd29yZCIsInRlc3QiLCJpc1ZhbGlkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./lib/auth-config.ts\n");

/***/ }),

/***/ "(rsc)/./lib/db.ts":
/*!*******************!*\
  !*** ./lib/db.ts ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getOrderByTracking: () => (/* binding */ getOrderByTracking),\n/* harmony export */   getOrderDetails: () => (/* binding */ getOrderDetails),\n/* harmony export */   getOrders: () => (/* binding */ getOrders),\n/* harmony export */   saveOrder: () => (/* binding */ saveOrder),\n/* harmony export */   testConnection: () => (/* binding */ testConnection),\n/* harmony export */   updateOrderStatus: () => (/* binding */ updateOrderStatus)\n/* harmony export */ });\n/* harmony import */ var mysql2_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mysql2/promise */ \"(rsc)/./node_modules/mysql2/promise.js\");\n\n// Create MySQL connection pool\nconst pool = mysql2_promise__WEBPACK_IMPORTED_MODULE_0__.createPool({\n    host: process.env.DB_HOST || \"localhost\",\n    user: process.env.DB_USER || \"root\",\n    password: process.env.DB_PASSWORD || \"Goodmorning@1\",\n    database: process.env.DB_NAME || \"crumbled_nextDB\",\n    waitForConnections: true,\n    connectionLimit: 10,\n    queueLimit: 0,\n    enableKeepAlive: true,\n    keepAliveInitialDelay: 10000,\n    idleTimeout: 60000,\n    maxIdle: 5 // Maximum number of idle connections to keep\n});\n// Test connection function\nasync function testConnection() {\n    let connection;\n    try {\n        connection = await pool.getConnection();\n        const [result] = await connection.query(\"SELECT NOW() as `current_time`, VERSION() as mysql_version\");\n        return {\n            success: true,\n            message: \"Database connected successfully\",\n            timestamp: result[0].current_time,\n            version: result[0].mysql_version\n        };\n    } catch (error) {\n        console.error(\"Database connection failed:\", error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Unknown connection error\"\n        };\n    } finally{\n        if (connection) {\n            connection.release();\n        }\n    }\n}\nasync function saveOrder(orderData) {\n    let connection;\n    try {\n        connection = await pool.getConnection();\n        // Check if orders table exists\n        const [tableCheck] = await connection.query(\"SELECT COUNT(*) as count FROM information_schema.tables WHERE table_schema = 'crumbled_nextDB' AND table_name = 'orders'\");\n        if (tableCheck[0].count === 0) {\n            return {\n                success: false,\n                error: \"Orders table does not exist. Please set up the database first.\"\n            };\n        }\n        // Generate tracking ID if not provided\n        if (!orderData.trackingId) {\n            orderData.trackingId = `CC${Math.random().toString(36).substring(2, 10).toUpperCase()}`;\n        }\n        // Start transaction by inserting order first\n        const [orderResult] = await connection.query(`INSERT INTO orders (\n        customer_name, \n        customer_email, \n        customer_phone, \n        address, \n        city, \n        state, \n        zip_code, \n        total_amount,\n        tracking_id,\n        order_status\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, 'pending')`, [\n            orderData.customerName,\n            orderData.customerEmail,\n            orderData.customerPhone,\n            orderData.address,\n            orderData.city,\n            orderData.state,\n            orderData.zipCode,\n            orderData.totalAmount,\n            orderData.trackingId || `CC${Math.random().toString(36).substring(2, 10).toUpperCase()}`\n        ]);\n        const orderId = orderResult.insertId;\n        // Process each item and update stock\n        for (const item of orderData.items){\n            // Insert order item\n            await connection.query(`INSERT INTO order_items (\n          order_id, \n          product_id, \n          product_name, \n          quantity, \n          price, \n          is_bundle, \n          bundle_size, \n          bundle_items\n        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)`, [\n                orderId,\n                item.id,\n                item.name,\n                item.quantity,\n                item.price,\n                !!item.isBundle,\n                item.bundleSize || null,\n                item.bundleItems ? JSON.stringify(item.bundleItems) : null\n            ]);\n            // Update stock for individual items\n            if (!item.isBundle) {\n                // For regular items, reduce stock directly\n                const [stockUpdate] = await connection.query(`UPDATE stock \n           SET quantity = quantity - ?, updated_at = CURRENT_TIMESTAMP\n           WHERE product_id = ?\n           RETURNING quantity`, [\n                    item.quantity,\n                    item.id\n                ]);\n                // Check if stock went negative (optional warning)\n                if (stockUpdate.length > 0 && stockUpdate[0].quantity < 0) {\n                    console.warn(`Warning: Stock for product ${item.name} (ID: ${item.id}) went negative: ${stockUpdate[0].quantity}`);\n                }\n            } else {\n                // For bundles, reduce stock for each bundled item\n                if (item.bundleItems && Array.isArray(item.bundleItems)) {\n                    for (const bundleItem of item.bundleItems){\n                        const [stockUpdate] = await connection.query(`UPDATE stock \n               SET quantity = quantity - ?, updated_at = CURRENT_TIMESTAMP\n               WHERE product_id = ?\n               RETURNING quantity, product_name`, [\n                            item.quantity,\n                            bundleItem.id\n                        ]);\n                        if (stockUpdate.length > 0 && stockUpdate[0].quantity < 0) {\n                            console.warn(`Warning: Stock for bundled product ${stockUpdate[0].product_name} (ID: ${bundleItem.id}) went negative: ${stockUpdate[0].quantity}`);\n                        }\n                    }\n                }\n            }\n        }\n        return {\n            success: true,\n            orderId,\n            trackingId: orderData.trackingId\n        };\n    } catch (error) {\n        console.error(\"Error saving order:\", error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Database operation failed\"\n        };\n    } finally{\n        if (connection) {\n            connection.release();\n        }\n    }\n}\nasync function getOrders() {\n    let connection;\n    try {\n        connection = await pool.getConnection();\n        // Check if orders table exists\n        const [tableCheck] = await connection.query(\"SELECT COUNT(*) as count FROM information_schema.tables WHERE table_schema = 'crumbled_nextDB' AND table_name = 'orders'\");\n        if (tableCheck[0].count === 0) {\n            return {\n                success: false,\n                error: \"Orders table does not exist. Please set up the database first.\"\n            };\n        }\n        const [orders] = await connection.query(\"SELECT * FROM orders ORDER BY created_at DESC\");\n        return {\n            success: true,\n            orders\n        };\n    } catch (error) {\n        console.error(\"Error fetching orders:\", error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Database connection failed\"\n        };\n    } finally{\n        if (connection) {\n            connection.release();\n        }\n    }\n}\nasync function getOrderDetails(orderId) {\n    let connection;\n    try {\n        connection = await pool.getConnection();\n        const [order] = await connection.query(\"SELECT * FROM orders WHERE id = ?\", [\n            orderId\n        ]);\n        if (order.length === 0) {\n            return {\n                success: false,\n                error: \"Order not found\"\n            };\n        }\n        const [items] = await connection.query(\"SELECT * FROM order_items WHERE order_id = ?\", [\n            orderId\n        ]);\n        return {\n            success: true,\n            order: order[0],\n            items\n        };\n    } catch (error) {\n        console.error(\"Error fetching order details:\", error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Database operation failed\"\n        };\n    } finally{\n        if (connection) {\n            connection.release();\n        }\n    }\n}\nasync function getOrderByTracking(trackingId, email) {\n    let connection;\n    try {\n        connection = await pool.getConnection();\n        const [order] = await connection.query(\"SELECT * FROM orders WHERE tracking_id = ? AND customer_email = ?\", [\n            trackingId,\n            email\n        ]);\n        if (order.length === 0) {\n            return {\n                success: false,\n                error: \"Order not found or email doesn't match\"\n            };\n        }\n        const [items] = await connection.query(\"SELECT * FROM order_items WHERE order_id = ?\", [\n            order[0].id\n        ]);\n        return {\n            success: true,\n            order: order[0],\n            items\n        };\n    } catch (error) {\n        console.error(\"Error fetching order by tracking:\", error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Database operation failed\"\n        };\n    } finally{\n        if (connection) {\n            connection.release();\n        }\n    }\n}\nasync function updateOrderStatus(orderId, status) {\n    let connection;\n    try {\n        connection = await pool.getConnection();\n        const [result] = await connection.query(\"UPDATE orders SET order_status = ?, updated_at = CURRENT_TIMESTAMP WHERE id = ?\", [\n            status,\n            orderId\n        ]);\n        return {\n            success: true,\n            message: \"Order status updated successfully\"\n        };\n    } catch (error) {\n        console.error(\"Error updating order status:\", error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Database operation failed\"\n        };\n    } finally{\n        if (connection) {\n            connection.release();\n        }\n    }\n}\n// Export the pool as default\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (pool);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/db.ts\n");

/***/ }),

/***/ "(rsc)/./lib/middleware/auth.ts":
/*!********************************!*\
  !*** ./lib/middleware/auth.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   adminAuth: () => (/* binding */ adminAuth),\n/* harmony export */   customerAuth: () => (/* binding */ customerAuth),\n/* harmony export */   generateRefreshToken: () => (/* binding */ generateRefreshToken),\n/* harmony export */   generateSessionId: () => (/* binding */ generateSessionId),\n/* harmony export */   generateToken: () => (/* binding */ generateToken),\n/* harmony export */   verifyJWT: () => (/* binding */ verifyJWT)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_auth_config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/auth-config */ \"(rsc)/./lib/auth-config.ts\");\n\n\n\n// Generate JWT token with separate secrets\nfunction generateToken(payload) {\n    const header = {\n        alg: \"HS256\",\n        typ: \"JWT\"\n    };\n    const now = Math.floor(Date.now() / 1000);\n    const expiry = payload.type === \"refresh\" ? now + _lib_auth_config__WEBPACK_IMPORTED_MODULE_2__.authConfig.refreshTokenExpiry : payload.type === \"admin\" ? now + _lib_auth_config__WEBPACK_IMPORTED_MODULE_2__.authConfig.adminTokenExpiry : now + _lib_auth_config__WEBPACK_IMPORTED_MODULE_2__.authConfig.customerTokenExpiry;\n    const finalPayload = {\n        ...payload,\n        iat: now,\n        exp: expiry\n    };\n    const encodedHeader = Buffer.from(JSON.stringify(header)).toString(\"base64url\");\n    const encodedPayload = Buffer.from(JSON.stringify(finalPayload)).toString(\"base64url\");\n    const secret = (0,_lib_auth_config__WEBPACK_IMPORTED_MODULE_2__.getJwtSecret)(payload.type === \"admin\" ? \"admin\" : \"customer\");\n    const signature = (0,crypto__WEBPACK_IMPORTED_MODULE_1__.createHmac)(\"sha256\", secret).update(`${encodedHeader}.${encodedPayload}`).digest(\"base64url\");\n    return `${encodedHeader}.${encodedPayload}.${signature}`;\n}\n// Generate refresh token\nfunction generateRefreshToken(userId, userType, sessionId) {\n    return generateToken({\n        type: \"refresh\",\n        userId,\n        userType,\n        sessionId\n    });\n}\n// Verify JWT token\nfunction verifyJWT(token, expectedType) {\n    const [encodedHeader, encodedPayload, signature] = token.split(\".\");\n    if (!encodedHeader || !encodedPayload || !signature) {\n        throw new Error(\"Invalid token format\");\n    }\n    const payload = JSON.parse(Buffer.from(encodedPayload, \"base64url\").toString());\n    // Determine secret based on payload type\n    const secret = (0,_lib_auth_config__WEBPACK_IMPORTED_MODULE_2__.getJwtSecret)(payload.type === \"admin\" ? \"admin\" : \"customer\");\n    const expectedSignature = (0,crypto__WEBPACK_IMPORTED_MODULE_1__.createHmac)(\"sha256\", secret).update(`${encodedHeader}.${encodedPayload}`).digest(\"base64url\");\n    if (signature !== expectedSignature) {\n        throw new Error(\"Invalid token signature\");\n    }\n    if (payload.exp < Math.floor(Date.now() / 1000)) {\n        throw new Error(\"Token has expired\");\n    }\n    // Verify expected type if provided\n    if (expectedType && payload.type !== expectedType) {\n        throw new Error(`Expected token type ${expectedType}, got ${payload.type}`);\n    }\n    return payload;\n}\n// Generate session ID\nfunction generateSessionId() {\n    return (0,crypto__WEBPACK_IMPORTED_MODULE_1__.randomBytes)(32).toString(\"hex\");\n}\n// Middleware for admin-only routes\nasync function adminAuth(req) {\n    try {\n        const authHeader = req.headers.get(\"Authorization\");\n        if (!authHeader?.startsWith(\"Bearer \")) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Missing or invalid authorization header\"\n            }, {\n                status: 401\n            });\n        }\n        const token = authHeader.split(\" \")[1];\n        const payload = verifyJWT(token, \"admin\");\n        // Add the admin info to the request for use in the route handler\n        req.headers.set(\"x-admin-username\", payload.username);\n        req.headers.set(\"x-admin-email\", payload.email);\n        req.headers.set(\"x-session-id\", payload.sessionId);\n        return null; // Continue to the route handler\n    } catch (error) {\n        console.error(\"Admin auth error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: error instanceof Error ? error.message : \"Invalid or expired token\"\n        }, {\n            status: 401\n        });\n    }\n}\n// Middleware for customer-only routes\nasync function customerAuth(req) {\n    try {\n        const authHeader = req.headers.get(\"Authorization\");\n        if (!authHeader?.startsWith(\"Bearer \")) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Missing or invalid authorization header\"\n            }, {\n                status: 401\n            });\n        }\n        const token = authHeader.split(\" \")[1];\n        const payload = verifyJWT(token, \"customer\");\n        // Add the customer info to the request for use in the route handler\n        req.headers.set(\"x-customer-id\", payload.id.toString());\n        req.headers.set(\"x-customer-email\", payload.email);\n        req.headers.set(\"x-session-id\", payload.sessionId);\n        return null; // Continue to the route handler\n    } catch (error) {\n        console.error(\"Customer auth error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: error instanceof Error ? error.message : \"Invalid or expired token\"\n        }, {\n            status: 401\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/middleware/auth.ts\n");

/***/ }),

/***/ "(rsc)/./lib/services/databaseService.ts":
/*!*****************************************!*\
  !*** ./lib/services/databaseService.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   databaseService: () => (/* binding */ databaseService)\n/* harmony export */ });\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/db */ \"(rsc)/./lib/db.ts\");\n\nconst databaseService = {\n    async query (sql, params) {\n        let connection;\n        try {\n            connection = await _lib_db__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getConnection();\n            const [rows] = await connection.execute(sql, params);\n            return rows;\n        } catch (error) {\n            console.error(\"Database query error:\", error);\n            throw error;\n        } finally{\n            if (connection) {\n                connection.release();\n            }\n        }\n    },\n    async transaction (callback) {\n        const connection = await _lib_db__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getConnection();\n        try {\n            await connection.beginTransaction();\n            const result = await callback(connection);\n            await connection.commit();\n            return result;\n        } catch (error) {\n            await connection.rollback();\n            throw error;\n        } finally{\n            connection.release();\n        }\n    },\n    async testConnection () {\n        let connection;\n        try {\n            connection = await _lib_db__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getConnection();\n            const [result] = await connection.query(\"SELECT NOW() as `current_time`, VERSION() as mysql_version\");\n            return {\n                success: true,\n                data: result[0]\n            };\n        } catch (error) {\n            console.error(\"Database connection test failed:\", error);\n            return {\n                success: false,\n                error: error instanceof Error ? error.message : \"Unknown error\"\n            };\n        } finally{\n            if (connection) {\n                connection.release();\n            }\n        }\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvc2VydmljZXMvZGF0YWJhc2VTZXJ2aWNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQzRCO0FBRXJCLE1BQU1DLGtCQUFrQjtJQUM3QixNQUFNQyxPQUFlQyxHQUFXLEVBQUVDLE1BQWM7UUFDOUMsSUFBSUM7UUFDSixJQUFJO1lBQ0ZBLGFBQWEsTUFBTUwsK0NBQUlBLENBQUNNLGFBQWE7WUFDckMsTUFBTSxDQUFDQyxLQUFLLEdBQUcsTUFBTUYsV0FBV0csT0FBTyxDQUFDTCxLQUFLQztZQUM3QyxPQUFPRztRQUNULEVBQUUsT0FBT0UsT0FBTztZQUNkQyxRQUFRRCxLQUFLLENBQUMseUJBQXlCQTtZQUN2QyxNQUFNQTtRQUNSLFNBQVU7WUFDUixJQUFJSixZQUFZO2dCQUNkQSxXQUFXTSxPQUFPO1lBQ3BCO1FBQ0Y7SUFDRjtJQUVBLE1BQU1DLGFBQWVDLFFBQXNEO1FBQ3pFLE1BQU1SLGFBQWEsTUFBTUwsK0NBQUlBLENBQUNNLGFBQWE7UUFDM0MsSUFBSTtZQUNGLE1BQU1ELFdBQVdTLGdCQUFnQjtZQUNqQyxNQUFNQyxTQUFTLE1BQU1GLFNBQVNSO1lBQzlCLE1BQU1BLFdBQVdXLE1BQU07WUFDdkIsT0FBT0Q7UUFDVCxFQUFFLE9BQU9OLE9BQU87WUFDZCxNQUFNSixXQUFXWSxRQUFRO1lBQ3pCLE1BQU1SO1FBQ1IsU0FBVTtZQUNSSixXQUFXTSxPQUFPO1FBQ3BCO0lBQ0Y7SUFFQSxNQUFNTztRQUNKLElBQUliO1FBQ0osSUFBSTtZQUNGQSxhQUFhLE1BQU1MLCtDQUFJQSxDQUFDTSxhQUFhO1lBQ3JDLE1BQU0sQ0FBQ1MsT0FBTyxHQUFHLE1BQU1WLFdBQVdILEtBQUssQ0FBQztZQUN4QyxPQUFPO2dCQUNMaUIsU0FBUztnQkFDVEMsTUFBTUwsTUFBTSxDQUFDLEVBQUU7WUFDakI7UUFDRixFQUFFLE9BQU9OLE9BQU87WUFDZEMsUUFBUUQsS0FBSyxDQUFDLG9DQUFvQ0E7WUFDbEQsT0FBTztnQkFDTFUsU0FBUztnQkFDVFYsT0FBT0EsaUJBQWlCWSxRQUFRWixNQUFNYSxPQUFPLEdBQUc7WUFDbEQ7UUFDRixTQUFVO1lBQ1IsSUFBSWpCLFlBQVk7Z0JBQ2RBLFdBQVdNLE9BQU87WUFDcEI7UUFDRjtJQUNGO0FBQ0YsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL2NydW1ibGVkLXdlYnNpdGUvLi9saWIvc2VydmljZXMvZGF0YWJhc2VTZXJ2aWNlLnRzP2I4NGEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG15c3FsIGZyb20gJ215c3FsMi9wcm9taXNlJztcbmltcG9ydCBwb29sIGZyb20gJ0AvbGliL2RiJztcblxuZXhwb3J0IGNvbnN0IGRhdGFiYXNlU2VydmljZSA9IHtcbiAgYXN5bmMgcXVlcnk8VCA9IGFueT4oc3FsOiBzdHJpbmcsIHBhcmFtcz86IGFueVtdKTogUHJvbWlzZTxUPiB7XG4gICAgbGV0IGNvbm5lY3Rpb247XG4gICAgdHJ5IHtcbiAgICAgIGNvbm5lY3Rpb24gPSBhd2FpdCBwb29sLmdldENvbm5lY3Rpb24oKTtcbiAgICAgIGNvbnN0IFtyb3dzXSA9IGF3YWl0IGNvbm5lY3Rpb24uZXhlY3V0ZShzcWwsIHBhcmFtcyk7XG4gICAgICByZXR1cm4gcm93cyBhcyBUO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdEYXRhYmFzZSBxdWVyeSBlcnJvcjonLCBlcnJvcik7XG4gICAgICB0aHJvdyBlcnJvcjtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgaWYgKGNvbm5lY3Rpb24pIHtcbiAgICAgICAgY29ubmVjdGlvbi5yZWxlYXNlKCk7XG4gICAgICB9XG4gICAgfVxuICB9LFxuXG4gIGFzeW5jIHRyYW5zYWN0aW9uPFQ+KGNhbGxiYWNrOiAoY29ubmVjdGlvbjogbXlzcWwuQ29ubmVjdGlvbikgPT4gUHJvbWlzZTxUPik6IFByb21pc2U8VD4ge1xuICAgIGNvbnN0IGNvbm5lY3Rpb24gPSBhd2FpdCBwb29sLmdldENvbm5lY3Rpb24oKTtcbiAgICB0cnkge1xuICAgICAgYXdhaXQgY29ubmVjdGlvbi5iZWdpblRyYW5zYWN0aW9uKCk7XG4gICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBjYWxsYmFjayhjb25uZWN0aW9uKTtcbiAgICAgIGF3YWl0IGNvbm5lY3Rpb24uY29tbWl0KCk7XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBhd2FpdCBjb25uZWN0aW9uLnJvbGxiYWNrKCk7XG4gICAgICB0aHJvdyBlcnJvcjtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgY29ubmVjdGlvbi5yZWxlYXNlKCk7XG4gICAgfVxuICB9LFxuXG4gIGFzeW5jIHRlc3RDb25uZWN0aW9uKCkge1xuICAgIGxldCBjb25uZWN0aW9uO1xuICAgIHRyeSB7XG4gICAgICBjb25uZWN0aW9uID0gYXdhaXQgcG9vbC5nZXRDb25uZWN0aW9uKCk7XG4gICAgICBjb25zdCBbcmVzdWx0XSA9IGF3YWl0IGNvbm5lY3Rpb24ucXVlcnkoJ1NFTEVDVCBOT1coKSBhcyBgY3VycmVudF90aW1lYCwgVkVSU0lPTigpIGFzIG15c3FsX3ZlcnNpb24nKTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgIGRhdGE6IHJlc3VsdFswXVxuICAgICAgfTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRGF0YWJhc2UgY29ubmVjdGlvbiB0ZXN0IGZhaWxlZDonLCBlcnJvcik7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgZXJyb3I6IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogJ1Vua25vd24gZXJyb3InXG4gICAgICB9O1xuICAgIH0gZmluYWxseSB7XG4gICAgICBpZiAoY29ubmVjdGlvbikge1xuICAgICAgICBjb25uZWN0aW9uLnJlbGVhc2UoKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn07ICJdLCJuYW1lcyI6WyJwb29sIiwiZGF0YWJhc2VTZXJ2aWNlIiwicXVlcnkiLCJzcWwiLCJwYXJhbXMiLCJjb25uZWN0aW9uIiwiZ2V0Q29ubmVjdGlvbiIsInJvd3MiLCJleGVjdXRlIiwiZXJyb3IiLCJjb25zb2xlIiwicmVsZWFzZSIsInRyYW5zYWN0aW9uIiwiY2FsbGJhY2siLCJiZWdpblRyYW5zYWN0aW9uIiwicmVzdWx0IiwiY29tbWl0Iiwicm9sbGJhY2siLCJ0ZXN0Q29ubmVjdGlvbiIsInN1Y2Nlc3MiLCJkYXRhIiwiRXJyb3IiLCJtZXNzYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./lib/services/databaseService.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/mysql2","vendor-chunks/aws-ssl-profiles","vendor-chunks/iconv-lite","vendor-chunks/long","vendor-chunks/lru-cache","vendor-chunks/denque","vendor-chunks/is-property","vendor-chunks/lru.min","vendor-chunks/sqlstring","vendor-chunks/seq-queue","vendor-chunks/named-placeholders","vendor-chunks/generate-function","vendor-chunks/safer-buffer"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fadmin%2Forders%2Froute&page=%2Fapi%2Fadmin%2Forders%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fadmin%2Forders%2Froute.ts&appDir=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();