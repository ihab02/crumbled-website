/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/products/route";
exports.ids = ["app/api/products/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/mysql2/lib sync recursive ^cardinal.*$":
/*!****************************************************!*\
  !*** ./node_modules/mysql2/lib/ sync ^cardinal.*$ ***!
  \****************************************************/
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => ([]);
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "(rsc)/./node_modules/mysql2/lib sync recursive ^cardinal.*$";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "canvas":
/*!*************************!*\
  !*** external "canvas" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("canvas");

/***/ }),

/***/ "./action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/client/components/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/action-async-storage.external.js");

/***/ }),

/***/ "./request-async-storage.external":
/*!********************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external.js" ***!
  \********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/request-async-storage.external.js");

/***/ }),

/***/ "./static-generation-async-storage.external":
/*!******************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external.js" ***!
  \******************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/static-generation-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "fs/promises":
/*!******************************!*\
  !*** external "fs/promises" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("fs/promises");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "process":
/*!**************************!*\
  !*** external "process" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("process");

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("querystring");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "string_decoder":
/*!*********************************!*\
  !*** external "string_decoder" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("string_decoder");

/***/ }),

/***/ "timers":
/*!*************************!*\
  !*** external "timers" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("timers");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fproducts%2Froute&page=%2Fapi%2Fproducts%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fproducts%2Froute.ts&appDir=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fproducts%2Froute&page=%2Fapi%2Fproducts%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fproducts%2Froute.ts&appDir=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D! ***!
  \**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_ASUS_AngularWebApp_crumbled_website_app_api_products_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/products/route.ts */ \"(rsc)/./app/api/products/route.ts\");\n\r\n\r\n\r\n\r\n// We inject the nextConfigOutput here so that we can use them in the route\r\n// module.\r\nconst nextConfigOutput = \"standalone\"\r\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\r\n    definition: {\r\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\r\n        page: \"/api/products/route\",\r\n        pathname: \"/api/products\",\r\n        filename: \"route\",\r\n        bundlePath: \"app/api/products/route\"\r\n    },\r\n    resolvedPagePath: \"C:\\\\Users\\\\ASUS\\\\AngularWebApp\\\\crumbled-website\\\\app\\\\api\\\\products\\\\route.ts\",\r\n    nextConfigOutput,\r\n    userland: C_Users_ASUS_AngularWebApp_crumbled_website_app_api_products_route_ts__WEBPACK_IMPORTED_MODULE_3__\r\n});\r\n// Pull out the exports that we need to expose from the module. This should\r\n// be eliminated when we've moved the other routes to the new format. These\r\n// are used to hook into the route.\r\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\r\nconst originalPathname = \"/api/products/route\";\r\nfunction patchFetch() {\r\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\r\n        serverHooks,\r\n        staticGenerationAsyncStorage\r\n    });\r\n}\r\n\r\n\r\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZwcm9kdWN0cyUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGcHJvZHVjdHMlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZwcm9kdWN0cyUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNBU1VTJTVDQW5ndWxhcldlYkFwcCU1Q2NydW1ibGVkLXdlYnNpdGUlNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUMlM0ElNUNVc2VycyU1Q0FTVVMlNUNBbmd1bGFyV2ViQXBwJTVDY3J1bWJsZWQtd2Vic2l0ZSZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD1zdGFuZGFsb25lJnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQzhCO0FBQzNHO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7QUFDdkg7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2NydW1ibGVkLXdlYnNpdGUvP2Y2ODMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcclxuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcclxuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xyXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiQzpcXFxcVXNlcnNcXFxcQVNVU1xcXFxBbmd1bGFyV2ViQXBwXFxcXGNydW1ibGVkLXdlYnNpdGVcXFxcYXBwXFxcXGFwaVxcXFxwcm9kdWN0c1xcXFxyb3V0ZS50c1wiO1xyXG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcclxuLy8gbW9kdWxlLlxyXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJzdGFuZGFsb25lXCJcclxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XHJcbiAgICBkZWZpbml0aW9uOiB7XHJcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcclxuICAgICAgICBwYWdlOiBcIi9hcGkvcHJvZHVjdHMvcm91dGVcIixcclxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3Byb2R1Y3RzXCIsXHJcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcclxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvcHJvZHVjdHMvcm91dGVcIlxyXG4gICAgfSxcclxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiQzpcXFxcVXNlcnNcXFxcQVNVU1xcXFxBbmd1bGFyV2ViQXBwXFxcXGNydW1ibGVkLXdlYnNpdGVcXFxcYXBwXFxcXGFwaVxcXFxwcm9kdWN0c1xcXFxyb3V0ZS50c1wiLFxyXG4gICAgbmV4dENvbmZpZ091dHB1dCxcclxuICAgIHVzZXJsYW5kXHJcbn0pO1xyXG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcclxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXHJcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXHJcbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xyXG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL3Byb2R1Y3RzL3JvdXRlXCI7XHJcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XHJcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xyXG4gICAgICAgIHNlcnZlckhvb2tzLFxyXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcclxuICAgIH0pO1xyXG59XHJcbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XHJcblxyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fproducts%2Froute&page=%2Fapi%2Fproducts%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fproducts%2Froute.ts&appDir=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/products/route.ts":
/*!***********************************!*\
  !*** ./app/api/products/route.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DELETE: () => (/* binding */ DELETE),\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   PUT: () => (/* binding */ PUT)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/db */ \"(rsc)/./lib/db.ts\");\n/* harmony import */ var next_cache__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/cache */ \"(rsc)/./node_modules/next/cache.js\");\n/* harmony import */ var next_cache__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_cache__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _utils_generatePackImage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/utils/generatePackImage */ \"(rsc)/./utils/generatePackImage.ts\");\n/* harmony import */ var _lib_services_viewService__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/services/viewService */ \"(rsc)/./lib/services/viewService.ts\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next-auth */ \"(rsc)/./node_modules/next-auth/index.js\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_auth__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _lib_auth_options__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/lib/auth-options */ \"(rsc)/./lib/auth-options.ts\");\n/* harmony import */ var _lib_middleware_auth__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/lib/middleware/auth */ \"(rsc)/./lib/middleware/auth.ts\");\n\n\n\n\n\n\n\n\nasync function GET(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        const showDeleted = searchParams.get(\"show_deleted\") === \"true\";\n        // Check if this is an admin request using both NextAuth and custom admin token\n        const session = await (0,next_auth__WEBPACK_IMPORTED_MODULE_5__.getServerSession)(_lib_auth_options__WEBPACK_IMPORTED_MODULE_6__.authOptions);\n        const adminToken = request.cookies.get(\"adminToken\")?.value;\n        let isAdmin = false;\n        let adminUser = null;\n        // Check NextAuth session first\n        if (session?.user?.id && session?.user?.email?.includes(\"admin\")) {\n            isAdmin = true;\n            adminUser = session.user;\n        }\n        // Check custom admin token if NextAuth didn't work\n        if (!isAdmin && adminToken) {\n            try {\n                const decoded = await (0,_lib_middleware_auth__WEBPACK_IMPORTED_MODULE_7__.verifyJWT)(adminToken, \"admin\");\n                isAdmin = decoded.type === \"admin\";\n                adminUser = {\n                    id: decoded.id,\n                    email: decoded.email || \"admin@example.com\"\n                };\n            } catch (error) {\n                console.log(\"Admin token verification failed:\", error);\n            }\n        }\n        // Debug logging\n        console.log(\"Products API Debug:\", {\n            session: session ? {\n                id: session.user?.id,\n                email: session.user?.email\n            } : null,\n            adminToken: adminToken ? \"Present\" : \"Not found\",\n            isAdmin,\n            adminUser,\n            showDeleted,\n            shouldShowDeleted: isAdmin && showDeleted\n        });\n        // For customer-facing requests, always use active view\n        // For admin requests, respect the show_deleted parameter\n        const shouldShowDeleted = isAdmin && showDeleted;\n        // Get products using ViewService\n        const products = await _lib_services_viewService__WEBPACK_IMPORTED_MODULE_4__.ViewService.getProducts(shouldShowDeleted);\n        // Convert base_price to number and add stock fields\n        const productsWithNumbers = products.map((p)=>({\n                ...p,\n                base_price: typeof p.base_price === \"string\" ? parseFloat(p.base_price) : p.base_price,\n                stock_quantity: parseInt(String(p.stock_quantity)) || 0,\n                is_available: Boolean(p.is_available)\n            }));\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: productsWithNumbers\n        });\n    } catch (error) {\n        console.error(\"Error fetching products:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: \"Failed to fetch products\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function POST(request) {\n    try {\n        const data = await request.json();\n        console.log(\"Received product data:\", data);\n        // Validate required fields\n        if (!data.name || !data.product_type_id || !data.base_price || !data.flavor_size) {\n            console.error(\"Missing required fields:\", {\n                data\n            });\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Missing required fields\"\n            }, {\n                status: 400\n            });\n        }\n        // Validate count for packs\n        if (data.is_pack && (!data.count || data.count < 1)) {\n            console.error(\"Invalid count for pack:\", {\n                data\n            });\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Pack must have a count of at least 1\"\n            }, {\n                status: 400\n            });\n        }\n        // Only generate pack image if it's a pack and no image was uploaded\n        let imageUrl = data.image_url;\n        if (data.is_pack && !imageUrl) {\n            try {\n                imageUrl = await (0,_utils_generatePackImage__WEBPACK_IMPORTED_MODULE_3__.generatePackImage)(data.count, data.flavor_size);\n            } catch (error) {\n                console.error(\"Error generating pack image:\", error);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: false,\n                    error: \"Failed to generate pack image\"\n                }, {\n                    status: 500\n                });\n            }\n        }\n        let connection;\n        try {\n            connection = await _lib_db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getConnection();\n            // Get the next display order\n            const [maxOrderResult] = await connection.query(\"SELECT COALESCE(MAX(display_order), 0) as max_order FROM products\");\n            const maxOrder = maxOrderResult[0];\n            const displayOrder = maxOrder.max_order + 1;\n            console.log(\"Inserting product with data:\", {\n                ...data,\n                image_url: imageUrl,\n                display_order: displayOrder\n            });\n            const [result] = await connection.query(`INSERT INTO products (\n          name, description, product_type_id, is_pack, count, flavor_size,\n          base_price, image_url, is_active, display_order\n        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`, [\n                data.name,\n                data.description || null,\n                data.product_type_id,\n                data.is_pack ? 1 : 0,\n                data.count || null,\n                data.flavor_size,\n                data.base_price,\n                imageUrl,\n                data.is_active ? 1 : 0,\n                displayOrder\n            ]);\n            (0,next_cache__WEBPACK_IMPORTED_MODULE_2__.revalidatePath)(\"/admin/products\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                id: result.insertId\n            });\n        } finally{\n            if (connection) {\n                connection.release();\n            }\n        }\n    } catch (error) {\n        console.error(\"Error creating product:\", error);\n        if (error.code === \"ER_DUP_ENTRY\") {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"A product with this name already exists\"\n            }, {\n                status: 400\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: error.message || \"Failed to create product\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function PUT(request) {\n    try {\n        const data = await request.json();\n        console.log(\"Received product update data:\", data);\n        // Validate required fields\n        if (!data.id || !data.name || !data.product_type_id || !data.base_price || !data.flavor_size) {\n            console.error(\"Missing required fields:\", {\n                data\n            });\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Missing required fields\"\n            }, {\n                status: 400\n            });\n        }\n        // Validate count for packs\n        if (data.is_pack && (!data.count || data.count < 1)) {\n            console.error(\"Invalid count for pack:\", {\n                data\n            });\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Pack must have a count of at least 1\"\n            }, {\n                status: 400\n            });\n        }\n        // Only generate pack image if it's a pack and no image was uploaded\n        let imageUrl = data.image_url;\n        if (data.is_pack && !imageUrl) {\n            try {\n                imageUrl = await (0,_utils_generatePackImage__WEBPACK_IMPORTED_MODULE_3__.generatePackImage)(data.count, data.flavor_size);\n            } catch (error) {\n                console.error(\"Error generating pack image:\", error);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: false,\n                    error: \"Failed to generate pack image\"\n                }, {\n                    status: 500\n                });\n            }\n        }\n        let connection;\n        try {\n            connection = await _lib_db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getConnection();\n            console.log(\"Updating product with data:\", {\n                ...data,\n                image_url: imageUrl\n            });\n            await connection.query(`UPDATE products SET\n          name = ?,\n          description = ?,\n          product_type_id = ?,\n          is_pack = ?,\n          count = ?,\n          flavor_size = ?,\n          base_price = ?,\n          image_url = ?,\n          is_active = ?\n        WHERE id = ?`, [\n                data.name,\n                data.description || null,\n                data.product_type_id,\n                data.is_pack ? 1 : 0,\n                data.count || null,\n                data.flavor_size,\n                data.base_price,\n                imageUrl,\n                data.is_active ? 1 : 0,\n                data.id\n            ]);\n            (0,next_cache__WEBPACK_IMPORTED_MODULE_2__.revalidatePath)(\"/admin/products\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true\n            });\n        } finally{\n            if (connection) {\n                connection.release();\n            }\n        }\n    } catch (error) {\n        console.error(\"Error updating product:\", error);\n        if (error.code === \"ER_DUP_ENTRY\") {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"A product with this name already exists\"\n            }, {\n                status: 400\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: error.message || \"Failed to update product\"\n        }, {\n            status: 500\n        });\n    }\n}\n// DELETE - Soft delete a product\nasync function DELETE(request) {\n    try {\n        const session = await (0,next_auth__WEBPACK_IMPORTED_MODULE_5__.getServerSession)(_lib_auth_options__WEBPACK_IMPORTED_MODULE_6__.authOptions);\n        if (!session?.user?.id) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Unauthorized\"\n            }, {\n                status: 401\n            });\n        }\n        const { searchParams } = new URL(request.url);\n        const productId = searchParams.get(\"id\");\n        const reason = searchParams.get(\"reason\") || \"No reason provided\";\n        if (!productId) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Product ID is required\"\n            }, {\n                status: 400\n            });\n        }\n        const success = await _lib_services_viewService__WEBPACK_IMPORTED_MODULE_4__.ViewService.softDelete(\"products\", parseInt(productId), parseInt(session.user.id), reason);\n        if (success) {\n            (0,next_cache__WEBPACK_IMPORTED_MODULE_2__.revalidatePath)(\"/admin/products\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                message: \"Product soft deleted successfully\"\n            });\n        } else {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Failed to soft delete product\"\n            }, {\n                status: 500\n            });\n        }\n    } catch (error) {\n        console.error(\"Error soft deleting product:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: \"Failed to soft delete product\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/products/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/auth-config.ts":
/*!****************************!*\
  !*** ./lib/auth-config.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authConfig: () => (/* binding */ authConfig),\n/* harmony export */   getJwtSecret: () => (/* binding */ getJwtSecret),\n/* harmony export */   validateAuthConfig: () => (/* binding */ validateAuthConfig),\n/* harmony export */   validatePassword: () => (/* binding */ validatePassword)\n/* harmony export */ });\n// Authentication configuration with separate secrets for customer and admin\nconst authConfig = {\n    // JWT Secrets - MUST be set in environment variables\n    customerJwtSecret: process.env.CUSTOMER_JWT_SECRET,\n    adminJwtSecret: process.env.ADMIN_JWT_SECRET,\n    // Fallback secrets (for development only)\n    fallbackCustomerSecret: \"customer-dev-secret-change-in-production\",\n    fallbackAdminSecret: \"admin-dev-secret-change-in-production\",\n    // Token expiration times (in seconds)\n    customerTokenExpiry: 24 * 60 * 60,\n    adminTokenExpiry: 7 * 24 * 60 * 60,\n    refreshTokenExpiry: 30 * 24 * 60 * 60,\n    // Rate limiting\n    maxLoginAttempts: 5,\n    lockoutDuration: 15 * 60,\n    // Password requirements\n    minPasswordLength: 8,\n    requireUppercase: true,\n    requireLowercase: true,\n    requireNumbers: true,\n    requireSpecialChars: false,\n    // Session management\n    sessionTimeout: 30 * 60,\n    maxConcurrentSessions: 3,\n    // Cookie settings\n    cookieSettings: {\n        httpOnly: true,\n        secure: \"development\" === \"production\",\n        sameSite: \"strict\",\n        path: \"/\"\n    }\n};\n// Validate environment variables\nfunction validateAuthConfig() {\n    const errors = [];\n    if (!authConfig.customerJwtSecret && \"development\" === \"production\") {}\n    if (!authConfig.adminJwtSecret && \"development\" === \"production\") {}\n    if (errors.length > 0) {\n        throw new Error(`Authentication configuration errors:\\n${errors.join(\"\\n\")}`);\n    }\n}\n// Get JWT secret based on user type\nfunction getJwtSecret(userType) {\n    if (userType === \"customer\") {\n        return authConfig.customerJwtSecret || authConfig.fallbackCustomerSecret;\n    } else {\n        return authConfig.adminJwtSecret || authConfig.fallbackAdminSecret;\n    }\n}\n// Password validation\nfunction validatePassword(password) {\n    const errors = [];\n    if (password.length < authConfig.minPasswordLength) {\n        errors.push(`Password must be at least ${authConfig.minPasswordLength} characters long`);\n    }\n    if (authConfig.requireUppercase && !/[A-Z]/.test(password)) {\n        errors.push(\"Password must contain at least one uppercase letter\");\n    }\n    if (authConfig.requireLowercase && !/[a-z]/.test(password)) {\n        errors.push(\"Password must contain at least one lowercase letter\");\n    }\n    if (authConfig.requireNumbers && !/\\d/.test(password)) {\n        errors.push(\"Password must contain at least one number\");\n    }\n    if (authConfig.requireSpecialChars && !/[!@#$%^&*(),.?\":{}|<>]/.test(password)) {\n        errors.push(\"Password must contain at least one special character\");\n    }\n    return {\n        isValid: errors.length === 0,\n        errors\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvYXV0aC1jb25maWcudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLDRFQUE0RTtBQUNyRSxNQUFNQSxhQUFhO0lBQ3hCLHFEQUFxRDtJQUNyREMsbUJBQW1CQyxRQUFRQyxHQUFHLENBQUNDLG1CQUFtQjtJQUNsREMsZ0JBQWdCSCxRQUFRQyxHQUFHLENBQUNHLGdCQUFnQjtJQUU1QywwQ0FBMEM7SUFDMUNDLHdCQUF3QjtJQUN4QkMscUJBQXFCO0lBRXJCLHNDQUFzQztJQUN0Q0MscUJBQXFCLEtBQUssS0FBSztJQUMvQkMsa0JBQWtCLElBQUksS0FBSyxLQUFLO0lBQ2hDQyxvQkFBb0IsS0FBSyxLQUFLLEtBQUs7SUFFbkMsZ0JBQWdCO0lBQ2hCQyxrQkFBa0I7SUFDbEJDLGlCQUFpQixLQUFLO0lBRXRCLHdCQUF3QjtJQUN4QkMsbUJBQW1CO0lBQ25CQyxrQkFBa0I7SUFDbEJDLGtCQUFrQjtJQUNsQkMsZ0JBQWdCO0lBQ2hCQyxxQkFBcUI7SUFFckIscUJBQXFCO0lBQ3JCQyxnQkFBZ0IsS0FBSztJQUNyQkMsdUJBQXVCO0lBRXZCLGtCQUFrQjtJQUNsQkMsZ0JBQWdCO1FBQ2RDLFVBQVU7UUFDVkMsUUFBUXJCLGtCQUF5QjtRQUNqQ3NCLFVBQVU7UUFDVkMsTUFBTTtJQUNSO0FBQ0YsRUFBRTtBQUVGLGlDQUFpQztBQUMxQixTQUFTQztJQUNkLE1BQU1DLFNBQW1CLEVBQUU7SUFFM0IsSUFBSSxDQUFDM0IsV0FBV0MsaUJBQWlCLElBQUlDLGtCQUF5QixjQUFjLEVBRTNFO0lBRUQsSUFBSSxDQUFDRixXQUFXSyxjQUFjLElBQUlILGtCQUF5QixjQUFjLEVBRXhFO0lBRUQsSUFBSXlCLE9BQU9FLE1BQU0sR0FBRyxHQUFHO1FBQ3JCLE1BQU0sSUFBSUMsTUFBTSxDQUFDLHNDQUFzQyxFQUFFSCxPQUFPSSxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQzlFO0FBQ0Y7QUFFQSxvQ0FBb0M7QUFDN0IsU0FBU0MsYUFBYUMsUUFBOEI7SUFDekQsSUFBSUEsYUFBYSxZQUFZO1FBQzNCLE9BQU9qQyxXQUFXQyxpQkFBaUIsSUFBSUQsV0FBV08sc0JBQXNCO0lBQzFFLE9BQU87UUFDTCxPQUFPUCxXQUFXSyxjQUFjLElBQUlMLFdBQVdRLG1CQUFtQjtJQUNwRTtBQUNGO0FBRUEsc0JBQXNCO0FBQ2YsU0FBUzBCLGlCQUFpQkMsUUFBZ0I7SUFDL0MsTUFBTVIsU0FBbUIsRUFBRTtJQUUzQixJQUFJUSxTQUFTTixNQUFNLEdBQUc3QixXQUFXYyxpQkFBaUIsRUFBRTtRQUNsRGEsT0FBT0MsSUFBSSxDQUFDLENBQUMsMEJBQTBCLEVBQUU1QixXQUFXYyxpQkFBaUIsQ0FBQyxnQkFBZ0IsQ0FBQztJQUN6RjtJQUVBLElBQUlkLFdBQVdlLGdCQUFnQixJQUFJLENBQUMsUUFBUXFCLElBQUksQ0FBQ0QsV0FBVztRQUMxRFIsT0FBT0MsSUFBSSxDQUFDO0lBQ2Q7SUFFQSxJQUFJNUIsV0FBV2dCLGdCQUFnQixJQUFJLENBQUMsUUFBUW9CLElBQUksQ0FBQ0QsV0FBVztRQUMxRFIsT0FBT0MsSUFBSSxDQUFDO0lBQ2Q7SUFFQSxJQUFJNUIsV0FBV2lCLGNBQWMsSUFBSSxDQUFDLEtBQUttQixJQUFJLENBQUNELFdBQVc7UUFDckRSLE9BQU9DLElBQUksQ0FBQztJQUNkO0lBRUEsSUFBSTVCLFdBQVdrQixtQkFBbUIsSUFBSSxDQUFDLHlCQUF5QmtCLElBQUksQ0FBQ0QsV0FBVztRQUM5RVIsT0FBT0MsSUFBSSxDQUFDO0lBQ2Q7SUFFQSxPQUFPO1FBQ0xTLFNBQVNWLE9BQU9FLE1BQU0sS0FBSztRQUMzQkY7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY3J1bWJsZWQtd2Vic2l0ZS8uL2xpYi9hdXRoLWNvbmZpZy50cz9lZmUzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEF1dGhlbnRpY2F0aW9uIGNvbmZpZ3VyYXRpb24gd2l0aCBzZXBhcmF0ZSBzZWNyZXRzIGZvciBjdXN0b21lciBhbmQgYWRtaW5cclxuZXhwb3J0IGNvbnN0IGF1dGhDb25maWcgPSB7XHJcbiAgLy8gSldUIFNlY3JldHMgLSBNVVNUIGJlIHNldCBpbiBlbnZpcm9ubWVudCB2YXJpYWJsZXNcclxuICBjdXN0b21lckp3dFNlY3JldDogcHJvY2Vzcy5lbnYuQ1VTVE9NRVJfSldUX1NFQ1JFVCxcclxuICBhZG1pbkp3dFNlY3JldDogcHJvY2Vzcy5lbnYuQURNSU5fSldUX1NFQ1JFVCxcclxuICBcclxuICAvLyBGYWxsYmFjayBzZWNyZXRzIChmb3IgZGV2ZWxvcG1lbnQgb25seSlcclxuICBmYWxsYmFja0N1c3RvbWVyU2VjcmV0OiAnY3VzdG9tZXItZGV2LXNlY3JldC1jaGFuZ2UtaW4tcHJvZHVjdGlvbicsXHJcbiAgZmFsbGJhY2tBZG1pblNlY3JldDogJ2FkbWluLWRldi1zZWNyZXQtY2hhbmdlLWluLXByb2R1Y3Rpb24nLFxyXG4gIFxyXG4gIC8vIFRva2VuIGV4cGlyYXRpb24gdGltZXMgKGluIHNlY29uZHMpXHJcbiAgY3VzdG9tZXJUb2tlbkV4cGlyeTogMjQgKiA2MCAqIDYwLCAvLyAyNCBob3Vyc1xyXG4gIGFkbWluVG9rZW5FeHBpcnk6IDcgKiAyNCAqIDYwICogNjAsIC8vIDcgZGF5c1xyXG4gIHJlZnJlc2hUb2tlbkV4cGlyeTogMzAgKiAyNCAqIDYwICogNjAsIC8vIDMwIGRheXNcclxuICBcclxuICAvLyBSYXRlIGxpbWl0aW5nXHJcbiAgbWF4TG9naW5BdHRlbXB0czogNSxcclxuICBsb2Nrb3V0RHVyYXRpb246IDE1ICogNjAsIC8vIDE1IG1pbnV0ZXNcclxuICBcclxuICAvLyBQYXNzd29yZCByZXF1aXJlbWVudHNcclxuICBtaW5QYXNzd29yZExlbmd0aDogOCxcclxuICByZXF1aXJlVXBwZXJjYXNlOiB0cnVlLFxyXG4gIHJlcXVpcmVMb3dlcmNhc2U6IHRydWUsXHJcbiAgcmVxdWlyZU51bWJlcnM6IHRydWUsXHJcbiAgcmVxdWlyZVNwZWNpYWxDaGFyczogZmFsc2UsXHJcbiAgXHJcbiAgLy8gU2Vzc2lvbiBtYW5hZ2VtZW50XHJcbiAgc2Vzc2lvblRpbWVvdXQ6IDMwICogNjAsIC8vIDMwIG1pbnV0ZXNcclxuICBtYXhDb25jdXJyZW50U2Vzc2lvbnM6IDMsXHJcbiAgXHJcbiAgLy8gQ29va2llIHNldHRpbmdzXHJcbiAgY29va2llU2V0dGluZ3M6IHtcclxuICAgIGh0dHBPbmx5OiB0cnVlLFxyXG4gICAgc2VjdXJlOiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nLFxyXG4gICAgc2FtZVNpdGU6ICdzdHJpY3QnIGFzIGNvbnN0LFxyXG4gICAgcGF0aDogJy8nLFxyXG4gIH1cclxufTtcclxuXHJcbi8vIFZhbGlkYXRlIGVudmlyb25tZW50IHZhcmlhYmxlc1xyXG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVBdXRoQ29uZmlnKCkge1xyXG4gIGNvbnN0IGVycm9yczogc3RyaW5nW10gPSBbXTtcclxuICBcclxuICBpZiAoIWF1dGhDb25maWcuY3VzdG9tZXJKd3RTZWNyZXQgJiYgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xyXG4gICAgZXJyb3JzLnB1c2goJ0NVU1RPTUVSX0pXVF9TRUNSRVQgZW52aXJvbm1lbnQgdmFyaWFibGUgaXMgcmVxdWlyZWQgaW4gcHJvZHVjdGlvbicpO1xyXG4gIH1cclxuICBcclxuICBpZiAoIWF1dGhDb25maWcuYWRtaW5Kd3RTZWNyZXQgJiYgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xyXG4gICAgZXJyb3JzLnB1c2goJ0FETUlOX0pXVF9TRUNSRVQgZW52aXJvbm1lbnQgdmFyaWFibGUgaXMgcmVxdWlyZWQgaW4gcHJvZHVjdGlvbicpO1xyXG4gIH1cclxuICBcclxuICBpZiAoZXJyb3JzLmxlbmd0aCA+IDApIHtcclxuICAgIHRocm93IG5ldyBFcnJvcihgQXV0aGVudGljYXRpb24gY29uZmlndXJhdGlvbiBlcnJvcnM6XFxuJHtlcnJvcnMuam9pbignXFxuJyl9YCk7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBHZXQgSldUIHNlY3JldCBiYXNlZCBvbiB1c2VyIHR5cGVcclxuZXhwb3J0IGZ1bmN0aW9uIGdldEp3dFNlY3JldCh1c2VyVHlwZTogJ2N1c3RvbWVyJyB8ICdhZG1pbicpOiBzdHJpbmcge1xyXG4gIGlmICh1c2VyVHlwZSA9PT0gJ2N1c3RvbWVyJykge1xyXG4gICAgcmV0dXJuIGF1dGhDb25maWcuY3VzdG9tZXJKd3RTZWNyZXQgfHwgYXV0aENvbmZpZy5mYWxsYmFja0N1c3RvbWVyU2VjcmV0O1xyXG4gIH0gZWxzZSB7XHJcbiAgICByZXR1cm4gYXV0aENvbmZpZy5hZG1pbkp3dFNlY3JldCB8fCBhdXRoQ29uZmlnLmZhbGxiYWNrQWRtaW5TZWNyZXQ7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBQYXNzd29yZCB2YWxpZGF0aW9uXHJcbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZVBhc3N3b3JkKHBhc3N3b3JkOiBzdHJpbmcpOiB7IGlzVmFsaWQ6IGJvb2xlYW47IGVycm9yczogc3RyaW5nW10gfSB7XHJcbiAgY29uc3QgZXJyb3JzOiBzdHJpbmdbXSA9IFtdO1xyXG4gIFxyXG4gIGlmIChwYXNzd29yZC5sZW5ndGggPCBhdXRoQ29uZmlnLm1pblBhc3N3b3JkTGVuZ3RoKSB7XHJcbiAgICBlcnJvcnMucHVzaChgUGFzc3dvcmQgbXVzdCBiZSBhdCBsZWFzdCAke2F1dGhDb25maWcubWluUGFzc3dvcmRMZW5ndGh9IGNoYXJhY3RlcnMgbG9uZ2ApO1xyXG4gIH1cclxuICBcclxuICBpZiAoYXV0aENvbmZpZy5yZXF1aXJlVXBwZXJjYXNlICYmICEvW0EtWl0vLnRlc3QocGFzc3dvcmQpKSB7XHJcbiAgICBlcnJvcnMucHVzaCgnUGFzc3dvcmQgbXVzdCBjb250YWluIGF0IGxlYXN0IG9uZSB1cHBlcmNhc2UgbGV0dGVyJyk7XHJcbiAgfVxyXG4gIFxyXG4gIGlmIChhdXRoQ29uZmlnLnJlcXVpcmVMb3dlcmNhc2UgJiYgIS9bYS16XS8udGVzdChwYXNzd29yZCkpIHtcclxuICAgIGVycm9ycy5wdXNoKCdQYXNzd29yZCBtdXN0IGNvbnRhaW4gYXQgbGVhc3Qgb25lIGxvd2VyY2FzZSBsZXR0ZXInKTtcclxuICB9XHJcbiAgXHJcbiAgaWYgKGF1dGhDb25maWcucmVxdWlyZU51bWJlcnMgJiYgIS9cXGQvLnRlc3QocGFzc3dvcmQpKSB7XHJcbiAgICBlcnJvcnMucHVzaCgnUGFzc3dvcmQgbXVzdCBjb250YWluIGF0IGxlYXN0IG9uZSBudW1iZXInKTtcclxuICB9XHJcbiAgXHJcbiAgaWYgKGF1dGhDb25maWcucmVxdWlyZVNwZWNpYWxDaGFycyAmJiAhL1shQCMkJV4mKigpLC4/XCI6e318PD5dLy50ZXN0KHBhc3N3b3JkKSkge1xyXG4gICAgZXJyb3JzLnB1c2goJ1Bhc3N3b3JkIG11c3QgY29udGFpbiBhdCBsZWFzdCBvbmUgc3BlY2lhbCBjaGFyYWN0ZXInKTtcclxuICB9XHJcbiAgXHJcbiAgcmV0dXJuIHtcclxuICAgIGlzVmFsaWQ6IGVycm9ycy5sZW5ndGggPT09IDAsXHJcbiAgICBlcnJvcnNcclxuICB9O1xyXG59ICJdLCJuYW1lcyI6WyJhdXRoQ29uZmlnIiwiY3VzdG9tZXJKd3RTZWNyZXQiLCJwcm9jZXNzIiwiZW52IiwiQ1VTVE9NRVJfSldUX1NFQ1JFVCIsImFkbWluSnd0U2VjcmV0IiwiQURNSU5fSldUX1NFQ1JFVCIsImZhbGxiYWNrQ3VzdG9tZXJTZWNyZXQiLCJmYWxsYmFja0FkbWluU2VjcmV0IiwiY3VzdG9tZXJUb2tlbkV4cGlyeSIsImFkbWluVG9rZW5FeHBpcnkiLCJyZWZyZXNoVG9rZW5FeHBpcnkiLCJtYXhMb2dpbkF0dGVtcHRzIiwibG9ja291dER1cmF0aW9uIiwibWluUGFzc3dvcmRMZW5ndGgiLCJyZXF1aXJlVXBwZXJjYXNlIiwicmVxdWlyZUxvd2VyY2FzZSIsInJlcXVpcmVOdW1iZXJzIiwicmVxdWlyZVNwZWNpYWxDaGFycyIsInNlc3Npb25UaW1lb3V0IiwibWF4Q29uY3VycmVudFNlc3Npb25zIiwiY29va2llU2V0dGluZ3MiLCJodHRwT25seSIsInNlY3VyZSIsInNhbWVTaXRlIiwicGF0aCIsInZhbGlkYXRlQXV0aENvbmZpZyIsImVycm9ycyIsInB1c2giLCJsZW5ndGgiLCJFcnJvciIsImpvaW4iLCJnZXRKd3RTZWNyZXQiLCJ1c2VyVHlwZSIsInZhbGlkYXRlUGFzc3dvcmQiLCJwYXNzd29yZCIsInRlc3QiLCJpc1ZhbGlkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./lib/auth-config.ts\n");

/***/ }),

/***/ "(rsc)/./lib/auth-options.ts":
/*!*****************************!*\
  !*** ./lib/auth-options.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authOptions: () => (/* binding */ authOptions)\n/* harmony export */ });\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth/providers/credentials */ \"(rsc)/./node_modules/next-auth/providers/credentials.js\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bcryptjs */ \"(rsc)/./node_modules/bcryptjs/index.js\");\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./db */ \"(rsc)/./lib/db.ts\");\n\n\n\nconst authOptions = {\n    providers: [\n        (0,next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n            name: \"Credentials\",\n            credentials: {\n                email: {\n                    label: \"Email\",\n                    type: \"email\"\n                },\n                password: {\n                    label: \"Password\",\n                    type: \"password\"\n                }\n            },\n            async authorize (credentials) {\n                if (!credentials?.email || !credentials?.password) {\n                    return null;\n                }\n                const [rows] = await _db__WEBPACK_IMPORTED_MODULE_2__[\"default\"].query(\"SELECT * FROM customers WHERE email = ?\", [\n                    credentials.email\n                ]);\n                const user = rows[0];\n                if (!user) {\n                    return null;\n                }\n                // Compare password with bcrypt\n                const isPasswordValid = await (0,bcryptjs__WEBPACK_IMPORTED_MODULE_1__.compare)(credentials.password, user.password);\n                if (!isPasswordValid) {\n                    return null;\n                }\n                return {\n                    id: user.id.toString(),\n                    email: user.email,\n                    name: `${user.first_name} ${user.last_name}`,\n                    firstName: user.first_name,\n                    lastName: user.last_name,\n                    phone: user.phone\n                };\n            }\n        })\n    ],\n    callbacks: {\n        async jwt ({ token, user }) {\n            if (user) {\n                token.id = user.id;\n                token.firstName = user.firstName;\n                token.lastName = user.lastName;\n                token.phone = user.phone;\n            }\n            return token;\n        },\n        async session ({ session, token }) {\n            if (session.user) {\n                session.user.id = token.id;\n                session.user.firstName = token.firstName;\n                session.user.lastName = token.lastName;\n                session.user.phone = token.phone;\n            }\n            return session;\n        }\n    },\n    pages: {\n        signIn: \"/auth/login\",\n        signOut: \"/auth/signout\"\n    },\n    session: {\n        strategy: \"jwt\",\n        maxAge: 24 * 60 * 60\n    },\n    jwt: {\n        maxAge: 24 * 60 * 60\n    },\n    secret: process.env.NEXTAUTH_SECRET || \"x+1DNU9w01MI2M7bNhUuI9F74OxrivACw4XemPMY8gE=\",\n    debug: \"development\" === \"development\",\n    useSecureCookies: \"development\" === \"production\",\n    cookies: {\n        sessionToken: {\n            name: `next-auth.session-token`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: \"development\" === \"production\"\n            }\n        }\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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XSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dEF1dGhPcHRpb25zIH0gZnJvbSAnbmV4dC1hdXRoJztcbmltcG9ydCBDcmVkZW50aWFsc1Byb3ZpZGVyIGZyb20gJ25leHQtYXV0aC9wcm92aWRlcnMvY3JlZGVudGlhbHMnO1xuaW1wb3J0IHsgY29tcGFyZSB9IGZyb20gJ2JjcnlwdGpzJztcbmltcG9ydCBkYiBmcm9tICcuL2RiJztcbmltcG9ydCB7IEpXVCB9IGZyb20gJ25leHQtYXV0aC9qd3QnO1xuXG5pbnRlcmZhY2UgVXNlciB7XG4gIGlkOiBzdHJpbmc7XG4gIGVtYWlsOiBzdHJpbmc7XG4gIG5hbWU6IHN0cmluZztcbiAgZmlyc3ROYW1lOiBzdHJpbmc7XG4gIGxhc3ROYW1lOiBzdHJpbmc7XG4gIHBob25lOiBzdHJpbmc7XG59XG5cbmRlY2xhcmUgbW9kdWxlICduZXh0LWF1dGgnIHtcbiAgaW50ZXJmYWNlIFNlc3Npb24ge1xuICAgIHVzZXI6IFVzZXI7XG4gIH1cbiAgaW50ZXJmYWNlIFVzZXIge1xuICAgIGZpcnN0TmFtZTogc3RyaW5nO1xuICAgIGxhc3ROYW1lOiBzdHJpbmc7XG4gICAgcGhvbmU6IHN0cmluZztcbiAgfVxufVxuXG5kZWNsYXJlIG1vZHVsZSAnbmV4dC1hdXRoL2p3dCcge1xuICBpbnRlcmZhY2UgSldUIHtcbiAgICBpZDogc3RyaW5nO1xuICAgIGZpcnN0TmFtZTogc3RyaW5nO1xuICAgIGxhc3ROYW1lOiBzdHJpbmc7XG4gICAgcGhvbmU6IHN0cmluZztcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgYXV0aE9wdGlvbnM6IE5leHRBdXRoT3B0aW9ucyA9IHtcbiAgcHJvdmlkZXJzOiBbXG4gICAgQ3JlZGVudGlhbHNQcm92aWRlcih7XG4gICAgICBuYW1lOiAnQ3JlZGVudGlhbHMnLFxuICAgICAgY3JlZGVudGlhbHM6IHtcbiAgICAgICAgZW1haWw6IHsgbGFiZWw6ICdFbWFpbCcsIHR5cGU6ICdlbWFpbCcgfSxcbiAgICAgICAgcGFzc3dvcmQ6IHsgbGFiZWw6ICdQYXNzd29yZCcsIHR5cGU6ICdwYXNzd29yZCcgfVxuICAgICAgfSxcbiAgICAgIGFzeW5jIGF1dGhvcml6ZShjcmVkZW50aWFscykge1xuICAgICAgICBpZiAoIWNyZWRlbnRpYWxzPy5lbWFpbCB8fCAhY3JlZGVudGlhbHM/LnBhc3N3b3JkKSB7XG4gICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBbcm93c10gPSBhd2FpdCBkYi5xdWVyeShcbiAgICAgICAgICAnU0VMRUNUICogRlJPTSBjdXN0b21lcnMgV0hFUkUgZW1haWwgPSA/JyxcbiAgICAgICAgICBbY3JlZGVudGlhbHMuZW1haWxdXG4gICAgICAgICk7XG5cbiAgICAgICAgY29uc3QgdXNlciA9IChyb3dzIGFzIGFueVtdKVswXTtcblxuICAgICAgICBpZiAoIXVzZXIpIHtcbiAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIENvbXBhcmUgcGFzc3dvcmQgd2l0aCBiY3J5cHRcbiAgICAgICAgY29uc3QgaXNQYXNzd29yZFZhbGlkID0gYXdhaXQgY29tcGFyZShjcmVkZW50aWFscy5wYXNzd29yZCwgdXNlci5wYXNzd29yZCk7XG4gICAgICAgIFxuICAgICAgICBpZiAoIWlzUGFzc3dvcmRWYWxpZCkge1xuICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBpZDogdXNlci5pZC50b1N0cmluZygpLFxuICAgICAgICAgIGVtYWlsOiB1c2VyLmVtYWlsLFxuICAgICAgICAgIG5hbWU6IGAke3VzZXIuZmlyc3RfbmFtZX0gJHt1c2VyLmxhc3RfbmFtZX1gLFxuICAgICAgICAgIGZpcnN0TmFtZTogdXNlci5maXJzdF9uYW1lLFxuICAgICAgICAgIGxhc3ROYW1lOiB1c2VyLmxhc3RfbmFtZSxcbiAgICAgICAgICBwaG9uZTogdXNlci5waG9uZVxuICAgICAgICB9O1xuICAgICAgfVxuICAgIH0pXG4gIF0sXG4gIGNhbGxiYWNrczoge1xuICAgIGFzeW5jIGp3dCh7IHRva2VuLCB1c2VyIH0pIHtcbiAgICAgIGlmICh1c2VyKSB7XG4gICAgICAgIHRva2VuLmlkID0gdXNlci5pZDtcbiAgICAgICAgdG9rZW4uZmlyc3ROYW1lID0gdXNlci5maXJzdE5hbWU7XG4gICAgICAgIHRva2VuLmxhc3ROYW1lID0gdXNlci5sYXN0TmFtZTtcbiAgICAgICAgdG9rZW4ucGhvbmUgPSB1c2VyLnBob25lO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRva2VuO1xuICAgIH0sXG4gICAgYXN5bmMgc2Vzc2lvbih7IHNlc3Npb24sIHRva2VuIH0pIHtcbiAgICAgIGlmIChzZXNzaW9uLnVzZXIpIHtcbiAgICAgICAgc2Vzc2lvbi51c2VyLmlkID0gdG9rZW4uaWQ7XG4gICAgICAgIHNlc3Npb24udXNlci5maXJzdE5hbWUgPSB0b2tlbi5maXJzdE5hbWU7XG4gICAgICAgIHNlc3Npb24udXNlci5sYXN0TmFtZSA9IHRva2VuLmxhc3ROYW1lO1xuICAgICAgICBzZXNzaW9uLnVzZXIucGhvbmUgPSB0b2tlbi5waG9uZTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBzZXNzaW9uO1xuICAgIH1cbiAgfSxcbiAgcGFnZXM6IHtcbiAgICBzaWduSW46ICcvYXV0aC9sb2dpbicsXG4gICAgc2lnbk91dDogJy9hdXRoL3NpZ25vdXQnXG4gIH0sXG4gIHNlc3Npb246IHtcbiAgICBzdHJhdGVneTogJ2p3dCcsXG4gICAgbWF4QWdlOiAyNCAqIDYwICogNjAsIC8vIDI0IGhvdXJzXG4gIH0sXG4gIGp3dDoge1xuICAgIG1heEFnZTogMjQgKiA2MCAqIDYwLCAvLyAyNCBob3Vyc1xuICB9LFxuICBzZWNyZXQ6IHByb2Nlc3MuZW52Lk5FWFRBVVRIX1NFQ1JFVCB8fCAneCsxRE5VOXcwMU1JMk03Yk5oVXVJOUY3NE94cml2QUN3NFhlbVBNWThnRT0nLFxuICBkZWJ1ZzogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcsXG4gIHVzZVNlY3VyZUNvb2tpZXM6IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicsXG4gIGNvb2tpZXM6IHtcbiAgICBzZXNzaW9uVG9rZW46IHtcbiAgICAgIG5hbWU6IGBuZXh0LWF1dGguc2Vzc2lvbi10b2tlbmAsXG4gICAgICBvcHRpb25zOiB7XG4gICAgICAgIGh0dHBPbmx5OiB0cnVlLFxuICAgICAgICBzYW1lU2l0ZTogJ2xheCcsXG4gICAgICAgIHBhdGg6ICcvJyxcbiAgICAgICAgc2VjdXJlOiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nXG4gICAgICB9XG4gICAgfVxuICB9XG59OyAiXSwibmFtZXMiOlsiQ3JlZGVudGlhbHNQcm92aWRlciIsImNvbXBhcmUiLCJkYiIsImF1dGhPcHRpb25zIiwicHJvdmlkZXJzIiwibmFtZSIsImNyZWRlbnRpYWxzIiwiZW1haWwiLCJsYWJlbCIsInR5cGUiLCJwYXNzd29yZCIsImF1dGhvcml6ZSIsInJvd3MiLCJxdWVyeSIsInVzZXIiLCJpc1Bhc3N3b3JkVmFsaWQiLCJpZCIsInRvU3RyaW5nIiwiZmlyc3RfbmFtZSIsImxhc3RfbmFtZSIsImZpcnN0TmFtZSIsImxhc3ROYW1lIiwicGhvbmUiLCJjYWxsYmFja3MiLCJqd3QiLCJ0b2tlbiIsInNlc3Npb24iLCJwYWdlcyIsInNpZ25JbiIsInNpZ25PdXQiLCJzdHJhdGVneSIsIm1heEFnZSIsInNlY3JldCIsInByb2Nlc3MiLCJlbnYiLCJORVhUQVVUSF9TRUNSRVQiLCJkZWJ1ZyIsInVzZVNlY3VyZUNvb2tpZXMiLCJjb29raWVzIiwic2Vzc2lvblRva2VuIiwib3B0aW9ucyIsImh0dHBPbmx5Iiwic2FtZVNpdGUiLCJwYXRoIiwic2VjdXJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./lib/auth-options.ts\n");

/***/ }),

/***/ "(rsc)/./lib/db.ts":
/*!*******************!*\
  !*** ./lib/db.ts ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getOrderByTracking: () => (/* binding */ getOrderByTracking),\n/* harmony export */   getOrderDetails: () => (/* binding */ getOrderDetails),\n/* harmony export */   getOrders: () => (/* binding */ getOrders),\n/* harmony export */   saveOrder: () => (/* binding */ saveOrder),\n/* harmony export */   testConnection: () => (/* binding */ testConnection),\n/* harmony export */   updateOrderStatus: () => (/* binding */ updateOrderStatus)\n/* harmony export */ });\n/* harmony import */ var mysql2_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mysql2/promise */ \"(rsc)/./node_modules/mysql2/promise.js\");\n\n// Create MySQL connection pool\nconst pool = mysql2_promise__WEBPACK_IMPORTED_MODULE_0__.createPool({\n    host: process.env.DB_HOST || \"localhost\",\n    user: process.env.DB_USER || \"root\",\n    password: process.env.DB_PASSWORD || \"Goodmorning@1\",\n    database: process.env.DB_NAME || \"crumbled_nextDB\",\n    waitForConnections: true,\n    connectionLimit: 10,\n    queueLimit: 0,\n    enableKeepAlive: true,\n    keepAliveInitialDelay: 10000,\n    idleTimeout: 60000,\n    maxIdle: 5 // Maximum number of idle connections to keep\n});\n// Test connection function\nasync function testConnection() {\n    let connection;\n    try {\n        connection = await pool.getConnection();\n        const [result] = await connection.query(\"SELECT NOW() as `current_time`, VERSION() as mysql_version\");\n        return {\n            success: true,\n            message: \"Database connected successfully\",\n            timestamp: result[0].current_time,\n            version: result[0].mysql_version\n        };\n    } catch (error) {\n        console.error(\"Database connection failed:\", error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Unknown connection error\"\n        };\n    } finally{\n        if (connection) {\n            connection.release();\n        }\n    }\n}\nasync function saveOrder(orderData) {\n    let connection;\n    try {\n        connection = await pool.getConnection();\n        // Check if orders table exists\n        const [tableCheck] = await connection.query(\"SELECT COUNT(*) as count FROM information_schema.tables WHERE table_schema = 'crumbled_nextDB' AND table_name = 'orders'\");\n        if (tableCheck[0].count === 0) {\n            return {\n                success: false,\n                error: \"Orders table does not exist. Please set up the database first.\"\n            };\n        }\n        // Generate tracking ID if not provided\n        if (!orderData.trackingId) {\n            orderData.trackingId = `CC${Math.random().toString(36).substring(2, 10).toUpperCase()}`;\n        }\n        // Start transaction by inserting order first\n        const [orderResult] = await connection.query(`INSERT INTO orders (\n        customer_name, \n        customer_email, \n        customer_phone, \n        address, \n        city, \n        state, \n        zip_code, \n        total_amount,\n        tracking_id,\n        order_status\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, 'pending')`, [\n            orderData.customerName,\n            orderData.customerEmail,\n            orderData.customerPhone,\n            orderData.address,\n            orderData.city,\n            orderData.state,\n            orderData.zipCode,\n            orderData.totalAmount,\n            orderData.trackingId || `CC${Math.random().toString(36).substring(2, 10).toUpperCase()}`\n        ]);\n        const orderId = orderResult.insertId;\n        // Process each item and update stock\n        for (const item of orderData.items){\n            // Insert order item\n            await connection.query(`INSERT INTO order_items (\n          order_id, \n          product_id, \n          product_name, \n          quantity, \n          price, \n          is_bundle, \n          bundle_size, \n          bundle_items\n        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)`, [\n                orderId,\n                item.id,\n                item.name,\n                item.quantity,\n                item.price,\n                !!item.isBundle,\n                item.bundleSize || null,\n                item.bundleItems ? JSON.stringify(item.bundleItems) : null\n            ]);\n            // Update stock for individual items\n            if (!item.isBundle) {\n                // For regular items, reduce stock directly\n                const [stockUpdate] = await connection.query(`UPDATE stock \n           SET quantity = quantity - ?, updated_at = CURRENT_TIMESTAMP\n           WHERE product_id = ?\n           RETURNING quantity`, [\n                    item.quantity,\n                    item.id\n                ]);\n                // Check if stock went negative (optional warning)\n                if (stockUpdate.length > 0 && stockUpdate[0].quantity < 0) {\n                    console.warn(`Warning: Stock for product ${item.name} (ID: ${item.id}) went negative: ${stockUpdate[0].quantity}`);\n                }\n            } else {\n                // For bundles, reduce stock for each bundled item\n                if (item.bundleItems && Array.isArray(item.bundleItems)) {\n                    for (const bundleItem of item.bundleItems){\n                        const [stockUpdate] = await connection.query(`UPDATE stock \n               SET quantity = quantity - ?, updated_at = CURRENT_TIMESTAMP\n               WHERE product_id = ?\n               RETURNING quantity, product_name`, [\n                            item.quantity,\n                            bundleItem.id\n                        ]);\n                        if (stockUpdate.length > 0 && stockUpdate[0].quantity < 0) {\n                            console.warn(`Warning: Stock for bundled product ${stockUpdate[0].product_name} (ID: ${bundleItem.id}) went negative: ${stockUpdate[0].quantity}`);\n                        }\n                    }\n                }\n            }\n        }\n        return {\n            success: true,\n            orderId,\n            trackingId: orderData.trackingId\n        };\n    } catch (error) {\n        console.error(\"Error saving order:\", error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Database operation failed\"\n        };\n    } finally{\n        if (connection) {\n            connection.release();\n        }\n    }\n}\nasync function getOrders() {\n    let connection;\n    try {\n        connection = await pool.getConnection();\n        // Check if orders table exists\n        const [tableCheck] = await connection.query(\"SELECT COUNT(*) as count FROM information_schema.tables WHERE table_schema = 'crumbled_nextDB' AND table_name = 'orders'\");\n        if (tableCheck[0].count === 0) {\n            return {\n                success: false,\n                error: \"Orders table does not exist. Please set up the database first.\"\n            };\n        }\n        const [orders] = await connection.query(\"SELECT * FROM orders ORDER BY created_at DESC\");\n        return {\n            success: true,\n            orders\n        };\n    } catch (error) {\n        console.error(\"Error fetching orders:\", error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Database connection failed\"\n        };\n    } finally{\n        if (connection) {\n            connection.release();\n        }\n    }\n}\nasync function getOrderDetails(orderId) {\n    let connection;\n    try {\n        connection = await pool.getConnection();\n        const [order] = await connection.query(\"SELECT * FROM orders WHERE id = ?\", [\n            orderId\n        ]);\n        if (order.length === 0) {\n            return {\n                success: false,\n                error: \"Order not found\"\n            };\n        }\n        const [items] = await connection.query(\"SELECT * FROM order_items WHERE order_id = ?\", [\n            orderId\n        ]);\n        return {\n            success: true,\n            order: order[0],\n            items\n        };\n    } catch (error) {\n        console.error(\"Error fetching order details:\", error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Database operation failed\"\n        };\n    } finally{\n        if (connection) {\n            connection.release();\n        }\n    }\n}\nasync function getOrderByTracking(trackingId, email) {\n    let connection;\n    try {\n        connection = await pool.getConnection();\n        const [order] = await connection.query(\"SELECT * FROM orders WHERE tracking_id = ? AND customer_email = ?\", [\n            trackingId,\n            email\n        ]);\n        if (order.length === 0) {\n            return {\n                success: false,\n                error: \"Order not found or email doesn't match\"\n            };\n        }\n        const [items] = await connection.query(\"SELECT * FROM order_items WHERE order_id = ?\", [\n            order[0].id\n        ]);\n        return {\n            success: true,\n            order: order[0],\n            items\n        };\n    } catch (error) {\n        console.error(\"Error fetching order by tracking:\", error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Database operation failed\"\n        };\n    } finally{\n        if (connection) {\n            connection.release();\n        }\n    }\n}\nasync function updateOrderStatus(orderId, status) {\n    let connection;\n    try {\n        connection = await pool.getConnection();\n        const [result] = await connection.query(\"UPDATE orders SET order_status = ?, updated_at = CURRENT_TIMESTAMP WHERE id = ?\", [\n            status,\n            orderId\n        ]);\n        return {\n            success: true,\n            message: \"Order status updated successfully\"\n        };\n    } catch (error) {\n        console.error(\"Error updating order status:\", error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Database operation failed\"\n        };\n    } finally{\n        if (connection) {\n            connection.release();\n        }\n    }\n}\n// Export the pool as default\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (pool);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/db.ts\n");

/***/ }),

/***/ "(rsc)/./lib/middleware/auth.ts":
/*!********************************!*\
  !*** ./lib/middleware/auth.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   adminAuth: () => (/* binding */ adminAuth),\n/* harmony export */   customerAuth: () => (/* binding */ customerAuth),\n/* harmony export */   generateRefreshToken: () => (/* binding */ generateRefreshToken),\n/* harmony export */   generateSessionId: () => (/* binding */ generateSessionId),\n/* harmony export */   generateToken: () => (/* binding */ generateToken),\n/* harmony export */   verifyJWT: () => (/* binding */ verifyJWT)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_auth_config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/auth-config */ \"(rsc)/./lib/auth-config.ts\");\n\n\n\n// Generate JWT token with separate secrets\nfunction generateToken(payload) {\n    const header = {\n        alg: \"HS256\",\n        typ: \"JWT\"\n    };\n    const now = Math.floor(Date.now() / 1000);\n    const expiry = payload.type === \"refresh\" ? now + _lib_auth_config__WEBPACK_IMPORTED_MODULE_2__.authConfig.refreshTokenExpiry : payload.type === \"admin\" ? now + _lib_auth_config__WEBPACK_IMPORTED_MODULE_2__.authConfig.adminTokenExpiry : now + _lib_auth_config__WEBPACK_IMPORTED_MODULE_2__.authConfig.customerTokenExpiry;\n    const finalPayload = {\n        ...payload,\n        iat: now,\n        exp: expiry\n    };\n    const encodedHeader = Buffer.from(JSON.stringify(header)).toString(\"base64url\");\n    const encodedPayload = Buffer.from(JSON.stringify(finalPayload)).toString(\"base64url\");\n    const secret = (0,_lib_auth_config__WEBPACK_IMPORTED_MODULE_2__.getJwtSecret)(payload.type === \"admin\" ? \"admin\" : \"customer\");\n    const signature = (0,crypto__WEBPACK_IMPORTED_MODULE_1__.createHmac)(\"sha256\", secret).update(`${encodedHeader}.${encodedPayload}`).digest(\"base64url\");\n    return `${encodedHeader}.${encodedPayload}.${signature}`;\n}\n// Generate refresh token\nfunction generateRefreshToken(userId, userType, sessionId) {\n    return generateToken({\n        type: \"refresh\",\n        userId,\n        userType,\n        sessionId\n    });\n}\n// Verify JWT token\nfunction verifyJWT(token, expectedType) {\n    const [encodedHeader, encodedPayload, signature] = token.split(\".\");\n    if (!encodedHeader || !encodedPayload || !signature) {\n        throw new Error(\"Invalid token format\");\n    }\n    const payload = JSON.parse(Buffer.from(encodedPayload, \"base64url\").toString());\n    // Determine secret based on payload type\n    const secret = (0,_lib_auth_config__WEBPACK_IMPORTED_MODULE_2__.getJwtSecret)(payload.type === \"admin\" ? \"admin\" : \"customer\");\n    const expectedSignature = (0,crypto__WEBPACK_IMPORTED_MODULE_1__.createHmac)(\"sha256\", secret).update(`${encodedHeader}.${encodedPayload}`).digest(\"base64url\");\n    if (signature !== expectedSignature) {\n        throw new Error(\"Invalid token signature\");\n    }\n    if (payload.exp < Math.floor(Date.now() / 1000)) {\n        throw new Error(\"Token has expired\");\n    }\n    // Verify expected type if provided\n    if (expectedType && payload.type !== expectedType) {\n        throw new Error(`Expected token type ${expectedType}, got ${payload.type}`);\n    }\n    return payload;\n}\n// Generate session ID\nfunction generateSessionId() {\n    return (0,crypto__WEBPACK_IMPORTED_MODULE_1__.randomBytes)(32).toString(\"hex\");\n}\n// Middleware for admin-only routes\nasync function adminAuth(req) {\n    try {\n        const authHeader = req.headers.get(\"Authorization\");\n        if (!authHeader?.startsWith(\"Bearer \")) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Missing or invalid authorization header\"\n            }, {\n                status: 401\n            });\n        }\n        const token = authHeader.split(\" \")[1];\n        const payload = verifyJWT(token, \"admin\");\n        // Add the admin info to the request for use in the route handler\n        req.headers.set(\"x-admin-username\", payload.username);\n        req.headers.set(\"x-admin-email\", payload.email);\n        req.headers.set(\"x-session-id\", payload.sessionId);\n        return null; // Continue to the route handler\n    } catch (error) {\n        console.error(\"Admin auth error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: error instanceof Error ? error.message : \"Invalid or expired token\"\n        }, {\n            status: 401\n        });\n    }\n}\n// Middleware for customer-only routes\nasync function customerAuth(req) {\n    try {\n        const authHeader = req.headers.get(\"Authorization\");\n        if (!authHeader?.startsWith(\"Bearer \")) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Missing or invalid authorization header\"\n            }, {\n                status: 401\n            });\n        }\n        const token = authHeader.split(\" \")[1];\n        const payload = verifyJWT(token, \"customer\");\n        // Add the customer info to the request for use in the route handler\n        req.headers.set(\"x-customer-id\", payload.id.toString());\n        req.headers.set(\"x-customer-email\", payload.email);\n        req.headers.set(\"x-session-id\", payload.sessionId);\n        return null; // Continue to the route handler\n    } catch (error) {\n        console.error(\"Customer auth error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: error instanceof Error ? error.message : \"Invalid or expired token\"\n        }, {\n            status: 401\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/middleware/auth.ts\n");

/***/ }),

/***/ "(rsc)/./lib/services/databaseService.ts":
/*!*****************************************!*\
  !*** ./lib/services/databaseService.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   databaseService: () => (/* binding */ databaseService)\n/* harmony export */ });\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/db */ \"(rsc)/./lib/db.ts\");\n\nconst databaseService = {\n    async query (sql, params) {\n        let connection;\n        try {\n            connection = await _lib_db__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getConnection();\n            const [rows] = await connection.execute(sql, params);\n            return rows;\n        } catch (error) {\n            console.error(\"Database query error:\", error);\n            throw error;\n        } finally{\n            if (connection) {\n                connection.release();\n            }\n        }\n    },\n    async transaction (callback) {\n        const connection = await _lib_db__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getConnection();\n        try {\n            await connection.beginTransaction();\n            const result = await callback(connection);\n            await connection.commit();\n            return result;\n        } catch (error) {\n            await connection.rollback();\n            throw error;\n        } finally{\n            connection.release();\n        }\n    },\n    async testConnection () {\n        let connection;\n        try {\n            connection = await _lib_db__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getConnection();\n            const [result] = await connection.query(\"SELECT NOW() as `current_time`, VERSION() as mysql_version\");\n            return {\n                success: true,\n                data: result[0]\n            };\n        } catch (error) {\n            console.error(\"Database connection test failed:\", error);\n            return {\n                success: false,\n                error: error instanceof Error ? error.message : \"Unknown error\"\n            };\n        } finally{\n            if (connection) {\n                connection.release();\n            }\n        }\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvc2VydmljZXMvZGF0YWJhc2VTZXJ2aWNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQzRCO0FBRXJCLE1BQU1DLGtCQUFrQjtJQUM3QixNQUFNQyxPQUFlQyxHQUFXLEVBQUVDLE1BQWM7UUFDOUMsSUFBSUM7UUFDSixJQUFJO1lBQ0ZBLGFBQWEsTUFBTUwsK0NBQUlBLENBQUNNLGFBQWE7WUFDckMsTUFBTSxDQUFDQyxLQUFLLEdBQUcsTUFBTUYsV0FBV0csT0FBTyxDQUFDTCxLQUFLQztZQUM3QyxPQUFPRztRQUNULEVBQUUsT0FBT0UsT0FBTztZQUNkQyxRQUFRRCxLQUFLLENBQUMseUJBQXlCQTtZQUN2QyxNQUFNQTtRQUNSLFNBQVU7WUFDUixJQUFJSixZQUFZO2dCQUNkQSxXQUFXTSxPQUFPO1lBQ3BCO1FBQ0Y7SUFDRjtJQUVBLE1BQU1DLGFBQWVDLFFBQXNEO1FBQ3pFLE1BQU1SLGFBQWEsTUFBTUwsK0NBQUlBLENBQUNNLGFBQWE7UUFDM0MsSUFBSTtZQUNGLE1BQU1ELFdBQVdTLGdCQUFnQjtZQUNqQyxNQUFNQyxTQUFTLE1BQU1GLFNBQVNSO1lBQzlCLE1BQU1BLFdBQVdXLE1BQU07WUFDdkIsT0FBT0Q7UUFDVCxFQUFFLE9BQU9OLE9BQU87WUFDZCxNQUFNSixXQUFXWSxRQUFRO1lBQ3pCLE1BQU1SO1FBQ1IsU0FBVTtZQUNSSixXQUFXTSxPQUFPO1FBQ3BCO0lBQ0Y7SUFFQSxNQUFNTztRQUNKLElBQUliO1FBQ0osSUFBSTtZQUNGQSxhQUFhLE1BQU1MLCtDQUFJQSxDQUFDTSxhQUFhO1lBQ3JDLE1BQU0sQ0FBQ1MsT0FBTyxHQUFHLE1BQU1WLFdBQVdILEtBQUssQ0FBQztZQUN4QyxPQUFPO2dCQUNMaUIsU0FBUztnQkFDVEMsTUFBTUwsTUFBTSxDQUFDLEVBQUU7WUFDakI7UUFDRixFQUFFLE9BQU9OLE9BQU87WUFDZEMsUUFBUUQsS0FBSyxDQUFDLG9DQUFvQ0E7WUFDbEQsT0FBTztnQkFDTFUsU0FBUztnQkFDVFYsT0FBT0EsaUJBQWlCWSxRQUFRWixNQUFNYSxPQUFPLEdBQUc7WUFDbEQ7UUFDRixTQUFVO1lBQ1IsSUFBSWpCLFlBQVk7Z0JBQ2RBLFdBQVdNLE9BQU87WUFDcEI7UUFDRjtJQUNGO0FBQ0YsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL2NydW1ibGVkLXdlYnNpdGUvLi9saWIvc2VydmljZXMvZGF0YWJhc2VTZXJ2aWNlLnRzP2I4NGEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG15c3FsIGZyb20gJ215c3FsMi9wcm9taXNlJztcbmltcG9ydCBwb29sIGZyb20gJ0AvbGliL2RiJztcblxuZXhwb3J0IGNvbnN0IGRhdGFiYXNlU2VydmljZSA9IHtcbiAgYXN5bmMgcXVlcnk8VCA9IGFueT4oc3FsOiBzdHJpbmcsIHBhcmFtcz86IGFueVtdKTogUHJvbWlzZTxUPiB7XG4gICAgbGV0IGNvbm5lY3Rpb247XG4gICAgdHJ5IHtcbiAgICAgIGNvbm5lY3Rpb24gPSBhd2FpdCBwb29sLmdldENvbm5lY3Rpb24oKTtcbiAgICAgIGNvbnN0IFtyb3dzXSA9IGF3YWl0IGNvbm5lY3Rpb24uZXhlY3V0ZShzcWwsIHBhcmFtcyk7XG4gICAgICByZXR1cm4gcm93cyBhcyBUO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdEYXRhYmFzZSBxdWVyeSBlcnJvcjonLCBlcnJvcik7XG4gICAgICB0aHJvdyBlcnJvcjtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgaWYgKGNvbm5lY3Rpb24pIHtcbiAgICAgICAgY29ubmVjdGlvbi5yZWxlYXNlKCk7XG4gICAgICB9XG4gICAgfVxuICB9LFxuXG4gIGFzeW5jIHRyYW5zYWN0aW9uPFQ+KGNhbGxiYWNrOiAoY29ubmVjdGlvbjogbXlzcWwuQ29ubmVjdGlvbikgPT4gUHJvbWlzZTxUPik6IFByb21pc2U8VD4ge1xuICAgIGNvbnN0IGNvbm5lY3Rpb24gPSBhd2FpdCBwb29sLmdldENvbm5lY3Rpb24oKTtcbiAgICB0cnkge1xuICAgICAgYXdhaXQgY29ubmVjdGlvbi5iZWdpblRyYW5zYWN0aW9uKCk7XG4gICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBjYWxsYmFjayhjb25uZWN0aW9uKTtcbiAgICAgIGF3YWl0IGNvbm5lY3Rpb24uY29tbWl0KCk7XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBhd2FpdCBjb25uZWN0aW9uLnJvbGxiYWNrKCk7XG4gICAgICB0aHJvdyBlcnJvcjtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgY29ubmVjdGlvbi5yZWxlYXNlKCk7XG4gICAgfVxuICB9LFxuXG4gIGFzeW5jIHRlc3RDb25uZWN0aW9uKCkge1xuICAgIGxldCBjb25uZWN0aW9uO1xuICAgIHRyeSB7XG4gICAgICBjb25uZWN0aW9uID0gYXdhaXQgcG9vbC5nZXRDb25uZWN0aW9uKCk7XG4gICAgICBjb25zdCBbcmVzdWx0XSA9IGF3YWl0IGNvbm5lY3Rpb24ucXVlcnkoJ1NFTEVDVCBOT1coKSBhcyBgY3VycmVudF90aW1lYCwgVkVSU0lPTigpIGFzIG15c3FsX3ZlcnNpb24nKTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgIGRhdGE6IHJlc3VsdFswXVxuICAgICAgfTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRGF0YWJhc2UgY29ubmVjdGlvbiB0ZXN0IGZhaWxlZDonLCBlcnJvcik7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgZXJyb3I6IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogJ1Vua25vd24gZXJyb3InXG4gICAgICB9O1xuICAgIH0gZmluYWxseSB7XG4gICAgICBpZiAoY29ubmVjdGlvbikge1xuICAgICAgICBjb25uZWN0aW9uLnJlbGVhc2UoKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn07ICJdLCJuYW1lcyI6WyJwb29sIiwiZGF0YWJhc2VTZXJ2aWNlIiwicXVlcnkiLCJzcWwiLCJwYXJhbXMiLCJjb25uZWN0aW9uIiwiZ2V0Q29ubmVjdGlvbiIsInJvd3MiLCJleGVjdXRlIiwiZXJyb3IiLCJjb25zb2xlIiwicmVsZWFzZSIsInRyYW5zYWN0aW9uIiwiY2FsbGJhY2siLCJiZWdpblRyYW5zYWN0aW9uIiwicmVzdWx0IiwiY29tbWl0Iiwicm9sbGJhY2siLCJ0ZXN0Q29ubmVjdGlvbiIsInN1Y2Nlc3MiLCJkYXRhIiwiRXJyb3IiLCJtZXNzYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./lib/services/databaseService.ts\n");

/***/ }),

/***/ "(rsc)/./lib/services/viewService.ts":
/*!*************************************!*\
  !*** ./lib/services/viewService.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ViewService: () => (/* binding */ ViewService)\n/* harmony export */ });\n/* harmony import */ var _databaseService__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./databaseService */ \"(rsc)/./lib/services/databaseService.ts\");\n\nclass ViewService {\n    /**\r\n   * Get the appropriate view name based on context and preferences\r\n   */ static getViewName(table, showDeleted = false) {\n        const viewMap = {\n            \"products\": {\n                active: \"active_products\",\n                all: \"all_products\"\n            },\n            \"flavors\": {\n                active: \"active_flavors\",\n                all: \"all_flavors\"\n            },\n            \"product_types\": {\n                active: \"active_product_types\",\n                all: \"all_product_types\"\n            },\n            \"product_instance\": {\n                active: \"active_product_instances\",\n                all: \"all_product_instances\"\n            }\n        };\n        const views = viewMap[table];\n        if (!views) {\n            throw new Error(`No view configuration found for table: ${table}`);\n        }\n        return showDeleted ? views.all : views.active;\n    }\n    /**\r\n   * Get admin view preferences for a specific view type\r\n   */ static async getAdminViewPreferences(adminUserId, viewType) {\n        try {\n            const result = await _databaseService__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(`\r\n        SELECT show_deleted, view_type\r\n        FROM admin_view_preferences\r\n        WHERE admin_user_id = ? AND view_type = ?\r\n      `, [\n                adminUserId,\n                viewType\n            ]);\n            if (result && result.length > 0) {\n                return {\n                    show_deleted: Boolean(result[0].show_deleted),\n                    view_type: result[0].view_type\n                };\n            }\n            // Return default preferences if none found\n            return {\n                show_deleted: false,\n                view_type: viewType\n            };\n        } catch (error) {\n            console.warn(\"Admin view preferences table not found, using defaults:\", error);\n            // Return default preferences if table doesn't exist\n            return {\n                show_deleted: false,\n                view_type: viewType\n            };\n        }\n    }\n    /**\r\n   * Update admin view preferences\r\n   */ static async updateAdminViewPreferences(adminUserId, viewType, showDeleted) {\n        try {\n            await _databaseService__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(`\r\n        INSERT INTO admin_view_preferences (admin_user_id, view_type, show_deleted)\r\n        VALUES (?, ?, ?)\r\n        ON DUPLICATE KEY UPDATE show_deleted = ?\r\n      `, [\n                adminUserId,\n                viewType,\n                showDeleted,\n                showDeleted\n            ]);\n            return true;\n        } catch (error) {\n            console.warn(\"Admin view preferences table not found, skipping update:\", error);\n            // Return true to prevent errors when table doesn't exist\n            return true;\n        }\n    }\n    /**\r\n   * Execute a query using the appropriate view based on context\r\n   */ static async queryWithView(table, query, params = [], showDeleted = false) {\n        const viewName = this.getViewName(table, showDeleted);\n        const viewQuery = query.replace(new RegExp(`FROM\\\\s+${table}\\\\b`, \"i\"), `FROM ${viewName}`);\n        return await _databaseService__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(viewQuery, params);\n    }\n    /**\r\n   * Get products with view selection\r\n   */ static async getProducts(showDeleted = false, additionalWhere = \"\") {\n        try {\n            const viewName = this.getViewName(\"products\", showDeleted);\n            const whereClause = additionalWhere ? `WHERE ${additionalWhere}` : \"\";\n            const query = `\r\n        SELECT * FROM ${viewName}\r\n        ${whereClause}\r\n        ORDER BY display_order ASC, name ASC\r\n      `;\n            return await _databaseService__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(query);\n        } catch (error) {\n            // Fallback to original table if views don't exist\n            console.warn(\"Views not found, falling back to original table:\", error);\n            const whereConditions = [];\n            if (!showDeleted) {\n                whereConditions.push(\"p.is_active = true\");\n            }\n            if (additionalWhere) {\n                whereConditions.push(additionalWhere);\n            }\n            const whereClause = whereConditions.length > 0 ? `WHERE ${whereConditions.join(\" AND \")}` : \"\";\n            const query = `\r\n        SELECT p.*, pt.name as product_type_name, pt.is_active as product_type_active\r\n        FROM products p\r\n        LEFT JOIN product_types pt ON p.product_type_id = pt.id\r\n        ${whereClause}\r\n        ORDER BY p.display_order ASC, p.name ASC\r\n      `;\n            return await _databaseService__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(query);\n        }\n    }\n    /**\r\n   * Get flavors with view selection\r\n   */ static async getFlavors(showDeleted = false, additionalWhere = \"\") {\n        const viewName = this.getViewName(\"flavors\", showDeleted);\n        const whereClause = additionalWhere ? `WHERE ${additionalWhere}` : \"\";\n        const query = `\r\n      SELECT * FROM ${viewName}\r\n      ${whereClause}\r\n      ORDER BY name ASC\r\n    `;\n        return await _databaseService__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(query);\n    }\n    /**\r\n   * Get product types with view selection\r\n   */ static async getProductTypes(showDeleted = false, additionalWhere = \"\") {\n        const viewName = this.getViewName(\"product_types\", showDeleted);\n        const whereClause = additionalWhere ? `WHERE ${additionalWhere}` : \"\";\n        const query = `\r\n      SELECT * FROM ${viewName}\r\n      ${whereClause}\r\n      ORDER BY display_order ASC, name ASC\r\n    `;\n        return await _databaseService__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(query);\n    }\n    /**\r\n   * Get product instances with view selection\r\n   */ static async getProductInstances(showDeleted = false, additionalWhere = \"\") {\n        const viewName = this.getViewName(\"product_instance\", showDeleted);\n        const whereClause = additionalWhere ? `WHERE ${additionalWhere}` : \"\";\n        const query = `\r\n      SELECT * FROM ${viewName}\r\n      ${whereClause}\r\n      ORDER BY created_at DESC\r\n    `;\n        return await _databaseService__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(query);\n    }\n    /**\r\n   * Soft delete an item using stored procedure\r\n   */ static async softDelete(table, itemId, adminId, reason = \"\") {\n        try {\n            const procedureMap = {\n                \"products\": \"soft_delete_product\",\n                \"flavors\": \"soft_delete_flavor\",\n                \"product_types\": \"soft_delete_product_type\"\n            };\n            const procedureName = procedureMap[table];\n            if (!procedureName) {\n                throw new Error(`No soft delete procedure found for table: ${table}`);\n            }\n            await _databaseService__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(`CALL ${procedureName}(?, ?, ?)`, [\n                itemId,\n                adminId,\n                reason\n            ]);\n            return true;\n        } catch (error) {\n            console.error(`Error soft deleting ${table}:`, error);\n            return false;\n        }\n    }\n    /**\r\n   * Restore a soft deleted item using stored procedure\r\n   */ static async restore(table, itemId, adminId) {\n        try {\n            const procedureMap = {\n                \"products\": \"restore_product\",\n                \"flavors\": \"restore_flavor\",\n                \"product_types\": \"restore_product_type\"\n            };\n            const procedureName = procedureMap[table];\n            if (!procedureName) {\n                throw new Error(`No restore procedure found for table: ${table}`);\n            }\n            await _databaseService__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(`CALL ${procedureName}(?, ?)`, [\n                itemId,\n                adminId\n            ]);\n            return true;\n        } catch (error) {\n            console.error(`Error restoring ${table}:`, error);\n            return false;\n        }\n    }\n    /**\r\n   * Get deletion statistics for admin dashboard\r\n   */ static async getDeletionStats() {\n        try {\n            const [productsStats] = await _databaseService__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(`\r\n        SELECT \r\n          COUNT(*) as total,\r\n          COUNT(CASE WHEN deleted_at IS NOT NULL THEN 1 END) as deleted,\r\n          COUNT(CASE WHEN deleted_at IS NULL AND is_active = true THEN 1 END) as active\r\n        FROM products\r\n      `);\n            const [flavorsStats] = await _databaseService__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(`\r\n        SELECT \r\n          COUNT(*) as total,\r\n          COUNT(CASE WHEN deleted_at IS NOT NULL THEN 1 END) as deleted,\r\n          COUNT(CASE WHEN deleted_at IS NULL AND is_enabled = true THEN 1 END) as active\r\n        FROM flavors\r\n      `);\n            const [productTypesStats] = await _databaseService__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(`\r\n        SELECT \r\n          COUNT(*) as total,\r\n          COUNT(CASE WHEN deleted_at IS NOT NULL THEN 1 END) as deleted,\r\n          COUNT(CASE WHEN deleted_at IS NULL AND is_active = true THEN 1 END) as active\r\n        FROM product_types\r\n      `);\n            return {\n                products: {\n                    total: productsStats.total,\n                    deleted: productsStats.deleted,\n                    active: productsStats.active\n                },\n                flavors: {\n                    total: flavorsStats.total,\n                    deleted: flavorsStats.deleted,\n                    active: flavorsStats.active\n                },\n                product_types: {\n                    total: productTypesStats.total,\n                    deleted: productTypesStats.deleted,\n                    active: productTypesStats.active\n                }\n            };\n        } catch (error) {\n            console.error(\"Error getting deletion stats:\", error);\n            return {\n                products: {\n                    total: 0,\n                    deleted: 0,\n                    active: 0\n                },\n                flavors: {\n                    total: 0,\n                    deleted: 0,\n                    active: 0\n                },\n                product_types: {\n                    total: 0,\n                    deleted: 0,\n                    active: 0\n                }\n            };\n        }\n    }\n    /**\r\n   * Get recently deleted items for admin review\r\n   */ static async getRecentlyDeleted(table, days = 7) {\n        try {\n            const query = `\r\n        SELECT \r\n          *,\r\n          deleted_at,\r\n          deleted_by,\r\n          deletion_reason,\r\n          au.username as deleted_by_username\r\n        FROM ${table}\r\n        LEFT JOIN admin_users au ON ${table}.deleted_by = au.id\r\n        WHERE deleted_at >= DATE_SUB(NOW(), INTERVAL ? DAY)\r\n        ORDER BY deleted_at DESC\r\n      `;\n            return await _databaseService__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(query, [\n                days\n            ]);\n        } catch (error) {\n            console.error(`Error getting recently deleted ${table}:`, error);\n            return [];\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/services/viewService.ts\n");

/***/ }),

/***/ "(rsc)/./utils/generatePackImage.ts":
/*!************************************!*\
  !*** ./utils/generatePackImage.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generatePackImage: () => (/* binding */ generatePackImage)\n/* harmony export */ });\n/* harmony import */ var canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! canvas */ \"canvas\");\n/* harmony import */ var canvas__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(canvas__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fs/promises */ \"fs/promises\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fs_promises__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nasync function generatePackImage(count, flavorSize) {\n    // Create a canvas with higher resolution\n    const canvas = (0,canvas__WEBPACK_IMPORTED_MODULE_0__.createCanvas)(800, 600);\n    const ctx = canvas.getContext(\"2d\");\n    // Set background with gradient\n    const gradient = ctx.createLinearGradient(0, 0, 800, 600);\n    gradient.addColorStop(0, \"#f8fafc\");\n    gradient.addColorStop(1, \"#f1f5f9\");\n    ctx.fillStyle = gradient;\n    ctx.fillRect(0, 0, 800, 600);\n    // Draw pack container\n    const boxWidth = 600;\n    const boxHeight = 400;\n    const boxX = (800 - boxWidth) / 2;\n    const boxY = (600 - boxHeight) / 2;\n    // Draw box with rounded corners\n    ctx.fillStyle = \"#ffffff\";\n    ctx.strokeStyle = \"#e2e8f0\";\n    ctx.lineWidth = 8;\n    ctx.beginPath();\n    ctx.roundRect(boxX, boxY, boxWidth, boxHeight, 20);\n    ctx.fill();\n    ctx.stroke();\n    // Calculate grid for dots\n    const maxDotsPerRow = 5;\n    const dotRadius = 40;\n    const dotSpacing = 100;\n    const startX = boxX + (boxWidth - (maxDotsPerRow - 1) * dotSpacing) / 2;\n    const startY = boxY + (boxHeight - (Math.ceil(count / maxDotsPerRow) - 1) * dotSpacing) / 2;\n    // Draw dots representing cookies\n    for(let i = 0; i < count; i++){\n        const row = Math.floor(i / maxDotsPerRow);\n        const col = i % maxDotsPerRow;\n        const x = startX + col * dotSpacing;\n        const y = startY + row * dotSpacing;\n        // Draw cookie dot\n        ctx.beginPath();\n        ctx.arc(x, y, dotRadius, 0, Math.PI * 2);\n        ctx.fillStyle = \"#fbbf24\";\n        ctx.fill();\n        ctx.strokeStyle = \"#d97706\";\n        ctx.lineWidth = 4;\n        ctx.stroke();\n    }\n    // Draw flavor size\n    ctx.fillStyle = \"#1e293b\";\n    ctx.font = \"bold 36px Arial\";\n    ctx.textAlign = \"center\";\n    ctx.fillText(flavorSize, boxX + boxWidth / 2, boxY + boxHeight + 60);\n    // Save the image\n    const uniqueSuffix = `${Date.now()}-${Math.round(Math.random() * 1E9)}`;\n    const filename = `pack-${count}-${flavorSize.toLowerCase()}-${uniqueSuffix}.png`;\n    const filepath = (0,path__WEBPACK_IMPORTED_MODULE_2__.join)(process.cwd(), \"public\", \"uploads\", \"packs\", filename);\n    const buffer = canvas.toBuffer(\"image/png\");\n    await (0,fs_promises__WEBPACK_IMPORTED_MODULE_1__.writeFile)(filepath, buffer);\n    return `/uploads/packs/${filename}`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LE9BQU8sQ0FBQyxlQUFlLEVBQUVMLFNBQVMsQ0FBQztBQUNyQyIsInNvdXJjZXMiOlsid2VicGFjazovL2NydW1ibGVkLXdlYnNpdGUvLi91dGlscy9nZW5lcmF0ZVBhY2tJbWFnZS50cz85MzEyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUNhbnZhcyB9IGZyb20gJ2NhbnZhcyc7XHJcbmltcG9ydCB7IHdyaXRlRmlsZSB9IGZyb20gJ2ZzL3Byb21pc2VzJztcclxuaW1wb3J0IHsgam9pbiB9IGZyb20gJ3BhdGgnO1xyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdlbmVyYXRlUGFja0ltYWdlKGNvdW50OiBudW1iZXIsIGZsYXZvclNpemU6IHN0cmluZyk6IFByb21pc2U8c3RyaW5nPiB7XHJcbiAgLy8gQ3JlYXRlIGEgY2FudmFzIHdpdGggaGlnaGVyIHJlc29sdXRpb25cclxuICBjb25zdCBjYW52YXMgPSBjcmVhdGVDYW52YXMoODAwLCA2MDApO1xyXG4gIGNvbnN0IGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KCcyZCcpO1xyXG5cclxuICAvLyBTZXQgYmFja2dyb3VuZCB3aXRoIGdyYWRpZW50XHJcbiAgY29uc3QgZ3JhZGllbnQgPSBjdHguY3JlYXRlTGluZWFyR3JhZGllbnQoMCwgMCwgODAwLCA2MDApO1xyXG4gIGdyYWRpZW50LmFkZENvbG9yU3RvcCgwLCAnI2Y4ZmFmYycpO1xyXG4gIGdyYWRpZW50LmFkZENvbG9yU3RvcCgxLCAnI2YxZjVmOScpO1xyXG4gIGN0eC5maWxsU3R5bGUgPSBncmFkaWVudDtcclxuICBjdHguZmlsbFJlY3QoMCwgMCwgODAwLCA2MDApO1xyXG5cclxuICAvLyBEcmF3IHBhY2sgY29udGFpbmVyXHJcbiAgY29uc3QgYm94V2lkdGggPSA2MDA7XHJcbiAgY29uc3QgYm94SGVpZ2h0ID0gNDAwO1xyXG4gIGNvbnN0IGJveFggPSAoODAwIC0gYm94V2lkdGgpIC8gMjtcclxuICBjb25zdCBib3hZID0gKDYwMCAtIGJveEhlaWdodCkgLyAyO1xyXG5cclxuICAvLyBEcmF3IGJveCB3aXRoIHJvdW5kZWQgY29ybmVyc1xyXG4gIGN0eC5maWxsU3R5bGUgPSAnI2ZmZmZmZic7XHJcbiAgY3R4LnN0cm9rZVN0eWxlID0gJyNlMmU4ZjAnO1xyXG4gIGN0eC5saW5lV2lkdGggPSA4O1xyXG4gIGN0eC5iZWdpblBhdGgoKTtcclxuICBjdHgucm91bmRSZWN0KGJveFgsIGJveFksIGJveFdpZHRoLCBib3hIZWlnaHQsIDIwKTtcclxuICBjdHguZmlsbCgpO1xyXG4gIGN0eC5zdHJva2UoKTtcclxuXHJcbiAgLy8gQ2FsY3VsYXRlIGdyaWQgZm9yIGRvdHNcclxuICBjb25zdCBtYXhEb3RzUGVyUm93ID0gNTtcclxuICBjb25zdCBkb3RSYWRpdXMgPSA0MDtcclxuICBjb25zdCBkb3RTcGFjaW5nID0gMTAwO1xyXG4gIGNvbnN0IHN0YXJ0WCA9IGJveFggKyAoYm94V2lkdGggLSAobWF4RG90c1BlclJvdyAtIDEpICogZG90U3BhY2luZykgLyAyO1xyXG4gIGNvbnN0IHN0YXJ0WSA9IGJveFkgKyAoYm94SGVpZ2h0IC0gKE1hdGguY2VpbChjb3VudCAvIG1heERvdHNQZXJSb3cpIC0gMSkgKiBkb3RTcGFjaW5nKSAvIDI7XHJcblxyXG4gIC8vIERyYXcgZG90cyByZXByZXNlbnRpbmcgY29va2llc1xyXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgY291bnQ7IGkrKykge1xyXG4gICAgY29uc3Qgcm93ID0gTWF0aC5mbG9vcihpIC8gbWF4RG90c1BlclJvdyk7XHJcbiAgICBjb25zdCBjb2wgPSBpICUgbWF4RG90c1BlclJvdztcclxuICAgIGNvbnN0IHggPSBzdGFydFggKyBjb2wgKiBkb3RTcGFjaW5nO1xyXG4gICAgY29uc3QgeSA9IHN0YXJ0WSArIHJvdyAqIGRvdFNwYWNpbmc7XHJcblxyXG4gICAgLy8gRHJhdyBjb29raWUgZG90XHJcbiAgICBjdHguYmVnaW5QYXRoKCk7XHJcbiAgICBjdHguYXJjKHgsIHksIGRvdFJhZGl1cywgMCwgTWF0aC5QSSAqIDIpO1xyXG4gICAgY3R4LmZpbGxTdHlsZSA9ICcjZmJiZjI0JztcclxuICAgIGN0eC5maWxsKCk7XHJcbiAgICBjdHguc3Ryb2tlU3R5bGUgPSAnI2Q5NzcwNic7XHJcbiAgICBjdHgubGluZVdpZHRoID0gNDtcclxuICAgIGN0eC5zdHJva2UoKTtcclxuICB9XHJcblxyXG4gIC8vIERyYXcgZmxhdm9yIHNpemVcclxuICBjdHguZmlsbFN0eWxlID0gJyMxZTI5M2InO1xyXG4gIGN0eC5mb250ID0gJ2JvbGQgMzZweCBBcmlhbCc7XHJcbiAgY3R4LnRleHRBbGlnbiA9ICdjZW50ZXInO1xyXG4gIGN0eC5maWxsVGV4dChmbGF2b3JTaXplLCBib3hYICsgYm94V2lkdGggLyAyLCBib3hZICsgYm94SGVpZ2h0ICsgNjApO1xyXG5cclxuICAvLyBTYXZlIHRoZSBpbWFnZVxyXG4gIGNvbnN0IHVuaXF1ZVN1ZmZpeCA9IGAke0RhdGUubm93KCl9LSR7TWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogMUU5KX1gO1xyXG4gIGNvbnN0IGZpbGVuYW1lID0gYHBhY2stJHtjb3VudH0tJHtmbGF2b3JTaXplLnRvTG93ZXJDYXNlKCl9LSR7dW5pcXVlU3VmZml4fS5wbmdgO1xyXG4gIGNvbnN0IGZpbGVwYXRoID0gam9pbihwcm9jZXNzLmN3ZCgpLCAncHVibGljJywgJ3VwbG9hZHMnLCAncGFja3MnLCBmaWxlbmFtZSk7XHJcbiAgXHJcbiAgY29uc3QgYnVmZmVyID0gY2FudmFzLnRvQnVmZmVyKCdpbWFnZS9wbmcnKTtcclxuICBhd2FpdCB3cml0ZUZpbGUoZmlsZXBhdGgsIGJ1ZmZlcik7XHJcblxyXG4gIHJldHVybiBgL3VwbG9hZHMvcGFja3MvJHtmaWxlbmFtZX1gO1xyXG59ICJdLCJuYW1lcyI6WyJjcmVhdGVDYW52YXMiLCJ3cml0ZUZpbGUiLCJqb2luIiwiZ2VuZXJhdGVQYWNrSW1hZ2UiLCJjb3VudCIsImZsYXZvclNpemUiLCJjYW52YXMiLCJjdHgiLCJnZXRDb250ZXh0IiwiZ3JhZGllbnQiLCJjcmVhdGVMaW5lYXJHcmFkaWVudCIsImFkZENvbG9yU3RvcCIsImZpbGxTdHlsZSIsImZpbGxSZWN0IiwiYm94V2lkdGgiLCJib3hIZWlnaHQiLCJib3hYIiwiYm94WSIsInN0cm9rZVN0eWxlIiwibGluZVdpZHRoIiwiYmVnaW5QYXRoIiwicm91bmRSZWN0IiwiZmlsbCIsInN0cm9rZSIsIm1heERvdHNQZXJSb3ciLCJkb3RSYWRpdXMiLCJkb3RTcGFjaW5nIiwic3RhcnRYIiwic3RhcnRZIiwiTWF0aCIsImNlaWwiLCJpIiwicm93IiwiZmxvb3IiLCJjb2wiLCJ4IiwieSIsImFyYyIsIlBJIiwiZm9udCIsInRleHRBbGlnbiIsImZpbGxUZXh0IiwidW5pcXVlU3VmZml4IiwiRGF0ZSIsIm5vdyIsInJvdW5kIiwicmFuZG9tIiwiZmlsZW5hbWUiLCJ0b0xvd2VyQ2FzZSIsImZpbGVwYXRoIiwicHJvY2VzcyIsImN3ZCIsImJ1ZmZlciIsInRvQnVmZmVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./utils/generatePackImage.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/mysql2","vendor-chunks/aws-ssl-profiles","vendor-chunks/iconv-lite","vendor-chunks/long","vendor-chunks/lru-cache","vendor-chunks/denque","vendor-chunks/is-property","vendor-chunks/lru.min","vendor-chunks/sqlstring","vendor-chunks/seq-queue","vendor-chunks/named-placeholders","vendor-chunks/generate-function","vendor-chunks/safer-buffer","vendor-chunks/next-auth","vendor-chunks/@babel","vendor-chunks/uuid","vendor-chunks/jose","vendor-chunks/openid-client","vendor-chunks/bcryptjs","vendor-chunks/oauth","vendor-chunks/preact","vendor-chunks/yallist","vendor-chunks/cookie","vendor-chunks/preact-render-to-string","vendor-chunks/oidc-token-hash","vendor-chunks/@panva"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fproducts%2Froute&page=%2Fapi%2Fproducts%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fproducts%2Froute.ts&appDir=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();