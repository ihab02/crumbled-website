/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["middleware"],{

/***/ "(middleware)/./node_modules/mysql2/lib sync recursive ^cardinal.*$":
/*!****************************************************!*\
  !*** ./node_modules/mysql2/lib/ sync ^cardinal.*$ ***!
  \****************************************************/
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => ([]);
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "(middleware)/./node_modules/mysql2/lib sync recursive ^cardinal.*$";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "node:async_hooks":
/*!***********************************!*\
  !*** external "node:async_hooks" ***!
  \***********************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:async_hooks");

/***/ }),

/***/ "buffer":
/*!******************************!*\
  !*** external "node:buffer" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:buffer");

/***/ }),

/***/ "events":
/*!******************************!*\
  !*** external "node:events" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:events");

/***/ }),

/***/ "util":
/*!****************************!*\
  !*** external "node:util" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:util");

/***/ }),

/***/ "crypto":
/*!*************************************************************!*\
  !*** external " globalThis.__import_unsupported('crypto')" ***!
  \*************************************************************/
/***/ ((module) => {

"use strict";
module.exports =  globalThis.__import_unsupported('crypto');

/***/ }),

/***/ "net":
/*!**********************************************************!*\
  !*** external " globalThis.__import_unsupported('net')" ***!
  \**********************************************************/
/***/ ((module) => {

"use strict";
module.exports =  globalThis.__import_unsupported('net');

/***/ }),

/***/ "stream":
/*!*************************************************************!*\
  !*** external " globalThis.__import_unsupported('stream')" ***!
  \*************************************************************/
/***/ ((module) => {

"use strict";
module.exports =  globalThis.__import_unsupported('stream');

/***/ }),

/***/ "timers":
/*!*************************************************************!*\
  !*** external " globalThis.__import_unsupported('timers')" ***!
  \*************************************************************/
/***/ ((module) => {

"use strict";
module.exports =  globalThis.__import_unsupported('timers');

/***/ }),

/***/ "tls":
/*!**********************************************************!*\
  !*** external " globalThis.__import_unsupported('tls')" ***!
  \**********************************************************/
/***/ ((module) => {

"use strict";
module.exports =  globalThis.__import_unsupported('tls');

/***/ }),

/***/ "zlib":
/*!***********************************************************!*\
  !*** external " globalThis.__import_unsupported('zlib')" ***!
  \***********************************************************/
/***/ ((module) => {

"use strict";
module.exports =  globalThis.__import_unsupported('zlib');

/***/ }),

/***/ "?04f2":
/*!************************!*\
  !*** stream (ignored) ***!
  \************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/build/webpack/loaders/next-middleware-loader.js?absolutePagePath=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website%5Cmiddleware.ts&page=%2Fmiddleware&rootDir=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website&matchers=&preferredRegion=&middlewareConfig=e30%3D!":
/*!**************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-middleware-loader.js?absolutePagePath=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website%5Cmiddleware.ts&page=%2Fmiddleware&rootDir=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website&matchers=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \**************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ nHandler)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/globals */ \"(middleware)/./node_modules/next/dist/esm/server/web/globals.js\");\n/* harmony import */ var next_dist_server_web_adapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/web/adapter */ \"(middleware)/./node_modules/next/dist/esm/server/web/adapter.js\");\n/* harmony import */ var _middleware_ts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./middleware.ts */ \"(middleware)/./middleware.ts\");\n\r\n\r\n// Import the userland code.\r\n\r\nconst mod = {\r\n    ..._middleware_ts__WEBPACK_IMPORTED_MODULE_2__\r\n};\r\nconst handler = mod.middleware || mod.default;\r\nconst page = \"/middleware\";\r\nif (typeof handler !== \"function\") {\r\n    throw new Error(`The Middleware \"${page}\" must export a \\`middleware\\` or a \\`default\\` function`);\r\n}\r\nfunction nHandler(opts) {\r\n    return (0,next_dist_server_web_adapter__WEBPACK_IMPORTED_MODULE_1__.adapter)({\r\n        ...opts,\r\n        page,\r\n        handler\r\n    });\r\n}\r\n\r\n//# sourceMappingURL=middleware.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1taWRkbGV3YXJlLWxvYWRlci5qcz9hYnNvbHV0ZVBhZ2VQYXRoPUMlM0ElNUNVc2VycyU1Q0FTVVMlNUNBbmd1bGFyV2ViQXBwJTVDY3J1bWJsZWQtd2Vic2l0ZSU1Q21pZGRsZXdhcmUudHMmcGFnZT0lMkZtaWRkbGV3YXJlJnJvb3REaXI9QyUzQSU1Q1VzZXJzJTVDQVNVUyU1Q0FuZ3VsYXJXZWJBcHAlNUNjcnVtYmxlZC13ZWJzaXRlJm1hdGNoZXJzPSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXNDO0FBQ2lCO0FBQ3ZEO0FBQ3dDO0FBQ3hDO0FBQ0EsT0FBTywyQ0FBSTtBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLEtBQUs7QUFDNUM7QUFDZTtBQUNmLFdBQVcscUVBQU87QUFDbEI7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvP2RjNmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwibmV4dC9kaXN0L3NlcnZlci93ZWIvZ2xvYmFsc1wiO1xyXG5pbXBvcnQgeyBhZGFwdGVyIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvd2ViL2FkYXB0ZXJcIjtcclxuLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxyXG5pbXBvcnQgKiBhcyBfbW9kIGZyb20gXCIuL21pZGRsZXdhcmUudHNcIjtcclxuY29uc3QgbW9kID0ge1xyXG4gICAgLi4uX21vZFxyXG59O1xyXG5jb25zdCBoYW5kbGVyID0gbW9kLm1pZGRsZXdhcmUgfHwgbW9kLmRlZmF1bHQ7XHJcbmNvbnN0IHBhZ2UgPSBcIi9taWRkbGV3YXJlXCI7XHJcbmlmICh0eXBlb2YgaGFuZGxlciAhPT0gXCJmdW5jdGlvblwiKSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoYFRoZSBNaWRkbGV3YXJlIFwiJHtwYWdlfVwiIG11c3QgZXhwb3J0IGEgXFxgbWlkZGxld2FyZVxcYCBvciBhIFxcYGRlZmF1bHRcXGAgZnVuY3Rpb25gKTtcclxufVxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBuSGFuZGxlcihvcHRzKSB7XHJcbiAgICByZXR1cm4gYWRhcHRlcih7XHJcbiAgICAgICAgLi4ub3B0cyxcclxuICAgICAgICBwYWdlLFxyXG4gICAgICAgIGhhbmRsZXJcclxuICAgIH0pO1xyXG59XHJcblxyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1taWRkbGV3YXJlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/build/webpack/loaders/next-middleware-loader.js?absolutePagePath=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website%5Cmiddleware.ts&page=%2Fmiddleware&rootDir=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website&matchers=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(middleware)/./lib/auth-config.ts":
/*!****************************!*\
  !*** ./lib/auth-config.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authConfig: () => (/* binding */ authConfig),\n/* harmony export */   getJwtSecret: () => (/* binding */ getJwtSecret),\n/* harmony export */   validateAuthConfig: () => (/* binding */ validateAuthConfig),\n/* harmony export */   validatePassword: () => (/* binding */ validatePassword)\n/* harmony export */ });\n// Authentication configuration with separate secrets for customer and admin\nconst authConfig = {\n    // JWT Secrets - MUST be set in environment variables\n    customerJwtSecret: process.env.CUSTOMER_JWT_SECRET,\n    adminJwtSecret: process.env.ADMIN_JWT_SECRET,\n    // Fallback secrets (for development only)\n    fallbackCustomerSecret: \"customer-dev-secret-change-in-production\",\n    fallbackAdminSecret: \"admin-dev-secret-change-in-production\",\n    // Token expiration times (in seconds)\n    customerTokenExpiry: 24 * 60 * 60,\n    adminTokenExpiry: 7 * 24 * 60 * 60,\n    refreshTokenExpiry: 30 * 24 * 60 * 60,\n    // Rate limiting\n    maxLoginAttempts: 5,\n    lockoutDuration: 15 * 60,\n    // Password requirements\n    minPasswordLength: 8,\n    requireUppercase: true,\n    requireLowercase: true,\n    requireNumbers: true,\n    requireSpecialChars: false,\n    // Session management\n    sessionTimeout: 30 * 60,\n    maxConcurrentSessions: 3,\n    // Cookie settings\n    cookieSettings: {\n        httpOnly: true,\n        secure: \"development\" === \"production\",\n        sameSite: \"strict\",\n        path: \"/\"\n    }\n};\n// Validate environment variables\nfunction validateAuthConfig() {\n    const errors = [];\n    if (!authConfig.customerJwtSecret && \"development\" === \"production\") {}\n    if (!authConfig.adminJwtSecret && \"development\" === \"production\") {}\n    if (errors.length > 0) {\n        throw new Error(`Authentication configuration errors:\\n${errors.join(\"\\n\")}`);\n    }\n}\n// Get JWT secret based on user type\nfunction getJwtSecret(userType) {\n    if (userType === \"customer\") {\n        return authConfig.customerJwtSecret || authConfig.fallbackCustomerSecret;\n    } else {\n        return authConfig.adminJwtSecret || authConfig.fallbackAdminSecret;\n    }\n}\n// Password validation\nfunction validatePassword(password) {\n    const errors = [];\n    if (password.length < authConfig.minPasswordLength) {\n        errors.push(`Password must be at least ${authConfig.minPasswordLength} characters long`);\n    }\n    if (authConfig.requireUppercase && !/[A-Z]/.test(password)) {\n        errors.push(\"Password must contain at least one uppercase letter\");\n    }\n    if (authConfig.requireLowercase && !/[a-z]/.test(password)) {\n        errors.push(\"Password must contain at least one lowercase letter\");\n    }\n    if (authConfig.requireNumbers && !/\\d/.test(password)) {\n        errors.push(\"Password must contain at least one number\");\n    }\n    if (authConfig.requireSpecialChars && !/[!@#$%^&*(),.?\":{}|<>]/.test(password)) {\n        errors.push(\"Password must contain at least one special character\");\n    }\n    return {\n        isValid: errors.length === 0,\n        errors\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbGliL2F1dGgtY29uZmlnLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSw0RUFBNEU7QUFDckUsTUFBTUEsYUFBYTtJQUN4QixxREFBcUQ7SUFDckRDLG1CQUFtQkMsUUFBUUMsR0FBRyxDQUFDQyxtQkFBbUI7SUFDbERDLGdCQUFnQkgsUUFBUUMsR0FBRyxDQUFDRyxnQkFBZ0I7SUFFNUMsMENBQTBDO0lBQzFDQyx3QkFBd0I7SUFDeEJDLHFCQUFxQjtJQUVyQixzQ0FBc0M7SUFDdENDLHFCQUFxQixLQUFLLEtBQUs7SUFDL0JDLGtCQUFrQixJQUFJLEtBQUssS0FBSztJQUNoQ0Msb0JBQW9CLEtBQUssS0FBSyxLQUFLO0lBRW5DLGdCQUFnQjtJQUNoQkMsa0JBQWtCO0lBQ2xCQyxpQkFBaUIsS0FBSztJQUV0Qix3QkFBd0I7SUFDeEJDLG1CQUFtQjtJQUNuQkMsa0JBQWtCO0lBQ2xCQyxrQkFBa0I7SUFDbEJDLGdCQUFnQjtJQUNoQkMscUJBQXFCO0lBRXJCLHFCQUFxQjtJQUNyQkMsZ0JBQWdCLEtBQUs7SUFDckJDLHVCQUF1QjtJQUV2QixrQkFBa0I7SUFDbEJDLGdCQUFnQjtRQUNkQyxVQUFVO1FBQ1ZDLFFBQVFyQixrQkFBeUI7UUFDakNzQixVQUFVO1FBQ1ZDLE1BQU07SUFDUjtBQUNGLEVBQUU7QUFFRixpQ0FBaUM7QUFDMUIsU0FBU0M7SUFDZCxNQUFNQyxTQUFtQixFQUFFO0lBRTNCLElBQUksQ0FBQzNCLFdBQVdDLGlCQUFpQixJQUFJQyxrQkFBeUIsY0FBYyxFQUUzRTtJQUVELElBQUksQ0FBQ0YsV0FBV0ssY0FBYyxJQUFJSCxrQkFBeUIsY0FBYyxFQUV4RTtJQUVELElBQUl5QixPQUFPRSxNQUFNLEdBQUcsR0FBRztRQUNyQixNQUFNLElBQUlDLE1BQU0sQ0FBQyxzQ0FBc0MsRUFBRUgsT0FBT0ksSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUM5RTtBQUNGO0FBRUEsb0NBQW9DO0FBQzdCLFNBQVNDLGFBQWFDLFFBQThCO0lBQ3pELElBQUlBLGFBQWEsWUFBWTtRQUMzQixPQUFPakMsV0FBV0MsaUJBQWlCLElBQUlELFdBQVdPLHNCQUFzQjtJQUMxRSxPQUFPO1FBQ0wsT0FBT1AsV0FBV0ssY0FBYyxJQUFJTCxXQUFXUSxtQkFBbUI7SUFDcEU7QUFDRjtBQUVBLHNCQUFzQjtBQUNmLFNBQVMwQixpQkFBaUJDLFFBQWdCO0lBQy9DLE1BQU1SLFNBQW1CLEVBQUU7SUFFM0IsSUFBSVEsU0FBU04sTUFBTSxHQUFHN0IsV0FBV2MsaUJBQWlCLEVBQUU7UUFDbERhLE9BQU9DLElBQUksQ0FBQyxDQUFDLDBCQUEwQixFQUFFNUIsV0FBV2MsaUJBQWlCLENBQUMsZ0JBQWdCLENBQUM7SUFDekY7SUFFQSxJQUFJZCxXQUFXZSxnQkFBZ0IsSUFBSSxDQUFDLFFBQVFxQixJQUFJLENBQUNELFdBQVc7UUFDMURSLE9BQU9DLElBQUksQ0FBQztJQUNkO0lBRUEsSUFBSTVCLFdBQVdnQixnQkFBZ0IsSUFBSSxDQUFDLFFBQVFvQixJQUFJLENBQUNELFdBQVc7UUFDMURSLE9BQU9DLElBQUksQ0FBQztJQUNkO0lBRUEsSUFBSTVCLFdBQVdpQixjQUFjLElBQUksQ0FBQyxLQUFLbUIsSUFBSSxDQUFDRCxXQUFXO1FBQ3JEUixPQUFPQyxJQUFJLENBQUM7SUFDZDtJQUVBLElBQUk1QixXQUFXa0IsbUJBQW1CLElBQUksQ0FBQyx5QkFBeUJrQixJQUFJLENBQUNELFdBQVc7UUFDOUVSLE9BQU9DLElBQUksQ0FBQztJQUNkO0lBRUEsT0FBTztRQUNMUyxTQUFTVixPQUFPRSxNQUFNLEtBQUs7UUFDM0JGO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9saWIvYXV0aC1jb25maWcudHM/ZWZlMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBdXRoZW50aWNhdGlvbiBjb25maWd1cmF0aW9uIHdpdGggc2VwYXJhdGUgc2VjcmV0cyBmb3IgY3VzdG9tZXIgYW5kIGFkbWluXHJcbmV4cG9ydCBjb25zdCBhdXRoQ29uZmlnID0ge1xyXG4gIC8vIEpXVCBTZWNyZXRzIC0gTVVTVCBiZSBzZXQgaW4gZW52aXJvbm1lbnQgdmFyaWFibGVzXHJcbiAgY3VzdG9tZXJKd3RTZWNyZXQ6IHByb2Nlc3MuZW52LkNVU1RPTUVSX0pXVF9TRUNSRVQsXHJcbiAgYWRtaW5Kd3RTZWNyZXQ6IHByb2Nlc3MuZW52LkFETUlOX0pXVF9TRUNSRVQsXHJcbiAgXHJcbiAgLy8gRmFsbGJhY2sgc2VjcmV0cyAoZm9yIGRldmVsb3BtZW50IG9ubHkpXHJcbiAgZmFsbGJhY2tDdXN0b21lclNlY3JldDogJ2N1c3RvbWVyLWRldi1zZWNyZXQtY2hhbmdlLWluLXByb2R1Y3Rpb24nLFxyXG4gIGZhbGxiYWNrQWRtaW5TZWNyZXQ6ICdhZG1pbi1kZXYtc2VjcmV0LWNoYW5nZS1pbi1wcm9kdWN0aW9uJyxcclxuICBcclxuICAvLyBUb2tlbiBleHBpcmF0aW9uIHRpbWVzIChpbiBzZWNvbmRzKVxyXG4gIGN1c3RvbWVyVG9rZW5FeHBpcnk6IDI0ICogNjAgKiA2MCwgLy8gMjQgaG91cnNcclxuICBhZG1pblRva2VuRXhwaXJ5OiA3ICogMjQgKiA2MCAqIDYwLCAvLyA3IGRheXNcclxuICByZWZyZXNoVG9rZW5FeHBpcnk6IDMwICogMjQgKiA2MCAqIDYwLCAvLyAzMCBkYXlzXHJcbiAgXHJcbiAgLy8gUmF0ZSBsaW1pdGluZ1xyXG4gIG1heExvZ2luQXR0ZW1wdHM6IDUsXHJcbiAgbG9ja291dER1cmF0aW9uOiAxNSAqIDYwLCAvLyAxNSBtaW51dGVzXHJcbiAgXHJcbiAgLy8gUGFzc3dvcmQgcmVxdWlyZW1lbnRzXHJcbiAgbWluUGFzc3dvcmRMZW5ndGg6IDgsXHJcbiAgcmVxdWlyZVVwcGVyY2FzZTogdHJ1ZSxcclxuICByZXF1aXJlTG93ZXJjYXNlOiB0cnVlLFxyXG4gIHJlcXVpcmVOdW1iZXJzOiB0cnVlLFxyXG4gIHJlcXVpcmVTcGVjaWFsQ2hhcnM6IGZhbHNlLFxyXG4gIFxyXG4gIC8vIFNlc3Npb24gbWFuYWdlbWVudFxyXG4gIHNlc3Npb25UaW1lb3V0OiAzMCAqIDYwLCAvLyAzMCBtaW51dGVzXHJcbiAgbWF4Q29uY3VycmVudFNlc3Npb25zOiAzLFxyXG4gIFxyXG4gIC8vIENvb2tpZSBzZXR0aW5nc1xyXG4gIGNvb2tpZVNldHRpbmdzOiB7XHJcbiAgICBodHRwT25seTogdHJ1ZSxcclxuICAgIHNlY3VyZTogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJyxcclxuICAgIHNhbWVTaXRlOiAnc3RyaWN0JyBhcyBjb25zdCxcclxuICAgIHBhdGg6ICcvJyxcclxuICB9XHJcbn07XHJcblxyXG4vLyBWYWxpZGF0ZSBlbnZpcm9ubWVudCB2YXJpYWJsZXNcclxuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlQXV0aENvbmZpZygpIHtcclxuICBjb25zdCBlcnJvcnM6IHN0cmluZ1tdID0gW107XHJcbiAgXHJcbiAgaWYgKCFhdXRoQ29uZmlnLmN1c3RvbWVySnd0U2VjcmV0ICYmIHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcclxuICAgIGVycm9ycy5wdXNoKCdDVVNUT01FUl9KV1RfU0VDUkVUIGVudmlyb25tZW50IHZhcmlhYmxlIGlzIHJlcXVpcmVkIGluIHByb2R1Y3Rpb24nKTtcclxuICB9XHJcbiAgXHJcbiAgaWYgKCFhdXRoQ29uZmlnLmFkbWluSnd0U2VjcmV0ICYmIHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcclxuICAgIGVycm9ycy5wdXNoKCdBRE1JTl9KV1RfU0VDUkVUIGVudmlyb25tZW50IHZhcmlhYmxlIGlzIHJlcXVpcmVkIGluIHByb2R1Y3Rpb24nKTtcclxuICB9XHJcbiAgXHJcbiAgaWYgKGVycm9ycy5sZW5ndGggPiAwKSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoYEF1dGhlbnRpY2F0aW9uIGNvbmZpZ3VyYXRpb24gZXJyb3JzOlxcbiR7ZXJyb3JzLmpvaW4oJ1xcbicpfWApO1xyXG4gIH1cclxufVxyXG5cclxuLy8gR2V0IEpXVCBzZWNyZXQgYmFzZWQgb24gdXNlciB0eXBlXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRKd3RTZWNyZXQodXNlclR5cGU6ICdjdXN0b21lcicgfCAnYWRtaW4nKTogc3RyaW5nIHtcclxuICBpZiAodXNlclR5cGUgPT09ICdjdXN0b21lcicpIHtcclxuICAgIHJldHVybiBhdXRoQ29uZmlnLmN1c3RvbWVySnd0U2VjcmV0IHx8IGF1dGhDb25maWcuZmFsbGJhY2tDdXN0b21lclNlY3JldDtcclxuICB9IGVsc2Uge1xyXG4gICAgcmV0dXJuIGF1dGhDb25maWcuYWRtaW5Kd3RTZWNyZXQgfHwgYXV0aENvbmZpZy5mYWxsYmFja0FkbWluU2VjcmV0O1xyXG4gIH1cclxufVxyXG5cclxuLy8gUGFzc3dvcmQgdmFsaWRhdGlvblxyXG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVQYXNzd29yZChwYXNzd29yZDogc3RyaW5nKTogeyBpc1ZhbGlkOiBib29sZWFuOyBlcnJvcnM6IHN0cmluZ1tdIH0ge1xyXG4gIGNvbnN0IGVycm9yczogc3RyaW5nW10gPSBbXTtcclxuICBcclxuICBpZiAocGFzc3dvcmQubGVuZ3RoIDwgYXV0aENvbmZpZy5taW5QYXNzd29yZExlbmd0aCkge1xyXG4gICAgZXJyb3JzLnB1c2goYFBhc3N3b3JkIG11c3QgYmUgYXQgbGVhc3QgJHthdXRoQ29uZmlnLm1pblBhc3N3b3JkTGVuZ3RofSBjaGFyYWN0ZXJzIGxvbmdgKTtcclxuICB9XHJcbiAgXHJcbiAgaWYgKGF1dGhDb25maWcucmVxdWlyZVVwcGVyY2FzZSAmJiAhL1tBLVpdLy50ZXN0KHBhc3N3b3JkKSkge1xyXG4gICAgZXJyb3JzLnB1c2goJ1Bhc3N3b3JkIG11c3QgY29udGFpbiBhdCBsZWFzdCBvbmUgdXBwZXJjYXNlIGxldHRlcicpO1xyXG4gIH1cclxuICBcclxuICBpZiAoYXV0aENvbmZpZy5yZXF1aXJlTG93ZXJjYXNlICYmICEvW2Etel0vLnRlc3QocGFzc3dvcmQpKSB7XHJcbiAgICBlcnJvcnMucHVzaCgnUGFzc3dvcmQgbXVzdCBjb250YWluIGF0IGxlYXN0IG9uZSBsb3dlcmNhc2UgbGV0dGVyJyk7XHJcbiAgfVxyXG4gIFxyXG4gIGlmIChhdXRoQ29uZmlnLnJlcXVpcmVOdW1iZXJzICYmICEvXFxkLy50ZXN0KHBhc3N3b3JkKSkge1xyXG4gICAgZXJyb3JzLnB1c2goJ1Bhc3N3b3JkIG11c3QgY29udGFpbiBhdCBsZWFzdCBvbmUgbnVtYmVyJyk7XHJcbiAgfVxyXG4gIFxyXG4gIGlmIChhdXRoQ29uZmlnLnJlcXVpcmVTcGVjaWFsQ2hhcnMgJiYgIS9bIUAjJCVeJiooKSwuP1wiOnt9fDw+XS8udGVzdChwYXNzd29yZCkpIHtcclxuICAgIGVycm9ycy5wdXNoKCdQYXNzd29yZCBtdXN0IGNvbnRhaW4gYXQgbGVhc3Qgb25lIHNwZWNpYWwgY2hhcmFjdGVyJyk7XHJcbiAgfVxyXG4gIFxyXG4gIHJldHVybiB7XHJcbiAgICBpc1ZhbGlkOiBlcnJvcnMubGVuZ3RoID09PSAwLFxyXG4gICAgZXJyb3JzXHJcbiAgfTtcclxufSAiXSwibmFtZXMiOlsiYXV0aENvbmZpZyIsImN1c3RvbWVySnd0U2VjcmV0IiwicHJvY2VzcyIsImVudiIsIkNVU1RPTUVSX0pXVF9TRUNSRVQiLCJhZG1pbkp3dFNlY3JldCIsIkFETUlOX0pXVF9TRUNSRVQiLCJmYWxsYmFja0N1c3RvbWVyU2VjcmV0IiwiZmFsbGJhY2tBZG1pblNlY3JldCIsImN1c3RvbWVyVG9rZW5FeHBpcnkiLCJhZG1pblRva2VuRXhwaXJ5IiwicmVmcmVzaFRva2VuRXhwaXJ5IiwibWF4TG9naW5BdHRlbXB0cyIsImxvY2tvdXREdXJhdGlvbiIsIm1pblBhc3N3b3JkTGVuZ3RoIiwicmVxdWlyZVVwcGVyY2FzZSIsInJlcXVpcmVMb3dlcmNhc2UiLCJyZXF1aXJlTnVtYmVycyIsInJlcXVpcmVTcGVjaWFsQ2hhcnMiLCJzZXNzaW9uVGltZW91dCIsIm1heENvbmN1cnJlbnRTZXNzaW9ucyIsImNvb2tpZVNldHRpbmdzIiwiaHR0cE9ubHkiLCJzZWN1cmUiLCJzYW1lU2l0ZSIsInBhdGgiLCJ2YWxpZGF0ZUF1dGhDb25maWciLCJlcnJvcnMiLCJwdXNoIiwibGVuZ3RoIiwiRXJyb3IiLCJqb2luIiwiZ2V0Snd0U2VjcmV0IiwidXNlclR5cGUiLCJ2YWxpZGF0ZVBhc3N3b3JkIiwicGFzc3dvcmQiLCJ0ZXN0IiwiaXNWYWxpZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./lib/auth-config.ts\n");

/***/ }),

/***/ "(middleware)/./lib/db.ts":
/*!*******************!*\
  !*** ./lib/db.ts ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getOrderByTracking: () => (/* binding */ getOrderByTracking),\n/* harmony export */   getOrderDetails: () => (/* binding */ getOrderDetails),\n/* harmony export */   getOrders: () => (/* binding */ getOrders),\n/* harmony export */   saveOrder: () => (/* binding */ saveOrder),\n/* harmony export */   testConnection: () => (/* binding */ testConnection),\n/* harmony export */   updateOrderStatus: () => (/* binding */ updateOrderStatus)\n/* harmony export */ });\n/* harmony import */ var mysql2_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mysql2/promise */ \"(middleware)/./node_modules/mysql2/promise.js\");\n\n// Create MySQL connection pool\nconst pool = mysql2_promise__WEBPACK_IMPORTED_MODULE_0__.createPool({\n    host: process.env.DB_HOST || \"localhost\",\n    user: process.env.DB_USER || \"root\",\n    password: process.env.DB_PASSWORD || \"Goodmorning@1\",\n    database: process.env.DB_NAME || \"crumbled_nextDB\",\n    waitForConnections: true,\n    connectionLimit: 10,\n    queueLimit: 0,\n    enableKeepAlive: true,\n    keepAliveInitialDelay: 10000,\n    idleTimeout: 60000,\n    maxIdle: 5 // Maximum number of idle connections to keep\n});\n// Test connection function\nasync function testConnection() {\n    let connection;\n    try {\n        connection = await pool.getConnection();\n        const [result] = await connection.query(\"SELECT NOW() as `current_time`, VERSION() as mysql_version\");\n        return {\n            success: true,\n            message: \"Database connected successfully\",\n            timestamp: result[0].current_time,\n            version: result[0].mysql_version\n        };\n    } catch (error) {\n        console.error(\"Database connection failed:\", error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Unknown connection error\"\n        };\n    } finally{\n        if (connection) {\n            connection.release();\n        }\n    }\n}\nasync function saveOrder(orderData) {\n    let connection;\n    try {\n        connection = await pool.getConnection();\n        // Check if orders table exists\n        const [tableCheck] = await connection.query(\"SELECT COUNT(*) as count FROM information_schema.tables WHERE table_schema = 'crumbled_nextDB' AND table_name = 'orders'\");\n        if (tableCheck[0].count === 0) {\n            return {\n                success: false,\n                error: \"Orders table does not exist. Please set up the database first.\"\n            };\n        }\n        // Generate tracking ID if not provided\n        if (!orderData.trackingId) {\n            orderData.trackingId = `CC${Math.random().toString(36).substring(2, 10).toUpperCase()}`;\n        }\n        // Start transaction by inserting order first\n        const [orderResult] = await connection.query(`INSERT INTO orders (\n        customer_name, \n        customer_email, \n        customer_phone, \n        address, \n        city, \n        state, \n        zip_code, \n        total_amount,\n        tracking_id,\n        order_status\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, 'pending')`, [\n            orderData.customerName,\n            orderData.customerEmail,\n            orderData.customerPhone,\n            orderData.address,\n            orderData.city,\n            orderData.state,\n            orderData.zipCode,\n            orderData.totalAmount,\n            orderData.trackingId || `CC${Math.random().toString(36).substring(2, 10).toUpperCase()}`\n        ]);\n        const orderId = orderResult.insertId;\n        // Process each item and update stock\n        for (const item of orderData.items){\n            // Insert order item\n            await connection.query(`INSERT INTO order_items (\n          order_id, \n          product_id, \n          product_name, \n          quantity, \n          price, \n          is_bundle, \n          bundle_size, \n          bundle_items\n        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)`, [\n                orderId,\n                item.id,\n                item.name,\n                item.quantity,\n                item.price,\n                !!item.isBundle,\n                item.bundleSize || null,\n                item.bundleItems ? JSON.stringify(item.bundleItems) : null\n            ]);\n            // Update stock for individual items\n            if (!item.isBundle) {\n                // For regular items, reduce stock directly\n                const [stockUpdate] = await connection.query(`UPDATE stock \n           SET quantity = quantity - ?, updated_at = CURRENT_TIMESTAMP\n           WHERE product_id = ?\n           RETURNING quantity`, [\n                    item.quantity,\n                    item.id\n                ]);\n                // Check if stock went negative (optional warning)\n                if (stockUpdate.length > 0 && stockUpdate[0].quantity < 0) {\n                    console.warn(`Warning: Stock for product ${item.name} (ID: ${item.id}) went negative: ${stockUpdate[0].quantity}`);\n                }\n            } else {\n                // For bundles, reduce stock for each bundled item\n                if (item.bundleItems && Array.isArray(item.bundleItems)) {\n                    for (const bundleItem of item.bundleItems){\n                        const [stockUpdate] = await connection.query(`UPDATE stock \n               SET quantity = quantity - ?, updated_at = CURRENT_TIMESTAMP\n               WHERE product_id = ?\n               RETURNING quantity, product_name`, [\n                            item.quantity,\n                            bundleItem.id\n                        ]);\n                        if (stockUpdate.length > 0 && stockUpdate[0].quantity < 0) {\n                            console.warn(`Warning: Stock for bundled product ${stockUpdate[0].product_name} (ID: ${bundleItem.id}) went negative: ${stockUpdate[0].quantity}`);\n                        }\n                    }\n                }\n            }\n        }\n        return {\n            success: true,\n            orderId,\n            trackingId: orderData.trackingId\n        };\n    } catch (error) {\n        console.error(\"Error saving order:\", error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Database operation failed\"\n        };\n    } finally{\n        if (connection) {\n            connection.release();\n        }\n    }\n}\nasync function getOrders() {\n    let connection;\n    try {\n        connection = await pool.getConnection();\n        // Check if orders table exists\n        const [tableCheck] = await connection.query(\"SELECT COUNT(*) as count FROM information_schema.tables WHERE table_schema = 'crumbled_nextDB' AND table_name = 'orders'\");\n        if (tableCheck[0].count === 0) {\n            return {\n                success: false,\n                error: \"Orders table does not exist. Please set up the database first.\"\n            };\n        }\n        const [orders] = await connection.query(\"SELECT * FROM orders ORDER BY created_at DESC\");\n        return {\n            success: true,\n            orders\n        };\n    } catch (error) {\n        console.error(\"Error fetching orders:\", error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Database connection failed\"\n        };\n    } finally{\n        if (connection) {\n            connection.release();\n        }\n    }\n}\nasync function getOrderDetails(orderId) {\n    let connection;\n    try {\n        connection = await pool.getConnection();\n        const [order] = await connection.query(\"SELECT * FROM orders WHERE id = ?\", [\n            orderId\n        ]);\n        if (order.length === 0) {\n            return {\n                success: false,\n                error: \"Order not found\"\n            };\n        }\n        const [items] = await connection.query(\"SELECT * FROM order_items WHERE order_id = ?\", [\n            orderId\n        ]);\n        return {\n            success: true,\n            order: order[0],\n            items\n        };\n    } catch (error) {\n        console.error(\"Error fetching order details:\", error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Database operation failed\"\n        };\n    } finally{\n        if (connection) {\n            connection.release();\n        }\n    }\n}\nasync function getOrderByTracking(trackingId, email) {\n    let connection;\n    try {\n        connection = await pool.getConnection();\n        const [order] = await connection.query(\"SELECT * FROM orders WHERE tracking_id = ? AND customer_email = ?\", [\n            trackingId,\n            email\n        ]);\n        if (order.length === 0) {\n            return {\n                success: false,\n                error: \"Order not found or email doesn't match\"\n            };\n        }\n        const [items] = await connection.query(\"SELECT * FROM order_items WHERE order_id = ?\", [\n            order[0].id\n        ]);\n        return {\n            success: true,\n            order: order[0],\n            items\n        };\n    } catch (error) {\n        console.error(\"Error fetching order by tracking:\", error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Database operation failed\"\n        };\n    } finally{\n        if (connection) {\n            connection.release();\n        }\n    }\n}\nasync function updateOrderStatus(orderId, status) {\n    let connection;\n    try {\n        connection = await pool.getConnection();\n        const [result] = await connection.query(\"UPDATE orders SET order_status = ?, updated_at = CURRENT_TIMESTAMP WHERE id = ?\", [\n            status,\n            orderId\n        ]);\n        return {\n            success: true,\n            message: \"Order status updated successfully\"\n        };\n    } catch (error) {\n        console.error(\"Error updating order status:\", error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Database operation failed\"\n        };\n    } finally{\n        if (connection) {\n            connection.release();\n        }\n    }\n}\n// Export the pool as default\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (pool);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./lib/db.ts\n");

/***/ }),

/***/ "(middleware)/./lib/services/databaseService.ts":
/*!*****************************************!*\
  !*** ./lib/services/databaseService.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   databaseService: () => (/* binding */ databaseService)\n/* harmony export */ });\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/db */ \"(middleware)/./lib/db.ts\");\n\nconst databaseService = {\n    async query (sql, params) {\n        let connection;\n        try {\n            connection = await _lib_db__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getConnection();\n            const [rows] = await connection.execute(sql, params);\n            return rows;\n        } catch (error) {\n            console.error(\"Database query error:\", error);\n            throw error;\n        } finally{\n            if (connection) {\n                connection.release();\n            }\n        }\n    },\n    async transaction (callback) {\n        const connection = await _lib_db__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getConnection();\n        try {\n            await connection.beginTransaction();\n            const result = await callback(connection);\n            await connection.commit();\n            return result;\n        } catch (error) {\n            await connection.rollback();\n            throw error;\n        } finally{\n            connection.release();\n        }\n    },\n    async testConnection () {\n        let connection;\n        try {\n            connection = await _lib_db__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getConnection();\n            const [result] = await connection.query(\"SELECT NOW() as `current_time`, VERSION() as mysql_version\");\n            return {\n                success: true,\n                data: result[0]\n            };\n        } catch (error) {\n            console.error(\"Database connection test failed:\", error);\n            return {\n                success: false,\n                error: error instanceof Error ? error.message : \"Unknown error\"\n            };\n        } finally{\n            if (connection) {\n                connection.release();\n            }\n        }\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbGliL3NlcnZpY2VzL2RhdGFiYXNlU2VydmljZS50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUM0QjtBQUVyQixNQUFNQyxrQkFBa0I7SUFDN0IsTUFBTUMsT0FBZUMsR0FBVyxFQUFFQyxNQUFjO1FBQzlDLElBQUlDO1FBQ0osSUFBSTtZQUNGQSxhQUFhLE1BQU1MLCtDQUFJQSxDQUFDTSxhQUFhO1lBQ3JDLE1BQU0sQ0FBQ0MsS0FBSyxHQUFHLE1BQU1GLFdBQVdHLE9BQU8sQ0FBQ0wsS0FBS0M7WUFDN0MsT0FBT0c7UUFDVCxFQUFFLE9BQU9FLE9BQU87WUFDZEMsUUFBUUQsS0FBSyxDQUFDLHlCQUF5QkE7WUFDdkMsTUFBTUE7UUFDUixTQUFVO1lBQ1IsSUFBSUosWUFBWTtnQkFDZEEsV0FBV00sT0FBTztZQUNwQjtRQUNGO0lBQ0Y7SUFFQSxNQUFNQyxhQUFlQyxRQUFzRDtRQUN6RSxNQUFNUixhQUFhLE1BQU1MLCtDQUFJQSxDQUFDTSxhQUFhO1FBQzNDLElBQUk7WUFDRixNQUFNRCxXQUFXUyxnQkFBZ0I7WUFDakMsTUFBTUMsU0FBUyxNQUFNRixTQUFTUjtZQUM5QixNQUFNQSxXQUFXVyxNQUFNO1lBQ3ZCLE9BQU9EO1FBQ1QsRUFBRSxPQUFPTixPQUFPO1lBQ2QsTUFBTUosV0FBV1ksUUFBUTtZQUN6QixNQUFNUjtRQUNSLFNBQVU7WUFDUkosV0FBV00sT0FBTztRQUNwQjtJQUNGO0lBRUEsTUFBTU87UUFDSixJQUFJYjtRQUNKLElBQUk7WUFDRkEsYUFBYSxNQUFNTCwrQ0FBSUEsQ0FBQ00sYUFBYTtZQUNyQyxNQUFNLENBQUNTLE9BQU8sR0FBRyxNQUFNVixXQUFXSCxLQUFLLENBQUM7WUFDeEMsT0FBTztnQkFDTGlCLFNBQVM7Z0JBQ1RDLE1BQU1MLE1BQU0sQ0FBQyxFQUFFO1lBQ2pCO1FBQ0YsRUFBRSxPQUFPTixPQUFPO1lBQ2RDLFFBQVFELEtBQUssQ0FBQyxvQ0FBb0NBO1lBQ2xELE9BQU87Z0JBQ0xVLFNBQVM7Z0JBQ1RWLE9BQU9BLGlCQUFpQlksUUFBUVosTUFBTWEsT0FBTyxHQUFHO1lBQ2xEO1FBQ0YsU0FBVTtZQUNSLElBQUlqQixZQUFZO2dCQUNkQSxXQUFXTSxPQUFPO1lBQ3BCO1FBQ0Y7SUFDRjtBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbGliL3NlcnZpY2VzL2RhdGFiYXNlU2VydmljZS50cz9iODRhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBteXNxbCBmcm9tICdteXNxbDIvcHJvbWlzZSc7XG5pbXBvcnQgcG9vbCBmcm9tICdAL2xpYi9kYic7XG5cbmV4cG9ydCBjb25zdCBkYXRhYmFzZVNlcnZpY2UgPSB7XG4gIGFzeW5jIHF1ZXJ5PFQgPSBhbnk+KHNxbDogc3RyaW5nLCBwYXJhbXM/OiBhbnlbXSk6IFByb21pc2U8VD4ge1xuICAgIGxldCBjb25uZWN0aW9uO1xuICAgIHRyeSB7XG4gICAgICBjb25uZWN0aW9uID0gYXdhaXQgcG9vbC5nZXRDb25uZWN0aW9uKCk7XG4gICAgICBjb25zdCBbcm93c10gPSBhd2FpdCBjb25uZWN0aW9uLmV4ZWN1dGUoc3FsLCBwYXJhbXMpO1xuICAgICAgcmV0dXJuIHJvd3MgYXMgVDtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRGF0YWJhc2UgcXVlcnkgZXJyb3I6JywgZXJyb3IpO1xuICAgICAgdGhyb3cgZXJyb3I7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGlmIChjb25uZWN0aW9uKSB7XG4gICAgICAgIGNvbm5lY3Rpb24ucmVsZWFzZSgpO1xuICAgICAgfVxuICAgIH1cbiAgfSxcblxuICBhc3luYyB0cmFuc2FjdGlvbjxUPihjYWxsYmFjazogKGNvbm5lY3Rpb246IG15c3FsLkNvbm5lY3Rpb24pID0+IFByb21pc2U8VD4pOiBQcm9taXNlPFQ+IHtcbiAgICBjb25zdCBjb25uZWN0aW9uID0gYXdhaXQgcG9vbC5nZXRDb25uZWN0aW9uKCk7XG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IGNvbm5lY3Rpb24uYmVnaW5UcmFuc2FjdGlvbigpO1xuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgY2FsbGJhY2soY29ubmVjdGlvbik7XG4gICAgICBhd2FpdCBjb25uZWN0aW9uLmNvbW1pdCgpO1xuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgYXdhaXQgY29ubmVjdGlvbi5yb2xsYmFjaygpO1xuICAgICAgdGhyb3cgZXJyb3I7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGNvbm5lY3Rpb24ucmVsZWFzZSgpO1xuICAgIH1cbiAgfSxcblxuICBhc3luYyB0ZXN0Q29ubmVjdGlvbigpIHtcbiAgICBsZXQgY29ubmVjdGlvbjtcbiAgICB0cnkge1xuICAgICAgY29ubmVjdGlvbiA9IGF3YWl0IHBvb2wuZ2V0Q29ubmVjdGlvbigpO1xuICAgICAgY29uc3QgW3Jlc3VsdF0gPSBhd2FpdCBjb25uZWN0aW9uLnF1ZXJ5KCdTRUxFQ1QgTk9XKCkgYXMgYGN1cnJlbnRfdGltZWAsIFZFUlNJT04oKSBhcyBteXNxbF92ZXJzaW9uJyk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgICBkYXRhOiByZXN1bHRbMF1cbiAgICAgIH07XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0RhdGFiYXNlIGNvbm5lY3Rpb24gdGVzdCBmYWlsZWQ6JywgZXJyb3IpO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIGVycm9yOiBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6ICdVbmtub3duIGVycm9yJ1xuICAgICAgfTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgaWYgKGNvbm5lY3Rpb24pIHtcbiAgICAgICAgY29ubmVjdGlvbi5yZWxlYXNlKCk7XG4gICAgICB9XG4gICAgfVxuICB9XG59OyAiXSwibmFtZXMiOlsicG9vbCIsImRhdGFiYXNlU2VydmljZSIsInF1ZXJ5Iiwic3FsIiwicGFyYW1zIiwiY29ubmVjdGlvbiIsImdldENvbm5lY3Rpb24iLCJyb3dzIiwiZXhlY3V0ZSIsImVycm9yIiwiY29uc29sZSIsInJlbGVhc2UiLCJ0cmFuc2FjdGlvbiIsImNhbGxiYWNrIiwiYmVnaW5UcmFuc2FjdGlvbiIsInJlc3VsdCIsImNvbW1pdCIsInJvbGxiYWNrIiwidGVzdENvbm5lY3Rpb24iLCJzdWNjZXNzIiwiZGF0YSIsIkVycm9yIiwibWVzc2FnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./lib/services/databaseService.ts\n");

/***/ }),

/***/ "(middleware)/./lib/session-manager.ts":
/*!********************************!*\
  !*** ./lib/session-manager.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sessionManager: () => (/* binding */ sessionManager)\n/* harmony export */ });\n/* harmony import */ var _lib_services_databaseService__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/services/databaseService */ \"(middleware)/./lib/services/databaseService.ts\");\n/* harmony import */ var _lib_auth_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/auth-config */ \"(middleware)/./lib/auth-config.ts\");\n\n\nclass SessionManager {\n    // Initialize session tables\n    async initializeTables() {\n        try {\n            // Create sessions table\n            await _lib_services_databaseService__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(`\r\n        CREATE TABLE IF NOT EXISTS user_sessions (\r\n          id VARCHAR(255) PRIMARY KEY,\r\n          user_id VARCHAR(255) NOT NULL,\r\n          user_type ENUM('customer', 'admin') NOT NULL,\r\n          session_id VARCHAR(255) NOT NULL UNIQUE,\r\n          refresh_token TEXT NOT NULL,\r\n          is_active BOOLEAN DEFAULT true,\r\n          created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\r\n          last_activity TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\r\n          expires_at TIMESTAMP NOT NULL,\r\n          ip_address VARCHAR(45),\r\n          user_agent TEXT,\r\n          INDEX idx_user_sessions (user_id, user_type),\r\n          INDEX idx_session_id (session_id),\r\n          INDEX idx_expires_at (expires_at)\r\n        )\r\n      `);\n            // Create blacklisted tokens table\n            await _lib_services_databaseService__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(`\r\n        CREATE TABLE IF NOT EXISTS blacklisted_tokens (\r\n          token_hash VARCHAR(255) PRIMARY KEY,\r\n          token_type ENUM('access', 'refresh') NOT NULL,\r\n          reason ENUM('logout', 'security', 'expired') NOT NULL,\r\n          blacklisted_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\r\n          expires_at TIMESTAMP NOT NULL,\r\n          INDEX idx_expires_at (expires_at)\r\n        )\r\n      `);\n            console.log(\"Session tables initialized successfully\");\n        } catch (error) {\n            console.error(\"Failed to initialize session tables:\", error);\n            throw error;\n        }\n    }\n    // Create new session\n    async createSession(userId, userType, sessionId, refreshToken, ipAddress, userAgent) {\n        try {\n            // Check for existing active sessions\n            const existingSessions = await _lib_services_databaseService__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(`SELECT * FROM user_sessions \r\n         WHERE user_id = ? AND user_type = ? AND is_active = true`, [\n                userId,\n                userType\n            ]);\n            // Enforce maximum concurrent sessions\n            if (existingSessions.length >= _lib_auth_config__WEBPACK_IMPORTED_MODULE_1__.authConfig.maxConcurrentSessions) {\n                // Deactivate oldest session\n                const oldestSession = existingSessions.sort((a, b)=>new Date(a.lastActivity).getTime() - new Date(b.lastActivity).getTime())[0];\n                await this.deactivateSession(oldestSession.sessionId);\n            }\n            const expiresAt = new Date(Date.now() + _lib_auth_config__WEBPACK_IMPORTED_MODULE_1__.authConfig.refreshTokenExpiry * 1000);\n            const session = {\n                id: sessionId,\n                userId,\n                userType,\n                sessionId,\n                refreshToken,\n                isActive: true,\n                createdAt: new Date(),\n                lastActivity: new Date(),\n                expiresAt,\n                ipAddress,\n                userAgent\n            };\n            await _lib_services_databaseService__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(`INSERT INTO user_sessions \r\n         (id, user_id, user_type, session_id, refresh_token, expires_at, ip_address, user_agent)\r\n         VALUES (?, ?, ?, ?, ?, ?, ?, ?)`, [\n                sessionId,\n                userId,\n                userType,\n                sessionId,\n                refreshToken,\n                expiresAt,\n                ipAddress,\n                userAgent\n            ]);\n            return session;\n        } catch (error) {\n            console.error(\"Failed to create session:\", error);\n            throw error;\n        }\n    }\n    // Get session by session ID\n    async getSession(sessionId) {\n        try {\n            const sessions = await _lib_services_databaseService__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(`SELECT * FROM user_sessions WHERE session_id = ? AND is_active = true`, [\n                sessionId\n            ]);\n            if (sessions.length === 0) {\n                return null;\n            }\n            const session = sessions[0];\n            // Check if session has expired\n            if (new Date() > new Date(session.expiresAt)) {\n                await this.deactivateSession(sessionId);\n                return null;\n            }\n            // Update last activity\n            await this.updateLastActivity(sessionId);\n            return session;\n        } catch (error) {\n            console.error(\"Failed to get session:\", error);\n            return null;\n        }\n    }\n    // Update session last activity\n    async updateLastActivity(sessionId) {\n        try {\n            await _lib_services_databaseService__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(`UPDATE user_sessions SET last_activity = CURRENT_TIMESTAMP WHERE session_id = ?`, [\n                sessionId\n            ]);\n        } catch (error) {\n            console.error(\"Failed to update session activity:\", error);\n        }\n    }\n    // Deactivate session\n    async deactivateSession(sessionId) {\n        try {\n            await _lib_services_databaseService__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(`UPDATE user_sessions SET is_active = false WHERE session_id = ?`, [\n                sessionId\n            ]);\n        } catch (error) {\n            console.error(\"Failed to deactivate session:\", error);\n        }\n    }\n    // Deactivate all sessions for a user\n    async deactivateAllUserSessions(userId, userType) {\n        try {\n            await _lib_services_databaseService__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(`UPDATE user_sessions SET is_active = false \r\n         WHERE user_id = ? AND user_type = ?`, [\n                userId,\n                userType\n            ]);\n        } catch (error) {\n            console.error(\"Failed to deactivate user sessions:\", error);\n        }\n    }\n    // Blacklist token\n    async blacklistToken(token, tokenType, reason) {\n        try {\n            const tokenHash = this.hashToken(token);\n            const expiresAt = new Date(Date.now() + 24 * 60 * 60 * 1000); // 24 hours\n            await _lib_services_databaseService__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(`INSERT INTO blacklisted_tokens (token_hash, token_type, reason, expires_at)\r\n         VALUES (?, ?, ?, ?)\r\n         ON DUPLICATE KEY UPDATE expires_at = VALUES(expires_at)`, [\n                tokenHash,\n                tokenType,\n                reason,\n                expiresAt\n            ]);\n            // Also store in memory for faster access\n            this.blacklistedTokens.set(tokenHash, {\n                token,\n                reason,\n                blacklistedAt: new Date(),\n                expiresAt\n            });\n        } catch (error) {\n            console.error(\"Failed to blacklist token:\", error);\n        }\n    }\n    // Check if token is blacklisted\n    async isTokenBlacklisted(token) {\n        try {\n            const tokenHash = this.hashToken(token);\n            // Check memory cache first\n            const cached = this.blacklistedTokens.get(tokenHash);\n            if (cached && new Date() < cached.expiresAt) {\n                return true;\n            }\n            // Check database\n            const [tokens] = await _lib_services_databaseService__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(`SELECT * FROM blacklisted_tokens WHERE token_hash = ? AND expires_at > NOW()`, [\n                tokenHash\n            ]);\n            return tokens.length > 0;\n        } catch (error) {\n            console.error(\"Failed to check token blacklist:\", error);\n            return false;\n        }\n    }\n    // Clean up expired sessions and tokens\n    async cleanup() {\n        try {\n            // Clean up expired sessions\n            await _lib_services_databaseService__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(`UPDATE user_sessions SET is_active = false WHERE expires_at < NOW()`);\n            // Clean up expired blacklisted tokens\n            await _lib_services_databaseService__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(`DELETE FROM blacklisted_tokens WHERE expires_at < NOW()`);\n            // Clean up memory cache\n            const now = new Date();\n            for (const [hash, token] of this.blacklistedTokens.entries()){\n                if (now > token.expiresAt) {\n                    this.blacklistedTokens.delete(hash);\n                }\n            }\n        } catch (error) {\n            console.error(\"Failed to cleanup sessions:\", error);\n        }\n    }\n    // Update session refresh token\n    async updateSessionRefreshToken(sessionId, refreshToken) {\n        try {\n            await _lib_services_databaseService__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(`UPDATE user_sessions SET refresh_token = ? WHERE session_id = ?`, [\n                refreshToken,\n                sessionId\n            ]);\n        } catch (error) {\n            console.error(\"Failed to update session refresh token:\", error);\n        }\n    }\n    // Hash token for storage\n    hashToken(token) {\n        const crypto = __webpack_require__(/*! crypto */ \"crypto\");\n        return crypto.createHash(\"sha256\").update(token).digest(\"hex\");\n    }\n    // Get user sessions\n    async getUserSessions(userId, userType) {\n        try {\n            const sessions = await _lib_services_databaseService__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(`SELECT * FROM user_sessions \r\n         WHERE user_id = ? AND user_type = ? AND is_active = true\r\n         ORDER BY last_activity DESC`, [\n                userId,\n                userType\n            ]);\n            return sessions;\n        } catch (error) {\n            console.error(\"Failed to get user sessions:\", error);\n            return [];\n        }\n    }\n    constructor(){\n        this.blacklistedTokens = new Map();\n    }\n}\nconst sessionManager = new SessionManager();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./lib/session-manager.ts\n");

/***/ }),

/***/ "(middleware)/./middleware.ts":
/*!***********************!*\
  !*** ./middleware.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   middleware: () => (/* binding */ middleware)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(middleware)/./node_modules/next/dist/esm/api/server.js\");\n/* harmony import */ var _lib_auth_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/auth-config */ \"(middleware)/./lib/auth-config.ts\");\n/* harmony import */ var _lib_session_manager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/session-manager */ \"(middleware)/./lib/session-manager.ts\");\n\n\n\n// Paths that require authentication\nconst protectedPaths = [\n    \"/account\",\n    \"/api/customers/profile\",\n    \"/api/customers/addresses\",\n    \"/api/orders/history\"\n];\n// Admin paths that require admin authentication\nconst adminPaths = [\n    \"/admin\",\n    \"/api/admin\"\n];\n// Paths that are always public\nconst publicPaths = [\n    \"/auth/login\",\n    \"/auth/register\",\n    \"/api/auth/login\",\n    \"/api/auth/register\",\n    \"/api/auth/customer/login\",\n    \"/api/auth/customer/register\",\n    \"/api/auth/admin/login\",\n    \"/api/auth/refresh\",\n    \"/api/auth/logout\",\n    \"/api/auth/csrf\",\n    \"/api/auth/session\",\n    \"/api/auth/signin\",\n    \"/api/auth/signout\",\n    \"/api/auth/callback\",\n    \"/api/auth/providers\",\n    \"/api/products\",\n    \"/api/cart\",\n    \"/shop\",\n    \"/\",\n    \"/admin/login\",\n    \"/api/auth/admin/login\" // Allow access to admin login API\n];\n// Proper JWT verification using Web Crypto API\nasync function verifyJWT(token, userType) {\n    try {\n        const [headerB64, payloadB64, signatureB64] = token.split(\".\");\n        if (!headerB64 || !payloadB64 || !signatureB64) {\n            throw new Error(\"Invalid token format\");\n        }\n        // Decode header and payload\n        const header = JSON.parse(atob(headerB64));\n        const payload = JSON.parse(atob(payloadB64));\n        // Check if token is expired\n        if (payload.exp && payload.exp < Date.now() / 1000) {\n            throw new Error(\"Token expired\");\n        }\n        // Check if token is blacklisted\n        if (await _lib_session_manager__WEBPACK_IMPORTED_MODULE_2__.sessionManager.isTokenBlacklisted(token)) {\n            throw new Error(\"Token has been revoked\");\n        }\n        // Verify signature using Web Crypto API\n        const encoder = new TextEncoder();\n        const data = encoder.encode(`${headerB64}.${payloadB64}`);\n        const signature = Uint8Array.from(atob(signatureB64), (c)=>c.charCodeAt(0));\n        // Import the secret key\n        const secret = (0,_lib_auth_config__WEBPACK_IMPORTED_MODULE_1__.getJwtSecret)(userType);\n        const key = await crypto.subtle.importKey(\"raw\", encoder.encode(secret), {\n            name: \"HMAC\",\n            hash: \"SHA-256\"\n        }, false, [\n            \"verify\"\n        ]);\n        // Verify the signature\n        const isValid = await crypto.subtle.verify(\"HMAC\", key, signature, data);\n        if (!isValid) {\n            throw new Error(\"Invalid signature\");\n        }\n        return payload;\n    } catch (error) {\n        console.error(\"JWT verification error:\", error);\n        throw error;\n    }\n}\nasync function middleware(request) {\n    const path = request.nextUrl.pathname;\n    // Skip middleware for NextAuth.js API routes\n    if (path.startsWith(\"/api/auth/\")) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.next();\n    }\n    // Validate auth configuration\n    try {\n        (0,_lib_auth_config__WEBPACK_IMPORTED_MODULE_1__.validateAuthConfig)();\n    } catch (error) {\n        console.error(\"Auth configuration error:\", error);\n    // Continue with middleware but log the error\n    }\n    // Check if path is public\n    const isPublicPath = publicPaths.some((publicPath)=>path.startsWith(publicPath) || path === publicPath);\n    if (isPublicPath) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.next();\n    }\n    // Check if path requires admin authentication\n    const isAdminPath = adminPaths.some((adminPath)=>path.startsWith(adminPath) || path === adminPath);\n    // Check if path requires customer authentication\n    const isProtectedPath = protectedPaths.some((protectedPath)=>path.startsWith(protectedPath) || path === protectedPath);\n    // Handle admin routes\n    if (isAdminPath) {\n        console.log(\"Admin path detected:\", path);\n        // Skip middleware for admin login page and its API\n        if (path === \"/admin/login\" || path === \"/api/auth/admin/login\") {\n            console.log(\"Skipping middleware for login page/API\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.next();\n        }\n        // Check for admin token in cookies\n        const adminToken = request.cookies.get(\"adminToken\");\n        console.log(\"Middleware - All cookies:\", request.cookies.getAll());\n        console.log(\"Middleware - Admin token from cookie:\", adminToken?.value);\n        let isAdmin = false;\n        if (adminToken?.value) {\n            try {\n                const decoded = await verifyJWT(adminToken.value, \"admin\");\n                console.log(\"Middleware - Decoded token:\", decoded);\n                isAdmin = decoded.type === \"admin\";\n                console.log(\"Is admin:\", isAdmin);\n            } catch (error) {\n                console.error(\"Token verification error:\", error);\n                isAdmin = false;\n            }\n        }\n        if (!isAdmin) {\n            console.log(\"Not admin, redirecting to login\");\n            const response = next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL(\"/admin/login\", request.url));\n            // Clear any existing admin token\n            response.cookies.delete(\"adminToken\");\n            return response;\n        }\n        console.log(\"Admin verified, proceeding\");\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.next();\n    }\n    // Handle protected customer routes\n    if (isProtectedPath) {\n        console.log(\"Protected path detected:\", path);\n        // Check for customer token in cookies\n        const customerToken = request.cookies.get(\"token\");\n        console.log(\"Middleware - Customer token from cookie:\", customerToken?.value);\n        let isAuthenticated = false;\n        if (customerToken?.value) {\n            try {\n                const decoded = await verifyJWT(customerToken.value, \"customer\");\n                console.log(\"Middleware - Decoded customer token:\", decoded);\n                isAuthenticated = decoded.type === \"customer\";\n                console.log(\"Is authenticated customer:\", isAuthenticated);\n            } catch (error) {\n                console.error(\"Customer token verification error:\", error);\n                isAuthenticated = false;\n            }\n        }\n        if (!isAuthenticated) {\n            console.log(\"Not authenticated, redirecting to login\");\n            const loginUrl = new URL(\"/auth/login\", request.url);\n            loginUrl.searchParams.set(\"redirect\", request.nextUrl.pathname + request.nextUrl.search);\n            const response = next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(loginUrl);\n            // Clear any existing customer token\n            response.cookies.delete(\"token\");\n            return response;\n        }\n        console.log(\"Customer verified, proceeding\");\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.next();\n    }\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.next();\n}\nconst config = {\n    matcher: [\n        /*\r\n     * Match all request paths except for the ones starting with:\r\n     * - api (API routes)\r\n     * - _next/static (static files)\r\n     * - _next/image (image optimization files)\r\n     * - favicon.ico (favicon file)\r\n     */ \"/((?!api|_next/static|_next/image|favicon.ico).*)\"\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./middleware.ts\n");

/***/ }),

/***/ "(middleware)/./node_modules/aws-ssl-profiles/lib/index.js":
/*!****************************************************!*\
  !*** ./node_modules/aws-ssl-profiles/lib/index.js ***!
  \****************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst defaults_js_1 = __webpack_require__(/*! ./profiles/ca/defaults.js */ \"(middleware)/./node_modules/aws-ssl-profiles/lib/profiles/ca/defaults.js\");\r\nconst proxies_js_1 = __webpack_require__(/*! ./profiles/ca/proxies.js */ \"(middleware)/./node_modules/aws-ssl-profiles/lib/profiles/ca/proxies.js\");\r\nconst proxyBundle = {\r\n    ca: proxies_js_1.proxies,\r\n};\r\nconst profiles = {\r\n    ca: [...defaults_js_1.defaults, ...proxies_js_1.proxies],\r\n};\r\nmodule.exports = profiles;\r\nmodule.exports.proxyBundle = proxyBundle;\r\nmodule.exports[\"default\"] = profiles;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2F3cy1zc2wtcHJvZmlsZXMvbGliL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQixtQkFBTyxDQUFDLDJHQUEyQjtBQUN6RCxxQkFBcUIsbUJBQU8sQ0FBQyx5R0FBMEI7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUIseUJBQXNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9hd3Mtc3NsLXByb2ZpbGVzL2xpYi9pbmRleC5qcz9lYmFlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbmNvbnN0IGRlZmF1bHRzX2pzXzEgPSByZXF1aXJlKFwiLi9wcm9maWxlcy9jYS9kZWZhdWx0cy5qc1wiKTtcclxuY29uc3QgcHJveGllc19qc18xID0gcmVxdWlyZShcIi4vcHJvZmlsZXMvY2EvcHJveGllcy5qc1wiKTtcclxuY29uc3QgcHJveHlCdW5kbGUgPSB7XHJcbiAgICBjYTogcHJveGllc19qc18xLnByb3hpZXMsXHJcbn07XHJcbmNvbnN0IHByb2ZpbGVzID0ge1xyXG4gICAgY2E6IFsuLi5kZWZhdWx0c19qc18xLmRlZmF1bHRzLCAuLi5wcm94aWVzX2pzXzEucHJveGllc10sXHJcbn07XHJcbm1vZHVsZS5leHBvcnRzID0gcHJvZmlsZXM7XHJcbm1vZHVsZS5leHBvcnRzLnByb3h5QnVuZGxlID0gcHJveHlCdW5kbGU7XHJcbm1vZHVsZS5leHBvcnRzLmRlZmF1bHQgPSBwcm9maWxlcztcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/aws-ssl-profiles/lib/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/aws-ssl-profiles/lib/profiles/ca/defaults.js":
/*!*******************************************************************!*\
  !*** ./node_modules/aws-ssl-profiles/lib/profiles/ca/defaults.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.defaults = void 0;\r\n/**\r\n * CA Certificates for **Amazon RDS** (2024)\r\n *\r\n * - https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html\r\n * - https://docs.amazonaws.cn/en_us/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL.html\r\n * - https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html#aurora-serverless.tls\r\n */\r\nexports.defaults = [\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIEEjCCAvqgAwIBAgIJAM2ZN/+nPi27MA0GCSqGSIb3DQEBCwUAMIGVMQswCQYD\\n' +\r\n        'VQQGEwJVUzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEi\\n' +\r\n        'MCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1h\\n' +\r\n        'em9uIFJEUzEmMCQGA1UEAwwdQW1hem9uIFJEUyBhZi1zb3V0aC0xIFJvb3QgQ0Ew\\n' +\r\n        'HhcNMTkxMDI4MTgwNTU4WhcNMjQxMDI2MTgwNTU4WjCBlTELMAkGA1UEBhMCVVMx\\n' +\r\n        'EDAOBgNVBAcMB1NlYXR0bGUxEzARBgNVBAgMCldhc2hpbmd0b24xIjAgBgNVBAoM\\n' +\r\n        'GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n' +\r\n        'JjAkBgNVBAMMHUFtYXpvbiBSRFMgYWYtc291dGgtMSBSb290IENBMIIBIjANBgkq\\n' +\r\n        'hkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwR2351uPMZaJk2gMGT+1sk8HE9MQh2rc\\n' +\r\n        '/sCnbxGn2p1c7Oi9aBbd/GiFijeJb2BXvHU+TOq3d3Jjqepq8tapXVt4ojbTJNyC\\n' +\r\n        'J5E7r7KjTktKdLxtBE1MK25aY+IRJjtdU6vG3KiPKUT1naO3xs3yt0F76WVuFivd\\n' +\r\n        '9OHv2a+KHvPkRUWIxpmAHuMY9SIIMmEZtVE7YZGx5ah0iO4JzItHcbVR0y0PBH55\\n' +\r\n        'arpFBddpIVHCacp1FUPxSEWkOpI7q0AaU4xfX0fe1BV5HZYRKpBOIp1TtZWvJD+X\\n' +\r\n        'jGUtL1BEsT5vN5g9MkqdtYrC+3SNpAk4VtpvJrdjraI/hhvfeXNnAwIDAQABo2Mw\\n' +\r\n        'YTAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUEEi/\\n' +\r\n        'WWMcBJsoGXg+EZwkQ0MscZQwHwYDVR0jBBgwFoAUEEi/WWMcBJsoGXg+EZwkQ0Ms\\n' +\r\n        'cZQwDQYJKoZIhvcNAQELBQADggEBAGDZ5js5Pc/gC58LJrwMPXFhJDBS8QuDm23C\\n' +\r\n        'FFUdlqucskwOS3907ErK1ZkmVJCIqFLArHqskFXMAkRZ2PNR7RjWLqBs+0znG5yH\\n' +\r\n        'hRKb4DXzhUFQ18UBRcvT6V6zN97HTRsEEaNhM/7k8YLe7P8vfNZ28VIoJIGGgv9D\\n' +\r\n        'wQBBvkxQ71oOmAG0AwaGD0ORGUfbYry9Dz4a4IcUsZyRWRMADixgrFv6VuETp26s\\n' +\r\n        '/+z+iqNaGWlELBKh3iQCT6Y/1UnkPLO42bxrCSyOvshdkYN58Q2gMTE1SVTqyo8G\\n' +\r\n        'Lw8lLAz9bnvUSgHzB3jRrSx6ggF/WRMRYlR++y6LXP4SAsSAaC0=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIEEjCCAvqgAwIBAgIJAJYM4LxvTZA6MA0GCSqGSIb3DQEBCwUAMIGVMQswCQYD\\n' +\r\n        'VQQGEwJVUzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEi\\n' +\r\n        'MCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1h\\n' +\r\n        'em9uIFJEUzEmMCQGA1UEAwwdQW1hem9uIFJEUyBldS1zb3V0aC0xIFJvb3QgQ0Ew\\n' +\r\n        'HhcNMTkxMDMwMjAyMDM2WhcNMjQxMDI4MjAyMDM2WjCBlTELMAkGA1UEBhMCVVMx\\n' +\r\n        'EDAOBgNVBAcMB1NlYXR0bGUxEzARBgNVBAgMCldhc2hpbmd0b24xIjAgBgNVBAoM\\n' +\r\n        'GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n' +\r\n        'JjAkBgNVBAMMHUFtYXpvbiBSRFMgZXUtc291dGgtMSBSb290IENBMIIBIjANBgkq\\n' +\r\n        'hkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqM921jXCXeqpRNCS9CBPOe5N7gMaEt+D\\n' +\r\n        's5uR3riZbqzRlHGiF1jZihkXfHAIQewDwy+Yz+Oec1aEZCQMhUHxZJPusuX0cJfj\\n' +\r\n        'b+UluFqHIijL2TfXJ3D0PVLLoNTQJZ8+GAPECyojAaNuoHbdVqxhOcznMsXIXVFq\\n' +\r\n        'yVLKDGvyKkJjai/iSPDrQMXufg3kWt0ISjNLvsG5IFXgP4gttsM8i0yvRd4QcHoo\\n' +\r\n        'DjvH7V3cS+CQqW5SnDrGnHToB0RLskE1ET+oNOfeN9PWOxQprMOX/zmJhnJQlTqD\\n' +\r\n        'QP7jcf7SddxrKFjuziFiouskJJyNDsMjt1Lf60+oHZhed2ogTeifGwIDAQABo2Mw\\n' +\r\n        'YTAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUFBAF\\n' +\r\n        'cgJe/BBuZiGeZ8STfpkgRYQwHwYDVR0jBBgwFoAUFBAFcgJe/BBuZiGeZ8STfpkg\\n' +\r\n        'RYQwDQYJKoZIhvcNAQELBQADggEBAKAYUtlvDuX2UpZW9i1QgsjFuy/ErbW0dLHU\\n' +\r\n        'e/IcFtju2z6RLZ+uF+5A8Kme7IKG1hgt8s+w9TRVQS/7ukQzoK3TaN6XKXRosjtc\\n' +\r\n        'o9Rm4gYWM8bmglzY1TPNaiI4HC7546hSwJhubjN0bXCuj/0sHD6w2DkiGuwKNAef\\n' +\r\n        'yTu5vZhPkeNyXLykxkzz7bNp2/PtMBnzIp+WpS7uUDmWyScGPohKMq5PqvL59z+L\\n' +\r\n        'ZI3CYeMZrJ5VpXUg3fNNIz/83N3G0sk7wr0ohs/kHTP7xPOYB0zD7Ku4HA0Q9Swf\\n' +\r\n        'WX0qr6UQgTPMjfYDLffI7aEId0gxKw1eGYc6Cq5JAZ3ipi/cBFc=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIEEjCCAvqgAwIBAgIJANew34ehz5l8MA0GCSqGSIb3DQEBCwUAMIGVMQswCQYD\\n' +\r\n        'VQQGEwJVUzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEi\\n' +\r\n        'MCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1h\\n' +\r\n        'em9uIFJEUzEmMCQGA1UEAwwdQW1hem9uIFJEUyBtZS1zb3V0aC0xIFJvb3QgQ0Ew\\n' +\r\n        'HhcNMTkwNTEwMjE0ODI3WhcNMjQwNTA4MjE0ODI3WjCBlTELMAkGA1UEBhMCVVMx\\n' +\r\n        'EDAOBgNVBAcMB1NlYXR0bGUxEzARBgNVBAgMCldhc2hpbmd0b24xIjAgBgNVBAoM\\n' +\r\n        'GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n' +\r\n        'JjAkBgNVBAMMHUFtYXpvbiBSRFMgbWUtc291dGgtMSBSb290IENBMIIBIjANBgkq\\n' +\r\n        'hkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAp7BYV88MukcY+rq0r79+C8UzkT30fEfT\\n' +\r\n        'aPXbx1d6M7uheGN4FMaoYmL+JE1NZPaMRIPTHhFtLSdPccInvenRDIatcXX+jgOk\\n' +\r\n        'UA6lnHQ98pwN0pfDUyz/Vph4jBR9LcVkBbe0zdoKKp+HGbMPRU0N2yNrog9gM5O8\\n' +\r\n        'gkU/3O2csJ/OFQNnj4c2NQloGMUpEmedwJMOyQQfcUyt9CvZDfIPNnheUS29jGSw\\n' +\r\n        'ERpJe/AENu8Pxyc72jaXQuD+FEi2Ck6lBkSlWYQFhTottAeGvVFNCzKszCntrtqd\\n' +\r\n        'rdYUwurYsLTXDHv9nW2hfDUQa0mhXf9gNDOBIVAZugR9NqNRNyYLHQIDAQABo2Mw\\n' +\r\n        'YTAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQU54cf\\n' +\r\n        'DjgwBx4ycBH8+/r8WXdaiqYwHwYDVR0jBBgwFoAU54cfDjgwBx4ycBH8+/r8WXda\\n' +\r\n        'iqYwDQYJKoZIhvcNAQELBQADggEBAIIMTSPx/dR7jlcxggr+O6OyY49Rlap2laKA\\n' +\r\n        'eC/XI4ySP3vQkIFlP822U9Kh8a9s46eR0uiwV4AGLabcu0iKYfXjPkIprVCqeXV7\\n' +\r\n        'ny9oDtrbflyj7NcGdZLvuzSwgl9SYTJp7PVCZtZutsPYlbJrBPHwFABvAkMvRtDB\\n' +\r\n        'hitIg4AESDGPoCl94sYHpfDfjpUDMSrAMDUyO6DyBdZH5ryRMAs3lGtsmkkNUrso\\n' +\r\n        'aTW6R05681Z0mvkRdb+cdXtKOSuDZPoe2wJJIaz3IlNQNSrB5TImMYgmt6iAsFhv\\n' +\r\n        '3vfTSTKrZDNTJn4ybG6pq1zWExoXsktZPylJly6R3RBwV6nwqBM=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIEBjCCAu6gAwIBAgIJAMc0ZzaSUK51MA0GCSqGSIb3DQEBCwUAMIGPMQswCQYD\\n' +\r\n        'VQQGEwJVUzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEi\\n' +\r\n        'MCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1h\\n' +\r\n        'em9uIFJEUzEgMB4GA1UEAwwXQW1hem9uIFJEUyBSb290IDIwMTkgQ0EwHhcNMTkw\\n' +\r\n        'ODIyMTcwODUwWhcNMjQwODIyMTcwODUwWjCBjzELMAkGA1UEBhMCVVMxEDAOBgNV\\n' +\r\n        'BAcMB1NlYXR0bGUxEzARBgNVBAgMCldhc2hpbmd0b24xIjAgBgNVBAoMGUFtYXpv\\n' +\r\n        'biBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxIDAeBgNV\\n' +\r\n        'BAMMF0FtYXpvbiBSRFMgUm9vdCAyMDE5IENBMIIBIjANBgkqhkiG9w0BAQEFAAOC\\n' +\r\n        'AQ8AMIIBCgKCAQEArXnF/E6/Qh+ku3hQTSKPMhQQlCpoWvnIthzX6MK3p5a0eXKZ\\n' +\r\n        'oWIjYcNNG6UwJjp4fUXl6glp53Jobn+tWNX88dNH2n8DVbppSwScVE2LpuL+94vY\\n' +\r\n        '0EYE/XxN7svKea8YvlrqkUBKyxLxTjh+U/KrGOaHxz9v0l6ZNlDbuaZw3qIWdD/I\\n' +\r\n        '6aNbGeRUVtpM6P+bWIoxVl/caQylQS6CEYUk+CpVyJSkopwJlzXT07tMoDL5WgX9\\n' +\r\n        'O08KVgDNz9qP/IGtAcRduRcNioH3E9v981QO1zt/Gpb2f8NqAjUUCUZzOnij6mx9\\n' +\r\n        'McZ+9cWX88CRzR0vQODWuZscgI08NvM69Fn2SQIDAQABo2MwYTAOBgNVHQ8BAf8E\\n' +\r\n        'BAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUc19g2LzLA5j0Kxc0LjZa\\n' +\r\n        'pmD/vB8wHwYDVR0jBBgwFoAUc19g2LzLA5j0Kxc0LjZapmD/vB8wDQYJKoZIhvcN\\n' +\r\n        'AQELBQADggEBAHAG7WTmyjzPRIM85rVj+fWHsLIvqpw6DObIjMWokpliCeMINZFV\\n' +\r\n        'ynfgBKsf1ExwbvJNzYFXW6dihnguDG9VMPpi2up/ctQTN8tm9nDKOy08uNZoofMc\\n' +\r\n        'NUZxKCEkVKZv+IL4oHoeayt8egtv3ujJM6V14AstMQ6SwvwvA93EP/Ug2e4WAXHu\\n' +\r\n        'cbI1NAbUgVDqp+DRdfvZkgYKryjTWd/0+1fS8X1bBZVWzl7eirNVnHbSH2ZDpNuY\\n' +\r\n        '0SBd8dj5F6ld3t58ydZbrTHze7JJOd8ijySAp4/kiu9UfZWuTPABzDa/DSdz9Dk/\\n' +\r\n        'zPW4CXXvhLmE02TA9/HeCw3KEHIwicNuEfw=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIEEDCCAvigAwIBAgIJAKFMXyltvuRdMA0GCSqGSIb3DQEBCwUAMIGUMQswCQYD\\n' +\r\n        'VQQGEwJVUzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEi\\n' +\r\n        'MCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1h\\n' +\r\n        'em9uIFJEUzElMCMGA1UEAwwcQW1hem9uIFJEUyBCZXRhIFJvb3QgMjAxOSBDQTAe\\n' +\r\n        'Fw0xOTA4MTkxNzM4MjZaFw0yNDA4MTkxNzM4MjZaMIGUMQswCQYDVQQGEwJVUzEQ\\n' +\r\n        'MA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEiMCAGA1UECgwZ\\n' +\r\n        'QW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEl\\n' +\r\n        'MCMGA1UEAwwcQW1hem9uIFJEUyBCZXRhIFJvb3QgMjAxOSBDQTCCASIwDQYJKoZI\\n' +\r\n        'hvcNAQEBBQADggEPADCCAQoCggEBAMkZdnIH9ndatGAcFo+DppGJ1HUt4x+zeO+0\\n' +\r\n        'ZZ29m0sfGetVulmTlv2d5b66e+QXZFWpcPQMouSxxYTW08TbrQiZngKr40JNXftA\\n' +\r\n        'atvzBqIImD4II0ZX5UEVj2h98qe/ypW5xaDN7fEa5e8FkYB1TEemPaWIbNXqchcL\\n' +\r\n        'tV7IJPr3Cd7Z5gZJlmujIVDPpMuSiNaal9/6nT9oqN+JSM1fx5SzrU5ssg1Vp1vv\\n' +\r\n        '5Xab64uOg7wCJRB9R2GC9XD04odX6VcxUAGrZo6LR64ZSifupo3l+R5sVOc5i8NH\\n' +\r\n        'skdboTzU9H7+oSdqoAyhIU717PcqeDum23DYlPE2nGBWckE+eT8CAwEAAaNjMGEw\\n' +\r\n        'DgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFK2hDBWl\\n' +\r\n        'sbHzt/EHd0QYOooqcFPhMB8GA1UdIwQYMBaAFK2hDBWlsbHzt/EHd0QYOooqcFPh\\n' +\r\n        'MA0GCSqGSIb3DQEBCwUAA4IBAQAO/718k8EnOqJDx6wweUscGTGL/QdKXUzTVRAx\\n' +\r\n        'JUsjNUv49mH2HQVEW7oxszfH6cPCaupNAddMhQc4C/af6GHX8HnqfPDk27/yBQI+\\n' +\r\n        'yBBvIanGgxv9c9wBbmcIaCEWJcsLp3HzXSYHmjiqkViXwCpYfkoV3Ns2m8bp+KCO\\n' +\r\n        'y9XmcCKRaXkt237qmoxoh2sGmBHk2UlQtOsMC0aUQ4d7teAJG0q6pbyZEiPyKZY1\\n' +\r\n        'XR/UVxMJL0Q4iVpcRS1kaNCMfqS2smbLJeNdsan8pkw1dvPhcaVTb7CvjhJtjztF\\n' +\r\n        'YfDzAI5794qMlWxwilKMmUvDlPPOTen8NNHkLwWvyFCH7Doh\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIEFjCCAv6gAwIBAgIJAMzYZJ+R9NBVMA0GCSqGSIb3DQEBCwUAMIGXMQswCQYD\\n' +\r\n        'VQQGEwJVUzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEi\\n' +\r\n        'MCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1h\\n' +\r\n        'em9uIFJEUzEoMCYGA1UEAwwfQW1hem9uIFJEUyBQcmV2aWV3IFJvb3QgMjAxOSBD\\n' +\r\n        'QTAeFw0xOTA4MjEyMjI5NDlaFw0yNDA4MjEyMjI5NDlaMIGXMQswCQYDVQQGEwJV\\n' +\r\n        'UzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEiMCAGA1UE\\n' +\r\n        'CgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJE\\n' +\r\n        'UzEoMCYGA1UEAwwfQW1hem9uIFJEUyBQcmV2aWV3IFJvb3QgMjAxOSBDQTCCASIw\\n' +\r\n        'DQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAM7kkS6vjgKKQTPynC2NjdN5aPPV\\n' +\r\n        'O71G0JJS/2ARVBVJd93JLiGovVJilfWYfwZCs4gTRSSjrUD4D4HyqCd6A+eEEtJq\\n' +\r\n        'M0DEC7i0dC+9WNTsPszuB206Jy2IUmxZMIKJAA1NHSbIMjB+b6/JhbSUi7nKdbR/\\n' +\r\n        'brj83bF+RoSA+ogrgX7mQbxhmFcoZN9OGaJgYKsKWUt5Wqv627KkGodUK8mDepgD\\n' +\r\n        'S3ZfoRQRx3iceETpcmHJvaIge6+vyDX3d9Z22jmvQ4AKv3py2CmU2UwuhOltFDwB\\n' +\r\n        '0ddtb39vgwrJxaGfiMRHpEP1DfNLWHAnA69/pgZPwIggidS+iBPUhgucMp8CAwEA\\n' +\r\n        'AaNjMGEwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYE\\n' +\r\n        'FGnTGpQuQ2H/DZlXMQijZEhjs7TdMB8GA1UdIwQYMBaAFGnTGpQuQ2H/DZlXMQij\\n' +\r\n        'ZEhjs7TdMA0GCSqGSIb3DQEBCwUAA4IBAQC3xz1vQvcXAfpcZlngiRWeqU8zQAMQ\\n' +\r\n        'LZPCFNv7PVk4pmqX+ZiIRo4f9Zy7TrOVcboCnqmP/b/mNq0gVF4O+88jwXJZD+f8\\n' +\r\n        '/RnABMZcnGU+vK0YmxsAtYU6TIb1uhRFmbF8K80HHbj9vSjBGIQdPCbvmR2zY6VJ\\n' +\r\n        'BYM+w9U9hp6H4DVMLKXPc1bFlKA5OBTgUtgkDibWJKFOEPW3UOYwp9uq6pFoN0AO\\n' +\r\n        'xMTldqWFsOF3bJIlvOY0c/1EFZXu3Ns6/oCP//Ap9vumldYMUZWmbK+gK33FPOXV\\n' +\r\n        '8BQ6jNC29icv7lLDpRPwjibJBXX+peDR5UK4FdYcswWEB1Tix5X8dYu6\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIECTCCAvGgAwIBAgICEAAwDQYJKoZIhvcNAQELBQAwgZUxCzAJBgNVBAYTAlVT\\n' +\r\n        'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\r\n        'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\r\n        'MSYwJAYDVQQDDB1BbWF6b24gUkRTIGFmLXNvdXRoLTEgUm9vdCBDQTAeFw0xOTEw\\n' +\r\n        'MjgxODA2NTNaFw0yNDEwMjgxODA2NTNaMIGQMQswCQYDVQQGEwJVUzETMBEGA1UE\\n' +\r\n        'CAwKV2FzaGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9u\\n' +\r\n        'IFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEhMB8GA1UE\\n' +\r\n        'AwwYQW1hem9uIFJEUyBhZi1zb3V0aC0xIENBMIIBIjANBgkqhkiG9w0BAQEFAAOC\\n' +\r\n        'AQ8AMIIBCgKCAQEAvtV1OqmFa8zCVQSKOvPUJERLVFtd4rZmDpImc5rIoeBk7w/P\\n' +\r\n        '9lcKUJjO8R/w1a2lJXx3oQ81tiY0Piw6TpT62YWVRMWrOw8+Vxq1dNaDSFp9I8d0\\n' +\r\n        'UHillSSbOk6FOrPDp+R6AwbGFqUDebbN5LFFoDKbhNmH1BVS0a6YNKpGigLRqhka\\n' +\r\n        'cClPslWtPqtjbaP3Jbxl26zWzLo7OtZl98dR225pq8aApNBwmtgA7Gh60HK/cX0t\\n' +\r\n        '32W94n8D+GKSg6R4MKredVFqRTi9hCCNUu0sxYPoELuM+mHiqB5NPjtm92EzCWs+\\n' +\r\n        '+vgWhMc6GxG+82QSWx1Vj8sgLqtE/vLrWddf5QIDAQABo2YwZDAOBgNVHQ8BAf8E\\n' +\r\n        'BAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQUuLB4gYVJrSKJj/Gz\\n' +\r\n        'pqc6yeA+RcAwHwYDVR0jBBgwFoAUEEi/WWMcBJsoGXg+EZwkQ0MscZQwDQYJKoZI\\n' +\r\n        'hvcNAQELBQADggEBABauYOZxUhe9/RhzGJ8MsWCz8eKcyDVd4FCnY6Qh+9wcmYNT\\n' +\r\n        'LtnD88LACtJKb/b81qYzcB0Em6+zVJ3Z9jznfr6buItE6es9wAoja22Xgv44BTHL\\n' +\r\n        'rimbgMwpTt3uEMXDffaS0Ww6YWb3pSE0XYI2ISMWz+xRERRf+QqktSaL39zuiaW5\\n' +\r\n        'tfZMre+YhohRa/F0ZQl3RCd6yFcLx4UoSPqQsUl97WhYzwAxZZfwvLJXOc4ATt3u\\n' +\r\n        'VlCUylNDkaZztDJc/yN5XQoK9W5nOt2cLu513MGYKbuarQr8f+gYU8S+qOyuSRSP\\n' +\r\n        'NRITzwCRVnsJE+2JmcRInn/NcanB7uOGqTvJ9+c=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIECTCCAvGgAwIBAgICEAAwDQYJKoZIhvcNAQELBQAwgZUxCzAJBgNVBAYTAlVT\\n' +\r\n        'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\r\n        'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\r\n        'MSYwJAYDVQQDDB1BbWF6b24gUkRTIGV1LXNvdXRoLTEgUm9vdCBDQTAeFw0xOTEw\\n' +\r\n        'MzAyMDIxMzBaFw0yNDEwMzAyMDIxMzBaMIGQMQswCQYDVQQGEwJVUzETMBEGA1UE\\n' +\r\n        'CAwKV2FzaGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9u\\n' +\r\n        'IFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEhMB8GA1UE\\n' +\r\n        'AwwYQW1hem9uIFJEUyBldS1zb3V0aC0xIENBMIIBIjANBgkqhkiG9w0BAQEFAAOC\\n' +\r\n        'AQ8AMIIBCgKCAQEAtEyjYcajx6xImJn8Vz1zjdmL4ANPgQXwF7+tF7xccmNAZETb\\n' +\r\n        'bzb3I9i5fZlmrRaVznX+9biXVaGxYzIUIR3huQ3Q283KsDYnVuGa3mk690vhvJbB\\n' +\r\n        'QIPgKa5mVwJppnuJm78KqaSpi0vxyCPe3h8h6LLFawVyWrYNZ4okli1/U582eef8\\n' +\r\n        'RzJp/Ear3KgHOLIiCdPDF0rjOdCG1MOlDLixVnPn9IYOciqO+VivXBg+jtfc5J+L\\n' +\r\n        'AaPm0/Yx4uELt1tkbWkm4BvTU/gBOODnYziITZM0l6Fgwvbwgq5duAtKW+h031lC\\n' +\r\n        '37rEvrclqcp4wrsUYcLAWX79ZyKIlRxcAdvEhQIDAQABo2YwZDAOBgNVHQ8BAf8E\\n' +\r\n        'BAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQU7zPyc0azQxnBCe7D\\n' +\r\n        'b9KAadH1QSEwHwYDVR0jBBgwFoAUFBAFcgJe/BBuZiGeZ8STfpkgRYQwDQYJKoZI\\n' +\r\n        'hvcNAQELBQADggEBAFGaNiYxg7yC/xauXPlaqLCtwbm2dKyK9nIFbF/7be8mk7Q3\\n' +\r\n        'MOA0of1vGHPLVQLr6bJJpD9MAbUcm4cPAwWaxwcNpxOjYOFDaq10PCK4eRAxZWwF\\n' +\r\n        'NJRIRmGsl8NEsMNTMCy8X+Kyw5EzH4vWFl5Uf2bGKOeFg0zt43jWQVOX6C+aL3Cd\\n' +\r\n        'pRS5MhmYpxMG8irrNOxf4NVFE2zpJOCm3bn0STLhkDcV/ww4zMzObTJhiIb5wSWn\\n' +\r\n        'EXKKWhUXuRt7A2y1KJtXpTbSRHQxE++69Go1tWhXtRiULCJtf7wF2Ksm0RR/AdXT\\n' +\r\n        '1uR1vKyH5KBJPX3ppYkQDukoHTFR0CpB+G84NLo=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIECTCCAvGgAwIBAgICEAAwDQYJKoZIhvcNAQELBQAwgZUxCzAJBgNVBAYTAlVT\\n' +\r\n        'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\r\n        'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\r\n        'MSYwJAYDVQQDDB1BbWF6b24gUkRTIG1lLXNvdXRoLTEgUm9vdCBDQTAeFw0xOTA1\\n' +\r\n        'MTAyMTU4NDNaFw0yNTA2MDExMjAwMDBaMIGQMQswCQYDVQQGEwJVUzETMBEGA1UE\\n' +\r\n        'CAwKV2FzaGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9u\\n' +\r\n        'IFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEhMB8GA1UE\\n' +\r\n        'AwwYQW1hem9uIFJEUyBtZS1zb3V0aC0xIENBMIIBIjANBgkqhkiG9w0BAQEFAAOC\\n' +\r\n        'AQ8AMIIBCgKCAQEAudOYPZH+ihJAo6hNYMB5izPVBe3TYhnZm8+X3IoaaYiKtsp1\\n' +\r\n        'JJhkTT0CEejYIQ58Fh4QrMUyWvU8qsdK3diNyQRoYLbctsBPgxBR1u07eUJDv38/\\n' +\r\n        'C1JlqgHmMnMi4y68Iy7ymv50QgAMuaBqgEBRI1R6Lfbyrb2YvH5txjJyTVMwuCfd\\n' +\r\n        'YPAtZVouRz0JxmnfsHyxjE+So56uOKTDuw++Ho4HhZ7Qveej7XB8b+PIPuroknd3\\n' +\r\n        'FQB5RVbXRvt5ZcVD4F2fbEdBniF7FAF4dEiofVCQGQ2nynT7dZdEIPfPdH3n7ZmE\\n' +\r\n        'lAOmwHQ6G83OsiHRBLnbp+QZRgOsjkHJxT20bQIDAQABo2YwZDAOBgNVHQ8BAf8E\\n' +\r\n        'BAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQUOEVDM7VomRH4HVdA\\n' +\r\n        'QvIMNq2tXOcwHwYDVR0jBBgwFoAU54cfDjgwBx4ycBH8+/r8WXdaiqYwDQYJKoZI\\n' +\r\n        'hvcNAQELBQADggEBAHhvMssj+Th8IpNePU6RH0BiL6o9c437R3Q4IEJeFdYL+nZz\\n' +\r\n        'PW/rELDPvLRUNMfKM+KzduLZ+l29HahxefejYPXtvXBlq/E/9czFDD4fWXg+zVou\\n' +\r\n        'uDXhyrV4kNmP4S0eqsAP/jQHPOZAMFA4yVwO9hlqmePhyDnszCh9c1PfJSBh49+b\\n' +\r\n        '4w7i/L3VBOMt8j3EKYvqz0gVfpeqhJwL4Hey8UbVfJRFJMJzfNHpePqtDRAY7yjV\\n' +\r\n        'PYquRaV2ab/E+/7VFkWMM4tazYz/qsYA2jSH+4xDHvYk8LnsbcrF9iuidQmEc5sb\\n' +\r\n        'FgcWaSKG4DJjcI5k7AJLWcXyTDt21Ci43LE+I9Q=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIECDCCAvCgAwIBAgICVIYwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\r\n        'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\r\n        'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\r\n        'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MDQxNzEz\\n' +\r\n        'MDRaFw0yNDA4MjIxNzA4NTBaMIGVMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\r\n        'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\r\n        'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEmMCQGA1UEAwwdQW1h\\n' +\r\n        'em9uIFJEUyBhcC1zb3V0aC0xIDIwMTkgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IB\\n' +\r\n        'DwAwggEKAoIBAQDUYOz1hGL42yUCrcsMSOoU8AeD/3KgZ4q7gP+vAz1WnY9K/kim\\n' +\r\n        'eWN/2Qqzlo3+mxSFQFyD4MyV3+CnCPnBl9Sh1G/F6kThNiJ7dEWSWBQGAB6HMDbC\\n' +\r\n        'BaAsmUc1UIz8sLTL3fO+S9wYhA63Wun0Fbm/Rn2yk/4WnJAaMZcEtYf6e0KNa0LM\\n' +\r\n        'p/kN/70/8cD3iz3dDR8zOZFpHoCtf0ek80QqTich0A9n3JLxR6g6tpwoYviVg89e\\n' +\r\n        'qCjQ4axxOkWWeusLeTJCcY6CkVyFvDAKvcUl1ytM5AiaUkXblE7zDFXRM4qMMRdt\\n' +\r\n        'lPm8d3pFxh0fRYk8bIKnpmtOpz3RIctDrZZxAgMBAAGjZjBkMA4GA1UdDwEB/wQE\\n' +\r\n        'AwIBBjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBT99wKJftD3jb4sHoHG\\n' +\r\n        'i3uGlH6W6TAfBgNVHSMEGDAWgBRzX2DYvMsDmPQrFzQuNlqmYP+8HzANBgkqhkiG\\n' +\r\n        '9w0BAQsFAAOCAQEAZ17hhr3dII3hUfuHQ1hPWGrpJOX/G9dLzkprEIcCidkmRYl+\\n' +\r\n        'hu1Pe3caRMh/17+qsoEErmnVq5jNY9X1GZL04IZH8YbHc7iRHw3HcWAdhN8633+K\\n' +\r\n        'jYEB2LbJ3vluCGnCejq9djDb6alOugdLMJzxOkHDhMZ6/gYbECOot+ph1tQuZXzD\\n' +\r\n        'tZ7prRsrcuPBChHlPjmGy8M9z8u+kF196iNSUGC4lM8vLkHM7ycc1/ZOwRq9aaTe\\n' +\r\n        'iOghbQQyAEe03MWCyDGtSmDfr0qEk+CHN+6hPiaL8qKt4s+V9P7DeK4iW08ny8Ox\\n' +\r\n        'AVS7u0OK/5+jKMAMrKwpYrBydOjTUTHScocyNw==\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIEBzCCAu+gAwIBAgICQ2QwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\r\n        'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\r\n        'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\r\n        'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MDUxODQ2\\n' +\r\n        'MjlaFw0yNDA4MjIxNzA4NTBaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\r\n        'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\r\n        'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzElMCMGA1UEAwwcQW1h\\n' +\r\n        'em9uIFJEUyBzYS1lYXN0LTEgMjAxOSBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEP\\n' +\r\n        'ADCCAQoCggEBAMMvR+ReRnOzqJzoaPipNTt1Z2VA968jlN1+SYKUrYM3No+Vpz0H\\n' +\r\n        'M6Tn0oYB66ByVsXiGc28ulsqX1HbHsxqDPwvQTKvO7SrmDokoAkjJgLocOLUAeld\\n' +\r\n        '5AwvUjxGRP6yY90NV7X786MpnYb2Il9DIIaV9HjCmPt+rjy2CZjS0UjPjCKNfB8J\\n' +\r\n        'bFjgW6GGscjeyGb/zFwcom5p4j0rLydbNaOr9wOyQrtt3ZQWLYGY9Zees/b8pmcc\\n' +\r\n        'Jt+7jstZ2UMV32OO/kIsJ4rMUn2r/uxccPwAc1IDeRSSxOrnFKhW3Cu69iB3bHp7\\n' +\r\n        'JbawY12g7zshE4I14sHjv3QoXASoXjx4xgMCAwEAAaNmMGQwDgYDVR0PAQH/BAQD\\n' +\r\n        'AgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFI1Fc/Ql2jx+oJPgBVYq\\n' +\r\n        'ccgP0pQ8MB8GA1UdIwQYMBaAFHNfYNi8ywOY9CsXNC42WqZg/7wfMA0GCSqGSIb3\\n' +\r\n        'DQEBCwUAA4IBAQB4VVVabVp70myuYuZ3vltQIWqSUMhkaTzehMgGcHjMf9iLoZ/I\\n' +\r\n        '93KiFUSGnek5cRePyS9wcpp0fcBT3FvkjpUdCjVtdttJgZFhBxgTd8y26ImdDDMR\\n' +\r\n        '4+BUuhI5msvjL08f+Vkkpu1GQcGmyFVPFOy/UY8iefu+QyUuiBUnUuEDd49Hw0Fn\\n' +\r\n        '/kIPII6Vj82a2mWV/Q8e+rgN8dIRksRjKI03DEoP8lhPlsOkhdwU6Uz9Vu6NOB2Q\\n' +\r\n        'Ls1kbcxAc7cFSyRVJEhh12Sz9d0q/CQSTFsVJKOjSNQBQfVnLz1GwO/IieUEAr4C\\n' +\r\n        'jkTntH0r1LX5b/GwN4R887LvjAEdTbg1his7\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIECDCCAvCgAwIBAgIDAIkHMA0GCSqGSIb3DQEBCwUAMIGPMQswCQYDVQQGEwJV\\n' +\r\n        'UzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEiMCAGA1UE\\n' +\r\n        'CgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJE\\n' +\r\n        'UzEgMB4GA1UEAwwXQW1hem9uIFJEUyBSb290IDIwMTkgQ0EwHhcNMTkwOTA2MTc0\\n' +\r\n        'MDIxWhcNMjQwODIyMTcwODUwWjCBlDELMAkGA1UEBhMCVVMxEzARBgNVBAgMCldh\\n' +\r\n        'c2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoMGUFtYXpvbiBXZWIg\\n' +\r\n        'U2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxJTAjBgNVBAMMHEFt\\n' +\r\n        'YXpvbiBSRFMgdXMtd2VzdC0xIDIwMTkgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IB\\n' +\r\n        'DwAwggEKAoIBAQDD2yzbbAl77OofTghDMEf624OvU0eS9O+lsdO0QlbfUfWa1Kd6\\n' +\r\n        '0WkgjkLZGfSRxEHMCnrv4UPBSK/Qwn6FTjkDLgemhqBtAnplN4VsoDL+BkRX4Wwq\\n' +\r\n        '/dSQJE2b+0hm9w9UMVGFDEq1TMotGGTD2B71eh9HEKzKhGzqiNeGsiX4VV+LJzdH\\n' +\r\n        'uM23eGisNqmd4iJV0zcAZ+Gbh2zK6fqTOCvXtm7Idccv8vZZnyk1FiWl3NR4WAgK\\n' +\r\n        'AkvWTIoFU3Mt7dIXKKClVmvssG8WHCkd3Xcb4FHy/G756UZcq67gMMTX/9fOFM/v\\n' +\r\n        'l5C0+CHl33Yig1vIDZd+fXV1KZD84dEJfEvHAgMBAAGjZjBkMA4GA1UdDwEB/wQE\\n' +\r\n        'AwIBBjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBR+ap20kO/6A7pPxo3+\\n' +\r\n        'T3CfqZpQWjAfBgNVHSMEGDAWgBRzX2DYvMsDmPQrFzQuNlqmYP+8HzANBgkqhkiG\\n' +\r\n        '9w0BAQsFAAOCAQEAHCJky2tPjPttlDM/RIqExupBkNrnSYnOK4kr9xJ3sl8UF2DA\\n' +\r\n        'PAnYsjXp3rfcjN/k/FVOhxwzi3cXJF/2Tjj39Bm/OEfYTOJDNYtBwB0VVH4ffa/6\\n' +\r\n        'tZl87jaIkrxJcreeeHqYMnIxeN0b/kliyA+a5L2Yb0VPjt9INq34QDc1v74FNZ17\\n' +\r\n        '4z8nr1nzg4xsOWu0Dbjo966lm4nOYIGBRGOKEkHZRZ4mEiMgr3YLkv8gSmeitx57\\n' +\r\n        'Z6dVemNtUic/LVo5Iqw4n3TBS0iF2C1Q1xT/s3h+0SXZlfOWttzSluDvoMv5PvCd\\n' +\r\n        'pFjNn+aXLAALoihL1MJSsxydtsLjOBro5eK0Vw==\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIEDDCCAvSgAwIBAgICOFAwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\r\n        'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\r\n        'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\r\n        'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTAxNzQ2\\n' +\r\n        'MjFaFw0yNDA4MjIxNzA4NTBaMIGZMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\r\n        'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\r\n        'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEqMCgGA1UEAwwhQW1h\\n' +\r\n        'em9uIFJEUyBhcC1ub3J0aGVhc3QtMiAyMDE5IENBMIIBIjANBgkqhkiG9w0BAQEF\\n' +\r\n        'AAOCAQ8AMIIBCgKCAQEAzU72e6XbaJbi4HjJoRNjKxzUEuChKQIt7k3CWzNnmjc5\\n' +\r\n        '8I1MjCpa2W1iw1BYVysXSNSsLOtUsfvBZxi/1uyMn5ZCaf9aeoA9UsSkFSZBjOCN\\n' +\r\n        'DpKPCmfV1zcEOvJz26+1m8WDg+8Oa60QV0ou2AU1tYcw98fOQjcAES0JXXB80P2s\\n' +\r\n        '3UfkNcnDz+l4k7j4SllhFPhH6BQ4lD2NiFAP4HwoG6FeJUn45EPjzrydxjq6v5Fc\\n' +\r\n        'cQ8rGuHADVXotDbEhaYhNjIrsPL+puhjWfhJjheEw8c4whRZNp6gJ/b6WEes/ZhZ\\n' +\r\n        'h32DwsDsZw0BfRDUMgUn8TdecNexHUw8vQWeC181hwIDAQABo2YwZDAOBgNVHQ8B\\n' +\r\n        'Af8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQUwW9bWgkWkr0U\\n' +\r\n        'lrOsq2kvIdrECDgwHwYDVR0jBBgwFoAUc19g2LzLA5j0Kxc0LjZapmD/vB8wDQYJ\\n' +\r\n        'KoZIhvcNAQELBQADggEBAEugF0Gj7HVhX0ehPZoGRYRt3PBuI2YjfrrJRTZ9X5wc\\n' +\r\n        '9T8oHmw07mHmNy1qqWvooNJg09bDGfB0k5goC2emDiIiGfc/kvMLI7u+eQOoMKj6\\n' +\r\n        'mkfCncyRN3ty08Po45vTLBFZGUvtQmjM6yKewc4sXiASSBmQUpsMbiHRCL72M5qV\\n' +\r\n        'obcJOjGcIdDTmV1BHdWT+XcjynsGjUqOvQWWhhLPrn4jWe6Xuxll75qlrpn3IrIx\\n' +\r\n        'CRBv/5r7qbcQJPOgwQsyK4kv9Ly8g7YT1/vYBlR3cRsYQjccw5ceWUj2DrMVWhJ4\\n' +\r\n        'prf+E3Aa4vYmLLOUUvKnDQ1k3RGNu56V0tonsQbfsaM=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIECjCCAvKgAwIBAgICEzUwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\r\n        'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\r\n        'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\r\n        'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTAyMDUy\\n' +\r\n        'MjVaFw0yNDA4MjIxNzA4NTBaMIGXMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\r\n        'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\r\n        'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEoMCYGA1UEAwwfQW1h\\n' +\r\n        'em9uIFJEUyBjYS1jZW50cmFsLTEgMjAxOSBDQTCCASIwDQYJKoZIhvcNAQEBBQAD\\n' +\r\n        'ggEPADCCAQoCggEBAOxHqdcPSA2uBjsCP4DLSlqSoPuQ/X1kkJLusVRKiQE2zayB\\n' +\r\n        'viuCBt4VB9Qsh2rW3iYGM+usDjltGnI1iUWA5KHcvHszSMkWAOYWLiMNKTlg6LCp\\n' +\r\n        'XnE89tvj5dIH6U8WlDvXLdjB/h30gW9JEX7S8supsBSci2GxEzb5mRdKaDuuF/0O\\n' +\r\n        'qvz4YE04pua3iZ9QwmMFuTAOYzD1M72aOpj+7Ac+YLMM61qOtU+AU6MndnQkKoQi\\n' +\r\n        'qmUN2A9IFaqHFzRlSdXwKCKUA4otzmz+/N3vFwjb5F4DSsbsrMfjeHMo6o/nb6Nh\\n' +\r\n        'YDb0VJxxPee6TxSuN7CQJ2FxMlFUezcoXqwqXD0CAwEAAaNmMGQwDgYDVR0PAQH/\\n' +\r\n        'BAQDAgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFDGGpon9WfIpsggE\\n' +\r\n        'CxHq8hZ7E2ESMB8GA1UdIwQYMBaAFHNfYNi8ywOY9CsXNC42WqZg/7wfMA0GCSqG\\n' +\r\n        'SIb3DQEBCwUAA4IBAQAvpeQYEGZvoTVLgV9rd2+StPYykMsmFjWQcyn3dBTZRXC2\\n' +\r\n        'lKq7QhQczMAOhEaaN29ZprjQzsA2X/UauKzLR2Uyqc2qOeO9/YOl0H3qauo8C/W9\\n' +\r\n        'r8xqPbOCDLEXlOQ19fidXyyEPHEq5WFp8j+fTh+s8WOx2M7IuC0ANEetIZURYhSp\\n' +\r\n        'xl9XOPRCJxOhj7JdelhpweX0BJDNHeUFi0ClnFOws8oKQ7sQEv66d5ddxqqZ3NVv\\n' +\r\n        'RbCvCtEutQMOUMIuaygDlMn1anSM8N7Wndx8G6+Uy67AnhjGx7jw/0YPPxopEj6x\\n' +\r\n        'JXP8j0sJbcT9K/9/fPVLNT25RvQ/93T2+IQL4Ca2\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIEBzCCAu+gAwIBAgICYpgwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\r\n        'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\r\n        'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\r\n        'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTExNzMx\\n' +\r\n        'NDhaFw0yNDA4MjIxNzA4NTBaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\r\n        'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\r\n        'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzElMCMGA1UEAwwcQW1h\\n' +\r\n        'em9uIFJEUyBldS13ZXN0LTEgMjAxOSBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEP\\n' +\r\n        'ADCCAQoCggEBAMk3YdSZ64iAYp6MyyKtYJtNzv7zFSnnNf6vv0FB4VnfITTMmOyZ\\n' +\r\n        'LXqKAT2ahZ00hXi34ewqJElgU6eUZT/QlzdIu359TEZyLVPwURflL6SWgdG01Q5X\\n' +\r\n        'O++7fSGcBRyIeuQWs9FJNIIqK8daF6qw0Rl5TXfu7P9dBc3zkgDXZm2DHmxGDD69\\n' +\r\n        '7liQUiXzoE1q2Z9cA8+jirDioJxN9av8hQt12pskLQumhlArsMIhjhHRgF03HOh5\\n' +\r\n        'tvi+RCfihVOxELyIRTRpTNiIwAqfZxxTWFTgfn+gijTmd0/1DseAe82aYic8JbuS\\n' +\r\n        'EMbrDduAWsqrnJ4GPzxHKLXX0JasCUcWyMECAwEAAaNmMGQwDgYDVR0PAQH/BAQD\\n' +\r\n        'AgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFPLtsq1NrwJXO13C9eHt\\n' +\r\n        'sLY11AGwMB8GA1UdIwQYMBaAFHNfYNi8ywOY9CsXNC42WqZg/7wfMA0GCSqGSIb3\\n' +\r\n        'DQEBCwUAA4IBAQAnWBKj5xV1A1mYd0kIgDdkjCwQkiKF5bjIbGkT3YEFFbXoJlSP\\n' +\r\n        '0lZZ/hDaOHI8wbLT44SzOvPEEmWF9EE7SJzkvSdQrUAWR9FwDLaU427ALI3ngNHy\\n' +\r\n        'lGJ2hse1fvSRNbmg8Sc9GBv8oqNIBPVuw+AJzHTacZ1OkyLZrz1c1QvwvwN2a+Jd\\n' +\r\n        'vH0V0YIhv66llKcYDMUQJAQi4+8nbRxXWv6Gq3pvrFoorzsnkr42V3JpbhnYiK+9\\n' +\r\n        'nRKd4uWl62KRZjGkfMbmsqZpj2fdSWMY1UGyN1k+kDmCSWYdrTRDP0xjtIocwg+A\\n' +\r\n        'J116n4hV/5mbA0BaPiS2krtv17YAeHABZcvz\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIECjCCAvKgAwIBAgICV2YwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\r\n        'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\r\n        'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\r\n        'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTExOTM2\\n' +\r\n        'MjBaFw0yNDA4MjIxNzA4NTBaMIGXMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\r\n        'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\r\n        'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEoMCYGA1UEAwwfQW1h\\n' +\r\n        'em9uIFJEUyBldS1jZW50cmFsLTEgMjAxOSBDQTCCASIwDQYJKoZIhvcNAQEBBQAD\\n' +\r\n        'ggEPADCCAQoCggEBAMEx54X2pHVv86APA0RWqxxRNmdkhAyp2R1cFWumKQRofoFv\\n' +\r\n        'n+SPXdkpIINpMuEIGJANozdiEz7SPsrAf8WHyD93j/ZxrdQftRcIGH41xasetKGl\\n' +\r\n        'I67uans8d+pgJgBKGb/Z+B5m+UsIuEVekpvgpwKtmmaLFC/NCGuSsJoFsRqoa6Gh\\n' +\r\n        'm34W6yJoY87UatddCqLY4IIXaBFsgK9Q/wYzYLbnWM6ZZvhJ52VMtdhcdzeTHNW0\\n' +\r\n        '5LGuXJOF7Ahb4JkEhoo6TS2c0NxB4l4MBfBPgti+O7WjR3FfZHpt18A6Zkq6A2u6\\n' +\r\n        'D/oTSL6c9/3sAaFTFgMyL3wHb2YlW0BPiljZIqECAwEAAaNmMGQwDgYDVR0PAQH/\\n' +\r\n        'BAQDAgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFOcAToAc6skWffJa\\n' +\r\n        'TnreaswAfrbcMB8GA1UdIwQYMBaAFHNfYNi8ywOY9CsXNC42WqZg/7wfMA0GCSqG\\n' +\r\n        'SIb3DQEBCwUAA4IBAQA1d0Whc1QtspK496mFWfFEQNegLh0a9GWYlJm+Htcj5Nxt\\n' +\r\n        'DAIGXb+8xrtOZFHmYP7VLCT5Zd2C+XytqseK/+s07iAr0/EPF+O2qcyQWMN5KhgE\\n' +\r\n        'cXw2SwuP9FPV3i+YAm11PBVeenrmzuk9NrdHQ7TxU4v7VGhcsd2C++0EisrmquWH\\n' +\r\n        'mgIfmVDGxphwoES52cY6t3fbnXmTkvENvR+h3rj+fUiSz0aSo+XZUGHPgvuEKM/W\\n' +\r\n        'CBD9Smc9CBoBgvy7BgHRgRUmwtABZHFUIEjHI5rIr7ZvYn+6A0O6sogRfvVYtWFc\\n' +\r\n        'qpyrW1YX8mD0VlJ8fGKM3G+aCOsiiPKDV/Uafrm+\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIECDCCAvCgAwIBAgICGAcwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\r\n        'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\r\n        'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\r\n        'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTIxODE5\\n' +\r\n        'NDRaFw0yNDA4MjIxNzA4NTBaMIGVMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\r\n        'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\r\n        'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEmMCQGA1UEAwwdQW1h\\n' +\r\n        'em9uIFJEUyBldS1ub3J0aC0xIDIwMTkgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IB\\n' +\r\n        'DwAwggEKAoIBAQCiIYnhe4UNBbdBb/nQxl5giM0XoVHWNrYV5nB0YukA98+TPn9v\\n' +\r\n        'Aoj1RGYmtryjhrf01Kuv8SWO+Eom95L3zquoTFcE2gmxCfk7bp6qJJ3eHOJB+QUO\\n' +\r\n        'XsNRh76fwDzEF1yTeZWH49oeL2xO13EAx4PbZuZpZBttBM5zAxgZkqu4uWQczFEs\\n' +\r\n        'JXfla7z2fvWmGcTagX10O5C18XaFroV0ubvSyIi75ue9ykg/nlFAeB7O0Wxae88e\\n' +\r\n        'uhiBEFAuLYdqWnsg3459NfV8Yi1GnaitTym6VI3tHKIFiUvkSiy0DAlAGV2iiyJE\\n' +\r\n        'q+DsVEO4/hSINJEtII4TMtysOsYPpINqeEzRAgMBAAGjZjBkMA4GA1UdDwEB/wQE\\n' +\r\n        'AwIBBjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBRR0UpnbQyjnHChgmOc\\n' +\r\n        'hnlc0PogzTAfBgNVHSMEGDAWgBRzX2DYvMsDmPQrFzQuNlqmYP+8HzANBgkqhkiG\\n' +\r\n        '9w0BAQsFAAOCAQEAKJD4xVzSf4zSGTBJrmamo86jl1NHQxXUApAZuBZEc8tqC6TI\\n' +\r\n        'T5CeoSr9CMuVC8grYyBjXblC4OsM5NMvmsrXl/u5C9dEwtBFjo8mm53rOOIm1fxl\\n' +\r\n        'I1oYB/9mtO9ANWjkykuLzWeBlqDT/i7ckaKwalhLODsRDO73vRhYNjsIUGloNsKe\\n' +\r\n        'pxw3dzHwAZx4upSdEVG4RGCZ1D0LJ4Gw40OfD69hfkDfRVVxKGrbEzqxXRvovmDc\\n' +\r\n        'tKLdYZO/6REoca36v4BlgIs1CbUXJGLSXUwtg7YXGLSVBJ/U0+22iGJmBSNcoyUN\\n' +\r\n        'cjPFD9JQEhDDIYYKSGzIYpvslvGc4T5ISXFiuQ==\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIEBzCCAu+gAwIBAgICZIEwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\r\n        'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\r\n        'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\r\n        'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTIyMTMy\\n' +\r\n        'MzJaFw0yNDA4MjIxNzA4NTBaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\r\n        'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\r\n        'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzElMCMGA1UEAwwcQW1h\\n' +\r\n        'em9uIFJEUyBldS13ZXN0LTIgMjAxOSBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEP\\n' +\r\n        'ADCCAQoCggEBALGiwqjiF7xIjT0Sx7zB3764K2T2a1DHnAxEOr+/EIftWKxWzT3u\\n' +\r\n        'PFwS2eEZcnKqSdRQ+vRzonLBeNLO4z8aLjQnNbkizZMBuXGm4BqRm1Kgq3nlLDQn\\n' +\r\n        '7YqdijOq54SpShvR/8zsO4sgMDMmHIYAJJOJqBdaus2smRt0NobIKc0liy7759KB\\n' +\r\n        '6kmQ47Gg+kfIwxrQA5zlvPLeQImxSoPi9LdbRoKvu7Iot7SOa+jGhVBh3VdqndJX\\n' +\r\n        '7tm/saj4NE375csmMETFLAOXjat7zViMRwVorX4V6AzEg1vkzxXpA9N7qywWIT5Y\\n' +\r\n        'fYaq5M8i6vvLg0CzrH9fHORtnkdjdu1y+0MCAwEAAaNmMGQwDgYDVR0PAQH/BAQD\\n' +\r\n        'AgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFFOhOx1yt3Z7mvGB9jBv\\n' +\r\n        '2ymdZwiOMB8GA1UdIwQYMBaAFHNfYNi8ywOY9CsXNC42WqZg/7wfMA0GCSqGSIb3\\n' +\r\n        'DQEBCwUAA4IBAQBehqY36UGDvPVU9+vtaYGr38dBbp+LzkjZzHwKT1XJSSUc2wqM\\n' +\r\n        'hnCIQKilonrTIvP1vmkQi8qHPvDRtBZKqvz/AErW/ZwQdZzqYNFd+BmOXaeZWV0Q\\n' +\r\n        'oHtDzXmcwtP8aUQpxN0e1xkWb1E80qoy+0uuRqb/50b/R4Q5qqSfJhkn6z8nwB10\\n' +\r\n        '7RjLtJPrK8igxdpr3tGUzfAOyiPrIDncY7UJaL84GFp7WWAkH0WG3H8Y8DRcRXOU\\n' +\r\n        'mqDxDLUP3rNuow3jnGxiUY+gGX5OqaZg4f4P6QzOSmeQYs6nLpH0PiN00+oS1BbD\\n' +\r\n        'bpWdZEttILPI+vAYkU4QuBKKDjJL6HbSd+cn\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIECDCCAvCgAwIBAgIDAIVCMA0GCSqGSIb3DQEBCwUAMIGPMQswCQYDVQQGEwJV\\n' +\r\n        'UzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEiMCAGA1UE\\n' +\r\n        'CgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJE\\n' +\r\n        'UzEgMB4GA1UEAwwXQW1hem9uIFJEUyBSb290IDIwMTkgQ0EwHhcNMTkwOTEzMTcw\\n' +\r\n        'NjQxWhcNMjQwODIyMTcwODUwWjCBlDELMAkGA1UEBhMCVVMxEzARBgNVBAgMCldh\\n' +\r\n        'c2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoMGUFtYXpvbiBXZWIg\\n' +\r\n        'U2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxJTAjBgNVBAMMHEFt\\n' +\r\n        'YXpvbiBSRFMgdXMtZWFzdC0yIDIwMTkgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IB\\n' +\r\n        'DwAwggEKAoIBAQDE+T2xYjUbxOp+pv+gRA3FO24+1zCWgXTDF1DHrh1lsPg5k7ht\\n' +\r\n        '2KPYzNc+Vg4E+jgPiW0BQnA6jStX5EqVh8BU60zELlxMNvpg4KumniMCZ3krtMUC\\n' +\r\n        'au1NF9rM7HBh+O+DYMBLK5eSIVt6lZosOb7bCi3V6wMLA8YqWSWqabkxwN4w0vXI\\n' +\r\n        '8lu5uXXFRemHnlNf+yA/4YtN4uaAyd0ami9+klwdkZfkrDOaiy59haOeBGL8EB/c\\n' +\r\n        'dbJJlguHH5CpCscs3RKtOOjEonXnKXldxarFdkMzi+aIIjQ8GyUOSAXHtQHb3gZ4\\n' +\r\n        'nS6Ey0CMlwkB8vUObZU9fnjKJcL5QCQqOfwvAgMBAAGjZjBkMA4GA1UdDwEB/wQE\\n' +\r\n        'AwIBBjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBQUPuRHohPxx4VjykmH\\n' +\r\n        '6usGrLL1ETAfBgNVHSMEGDAWgBRzX2DYvMsDmPQrFzQuNlqmYP+8HzANBgkqhkiG\\n' +\r\n        '9w0BAQsFAAOCAQEAUdR9Vb3y33Yj6X6KGtuthZ08SwjImVQPtknzpajNE5jOJAh8\\n' +\r\n        'quvQnU9nlnMO85fVDU1Dz3lLHGJ/YG1pt1Cqq2QQ200JcWCvBRgdvH6MjHoDQpqZ\\n' +\r\n        'HvQ3vLgOGqCLNQKFuet9BdpsHzsctKvCVaeBqbGpeCtt3Hh/26tgx0rorPLw90A2\\n' +\r\n        'V8QSkZJjlcKkLa58N5CMM8Xz8KLWg3MZeT4DmlUXVCukqK2RGuP2L+aME8dOxqNv\\n' +\r\n        'OnOz1zrL5mR2iJoDpk8+VE/eBDmJX40IJk6jBjWoxAO/RXq+vBozuF5YHN1ujE92\\n' +\r\n        'tO8HItgTp37XT8bJBAiAnt5mxw+NLSqtxk2QdQ==\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIEDDCCAvSgAwIBAgICY4kwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\r\n        'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\r\n        'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\r\n        'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTMyMDEx\\n' +\r\n        'NDJaFw0yNDA4MjIxNzA4NTBaMIGZMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\r\n        'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\r\n        'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEqMCgGA1UEAwwhQW1h\\n' +\r\n        'em9uIFJEUyBhcC1zb3V0aGVhc3QtMSAyMDE5IENBMIIBIjANBgkqhkiG9w0BAQEF\\n' +\r\n        'AAOCAQ8AMIIBCgKCAQEAr5u9OuLL/OF/fBNUX2kINJLzFl4DnmrhnLuSeSnBPgbb\\n' +\r\n        'qddjf5EFFJBfv7IYiIWEFPDbDG5hoBwgMup5bZDbas+ZTJTotnnxVJTQ6wlhTmns\\n' +\r\n        'eHECcg2pqGIKGrxZfbQhlj08/4nNAPvyYCTS0bEcmQ1emuDPyvJBYDDLDU6AbCB5\\n' +\r\n        '6Z7YKFQPTiCBblvvNzchjLWF9IpkqiTsPHiEt21sAdABxj9ityStV3ja/W9BfgxH\\n' +\r\n        'wzABSTAQT6FbDwmQMo7dcFOPRX+hewQSic2Rn1XYjmNYzgEHisdUsH7eeXREAcTw\\n' +\r\n        '61TRvaLH8AiOWBnTEJXPAe6wYfrcSd1pD0MXpoB62wIDAQABo2YwZDAOBgNVHQ8B\\n' +\r\n        'Af8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQUytwMiomQOgX5\\n' +\r\n        'Ichd+2lDWRUhkikwHwYDVR0jBBgwFoAUc19g2LzLA5j0Kxc0LjZapmD/vB8wDQYJ\\n' +\r\n        'KoZIhvcNAQELBQADggEBACf6lRDpfCD7BFRqiWM45hqIzffIaysmVfr+Jr+fBTjP\\n' +\r\n        'uYe/ba1omSrNGG23bOcT9LJ8hkQJ9d+FxUwYyICQNWOy6ejicm4z0C3VhphbTPqj\\n' +\r\n        'yjpt9nG56IAcV8BcRJh4o/2IfLNzC/dVuYJV8wj7XzwlvjysenwdrJCoLadkTr1h\\n' +\r\n        'eIdG6Le07sB9IxrGJL9e04afk37h7c8ESGSE4E+oS4JQEi3ATq8ne1B9DQ9SasXi\\n' +\r\n        'IRmhNAaISDzOPdyLXi9N9V9Lwe/DHcja7hgLGYx3UqfjhLhOKwp8HtoZORixAmOI\\n' +\r\n        'HfILgNmwyugAbuZoCazSKKBhQ0wgO0WZ66ZKTMG8Oho=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIEBzCCAu+gAwIBAgICUYkwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\r\n        'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\r\n        'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\r\n        'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTYxODIx\\n' +\r\n        'MTVaFw0yNDA4MjIxNzA4NTBaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\r\n        'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\r\n        'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzElMCMGA1UEAwwcQW1h\\n' +\r\n        'em9uIFJEUyB1cy13ZXN0LTIgMjAxOSBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEP\\n' +\r\n        'ADCCAQoCggEBANCEZBZyu6yJQFZBJmSUZfSZd3Ui2gitczMKC4FLr0QzkbxY+cLa\\n' +\r\n        'uVONIOrPt4Rwi+3h/UdnUg917xao3S53XDf1TDMFEYp4U8EFPXqCn/GXBIWlU86P\\n' +\r\n        'PvBN+gzw3nS+aco7WXb+woTouvFVkk8FGU7J532llW8o/9ydQyDIMtdIkKTuMfho\\n' +\r\n        'OiNHSaNc+QXQ32TgvM9A/6q7ksUoNXGCP8hDOkSZ/YOLiI5TcdLh/aWj00ziL5bj\\n' +\r\n        'pvytiMZkilnc9dLY9QhRNr0vGqL0xjmWdoEXz9/OwjmCihHqJq+20MJPsvFm7D6a\\n' +\r\n        '2NKybR9U+ddrjb8/iyLOjURUZnj5O+2+OPcCAwEAAaNmMGQwDgYDVR0PAQH/BAQD\\n' +\r\n        'AgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFEBxMBdv81xuzqcK5TVu\\n' +\r\n        'pHj+Aor8MB8GA1UdIwQYMBaAFHNfYNi8ywOY9CsXNC42WqZg/7wfMA0GCSqGSIb3\\n' +\r\n        'DQEBCwUAA4IBAQBZkfiVqGoJjBI37aTlLOSjLcjI75L5wBrwO39q+B4cwcmpj58P\\n' +\r\n        '3sivv+jhYfAGEbQnGRzjuFoyPzWnZ1DesRExX+wrmHsLLQbF2kVjLZhEJMHF9eB7\\n' +\r\n        'GZlTPdTzHErcnuXkwA/OqyXMpj9aghcQFuhCNguEfnROY9sAoK2PTfnTz9NJHL+Q\\n' +\r\n        'UpDLEJEUfc0GZMVWYhahc0x38ZnSY2SKacIPECQrTI0KpqZv/P+ijCEcMD9xmYEb\\n' +\r\n        'jL4en+XKS1uJpw5fIU5Sj0MxhdGstH6S84iAE5J3GM3XHklGSFwwqPYvuTXvANH6\\n' +\r\n        'uboynxRgSae59jIlAK6Jrr6GWMwQRbgcaAlW\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIEDDCCAvSgAwIBAgICEkYwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\r\n        'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\r\n        'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\r\n        'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTYxOTUz\\n' +\r\n        'NDdaFw0yNDA4MjIxNzA4NTBaMIGZMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\r\n        'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\r\n        'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEqMCgGA1UEAwwhQW1h\\n' +\r\n        'em9uIFJEUyBhcC1zb3V0aGVhc3QtMiAyMDE5IENBMIIBIjANBgkqhkiG9w0BAQEF\\n' +\r\n        'AAOCAQ8AMIIBCgKCAQEAufodI2Flker8q7PXZG0P0vmFSlhQDw907A6eJuF/WeMo\\n' +\r\n        'GHnll3b4S6nC3oRS3nGeRMHbyU2KKXDwXNb3Mheu+ox+n5eb/BJ17eoj9HbQR1cd\\n' +\r\n        'gEkIciiAltf8gpMMQH4anP7TD+HNFlZnP7ii3geEJB2GGXSxgSWvUzH4etL67Zmn\\n' +\r\n        'TpGDWQMB0T8lK2ziLCMF4XAC/8xDELN/buHCNuhDpxpPebhct0T+f6Arzsiswt2j\\n' +\r\n        '7OeNeLLZwIZvVwAKF7zUFjC6m7/VmTQC8nidVY559D6l0UhhU0Co/txgq3HVsMOH\\n' +\r\n        'PbxmQUwJEKAzQXoIi+4uZzHFZrvov/nDTNJUhC6DqwIDAQABo2YwZDAOBgNVHQ8B\\n' +\r\n        'Af8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQUwaZpaCme+EiV\\n' +\r\n        'M5gcjeHZSTgOn4owHwYDVR0jBBgwFoAUc19g2LzLA5j0Kxc0LjZapmD/vB8wDQYJ\\n' +\r\n        'KoZIhvcNAQELBQADggEBAAR6a2meCZuXO2TF9bGqKGtZmaah4pH2ETcEVUjkvXVz\\n' +\r\n        'sl+ZKbYjrun+VkcMGGKLUjS812e7eDF726ptoku9/PZZIxlJB0isC/0OyixI8N4M\\n' +\r\n        'NsEyvp52XN9QundTjkl362bomPnHAApeU0mRbMDRR2JdT70u6yAzGLGsUwMkoNnw\\n' +\r\n        '1VR4XKhXHYGWo7KMvFrZ1KcjWhubxLHxZWXRulPVtGmyWg/MvE6KF+2XMLhojhUL\\n' +\r\n        '+9jB3Fpn53s6KMx5tVq1x8PukHmowcZuAF8k+W4gk8Y68wIwynrdZrKRyRv6CVtR\\n' +\r\n        'FZ8DeJgoNZT3y/GT254VqMxxfuy2Ccb/RInd16tEvVk=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIEDDCCAvSgAwIBAgICOYIwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\r\n        'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\r\n        'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\r\n        'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTcyMDA1\\n' +\r\n        'MjlaFw0yNDA4MjIxNzA4NTBaMIGZMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\r\n        'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\r\n        'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEqMCgGA1UEAwwhQW1h\\n' +\r\n        'em9uIFJEUyBhcC1ub3J0aGVhc3QtMyAyMDE5IENBMIIBIjANBgkqhkiG9w0BAQEF\\n' +\r\n        'AAOCAQ8AMIIBCgKCAQEA4dMak8W+XW8y/2F6nRiytFiA4XLwePadqWebGtlIgyCS\\n' +\r\n        'kbug8Jv5w7nlMkuxOxoUeD4WhI6A9EkAn3r0REM/2f0aYnd2KPxeqS2MrtdxxHw1\\n' +\r\n        'xoOxk2x0piNSlOz6yog1idsKR5Wurf94fvM9FdTrMYPPrDabbGqiBMsZZmoHLvA3\\n' +\r\n        'Z+57HEV2tU0Ei3vWeGIqnNjIekS+E06KhASxrkNU5vi611UsnYZlSi0VtJsH4UGV\\n' +\r\n        'LhnHl53aZL0YFO5mn/fzuNG/51qgk/6EFMMhaWInXX49Dia9FnnuWXwVwi6uX1Wn\\n' +\r\n        '7kjoHi5VtmC8ZlGEHroxX2DxEr6bhJTEpcLMnoQMqwIDAQABo2YwZDAOBgNVHQ8B\\n' +\r\n        'Af8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQUsUI5Cb3SWB8+\\n' +\r\n        'gv1YLN/ABPMdxSAwHwYDVR0jBBgwFoAUc19g2LzLA5j0Kxc0LjZapmD/vB8wDQYJ\\n' +\r\n        'KoZIhvcNAQELBQADggEBAJAF3E9PM1uzVL8YNdzb6fwJrxxqI2shvaMVmC1mXS+w\\n' +\r\n        'G0zh4v2hBZOf91l1EO0rwFD7+fxoI6hzQfMxIczh875T6vUXePKVOCOKI5wCrDad\\n' +\r\n        'zQbVqbFbdhsBjF4aUilOdtw2qjjs9JwPuB0VXN4/jY7m21oKEOcnpe36+7OiSPjN\\n' +\r\n        'xngYewCXKrSRqoj3mw+0w/+exYj3Wsush7uFssX18av78G+ehKPIVDXptOCP/N7W\\n' +\r\n        '8iKVNeQ2QGTnu2fzWsGUSvMGyM7yqT+h1ILaT//yQS8er511aHMLc142bD4D9VSy\\n' +\r\n        'DgactwPDTShK/PXqhvNey9v/sKXm4XatZvwcc8KYlW4=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIEDDCCAvSgAwIBAgICcEUwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\r\n        'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\r\n        'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\r\n        'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTgxNjU2\\n' +\r\n        'MjBaFw0yNDA4MjIxNzA4NTBaMIGZMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\r\n        'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\r\n        'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEqMCgGA1UEAwwhQW1h\\n' +\r\n        'em9uIFJEUyBhcC1ub3J0aGVhc3QtMSAyMDE5IENBMIIBIjANBgkqhkiG9w0BAQEF\\n' +\r\n        'AAOCAQ8AMIIBCgKCAQEAndtkldmHtk4TVQAyqhAvtEHSMb6pLhyKrIFved1WO3S7\\n' +\r\n        '+I+bWwv9b2W/ljJxLq9kdT43bhvzonNtI4a1LAohS6bqyirmk8sFfsWT3akb+4Sx\\n' +\r\n        '1sjc8Ovc9eqIWJCrUiSvv7+cS7ZTA9AgM1PxvHcsqrcUXiK3Jd/Dax9jdZE1e15s\\n' +\r\n        'BEhb2OEPE+tClFZ+soj8h8Pl2Clo5OAppEzYI4LmFKtp1X/BOf62k4jviXuCSst3\\n' +\r\n        'UnRJzE/CXtjmN6oZySVWSe0rQYuyqRl6//9nK40cfGKyxVnimB8XrrcxUN743Vud\\n' +\r\n        'QQVU0Esm8OVTX013mXWQXJHP2c0aKkog8LOga0vobQIDAQABo2YwZDAOBgNVHQ8B\\n' +\r\n        'Af8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQULmoOS1mFSjj+\\n' +\r\n        'snUPx4DgS3SkLFYwHwYDVR0jBBgwFoAUc19g2LzLA5j0Kxc0LjZapmD/vB8wDQYJ\\n' +\r\n        'KoZIhvcNAQELBQADggEBAAkVL2P1M2/G9GM3DANVAqYOwmX0Xk58YBHQu6iiQg4j\\n' +\r\n        'b4Ky/qsZIsgT7YBsZA4AOcPKQFgGTWhe9pvhmXqoN3RYltN8Vn7TbUm/ZVDoMsrM\\n' +\r\n        'gwv0+TKxW1/u7s8cXYfHPiTzVSJuOogHx99kBW6b2f99GbP7O1Sv3sLq4j6lVvBX\\n' +\r\n        'Fiacf5LAWC925nvlTzLlBgIc3O9xDtFeAGtZcEtxZJ4fnGXiqEnN4539+nqzIyYq\\n' +\r\n        'nvlgCzyvcfRAxwltrJHuuRu6Maw5AGcd2Y0saMhqOVq9KYKFKuD/927BTrbd2JVf\\n' +\r\n        '2sGWyuPZPCk3gq+5pCjbD0c6DkhcMGI6WwxvM5V/zSM=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIEBzCCAu+gAwIBAgICJDQwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\r\n        'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\r\n        'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\r\n        'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTgxNzAz\\n' +\r\n        'MTVaFw0yNDA4MjIxNzA4NTBaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\r\n        'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\r\n        'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzElMCMGA1UEAwwcQW1h\\n' +\r\n        'em9uIFJEUyBldS13ZXN0LTMgMjAxOSBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEP\\n' +\r\n        'ADCCAQoCggEBAL9bL7KE0n02DLVtlZ2PL+g/BuHpMYFq2JnE2RgompGurDIZdjmh\\n' +\r\n        '1pxfL3nT+QIVMubuAOy8InRfkRxfpxyjKYdfLJTPJG+jDVL+wDcPpACFVqoV7Prg\\n' +\r\n        'pVYEV0lc5aoYw4bSeYFhdzgim6F8iyjoPnObjll9mo4XsHzSoqJLCd0QC+VG9Fw2\\n' +\r\n        'q+GDRZrLRmVM2oNGDRbGpGIFg77aRxRapFZa8SnUgs2AqzuzKiprVH5i0S0M6dWr\\n' +\r\n        'i+kk5epmTtkiDHceX+dP/0R1NcnkCPoQ9TglyXyPdUdTPPRfKCq12dftqll+u4mV\\n' +\r\n        'ARdN6WFjovxax8EAP2OAUTi1afY+1JFMj+sCAwEAAaNmMGQwDgYDVR0PAQH/BAQD\\n' +\r\n        'AgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFLfhrbrO5exkCVgxW0x3\\n' +\r\n        'Y2mAi8lNMB8GA1UdIwQYMBaAFHNfYNi8ywOY9CsXNC42WqZg/7wfMA0GCSqGSIb3\\n' +\r\n        'DQEBCwUAA4IBAQAigQ5VBNGyw+OZFXwxeJEAUYaXVoP/qrhTOJ6mCE2DXUVEoJeV\\n' +\r\n        'SxScy/TlFA9tJXqmit8JH8VQ/xDL4ubBfeMFAIAo4WzNWDVoeVMqphVEcDWBHsI1\\n' +\r\n        'AETWzfsapRS9yQekOMmxg63d/nV8xewIl8aNVTHdHYXMqhhik47VrmaVEok1UQb3\\n' +\r\n        'O971RadLXIEbVd9tjY5bMEHm89JsZDnDEw1hQXBb67Elu64OOxoKaHBgUH8AZn/2\\n' +\r\n        'zFsL1ynNUjOhCSAA15pgd1vjwc0YsBbAEBPcHBWYBEyME6NLNarjOzBl4FMtATSF\\n' +\r\n        'wWCKRGkvqN8oxYhwR2jf2rR5Mu4DWkK5Q8Ep\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIEBzCCAu+gAwIBAgICJVUwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\r\n        'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\r\n        'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\r\n        'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTkxODE2\\n' +\r\n        'NTNaFw0yNDA4MjIxNzA4NTBaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\r\n        'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\r\n        'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzElMCMGA1UEAwwcQW1h\\n' +\r\n        'em9uIFJEUyB1cy1lYXN0LTEgMjAxOSBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEP\\n' +\r\n        'ADCCAQoCggEBAM3i/k2u6cqbMdcISGRvh+m+L0yaSIoOXjtpNEoIftAipTUYoMhL\\n' +\r\n        'InXGlQBVA4shkekxp1N7HXe1Y/iMaPEyb3n+16pf3vdjKl7kaSkIhjdUz3oVUEYt\\n' +\r\n        'i8Z/XeJJ9H2aEGuiZh3kHixQcZczn8cg3dA9aeeyLSEnTkl/npzLf//669Ammyhs\\n' +\r\n        'XcAo58yvT0D4E0D/EEHf2N7HRX7j/TlyWvw/39SW0usiCrHPKDLxByLojxLdHzso\\n' +\r\n        'QIp/S04m+eWn6rmD+uUiRteN1hI5ncQiA3wo4G37mHnUEKo6TtTUh+sd/ku6a8HK\\n' +\r\n        'glMBcgqudDI90s1OpuIAWmuWpY//8xEG2YECAwEAAaNmMGQwDgYDVR0PAQH/BAQD\\n' +\r\n        'AgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFPqhoWZcrVY9mU7tuemR\\n' +\r\n        'RBnQIj1jMB8GA1UdIwQYMBaAFHNfYNi8ywOY9CsXNC42WqZg/7wfMA0GCSqGSIb3\\n' +\r\n        'DQEBCwUAA4IBAQB6zOLZ+YINEs72heHIWlPZ8c6WY8MDU+Be5w1M+BK2kpcVhCUK\\n' +\r\n        'PJO4nMXpgamEX8DIiaO7emsunwJzMSvavSPRnxXXTKIc0i/g1EbiDjnYX9d85DkC\\n' +\r\n        'E1LaAUCmCZBVi9fIe0H2r9whIh4uLWZA41oMnJx/MOmo3XyMfQoWcqaSFlMqfZM4\\n' +\r\n        '0rNoB/tdHLNuV4eIdaw2mlHxdWDtF4oH+HFm+2cVBUVC1jXKrFv/euRVtsTT+A6i\\n' +\r\n        'h2XBHKxQ1Y4HgAn0jACP2QSPEmuoQEIa57bEKEcZsBR8SDY6ZdTd2HLRIApcCOSF\\n' +\r\n        'MRM8CKLeF658I0XgF8D5EsYoKPsA+74Z+jDH\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIEETCCAvmgAwIBAgICEAAwDQYJKoZIhvcNAQELBQAwgZQxCzAJBgNVBAYTAlVT\\n' +\r\n        'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\r\n        'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\r\n        'MSUwIwYDVQQDDBxBbWF6b24gUkRTIEJldGEgUm9vdCAyMDE5IENBMB4XDTE5MDgy\\n' +\r\n        'MDE3MTAwN1oXDTI0MDgxOTE3MzgyNlowgZkxCzAJBgNVBAYTAlVTMRMwEQYDVQQI\\n' +\r\n        'DApXYXNoaW5ndG9uMRAwDgYDVQQHDAdTZWF0dGxlMSIwIAYDVQQKDBlBbWF6b24g\\n' +\r\n        'V2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMSowKAYDVQQD\\n' +\r\n        'DCFBbWF6b24gUkRTIEJldGEgdXMtZWFzdC0xIDIwMTkgQ0EwggEiMA0GCSqGSIb3\\n' +\r\n        'DQEBAQUAA4IBDwAwggEKAoIBAQDTNCOlotQcLP8TP82U2+nk0bExVuuMVOgFeVMx\\n' +\r\n        'vbUHZQeIj9ikjk+jm6eTDnnkhoZcmJiJgRy+5Jt69QcRbb3y3SAU7VoHgtraVbxF\\n' +\r\n        'QDh7JEHI9tqEEVOA5OvRrDRcyeEYBoTDgh76ROco2lR+/9uCvGtHVrMCtG7BP7ZB\\n' +\r\n        'sSVNAr1IIRZZqKLv2skKT/7mzZR2ivcw9UeBBTUf8xsfiYVBvMGoEsXEycjYdf6w\\n' +\r\n        'WV+7XS7teNOc9UgsFNN+9AhIBc1jvee5E//72/4F8pAttAg/+mmPUyIKtekNJ4gj\\n' +\r\n        'OAR2VAzGx1ybzWPwIgOudZFHXFduxvq4f1hIRPH0KbQ/gkRrAgMBAAGjZjBkMA4G\\n' +\r\n        'A1UdDwEB/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBTkvpCD\\n' +\r\n        '6C43rar9TtJoXr7q8dkrrjAfBgNVHSMEGDAWgBStoQwVpbGx87fxB3dEGDqKKnBT\\n' +\r\n        '4TANBgkqhkiG9w0BAQsFAAOCAQEAJd9fOSkwB3uVdsS+puj6gCER8jqmhd3g/J5V\\n' +\r\n        'Zjk9cKS8H0e8pq/tMxeJ8kpurPAzUk5RkCspGt2l0BSwmf3ahr8aJRviMX6AuW3/\\n' +\r\n        'g8aKplTvq/WMNGKLXONa3Sq8591J+ce8gtOX/1rDKmFI4wQ/gUzOSYiT991m7QKS\\n' +\r\n        'Fr6HMgFuz7RNJbb3Fy5cnurh8eYWA7mMv7laiLwTNsaro5qsqErD5uXuot6o9beT\\n' +\r\n        'a+GiKinEur35tNxAr47ax4IRubuIzyfCrezjfKc5raVV2NURJDyKP0m0CCaffAxE\\n' +\r\n        'qn2dNfYc3v1D8ypg3XjHlOzRo32RB04o8ALHMD9LSwsYDLpMag==\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIEFzCCAv+gAwIBAgICFSUwDQYJKoZIhvcNAQELBQAwgZcxCzAJBgNVBAYTAlVT\\n' +\r\n        'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\r\n        'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\r\n        'MSgwJgYDVQQDDB9BbWF6b24gUkRTIFByZXZpZXcgUm9vdCAyMDE5IENBMB4XDTE5\\n' +\r\n        'MDgyMTIyMzk0N1oXDTI0MDgyMTIyMjk0OVowgZwxCzAJBgNVBAYTAlVTMRMwEQYD\\n' +\r\n        'VQQIDApXYXNoaW5ndG9uMRAwDgYDVQQHDAdTZWF0dGxlMSIwIAYDVQQKDBlBbWF6\\n' +\r\n        'b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMS0wKwYD\\n' +\r\n        'VQQDDCRBbWF6b24gUkRTIFByZXZpZXcgdXMtZWFzdC0yIDIwMTkgQ0EwggEiMA0G\\n' +\r\n        'CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQD0dB/U7qRnSf05wOi7m10Pa2uPMTJv\\n' +\r\n        'r6U/3Y17a5prq5Zr4++CnSUYarG51YuIf355dKs+7Lpzs782PIwCmLpzAHKWzix6\\n' +\r\n        'pOaTQ+WZ0+vUMTxyqgqWbsBgSCyP7pVBiyqnmLC/L4az9XnscrbAX4pNaoJxsuQe\\n' +\r\n        'mzBo6yofjQaAzCX69DuqxFkVTRQnVy7LCFkVaZtjNAftnAHJjVgQw7lIhdGZp9q9\\n' +\r\n        'IafRt2gteihYfpn+EAQ/t/E4MnhrYs4CPLfS7BaYXBycEKC5Muj1l4GijNNQ0Efo\\n' +\r\n        'xG8LSZz7SNgUvfVwiNTaqfLP3AtEAWiqxyMyh3VO+1HpCjT7uNBFtmF3AgMBAAGj\\n' +\r\n        'ZjBkMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQW\\n' +\r\n        'BBQtinkdrj+0B2+qdXngV2tgHnPIujAfBgNVHSMEGDAWgBRp0xqULkNh/w2ZVzEI\\n' +\r\n        'o2RIY7O03TANBgkqhkiG9w0BAQsFAAOCAQEAtJdqbCxDeMc8VN1/RzCabw9BIL/z\\n' +\r\n        '73Auh8eFTww/sup26yn8NWUkfbckeDYr1BrXa+rPyLfHpg06kwR8rBKyrs5mHwJx\\n' +\r\n        'bvOzXD/5WTdgreB+2Fb7mXNvWhenYuji1MF+q1R2DXV3I05zWHteKX6Dajmx+Uuq\\n' +\r\n        'Yq78oaCBSV48hMxWlp8fm40ANCL1+gzQ122xweMFN09FmNYFhwuW+Ao+Vv90ZfQG\\n' +\r\n        'PYwTvN4n/gegw2TYcifGZC2PNX74q3DH03DXe5fvNgRW5plgz/7f+9mS+YHd5qa9\\n' +\r\n        'tYTPUvoRbi169ou6jicsMKUKPORHWhiTpSCWR1FMMIbsAcsyrvtIsuaGCQ==\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIID/jCCAuagAwIBAgIQdOCSuA9psBpQd8EI368/0DANBgkqhkiG9w0BAQsFADCB\\n' +\r\n        'lzELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\r\n        'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdB\\n' +\r\n        'bWF6b24gUkRTIHNhLWVhc3QtMSBSb290IENBIFJTQTIwNDggRzExEDAOBgNVBAcM\\n' +\r\n        'B1NlYXR0bGUwIBcNMjEwNTE5MTgwNjI2WhgPMjA2MTA1MTkxOTA2MjZaMIGXMQsw\\n' +\r\n        'CQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjET\\n' +\r\n        'MBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMDAuBgNVBAMMJ0FtYXpv\\n' +\r\n        'biBSRFMgc2EtZWFzdC0xIFJvb3QgQ0EgUlNBMjA0OCBHMTEQMA4GA1UEBwwHU2Vh\\n' +\r\n        'dHRsZTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAN6ftL6w8v3dB2yW\\n' +\r\n        'LjCxSP1D7ZsOTeLZOSCz1Zv0Gkd0XLhil5MdHOHBvwH/DrXqFU2oGzCRuAy+aZis\\n' +\r\n        'DardJU6ChyIQIciXCO37f0K23edhtpXuruTLLwUwzeEPdcnLPCX+sWEn9Y5FPnVm\\n' +\r\n        'pCd6J8edH2IfSGoa9LdErkpuESXdidLym/w0tWG/O2By4TabkNSmpdrCL00cqI+c\\n' +\r\n        'prA8Bx1jX8/9sY0gpAovtuFaRN+Ivg3PAnWuhqiSYyQ5nC2qDparOWuDiOhpY56E\\n' +\r\n        'EgmTvjwqMMjNtExfYx6Rv2Ndu50TriiNKEZBzEtkekwXInTupmYTvc7U83P/959V\\n' +\r\n        'UiQ+WSMCAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQU4uYHdH0+\\n' +\r\n        'bUeh81Eq2l5/RJbW+vswDgYDVR0PAQH/BAQDAgGGMA0GCSqGSIb3DQEBCwUAA4IB\\n' +\r\n        'AQBhxcExJ+w74bvDknrPZDRgTeMLYgbVJjx2ExH7/Ac5FZZWcpUpFwWMIJJxtewI\\n' +\r\n        'AnhryzM3tQYYd4CG9O+Iu0+h/VVfW7e4O3joWVkxNMb820kQSEwvZfA78aItGwOY\\n' +\r\n        'WSaFNVRyloVicZRNJSyb1UL9EiJ9ldhxm4LTT0ax+4ontI7zTx6n6h8Sr6r/UOvX\\n' +\r\n        'd9T5aUUENWeo6M9jGupHNn3BobtL7BZm2oS8wX8IVYj4tl0q5T89zDi2x0MxbsIV\\n' +\r\n        '5ZjwqBQ5JWKv7ASGPb+z286RjPA9R2knF4lJVZrYuNV90rHvI/ECyt/JrDqeljGL\\n' +\r\n        'BLl1W/UsvZo6ldLIpoMbbrb5\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIEBDCCAuygAwIBAgIQUfVbqapkLYpUqcLajpTJWzANBgkqhkiG9w0BAQsFADCB\\n' +\r\n        'mjELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\r\n        'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTMwMQYDVQQDDCpB\\n' +\r\n        'bWF6b24gUkRTIG1lLWNlbnRyYWwtMSBSb290IENBIFJTQTIwNDggRzExEDAOBgNV\\n' +\r\n        'BAcMB1NlYXR0bGUwIBcNMjIwNTA2MjMyMDA5WhgPMjA2MjA1MDcwMDIwMDlaMIGa\\n' +\r\n        'MQswCQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5j\\n' +\r\n        'LjETMBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMzAxBgNVBAMMKkFt\\n' +\r\n        'YXpvbiBSRFMgbWUtY2VudHJhbC0xIFJvb3QgQ0EgUlNBMjA0OCBHMTEQMA4GA1UE\\n' +\r\n        'BwwHU2VhdHRsZTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJIeovu3\\n' +\r\n        'ewI9FVitXMQzvkh34aQ6WyI4NO3YepfJaePiv3cnyFGYHN2S1cR3UQcLWgypP5va\\n' +\r\n        'j6bfroqwGbCbZZcb+6cyOB4ceKO9Ws1UkcaGHnNDcy5gXR7aCW2OGTUfinUuhd2d\\n' +\r\n        '5bOGgV7JsPbpw0bwJ156+MwfOK40OLCWVbzy8B1kITs4RUPNa/ZJnvIbiMu9rdj4\\n' +\r\n        '8y7GSFJLnKCjlOFUkNI5LcaYvI1+ybuNgphT3nuu5ZirvTswGakGUT/Q0J3dxP0J\\n' +\r\n        'pDfg5Sj/2G4gXiaM0LppVOoU5yEwVewhQ250l0eQAqSrwPqAkdTg9ng360zqCFPE\\n' +\r\n        'JPPcgI1tdGUgneECAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQU\\n' +\r\n        '/2AJVxWdZxc8eJgdpbwpW7b0f7IwDgYDVR0PAQH/BAQDAgGGMA0GCSqGSIb3DQEB\\n' +\r\n        'CwUAA4IBAQBYm63jTu2qYKJ94gKnqc+oUgqmb1mTXmgmp/lXDbxonjszJDOXFbri\\n' +\r\n        '3CCO7xB2sg9bd5YWY8sGKHaWmENj3FZpCmoefbUx++8D7Mny95Cz8R32rNcwsPTl\\n' +\r\n        'ebpd9A/Oaw5ug6M0x/cNr0qzF8Wk9Dx+nFEimp8RYQdKvLDfNFZHjPa1itnTiD8M\\n' +\r\n        'TorAqj+VwnUGHOYBsT/0NY12tnwXdD+ATWfpEHdOXV+kTMqFFwDyhfgRVNpTc+os\\n' +\r\n        'ygr8SwhnSCpJPB/EYl2S7r+tgAbJOkuwUvGT4pTqrzDQEhwE7swgepnHC87zhf6l\\n' +\r\n        'qN6mVpSnQKQLm6Ob5TeCEFgcyElsF5bH\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIICrjCCAjSgAwIBAgIRAOxu0I1QuMAhIeszB3fJIlkwCgYIKoZIzj0EAwMwgZYx\\n' +\r\n        'CzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMu\\n' +\r\n        'MRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEvMC0GA1UEAwwmQW1h\\n' +\r\n        'em9uIFJEUyB1cy13ZXN0LTIgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcMB1Nl\\n' +\r\n        'YXR0bGUwIBcNMjEwNTI0MjIwNjU5WhgPMjEyMTA1MjQyMzA2NTlaMIGWMQswCQYD\\n' +\r\n        'VQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEG\\n' +\r\n        'A1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExLzAtBgNVBAMMJkFtYXpvbiBS\\n' +\r\n        'RFMgdXMtd2VzdC0yIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQHDAdTZWF0dGxl\\n' +\r\n        'MHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEz4bylRcGqqDWdP7gQIIoTHdBK6FNtKH1\\n' +\r\n        '4SkEIXRXkYDmRvL9Bci1MuGrwuvrka5TDj4b7e+csY0llEzHpKfq6nJPFljoYYP9\\n' +\r\n        'uqHFkv77nOpJJ633KOr8IxmeHW5RXgrZo0IwQDAPBgNVHRMBAf8EBTADAQH/MB0G\\n' +\r\n        'A1UdDgQWBBQQikVz8wmjd9eDFRXzBIU8OseiGzAOBgNVHQ8BAf8EBAMCAYYwCgYI\\n' +\r\n        'KoZIzj0EAwMDaAAwZQIwf06Mcrpw1O0EBLBBrp84m37NYtOkE/0Z0O+C7D41wnXi\\n' +\r\n        'EQdn6PXUVgdD23Gj82SrAjEAklhKs+liO1PtN15yeZR1Io98nFve+lLptaLakZcH\\n' +\r\n        '+hfFuUtCqMbaI8CdvJlKnPqT\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIGCTCCA/GgAwIBAgIRALyWMTyCebLZOGcZZQmkmfcwDQYJKoZIhvcNAQEMBQAw\\n' +\r\n        'gZwxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\r\n        'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE1MDMGA1UEAwws\\n' +\r\n        'QW1hem9uIFJEUyBhcC1ub3J0aGVhc3QtMyBSb290IENBIFJTQTQwOTYgRzExEDAO\\n' +\r\n        'BgNVBAcMB1NlYXR0bGUwIBcNMjEwNTI0MjAyODAzWhgPMjEyMTA1MjQyMTI4MDNa\\n' +\r\n        'MIGcMQswCQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywg\\n' +\r\n        'SW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExNTAzBgNVBAMM\\n' +\r\n        'LEFtYXpvbiBSRFMgYXAtbm9ydGhlYXN0LTMgUm9vdCBDQSBSU0E0MDk2IEcxMRAw\\n' +\r\n        'DgYDVQQHDAdTZWF0dGxlMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA\\n' +\r\n        'wGFiyDyCrGqgdn4fXG12cxKAAfVvhMea1mw5h9CVRoavkPqhzQpAitSOuMB9DeiP\\n' +\r\n        'wQyqcsiGl/cTEau4L+AUBG8b9v26RlY48exUYBXj8CieYntOT9iNw5WtdYJa3kF/\\n' +\r\n        'JxgI+HDMzE9cmHDs5DOO3S0uwZVyra/xE1ymfSlpOeUIOTpHRJv97CBUEpaZMUW5\\n' +\r\n        'Sr6GruuOwFVpO5FX3A/jQlcS+UN4GjSRgDUJuqg6RRQldEZGCVCCmodbByvI2fGm\\n' +\r\n        'reGpsPJD54KkmAX08nOR8e5hkGoHxq0m2DLD4SrOFmt65vG47qnuwplWJjtk9B3Z\\n' +\r\n        '9wDoopwZLBOtlkPIkUllWm1P8EuHC1IKOA+wSP6XdT7cy8S77wgyHzR0ynxv7q/l\\n' +\r\n        'vlZtH30wnNqFI0y9FeogD0TGMCHcnGqfBSicJXPy9T4fU6f0r1HwqKwPp2GArwe7\\n' +\r\n        'dnqLTj2D7M9MyVtFjEs6gfGWXmu1y5uDrf+CszurE8Cycoma+OfjjuVQgWOCy7Nd\\n' +\r\n        'jJswPxAroTzVfpgoxXza4ShUY10woZu0/J+HmNmqK7lh4NS75q1tz75in8uTZDkV\\n' +\r\n        'be7GK+SEusTrRgcf3tlgPjSTWG3veNzFDF2Vn1GLJXmuZfhdlVQDBNXW4MNREExS\\n' +\r\n        'dG57kJjICpT+r8X+si+5j51gRzkSnMYs7VHulpxfcwECAwEAAaNCMEAwDwYDVR0T\\n' +\r\n        'AQH/BAUwAwEB/zAdBgNVHQ4EFgQU4JWOpDBmUBuWKvGPZelw87ezhL8wDgYDVR0P\\n' +\r\n        'AQH/BAQDAgGGMA0GCSqGSIb3DQEBDAUAA4ICAQBRNLMql7itvXSEFQRAnyOjivHz\\n' +\r\n        'l5IlWVQjAbOUr6ogZcwvK6YpxNAFW5zQr8F+fdkiypLz1kk5irx9TIpff0BWC9hQ\\n' +\r\n        '/odMPO8Gxn8+COlSvc+dLsF2Dax3Hvz0zLeKMo+cYisJOzpdR/eKd0/AmFdkvQoM\\n' +\r\n        'AOK9n0yYvVJU2IrSgeJBiiCarpKSeAktEVQ4rvyacQGr+QAPkkjRwm+5LHZKK43W\\n' +\r\n        'nNnggRli9N/27qYtc5bgr3AaQEhEXMI4RxPRXCLsod0ehMGWyRRK728a+6PMMJAJ\\n' +\r\n        'WHOU0x7LCEMPP/bvpLj3BdvSGqNor4ZtyXEbwREry1uzsgODeRRns5acPwTM6ff+\\n' +\r\n        'CmxO2NZ0OktIUSYRmf6H/ZFlZrIhV8uWaIwEJDz71qvj7buhQ+RFDZ9CNL64C0X6\\n' +\r\n        'mf0zJGEpddjANHaaVky+F4gYMtEy2K2Lcm4JGTdyIzUoIe+atzCnRp0QeIcuWtF+\\n' +\r\n        's8AjDYCVFNypcMmqbRmNpITSnOoCHSRuVkY3gutVoYyMLbp8Jm9SJnCIlEWTA6Rm\\n' +\r\n        'wADOMGZJVn5/XRTRuetVOB3KlQDjs9OO01XN5NzGSZO2KT9ngAUfh9Eqhf1iRWSP\\n' +\r\n        'nZlRbQ2NRCuY/oJ5N59mLGxnNJSE7giEKEBRhTQ/XEPIUYAUPD5fca0arKRJwbol\\n' +\r\n        'l9Se1Hsq0ZU5f+OZKQ==\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIGATCCA+mgAwIBAgIRAK7vlRrGVEePJpW1VHMXdlIwDQYJKoZIhvcNAQEMBQAw\\n' +\r\n        'gZgxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\r\n        'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTExMC8GA1UEAwwo\\n' +\r\n        'QW1hem9uIFJEUyBhZi1zb3V0aC0xIFJvb3QgQ0EgUlNBNDA5NiBHMTEQMA4GA1UE\\n' +\r\n        'BwwHU2VhdHRsZTAgFw0yMTA1MTkxOTI4NDNaGA8yMTIxMDUxOTIwMjg0M1owgZgx\\n' +\r\n        'CzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMu\\n' +\r\n        'MRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTExMC8GA1UEAwwoQW1h\\n' +\r\n        'em9uIFJEUyBhZi1zb3V0aC0xIFJvb3QgQ0EgUlNBNDA5NiBHMTEQMA4GA1UEBwwH\\n' +\r\n        'U2VhdHRsZTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAMZiHOQC6x4o\\n' +\r\n        'eC7vVOMCGiN5EuLqPYHdceFPm4h5k/ZejXTf7kryk6aoKZKsDIYihkaZwXVS7Y/y\\n' +\r\n        '7Ig1F1ABi2jD+CYprj7WxXbhpysmN+CKG7YC3uE4jSvfvUnpzionkQbjJsRJcrPO\\n' +\r\n        'cZJM4FVaVp3mlHHtvnM+K3T+ni4a38nAd8xrv1na4+B8ZzZwWZXarfg8lJoGskSn\\n' +\r\n        'ou+3rbGQ0r+XlUP03zWujHoNlVK85qUIQvDfTB7n3O4s1XNGvkfv3GNBhYRWJYlB\\n' +\r\n        '4p8T+PFN8wG+UOByp1gV7BD64RnpuZ8V3dRAlO6YVAmINyG5UGrPzkIbLtErUNHO\\n' +\r\n        '4iSp4UqYvztDqJWWHR/rA84ef+I9RVwwZ8FQbjKq96OTnPrsr63A5mXTC9dXKtbw\\n' +\r\n        'XNJPQY//FEdyM3K8sqM0IdCzxCA1MXZ8+QapWVjwyTjUwFvL69HYky9H8eAER59K\\n' +\r\n        '5I7u/CWWeCy2R1SYUBINc3xxLr0CGGukcWPEZW2aPo5ibW5kepU1P/pzdMTaTfao\\n' +\r\n        'F42jSFXbc7gplLcSqUgWwzBnn35HLTbiZOFBPKf6vRRu8aRX9atgHw/EjCebi2xP\\n' +\r\n        'xIYr5Ub8u0QVHIqcnF1/hVzO/Xz0chj3E6VF/yTXnsakm+W1aM2QkZbFGpga+LMy\\n' +\r\n        'mFCtdPrELjea2CfxgibaJX1Q4rdEpc8DAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMB\\n' +\r\n        'Af8wHQYDVR0OBBYEFDSaycEyuspo/NOuzlzblui8KotFMA4GA1UdDwEB/wQEAwIB\\n' +\r\n        'hjANBgkqhkiG9w0BAQwFAAOCAgEAbosemjeTRsL9o4v0KadBUNS3V7gdAH+X4vH2\\n' +\r\n        'Ee1Jc91VOGLdd/s1L9UX6bhe37b9WjUD69ur657wDW0RzxMYgQdZ27SUl0tEgGGp\\n' +\r\n        'cCmVs1ky3zEN+Hwnhkz+OTmIg1ufq0W2hJgJiluAx2r1ib1GB+YI3Mo3rXSaBYUk\\n' +\r\n        'bgQuujYPctf0PA153RkeICE5GI3OaJ7u6j0caYEixBS3PDHt2MJWexITvXGwHWwc\\n' +\r\n        'CcrC05RIrTUNOJaetQw8smVKYOfRImEzLLPZ5kf/H3Cbj8BNAFNsa10wgvlPuGOW\\n' +\r\n        'XLXqzNXzrG4V3sjQU5YtisDMagwYaN3a6bBf1wFwFIHQoAPIgt8q5zaQ9WI+SBns\\n' +\r\n        'Il6rd4zfvjq/BPmt0uI7rVg/cgbaEg/JDL2neuM9CJAzmKxYxLQuHSX2i3Fy4Y1B\\n' +\r\n        'cnxnRQETCRZNPGd00ADyxPKVoYBC45/t+yVusArFt+2SVLEGiFBr23eG2CEZu+HS\\n' +\r\n        'nDEgIfQ4V3YOTUNa86wvbAss1gbbnT/v1XCnNGClEWCWNCSRjwV2ZmQ/IVTmNHPo\\n' +\r\n        '7axTTBBJbKJbKzFndCnuxnDXyytdYRgFU7Ly3sa27WS2KFyFEDebLFRHQEfoYqCu\\n' +\r\n        'IupSqBSbXsR3U10OTjc9z6EPo1nuV6bdz+gEDthmxKa1NI+Qb1kvyliXQHL2lfhr\\n' +\r\n        '5zT5+Bs=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIF/zCCA+egAwIBAgIRAOLV6zZcL4IV2xmEneN1GwswDQYJKoZIhvcNAQEMBQAw\\n' +\r\n        'gZcxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\r\n        'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEwMC4GA1UEAwwn\\n' +\r\n        'QW1hem9uIFJEUyB1cy13ZXN0LTEgUm9vdCBDQSBSU0E0MDk2IEcxMRAwDgYDVQQH\\n' +\r\n        'DAdTZWF0dGxlMCAXDTIxMDUxOTE5MDg1OFoYDzIxMjEwNTE5MjAwODU4WjCBlzEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdBbWF6\\n' +\r\n        'b24gUkRTIHVzLXdlc3QtMSBSb290IENBIFJTQTQwOTYgRzExEDAOBgNVBAcMB1Nl\\n' +\r\n        'YXR0bGUwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQC7koAKGXXlLixN\\n' +\r\n        'fVjhuqvz0WxDeTQfhthPK60ekRpftkfE5QtnYGzeovaUAiS58MYVzqnnTACDwcJs\\n' +\r\n        'IGTFE6Wd7sB6r8eI/3CwI1pyJfxepubiQNVAQG0zJETOVkoYKe/5KnteKtnEER3X\\n' +\r\n        'tCBRdV/rfbxEDG9ZAsYfMl6zzhEWKF88G6xhs2+VZpDqwJNNALvQuzmTx8BNbl5W\\n' +\r\n        'RUWGq9CQ9GK9GPF570YPCuURW7kl35skofudE9bhURNz51pNoNtk2Z3aEeRx3ouT\\n' +\r\n        'ifFJlzh+xGJRHqBG7nt5NhX8xbg+vw4xHCeq1aAe6aVFJ3Uf9E2HzLB4SfIT9bRp\\n' +\r\n        'P7c9c0ySGt+3n+KLSHFf/iQ3E4nft75JdPjeSt0dnyChi1sEKDi0tnWGiXaIg+J+\\n' +\r\n        'r1ZtcHiyYpCB7l29QYMAdD0TjfDwwPayLmq//c20cPmnSzw271VwqjUT0jYdrNAm\\n' +\r\n        'gV+JfW9t4ixtE3xF2jaUh/NzL3bAmN5v8+9k/aqPXlU1BgE3uPwMCjrfn7V0I7I1\\n' +\r\n        'WLpHyd9jF3U/Ysci6H6i8YKgaPiOfySimQiDu1idmPld659qerutUSemQWmPD3bE\\n' +\r\n        'dcjZolmzS9U0Ujq/jDF1YayN3G3xvry1qWkTci0qMRMu2dZu30Herugh9vsdTYkf\\n' +\r\n        '00EqngPbqtIVLDrDjEQLqPcb8QvWFQIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/\\n' +\r\n        'MB0GA1UdDgQWBBQBqg8Za/L0YMHURGExHfvPyfLbOTAOBgNVHQ8BAf8EBAMCAYYw\\n' +\r\n        'DQYJKoZIhvcNAQEMBQADggIBACAGPMa1QL7P/FIO7jEtMelJ0hQlQepKnGtbKz4r\\n' +\r\n        'Xq1bUX1jnLvnAieR9KZmeQVuKi3g3CDU6b0mDgygS+FL1KDDcGRCSPh238Ou8KcG\\n' +\r\n        'HIxtt3CMwMHMa9gmdcMlR5fJF9vhR0C56KM2zvyelUY51B/HJqHwGvWuexryXUKa\\n' +\r\n        'wq1/iK2/d9mNeOcjDvEIj0RCMI8dFQCJv3PRCTC36XS36Tzr6F47TcTw1c3mgKcs\\n' +\r\n        'xpcwt7ezrXMUunzHS4qWAA5OGdzhYlcv+P5GW7iAA7TDNrBF+3W4a/6s9v2nQAnX\\n' +\r\n        'UvXd9ul0ob71377UhZbJ6SOMY56+I9cJOOfF5QvaL83Sz29Ij1EKYw/s8TYdVqAq\\n' +\r\n        '+dCyQZBkMSnDFLVe3J1KH2SUSfm3O98jdPORQrUlORQVYCHPls19l2F6lCmU7ICK\\n' +\r\n        'hRt8EVSpXm4sAIA7zcnR2nU00UH8YmMQLnx5ok9YGhuh3Ehk6QlTQLJux6LYLskd\\n' +\r\n        '9YHOLGW/t6knVtV78DgPqDeEx/Wu/5A8R0q7HunpWxr8LCPBK6hksZnOoUhhb8IP\\n' +\r\n        'vl46Ve5Tv/FlkyYr1RTVjETmg7lb16a8J0At14iLtpZWmwmuv4agss/1iBVMXfFk\\n' +\r\n        '+ZGtx5vytWU5XJmsfKA51KLsMQnhrLxb3X3zC+JRCyJoyc8++F3YEcRi2pkRYE3q\\n' +\r\n        'Hing\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIECTCCAvGgAwIBAgIRANxgyBbnxgTEOpDul2ZnC0UwDQYJKoZIhvcNAQELBQAw\\n' +\r\n        'gZwxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\r\n        'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE1MDMGA1UEAwws\\n' +\r\n        'QW1hem9uIFJEUyBhcC1zb3V0aGVhc3QtMyBSb290IENBIFJTQTIwNDggRzExEDAO\\n' +\r\n        'BgNVBAcMB1NlYXR0bGUwIBcNMjEwNjEwMTgxOTA3WhgPMjA2MTA2MTAxOTE5MDda\\n' +\r\n        'MIGcMQswCQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywg\\n' +\r\n        'SW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExNTAzBgNVBAMM\\n' +\r\n        'LEFtYXpvbiBSRFMgYXAtc291dGhlYXN0LTMgUm9vdCBDQSBSU0EyMDQ4IEcxMRAw\\n' +\r\n        'DgYDVQQHDAdTZWF0dGxlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\\n' +\r\n        'xnwSDAChrMkfk5TA4Dk8hKzStDlSlONzmd3fTG0Wqr5+x3EmFT6Ksiu/WIwEl9J2\\n' +\r\n        'K98UI7vYyuZfCxUKb1iMPeBdVGqk0zb92GpURd+Iz/+K1ps9ZLeGBkzR8mBmAi1S\\n' +\r\n        'OfpwKiTBzIv6E8twhEn4IUpHsdcuX/2Y78uESpJyM8O5CpkG0JaV9FNEbDkJeBUQ\\n' +\r\n        'Ao2qqNcH4R0Qcr5pyeqA9Zto1RswgL06BQMI9dTpfwSP5VvkvcNUaLl7Zv5WzLQE\\n' +\r\n        'JzORWePvdPzzvWEkY/3FPjxBypuYwssKaERW0fkPDmPtykktP9W/oJolKUFI6pXp\\n' +\r\n        'y+Y6p6/AVdnQD2zZjW5FhQIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MB0GA1Ud\\n' +\r\n        'DgQWBBT+jEKs96LC+/X4BZkUYUkzPfXdqTAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZI\\n' +\r\n        'hvcNAQELBQADggEBAIGQqgqcQ6XSGkmNebzR6DhadTbfDmbYeN5N0Vuzv+Tdmufb\\n' +\r\n        'tMGjdjnYMg4B+IVnTKQb+Ox3pL9gbX6KglGK8HupobmIRtwKVth+gYYz3m0SL/Nk\\n' +\r\n        'haWPYzOm0x3tJm8jSdufJcEob4/ATce9JwseLl76pSWdl5A4lLjnhPPKudUDfH+1\\n' +\r\n        'BLNUi3lxpp6GkC8aWUPtupnhZuXddolTLOuA3GwTZySI44NfaFRm+o83N1jp+EwD\\n' +\r\n        '6e94M4cTRzjUv6J3MZmSbdtQP/Tk1uz2K4bQZGP0PZC3bVpqiesdE/xr+wbu8uHr\\n' +\r\n        'cM1JXH0AmXf1yIkTgyWzmvt0k1/vgcw5ixAqvvE=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIEATCCAumgAwIBAgIRAMhw98EQU18mIji+unM2YH8wDQYJKoZIhvcNAQELBQAw\\n' +\r\n        'gZgxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\r\n        'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTExMC8GA1UEAwwo\\n' +\r\n        'QW1hem9uIFJEUyBhcC1zb3V0aC0yIFJvb3QgQ0EgUlNBMjA0OCBHMTEQMA4GA1UE\\n' +\r\n        'BwwHU2VhdHRsZTAgFw0yMjA2MDYyMTQyMjJaGA8yMDYyMDYwNjIyNDIyMlowgZgx\\n' +\r\n        'CzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMu\\n' +\r\n        'MRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTExMC8GA1UEAwwoQW1h\\n' +\r\n        'em9uIFJEUyBhcC1zb3V0aC0yIFJvb3QgQ0EgUlNBMjA0OCBHMTEQMA4GA1UEBwwH\\n' +\r\n        'U2VhdHRsZTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIeeRoLfTm+7\\n' +\r\n        'vqm7ZlFSx+1/CGYHyYrOOryM4/Z3dqYVHFMgWTR7V3ziO8RZ6yUanrRcWVX3PZbF\\n' +\r\n        'AfX0KFE8OgLsXEZIX8odSrq86+/Th5eZOchB2fDBsUB7GuN2rvFBbM8lTI9ivVOU\\n' +\r\n        'lbuTnYyb55nOXN7TpmH2bK+z5c1y9RVC5iQsNAl6IJNvSN8VCqXh31eK5MlKB4DT\\n' +\r\n        '+Y3OivCrSGsjM+UR59uZmwuFB1h+icE+U0p9Ct3Mjq3MzSX5tQb6ElTNGlfmyGpW\\n' +\r\n        'Kh7GQ5XU1KaKNZXoJ37H53woNSlq56bpVrKI4uv7ATpdpFubOnSLtpsKlpLdR3sy\\n' +\r\n        'Ws245200pC8CAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUp0ki\\n' +\r\n        '6+eWvsnBjQhMxwMW5pwn7DgwDgYDVR0PAQH/BAQDAgGGMA0GCSqGSIb3DQEBCwUA\\n' +\r\n        'A4IBAQB2V8lv0aqbYQpj/bmVv/83QfE4vOxKCJAHv7DQ35cJsTyBdF+8pBczzi3t\\n' +\r\n        '3VNL5IUgW6WkyuUOWnE0eqAFOUVj0yTS1jSAtfl3vOOzGJZmWBbqm9BKEdu1D8O6\\n' +\r\n        'sB8bnomwiab2tNDHPmUslpdDqdabbkWwNWzLJ97oGFZ7KNODMEPXWKWNxg33iHfS\\n' +\r\n        '/nlmnrTVI3XgaNK9qLZiUrxu9Yz5gxi/1K+sG9/Dajd32ZxjRwDipOLiZbiXQrsd\\n' +\r\n        'qzIMY4GcWf3g1gHL5mCTfk7dG22h/rhPyGV0svaDnsb+hOt6sv1McMN6Y3Ou0mtM\\n' +\r\n        '/UaAXojREmJmTSCNvs2aBny3/2sy\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIICrjCCAjSgAwIBAgIRAMnRxsKLYscJV8Qv5pWbL7swCgYIKoZIzj0EAwMwgZYx\\n' +\r\n        'CzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMu\\n' +\r\n        'MRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEvMC0GA1UEAwwmQW1h\\n' +\r\n        'em9uIFJEUyBzYS1lYXN0LTEgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcMB1Nl\\n' +\r\n        'YXR0bGUwIBcNMjEwNTE5MTgxNjAxWhgPMjEyMTA1MTkxOTE2MDFaMIGWMQswCQYD\\n' +\r\n        'VQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEG\\n' +\r\n        'A1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExLzAtBgNVBAMMJkFtYXpvbiBS\\n' +\r\n        'RFMgc2EtZWFzdC0xIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQHDAdTZWF0dGxl\\n' +\r\n        'MHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEjFOCZgTNVKxLKhUxffiDEvTLFhrmIqdO\\n' +\r\n        'dKqVdgDoELEzIHWDdC+19aDPitbCYtBVHl65ITu/9pn6mMUl5hhUNtfZuc6A+Iw1\\n' +\r\n        'sBe0v0qI3y9Q9HdQYrGgeHDh8M5P7E2ho0IwQDAPBgNVHRMBAf8EBTADAQH/MB0G\\n' +\r\n        'A1UdDgQWBBS5L7/8M0TzoBZk39Ps7BkfTB4yJTAOBgNVHQ8BAf8EBAMCAYYwCgYI\\n' +\r\n        'KoZIzj0EAwMDaAAwZQIwI43O0NtWKTgnVv9z0LO5UMZYgSve7GvGTwqktZYCMObE\\n' +\r\n        'rUI4QerXM9D6JwLy09mqAjEAypfkdLyVWtaElVDUyHFkihAS1I1oUxaaDrynLNQK\\n' +\r\n        'Ou/Ay+ns+J+GyvyDUjBpVVW1\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIF/jCCA+agAwIBAgIQR71Z8lTO5Sj+as2jB7IWXzANBgkqhkiG9w0BAQwFADCB\\n' +\r\n        'lzELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\r\n        'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdB\\n' +\r\n        'bWF6b24gUkRTIHVzLXdlc3QtMiBSb290IENBIFJTQTQwOTYgRzExEDAOBgNVBAcM\\n' +\r\n        'B1NlYXR0bGUwIBcNMjEwNTI0MjIwMzIwWhgPMjEyMTA1MjQyMzAzMjBaMIGXMQsw\\n' +\r\n        'CQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjET\\n' +\r\n        'MBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMDAuBgNVBAMMJ0FtYXpv\\n' +\r\n        'biBSRFMgdXMtd2VzdC0yIFJvb3QgQ0EgUlNBNDA5NiBHMTEQMA4GA1UEBwwHU2Vh\\n' +\r\n        'dHRsZTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAM977bHIs1WJijrS\\n' +\r\n        'XQMfUOhmlJjr2v0K0UjPl52sE1TJ76H8umo1yR4T7Whkd9IwBHNGKXCJtJmMr9zp\\n' +\r\n        'fB38eLTu+5ydUAXdFuZpRMKBWwPVe37AdJRKqn5beS8HQjd3JXAgGKUNNuE92iqF\\n' +\r\n        'qi2fIqFMpnJXWo0FIW6s2Dl2zkORd7tH0DygcRi7lgVxCsw1BJQhFJon3y+IV8/F\\n' +\r\n        'bnbUXSNSDUnDW2EhvWSD8L+t4eiXYsozhDAzhBvojpxhPH9OB7vqFYw5qxFx+G0t\\n' +\r\n        'lSLX5iWi1jzzc3XyGnB6WInZDVbvnvJ4BGZ+dTRpOCvsoMIn9bz4EQTvu243c7aU\\n' +\r\n        'HbS/kvnCASNt+zk7C6lbmaq0AGNztwNj85Opn2enFciWZVnnJ/4OeefUWQxD0EPp\\n' +\r\n        'SjEd9Cn2IHzkBZrHCg+lWZJQBKbUVS0lLIMSsLQQ6WvR38jY7D2nxM1A93xWxwpt\\n' +\r\n        'ZtQnYRCVXH6zt2OwDAFePInWwxUjR5t/wu3XxPgpSfrmTi3WYtr1wFypAJ811e/P\\n' +\r\n        'yBtswWUQ6BNJQvy+KnOEeGfOwmtdDFYR+GOCfvCihzrKJrxOtHIieehR5Iw3cbXG\\n' +\r\n        'sm4pDzfMUVvDDz6C2M6PRlJhhClbatHCjik9hxFYEsAlqtVVK9pxaz9i8hOqSFQq\\n' +\r\n        'kJSQsgWw+oM/B2CyjcSqkSQEu8RLAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8w\\n' +\r\n        'HQYDVR0OBBYEFPmrdxpRRgu3IcaB5BTqlprcKdTsMA4GA1UdDwEB/wQEAwIBhjAN\\n' +\r\n        'BgkqhkiG9w0BAQwFAAOCAgEAVdlxWjPvVKky3kn8ZizeM4D+EsLw9dWLau2UD/ls\\n' +\r\n        'zwDCFoT6euagVeCknrn+YEl7g20CRYT9iaonGoMUPuMR/cdtPL1W/Rf40PSrGf9q\\n' +\r\n        'QuxavWiHLEXOQTCtCaVZMokkvjuuLNDXyZnstgECuiZECTwhexUF4oiuhyGk9o01\\n' +\r\n        'QMaiz4HX4lgk0ozALUvEzaNd9gWEwD2qe+rq9cQMTVq3IArUkvTIftZUaVUMzr0O\\n' +\r\n        'ed1+zAsNa9nJhURJ/6anJPJjbQgb5qA1asFcp9UaMT1ku36U3gnR1T/BdgG2jX3X\\n' +\r\n        'Um0UcaGNVPrH1ukInWW743pxWQb7/2sumEEMVh+jWbB18SAyLI4WIh4lkurdifzS\\n' +\r\n        'IuTFp8TEx+MouISFhz/vJDWZ84tqoLVjkEcP6oDypq9lFoEzHDJv3V1CYcIgOusT\\n' +\r\n        'k1jm9P7BXdTG7TYzUaTb9USb6bkqkD9EwJAOSs7DI94aE6rsSws2yAHavjAMfuMZ\\n' +\r\n        'sDAZvkqS2Qg2Z2+CI6wUZn7mzkJXbZoqRjDvChDXEB1mIhzVXhiNW/CR5WKVDvlj\\n' +\r\n        '9v1sdGByh2pbxcLQtVaq/5coM4ANgphoNz3pOYUPWHS+JUrIivBZ+JobjXcxr3SN\\n' +\r\n        '9iDzcu5/FVVNbq7+KN/nvPMngT+gduEN5m+EBjm8GukJymFG0m6BENRA0QSDqZ7k\\n' +\r\n        'zDY=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIECTCCAvGgAwIBAgIRAK5EYG3iHserxMqgg+0EFjgwDQYJKoZIhvcNAQELBQAw\\n' +\r\n        'gZwxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\r\n        'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE1MDMGA1UEAwws\\n' +\r\n        'QW1hem9uIFJEUyBhcC1ub3J0aGVhc3QtMyBSb290IENBIFJTQTIwNDggRzExEDAO\\n' +\r\n        'BgNVBAcMB1NlYXR0bGUwIBcNMjEwNTI0MjAyMzE2WhgPMjA2MTA1MjQyMTIzMTZa\\n' +\r\n        'MIGcMQswCQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywg\\n' +\r\n        'SW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExNTAzBgNVBAMM\\n' +\r\n        'LEFtYXpvbiBSRFMgYXAtbm9ydGhlYXN0LTMgUm9vdCBDQSBSU0EyMDQ4IEcxMRAw\\n' +\r\n        'DgYDVQQHDAdTZWF0dGxlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\\n' +\r\n        's1L6TtB84LGraLHVC+rGPhLBW2P0oN/91Rq3AnYwqDOuTom7agANwEjvLq7dSRG/\\n' +\r\n        'sIfZsSV/ABTgArZ5sCmLjHFZAo8Kd45yA9byx20RcYtAG8IZl+q1Cri+s0XefzyO\\n' +\r\n        'U6mlfXZkVe6lzjlfXBkrlE/+5ifVbJK4dqOS1t9cWIpgKqv5fbE6Qbq4LVT+5/WM\\n' +\r\n        'Vd2BOljuBMGMzdZubqFKFq4mzTuIYfnBm7SmHlZfTdfBYPP1ScNuhpjuzw4n3NCR\\n' +\r\n        'EdU6dQv04Q6th4r7eiOCwbWI9LkmVbvBe3ylhH63lApC7MiiPYLlB13xBubVHVhV\\n' +\r\n        'q1NHoNTi+zA3MN9HWicRxQIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MB0GA1Ud\\n' +\r\n        'DgQWBBSuxoqm0/wjNiZLvqv+JlQwsDvTPDAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZI\\n' +\r\n        'hvcNAQELBQADggEBAFfTK/j5kv90uIbM8VaFdVbr/6weKTwehafT0pAk1bfLVX+7\\n' +\r\n        'uf8oHgYiyKTTl0DFQicXejghXTeyzwoEkWSR8c6XkhD5vYG3oESqmt/RGvvoxz11\\n' +\r\n        'rHHy7yHYu7RIUc3VQG60c4qxXv/1mWySGwVwJrnuyNT9KZXPevu3jVaWOVHEILaK\\n' +\r\n        'HvzQ2YEcWBPmde/zEseO2QeeGF8FL45Q1d66wqIP4nNUd2pCjeTS5SpB0MMx7yi9\\n' +\r\n        'ki1OH1pv8tOuIdimtZ7wkdB8+JSZoaJ81b8sRrydRwJyvB88rftuI3YB4WwGuONT\\n' +\r\n        'ZezUPsmaoK69B0RChB0ofDpAaviF9V3xOWvVZfo=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIGDzCCA/egAwIBAgIRAI0sMNG2XhaBMRN3zD7ZyoEwDQYJKoZIhvcNAQEMBQAw\\n' +\r\n        'gZ8xCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\r\n        'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE4MDYGA1UEAwwv\\n' +\r\n        'QW1hem9uIFJEUyBQcmV2aWV3IHVzLWVhc3QtMiBSb290IENBIFJTQTQwOTYgRzEx\\n' +\r\n        'EDAOBgNVBAcMB1NlYXR0bGUwIBcNMjEwNTE4MjA1NzUwWhgPMjEyMTA1MTgyMTU3\\n' +\r\n        'NTBaMIGfMQswCQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n' +\r\n        'cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExODA2BgNV\\n' +\r\n        'BAMML0FtYXpvbiBSRFMgUHJldmlldyB1cy1lYXN0LTIgUm9vdCBDQSBSU0E0MDk2\\n' +\r\n        'IEcxMRAwDgYDVQQHDAdTZWF0dGxlMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIIC\\n' +\r\n        'CgKCAgEAh/otSiCu4Uw3hu7OJm0PKgLsLRqBmUS6jihcrkxfN2SHmp2zuRflkweU\\n' +\r\n        'BhMkebzL+xnNvC8okzbgPWtUxSmDnIRhE8J7bvSKFlqs/tmEdiI/LMqe/YIKcdsI\\n' +\r\n        '20UYmvyLIjtDaJIh598SHHlF9P8DB5jD8snJfhxWY+9AZRN+YVTltgQAAgayxkWp\\n' +\r\n        'M1BbvxpOnz4CC00rE0eqkguXIUSuobb1vKqdKIenlYBNxm2AmtgvQfpsBIQ0SB+8\\n' +\r\n        '8Zip8Ef5rtjSw5J3s2Rq0aYvZPfCVIsKYepIboVwXtD7E9J31UkB5onLBQlaHaA6\\n' +\r\n        'XlH4srsMmrew5d2XejQGy/lGZ1nVWNsKO0x/Az2QzY5Kjd6AlXZ8kq6H68hscA5i\\n' +\r\n        'OMbNlXzeEQsZH0YkId3+UsEns35AAjZv4qfFoLOu8vDotWhgVNT5DfdbIWZW3ZL8\\n' +\r\n        'qbmra3JnCHuaTwXMnc25QeKgVq7/rG00YB69tCIDwcf1P+tFJWxvaGtV0g2NthtB\\n' +\r\n        'a+Xo09eC0L53gfZZ3hZw1pa3SIF5dIZ6RFRUQ+lFOux3Q/I3u+rYstYw7Zxc4Zeo\\n' +\r\n        'Y8JiedpQXEAnbw2ECHix/L6mVWgiWCiDzBnNLLdbmXjJRnafNSndSfFtHCnY1SiP\\n' +\r\n        'aCrNpzwZIJejoV1zDlWAMO+gyS28EqzuIq3WJK/TFE7acHkdKIcCAwEAAaNCMEAw\\n' +\r\n        'DwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUrmV1YASnuudfmqAZP4sKGTvScaEw\\n' +\r\n        'DgYDVR0PAQH/BAQDAgGGMA0GCSqGSIb3DQEBDAUAA4ICAQBGpEKeQoPvE85tN/25\\n' +\r\n        'qHFkys9oHDl93DZ62EnOqAUKLd6v0JpCyEiop4nlrJe+4KrBYVBPyKOJDcIqE2Sp\\n' +\r\n        '3cvgJXLhY4i46VM3Qxe8yuYF1ElqBpg3jJVj/sCQnYz9dwoAMWIJFaDWOvmU2E7M\\n' +\r\n        'MRaKx+sPXFkIjiDA6Bv0m+VHef7aedSYIY7IDltEQHuXoqNacGrYo3I50R+fZs88\\n' +\r\n        '/mB3e/V7967e99D6565yf9Lcjw4oQf2Hy7kl/6P9AuMz0LODnGITwh2TKk/Zo3RU\\n' +\r\n        'Vgq25RDrT4xJK6nFHyjUF6+4cOBxVpimmFw/VP1zaXT8DN5r4HyJ9p4YuSK8ha5N\\n' +\r\n        '2pJc/exvU8Nv2+vS/efcDZWyuEdZ7eh1IJWQZlOZKIAONfRDRTpeQHJ3zzv3QVYy\\n' +\r\n        't78pYp/eWBHyVIfEE8p2lFKD4279WYe+Uvdb8c4Jm4TJwqkSJV8ifID7Ub80Lsir\\n' +\r\n        'lPAU3OCVTBeVRFPXT2zpC4PB4W6KBSuj6OOcEu2y/HgWcoi7Cnjvp0vFTUhDFdus\\n' +\r\n        'Wz3ucmJjfVsrkEO6avDKu4SwdbVHsk30TVAwPd6srIdi9U6MOeOQSOSE4EsrrS7l\\n' +\r\n        'SVmu2QIDUVFpm8QAHYplkyWIyGkupyl3ashH9mokQhixIU/Pzir0byePxHLHrwLu\\n' +\r\n        '1axqeKpI0F5SBUPsaVNYY2uNFg==\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIECDCCAvCgAwIBAgIQCREfzzVyDTMcNME+gWnTCTANBgkqhkiG9w0BAQsFADCB\\n' +\r\n        'nDELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\r\n        'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTUwMwYDVQQDDCxB\\n' +\r\n        'bWF6b24gUkRTIGFwLXNvdXRoZWFzdC0yIFJvb3QgQ0EgUlNBMjA0OCBHMTEQMA4G\\n' +\r\n        'A1UEBwwHU2VhdHRsZTAgFw0yMTA1MjQyMDQyMzNaGA8yMDYxMDUyNDIxNDIzM1ow\\n' +\r\n        'gZwxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\r\n        'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE1MDMGA1UEAwws\\n' +\r\n        'QW1hem9uIFJEUyBhcC1zb3V0aGVhc3QtMiBSb290IENBIFJTQTIwNDggRzExEDAO\\n' +\r\n        'BgNVBAcMB1NlYXR0bGUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDL\\n' +\r\n        '1MT6br3L/4Pq87DPXtcjlXN3cnbNk2YqRAZHJayStTz8VtsFcGPJOpk14geRVeVk\\n' +\r\n        'e9uKFHRbcyr/RM4owrJTj5X4qcEuATYZbo6ou/rW2kYzuWFZpFp7lqm0vasV4Z9F\\n' +\r\n        'fChlhwkNks0UbM3G+psCSMNSoF19ERunj7w2c4E62LwujkeYLvKGNepjnaH10TJL\\n' +\r\n        '2krpERd+ZQ4jIpObtRcMH++bTrvklc+ei8W9lqrVOJL+89v2piN3Ecdd389uphst\\n' +\r\n        'qQdb1BBVXbhUrtuGHgVf7zKqN1SkCoktoWxVuOprVWhSvr7akaWeq0UmlvbEsujU\\n' +\r\n        'vADqxGMcJFyCzxx3CkJjAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0O\\n' +\r\n        'BBYEFFk8UJmlhoxFT3PP12PvhvazHjT4MA4GA1UdDwEB/wQEAwIBhjANBgkqhkiG\\n' +\r\n        '9w0BAQsFAAOCAQEAfFtr2lGoWVXmWAsIo2NYre7kzL8Xb9Tx7desKxCCz5HOOvIr\\n' +\r\n        '8JMB1YK6A7IOvQsLJQ/f1UnKRh3X3mJZjKIywfrMSh0FiDf+rjcEzXxw2dGtUem4\\n' +\r\n        'A+WMvIA3jwxnJ90OQj5rQ8bg3iPtE6eojzo9vWQGw/Vu48Dtw1DJo9210Lq/6hze\\n' +\r\n        'hPhNkFh8fMXNT7Q1Wz/TJqJElyAQGNOXhyGpHKeb0jHMMhsy5UNoW5hLeMS5ffao\\n' +\r\n        'TBFWEJ1gVfxIU9QRxSh+62m46JIg+dwDlWv8Aww14KgepspRbMqDuaM2cinoejv6\\n' +\r\n        't3dyOyHHrsOyv3ffZUKtQhQbQr+sUcL89lARsg==\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIID/zCCAuegAwIBAgIRAIJLTMpzGNxqHZ4t+c1MlCIwDQYJKoZIhvcNAQELBQAw\\n' +\r\n        'gZcxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\r\n        'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEwMC4GA1UEAwwn\\n' +\r\n        'QW1hem9uIFJEUyBhcC1lYXN0LTEgUm9vdCBDQSBSU0EyMDQ4IEcxMRAwDgYDVQQH\\n' +\r\n        'DAdTZWF0dGxlMCAXDTIxMDUyNTIxMzAzM1oYDzIwNjEwNTI1MjIzMDMzWjCBlzEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdBbWF6\\n' +\r\n        'b24gUkRTIGFwLWVhc3QtMSBSb290IENBIFJTQTIwNDggRzExEDAOBgNVBAcMB1Nl\\n' +\r\n        'YXR0bGUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDtdHut0ZhJ9Nn2\\n' +\r\n        'MpVafFcwHdoEzx06okmmhjJsNy4l9QYVeh0UUoek0SufRNMRF4d5ibzpgZol0Y92\\n' +\r\n        '/qKWNe0jNxhEj6sXyHsHPeYtNBPuDMzThfbvsLK8z7pBP7vVyGPGuppqW/6m4ZBB\\n' +\r\n        'lcc9fsf7xpZ689iSgoyjiT6J5wlVgmCx8hFYc/uvcRtfd8jAHvheug7QJ3zZmIye\\n' +\r\n        'V4htOW+fRVWnBjf40Q+7uTv790UAqs0Zboj4Yil+hER0ibG62y1g71XcCyvcVpto\\n' +\r\n        '2/XW7Y9NCgMNqQ7fGN3wR1gjtSYPd7DO32LTzYhutyvfbpAZjsAHnoObmoljcgXI\\n' +\r\n        'QjfBcCFpAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFJI3aWLg\\n' +\r\n        'CS5xqU5WYVaeT5s8lpO0MA4GA1UdDwEB/wQEAwIBhjANBgkqhkiG9w0BAQsFAAOC\\n' +\r\n        'AQEAUwATpJOcGVOs3hZAgJwznWOoTzOVJKfrqBum7lvkVH1vBwxBl9CahaKj3ZOt\\n' +\r\n        'YYp2qJzhDUWludL164DL4ZjS6eRedLRviyy5cRy0581l1MxPWTThs27z+lCC14RL\\n' +\r\n        'PJZNVYYdl7Jy9Q5NsQ0RBINUKYlRY6OqGDySWyuMPgno2GPbE8aynMdKP+f6G/uE\\n' +\r\n        'YHOf08gFDqTsbyfa70ztgVEJaRooVf5JJq4UQtpDvVswW2reT96qi6tXPKHN5qp3\\n' +\r\n        '3wI0I1Mp4ePmiBKku2dwYzPfrJK/pQlvu0Gu5lKOQ65QdotwLAAoaFqrf9za1yYs\\n' +\r\n        'INUkHLWIxDds+4OHNYcerGp5Dw==\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIGCTCCA/GgAwIBAgIRAIO6ldra1KZvNWJ0TA1ihXEwDQYJKoZIhvcNAQEMBQAw\\n' +\r\n        'gZwxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\r\n        'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE1MDMGA1UEAwws\\n' +\r\n        'QW1hem9uIFJEUyBhcC1zb3V0aGVhc3QtMSBSb290IENBIFJTQTQwOTYgRzExEDAO\\n' +\r\n        'BgNVBAcMB1NlYXR0bGUwIBcNMjEwNTIxMjE0NTA1WhgPMjEyMTA1MjEyMjQ1MDVa\\n' +\r\n        'MIGcMQswCQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywg\\n' +\r\n        'SW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExNTAzBgNVBAMM\\n' +\r\n        'LEFtYXpvbiBSRFMgYXAtc291dGhlYXN0LTEgUm9vdCBDQSBSU0E0MDk2IEcxMRAw\\n' +\r\n        'DgYDVQQHDAdTZWF0dGxlMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA\\n' +\r\n        'sDN52Si9pFSyZ1ruh3xAN0nVqEs960o2IK5CPu/ZfshFmzAwnx/MM8EHt/jMeZtj\\n' +\r\n        'SM58LADAsNDL01ELpFZATjgZQ6xNAyXRXE7RiTRUvNkK7O3o2qAGbLnJq/UqF7Sw\\n' +\r\n        'LRnB8V6hYOv+2EjVnohtGCn9SUFGZtYDjWXsLd4ML4Zpxv0a5LK7oEC7AHzbUR7R\\n' +\r\n        'jsjkrXqSv7GE7bvhSOhMkmgxgj1F3J0b0jdQdtyyj109aO0ATUmIvf+Bzadg5AI2\\n' +\r\n        'A9UA+TUcGeebhpHu8AP1Hf56XIlzPpaQv3ZJ4vzoLaVNUC7XKzAl1dlvCl7Klg/C\\n' +\r\n        '84qmbD/tjZ6GHtzpLKgg7kQEV7mRoXq8X4wDX2AFPPQl2fv+Kbe+JODqm5ZjGegm\\n' +\r\n        'uskABBi8IFv1hYx9jEulZPxC6uD/09W2+niFm3pirnlWS83BwVDTUBzF+CooUIMT\\n' +\r\n        'jhWkIIZGDDgMJTzouBHfoSJtS1KpUZi99m2WyVs21MNKHeWAbs+zmI6TO5iiMC+T\\n' +\r\n        'uB8spaOiHFO1573Fmeer4sy3YA6qVoqVl6jjTQqOdy3frAMbCkwH22/crV8YA+08\\n' +\r\n        'hLeHXrMK+6XUvU+EtHAM3VzcrLbuYJUI2XJbzTj5g0Eb8I8JWsHvWHR5K7Z7gceR\\n' +\r\n        '78AzxQmoGEfV6KABNWKsgoCQnfb1BidDJIe3BsI0A6UCAwEAAaNCMEAwDwYDVR0T\\n' +\r\n        'AQH/BAUwAwEB/zAdBgNVHQ4EFgQUABp0MlB14MSHgAcuNSOhs3MOlUcwDgYDVR0P\\n' +\r\n        'AQH/BAQDAgGGMA0GCSqGSIb3DQEBDAUAA4ICAQCv4CIOBSQi/QR9NxdRgVAG/pAh\\n' +\r\n        'tFJhV7OWb/wqwsNKFDtg6tTxwaahdCfWpGWId15OUe7G9LoPiKiwM9C92n0ZeHRz\\n' +\r\n        '4ewbrQVo7Eu1JI1wf0rnZJISL72hVYKmlvaWaacHhWxvsbKLrB7vt6Cknxa+S993\\n' +\r\n        'Kf8i2Psw8j5886gaxhiUtzMTBwoDWak8ZaK7m3Y6C6hXQk08+3pnIornVSFJ9dlS\\n' +\r\n        'PAqt5UPwWmrEfF+0uIDORlT+cvrAwgSp7nUF1q8iasledycZ/BxFgQqzNwnkBDwQ\\n' +\r\n        'Z/aM52ArGsTzfMhkZRz9HIEhz1/0mJw8gZtDVQroD8778h8zsx2SrIz7eWQ6uWsD\\n' +\r\n        'QEeSWXpcheiUtEfzkDImjr2DLbwbA23c9LoexUD10nwohhoiQQg77LmvBVxeu7WU\\n' +\r\n        'E63JqaYUlOLOzEmNJp85zekIgR8UTkO7Gc+5BD7P4noYscI7pPOL5rP7YLg15ZFi\\n' +\r\n        'ega+G53NTckRXz4metsd8XFWloDjZJJq4FfD60VuxgXzoMNT9wpFTNSH42PR2s9L\\n' +\r\n        'I1vcl3w8yNccs9se2utM2nLsItZ3J0m/+QSRiw9hbrTYTcM9sXki0DtH2kyIOwYf\\n' +\r\n        'lOrGJDiYOIrXSQK36H0gQ+8omlrUTvUj4msvkXuQjlfgx6sgp2duOAfnGxE7uHnc\\n' +\r\n        'UhnJzzoe6M+LfGHkVQ==\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIICuDCCAj2gAwIBAgIQSAG6j2WHtWUUuLGJTPb1nTAKBggqhkjOPQQDAzCBmzEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTQwMgYDVQQDDCtBbWF6\\n' +\r\n        'b24gUkRTIGFwLW5vcnRoZWFzdC0yIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQH\\n' +\r\n        'DAdTZWF0dGxlMCAXDTIxMDUyMDE2MzgyNloYDzIxMjEwNTIwMTczODI2WjCBmzEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTQwMgYDVQQDDCtBbWF6\\n' +\r\n        'b24gUkRTIGFwLW5vcnRoZWFzdC0yIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQH\\n' +\r\n        'DAdTZWF0dGxlMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAE2eqwU4FOzW8RV1W381Bd\\n' +\r\n        'olhDOrqoMqzWli21oDUt7y8OnXM/lmAuOS6sr8Nt61BLVbONdbr+jgCYw75KabrK\\n' +\r\n        'ZGg3siqvMOgabIKkKuXO14wtrGyGDt7dnKXg5ERGYOZlo0IwQDAPBgNVHRMBAf8E\\n' +\r\n        'BTADAQH/MB0GA1UdDgQWBBS1Acp2WYxOcblv5ikZ3ZIbRCCW+zAOBgNVHQ8BAf8E\\n' +\r\n        'BAMCAYYwCgYIKoZIzj0EAwMDaQAwZgIxAJL84J08PBprxmsAKPTotBuVI3MyW1r8\\n' +\r\n        'xQ0i8lgCQUf8GcmYjQ0jI4oZyv+TuYJAcwIxAP9Xpzq0Docxb+4N1qVhpiOfWt1O\\n' +\r\n        'FnemFiy9m1l+wv6p3riQMPV7mBVpklmijkIv3Q==\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIECTCCAvGgAwIBAgIRALZLcqCVIJ25maDPE3sbPCIwDQYJKoZIhvcNAQELBQAw\\n' +\r\n        'gZwxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\r\n        'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE1MDMGA1UEAwws\\n' +\r\n        'QW1hem9uIFJEUyBhcC1zb3V0aGVhc3QtMSBSb290IENBIFJTQTIwNDggRzExEDAO\\n' +\r\n        'BgNVBAcMB1NlYXR0bGUwIBcNMjEwNTIxMjEzOTM5WhgPMjA2MTA1MjEyMjM5Mzla\\n' +\r\n        'MIGcMQswCQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywg\\n' +\r\n        'SW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExNTAzBgNVBAMM\\n' +\r\n        'LEFtYXpvbiBSRFMgYXAtc291dGhlYXN0LTEgUm9vdCBDQSBSU0EyMDQ4IEcxMRAw\\n' +\r\n        'DgYDVQQHDAdTZWF0dGxlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\\n' +\r\n        'ypKc+6FfGx6Gl6fQ78WYS29QoKgQiur58oxR3zltWeg5fqh9Z85K5S3UbRSTqWWu\\n' +\r\n        'Xcfnkz0/FS07qHX+nWAGU27JiQb4YYqhjZNOAq8q0+ptFHJ6V7lyOqXBq5xOzO8f\\n' +\r\n        '+0DlbJSsy7GEtJp7d7QCM3M5KVY9dENVZUKeJwa8PC5StvwPx4jcLeZRJC2rAVDG\\n' +\r\n        'SW7NAInbATvr9ssSh03JqjXb+HDyywiqoQ7EVLtmtXWimX+0b3/2vhqcH5jgcKC9\\n' +\r\n        'IGFydrjPbv4kwMrKnm6XlPZ9L0/3FMzanXPGd64LQVy51SI4d5Xymn0Mw2kMX8s6\\n' +\r\n        'Nf05OsWcDzJ1n6/Q1qHSxQIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MB0GA1Ud\\n' +\r\n        'DgQWBBRmaIc8eNwGP7i6P7AJrNQuK6OpFzAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZI\\n' +\r\n        'hvcNAQELBQADggEBAIBeHfGwz3S2zwIUIpqEEI5/sMySDeS+3nJR+woWAHeO0C8i\\n' +\r\n        'BJdDh+kzzkP0JkWpr/4NWz84/IdYo1lqASd1Kopz9aT1+iROXaWr43CtbzjXb7/X\\n' +\r\n        'Zv7eZZFC8/lS5SROq42pPWl4ekbR0w8XGQElmHYcWS41LBfKeHCUwv83ATF0XQ6I\\n' +\r\n        '4t+9YSqZHzj4vvedrvcRInzmwWJaal9s7Z6GuwTGmnMsN3LkhZ+/GD6oW3pU/Pyh\\n' +\r\n        'EtWqffjsLhfcdCs3gG8x9BbkcJPH5aPAVkPn4wc8wuXg6xxb9YGsQuY930GWTYRf\\n' +\r\n        'schbgjsuqznW4HHakq4WNhs1UdTSTKkRdZz7FUQ=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIEDzCCAvegAwIBAgIRAM2zAbhyckaqRim63b+Tib8wDQYJKoZIhvcNAQELBQAw\\n' +\r\n        'gZ8xCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\r\n        'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE4MDYGA1UEAwwv\\n' +\r\n        'QW1hem9uIFJEUyBQcmV2aWV3IHVzLWVhc3QtMiBSb290IENBIFJTQTIwNDggRzEx\\n' +\r\n        'EDAOBgNVBAcMB1NlYXR0bGUwIBcNMjEwNTE4MjA0OTQ1WhgPMjA2MTA1MTgyMTQ5\\n' +\r\n        'NDVaMIGfMQswCQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n' +\r\n        'cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExODA2BgNV\\n' +\r\n        'BAMML0FtYXpvbiBSRFMgUHJldmlldyB1cy1lYXN0LTIgUm9vdCBDQSBSU0EyMDQ4\\n' +\r\n        'IEcxMRAwDgYDVQQHDAdTZWF0dGxlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB\\n' +\r\n        'CgKCAQEA1ybjQMH1MkbvfKsWJaCTXeCSN1SG5UYid+Twe+TjuSqaXWonyp4WRR5z\\n' +\r\n        'tlkqq+L2MWUeQQAX3S17ivo/t84mpZ3Rla0cx39SJtP3BiA2BwfUKRjhPwOjmk7j\\n' +\r\n        '3zrcJjV5k1vSeLNOfFFSlwyDiVyLAE61lO6onBx+cRjelu0egMGq6WyFVidTdCmT\\n' +\r\n        'Q9Zw3W6LTrnPvPmEyjHy2yCHzH3E50KSd/5k4MliV4QTujnxYexI2eR8F8YQC4m3\\n' +\r\n        'DYjXt/MicbqA366SOoJA50JbgpuVv62+LSBu56FpzY12wubmDZsdn4lsfYKiWxUy\\n' +\r\n        'uc83a2fRXsJZ1d3whxrl20VFtLFHFQIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/\\n' +\r\n        'MB0GA1UdDgQWBBRC0ytKmDYbfz0Bz0Psd4lRQV3aNTAOBgNVHQ8BAf8EBAMCAYYw\\n' +\r\n        'DQYJKoZIhvcNAQELBQADggEBAGv8qZu4uaeoF6zsbumauz6ea6tdcWt+hGFuwGrb\\n' +\r\n        'tRbI85ucAmVSX06x59DJClsb4MPhL1XmqO3RxVMIVVfRwRHWOsZQPnXm8OYQ2sny\\n' +\r\n        'rYuFln1COOz1U/KflZjgJmxbn8x4lYiTPZRLarG0V/OsCmnLkQLPtEl/spMu8Un7\\n' +\r\n        'r3K8SkbWN80gg17Q8EV5mnFwycUx9xsTAaFItuG0en9bGsMgMmy+ZsDmTRbL+lcX\\n' +\r\n        'Fq8r4LT4QjrFz0shrzCwuuM4GmcYtBSxlacl+HxYEtAs5k10tmzRf6OYlY33tGf6\\n' +\r\n        '1tkYvKryxDPF/EDgGp/LiBwx6ixYMBfISoYASt4V/ylAlHA=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIICtTCCAjqgAwIBAgIRAK9BSZU6nIe6jqfODmuVctYwCgYIKoZIzj0EAwMwgZkx\\n' +\r\n        'CzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMu\\n' +\r\n        'MRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEyMDAGA1UEAwwpQW1h\\n' +\r\n        'em9uIFJEUyBjYS1jZW50cmFsLTEgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcM\\n' +\r\n        'B1NlYXR0bGUwIBcNMjEwNTIxMjIxMzA5WhgPMjEyMTA1MjEyMzEzMDlaMIGZMQsw\\n' +\r\n        'CQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjET\\n' +\r\n        'MBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMjAwBgNVBAMMKUFtYXpv\\n' +\r\n        'biBSRFMgY2EtY2VudHJhbC0xIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQHDAdT\\n' +\r\n        'ZWF0dGxlMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEUkEERcgxneT5H+P+fERcbGmf\\n' +\r\n        'bVx+M7rNWtgWUr6w+OBENebQA9ozTkeSg4c4M+qdYSObFqjxITdYxT1z/nHz1gyx\\n' +\r\n        'OKAhLjWu+nkbRefqy3RwXaWT680uUaAP6ccnkZOMo0IwQDAPBgNVHRMBAf8EBTAD\\n' +\r\n        'AQH/MB0GA1UdDgQWBBSN6fxlg0s5Wny08uRBYZcQ3TUoyzAOBgNVHQ8BAf8EBAMC\\n' +\r\n        'AYYwCgYIKoZIzj0EAwMDaQAwZgIxAORaz+MBVoFBTmZ93j2G2vYTwA6T5hWzBWrx\\n' +\r\n        'CrI54pKn5g6At56DBrkjrwZF5T1enAIxAJe/LZ9xpDkAdxDgGJFN8gZYLRWc0NRy\\n' +\r\n        'Rb4hihy5vj9L+w9uKc9VfEBIFuhT7Z3ljg==\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIEADCCAuigAwIBAgIQB/57HSuaqUkLaasdjxUdPjANBgkqhkiG9w0BAQsFADCB\\n' +\r\n        'mDELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\r\n        'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTEwLwYDVQQDDChB\\n' +\r\n        'bWF6b24gUkRTIGFwLXNvdXRoLTEgUm9vdCBDQSBSU0EyMDQ4IEcxMRAwDgYDVQQH\\n' +\r\n        'DAdTZWF0dGxlMCAXDTIxMDUxOTE3NDAzNFoYDzIwNjEwNTE5MTg0MDM0WjCBmDEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTEwLwYDVQQDDChBbWF6\\n' +\r\n        'b24gUkRTIGFwLXNvdXRoLTEgUm9vdCBDQSBSU0EyMDQ4IEcxMRAwDgYDVQQHDAdT\\n' +\r\n        'ZWF0dGxlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtbkaoVsUS76o\\n' +\r\n        'TgLFmcnaB8cswBk1M3Bf4IVRcwWT3a1HeJSnaJUqWHCJ+u3ip/zGVOYl0gN1MgBb\\n' +\r\n        'MuQRIJiB95zGVcIa6HZtx00VezDTr3jgGWRHmRjNVCCHGmxOZWvJjsIE1xavT/1j\\n' +\r\n        'QYV/ph4EZEIZ/qPq7e3rHohJaHDe23Z7QM9kbyqp2hANG2JtU/iUhCxqgqUHNozV\\n' +\r\n        'Zd0l5K6KnltZQoBhhekKgyiHqdTrH8fWajYl5seD71bs0Axowb+Oh0rwmrws3Db2\\n' +\r\n        'Dh+oc2PwREnjHeca9/1C6J2vhY+V0LGaJmnnIuOANrslx2+bgMlyhf9j0Bv8AwSi\\n' +\r\n        'dSWsobOhNQIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQb7vJT\\n' +\r\n        'VciLN72yJGhaRKLn6Krn2TAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZIhvcNAQELBQAD\\n' +\r\n        'ggEBAAxEj8N9GslReAQnNOBpGl8SLgCMTejQ6AW/bapQvzxrZrfVOZOYwp/5oV0f\\n' +\r\n        '9S1jcGysDM+DrmfUJNzWxq2Y586R94WtpH4UpJDGqZp+FuOVJL313te4609kopzO\\n' +\r\n        'lDdmd+8z61+0Au93wB1rMiEfnIMkOEyt7D2eTFJfJRKNmnPrd8RjimRDlFgcLWJA\\n' +\r\n        '3E8wca67Lz/G0eAeLhRHIXv429y8RRXDtKNNz0wA2RwURWIxyPjn1fHjA9SPDkeW\\n' +\r\n        'E1Bq7gZj+tBnrqz+ra3yjZ2blss6Ds3/uRY6NYqseFTZWmQWT7FolZEnT9vMUitW\\n' +\r\n        'I0VynUbShVpGf6946e0vgaaKw20=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIID/jCCAuagAwIBAgIQGyUVTaVjYJvWhroVEiHPpDANBgkqhkiG9w0BAQsFADCB\\n' +\r\n        'lzELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\r\n        'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdB\\n' +\r\n        'bWF6b24gUkRTIHVzLXdlc3QtMSBSb290IENBIFJTQTIwNDggRzExEDAOBgNVBAcM\\n' +\r\n        'B1NlYXR0bGUwIBcNMjEwNTE5MTkwNDA2WhgPMjA2MTA1MTkyMDA0MDZaMIGXMQsw\\n' +\r\n        'CQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjET\\n' +\r\n        'MBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMDAuBgNVBAMMJ0FtYXpv\\n' +\r\n        'biBSRFMgdXMtd2VzdC0xIFJvb3QgQ0EgUlNBMjA0OCBHMTEQMA4GA1UEBwwHU2Vh\\n' +\r\n        'dHRsZTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANhyXpJ0t4nigRDZ\\n' +\r\n        'EwNtFOem1rM1k8k5XmziHKDvDk831p7QsX9ZOxl/BT59Pu/P+6W6SvasIyKls1sW\\n' +\r\n        'FJIjFF+6xRQcpoE5L5evMgN/JXahpKGeQJPOX9UEXVW5B8yi+/dyUitFT7YK5LZA\\n' +\r\n        'MqWBN/LtHVPa8UmE88RCDLiKkqiv229tmwZtWT7nlMTTCqiAHMFcryZHx0pf9VPh\\n' +\r\n        'x/iPV8p2gBJnuPwcz7z1kRKNmJ8/cWaY+9w4q7AYlAMaq/rzEqDaN2XXevdpsYAK\\n' +\r\n        'TMMj2kji4x1oZO50+VPNfBl5ZgJc92qz1ocF95SAwMfOUsP8AIRZkf0CILJYlgzk\\n' +\r\n        '/6u6qZECAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUm5jfcS9o\\n' +\r\n        '+LwL517HpB6hG+PmpBswDgYDVR0PAQH/BAQDAgGGMA0GCSqGSIb3DQEBCwUAA4IB\\n' +\r\n        'AQAcQ6lsqxi63MtpGk9XK8mCxGRLCad51+MF6gcNz6i6PAqhPOoKCoFqdj4cEQTF\\n' +\r\n        'F8dCfa3pvfJhxV6RIh+t5FCk/y6bWT8Ls/fYKVo6FhHj57bcemWsw/Z0XnROdVfK\\n' +\r\n        'Yqbc7zvjCPmwPHEqYBhjU34NcY4UF9yPmlLOL8uO1JKXa3CAR0htIoW4Pbmo6sA4\\n' +\r\n        '6P0co/clW+3zzsQ92yUCjYmRNeSbdXbPfz3K/RtFfZ8jMtriRGuO7KNxp8MqrUho\\n' +\r\n        'HK8O0mlSUxGXBZMNicfo7qY8FD21GIPH9w5fp5oiAl7lqFzt3E3sCLD3IiVJmxbf\\n' +\r\n        'fUwpGd1XZBBSdIxysRLM6j48\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIICrTCCAjOgAwIBAgIQU+PAILXGkpoTcpF200VD/jAKBggqhkjOPQQDAzCBljEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMS8wLQYDVQQDDCZBbWF6\\n' +\r\n        'b24gUkRTIGFwLWVhc3QtMSBSb290IENBIEVDQzM4NCBHMTEQMA4GA1UEBwwHU2Vh\\n' +\r\n        'dHRsZTAgFw0yMTA1MjUyMTQ1MTFaGA8yMTIxMDUyNTIyNDUxMVowgZYxCzAJBgNV\\n' +\r\n        'BAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYD\\n' +\r\n        'VQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEvMC0GA1UEAwwmQW1hem9uIFJE\\n' +\r\n        'UyBhcC1lYXN0LTEgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcMB1NlYXR0bGUw\\n' +\r\n        'djAQBgcqhkjOPQIBBgUrgQQAIgNiAAT3tFKE8Kw1sGQAvNLlLhd8OcGhlc7MiW/s\\n' +\r\n        'NXm3pOiCT4vZpawKvHBzD76Kcv+ZZzHRxQEmG1/muDzZGlKR32h8AAj+NNO2Wy3d\\n' +\r\n        'CKTtYMiVF6Z2zjtuSkZQdjuQbe4eQ7qjQjBAMA8GA1UdEwEB/wQFMAMBAf8wHQYD\\n' +\r\n        'VR0OBBYEFAiSQOp16Vv0Ohpvqcbd2j5RmhYNMA4GA1UdDwEB/wQEAwIBhjAKBggq\\n' +\r\n        'hkjOPQQDAwNoADBlAjBVsi+5Ape0kOhMt/WFkANkslD4qXA5uqhrfAtH29Xzz2NV\\n' +\r\n        'tR7akiA771OaIGB/6xsCMQCZt2egCtbX7J0WkuZ2KivTh66jecJr5DHvAP4X2xtS\\n' +\r\n        'F/5pS+AUhcKTEGjI9jDH3ew=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIICuDCCAj2gAwIBAgIQT5mGlavQzFHsB7hV6Mmy6TAKBggqhkjOPQQDAzCBmzEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTQwMgYDVQQDDCtBbWF6\\n' +\r\n        'b24gUkRTIGFwLXNvdXRoZWFzdC0yIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQH\\n' +\r\n        'DAdTZWF0dGxlMCAXDTIxMDUyNDIwNTAxNVoYDzIxMjEwNTI0MjE1MDE1WjCBmzEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTQwMgYDVQQDDCtBbWF6\\n' +\r\n        'b24gUkRTIGFwLXNvdXRoZWFzdC0yIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQH\\n' +\r\n        'DAdTZWF0dGxlMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEcm4BBBjYK7clwm0HJRWS\\n' +\r\n        'flt3iYwoJbIXiXn9c1y3E+Vb7bmuyKhS4eO8mwO4GefUcXObRfoHY2TZLhMJLVBQ\\n' +\r\n        '7MN2xDc0RtZNj07BbGD3VAIFRTDX0mH9UNYd0JQM3t/Oo0IwQDAPBgNVHRMBAf8E\\n' +\r\n        'BTADAQH/MB0GA1UdDgQWBBRrd5ITedfAwrGo4FA9UaDaGFK3rjAOBgNVHQ8BAf8E\\n' +\r\n        'BAMCAYYwCgYIKoZIzj0EAwMDaQAwZgIxAPBNqmVv1IIA3EZyQ6XuVf4gj79/DMO8\\n' +\r\n        'bkicNS1EcBpUqbSuU4Zwt2BYc8c/t7KVOQIxAOHoWkoKZPiKyCxfMtJpCZySUG+n\\n' +\r\n        'sXgB/LOyWE5BJcXUfm+T1ckeNoWeUUMOLmnJjg==\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIECTCCAvGgAwIBAgIRAJcDeinvdNrDQBeJ8+t38WQwDQYJKoZIhvcNAQELBQAw\\n' +\r\n        'gZwxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\r\n        'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE1MDMGA1UEAwws\\n' +\r\n        'QW1hem9uIFJEUyBhcC1zb3V0aGVhc3QtNCBSb290IENBIFJTQTIwNDggRzExEDAO\\n' +\r\n        'BgNVBAcMB1NlYXR0bGUwIBcNMjIwNTI1MTY0OTE2WhgPMjA2MjA1MjUxNzQ5MTZa\\n' +\r\n        'MIGcMQswCQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywg\\n' +\r\n        'SW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExNTAzBgNVBAMM\\n' +\r\n        'LEFtYXpvbiBSRFMgYXAtc291dGhlYXN0LTQgUm9vdCBDQSBSU0EyMDQ4IEcxMRAw\\n' +\r\n        'DgYDVQQHDAdTZWF0dGxlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\\n' +\r\n        'k8DBNkr9tMoIM0NHoFiO7cQfSX0cOMhEuk/CHt0fFx95IBytx7GHCnNzpM27O5z6\\n' +\r\n        'x6iRhfNnx+B6CrGyCzOjxvPizneY+h+9zfvNz9jj7L1I2uYMuiNyOKR6FkHR46CT\\n' +\r\n        '1CiArfVLLPaTqgD/rQjS0GL2sLHS/0dmYipzynnZcs613XT0rAWdYDYgxDq7r/Yi\\n' +\r\n        'Xge5AkWQFkMUq3nOYDLCyGGfQqWKkwv6lZUHLCDKf+Y0Uvsrj8YGCI1O8mF0qPCQ\\n' +\r\n        'lmlfaDvbuBu1AV+aabmkvyFj3b8KRIlNLEtQ4N8KGYR2Jdb82S4YUGIOAt4wuuFt\\n' +\r\n        '1B7AUDLk3V/u+HTWiwfoLQIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MB0GA1Ud\\n' +\r\n        'DgQWBBSNpcjz6ArWBtAA+Gz6kyyZxrrgdDAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZI\\n' +\r\n        'hvcNAQELBQADggEBAGJEd7UgOzHYIcQRSF7nSYyjLROyalaIV9AX4WXW/Cqlul1c\\n' +\r\n        'MblP5etDZm7A/thliZIWAuyqv2bNicmS3xKvNy6/QYi1YgxZyy/qwJ3NdFl067W0\\n' +\r\n        't8nGo29B+EVK94IPjzFHWShuoktIgp+dmpijB7wkTIk8SmIoe9yuY4+hzgqk+bo4\\n' +\r\n        'ms2SOXSN1DoQ75Xv+YmztbnZM8MuWhL1T7hA4AMorzTQLJ9Pof8SpSdMHeDsHp0R\\n' +\r\n        '01jogNFkwy25nw7cL62nufSuH2fPYGWXyNDg+y42wKsKWYXLRgUQuDVEJ2OmTFMB\\n' +\r\n        'T0Vf7VuNijfIA9hkN2d3K53m/9z5WjGPSdOjGhg=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIID/jCCAuagAwIBAgIQRiwspKyrO0xoxDgSkqLZczANBgkqhkiG9w0BAQsFADCB\\n' +\r\n        'lzELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\r\n        'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdB\\n' +\r\n        'bWF6b24gUkRTIHVzLXdlc3QtMiBSb290IENBIFJTQTIwNDggRzExEDAOBgNVBAcM\\n' +\r\n        'B1NlYXR0bGUwIBcNMjEwNTI0MjE1OTAwWhgPMjA2MTA1MjQyMjU5MDBaMIGXMQsw\\n' +\r\n        'CQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjET\\n' +\r\n        'MBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMDAuBgNVBAMMJ0FtYXpv\\n' +\r\n        'biBSRFMgdXMtd2VzdC0yIFJvb3QgQ0EgUlNBMjA0OCBHMTEQMA4GA1UEBwwHU2Vh\\n' +\r\n        'dHRsZTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL53Jk3GsKiu+4bx\\n' +\r\n        'jDfsevWbwPCNJ3H08Zp7GWhvI3Tgi39opfHYv2ku2BKFjK8N2L6RvNPSR8yplv5j\\n' +\r\n        'Y0tK0U+XVNl8o0ibhqRDhbTuh6KL8CFINWYzAajuxFS+CF0U6c1Q3tXLBdALxA7l\\n' +\r\n        'FlXJ71QrP06W31kRe7kvgrvO7qWU3/OzUf9qYw4LSiR1/VkvvRCTqcVNw09clw/M\\n' +\r\n        'Jbw6FSgweN65M9j7zPbjGAXSHkXyxH1Erin2fa+B9PE4ZDgX9cp2C1DHewYJQL/g\\n' +\r\n        'SepwwcudVNRN1ibKH7kpMrgPnaNIVNx5sXVsTjk6q2ZqYw3SVHegltJpLy/cZReP\\n' +\r\n        'mlivF2kCAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUmTcQd6o1\\n' +\r\n        'CuS65MjBrMwQ9JJjmBwwDgYDVR0PAQH/BAQDAgGGMA0GCSqGSIb3DQEBCwUAA4IB\\n' +\r\n        'AQAKSDSIzl956wVddPThf2VAzI8syw9ngSwsEHZvxVGHBvu5gg618rDyguVCYX9L\\n' +\r\n        '4Kw/xJrk6S3qxOS2ZDyBcOpsrBskgahDFIunzoRP3a18ARQVq55LVgfwSDQiunch\\n' +\r\n        'Bd05cnFGLoiLkR5rrkgYaP2ftn3gRBRaf0y0S3JXZ2XB3sMZxGxavYq9mfiEcwB0\\n' +\r\n        'LMTMQ1NYzahIeG6Jm3LqRqR8HkzP/Ztq4dT2AtSLvFebbNMiWqeqT7OcYp94HTYT\\n' +\r\n        'zqrtaVdUg9bwyAUCDgy0GV9RHDIdNAOInU/4LEETovrtuBU7Z1q4tcHXvN6Hd1H8\\n' +\r\n        'gMb0mCG5I393qW5hFsA/diFb\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIECTCCAvGgAwIBAgIRAPQAvihfjBg/JDbj6U64K98wDQYJKoZIhvcNAQELBQAw\\n' +\r\n        'gZwxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\r\n        'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE1MDMGA1UEAwws\\n' +\r\n        'QW1hem9uIFJEUyBhcC1ub3J0aGVhc3QtMiBSb290IENBIFJTQTIwNDggRzExEDAO\\n' +\r\n        'BgNVBAcMB1NlYXR0bGUwIBcNMjEwNTIwMTYyODQxWhgPMjA2MTA1MjAxNzI4NDFa\\n' +\r\n        'MIGcMQswCQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywg\\n' +\r\n        'SW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExNTAzBgNVBAMM\\n' +\r\n        'LEFtYXpvbiBSRFMgYXAtbm9ydGhlYXN0LTIgUm9vdCBDQSBSU0EyMDQ4IEcxMRAw\\n' +\r\n        'DgYDVQQHDAdTZWF0dGxlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\\n' +\r\n        'vJ9lgyksCxkBlY40qOzI1TCj/Q0FVGuPL/Z1Mw2YN0l+41BDv0FHApjTUkIKOeIP\\n' +\r\n        'nwDwpXTa3NjYbk3cOZ/fpH2rYJ++Fte6PNDGPgKppVCUh6x3jiVZ1L7wOgnTdK1Q\\n' +\r\n        'Trw8440IDS5eLykRHvz8OmwvYDl0iIrt832V0QyOlHTGt6ZJ/aTQKl12Fy3QBLv7\\n' +\r\n        'stClPzvHTrgWqVU6uidSYoDtzHbU7Vda7YH0wD9IUoMBf7Tu0rqcE4uH47s2XYkc\\n' +\r\n        'SdLEoOg/Ngs7Y9B1y1GCyj3Ux7hnyvCoRTw014QyNB7dTatFMDvYlrRDGG14KeiU\\n' +\r\n        'UL7Vo/+EejWI31eXNLw84wIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MB0GA1Ud\\n' +\r\n        'DgQWBBQkgTWFsNg6wA3HbbihDQ4vpt1E2zAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZI\\n' +\r\n        'hvcNAQELBQADggEBAGz1Asiw7hn5WYUj8RpOCzpE0h/oBZcnxP8wulzZ5Xd0YxWO\\n' +\r\n        '0jYUcUk3tTQy1QvoY+Q5aCjg6vFv+oFBAxkib/SmZzp4xLisZIGlzpJQuAgRkwWA\\n' +\r\n        '6BVMgRS+AaOMQ6wKPgz1x4v6T0cIELZEPq3piGxvvqkcLZKdCaeC3wCS6sxuafzZ\\n' +\r\n        '4qA3zMwWuLOzRftgX2hQto7d/2YkRXga7jSvQl3id/EI+xrYoH6zIWgjdU1AUaNq\\n' +\r\n        'NGT7DIo47vVMfnd9HFZNhREsd4GJE83I+JhTqIxiKPNxrKgESzyADmNPt0gXDnHo\\n' +\r\n        'tbV1pMZz5HpJtjnP/qVZhEK5oB0tqlKPv9yx074=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIICuTCCAj6gAwIBAgIRAKp1Rn3aL/g/6oiHVIXtCq8wCgYIKoZIzj0EAwMwgZsx\\n' +\r\n        'CzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMu\\n' +\r\n        'MRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE0MDIGA1UEAwwrQW1h\\n' +\r\n        'em9uIFJEUyBhcC1ub3J0aGVhc3QtMyBSb290IENBIEVDQzM4NCBHMTEQMA4GA1UE\\n' +\r\n        'BwwHU2VhdHRsZTAgFw0yMTA1MjQyMDMyMTdaGA8yMTIxMDUyNDIxMzIxN1owgZsx\\n' +\r\n        'CzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMu\\n' +\r\n        'MRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE0MDIGA1UEAwwrQW1h\\n' +\r\n        'em9uIFJEUyBhcC1ub3J0aGVhc3QtMyBSb290IENBIEVDQzM4NCBHMTEQMA4GA1UE\\n' +\r\n        'BwwHU2VhdHRsZTB2MBAGByqGSM49AgEGBSuBBAAiA2IABGTYWPILeBJXfcL3Dz4z\\n' +\r\n        'EWMUq78xB1HpjBwHoTURYfcMd5r96BTVG6yaUBWnAVCMeeD6yTG9a1eVGNhG14Hk\\n' +\r\n        'ZAEjgLiNB7RRbEG5JZ/XV7W/vODh09WCst2y9SLKsdgeAaNCMEAwDwYDVR0TAQH/\\n' +\r\n        'BAUwAwEB/zAdBgNVHQ4EFgQUoE0qZHmDCDB+Bnm8GUa/evpfPwgwDgYDVR0PAQH/\\n' +\r\n        'BAQDAgGGMAoGCCqGSM49BAMDA2kAMGYCMQCnil5MMwhY3qoXv0xvcKZGxGPaBV15\\n' +\r\n        '0CCssCKn0oVtdJQfJQ3Jrf3RSaEyijXIJsoCMQC35iJi4cWoNX3N/qfgnHohW52O\\n' +\r\n        'B5dg0DYMqy5cNZ40+UcAanRMyqNQ6P7fy3umGco=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIICtzCCAj2gAwIBAgIQPXnDTPegvJrI98qz8WxrMjAKBggqhkjOPQQDAzCBmzEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTQwMgYDVQQDDCtBbWF6\\n' +\r\n        'b24gUkRTIEJldGEgdXMtZWFzdC0xIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQH\\n' +\r\n        'DAdTZWF0dGxlMCAXDTIxMDUxODIxNDAxMloYDzIxMjEwNTE4MjI0MDEyWjCBmzEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTQwMgYDVQQDDCtBbWF6\\n' +\r\n        'b24gUkRTIEJldGEgdXMtZWFzdC0xIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQH\\n' +\r\n        'DAdTZWF0dGxlMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEI0sR7gwutK5AB46hM761\\n' +\r\n        'gcLTGBIYlURSEoM1jcBwy56CL+3CJKZwLLyJ7qoOKfWbu5GsVLUTWS8MV6Nw33cx\\n' +\r\n        '2KQD2svb694wi+Px2f4n9+XHkEFQw8BbiodDD7RZA70fo0IwQDAPBgNVHRMBAf8E\\n' +\r\n        'BTADAQH/MB0GA1UdDgQWBBTQSioOvnVLEMXwNSDg+zgln/vAkjAOBgNVHQ8BAf8E\\n' +\r\n        'BAMCAYYwCgYIKoZIzj0EAwMDaAAwZQIxAMwu1hqm5Bc98uE/E0B5iMYbBQ4kpMxO\\n' +\r\n        'tP8FTfz5UR37HUn26nXE0puj6S/Ffj4oJgIwXI7s2c26tFQeqzq6u3lrNJHp5jC9\\n' +\r\n        'Uxlo/hEJOLoDj5jnpxo8dMAtCNoQPaHdfL0P\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIICrjCCAjWgAwIBAgIQGKVv+5VuzEZEBzJ+bVfx2zAKBggqhkjOPQQDAzCBlzEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdBbWF6\\n' +\r\n        'b24gUkRTIGFwLXNvdXRoLTEgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcMB1Nl\\n' +\r\n        'YXR0bGUwIBcNMjEwNTE5MTc1MDU5WhgPMjEyMTA1MTkxODUwNTlaMIGXMQswCQYD\\n' +\r\n        'VQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEG\\n' +\r\n        'A1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMDAuBgNVBAMMJ0FtYXpvbiBS\\n' +\r\n        'RFMgYXAtc291dGgtMSBSb290IENBIEVDQzM4NCBHMTEQMA4GA1UEBwwHU2VhdHRs\\n' +\r\n        'ZTB2MBAGByqGSM49AgEGBSuBBAAiA2IABMqdLJ0tZF/DGFZTKZDrGRJZID8ivC2I\\n' +\r\n        'JRCYTWweZKCKSCAzoiuGGHzJhr5RlLHQf/QgmFcgXsdmO2n3CggzhA4tOD9Ip7Lk\\n' +\r\n        'P05eHd2UPInyPCHRgmGjGb0Z+RdQ6zkitKNCMEAwDwYDVR0TAQH/BAUwAwEB/zAd\\n' +\r\n        'BgNVHQ4EFgQUC1yhRgVqU5bR8cGzOUCIxRpl4EYwDgYDVR0PAQH/BAQDAgGGMAoG\\n' +\r\n        'CCqGSM49BAMDA2cAMGQCMG0c/zLGECRPzGKJvYCkpFTCUvdP4J74YP0v/dPvKojL\\n' +\r\n        't/BrR1Tg4xlfhaib7hPc7wIwFvgqHes20CubQnZmswbTKLUrgSUW4/lcKFpouFd2\\n' +\r\n        't2/ewfi/0VhkeUW+IiHhOMdU\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIGCTCCA/GgAwIBAgIRAOXxJuyXVkbfhZCkS/dOpfEwDQYJKoZIhvcNAQEMBQAw\\n' +\r\n        'gZwxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\r\n        'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE1MDMGA1UEAwws\\n' +\r\n        'QW1hem9uIFJEUyBhcC1ub3J0aGVhc3QtMSBSb290IENBIFJTQTQwOTYgRzExEDAO\\n' +\r\n        'BgNVBAcMB1NlYXR0bGUwIBcNMjEwNTI1MjE1OTEwWhgPMjEyMTA1MjUyMjU5MTBa\\n' +\r\n        'MIGcMQswCQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywg\\n' +\r\n        'SW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExNTAzBgNVBAMM\\n' +\r\n        'LEFtYXpvbiBSRFMgYXAtbm9ydGhlYXN0LTEgUm9vdCBDQSBSU0E0MDk2IEcxMRAw\\n' +\r\n        'DgYDVQQHDAdTZWF0dGxlMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA\\n' +\r\n        'xiP4RDYm4tIS12hGgn1csfO8onQDmK5SZDswUpl0HIKXOUVVWkHNlINkVxbdqpqH\\n' +\r\n        'FhbyZmNN6F/EWopotMDKe1B+NLrjNQf4zefv2vyKvPHJXhxoKmfyuTd5Wk8k1F7I\\n' +\r\n        'lNwLQzznB+ElhrLIDJl9Ro8t31YBBNFRGAGEnxyACFGcdkjlsa52UwfYrwreEg2l\\n' +\r\n        'gW5AzqHgjFfj9QRLydeU/n4bHm0F1adMsV7P3rVwilcUlqsENDwXnWyPEyv3sw6F\\n' +\r\n        'wNemLEs1129mB77fwvySb+lLNGsnzr8w4wdioZ74co+T9z2ca+eUiP+EQccVw1Is\\n' +\r\n        'D4Fh57IjPa6Wuc4mwiUYKkKY63+38aCfEWb0Qoi+zW+mE9nek6MOQ914cN12u5LX\\n' +\r\n        'dBoYopphRO5YmubSN4xcBy405nIdSdbrAVWwxXnVVyjqjknmNeqQsPZaxAhdoKhV\\n' +\r\n        'AqxNr8AUAdOAO6Sz3MslmcLlDXFihrEEOeUbpg/m1mSUUHGbu966ajTG1FuEHHwS\\n' +\r\n        '7WB52yxoJo/tHvt9nAWnh3uH5BHmS8zn6s6CGweWKbX5yICnZ1QFR1e4pogxX39v\\n' +\r\n        'XD6YcNOO+Vn+HY4nXmjgSYVC7l+eeP8eduMg1xJujzjrbmrXU+d+cBObgdTOAlpa\\n' +\r\n        'JFHaGwYw1osAwPCo9cZ2f04yitBfj9aPFia8ASKldakCAwEAAaNCMEAwDwYDVR0T\\n' +\r\n        'AQH/BAUwAwEB/zAdBgNVHQ4EFgQUqKS+ltlior0SyZKYAkJ/efv55towDgYDVR0P\\n' +\r\n        'AQH/BAQDAgGGMA0GCSqGSIb3DQEBDAUAA4ICAQAdElvp8bW4B+Cv+1WSN87dg6TN\\n' +\r\n        'wGyIjJ14/QYURgyrZiYpUmZpj+/pJmprSWXu4KNyqHftmaidu7cdjL5nCAvAfnY5\\n' +\r\n        '/6eDDbX4j8Gt9fb/6H9y0O0dn3mUPSEKG0crR+JRFAtPhn/2FNvst2P82yguWLv0\\n' +\r\n        'pHjHVUVcq+HqDMtUIJsTPYjSh9Iy77Q6TOZKln9dyDOWJpCSkiUWQtMAKbCSlvzd\\n' +\r\n        'zTs/ahqpT+zLfGR1SR+T3snZHgQnbnemmz/XtlKl52NxccARwfcEEKaCRQyGq/pR\\n' +\r\n        '0PVZasyJS9JY4JfQs4YOdeOt4UMZ8BmW1+BQWGSkkb0QIRl8CszoKofucAlqdPcO\\n' +\r\n        'IT/ZaMVhI580LFGWiQIizWFskX6lqbCyHqJB3LDl8gJISB5vNTHOHpvpMOMs5PYt\\n' +\r\n        'cRl5Mrksx5MKMqG7y5R734nMlZxQIHjL5FOoOxTBp9KeWIL/Ib89T2QDaLw1SQ+w\\n' +\r\n        'ihqWBJ4ZdrIMWYpP3WqM+MXWk7WAem+xsFJdR+MDgOOuobVQTy5dGBlPks/6gpjm\\n' +\r\n        'rO9TjfQ36ppJ3b7LdKUPeRfnYmlR5RU4oyYJ//uLbClI443RZAgxaCXX/nyc12lr\\n' +\r\n        'eVLUMNF2abLX4/VF63m2/Z9ACgMRfqGshPssn1NN33OonrotQoj4S3N9ZrjvzKt8\\n' +\r\n        'iHcaqd60QKpfiH2A3A==\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIICuDCCAj2gAwIBAgIQPaVGRuu86nh/ylZVCLB0MzAKBggqhkjOPQQDAzCBmzEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTQwMgYDVQQDDCtBbWF6\\n' +\r\n        'b24gUkRTIGFwLW5vcnRoZWFzdC0xIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQH\\n' +\r\n        'DAdTZWF0dGxlMCAXDTIxMDUyNTIyMDMxNloYDzIxMjEwNTI1MjMwMzE2WjCBmzEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTQwMgYDVQQDDCtBbWF6\\n' +\r\n        'b24gUkRTIGFwLW5vcnRoZWFzdC0xIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQH\\n' +\r\n        'DAdTZWF0dGxlMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEexNURoB9KE93MEtEAlJG\\n' +\r\n        'obz4LS/pD2hc8Gczix1WhVvpJ8bN5zCDXaKdnDMCebetyRQsmQ2LYlfmCwpZwSDu\\n' +\r\n        '0zowB11Pt3I5Avu2EEcuKTlKIDMBeZ1WWuOd3Tf7MEAMo0IwQDAPBgNVHRMBAf8E\\n' +\r\n        'BTADAQH/MB0GA1UdDgQWBBSaYbZPBvFLikSAjpa8mRJvyArMxzAOBgNVHQ8BAf8E\\n' +\r\n        'BAMCAYYwCgYIKoZIzj0EAwMDaQAwZgIxAOEJkuh3Zjb7Ih/zuNRd1RBqmIYcnyw0\\n' +\r\n        'nwUZczKXry+9XebYj3VQxSRNadrarPWVqgIxAMg1dyGoDAYjY/L/9YElyMnvHltO\\n' +\r\n        'PwpJShmqHvCLc/mXMgjjYb/akK7yGthvW6j/uQ==\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIGCDCCA/CgAwIBAgIQChu3v5W1Doil3v6pgRIcVzANBgkqhkiG9w0BAQwFADCB\\n' +\r\n        'nDELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\r\n        'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTUwMwYDVQQDDCxB\\n' +\r\n        'bWF6b24gUkRTIEJldGEgdXMtZWFzdC0xIFJvb3QgQ0EgUlNBNDA5NiBHMTEQMA4G\\n' +\r\n        'A1UEBwwHU2VhdHRsZTAgFw0yMTA1MTgyMTM0MTVaGA8yMTIxMDUxODIyMzQxNVow\\n' +\r\n        'gZwxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\r\n        'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE1MDMGA1UEAwws\\n' +\r\n        'QW1hem9uIFJEUyBCZXRhIHVzLWVhc3QtMSBSb290IENBIFJTQTQwOTYgRzExEDAO\\n' +\r\n        'BgNVBAcMB1NlYXR0bGUwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQC1\\n' +\r\n        'FUGQ5tf3OwpDR6hGBxhUcrkwKZhaXP+1St1lSOQvjG8wXT3RkKzRGMvb7Ee0kzqI\\n' +\r\n        'mzKKe4ASIhtV3UUWdlNmP0EA3XKnif6N79MismTeGkDj75Yzp5A6tSvqByCgxIjK\\n' +\r\n        'JqpJrch3Dszoyn8+XhwDxMZtkUa5nQVdJgPzJ6ltsQ8E4SWLyLtTu0S63jJDkqYY\\n' +\r\n        'S7cQblk7y7fel+Vn+LS5dGTdRRhMvSzEnb6mkVBaVzRyVX90FNUED06e8q+gU8Ob\\n' +\r\n        'htvQlf9/kRzHwRAdls2YBhH40ZeyhpUC7vdtPwlmIyvW5CZ/QiG0yglixnL6xahL\\n' +\r\n        'pbmTuTSA/Oqz4UGQZv2WzHe1lD2gRHhtFX2poQZeNQX8wO9IcUhrH5XurW/G9Xwl\\n' +\r\n        'Sat9CMPERQn4KC3HSkat4ir2xaEUrjfg6c4XsGyh2Pk/LZ0gLKum0dyWYpWP4JmM\\n' +\r\n        'RQNjrInXPbMhzQObozCyFT7jYegS/3cppdyy+K1K7434wzQGLU1gYXDKFnXwkX8R\\n' +\r\n        'bRKgx2pHNbH5lUddjnNt75+e8m83ygSq/ZNBUz2Ur6W2s0pl6aBjwaDES4VfWYlI\\n' +\r\n        'jokcmrGvJNDfQWygb1k00eF2bzNeNCHwgWsuo3HSxVgc/WGsbcGrTlDKfz+g3ich\\n' +\r\n        'bXUeUidPhRiv5UQIVCLIHpHuin3bj9lQO/0t6p+tAQIDAQABo0IwQDAPBgNVHRMB\\n' +\r\n        'Af8EBTADAQH/MB0GA1UdDgQWBBSFmMBgm5IsRv3hLrvDPIhcPweXYTAOBgNVHQ8B\\n' +\r\n        'Af8EBAMCAYYwDQYJKoZIhvcNAQEMBQADggIBAAa2EuozymOsQDJlEi7TqnyA2OhT\\n' +\r\n        'GXPfYqCyMJVkfrqNgcnsNpCAiNEiZbb+8sIPXnT8Ay8hrwJYEObJ5b7MHXpLuyft\\n' +\r\n        'z0Pu1oFLKnQxKjNxrIsCvaB4CRRdYjm1q7EqGhMGv76se9stOxkOqO9it31w/LoU\\n' +\r\n        'ENDk7GLsSqsV1OzYLhaH8t+MaNP6rZTSNuPrHwbV3CtBFl2TAZ7iKgKOhdFz1Hh9\\n' +\r\n        'Pez0lG+oKi4mHZ7ajov6PD0W7njn5KqzCAkJR6OYmlNVPjir+c/vUtEs0j+owsMl\\n' +\r\n        'g7KE5g4ZpTRShyh5BjCFRK2tv0tkqafzNtxrKC5XNpEkqqVTCnLcKG+OplIEadtr\\n' +\r\n        'C7UWf4HyhCiR+xIyxFyR05p3uY/QQU/5uza7GlK0J+U1sBUytx7BZ+Fo8KQfPPqV\\n' +\r\n        'CqDCaYUksoJcnJE/KeoksyqNQys7sDGJhkd0NeUGDrFLKHSLhIwAMbEWnqGxvhli\\n' +\r\n        'E7sP2E5rI/I9Y9zTbLIiI8pfeZlFF8DBdoP/Hzg8pqsiE/yiXSFTKByDwKzGwNqz\\n' +\r\n        'F0VoFdIZcIbLdDbzlQitgGpJtvEL7HseB0WH7B2PMMD8KPJlYvPveO3/6OLzCsav\\n' +\r\n        '+CAkvk47NQViKMsUTKOA0JDCW+u981YRozxa3K081snhSiSe83zIPBz1ikldXxO9\\n' +\r\n        '6YYLNPRrj3mi9T/f\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIICrjCCAjSgAwIBAgIRAMkvdFnVDb0mWWFiXqnKH68wCgYIKoZIzj0EAwMwgZYx\\n' +\r\n        'CzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMu\\n' +\r\n        'MRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEvMC0GA1UEAwwmQW1h\\n' +\r\n        'em9uIFJEUyB1cy13ZXN0LTEgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcMB1Nl\\n' +\r\n        'YXR0bGUwIBcNMjEwNTE5MTkxMzI0WhgPMjEyMTA1MTkyMDEzMjRaMIGWMQswCQYD\\n' +\r\n        'VQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEG\\n' +\r\n        'A1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExLzAtBgNVBAMMJkFtYXpvbiBS\\n' +\r\n        'RFMgdXMtd2VzdC0xIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQHDAdTZWF0dGxl\\n' +\r\n        'MHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEy86DB+9th/0A5VcWqMSWDxIUblWTt/R0\\n' +\r\n        'ao6Z2l3vf2YDF2wt1A2NIOGpfQ5+WAOJO/IQmnV9LhYo+kacB8sOnXdQa6biZZkR\\n' +\r\n        'IyouUfikVQAKWEJnh1Cuo5YMM4E2sUt5o0IwQDAPBgNVHRMBAf8EBTADAQH/MB0G\\n' +\r\n        'A1UdDgQWBBQ8u3OnecANmG8OoT7KLWDuFzZwBTAOBgNVHQ8BAf8EBAMCAYYwCgYI\\n' +\r\n        'KoZIzj0EAwMDaAAwZQIwQ817qkb7mWJFnieRAN+m9W3E0FLVKaV3zC5aYJUk2fcZ\\n' +\r\n        'TaUx3oLp3jPLGvY5+wgeAjEA6wAicAki4ZiDfxvAIuYiIe1OS/7H5RA++R8BH6qG\\n' +\r\n        'iRzUBM/FItFpnkus7u/eTkvo\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIICrzCCAjWgAwIBAgIQS/+Ryfgb/IOVEa1pWoe8oTAKBggqhkjOPQQDAzCBlzEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdBbWF6\\n' +\r\n        'b24gUkRTIGFwLXNvdXRoLTIgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcMB1Nl\\n' +\r\n        'YXR0bGUwIBcNMjIwNjA2MjE1NDQyWhgPMjEyMjA2MDYyMjU0NDJaMIGXMQswCQYD\\n' +\r\n        'VQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEG\\n' +\r\n        'A1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMDAuBgNVBAMMJ0FtYXpvbiBS\\n' +\r\n        'RFMgYXAtc291dGgtMiBSb290IENBIEVDQzM4NCBHMTEQMA4GA1UEBwwHU2VhdHRs\\n' +\r\n        'ZTB2MBAGByqGSM49AgEGBSuBBAAiA2IABDsX6fhdUWBQpYTdseBD/P3s96Dtw2Iw\\n' +\r\n        'OrXKNToCnmX5nMkUGdRn9qKNiz1pw3EPzaPxShbYwQ7LYP09ENK/JN4QQjxMihxC\\n' +\r\n        'jLFxS85nhBQQQGRCWikDAe38mD8fSvREQKNCMEAwDwYDVR0TAQH/BAUwAwEB/zAd\\n' +\r\n        'BgNVHQ4EFgQUIh1xZiseQYFjPYKJmGbruAgRH+AwDgYDVR0PAQH/BAQDAgGGMAoG\\n' +\r\n        'CCqGSM49BAMDA2gAMGUCMFudS4zLy+UUGrtgNLtRMcu/DZ9BUzV4NdHxo0bkG44O\\n' +\r\n        'thnjl4+wTKI6VbyAbj2rkgIxAOHps8NMITU5DpyiMnKTxV8ubb/WGHrLl0BjB8Lw\\n' +\r\n        'ETVJk5DNuZvsIIcm7ykk6iL4Tw==\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIGBDCCA+ygAwIBAgIQDcEmNIAVrDpUw5cH5ynutDANBgkqhkiG9w0BAQwFADCB\\n' +\r\n        'mjELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\r\n        'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTMwMQYDVQQDDCpB\\n' +\r\n        'bWF6b24gUkRTIG1lLWNlbnRyYWwtMSBSb290IENBIFJTQTQwOTYgRzExEDAOBgNV\\n' +\r\n        'BAcMB1NlYXR0bGUwIBcNMjIwNTA3MDA0MDIzWhgPMjEyMjA1MDcwMTQwMjNaMIGa\\n' +\r\n        'MQswCQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5j\\n' +\r\n        'LjETMBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMzAxBgNVBAMMKkFt\\n' +\r\n        'YXpvbiBSRFMgbWUtY2VudHJhbC0xIFJvb3QgQ0EgUlNBNDA5NiBHMTEQMA4GA1UE\\n' +\r\n        'BwwHU2VhdHRsZTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAKvADk8t\\n' +\r\n        'Fl9bFlU5sajLPPDSOUpPAkKs6iPlz+27o1GJC88THcOvf3x0nVAcu9WYe9Qaas+4\\n' +\r\n        'j4a0vv51agqyODRD/SNi2HnqW7DbtLPAm6KBHe4twl28ItB/JD5g7u1oPAHFoXMS\\n' +\r\n        'cH1CZEAs5RtlZGzJhcBXLFsHNv/7+SCLyZ7+2XFh9OrtgU4wMzkHoRNndhfwV5bu\\n' +\r\n        '17bPTwuH+VxH37zXf1mQ/KjhuJos0C9dL0FpjYBAuyZTAWhZKs8dpSe4DI544z4w\\n' +\r\n        'gkwUB4bC2nA1TBzsywEAHyNuZ/xRjNpWvx0ToWAA2iFJqC3VO3iKcnBplMvaUuMt\\n' +\r\n        'jwzVSNBnKcoabXCZL2XDLt4YTZR8FSwz05IvsmwcPB7uNTBXq3T9sjejW8QQK3vT\\n' +\r\n        'tzyfLq4jKmQE7PoS6cqYm+hEPm2hDaC/WP9bp3FdEJxZlPH26fq1b7BWYWhQ9pBA\\n' +\r\n        'Nv9zTnzdR1xohTyOJBUFQ81ybEzabqXqVXUIANqIOaNcTB09/sLJ7+zuMhp3mwBu\\n' +\r\n        'LtjfJv8PLuT1r63bU3seROhKA98b5KfzjvbvPSg3vws78JQyoYGbqNyDfyjVjg3U\\n' +\r\n        'v//AdVuPie6PNtdrW3upZY4Qti5IjP9e3kimaJ+KAtTgMRG56W0WxD3SP7+YGGbG\\n' +\r\n        'KhntDOkKsN39hLpn9UOafTIqFu7kIaueEy/NAgMBAAGjQjBAMA8GA1UdEwEB/wQF\\n' +\r\n        'MAMBAf8wHQYDVR0OBBYEFHAems86dTwdZbLe8AaPy3kfIUVoMA4GA1UdDwEB/wQE\\n' +\r\n        'AwIBhjANBgkqhkiG9w0BAQwFAAOCAgEAOBHpp0ICx81kmeoBcZTrMdJs2gnhcd85\\n' +\r\n        'FoSCjXx9H5XE5rmN/lQcxxOgj8hr3uPuLdLHu+i6THAyzjrl2NA1FWiqpfeECGmy\\n' +\r\n        '0jm7iZsYORgGQYp/VKnDrwnKNSqlZvOuRr0kfUexwFlr34Y4VmupvEOK/RdGsd3S\\n' +\r\n        '+3hiemcHse9ST/sJLHx962AWMkN86UHPscJEe4+eT3f2Wyzg6La8ARwdWZSNS+WH\\n' +\r\n        'ZfybrncMmuiXuUdHv9XspPsqhKgtHhcYeXOGUtrwQPLe3+VJZ0LVxhlTWr9951GZ\\n' +\r\n        'GfmWwTV/9VsyKVaCFIXeQ6L+gjcKyEzYF8wpMtQlSc7FFqwgC4bKxvMBSaRy88Nr\\n' +\r\n        'lV2+tJD/fr8zGUeBK44Emon0HKDBWGX+/Hq1ZIv0Da0S+j6LbA4fusWxtGfuGha+\\n' +\r\n        'luhHgVInCpALIOamiBEdGhILkoTtx7JrYppt3/Raqg9gUNCOOYlCvGhqX7DXeEfL\\n' +\r\n        'DGabooiY2FNWot6h04JE9nqGj5QqT8D6t/TL1nzxhRPzbcSDIHUd/b5R+a0bAA+7\\n' +\r\n        'YTU6JqzEVCWKEIEynYmqikgLMGB/OzWsgyEL6822QW6hJAQ78XpbNeCzrICF4+GC\\n' +\r\n        '7KShLnwuWoWpAb26268lvOEvCTFM47VC6jNQl97md+2SA9Ma81C9wflid2M83Wle\\n' +\r\n        'cuLMVcQZceE=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIEADCCAuigAwIBAgIQAhAteLRCvizAElaWORFU2zANBgkqhkiG9w0BAQsFADCB\\n' +\r\n        'mDELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\r\n        'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTEwLwYDVQQDDChB\\n' +\r\n        'bWF6b24gUkRTIG1lLXNvdXRoLTEgUm9vdCBDQSBSU0EyMDQ4IEcxMRAwDgYDVQQH\\n' +\r\n        'DAdTZWF0dGxlMCAXDTIxMDUyMDE3MDkxNloYDzIwNjEwNTIwMTgwOTE2WjCBmDEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTEwLwYDVQQDDChBbWF6\\n' +\r\n        'b24gUkRTIG1lLXNvdXRoLTEgUm9vdCBDQSBSU0EyMDQ4IEcxMRAwDgYDVQQHDAdT\\n' +\r\n        'ZWF0dGxlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA+qg7JAcOVKjh\\n' +\r\n        'N83SACnBFZPyB63EusfDr/0V9ZdL8lKcmZX9sv/CqoBo3N0EvBqHQqUUX6JvFb7F\\n' +\r\n        'XrMUZ740kr28gSRALfXTFgNODjXeDsCtEkKRTkac/UM8xXHn+hR7UFRPHS3e0GzI\\n' +\r\n        'iLiwQWDkr0Op74W8aM0CfaVKvh2bp4BI1jJbdDnQ9OKXpOxNHGUf0ZGb7TkNPkgI\\n' +\r\n        'b2CBAc8J5o3H9lfw4uiyvl6Fz5JoP+A+zPELAioYBXDrbE7wJeqQDJrETWqR9VEK\\n' +\r\n        'BXURCkVnHeaJy123MpAX2ozf4pqk0V0LOEOZRS29I+USF5DcWr7QIXR/w2I8ws1Q\\n' +\r\n        '7ys+qbE+kQIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQFJ16n\\n' +\r\n        '1EcCMOIhoZs/F9sR+Jy++zAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZIhvcNAQELBQAD\\n' +\r\n        'ggEBAOc5nXbT3XTDEZsxX2iD15YrQvmL5m13B3ImZWpx/pqmObsgx3/dg75rF2nQ\\n' +\r\n        'qS+Vl+f/HLh516pj2BPP/yWCq12TRYigGav8UH0qdT3CAClYy2o+zAzUJHm84oiB\\n' +\r\n        'ud+6pFVGkbqpsY+QMpJUbZWu52KViBpJMYsUEy+9cnPSFRVuRAHjYynSiLk2ZEjb\\n' +\r\n        'Wkdc4x0nOZR5tP0FgrX0Ve2KcjFwVQJVZLgOUqmFYQ/G0TIIGTNh9tcmR7yp+xJR\\n' +\r\n        'A2tbPV2Z6m9Yxx4E8lLEPNuoeouJ/GR4CkMEmF8cLwM310t174o3lKKUXJ4Vs2HO\\n' +\r\n        'Wj2uN6R9oI+jGLMSswTzCNV1vgc=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIICuDCCAj6gAwIBAgIRAOocLeZWjYkG/EbHmscuy8gwCgYIKoZIzj0EAwMwgZsx\\n' +\r\n        'CzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMu\\n' +\r\n        'MRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE0MDIGA1UEAwwrQW1h\\n' +\r\n        'em9uIFJEUyBhcC1zb3V0aGVhc3QtMSBSb290IENBIEVDQzM4NCBHMTEQMA4GA1UE\\n' +\r\n        'BwwHU2VhdHRsZTAgFw0yMTA1MjEyMTUwMDFaGA8yMTIxMDUyMTIyNTAwMVowgZsx\\n' +\r\n        'CzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMu\\n' +\r\n        'MRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE0MDIGA1UEAwwrQW1h\\n' +\r\n        'em9uIFJEUyBhcC1zb3V0aGVhc3QtMSBSb290IENBIEVDQzM4NCBHMTEQMA4GA1UE\\n' +\r\n        'BwwHU2VhdHRsZTB2MBAGByqGSM49AgEGBSuBBAAiA2IABCEr3jq1KtRncnZfK5cq\\n' +\r\n        'btY0nW6ZG3FMbh7XwBIR6Ca0f8llGZ4vJEC1pXgiM/4Dh045B9ZIzNrR54rYOIfa\\n' +\r\n        '2NcYZ7mk06DjIQML64hbAxbQzOAuNzLPx268MrlL2uW2XaNCMEAwDwYDVR0TAQH/\\n' +\r\n        'BAUwAwEB/zAdBgNVHQ4EFgQUln75pChychwN4RfHl+tOinMrfVowDgYDVR0PAQH/\\n' +\r\n        'BAQDAgGGMAoGCCqGSM49BAMDA2gAMGUCMGiyPINRU1mwZ4Crw01vpuPvxZxb2IOr\\n' +\r\n        'yX3RNlOIu4We1H+5dQk5tIvH8KGYFbWEpAIxAO9NZ6/j9osMhLgZ0yj0WVjb+uZx\\n' +\r\n        'YlZR9fyFisY/jNfX7QhSk+nrc3SFLRUNtpXrng==\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIEBTCCAu2gAwIBAgIRAKiaRZatN8eiz9p0s0lu0rQwDQYJKoZIhvcNAQELBQAw\\n' +\r\n        'gZoxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\r\n        'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEzMDEGA1UEAwwq\\n' +\r\n        'QW1hem9uIFJEUyBjYS1jZW50cmFsLTEgUm9vdCBDQSBSU0EyMDQ4IEcxMRAwDgYD\\n' +\r\n        'VQQHDAdTZWF0dGxlMCAXDTIxMDUyMTIyMDIzNVoYDzIwNjEwNTIxMjMwMjM1WjCB\\n' +\r\n        'mjELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\r\n        'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTMwMQYDVQQDDCpB\\n' +\r\n        'bWF6b24gUkRTIGNhLWNlbnRyYWwtMSBSb290IENBIFJTQTIwNDggRzExEDAOBgNV\\n' +\r\n        'BAcMB1NlYXR0bGUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCygVMf\\n' +\r\n        'qB865IR9qYRBRFHn4eAqGJOCFx+UbraQZmjr/mnRqSkY+nhbM7Pn/DWOrRnxoh+w\\n' +\r\n        'q5F9ZxdZ5D5T1v6kljVwxyfFgHItyyyIL0YS7e2h7cRRscCM+75kMedAP7icb4YN\\n' +\r\n        'LfWBqfKHbHIOqvvQK8T6+Emu/QlG2B5LvuErrop9K0KinhITekpVIO4HCN61cuOe\\n' +\r\n        'CADBKF/5uUJHwS9pWw3uUbpGUwsLBuhJzCY/OpJlDqC8Y9aToi2Ivl5u3/Q/sKjr\\n' +\r\n        '6AZb9lx4q3J2z7tJDrm5MHYwV74elGSXoeoG8nODUqjgklIWAPrt6lQ3WJpO2kug\\n' +\r\n        '8RhCdSbWkcXHfX95AgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYE\\n' +\r\n        'FOIxhqTPkKVqKBZvMWtKewKWDvDBMA4GA1UdDwEB/wQEAwIBhjANBgkqhkiG9w0B\\n' +\r\n        'AQsFAAOCAQEAqoItII89lOl4TKvg0I1EinxafZLXIheLcdGCxpjRxlZ9QMQUN3yb\\n' +\r\n        'y/8uFKBL0otbQgJEoGhxm4h0tp54g28M6TN1U0332dwkjYxUNwvzrMaV5Na55I2Z\\n' +\r\n        '1hq4GB3NMXW+PvdtsgVOZbEN+zOyOZ5MvJHEQVkT3YRnf6avsdntltcRzHJ16pJc\\n' +\r\n        'Y8rR7yWwPXh1lPaPkxddrCtwayyGxNbNmRybjR48uHRhwu7v2WuAMdChL8H8bp89\\n' +\r\n        'TQLMrMHgSbZfee9hKhO4Zebelf1/cslRSrhkG0ESq6G5MUINj6lMg2g6F0F7Xz2v\\n' +\r\n        'ncD/vuRN5P+vT8th/oZ0Q2Gc68Pun0cn/g==\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIID/zCCAuegAwIBAgIRAJYlnmkGRj4ju/2jBQsnXJYwDQYJKoZIhvcNAQELBQAw\\n' +\r\n        'gZcxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\r\n        'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEwMC4GA1UEAwwn\\n' +\r\n        'QW1hem9uIFJEUyB1cy1lYXN0LTIgUm9vdCBDQSBSU0EyMDQ4IEcxMRAwDgYDVQQH\\n' +\r\n        'DAdTZWF0dGxlMCAXDTIxMDUyMTIzMDQ0NFoYDzIwNjEwNTIyMDAwNDQ0WjCBlzEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdBbWF6\\n' +\r\n        'b24gUkRTIHVzLWVhc3QtMiBSb290IENBIFJTQTIwNDggRzExEDAOBgNVBAcMB1Nl\\n' +\r\n        'YXR0bGUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC74V3eigv+pCj5\\n' +\r\n        'nqDBqplY0Jp16pTeNB06IKbzb4MOTvNde6QjsZxrE1xUmprT8LxQqN9tI3aDYEYk\\n' +\r\n        'b9v4F99WtQVgCv3Y34tYKX9NwWQgwS1vQwnIR8zOFBYqsAsHEkeJuSqAB12AYUSd\\n' +\r\n        'Zv2RVFjiFmYJho2X30IrSLQfS/IE3KV7fCyMMm154+/K1Z2IJlcissydEAwgsUHw\\n' +\r\n        'edrE6CxJVkkJ3EvIgG4ugK/suxd8eEMztaQYJwSdN8TdfT59LFuSPl7zmF3fIBdJ\\n' +\r\n        '//WexcQmGabaJ7Xnx+6o2HTfkP8Zzzzaq8fvjAcvA7gyFH5EP26G2ZqMG+0y4pTx\\n' +\r\n        'SPVTrQEXAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFIWWuNEF\\n' +\r\n        'sUMOC82XlfJeqazzrkPDMA4GA1UdDwEB/wQEAwIBhjANBgkqhkiG9w0BAQsFAAOC\\n' +\r\n        'AQEAgClmxcJaQTGpEZmjElL8G2Zc8lGc+ylGjiNlSIw8X25/bcLRptbDA90nuP+q\\n' +\r\n        'zXAMhEf0ccbdpwxG/P5a8JipmHgqQLHfpkvaXx+0CuP++3k+chAJ3Gk5XtY587jX\\n' +\r\n        '+MJfrPgjFt7vmMaKmynndf+NaIJAYczjhJj6xjPWmGrjM3MlTa9XesmelMwP3jep\\n' +\r\n        'bApIWAvCYVjGndbK9byyMq1nyj0TUzB8oJZQooaR3MMjHTmADuVBylWzkRMxbKPl\\n' +\r\n        '4Nlsk4Ef1JvIWBCzsMt+X17nuKfEatRfp3c9tbpGlAE/DSP0W2/Lnayxr4RpE9ds\\n' +\r\n        'ICF35uSis/7ZlsftODUe8wtpkQ==\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIF/zCCA+egAwIBAgIRAPvvd+MCcp8E36lHziv0xhMwDQYJKoZIhvcNAQEMBQAw\\n' +\r\n        'gZcxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\r\n        'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEwMC4GA1UEAwwn\\n' +\r\n        'QW1hem9uIFJEUyB1cy1lYXN0LTIgUm9vdCBDQSBSU0E0MDk2IEcxMRAwDgYDVQQH\\n' +\r\n        'DAdTZWF0dGxlMCAXDTIxMDUyMTIzMTEwNloYDzIxMjEwNTIyMDAxMTA2WjCBlzEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdBbWF6\\n' +\r\n        'b24gUkRTIHVzLWVhc3QtMiBSb290IENBIFJTQTQwOTYgRzExEDAOBgNVBAcMB1Nl\\n' +\r\n        'YXR0bGUwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDbvwekKIKGcV/s\\n' +\r\n        'lDU96a71ZdN2pTYkev1X2e2/ICb765fw/i1jP9MwCzs8/xHBEQBJSxdfO4hPeNx3\\n' +\r\n        'ENi0zbM+TrMKliS1kFVe1trTTEaHYjF8BMK9yTY0VgSpWiGxGwg4tshezIA5lpu8\\n' +\r\n        'sF6XMRxosCEVCxD/44CFqGZTzZaREIvvFPDTXKJ6yOYnuEkhH3OcoOajHN2GEMMQ\\n' +\r\n        'ShuyRFDQvYkqOC/Q5icqFbKg7eGwfl4PmimdV7gOVsxSlw2s/0EeeIILXtHx22z3\\n' +\r\n        '8QBhX25Lrq2rMuaGcD3IOMBeBo2d//YuEtd9J+LGXL9AeOXHAwpvInywJKAtXTMq\\n' +\r\n        'Wsy3LjhuANFrzMlzjR2YdjkGVzeQVx3dKUzJ2//Qf7IXPSPaEGmcgbxuatxjnvfT\\n' +\r\n        'H85oeKr3udKnXm0Kh7CLXeqJB5ITsvxI+Qq2iXtYCc+goHNR01QJwtGDSzuIMj3K\\n' +\r\n        'f+YMrqBXZgYBwU2J/kCNTH31nfw96WTbOfNGwLwmVRDgguzFa+QzmQsJW4FTDMwc\\n' +\r\n        '7cIjwdElQQVA+Gqa67uWmyDKAnoTkudmgAP+OTBkhnmc6NJuZDcy6f/iWUdl0X0u\\n' +\r\n        '/tsfgXXR6ZovnHonM13ANiN7VmEVqFlEMa0VVmc09m+2FYjjlk8F9sC7Rc4wt214\\n' +\r\n        '7u5YvCiCsFZwx44baP5viyRZgkJVpQIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/\\n' +\r\n        'MB0GA1UdDgQWBBQgCZCsc34nVTRbWsniXBPjnUTQ2DAOBgNVHQ8BAf8EBAMCAYYw\\n' +\r\n        'DQYJKoZIhvcNAQEMBQADggIBAAQas3x1G6OpsIvQeMS9BbiHG3+kU9P/ba6Rrg+E\\n' +\r\n        'lUz8TmL04Bcd+I+R0IyMBww4NznT+K60cFdk+1iSmT8Q55bpqRekyhcdWda1Qu0r\\n' +\r\n        'JiTi7zz+3w2v66akofOnGevDpo/ilXGvCUJiLOBnHIF0izUqzvfczaMZGJT6xzKq\\n' +\r\n        'PcEVRyAN1IHHf5KnGzUlVFv9SGy47xJ9I1vTk24JU0LWkSLzMMoxiUudVmHSqJtN\\n' +\r\n        'u0h+n/x3Q6XguZi1/C1KOntH56ewRh8n5AF7c+9LJJSRM9wunb0Dzl7BEy21Xe9q\\n' +\r\n        '03xRYjf5wn8eDELB8FZPa1PrNKXIOLYM9egdctbKEcpSsse060+tkyBrl507+SJT\\n' +\r\n        '04lvJ4tcKjZFqxn+bUkDQvXYj0D3WK+iJ7a8kZJPRvz8BDHfIqancY8Tgw+69SUn\\n' +\r\n        'WqIb+HNZqFuRs16WFSzlMksqzXv6wcDSyI7aZOmCGGEcYW9NHk8EuOnOQ+1UMT9C\\n' +\r\n        'Qb1GJcipjRzry3M4KN/t5vN3hIetB+/PhmgTO4gKhBETTEyPC3HC1QbdVfRndB6e\\n' +\r\n        'U/NF2U/t8U2GvD26TTFLK4pScW7gyw4FQyXWs8g8FS8f+R2yWajhtS9++VDJQKom\\n' +\r\n        'fAUISoCH+PlPRJpu/nHd1Zrddeiiis53rBaLbXu2J1Q3VqjWOmtj0HjxJJxWnYmz\\n' +\r\n        'Pqj2\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIGATCCA+mgAwIBAgIRAI/U4z6+GF8/znpHM8Dq8G0wDQYJKoZIhvcNAQEMBQAw\\n' +\r\n        'gZgxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\r\n        'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTExMC8GA1UEAwwo\\n' +\r\n        'QW1hem9uIFJEUyBhcC1zb3V0aC0yIFJvb3QgQ0EgUlNBNDA5NiBHMTEQMA4GA1UE\\n' +\r\n        'BwwHU2VhdHRsZTAgFw0yMjA2MDYyMTQ4MThaGA8yMTIyMDYwNjIyNDgxOFowgZgx\\n' +\r\n        'CzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMu\\n' +\r\n        'MRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTExMC8GA1UEAwwoQW1h\\n' +\r\n        'em9uIFJEUyBhcC1zb3V0aC0yIFJvb3QgQ0EgUlNBNDA5NiBHMTEQMA4GA1UEBwwH\\n' +\r\n        'U2VhdHRsZTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAK5WqMvyq888\\n' +\r\n        '3uuOtEj1FcP6iZhqO5kJurdJF59Otp2WCg+zv6I+QwaAspEWHQsKD405XfFsTGKV\\n' +\r\n        'SKTCwoMxwBniuChSmyhlagQGKSnRY9+znOWq0v7hgmJRwp6FqclTbubmr+K6lzPy\\n' +\r\n        'hs86mEp68O5TcOTYWUlPZDqfKwfNTbtCl5YDRr8Gxb5buHmkp6gUSgDkRsXiZ5VV\\n' +\r\n        'b3GBmXRqbnwo5ZRNAzQeM6ylXCn4jKs310lQGUrFbrJqlyxUdfxzqdlaIRn2X+HY\\n' +\r\n        'xRSYbHox3LVNPpJxYSBRvpQVFSy9xbX8d1v6OM8+xluB31cbLBtm08KqPFuqx+cO\\n' +\r\n        'I2H5F0CYqYzhyOSKJsiOEJT6/uH4ewryskZzncx9ae62SC+bB5n3aJLmOSTkKLFY\\n' +\r\n        'YS5IsmDT2m3iMgzsJNUKVoCx2zihAzgBanFFBsG+Xmoq0aKseZUI6vd2qpd5tUST\\n' +\r\n        '/wS1sNk0Ph7teWB2ACgbFE6etnJ6stwjHFZOj/iTYhlnR2zDRU8akunFdGb6CB4/\\n' +\r\n        'hMxGJxaqXSJeGtHm7FpadlUTf+2ESbYcVW+ui/F8sdBJseQdKZf3VdZZMgM0bcaX\\n' +\r\n        'NE47cauDTy72WdU9YJX/YXKYMLDE0iFHTnGpfVGsuWGPYhlwZ3dFIO07mWnCRM6X\\n' +\r\n        'u5JXRB1oy5n5HRluMsmpSN/R92MeBxKFAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMB\\n' +\r\n        'Af8wHQYDVR0OBBYEFNtH0F0xfijSLHEyIkRGD9gW6NazMA4GA1UdDwEB/wQEAwIB\\n' +\r\n        'hjANBgkqhkiG9w0BAQwFAAOCAgEACo+5jFeY3ygxoDDzL3xpfe5M0U1WxdKk+az4\\n' +\r\n        '/OfjZvkoma7WfChi3IIMtwtKLYC2/seKWA4KjlB3rlTsCVNPnK6D+gAnybcfTKk/\\n' +\r\n        'IRSPk92zagwQkSUWtAk80HpVfWJzpkSU16ejiajhedzOBRtg6BwsbSqLCDXb8hXr\\n' +\r\n        'eXWC1S9ZceGc+LcKRHewGWPu31JDhHE9bNcl9BFSAS0lYVZqxIRWxivZ+45j5uQv\\n' +\r\n        'wPrC8ggqsdU3K8quV6dblUQzzA8gKbXJpCzXZihkPrYpQHTH0szvXvgebh+CNUAG\\n' +\r\n        'rUxm8+yTS0NFI3U+RLbcLFVzSvjMOnEwCX0SPj5XZRYYXs5ajtQCoZhTUkkwpDV8\\n' +\r\n        'RxXk8qGKiXwUxDO8GRvmvM82IOiXz5w2jy/h7b7soyIgdYiUydMq4Ja4ogB/xPZa\\n' +\r\n        'gf4y0o+bremO15HFf1MkaU2UxPK5FFVUds05pKvpSIaQWbF5lw4LHHj4ZtVup7zF\\n' +\r\n        'CLjPWs4Hs/oUkxLMqQDw0FBwlqa4uot8ItT8uq5BFpz196ZZ+4WXw5PVzfSxZibI\\n' +\r\n        'C/nwcj0AS6qharXOs8yPnPFLPSZ7BbmWzFDgo3tpglRqo3LbSPsiZR+sLeivqydr\\n' +\r\n        '0w4RK1btRda5Ws88uZMmW7+2aufposMKcbAdrApDEAVzHijbB/nolS5nsnFPHZoA\\n' +\r\n        'KDPtFEk=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIICtzCCAj2gAwIBAgIQVZ5Y/KqjR4XLou8MCD5pOjAKBggqhkjOPQQDAzCBmzEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTQwMgYDVQQDDCtBbWF6\\n' +\r\n        'b24gUkRTIGFwLXNvdXRoZWFzdC00IFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQH\\n' +\r\n        'DAdTZWF0dGxlMCAXDTIyMDUyNTE2NTgzM1oYDzIxMjIwNTI1MTc1ODMzWjCBmzEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTQwMgYDVQQDDCtBbWF6\\n' +\r\n        'b24gUkRTIGFwLXNvdXRoZWFzdC00IFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQH\\n' +\r\n        'DAdTZWF0dGxlMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEbo473OmpD5vkckdJajXg\\n' +\r\n        'brhmNFyoSa0WCY1njuZC2zMFp3zP6rX4I1r3imrYnJd9pFH/aSiV/r6L5ACE5RPx\\n' +\r\n        '4qdg5SQ7JJUaZc3DWsTOiOed7BCZSzM+KTYK/2QzDMApo0IwQDAPBgNVHRMBAf8E\\n' +\r\n        'BTADAQH/MB0GA1UdDgQWBBTmogc06+1knsej1ltKUOdWFvwgsjAOBgNVHQ8BAf8E\\n' +\r\n        'BAMCAYYwCgYIKoZIzj0EAwMDaAAwZQIxAIs7TlLMbGTWNXpGiKf9DxaM07d/iDHe\\n' +\r\n        'F/Vv/wyWSTGdobxBL6iArQNVXz0Gr4dvPAIwd0rsoa6R0x5mtvhdRPtM37FYrbHJ\\n' +\r\n        'pbV+OMusQqcSLseunLBoCHenvJW0QOCQ8EDY\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIICvTCCAkOgAwIBAgIQCIY7E/bFvFN2lK9Kckb0dTAKBggqhkjOPQQDAzCBnjEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTcwNQYDVQQDDC5BbWF6\\n' +\r\n        'b24gUkRTIFByZXZpZXcgdXMtZWFzdC0yIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYD\\n' +\r\n        'VQQHDAdTZWF0dGxlMCAXDTIxMDUxODIxMDUxMFoYDzIxMjEwNTE4MjIwNTEwWjCB\\n' +\r\n        'njELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\r\n        'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTcwNQYDVQQDDC5B\\n' +\r\n        'bWF6b24gUkRTIFByZXZpZXcgdXMtZWFzdC0yIFJvb3QgQ0EgRUNDMzg0IEcxMRAw\\n' +\r\n        'DgYDVQQHDAdTZWF0dGxlMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEMI0hzf1JCEOI\\n' +\r\n        'Eue4+DmcNnSs2i2UaJxHMrNGGfU7b42a7vwP53F7045ffHPBGP4jb9q02/bStZzd\\n' +\r\n        'VHqfcgqkSRI7beBKjD2mfz82hF/wJSITTgCLs+NRpS6zKMFOFHUNo0IwQDAPBgNV\\n' +\r\n        'HRMBAf8EBTADAQH/MB0GA1UdDgQWBBS8uF/6hk5mPLH4qaWv9NVZaMmyTjAOBgNV\\n' +\r\n        'HQ8BAf8EBAMCAYYwCgYIKoZIzj0EAwMDaAAwZQIxAO7Pu9wzLyM0X7Q08uLIL+vL\\n' +\r\n        'qaxe3UFuzFTWjM16MLJHbzLf1i9IDFKz+Q4hXCSiJwIwClMBsqT49BPUxVsJnjGr\\n' +\r\n        'EbyEk6aOOVfY1p2yQL649zh3M4h8okLnwf+bYIb1YpeU\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIEADCCAuigAwIBAgIQY+JhwFEQTe36qyRlUlF8ozANBgkqhkiG9w0BAQsFADCB\\n' +\r\n        'mDELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\r\n        'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTEwLwYDVQQDDChB\\n' +\r\n        'bWF6b24gUkRTIGFmLXNvdXRoLTEgUm9vdCBDQSBSU0EyMDQ4IEcxMRAwDgYDVQQH\\n' +\r\n        'DAdTZWF0dGxlMCAXDTIxMDUxOTE5MjQxNloYDzIwNjEwNTE5MjAyNDE2WjCBmDEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTEwLwYDVQQDDChBbWF6\\n' +\r\n        'b24gUkRTIGFmLXNvdXRoLTEgUm9vdCBDQSBSU0EyMDQ4IEcxMRAwDgYDVQQHDAdT\\n' +\r\n        'ZWF0dGxlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnIye77j6ev40\\n' +\r\n        '8wRPyN2OdKFSUfI9jB20Or2RLO+RDoL43+USXdrze0Wv4HMRLqaen9BcmCfaKMp0\\n' +\r\n        'E4SFo47bXK/O17r6G8eyq1sqnHE+v288mWtYH9lAlSamNFRF6YwA7zncmE/iKL8J\\n' +\r\n        '0vePHMHP/B6svw8LULZCk+nZk3tgxQn2+r0B4FOz+RmpkoVddfqqUPMbKUxhM2wf\\n' +\r\n        'fO7F6bJaUXDNMBPhCn/3ayKCjYr49ErmnpYV2ZVs1i34S+LFq39J7kyv6zAgbHv9\\n' +\r\n        '+/MtRMoRB1CjpqW0jIOZkHBdYcd1o9p1zFn591Do1wPkmMsWdjIYj+6e7UXcHvOB\\n' +\r\n        '2+ScIRAcnwIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQGtq2W\\n' +\r\n        'YSyMMxpdQ3IZvcGE+nyZqTAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZIhvcNAQELBQAD\\n' +\r\n        'ggEBAEgoP3ixJsKSD5FN8dQ01RNHERl/IFbA7TRXfwC+L1yFocKnQh4Mp/msPRSV\\n' +\r\n        '+OeHIvemPW/wtZDJzLTOFJ6eTolGekHK1GRTQ6ZqsWiU2fmiOP8ks4oSpI+tQ9Lw\\n' +\r\n        'VrfZqTiEcS5wEIqyfUAZZfKDo7W1xp+dQWzfczSBuZJZwI5iaha7+ILM0r8Ckden\\n' +\r\n        'TVTapc5pLSoO15v0ziRuQ2bT3V3nwu/U0MRK44z+VWOJdSiKxdnOYDs8hFNnKhfe\\n' +\r\n        'klbTZF7kW7WbiNYB43OaAQBJ6BALZsIskEaqfeZT8FD71uN928TcEQyBDXdZpRN+\\n' +\r\n        'iGQZDGhht0r0URGMDSs9waJtTfA=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIF/jCCA+agAwIBAgIQXY/dmS+72lZPranO2JM9jjANBgkqhkiG9w0BAQwFADCB\\n' +\r\n        'lzELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\r\n        'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdB\\n' +\r\n        'bWF6b24gUkRTIGFwLWVhc3QtMSBSb290IENBIFJTQTQwOTYgRzExEDAOBgNVBAcM\\n' +\r\n        'B1NlYXR0bGUwIBcNMjEwNTI1MjEzNDUxWhgPMjEyMTA1MjUyMjM0NTFaMIGXMQsw\\n' +\r\n        'CQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjET\\n' +\r\n        'MBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMDAuBgNVBAMMJ0FtYXpv\\n' +\r\n        'biBSRFMgYXAtZWFzdC0xIFJvb3QgQ0EgUlNBNDA5NiBHMTEQMA4GA1UEBwwHU2Vh\\n' +\r\n        'dHRsZTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAMyW9kBJjD/hx8e8\\n' +\r\n        'b5E1sF42bp8TXsz1htSYE3Tl3T1Aq379DfEhB+xa/ASDZxt7/vwa81BkNo4M6HYq\\n' +\r\n        'okYIXeE7cu5SnSgjWXqcERhgPevtAwgmhdE3yREe8oz2DyOi2qKKZqah+1gpPaIQ\\n' +\r\n        'fK0uAqoeQlyHosye3KZZKkDHBatjBsQ5kf8lhuf7wVulEZVRHY2bP2X7N98PfbpL\\n' +\r\n        'QdH7mWXzDtJJ0LiwFwds47BrkgK1pkHx2p1mTo+HMkfX0P6Fq1atkVC2RHHtbB/X\\n' +\r\n        'iYyH7paaHBzviFrhr679zNqwXIOKlbf74w3mS11P76rFn9rS1BAH2Qm6eY5S/Fxe\\n' +\r\n        'HEKXm4kjPN63Zy0p3yE5EjPt54yPkvumOnT+RqDGJ2HCI9k8Ehcbve0ogfdRKNqQ\\n' +\r\n        'VHWYTy8V33ndQRHZlx/CuU1yN61TH4WSoMly1+q1ihTX9sApmlQ14B2pJi/9DnKW\\n' +\r\n        'cwECrPy1jAowC2UJ45RtC8UC05CbP9yrIy/7Noj8gQDiDOepm+6w1g6aNlWoiuQS\\n' +\r\n        'kyI6nzz1983GcnOHya73ga7otXo0Qfg9jPghlYiMomrgshlSLDHZG0Ib/3hb8cnR\\n' +\r\n        '1OcN9FpzNmVK2Ll1SmTMLrIhuCkyNYX9O/bOknbcf706XeESxGduSkHEjIw/k1+2\\n' +\r\n        'Atteoq5dT6cwjnJ9hyhiueVlVkiDAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8w\\n' +\r\n        'HQYDVR0OBBYEFLUI+DD7RJs+0nRnjcwIVWzzYSsFMA4GA1UdDwEB/wQEAwIBhjAN\\n' +\r\n        'BgkqhkiG9w0BAQwFAAOCAgEAb1mcCHv4qMQetLGTBH9IxsB2YUUhr5dda0D2BcHr\\n' +\r\n        'UtDbfd0VQs4tux6h/6iKwHPx0Ew8fuuYj99WknG0ffgJfNc5/fMspxR/pc1jpdyU\\n' +\r\n        '5zMQ+B9wi0lOZPO9uH7/pr+d2odcNEy8zAwqdv/ihsTwLmGP54is9fVbsgzNW1cm\\n' +\r\n        'HKAVL2t/Ope+3QnRiRilKCN1lzhav4HHdLlN401TcWRWKbEuxF/FgxSO2Hmx86pj\\n' +\r\n        'e726lweCTMmnq/cTsPOVY0WMjs0or3eHDVlyLgVeV5ldyN+ptg3Oit60T05SRa58\\n' +\r\n        'AJPTaVKIcGQ/gKkKZConpu7GDofT67P/ox0YNY57LRbhsx9r5UY4ROgz7WMQ1yoS\\n' +\r\n        'Y+19xizm+mBm2PyjMUbfwZUyCxsdKMwVdOq5/UmTmdms+TR8+m1uBHPOTQ2vKR0s\\n' +\r\n        'Pd/THSzPuu+d3dbzRyDSLQbHFFneG760CUlD/ZmzFlQjJ89/HmAmz8IyENq+Sjhx\\n' +\r\n        'Jgzy+FjVZb8aRUoYLlnffpUpej1n87Ynlr1GrvC4GsRpNpOHlwuf6WD4W0qUTsC/\\n' +\r\n        'C9JO+fBzUj/aWlJzNcLEW6pte1SB+EdkR2sZvWH+F88TxemeDrV0jKJw5R89CDf8\\n' +\r\n        'ZQNfkxJYjhns+YeV0moYjqQdc7tq4i04uggEQEtVzEhRLU5PE83nlh/K2NZZm8Kj\\n' +\r\n        'dIA=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIID/zCCAuegAwIBAgIRAPVSMfFitmM5PhmbaOFoGfUwDQYJKoZIhvcNAQELBQAw\\n' +\r\n        'gZcxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\r\n        'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEwMC4GA1UEAwwn\\n' +\r\n        'QW1hem9uIFJEUyB1cy1lYXN0LTEgUm9vdCBDQSBSU0EyMDQ4IEcxMRAwDgYDVQQH\\n' +\r\n        'DAdTZWF0dGxlMCAXDTIxMDUyNTIyMzQ1N1oYDzIwNjEwNTI1MjMzNDU3WjCBlzEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdBbWF6\\n' +\r\n        'b24gUkRTIHVzLWVhc3QtMSBSb290IENBIFJTQTIwNDggRzExEDAOBgNVBAcMB1Nl\\n' +\r\n        'YXR0bGUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDu9H7TBeGoDzMr\\n' +\r\n        'dxN6H8COntJX4IR6dbyhnj5qMD4xl/IWvp50lt0VpmMd+z2PNZzx8RazeGC5IniV\\n' +\r\n        '5nrLg0AKWRQ2A/lGGXbUrGXCSe09brMQCxWBSIYe1WZZ1iU1IJ/6Bp4D2YEHpXrW\\n' +\r\n        'bPkOq5x3YPcsoitgm1Xh8ygz6vb7PsvJvPbvRMnkDg5IqEThapPjmKb8ZJWyEFEE\\n' +\r\n        'QRrkCIRueB1EqQtJw0fvP4PKDlCJAKBEs/y049FoOqYpT3pRy0WKqPhWve+hScMd\\n' +\r\n        '6obq8kxTFy1IHACjHc51nrGII5Bt76/MpTWhnJIJrCnq1/Uc3Qs8IVeb+sLaFC8K\\n' +\r\n        'DI69Sw6bAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFE7PCopt\\n' +\r\n        'lyOgtXX0Y1lObBUxuKaCMA4GA1UdDwEB/wQEAwIBhjANBgkqhkiG9w0BAQsFAAOC\\n' +\r\n        'AQEAFj+bX8gLmMNefr5jRJfHjrL3iuZCjf7YEZgn89pS4z8408mjj9z6Q5D1H7yS\\n' +\r\n        'jNETVV8QaJip1qyhh5gRzRaArgGAYvi2/r0zPsy+Tgf7v1KGL5Lh8NT8iCEGGXwF\\n' +\r\n        'g3Ir+Nl3e+9XUp0eyyzBIjHtjLBm6yy8rGk9p6OtFDQnKF5OxwbAgip42CD75r/q\\n' +\r\n        'p421maEDDvvRFR4D+99JZxgAYDBGqRRceUoe16qDzbMvlz0A9paCZFclxeftAxv6\\n' +\r\n        'QlR5rItMz/XdzpBJUpYhdzM0gCzAzdQuVO5tjJxmXhkSMcDP+8Q+Uv6FA9k2VpUV\\n' +\r\n        'E/O5jgpqUJJ2Hc/5rs9VkAPXeA==\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIICrzCCAjWgAwIBAgIQW0yuFCle3uj4vWiGU0SaGzAKBggqhkjOPQQDAzCBlzEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdBbWF6\\n' +\r\n        'b24gUkRTIGFmLXNvdXRoLTEgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcMB1Nl\\n' +\r\n        'YXR0bGUwIBcNMjEwNTE5MTkzNTE2WhgPMjEyMTA1MTkyMDM1MTZaMIGXMQswCQYD\\n' +\r\n        'VQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEG\\n' +\r\n        'A1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMDAuBgNVBAMMJ0FtYXpvbiBS\\n' +\r\n        'RFMgYWYtc291dGgtMSBSb290IENBIEVDQzM4NCBHMTEQMA4GA1UEBwwHU2VhdHRs\\n' +\r\n        'ZTB2MBAGByqGSM49AgEGBSuBBAAiA2IABDPiKNZSaXs3Un/J/v+LTsFDANHpi7en\\n' +\r\n        'oL2qh0u0DoqNzEBTbBjvO23bLN3k599zh6CY3HKW0r2k1yaIdbWqt4upMCRCcUFi\\n' +\r\n        'I4iedAmubgzh56wJdoMZztjXZRwDthTkJKNCMEAwDwYDVR0TAQH/BAUwAwEB/zAd\\n' +\r\n        'BgNVHQ4EFgQUWbYkcrvVSnAWPR5PJhIzppcAnZIwDgYDVR0PAQH/BAQDAgGGMAoG\\n' +\r\n        'CCqGSM49BAMDA2gAMGUCMCESGqpat93CjrSEjE7z+Hbvz0psZTHwqaxuiH64GKUm\\n' +\r\n        'mYynIiwpKHyBrzjKBmeDoQIxANGrjIo6/b8Jl6sdIZQI18V0pAyLfLiZjlHVOnhM\\n' +\r\n        'MOTVgr82ZuPoEHTX78MxeMnYlw==\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIECTCCAvGgAwIBAgIRAIbsx8XOl0sgTNiCN4O+18QwDQYJKoZIhvcNAQELBQAw\\n' +\r\n        'gZwxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\r\n        'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE1MDMGA1UEAwws\\n' +\r\n        'QW1hem9uIFJEUyBhcC1ub3J0aGVhc3QtMSBSb290IENBIFJTQTIwNDggRzExEDAO\\n' +\r\n        'BgNVBAcMB1NlYXR0bGUwIBcNMjEwNTI1MjE1NDU4WhgPMjA2MTA1MjUyMjU0NTha\\n' +\r\n        'MIGcMQswCQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywg\\n' +\r\n        'SW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExNTAzBgNVBAMM\\n' +\r\n        'LEFtYXpvbiBSRFMgYXAtbm9ydGhlYXN0LTEgUm9vdCBDQSBSU0EyMDQ4IEcxMRAw\\n' +\r\n        'DgYDVQQHDAdTZWF0dGxlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\\n' +\r\n        'tROxwXWCgn5R9gI/2Ivjzaxc0g95ysBjoJsnhPdJEHQb7w3y2kWrVWU3Y9fOitgb\\n' +\r\n        'CEsnEC3PrhRnzNVW0fPsK6kbvOeCmjvY30rdbxbc8h+bjXfGmIOgAkmoULEr6Hc7\\n' +\r\n        'G1Q/+tvv4lEwIs7bEaf+abSZxRJbZ0MBxhbHn7UHHDiMZYvzK+SV1MGCxx7JVhrm\\n' +\r\n        'xWu3GC1zZCsGDhB9YqY9eR6PmjbqA5wy8vqbC57dZZa1QVtWIQn3JaRXn+faIzHx\\n' +\r\n        'nLMN5CEWihsdmHBXhnRboXprE/OS4MFv1UrQF/XM/h5RBeCywpHePpC+Oe1T3LNC\\n' +\r\n        'iP8KzRFrjC1MX/WXJnmOVQIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MB0GA1Ud\\n' +\r\n        'DgQWBBS33XbXAUMs1znyZo4B0+B3D68WFTAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZI\\n' +\r\n        'hvcNAQELBQADggEBADuadd2EmlpueY2VlrIIPC30QkoA1EOSoCmZgN6124apkoY1\\n' +\r\n        'HiV4r+QNPljN4WP8gmcARnNkS7ZeR4fvWi8xPh5AxQCpiaBMw4gcbTMCuKDV68Pw\\n' +\r\n        'P2dZCTMspvR3CDfM35oXCufdtFnxyU6PAyINUqF/wyTHguO3owRFPz64+sk3r2pT\\n' +\r\n        'WHmJjG9E7V+KOh0s6REgD17Gqn6C5ijLchSrPUHB0wOIkeLJZndHxN/76h7+zhMt\\n' +\r\n        'fFeNxPWHY2MfpcaLjz4UREzZPSB2U9k+y3pW1omCIcl6MQU9itGx/LpQE+H3ZeX2\\n' +\r\n        'M2bdYd5L+ow+bdbGtsVKOuN+R9Dm17YpswF+vyQ=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIGATCCA+mgAwIBAgIRAKlQ+3JX9yHXyjP/Ja6kZhkwDQYJKoZIhvcNAQEMBQAw\\n' +\r\n        'gZgxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\r\n        'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTExMC8GA1UEAwwo\\n' +\r\n        'QW1hem9uIFJEUyBhcC1zb3V0aC0xIFJvb3QgQ0EgUlNBNDA5NiBHMTEQMA4GA1UE\\n' +\r\n        'BwwHU2VhdHRsZTAgFw0yMTA1MTkxNzQ1MjBaGA8yMTIxMDUxOTE4NDUyMFowgZgx\\n' +\r\n        'CzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMu\\n' +\r\n        'MRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTExMC8GA1UEAwwoQW1h\\n' +\r\n        'em9uIFJEUyBhcC1zb3V0aC0xIFJvb3QgQ0EgUlNBNDA5NiBHMTEQMA4GA1UEBwwH\\n' +\r\n        'U2VhdHRsZTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAKtahBrpUjQ6\\n' +\r\n        'H2mni05BAKU6Z5USPZeSKmBBJN3YgD17rJ93ikJxSgzJ+CupGy5rvYQ0xznJyiV0\\n' +\r\n        '91QeQN4P+G2MjGQR0RGeUuZcfcZitJro7iAg3UBvw8WIGkcDUg+MGVpRv/B7ry88\\n' +\r\n        '7E4OxKb8CPNoa+a9j6ABjOaaxaI22Bb7j3OJ+JyMICs6CU2bgkJaj3VUV9FCNUOc\\n' +\r\n        'h9PxD4jzT9yyGYm/sK9BAT1WOTPG8XQUkpcFqy/IerZDfiQkf1koiSd4s5VhBkUn\\n' +\r\n        'aQHOdri/stldT7a+HJFVyz2AXDGPDj+UBMOuLq0K6GAT6ThpkXCb2RIf4mdTy7ox\\n' +\r\n        'N5BaJ+ih+Ro3ZwPkok60egnt/RN98jgbm+WstgjJWuLqSNInnMUgkuqjyBWwePqX\\n' +\r\n        'Kib+wdpyx/LOzhKPEFpeMIvHQ3A0sjlulIjnh+j+itezD+dp0UNxMERlW4Bn/IlS\\n' +\r\n        'sYQVNfYutWkRPRLErXOZXtlxxkI98JWQtLjvGzQr+jywxTiw644FSLWdhKa6DtfU\\n' +\r\n        '2JWBHqQPJicMElfZpmfaHZjtXuCZNdZQXWg7onZYohe281ZrdFPOqC4rUq7gYamL\\n' +\r\n        'T+ZB+2P+YCPOLJ60bj/XSvcB7mesAdg8P0DNddPhHUFWx2dFqOs1HxIVB4FZVA9U\\n' +\r\n        'Ppbv4a484yxjTgG7zFZNqXHKTqze6rBBAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMB\\n' +\r\n        'Af8wHQYDVR0OBBYEFCEAqjighncv/UnWzBjqu1Ka2Yb4MA4GA1UdDwEB/wQEAwIB\\n' +\r\n        'hjANBgkqhkiG9w0BAQwFAAOCAgEAYyvumblckIXlohzi3QiShkZhqFzZultbFIu9\\n' +\r\n        'GhA5CDar1IFMhJ9vJpO9nUK/camKs1VQRs8ZsBbXa0GFUM2p8y2cgUfLwFULAiC/\\n' +\r\n        'sWETyW5lcX/xc4Pyf6dONhqFJt/ovVBxNZtcmMEWv/1D6Tf0nLeEb0P2i/pnSRR4\\n' +\r\n        'Oq99LVFjossXtyvtaq06OSiUUZ1zLPvV6AQINg8dWeBOWRcQYhYcEcC2wQ06KShZ\\n' +\r\n        '0ahuu7ar5Gym3vuLK6nH+eQrkUievVomN/LpASrYhK32joQ5ypIJej3sICIgJUEP\\n' +\r\n        'UoeswJ+Z16f3ECoL1OSnq4A0riiLj1ZGmVHNhM6m/gotKaHNMxsK9zsbqmuU6IT/\\n' +\r\n        'P6cR0S+vdigQG8ZNFf5vEyVNXhl8KcaJn6lMD/gMB2rY0qpaeTg4gPfU5wcg8S4Y\\n' +\r\n        'C9V//tw3hv0f2n+8kGNmqZrylOQDQWSSo8j8M2SRSXiwOHDoTASd1fyBEIqBAwzn\\n' +\r\n        'LvXVg8wQd1WlmM3b0Vrsbzltyh6y4SuKSkmgufYYvC07NknQO5vqvZcNoYbLNea3\\n' +\r\n        '76NkFaMHUekSbwVejZgG5HGwbaYBgNdJEdpbWlA3X4yGRVxknQSUyt4dZRnw/HrX\\n' +\r\n        'k8x6/wvtw7wht0/DOqz1li7baSsMazqxx+jDdSr1h9xML416Q4loFCLgqQhil8Jq\\n' +\r\n        'Em4Hy3A=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIGBTCCA+2gAwIBAgIRAJfKe4Zh4aWNt3bv6ZjQwogwDQYJKoZIhvcNAQEMBQAw\\n' +\r\n        'gZoxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\r\n        'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEzMDEGA1UEAwwq\\n' +\r\n        'QW1hem9uIFJEUyBjYS1jZW50cmFsLTEgUm9vdCBDQSBSU0E0MDk2IEcxMRAwDgYD\\n' +\r\n        'VQQHDAdTZWF0dGxlMCAXDTIxMDUyMTIyMDg1M1oYDzIxMjEwNTIxMjMwODUzWjCB\\n' +\r\n        'mjELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\r\n        'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTMwMQYDVQQDDCpB\\n' +\r\n        'bWF6b24gUkRTIGNhLWNlbnRyYWwtMSBSb290IENBIFJTQTQwOTYgRzExEDAOBgNV\\n' +\r\n        'BAcMB1NlYXR0bGUwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCpgUH6\\n' +\r\n        'Crzd8cOw9prAh2rkQqAOx2vtuI7xX4tmBG4I/um28eBjyVmgwQ1fpq0Zg2nCKS54\\n' +\r\n        'Nn0pCmT7f3h6Bvopxn0J45AzXEtajFqXf92NQ3iPth95GVfAJSD7gk2LWMhpmID9\\n' +\r\n        'JGQyoGuDPg+hYyr292X6d0madzEktVVGO4mKTF989qEg+tY8+oN0U2fRTrqa2tZp\\n' +\r\n        'iYsmg350ynNopvntsJAfpCO/srwpsqHHLNFZ9jvhTU8uW90wgaKO9i31j/mHggCE\\n' +\r\n        '+CAOaJCM3g+L8DPl/2QKsb6UkBgaaIwKyRgKSj1IlgrK+OdCBCOgM9jjId4Tqo2j\\n' +\r\n        'ZIrrPBGl6fbn1+etZX+2/tf6tegz+yV0HHQRAcKCpaH8AXF44bny9andslBoNjGx\\n' +\r\n        'H6R/3ib4FhPrnBMElzZ5i4+eM/cuPC2huZMBXb/jKgRC/QN1Wm3/nah5FWq+yn+N\\n' +\r\n        'tiAF10Ga0BYzVhHDEwZzN7gn38bcY5yi/CjDUNpY0OzEe2+dpaBKPlXTaFfn9Nba\\n' +\r\n        'CBmXPRF0lLGGtPeTAgjcju+NEcVa82Ht1pqxyu2sDtbu3J5bxp4RKtj+ShwN8nut\\n' +\r\n        'Tkf5Ea9rSmHEY13fzgibZlQhXaiFSKA2ASUwgJP19Putm0XKlBCNSGCoECemewxL\\n' +\r\n        '+7Y8FszS4Uu4eaIwvXVqUEE2yf+4ex0hqQ1acQIDAQABo0IwQDAPBgNVHRMBAf8E\\n' +\r\n        'BTADAQH/MB0GA1UdDgQWBBSeUnXIRxNbYsZLtKomIz4Y1nOZEzAOBgNVHQ8BAf8E\\n' +\r\n        'BAMCAYYwDQYJKoZIhvcNAQEMBQADggIBAIpRvxVS0dzoosBh/qw65ghPUGSbP2D4\\n' +\r\n        'dm6oYCv5g/zJr4fR7NzEbHOXX5aOQnHbQL4M/7veuOCLNPOW1uXwywMg6gY+dbKe\\n' +\r\n        'YtPVA1as8G9sUyadeXyGh2uXGsziMFXyaESwiAXZyiYyKChS3+g26/7jwECFo5vC\\n' +\r\n        'XGhWpIO7Hp35Yglp8AnwnEAo/PnuXgyt2nvyTSrxlEYa0jus6GZEZd77pa82U1JH\\n' +\r\n        'qFhIgmKPWWdvELA3+ra1nKnvpWM/xX0pnMznMej5B3RT3Y+k61+kWghJE81Ix78T\\n' +\r\n        '+tG4jSotgbaL53BhtQWBD1yzbbilqsGE1/DXPXzHVf9yD73fwh2tGWSaVInKYinr\\n' +\r\n        'a4tcrB3KDN/PFq0/w5/21lpZjVFyu/eiPj6DmWDuHW73XnRwZpHo/2OFkei5R7cT\\n' +\r\n        'rn/YdDD6c1dYtSw5YNnS6hdCQ3sOiB/xbPRN9VWJa6se79uZ9NLz6RMOr73DNnb2\\n' +\r\n        'bhIR9Gf7XAA5lYKqQk+A+stoKbIT0F65RnkxrXi/6vSiXfCh/bV6B41cf7MY/6YW\\n' +\r\n        'ehserSdjhQamv35rTFdM+foJwUKz1QN9n9KZhPxeRmwqPitAV79PloksOnX25ElN\\n' +\r\n        'SlyxdndIoA1wia1HRd26EFm2pqfZ2vtD2EjU3wD42CXX4H8fKVDna30nNFSYF0yn\\n' +\r\n        'jGKc3k6UNxpg\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIF/jCCA+agAwIBAgIQaRHaEqqacXN20e8zZJtmDDANBgkqhkiG9w0BAQwFADCB\\n' +\r\n        'lzELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\r\n        'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdB\\n' +\r\n        'bWF6b24gUkRTIHVzLWVhc3QtMSBSb290IENBIFJTQTQwOTYgRzExEDAOBgNVBAcM\\n' +\r\n        'B1NlYXR0bGUwIBcNMjEwNTI1MjIzODM1WhgPMjEyMTA1MjUyMzM4MzVaMIGXMQsw\\n' +\r\n        'CQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjET\\n' +\r\n        'MBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMDAuBgNVBAMMJ0FtYXpv\\n' +\r\n        'biBSRFMgdXMtZWFzdC0xIFJvb3QgQ0EgUlNBNDA5NiBHMTEQMA4GA1UEBwwHU2Vh\\n' +\r\n        'dHRsZTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAInfBCaHuvj6Rb5c\\n' +\r\n        'L5Wmn1jv2PHtEGMHm+7Z8dYosdwouG8VG2A+BCYCZfij9lIGszrTXkY4O7vnXgru\\n' +\r\n        'JUNdxh0Q3M83p4X+bg+gODUs3jf+Z3Oeq7nTOk/2UYvQLcxP4FEXILxDInbQFcIx\\n' +\r\n        'yen1ESHggGrjEodgn6nbKQNRfIhjhW+TKYaewfsVWH7EF2pfj+cjbJ6njjgZ0/M9\\n' +\r\n        'VZifJFBgat6XUTOf3jwHwkCBh7T6rDpgy19A61laImJCQhdTnHKvzTpxcxiLRh69\\n' +\r\n        'ZObypR7W04OAUmFS88V7IotlPmCL8xf7kwxG+gQfvx31+A9IDMsiTqJ1Cc4fYEKg\\n' +\r\n        'bL+Vo+2Ii4W2esCTGVYmHm73drznfeKwL+kmIC/Bq+DrZ+veTqKFYwSkpHRyJCEe\\n' +\r\n        'U4Zym6POqQ/4LBSKwDUhWLJIlq99bjKX+hNTJykB+Lbcx0ScOP4IAZQoxmDxGWxN\\n' +\r\n        'S+lQj+Cx2pwU3S/7+OxlRndZAX/FKgk7xSMkg88HykUZaZ/ozIiqJqSnGpgXCtED\\n' +\r\n        'oQ4OJw5ozAr+/wudOawaMwUWQl5asD8fuy/hl5S1nv9XxIc842QJOtJFxhyeMIXt\\n' +\r\n        'LVECVw/dPekhMjS3Zo3wwRgYbnKG7YXXT5WMxJEnHu8+cYpMiRClzq2BEP6/MtI2\\n' +\r\n        'AZQQUFu2yFjRGL2OZA6IYjxnXYiRAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8w\\n' +\r\n        'HQYDVR0OBBYEFADCcQCPX2HmkqQcmuHfiQ2jjqnrMA4GA1UdDwEB/wQEAwIBhjAN\\n' +\r\n        'BgkqhkiG9w0BAQwFAAOCAgEASXkGQ2eUmudIKPeOIF7RBryCoPmMOsqP0+1qxF8l\\n' +\r\n        'pGkwmrgNDGpmd9s0ArfIVBTc1jmpgB3oiRW9c6n2OmwBKL4UPuQ8O3KwSP0iD2sZ\\n' +\r\n        'KMXoMEyphCEzW1I2GRvYDugL3Z9MWrnHkoaoH2l8YyTYvszTvdgxBPpM2x4pSkp+\\n' +\r\n        '76d4/eRpJ5mVuQ93nC+YG0wXCxSq63hX4kyZgPxgCdAA+qgFfKIGyNqUIqWgeyTP\\n' +\r\n        'n5OgKaboYk2141Rf2hGMD3/hsGm0rrJh7g3C0ZirPws3eeJfulvAOIy2IZzqHUSY\\n' +\r\n        'jkFzraz6LEH3IlArT3jUPvWKqvh2lJWnnp56aqxBR7qHH5voD49UpJWY1K0BjGnS\\n' +\r\n        'OHcurpp0Yt/BIs4VZeWdCZwI7JaSeDcPMaMDBvND3Ia5Fga0thgYQTG6dE+N5fgF\\n' +\r\n        'z+hRaujXO2nb0LmddVyvE8prYlWRMuYFv+Co8hcMdJ0lEZlfVNu0jbm9/GmwAZ+l\\n' +\r\n        '9umeYO9yz/uC7edC8XJBglMAKUmVK9wNtOckUWAcCfnPWYLbYa/PqtXBYcxrso5j\\n' +\r\n        'iaS/A7iEW51uteHBGrViCy1afGG+hiUWwFlesli+Rq4dNstX3h6h2baWABaAxEVJ\\n' +\r\n        'y1RnTQSz6mROT1VmZSgSVO37rgIyY0Hf0872ogcTS+FfvXgBxCxsNWEbiQ/XXva4\\n' +\r\n        '0Ws=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIICtDCCAjqgAwIBAgIRAMyaTlVLN0ndGp4ffwKAfoMwCgYIKoZIzj0EAwMwgZkx\\n' +\r\n        'CzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMu\\n' +\r\n        'MRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEyMDAGA1UEAwwpQW1h\\n' +\r\n        'em9uIFJEUyBtZS1jZW50cmFsLTEgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcM\\n' +\r\n        'B1NlYXR0bGUwIBcNMjIwNTA3MDA0NDM3WhgPMjEyMjA1MDcwMTQ0MzdaMIGZMQsw\\n' +\r\n        'CQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjET\\n' +\r\n        'MBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMjAwBgNVBAMMKUFtYXpv\\n' +\r\n        'biBSRFMgbWUtY2VudHJhbC0xIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQHDAdT\\n' +\r\n        'ZWF0dGxlMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAE19nCV1nsI6CohSor13+B25cr\\n' +\r\n        'zg+IHdi9Y3L7ziQnHWI6yjBazvnKD+oC71aRRlR8b5YXsYGUQxWzPLHN7EGPcSGv\\n' +\r\n        'bzA9SLG1KQYCJaQ0m9Eg/iGrwKWOgylbhVw0bCxoo0IwQDAPBgNVHRMBAf8EBTAD\\n' +\r\n        'AQH/MB0GA1UdDgQWBBS4KsknsJXM9+QPEkBdZxUPaLr11zAOBgNVHQ8BAf8EBAMC\\n' +\r\n        'AYYwCgYIKoZIzj0EAwMDaAAwZQIxAJaRgrYIEfXQMZQQDxMTYS0azpyWSseQooXo\\n' +\r\n        'L3nYq4OHGBgYyQ9gVjvRYWU85PXbfgIwdi82DtANQFkCu+j+BU0JBY/uRKPEeYzo\\n' +\r\n        'JG92igKIcXPqCoxIJ7lJbbzmuf73gQu5\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIGATCCA+mgAwIBAgIRAJwCobx0Os8F7ihbJngxrR8wDQYJKoZIhvcNAQEMBQAw\\n' +\r\n        'gZgxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\r\n        'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTExMC8GA1UEAwwo\\n' +\r\n        'QW1hem9uIFJEUyBtZS1zb3V0aC0xIFJvb3QgQ0EgUlNBNDA5NiBHMTEQMA4GA1UE\\n' +\r\n        'BwwHU2VhdHRsZTAgFw0yMTA1MjAxNzE1MzNaGA8yMTIxMDUyMDE4MTUzM1owgZgx\\n' +\r\n        'CzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMu\\n' +\r\n        'MRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTExMC8GA1UEAwwoQW1h\\n' +\r\n        'em9uIFJEUyBtZS1zb3V0aC0xIFJvb3QgQ0EgUlNBNDA5NiBHMTEQMA4GA1UEBwwH\\n' +\r\n        'U2VhdHRsZTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBANukKwlm+ZaI\\n' +\r\n        'Y5MkWGbEVLApEyLmlrHLEg8PfiiEa9ts7jssQcin3bzEPdTqGr5jo91ONoZ3ccWq\\n' +\r\n        'xJgg1W3bLu5CAO2CqIOXTXHRyCO/u0Ch1FGgWB8xETPSi3UHt/Vn1ltdO6DYdbDU\\n' +\r\n        'mYgwzYrvLBdRCwxsb9o+BuYQHVFzUYonqk/y9ujz3gotzFq7r55UwDTA1ita3vb4\\n' +\r\n        'eDKjIb4b1M4Wr81M23WHonpje+9qkkrAkdQcHrkgvSCV046xsq/6NctzwCUUNsgF\\n' +\r\n        '7Q1a8ut5qJEYpz5ta8vI1rqFqAMBqCbFjRYlmAoTTpFPOmzAVxV+YoqTrW5A16su\\n' +\r\n        '/2SXlMYfJ/n/ad/QfBNPPAAQMpyOr2RCL/YiL/PFZPs7NxYjnZHNWxMLSPgFyI+/\\n' +\r\n        't2klnn5jR76KJK2qimmaXedB90EtFsMRUU1e4NxH9gDuyrihKPJ3aVnZ35mSipvR\\n' +\r\n        '/1KB8t8gtFXp/VQaz2sg8+uxPMKB81O37fL4zz6Mg5K8+aq3ejBiyHucpFGnsnVB\\n' +\r\n        '3kQWeD36ONkybngmgWoyPceuSWm1hQ0Z7VRAQX+KlxxSaHmSaIk1XxZu9h9riQHx\\n' +\r\n        'fMuev6KXjRn/CjCoUTn+7eFrt0dT5GryQEIZP+nA0oq0LKxogigHNZlwAT4flrqb\\n' +\r\n        'JUfZJrqgoce5HjZSXl10APbtPjJi0fW9AgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMB\\n' +\r\n        'Af8wHQYDVR0OBBYEFEfV+LztI29OVDRm0tqClP3NrmEWMA4GA1UdDwEB/wQEAwIB\\n' +\r\n        'hjANBgkqhkiG9w0BAQwFAAOCAgEAvSNe+0wuk53KhWlRlRf2x/97H2Q76X3anzF0\\n' +\r\n        '5fOSVm022ldALzXMzqOfdnoKIhAu2oVKiHHKs7mMas+T6TL+Mkphx0CYEVxFE3PG\\n' +\r\n        '061q3CqJU+wMm9W9xsB79oB2XG47r1fIEywZZ3GaRsatAbjcNOT8uBaATPQAfJFN\\n' +\r\n        'zjFe4XyN+rA4cFrYNvfHTeu5ftrYmvks7JlRaJgEGWsz+qXux7uvaEEVPqEumd2H\\n' +\r\n        'uYeaRNOZ2V23R009X5lbgBFx9tq5VDTnKhQiTQ2SeT0rc1W3Dz5ik6SbQQNP3nSR\\n' +\r\n        '0Ywy7r/sZ3fcDyfFiqnrVY4Ympfvb4YW2PZ6OsQJbzH6xjdnTG2HtzEU30ngxdp1\\n' +\r\n        'WUEF4zt6rjJCp7QBUqXgdlHvJqYu6949qtWjEPiFN9uSsRV2i1YDjJqN52dLjAPn\\n' +\r\n        'AipJKo8x1PHTwUzuITqnB9BdP+5TlTl8biJfkEf/+08eWDTLlDHr2VrZLOLompTh\\n' +\r\n        'bS5OrhDmqA2Q+O+EWrTIhMflwwlCpR9QYM/Xwvlbad9H0FUHbJsCVNaru3wGOgWo\\n' +\r\n        'tt3dNSK9Lqnv/Ej9K9v6CRr36in4ylJKivhJ5B9E7ABHg7EpBJ1xi7O5eNDkNoJG\\n' +\r\n        '+pFyphJq3AkBR2U4ni2tUaTAtSW2tks7IaiDV+UMtqZyGabT5ISQfWLLtLHSWn2F\\n' +\r\n        'Tspdjbg=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIECTCCAvGgAwIBAgIRAJZFh4s9aZGzKaTMLrSb4acwDQYJKoZIhvcNAQELBQAw\\n' +\r\n        'gZwxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\r\n        'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE1MDMGA1UEAwws\\n' +\r\n        'QW1hem9uIFJEUyBCZXRhIHVzLWVhc3QtMSBSb290IENBIFJTQTIwNDggRzExEDAO\\n' +\r\n        'BgNVBAcMB1NlYXR0bGUwIBcNMjEwNTE4MjEyODQxWhgPMjA2MTA1MTgyMjI4NDFa\\n' +\r\n        'MIGcMQswCQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywg\\n' +\r\n        'SW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExNTAzBgNVBAMM\\n' +\r\n        'LEFtYXpvbiBSRFMgQmV0YSB1cy1lYXN0LTEgUm9vdCBDQSBSU0EyMDQ4IEcxMRAw\\n' +\r\n        'DgYDVQQHDAdTZWF0dGxlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\\n' +\r\n        '17i2yoU6diep+WrqxIn2CrDEO2NdJVwWTSckx4WMZlLpkQDoymSmkNHjq9ADIApD\\n' +\r\n        'A31Cx+843apL7wub8QkFZD0Tk7/ThdHWJOzcAM3ov98QBPQfOC1W5zYIIRP2F+vQ\\n' +\r\n        'TRETHQnLcW3rLv0NMk5oQvIKpJoC9ett6aeVrzu+4cU4DZVWYlJUoC/ljWzCluau\\n' +\r\n        '8blfW0Vwin6OB7s0HCG5/wijQWJBU5SrP/KAIPeQi1GqG5efbqAXDr/ple0Ipwyo\\n' +\r\n        'Xjjl73LenGUgqpANlC9EAT4i7FkJcllLPeK3NcOHjuUG0AccLv1lGsHAxZLgjk/x\\n' +\r\n        'z9ZcnVV9UFWZiyJTKxeKPwIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MB0GA1Ud\\n' +\r\n        'DgQWBBRWyMuZUo4gxCR3Luf9/bd2AqZ7CjAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZI\\n' +\r\n        'hvcNAQELBQADggEBAIqN2DlIKlvDFPO0QUZQVFbsi/tLdYM98/vvzBpttlTGVMyD\\n' +\r\n        'gJuQeHVz+MnhGIwoCGOlGU3OOUoIlLAut0+WG74qYczn43oA2gbMd7HoD7oL/IGg\\n' +\r\n        'njorBwJVcuuLv2G//SqM3nxGcLRtkRnQ+lvqPxMz9+0fKFUn6QcIDuF0QSfthLs2\\n' +\r\n        'WSiGEPKO9c9RSXdRQ4pXA7c3hXng8P4A2ZmdciPne5Nu4I4qLDGZYRrRLRkNTrOi\\n' +\r\n        'TyS6r2HNGUfgF7eOSeKt3NWL+mNChcYj71/Vycf5edeczpUgfnWy9WbPrK1svKyl\\n' +\r\n        'aAs2xg+X6O8qB+Mnj2dNBzm+lZIS3sIlm+nO9sg=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIICrjCCAjSgAwIBAgIRAPAlEk8VJPmEzVRRaWvTh2AwCgYIKoZIzj0EAwMwgZYx\\n' +\r\n        'CzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMu\\n' +\r\n        'MRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEvMC0GA1UEAwwmQW1h\\n' +\r\n        'em9uIFJEUyB1cy1lYXN0LTEgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcMB1Nl\\n' +\r\n        'YXR0bGUwIBcNMjEwNTI1MjI0MTU1WhgPMjEyMTA1MjUyMzQxNTVaMIGWMQswCQYD\\n' +\r\n        'VQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEG\\n' +\r\n        'A1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExLzAtBgNVBAMMJkFtYXpvbiBS\\n' +\r\n        'RFMgdXMtZWFzdC0xIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQHDAdTZWF0dGxl\\n' +\r\n        'MHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEx5xjrup8II4HOJw15NTnS3H5yMrQGlbj\\n' +\r\n        'EDA5MMGnE9DmHp5dACIxmPXPMe/99nO7wNdl7G71OYPCgEvWm0FhdvVUeTb3LVnV\\n' +\r\n        'BnaXt32Ek7/oxGk1T+Df03C+W0vmuJ+wo0IwQDAPBgNVHRMBAf8EBTADAQH/MB0G\\n' +\r\n        'A1UdDgQWBBTGXmqBWN/1tkSea4pNw0oHrjk2UDAOBgNVHQ8BAf8EBAMCAYYwCgYI\\n' +\r\n        'KoZIzj0EAwMDaAAwZQIxAIqqZWCSrIkZ7zsv/FygtAusW6yvlL935YAWYPVXU30m\\n' +\r\n        'jkMFLM+/RJ9GMvnO8jHfCgIwB+whlkcItzE9CRQ6CsMo/d5cEHDUu/QW6jSIh9BR\\n' +\r\n        'OGh9pTYPVkUbBiKPA7lVVhre\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIF/zCCA+egAwIBAgIRAJGY9kZITwfSRaAS/bSBOw8wDQYJKoZIhvcNAQEMBQAw\\n' +\r\n        'gZcxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\r\n        'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEwMC4GA1UEAwwn\\n' +\r\n        'QW1hem9uIFJEUyBzYS1lYXN0LTEgUm9vdCBDQSBSU0E0MDk2IEcxMRAwDgYDVQQH\\n' +\r\n        'DAdTZWF0dGxlMCAXDTIxMDUxOTE4MTEyMFoYDzIxMjEwNTE5MTkxMTIwWjCBlzEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdBbWF6\\n' +\r\n        'b24gUkRTIHNhLWVhc3QtMSBSb290IENBIFJTQTQwOTYgRzExEDAOBgNVBAcMB1Nl\\n' +\r\n        'YXR0bGUwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDe2vlDp6Eo4WQi\\n' +\r\n        'Wi32YJOgdXHhxTFrLjB9SRy22DYoMaWfginJIwJcSR8yse8ZDQuoNhERB9LRggAE\\n' +\r\n        'eng23mhrfvtL1yQkMlZfBu4vG1nOb22XiPFzk7X2wqz/WigdYNBCqa1kK3jrLqPx\\n' +\r\n        'YUy7jk2oZle4GLVRTNGuMfcid6S2hs3UCdXfkJuM2z2wc3WUlvHoVNk37v2/jzR/\\n' +\r\n        'hSCHZv5YHAtzL/kLb/e64QkqxKll5QmKhyI6d7vt6Lr1C0zb+DmwxUoJhseAS0hI\\n' +\r\n        'dRk5DklMb4Aqpj6KN0ss0HAYqYERGRIQM7KKA4+hxDMUkJmt8KqWKZkAlCZgflzl\\n' +\r\n        'm8NZ31o2cvBzf6g+VFHx+6iVrSkohVQydkCxx7NJ743iPKsh8BytSM4qU7xx4OnD\\n' +\r\n        'H2yNXcypu+D5bZnVZr4Pywq0w0WqbTM2bpYthG9IC4JeVUvZ2mDc01lqOlbMeyfT\\n' +\r\n        'og5BRPLDXdZK8lapo7se2teh64cIfXtCmM2lDSwm1wnH2iSK+AWZVIM3iE45WSGc\\n' +\r\n        'vZ+drHfVgjJJ5u1YrMCWNL5C2utFbyF9Obw9ZAwm61MSbPQL9JwznhNlCh7F2ANW\\n' +\r\n        'ZHWQPNcOAJqzE4uVcJB1ZeVl28ORYY1668lx+s9yYeMXk3QQdj4xmdnvoBFggqRB\\n' +\r\n        'ZR6Z0D7ZohADXe024RzEo1TukrQgKQIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/\\n' +\r\n        'MB0GA1UdDgQWBBT7Vs4Y5uG/9aXnYGNMEs6ycPUT3jAOBgNVHQ8BAf8EBAMCAYYw\\n' +\r\n        'DQYJKoZIhvcNAQEMBQADggIBACN4Htp2PvGcQA0/sAS+qUVWWJoAXSsu8Pgc6Gar\\n' +\r\n        '7tKVlNJ/4W/a6pUV2Xo/Tz3msg4yiE8sMESp2k+USosD5n9Alai5s5qpWDQjrqrh\\n' +\r\n        '76AGyF2nzve4kIN19GArYhm4Mz/EKEG1QHYvBDGgXi3kNvL/a2Zbybp+3LevG+q7\\n' +\r\n        'xtx4Sz9yIyMzuT/6Y7ijtiMZ9XbuxGf5wab8UtwT3Xq1UradJy0KCkzRJAz/Wy/X\\n' +\r\n        'HbTkEvKSaYKExH6sLo0jqdIjV/d2Io31gt4e0Ly1ER2wPyFa+pc/swu7HCzrN+iz\\n' +\r\n        'A2ZM4+KX9nBvFyfkHLix4rALg+WTYJa/dIsObXkdZ3z8qPf5A9PXlULiaa1mcP4+\\n' +\r\n        'rokw74IyLEYooQ8iSOjxumXhnkTS69MAdGzXYE5gnHokABtGD+BB5qLhtLt4fqAp\\n' +\r\n        '8AyHpQWMyV42M9SJLzQ+iOz7kAgJOBOaVtJI3FV/iAg/eqWVm3yLuUTWDxSHrKuL\\n' +\r\n        'N19+pSjF6TNvUSFXwEa2LJkfDqIOCE32iOuy85QY//3NsgrSQF6UkSPa95eJrSGI\\n' +\r\n        '3hTRYYh3Up2GhBGl1KUy7/o0k3KRZTk4s38fylY8bZ3TakUOH5iIGoHyFVVcp361\\n' +\r\n        'Pyy25SzFSmNalWoQd9wZVc/Cps2ldxhcttM+WLkFNzprd0VJa8qTz8vYtHP0ouDN\\n' +\r\n        'nWS0\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIGCTCCA/GgAwIBAgIRAOY7gfcBZgR2tqfBzMbFQCUwDQYJKoZIhvcNAQEMBQAw\\n' +\r\n        'gZwxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\r\n        'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE1MDMGA1UEAwws\\n' +\r\n        'QW1hem9uIFJEUyBhcC1zb3V0aGVhc3QtNCBSb290IENBIFJTQTQwOTYgRzExEDAO\\n' +\r\n        'BgNVBAcMB1NlYXR0bGUwIBcNMjIwNTI1MTY1NDU5WhgPMjEyMjA1MjUxNzU0NTla\\n' +\r\n        'MIGcMQswCQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywg\\n' +\r\n        'SW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExNTAzBgNVBAMM\\n' +\r\n        'LEFtYXpvbiBSRFMgYXAtc291dGhlYXN0LTQgUm9vdCBDQSBSU0E0MDk2IEcxMRAw\\n' +\r\n        'DgYDVQQHDAdTZWF0dGxlMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA\\n' +\r\n        'lfxER43FuLRdL08bddF0YhbCP+XXKj1A/TFMXmd2My8XDei8rPXFYyyjMig9+xZw\\n' +\r\n        'uAsIxLwz8uiA26CKA8bCZKg5VG2kTeOJAfvBJaLv1CZefs3Z4Uf1Sjvm6MF2yqEj\\n' +\r\n        'GoORfyfL9HiZFTDuF/hcjWoKYCfMuG6M/wO8IbdICrX3n+BiYQJu/pFO660Mg3h/\\n' +\r\n        '8YBBWYDbHoCiH/vkqqJugQ5BM3OI5nsElW51P1icEEqti4AZ7JmtSv9t7fIFBVyR\\n' +\r\n        'oaEyOgpp0sm193F/cDJQdssvjoOnaubsSYm1ep3awZAUyGN/X8MBrPY95d0hLhfH\\n' +\r\n        'Ehc5Icyg+hsosBljlAyksmt4hFQ9iBnWIz/ZTfGMck+6p3HVL9RDgvluez+rWv59\\n' +\r\n        '8q7omUGsiPApy5PDdwI/Wt/KtC34/2sjslIJfvgifdAtkRPkhff1WEwER00ADrN9\\n' +\r\n        'eGGInaCpJfb1Rq8cV2n00jxg7DcEd65VR3dmIRb0bL+jWK62ni/WdEyomAOMfmGj\\n' +\r\n        'aWf78S/4rasHllWJ+QwnaUYY3u6N8Cgio0/ep4i34FxMXqMV3V0/qXdfhyabi/LM\\n' +\r\n        'wCxNo1Dwt+s6OtPJbwO92JL+829QAxydfmaMTeHBsgMPkG7RwAekeuatKGHNsc2Z\\n' +\r\n        'x2Q4C2wVvOGAhcHwxfM8JfZs3nDSZJndtVVnFlUY0UECAwEAAaNCMEAwDwYDVR0T\\n' +\r\n        'AQH/BAUwAwEB/zAdBgNVHQ4EFgQUpnG7mWazy6k97/tb5iduRB3RXgQwDgYDVR0P\\n' +\r\n        'AQH/BAQDAgGGMA0GCSqGSIb3DQEBDAUAA4ICAQCDLqq1Wwa9Tkuv7vxBnIeVvvFF\\n' +\r\n        'ecTn+P+wJxl9Qa2ortzqTHZsBDyJO62d04AgBwiDXkJ9a+bthgG0H1J7Xee8xqv1\\n' +\r\n        'xyX2yKj24ygHjspLotKP4eDMdDi5TYq+gdkbPmm9Q69B1+W6e049JVGXvWG8/7kU\\n' +\r\n        'igxeuCYwtCCdUPRLf6D8y+1XMGgVv3/DSOHWvTg3MJ1wJ3n3+eve3rjGdRYWZeJu\\n' +\r\n        'k21HLSZYzVrCtUsh2YAeLnUbSxVuT2Xr4JehYe9zW5HEQ8Je/OUfnCy9vzoN/ITw\\n' +\r\n        'osAH+EBJQey7RxEDqMwCaRefH0yeHFcnOll0OXg/urnQmwbEYzQ1uutJaBPsjU0J\\n' +\r\n        'Qf06sMxI7GiB5nPE+CnI2sM6A9AW9kvwexGXpNJiLxF8dvPQthpOKGcYu6BFvRmt\\n' +\r\n        '6ctfXd9b7JJoVqMWuf5cCY6ihpk1e9JTlAqu4Eb/7JNyGiGCR40iSLvV28un9wiE\\n' +\r\n        'plrdYxwcNYq851BEu3r3AyYWw/UW1AKJ5tM+/Gtok+AphMC9ywT66o/Kfu44mOWm\\n' +\r\n        'L3nSLSWEcgfUVgrikpnyGbUnGtgCmHiMlUtNVexcE7OtCIZoVAlCGKNu7tyuJf10\\n' +\r\n        'Qlk8oIIzfSIlcbHpOYoN79FkLoDNc2er4Gd+7w1oPQmdAB0jBJnA6t0OUBPKdDdE\\n' +\r\n        'Ufff2jrbfbzECn1ELg==\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIGCDCCA/CgAwIBAgIQIuO1A8LOnmc7zZ/vMm3TrDANBgkqhkiG9w0BAQwFADCB\\n' +\r\n        'nDELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\r\n        'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTUwMwYDVQQDDCxB\\n' +\r\n        'bWF6b24gUkRTIGFwLXNvdXRoZWFzdC0yIFJvb3QgQ0EgUlNBNDA5NiBHMTEQMA4G\\n' +\r\n        'A1UEBwwHU2VhdHRsZTAgFw0yMTA1MjQyMDQ2MThaGA8yMTIxMDUyNDIxNDYxOFow\\n' +\r\n        'gZwxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\r\n        'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE1MDMGA1UEAwws\\n' +\r\n        'QW1hem9uIFJEUyBhcC1zb3V0aGVhc3QtMiBSb290IENBIFJTQTQwOTYgRzExEDAO\\n' +\r\n        'BgNVBAcMB1NlYXR0bGUwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDq\\n' +\r\n        'qRHKbG8ZK6/GkGm2cenznEF06yHwI1gD5sdsHjTgekDZ2Dl9RwtDmUH2zFuIQwGj\\n' +\r\n        'SeC7E2iKwrJRA5wYzL9/Vk8NOILEKQOP8OIKUHbc7q8rEtjs401KcU6pFBBEdO9G\\n' +\r\n        'CTiRhogq+8mhC13AM/UriZJbKhwgM2UaDOzAneGMhQAGjH8z83NsNcPxpYVE7tqM\\n' +\r\n        'sch5yLtIJLkJRusrmQQTeHUev16YNqyUa+LuFclFL0FzFCimkcxUhXlbfEKXbssS\\n' +\r\n        'yPzjiv8wokGyo7+gA0SueceMO2UjfGfute3HlXZDcNvBbkSY+ver41jPydyRD6Qq\\n' +\r\n        'oEkh0tyIbPoa3oU74kwipJtz6KBEA3u3iq61OUR0ENhR2NeP7CSKrC24SnQJZ/92\\n' +\r\n        'qxusrbyV/0w+U4m62ug/o4hWNK1lUcc2AqiBOvCSJ7qpdteTFxcEIzDwYfERDx6a\\n' +\r\n        'd9+3IPvzMb0ZCxBIIUFMxLTF7yAxI9s6KZBBXSZ6tDcCCYIgEysEPRWMRAcG+ye/\\n' +\r\n        'fZVn9Vnzsj4/2wchC2eQrYpb1QvG4eMXA4M5tFHKi+/8cOPiUzJRgwS222J8YuDj\\n' +\r\n        'yEBval874OzXk8H8Mj0JXJ/jH66WuxcBbh5K7Rp5oJn7yju9yqX6qubY8gVeMZ1i\\n' +\r\n        'u4oXCopefDqa35JplQNUXbWwSebi0qJ4EK0V8F9Q+QIDAQABo0IwQDAPBgNVHRMB\\n' +\r\n        'Af8EBTADAQH/MB0GA1UdDgQWBBT4ysqCxaPe7y+g1KUIAenqu8PAgzAOBgNVHQ8B\\n' +\r\n        'Af8EBAMCAYYwDQYJKoZIhvcNAQEMBQADggIBALU8WN35KAjPZEX65tobtCDQFkIO\\n' +\r\n        'uJjv0alD7qLB0i9eY80C+kD87HKqdMDJv50a5fZdqOta8BrHutgFtDm+xo5F/1M3\\n' +\r\n        'u5/Vva5lV4xy5DqPajcF4Mw52czYBmeiLRTnyPJsU93EQIC2Bp4Egvb6LI4cMOgm\\n' +\r\n        '4pY2hL8DojOC5PXt4B1/7c1DNcJX3CMzHDm4SMwiv2MAxSuC/cbHXcWMk+qXdrVx\\n' +\r\n        '+ayLUSh8acaAOy3KLs1MVExJ6j9iFIGsDVsO4vr4ZNsYQiyHjp+L8ops6YVBO5AT\\n' +\r\n        'k/pI+axHIVsO5qiD4cFWvkGqmZ0gsVtgGUchZaacboyFsVmo6QPrl28l6LwxkIEv\\n' +\r\n        'GGJYvIBW8sfqtGRspjfX5TlNy5IgW/VOwGBdHHsvg/xpRo31PR3HOFw7uPBi7cAr\\n' +\r\n        'FiZRLJut7af98EB2UvovZnOh7uIEGPeecQWeOTQfJeWet2FqTzFYd0NUMgqPuJx1\\n' +\r\n        'vLKferP+ajAZLJvVnW1J7Vccx/pm0rMiUJEf0LRb/6XFxx7T2RGjJTi0EzXODTYI\\n' +\r\n        'gnLfBBjnolQqw+emf4pJ4pAtly0Gq1KoxTG2QN+wTd4lsCMjnelklFDjejwnl7Uy\\n' +\r\n        'vtxzRBAu/hi/AqDkDFf94m6j+edIrjbi9/JDFtQ9EDlyeqPgw0qwi2fwtJyMD45V\\n' +\r\n        'fejbXelUSJSzDIdY\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIGCTCCA/GgAwIBAgIRAN7Y9G9i4I+ZaslPobE7VL4wDQYJKoZIhvcNAQEMBQAw\\n' +\r\n        'gZwxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\r\n        'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE1MDMGA1UEAwws\\n' +\r\n        'QW1hem9uIFJEUyBhcC1ub3J0aGVhc3QtMiBSb290IENBIFJTQTQwOTYgRzExEDAO\\n' +\r\n        'BgNVBAcMB1NlYXR0bGUwIBcNMjEwNTIwMTYzMzIzWhgPMjEyMTA1MjAxNzMzMjNa\\n' +\r\n        'MIGcMQswCQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywg\\n' +\r\n        'SW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExNTAzBgNVBAMM\\n' +\r\n        'LEFtYXpvbiBSRFMgYXAtbm9ydGhlYXN0LTIgUm9vdCBDQSBSU0E0MDk2IEcxMRAw\\n' +\r\n        'DgYDVQQHDAdTZWF0dGxlMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA\\n' +\r\n        '4BEPCiIfiK66Q/qa8k+eqf1Q3qsa6Xuu/fPkpuStXVBShhtXd3eqrM0iT4Xxs420\\n' +\r\n        'Va0vSB3oZ7l86P9zYfa60n6PzRxdYFckYX330aI7L/oFIdaodB/C9szvROI0oLG+\\n' +\r\n        '6RwmIF2zcprH0cTby8MiM7G3v9ykpq27g4WhDC1if2j8giOQL3oHpUaByekZNIHF\\n' +\r\n        'dIllsI3RkXmR3xmmxoOxJM1B9MZi7e1CvuVtTGOnSGpNCQiqofehTGwxCN2wFSK8\\n' +\r\n        'xysaWlw48G0VzZs7cbxoXMH9QbMpb4tpk0d+T8JfAPu6uWO9UwCLWWydf0CkmA/+\\n' +\r\n        'D50/xd1t33X9P4FEaPSg5lYbHXzSLWn7oLbrN2UqMLaQrkoEBg/VGvzmfN0mbflw\\n' +\r\n        '+T87bJ/VEOVNlG+gepyCTf89qIQVWOjuYMox4sK0PjzZGsYEuYiq1+OUT3vk/e5K\\n' +\r\n        'ag1fCcq2Isy4/iwB2xcXrsQ6ljwdk1fc+EmOnjGKrhuOHJY3S+RFv4ToQBsVyYhC\\n' +\r\n        'XGaC3EkqIX0xaCpDimxYhFjWhpDXAjG/zJ+hRLDAMCMhl/LPGRk/D1kzSbPmdjpl\\n' +\r\n        'lEMK5695PeBvEBTQdBQdOiYgOU3vWU6tzwwHfiM2/wgvess/q0FDAHfJhppbgbb9\\n' +\r\n        '3vgsIUcsvoC5o29JvMsUxsDRvsAfEmMSDGkJoA/X6GECAwEAAaNCMEAwDwYDVR0T\\n' +\r\n        'AQH/BAUwAwEB/zAdBgNVHQ4EFgQUgEWm1mZCbGD6ytbwk2UU1aLaOUUwDgYDVR0P\\n' +\r\n        'AQH/BAQDAgGGMA0GCSqGSIb3DQEBDAUAA4ICAQBb4+ABTGBGwxK1U/q4g8JDqTQM\\n' +\r\n        '1Wh8Oz8yAk4XtPJMAmCctxbd81cRnSnePWw/hxViLVtkZ/GsemvXfqAQyOn1coN7\\n' +\r\n        'QeYSw+ZOlu0j2jEJVynmgsR7nIRqE7QkCyZAU+d2FTJUfmee+IiBiGyFGgxz9n7A\\n' +\r\n        'JhBZ/eahBbiuoOik/APW2JWLh0xp0W0GznfJ8lAlaQTyDa8iDXmVtbJg9P9qzkvl\\n' +\r\n        'FgPXQttzEOyooF8Pb2LCZO4kUz+1sbU7tHdr2YE+SXxt6D3SBv+Yf0FlvyWLiqVk\\n' +\r\n        'GDEOlPPTDSjAWgKnqST8UJ0RDcZK/v1ixs7ayqQJU0GUQm1I7LGTErWXHMnCuHKe\\n' +\r\n        'UKYuiSZwmTcJ06NgdhcCnGZgPq13ryMDqxPeltQc3n5eO7f1cL9ERYLDLOzm6A9P\\n' +\r\n        'oQ3MfcVOsbHgGHZWaPSeNrQRN9xefqBXH0ZPasgcH9WJdsLlEjVUXoultaHOKx3b\\n' +\r\n        'UCCb+d3EfqF6pRT488ippOL6bk7zNubwhRa/+y4wjZtwe3kAX78ACJVcjPobH9jZ\\n' +\r\n        'ErySads5zdQeaoee5wRKdp3TOfvuCe4bwLRdhOLCHWzEcXzY3g/6+ppLvNom8o+h\\n' +\r\n        'Bh5X26G6KSfr9tqhQ3O9IcbARjnuPbvtJnoPY0gz3EHHGPhy0RNW8i2gl3nUp0ah\\n' +\r\n        'PtjwbKW0hYAhIttT0Q==\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIICtzCCAj2gAwIBAgIQQRBQTs6Y3H1DDbpHGta3lzAKBggqhkjOPQQDAzCBmzEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTQwMgYDVQQDDCtBbWF6\\n' +\r\n        'b24gUkRTIGFwLXNvdXRoZWFzdC0zIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQH\\n' +\r\n        'DAdTZWF0dGxlMCAXDTIxMDYxMTAwMTI0M1oYDzIxMjEwNjExMDExMjQzWjCBmzEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTQwMgYDVQQDDCtBbWF6\\n' +\r\n        'b24gUkRTIGFwLXNvdXRoZWFzdC0zIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQH\\n' +\r\n        'DAdTZWF0dGxlMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEs0942Xj4m/gKA+WA6F5h\\n' +\r\n        'AHYuek9eGpzTRoLJddM4rEV1T3eSueytMVKOSlS3Ub9IhyQrH2D8EHsLYk9ktnGR\\n' +\r\n        'pATk0kCYTqFbB7onNo070lmMJmGT/Q7NgwC8cySChFxbo0IwQDAPBgNVHRMBAf8E\\n' +\r\n        'BTADAQH/MB0GA1UdDgQWBBQ20iKBKiNkcbIZRu0y1uoF1yJTEzAOBgNVHQ8BAf8E\\n' +\r\n        'BAMCAYYwCgYIKoZIzj0EAwMDaAAwZQIwYv0wTSrpQTaPaarfLN8Xcqrqu3hzl07n\\n' +\r\n        'FrESIoRw6Cx77ZscFi2/MV6AFyjCV/TlAjEAhpwJ3tpzPXpThRML8DMJYZ3YgMh3\\n' +\r\n        'CMuLqhPpla3cL0PhybrD27hJWl29C4el6aMO\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIICrDCCAjOgAwIBAgIQGcztRyV40pyMKbNeSN+vXTAKBggqhkjOPQQDAzCBljEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMS8wLQYDVQQDDCZBbWF6\\n' +\r\n        'b24gUkRTIHVzLWVhc3QtMiBSb290IENBIEVDQzM4NCBHMTEQMA4GA1UEBwwHU2Vh\\n' +\r\n        'dHRsZTAgFw0yMTA1MjEyMzE1NTZaGA8yMTIxMDUyMjAwMTU1NlowgZYxCzAJBgNV\\n' +\r\n        'BAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYD\\n' +\r\n        'VQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEvMC0GA1UEAwwmQW1hem9uIFJE\\n' +\r\n        'UyB1cy1lYXN0LTIgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcMB1NlYXR0bGUw\\n' +\r\n        'djAQBgcqhkjOPQIBBgUrgQQAIgNiAAQfDcv+GGRESD9wT+I5YIPRsD3L+/jsiIis\\n' +\r\n        'Tr7t9RSbFl+gYpO7ZbDXvNbV5UGOC5lMJo/SnqFRTC6vL06NF7qOHfig3XO8QnQz\\n' +\r\n        '6T5uhhrhnX2RSY3/10d2kTyHq3ZZg3+jQjBAMA8GA1UdEwEB/wQFMAMBAf8wHQYD\\n' +\r\n        'VR0OBBYEFLDyD3PRyNXpvKHPYYxjHXWOgfPnMA4GA1UdDwEB/wQEAwIBhjAKBggq\\n' +\r\n        'hkjOPQQDAwNnADBkAjB20HQp6YL7CqYD82KaLGzgw305aUKw2aMrdkBR29J183jY\\n' +\r\n        '6Ocj9+Wcif9xnRMS+7oCMAvrt03rbh4SU9BohpRUcQ2Pjkh7RoY0jDR4Xq4qzjNr\\n' +\r\n        '5UFr3BXpFvACxXF51BksGQ==\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIICrjCCAjWgAwIBAgIQeKbS5zvtqDvRtwr5H48cAjAKBggqhkjOPQQDAzCBlzEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdBbWF6\\n' +\r\n        'b24gUkRTIG1lLXNvdXRoLTEgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcMB1Nl\\n' +\r\n        'YXR0bGUwIBcNMjEwNTIwMTcxOTU1WhgPMjEyMTA1MjAxODE5NTVaMIGXMQswCQYD\\n' +\r\n        'VQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEG\\n' +\r\n        'A1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMDAuBgNVBAMMJ0FtYXpvbiBS\\n' +\r\n        'RFMgbWUtc291dGgtMSBSb290IENBIEVDQzM4NCBHMTEQMA4GA1UEBwwHU2VhdHRs\\n' +\r\n        'ZTB2MBAGByqGSM49AgEGBSuBBAAiA2IABEKjgUaAPmUlRMEQdBC7BScAGosJ1zRV\\n' +\r\n        'LDd38qTBjzgmwBfQJ5ZfGIvyEK5unB09MB4e/3qqK5I/L6Qn5Px/n5g4dq0c7MQZ\\n' +\r\n        'u7G9GBYm90U3WRJBf7lQrPStXaRnS4A/O6NCMEAwDwYDVR0TAQH/BAUwAwEB/zAd\\n' +\r\n        'BgNVHQ4EFgQUNKcAbGEIn03/vkwd8g6jNyiRdD4wDgYDVR0PAQH/BAQDAgGGMAoG\\n' +\r\n        'CCqGSM49BAMDA2cAMGQCMHIeTrjenCSYuGC6txuBt/0ZwnM/ciO9kHGWVCoK8QLs\\n' +\r\n        'jGghb5/YSFGZbmQ6qpGlSAIwVOQgdFfTpEfe5i+Vs9frLJ4QKAfc27cTNYzRIM0I\\n' +\r\n        'E+AJgK4C4+DiyyMzOpiCfmvq\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIGCDCCA/CgAwIBAgIQSFkEUzu9FYgC5dW+5lnTgjANBgkqhkiG9w0BAQwFADCB\\n' +\r\n        'nDELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\r\n        'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTUwMwYDVQQDDCxB\\n' +\r\n        'bWF6b24gUkRTIGFwLXNvdXRoZWFzdC0zIFJvb3QgQ0EgUlNBNDA5NiBHMTEQMA4G\\n' +\r\n        'A1UEBwwHU2VhdHRsZTAgFw0yMTA2MTEwMDA4MzZaGA8yMTIxMDYxMTAxMDgzNlow\\n' +\r\n        'gZwxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\r\n        'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE1MDMGA1UEAwws\\n' +\r\n        'QW1hem9uIFJEUyBhcC1zb3V0aGVhc3QtMyBSb290IENBIFJTQTQwOTYgRzExEDAO\\n' +\r\n        'BgNVBAcMB1NlYXR0bGUwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDx\\n' +\r\n        'my5Qmd8zdwaI/KOKV9Xar9oNbhJP5ED0JCiigkuvCkg5qM36klszE8JhsUj40xpp\\n' +\r\n        'vQw9wkYW4y+C8twBpzKGBvakqMnoaVUV7lOCKx0RofrnNwkZCboTBB4X/GCZ3fIl\\n' +\r\n        'YTybS7Ehi1UuiaZspIT5A2jidoA8HiBPk+mTg1UUkoWS9h+MEAPa8L4DY6fGf4pO\\n' +\r\n        'J1Gk2cdePuNzzIrpm2yPto+I8MRROwZ3ha7ooyymOXKtz2c7jEHHJ314boCXAv9G\\n' +\r\n        'cdo27WiebewZkHHH7Zx9iTIVuuk2abyVSzvLVeGv7Nuy4lmSqa5clWYqWsGXxvZ2\\n' +\r\n        '0fZC5Gd+BDUMW1eSpW7QDTk3top6x/coNoWuLSfXiC5ZrJkIKimSp9iguULgpK7G\\n' +\r\n        'abMMN4PR+O+vhcB8E879hcwmS2yd3IwcPTl3QXxufqeSV58/h2ibkqb/W4Bvggf6\\n' +\r\n        '5JMHQPlPHOqMCVFIHP1IffIo+Of7clb30g9FD2j3F4qgV3OLwEDNg/zuO1DiAvH1\\n' +\r\n        'L+OnmGHkfbtYz+AVApkAZrxMWwoYrwpauyBusvSzwRE24vLTd2i80ZDH422QBLXG\\n' +\r\n        'rN7Zas8rwIiBKacJLYtBYETw8mfsNt8gb72aIQX6cZOsphqp6hUtKaiMTVgGazl7\\n' +\r\n        'tBXqbB+sIv3S9X6bM4cZJKkMJOXbnyCCLZFYv8TurwIDAQABo0IwQDAPBgNVHRMB\\n' +\r\n        'Af8EBTADAQH/MB0GA1UdDgQWBBTOVtaS1b/lz6yJDvNk65vEastbQTAOBgNVHQ8B\\n' +\r\n        'Af8EBAMCAYYwDQYJKoZIhvcNAQEMBQADggIBABEONg+TmMZM/PrYGNAfB4S41zp1\\n' +\r\n        '3CVjslZswh/pC4kgXSf8cPJiUOzMwUevuFQj7tCqxQtJEygJM2IFg4ViInIah2kh\\n' +\r\n        'xlRakEGGw2dEVlxZAmmLWxlL1s1lN1565t5kgVwM0GVfwYM2xEvUaby6KDVJIkD3\\n' +\r\n        'aM6sFDBshvVA70qOggM6kU6mwTbivOROzfoIQDnVaT+LQjHqY/T+ok6IN0YXXCWl\\n' +\r\n        'Favai8RDjzLDFwXSRvgIK+1c49vlFFY4W9Efp7Z9tPSZU1TvWUcKdAtV8P2fPHAS\\n' +\r\n        'vAZ+g9JuNfeawhEibjXkwg6Z/yFUueQCQOs9TRXYogzp5CMMkfdNJF8byKYqHscs\\n' +\r\n        'UosIcETnHwqwban99u35sWcoDZPr6aBIrz7LGKTJrL8Nis8qHqnqQBXu/fsQEN8u\\n' +\r\n        'zJ2LBi8sievnzd0qI0kaWmg8GzZmYH1JCt1GXSqOFkI8FMy2bahP7TUQR1LBUKQ3\\n' +\r\n        'hrOSqldkhN+cSAOnvbQcFzLr+iEYEk34+NhcMIFVE+51KJ1n6+zISOinr6mI3ckX\\n' +\r\n        '6p2tmiCD4Shk2Xx/VTY/KGvQWKFcQApWezBSvDNlGe0yV71LtLf3dr1pr4ofo7cE\\n' +\r\n        'rYucCJ40bfxEU/fmzYdBF32xP7AOD9U0FbOR3Mcthc6Z6w20WFC+zru8FGY08gPf\\n' +\r\n        'WT1QcNdw7ntUJP/w\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIICrzCCAjWgAwIBAgIQARky6+5PNFRkFVOp3Ob1CTAKBggqhkjOPQQDAzCBlzEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdBbWF6\\n' +\r\n        'b24gUkRTIGV1LXNvdXRoLTIgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcMB1Nl\\n' +\r\n        'YXR0bGUwIBcNMjIwNTIzMTg0MTI4WhgPMjEyMjA1MjMxOTQxMjdaMIGXMQswCQYD\\n' +\r\n        'VQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEG\\n' +\r\n        'A1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMDAuBgNVBAMMJ0FtYXpvbiBS\\n' +\r\n        'RFMgZXUtc291dGgtMiBSb290IENBIEVDQzM4NCBHMTEQMA4GA1UEBwwHU2VhdHRs\\n' +\r\n        'ZTB2MBAGByqGSM49AgEGBSuBBAAiA2IABNVGL5oF7cfIBxKyWd2PVK/S5yQfaJY3\\n' +\r\n        'QFHWvEdt6951n9JhiiPrHzfVHsxZp1CBjILRMzjgRbYWmc8qRoLkgGE7htGdwudJ\\n' +\r\n        'Fa/WuKzO574Prv4iZXUnVGTboC7JdvKbh6NCMEAwDwYDVR0TAQH/BAUwAwEB/zAd\\n' +\r\n        'BgNVHQ4EFgQUgDeIIEKynwUbNXApdIPnmRWieZwwDgYDVR0PAQH/BAQDAgGGMAoG\\n' +\r\n        'CCqGSM49BAMDA2gAMGUCMEOOJfucrST+FxuqJkMZyCM3gWGZaB+/w6+XUAJC6hFM\\n' +\r\n        'uSTY0F44/bERkA4XhH+YGAIxAIpJQBakCA1/mXjsTnQ+0El9ty+LODp8ibkn031c\\n' +\r\n        '8DKDS7pR9UK7ZYdR6zFg3ZCjQw==\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIICrjCCAjOgAwIBAgIQJvkWUcYLbnxtuwnyjMmntDAKBggqhkjOPQQDAzCBljEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMS8wLQYDVQQDDCZBbWF6\\n' +\r\n        'b24gUkRTIGV1LXdlc3QtMyBSb290IENBIEVDQzM4NCBHMTEQMA4GA1UEBwwHU2Vh\\n' +\r\n        'dHRsZTAgFw0yMTA1MjUyMjI2MTJaGA8yMTIxMDUyNTIzMjYxMlowgZYxCzAJBgNV\\n' +\r\n        'BAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYD\\n' +\r\n        'VQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEvMC0GA1UEAwwmQW1hem9uIFJE\\n' +\r\n        'UyBldS13ZXN0LTMgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcMB1NlYXR0bGUw\\n' +\r\n        'djAQBgcqhkjOPQIBBgUrgQQAIgNiAARENn8uHCyjn1dFax4OeXxvbV861qsXFD9G\\n' +\r\n        'DshumTmFzWWHN/69WN/AOsxy9XN5S7Cgad4gQgeYYYgZ5taw+tFo/jQvCLY//uR5\\n' +\r\n        'uihcLuLJ78opvRPvD9kbWZ6oXfBtFkWjQjBAMA8GA1UdEwEB/wQFMAMBAf8wHQYD\\n' +\r\n        'VR0OBBYEFKiK3LpoF+gDnqPldGSwChBPCYciMA4GA1UdDwEB/wQEAwIBhjAKBggq\\n' +\r\n        'hkjOPQQDAwNpADBmAjEA+7qfvRlnvF1Aosyp9HzxxCbN7VKu+QXXPhLEBWa5oeWW\\n' +\r\n        'UOcifunf/IVLC4/FGCsLAjEAte1AYp+iJyOHDB8UYkhBE/1sxnFaTiEPbvQBU0wZ\\n' +\r\n        'SuwWVLhu2wWDuSW+K7tTuL8p\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIID/zCCAuegAwIBAgIRAKeDpqX5WFCGNo94M4v69sUwDQYJKoZIhvcNAQELBQAw\\n' +\r\n        'gZcxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\r\n        'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEwMC4GA1UEAwwn\\n' +\r\n        'QW1hem9uIFJEUyBldS13ZXN0LTMgUm9vdCBDQSBSU0EyMDQ4IEcxMRAwDgYDVQQH\\n' +\r\n        'DAdTZWF0dGxlMCAXDTIxMDUyNTIyMTgzM1oYDzIwNjEwNTI1MjMxODMzWjCBlzEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdBbWF6\\n' +\r\n        'b24gUkRTIGV1LXdlc3QtMyBSb290IENBIFJTQTIwNDggRzExEDAOBgNVBAcMB1Nl\\n' +\r\n        'YXR0bGUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCcKOTEMTfzvs4H\\n' +\r\n        'WtJR8gI7GXN6xesulWtZPv21oT+fLGwJ+9Bv8ADCGDDrDxfeH/HxJmzG9hgVAzVn\\n' +\r\n        '4g97Bn7q07tGZM5pVi96/aNp11velZT7spOJKfJDZTlGns6DPdHmx48whpdO+dOb\\n' +\r\n        '6+eR0VwCIv+Vl1fWXgoACXYCoKjhxJs+R+fwY//0JJ1YG8yjZ+ghLCJmvlkOJmE1\\n' +\r\n        'TCPUyIENaEONd6T+FHGLVYRRxC2cPO65Jc4yQjsXvvQypoGgx7FwD5voNJnFMdyY\\n' +\r\n        '754JGPOOe/SZdepN7Tz7UEq8kn7NQSbhmCsgA/Hkjkchz96qN/YJ+H/okiQUTNB0\\n' +\r\n        'eG9ogiVFAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFFjayw9Y\\n' +\r\n        'MjbxfF14XAhMM2VPl0PfMA4GA1UdDwEB/wQEAwIBhjANBgkqhkiG9w0BAQsFAAOC\\n' +\r\n        'AQEAAtmx6d9+9CWlMoU0JCirtp4dSS41bBfb9Oor6GQ8WIr2LdfZLL6uES/ubJPE\\n' +\r\n        '1Sh5Vu/Zon5/MbqLMVrfniv3UpQIof37jKXsjZJFE1JVD/qQfRzG8AlBkYgHNEiS\\n' +\r\n        'VtD4lFxERmaCkY1tjKB4Dbd5hfhdrDy29618ZjbSP7NwAfnwb96jobCmMKgxVGiH\\n' +\r\n        'UqsLSiEBZ33b2hI7PJ6iTJnYBWGuiDnsWzKRmheA4nxwbmcQSfjbrNwa93w3caL2\\n' +\r\n        'v/4u54Kcasvcu3yFsUwJygt8z43jsGAemNZsS7GWESxVVlW93MJRn6M+MMakkl9L\\n' +\r\n        'tWaXdHZ+KUV7LhfYLb0ajvb40w==\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIEBDCCAuygAwIBAgIQJ5oxPEjefCsaESSwrxk68DANBgkqhkiG9w0BAQsFADCB\\n' +\r\n        'mjELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\r\n        'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTMwMQYDVQQDDCpB\\n' +\r\n        'bWF6b24gUkRTIGV1LWNlbnRyYWwtMiBSb290IENBIFJTQTIwNDggRzExEDAOBgNV\\n' +\r\n        'BAcMB1NlYXR0bGUwIBcNMjIwNjA2MjExNzA1WhgPMjA2MjA2MDYyMjE3MDVaMIGa\\n' +\r\n        'MQswCQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5j\\n' +\r\n        'LjETMBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMzAxBgNVBAMMKkFt\\n' +\r\n        'YXpvbiBSRFMgZXUtY2VudHJhbC0yIFJvb3QgQ0EgUlNBMjA0OCBHMTEQMA4GA1UE\\n' +\r\n        'BwwHU2VhdHRsZTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALTQt5eX\\n' +\r\n        'g+VP3BjO9VBkWJhE0GfLrU/QIk32I6WvrnejayTrlup9H1z4QWlXF7GNJrqScRMY\\n' +\r\n        'KhJHlcP05aPsx1lYco6pdFOf42ybXyWHHJdShj4A5glU81GTT+VrXGzHSarLmtua\\n' +\r\n        'eozkQgPpDsSlPt0RefyTyel7r3Cq+5K/4vyjCTcIqbfgaGwTU36ffjM1LaPCuE4O\\n' +\r\n        'nINMeD6YuImt2hU/mFl20FZ+IZQUIFZZU7pxGLqTRz/PWcH8tDDxnkYg7tNuXOeN\\n' +\r\n        'JbTpXrw7St50/E9ZQ0llGS+MxJD8jGRAa/oL4G/cwnV8P2OEPVVkgN9xDDQeieo0\\n' +\r\n        '3xkzolkDkmeKOnUCAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQU\\n' +\r\n        'bwu8635iQGQMRanekesORM8Hkm4wDgYDVR0PAQH/BAQDAgGGMA0GCSqGSIb3DQEB\\n' +\r\n        'CwUAA4IBAQAgN6LE9mUgjsj6xGCX1afYE69fnmCjjb0rC6eEe1mb/QZNcyw4XBIW\\n' +\r\n        '6+zTXo4mjZ4ffoxb//R0/+vdTE7IvaLgfAZgFsLKJCtYDDstXZj8ujQnGR9Pig3R\\n' +\r\n        'W+LpNacvOOSJSawNQq0Xrlcu55AU4buyD5VjcICnfF1dqBMnGTnh27m/scd/ZMx/\\n' +\r\n        'kapHZ/fMoK2mAgSX/NvUKF3UkhT85vSSM2BTtET33DzCPDQTZQYxFBa4rFRmFi4c\\n' +\r\n        'BLlmIReiCGyh3eJhuUUuYAbK6wLaRyPsyEcIOLMQmZe1+gAFm1+1/q5Ke9ugBmjf\\n' +\r\n        'PbTWjsi/lfZ5CdVAhc5lmZj/l5aKqwaS\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIICrjCCAjSgAwIBAgIRAKKPTYKln9L4NTx9dpZGUjowCgYIKoZIzj0EAwMwgZYx\\n' +\r\n        'CzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMu\\n' +\r\n        'MRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEvMC0GA1UEAwwmQW1h\\n' +\r\n        'em9uIFJEUyBldS13ZXN0LTIgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcMB1Nl\\n' +\r\n        'YXR0bGUwIBcNMjEwNTIxMjI1NTIxWhgPMjEyMTA1MjEyMzU1MjFaMIGWMQswCQYD\\n' +\r\n        'VQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEG\\n' +\r\n        'A1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExLzAtBgNVBAMMJkFtYXpvbiBS\\n' +\r\n        'RFMgZXUtd2VzdC0yIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQHDAdTZWF0dGxl\\n' +\r\n        'MHYwEAYHKoZIzj0CAQYFK4EEACIDYgAE/owTReDvaRqdmbtTzXbyRmEpKCETNj6O\\n' +\r\n        'hZMKH0F8oU9Tmn8RU7kQQj6xUKEyjLPrFBN7c+26TvrVO1KmJAvbc8bVliiJZMbc\\n' +\r\n        'C0yV5PtJTalvlMZA1NnciZuhxaxrzlK1o0IwQDAPBgNVHRMBAf8EBTADAQH/MB0G\\n' +\r\n        'A1UdDgQWBBT4i5HaoHtrs7Mi8auLhMbKM1XevDAOBgNVHQ8BAf8EBAMCAYYwCgYI\\n' +\r\n        'KoZIzj0EAwMDaAAwZQIxAK9A+8/lFdX4XJKgfP+ZLy5ySXC2E0Spoy12Gv2GdUEZ\\n' +\r\n        'p1G7c1KbWVlyb1d6subzkQIwKyH0Naf/3usWfftkmq8SzagicKz5cGcEUaULq4tO\\n' +\r\n        'GzA/AMpr63IDBAqkZbMDTCmH\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIICrzCCAjWgAwIBAgIQTgIvwTDuNWQo0Oe1sOPQEzAKBggqhkjOPQQDAzCBlzEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdBbWF6\\n' +\r\n        'b24gUkRTIGV1LW5vcnRoLTEgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcMB1Nl\\n' +\r\n        'YXR0bGUwIBcNMjEwNTI0MjEwNjM4WhgPMjEyMTA1MjQyMjA2MzhaMIGXMQswCQYD\\n' +\r\n        'VQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEG\\n' +\r\n        'A1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMDAuBgNVBAMMJ0FtYXpvbiBS\\n' +\r\n        'RFMgZXUtbm9ydGgtMSBSb290IENBIEVDQzM4NCBHMTEQMA4GA1UEBwwHU2VhdHRs\\n' +\r\n        'ZTB2MBAGByqGSM49AgEGBSuBBAAiA2IABJuzXLU8q6WwSKXBvx8BbdIi3mPhb7Xo\\n' +\r\n        'rNJBfuMW1XRj5BcKH1ZoGaDGw+BIIwyBJg8qNmCK8kqIb4cH8/Hbo3Y+xBJyoXq/\\n' +\r\n        'cuk8aPrxiNoRsKWwiDHCsVxaK9L7GhHHAqNCMEAwDwYDVR0TAQH/BAUwAwEB/zAd\\n' +\r\n        'BgNVHQ4EFgQUYgcsdU4fm5xtuqLNppkfTHM2QMYwDgYDVR0PAQH/BAQDAgGGMAoG\\n' +\r\n        'CCqGSM49BAMDA2gAMGUCMQDz/Rm89+QJOWJecYAmYcBWCcETASyoK1kbr4vw7Hsg\\n' +\r\n        '7Ew3LpLeq4IRmTyuiTMl0gMCMAa0QSjfAnxBKGhAnYxcNJSntUyyMpaXzur43ec0\\n' +\r\n        '3D8npJghwC4DuICtKEkQiI5cSg==\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIGATCCA+mgAwIBAgIRAORIGqQXLTcbbYT2upIsSnQwDQYJKoZIhvcNAQEMBQAw\\n' +\r\n        'gZgxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\r\n        'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTExMC8GA1UEAwwo\\n' +\r\n        'QW1hem9uIFJEUyBldS1zb3V0aC0yIFJvb3QgQ0EgUlNBNDA5NiBHMTEQMA4GA1UE\\n' +\r\n        'BwwHU2VhdHRsZTAgFw0yMjA1MjMxODM0MjJaGA8yMTIyMDUyMzE5MzQyMlowgZgx\\n' +\r\n        'CzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMu\\n' +\r\n        'MRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTExMC8GA1UEAwwoQW1h\\n' +\r\n        'em9uIFJEUyBldS1zb3V0aC0yIFJvb3QgQ0EgUlNBNDA5NiBHMTEQMA4GA1UEBwwH\\n' +\r\n        'U2VhdHRsZTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAPKukwsW2s/h\\n' +\r\n        '1k+Hf65pOP0knVBnOnMQyT1mopp2XHGdXznj9xS49S30jYoUnWccyXgD983A1bzu\\n' +\r\n        'w4fuJRHg4MFdz/NWTgXvy+zy0Roe83OPIJjUmXnnzwUHQcBa9vl6XUO65iQ3pbSi\\n' +\r\n        'fQfNDFXD8cvuXbkezeADoy+iFAlzhXTzV9MD44GTuo9Z3qAXNGHQCrgRSCL7uRYt\\n' +\r\n        't1nfwboCbsVRnElopn2cTigyVXE62HzBUmAw1GTbAZeFAqCn5giBWYAfHwTUldRL\\n' +\r\n        '6eEa6atfsS2oPNus4ZENa1iQxXq7ft+pMdNt0qKXTCZiiCZjmLkY0V9kWwHTRRF8\\n' +\r\n        'r+75oSL//3di43QnuSCgjwMRIeWNtMud5jf3eQzSBci+9njb6DrrSUbx7blP0srg\\n' +\r\n        '94/C/fYOp/0/EHH34w99Th14VVuGWgDgKahT9/COychLOubXUT6vD1As47S9KxTv\\n' +\r\n        'yYleVKwJnF9cVjepODN72fNlEf74BwzgSIhUmhksmZSeJBabrjSUj3pdyo/iRZN/\\n' +\r\n        'CiYz9YPQ29eXHPQjBZVIUqWbOVfdwsx0/Xu5T1e7yyXByQ3/oDulahtcoKPAFQ3J\\n' +\r\n        'ee6NJK655MdS7pM9hJnU2Rzu3qZ/GkM6YK7xTlMXVouPUZov/VbiaCKbqYDs8Dg+\\n' +\r\n        'UKdeNXAT6+BMleGQzly1X7vjhgeA8ugVAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMB\\n' +\r\n        'Af8wHQYDVR0OBBYEFJdaPwpCf78UolFTEn6GO85/QwUIMA4GA1UdDwEB/wQEAwIB\\n' +\r\n        'hjANBgkqhkiG9w0BAQwFAAOCAgEAWkxHIT3mers5YnZRSVjmpxCLivGj1jMB9VYC\\n' +\r\n        'iKqTAeIvD0940L0YaZgivQll5pue8UUcQ6M2uCdVVAsNJdmQ5XHIYiGOknYPtxzO\\n' +\r\n        'aO+bnZp7VIZw/vJ49hvH6RreA2bbxYMZO/ossYdcWsWbOKHFrRmAw0AhtK/my51g\\n' +\r\n        'obV7eQg+WmlE5Iqc75ycUsoZdc3NimkjBi7LQoNP1HMvlLHlF71UZhQDdq+/WdV7\\n' +\r\n        '0zmg+epkki1LjgMmuPyb+xWuYkFKT1/faX+Xs62hIm5BY+aI4if4RuQ+J//0pOSs\\n' +\r\n        'UajrjTo+jLGB8A96jAe8HaFQenbwMjlaHRDAF0wvbkYrMr5a6EbneAB37V05QD0Y\\n' +\r\n        'Rh4L4RrSs9DX2hbSmS6iLDuPEjanHKzglF5ePEvnItbRvGGkynqDVlwF+Bqfnw8l\\n' +\r\n        '0i8Hr1f1/LP1c075UjkvsHlUnGgPbLqA0rDdcxF8Fdlv1BunUjX0pVlz10Ha5M6P\\n' +\r\n        'AdyWUOneOfaA5G7jjv7i9qg3r99JNs1/Lmyg/tV++gnWTAsSPFSSEte81kmPhlK3\\n' +\r\n        '2UtAO47nOdTtk+q4VIRAwY1MaOR7wTFZPfer1mWs4RhKNu/odp8urEY87iIzbMWT\\n' +\r\n        'QYO/4I6BGj9rEWNGncvR5XTowwIthMCj2KWKM3Z/JxvjVFylSf+s+FFfO1bNIm6h\\n' +\r\n        'u3UBpZI=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIICtDCCAjmgAwIBAgIQenQbcP/Zbj9JxvZ+jXbRnTAKBggqhkjOPQQDAzCBmTEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTIwMAYDVQQDDClBbWF6\\n' +\r\n        'b24gUkRTIGV1LWNlbnRyYWwtMSBSb290IENBIEVDQzM4NCBHMTEQMA4GA1UEBwwH\\n' +\r\n        'U2VhdHRsZTAgFw0yMTA1MjEyMjMzMjRaGA8yMTIxMDUyMTIzMzMyNFowgZkxCzAJ\\n' +\r\n        'BgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMw\\n' +\r\n        'EQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEyMDAGA1UEAwwpQW1hem9u\\n' +\r\n        'IFJEUyBldS1jZW50cmFsLTEgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcMB1Nl\\n' +\r\n        'YXR0bGUwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAATlBHiEM9LoEb1Hdnd5j2VpCDOU\\n' +\r\n        '5nGuFoBD8ROUCkFLFh5mHrHfPXwBc63heW9WrP3qnDEm+UZEUvW7ROvtWCTPZdLz\\n' +\r\n        'Z4XaqgAlSqeE2VfUyZOZzBSgUUJk7OlznXfkCMOjQjBAMA8GA1UdEwEB/wQFMAMB\\n' +\r\n        'Af8wHQYDVR0OBBYEFDT/ThjQZl42Nv/4Z/7JYaPNMly2MA4GA1UdDwEB/wQEAwIB\\n' +\r\n        'hjAKBggqhkjOPQQDAwNpADBmAjEAnZWmSgpEbmq+oiCa13l5aGmxSlfp9h12Orvw\\n' +\r\n        'Dq/W5cENJz891QD0ufOsic5oGq1JAjEAp5kSJj0MxJBTHQze1Aa9gG4sjHBxXn98\\n' +\r\n        '4MP1VGsQuhfndNHQb4V0Au7OWnOeiobq\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIID/zCCAuegAwIBAgIRAMgnyikWz46xY6yRgiYwZ3swDQYJKoZIhvcNAQELBQAw\\n' +\r\n        'gZcxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\r\n        'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEwMC4GA1UEAwwn\\n' +\r\n        'QW1hem9uIFJEUyBldS13ZXN0LTEgUm9vdCBDQSBSU0EyMDQ4IEcxMRAwDgYDVQQH\\n' +\r\n        'DAdTZWF0dGxlMCAXDTIxMDUyMDE2NDkxMloYDzIwNjEwNTIwMTc0OTEyWjCBlzEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdBbWF6\\n' +\r\n        'b24gUkRTIGV1LXdlc3QtMSBSb290IENBIFJTQTIwNDggRzExEDAOBgNVBAcMB1Nl\\n' +\r\n        'YXR0bGUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCi8JYOc9cYSgZH\\n' +\r\n        'gYPxLk6Xcc7HqzamvsnjYU98Dcb98y6iDqS46Ra2Ne02MITtU5MDL+qjxb8WGDZV\\n' +\r\n        'RUA9ZS69tkTO3gldW8QdiSh3J6hVNJQW81F0M7ZWgV0gB3n76WCmfT4IWos0AXHM\\n' +\r\n        '5v7M/M4tqVmCPViQnZb2kdVlM3/Xc9GInfSMCgNfwHPTXl+PXX+xCdNBePaP/A5C\\n' +\r\n        '5S0oK3HiXaKGQAy3K7VnaQaYdiv32XUatlM4K2WS4AMKt+2cw3hTCjlmqKRHvYFQ\\n' +\r\n        'veWCXAuc+U5PQDJ9SuxB1buFJZhT4VP3JagOuZbh5NWpIbOTxlAJOb5pGEDuJTKi\\n' +\r\n        '1gQQQVEFAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFNXm+N87\\n' +\r\n        'OFxK9Af/bjSxDCiulGUzMA4GA1UdDwEB/wQEAwIBhjANBgkqhkiG9w0BAQsFAAOC\\n' +\r\n        'AQEAkqIbkgZ45spvrgRQ6n9VKzDLvNg+WciLtmVrqyohwwJbj4pYvWwnKQCkVc7c\\n' +\r\n        'hUOSBmlSBa5REAPbH5o8bdt00FPRrD6BdXLXhaECKgjsHe1WW08nsequRKD8xVmc\\n' +\r\n        '8bEX6sw/utBeBV3mB+3Zv7ejYAbDFM4vnRsWtO+XqgReOgrl+cwdA6SNQT9oW3e5\\n' +\r\n        'rSQ+VaXgJtl9NhkiIysq9BeYigxqS/A13pHQp0COMwS8nz+kBPHhJTsajHCDc8F4\\n' +\r\n        'HfLi6cgs9G0gaRhT8FCH66OdGSqn196sE7Y3bPFFFs/3U+vxvmQgoZC6jegQXAg5\\n' +\r\n        'Prxd+VNXtNI/azitTysQPumH7A==\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIEBTCCAu2gAwIBAgIRAO8bekN7rUReuNPG8pSTKtEwDQYJKoZIhvcNAQELBQAw\\n' +\r\n        'gZoxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\r\n        'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEzMDEGA1UEAwwq\\n' +\r\n        'QW1hem9uIFJEUyBldS1jZW50cmFsLTEgUm9vdCBDQSBSU0EyMDQ4IEcxMRAwDgYD\\n' +\r\n        'VQQHDAdTZWF0dGxlMCAXDTIxMDUyMTIyMjM0N1oYDzIwNjEwNTIxMjMyMzQ3WjCB\\n' +\r\n        'mjELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\r\n        'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTMwMQYDVQQDDCpB\\n' +\r\n        'bWF6b24gUkRTIGV1LWNlbnRyYWwtMSBSb290IENBIFJTQTIwNDggRzExEDAOBgNV\\n' +\r\n        'BAcMB1NlYXR0bGUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCTTYds\\n' +\r\n        'Tray+Q9VA5j5jTh5TunHKFQzn68ZbOzdqaoi/Rq4ohfC0xdLrxCpfqn2TGDHN6Zi\\n' +\r\n        '2qGK1tWJZEd1H0trhzd9d1CtGK+3cjabUmz/TjSW/qBar7e9MA67/iJ74Gc+Ww43\\n' +\r\n        'A0xPNIWcL4aLrHaLm7sHgAO2UCKsrBUpxErOAACERScVYwPAfu79xeFcX7DmcX+e\\n' +\r\n        'lIqY16pQAvK2RIzrekSYfLFxwFq2hnlgKHaVgZ3keKP+nmXcXmRSHQYUUr72oYNZ\\n' +\r\n        'HcNYl2+gxCc9ccPEHM7xncVEKmb5cWEWvVoaysgQ+osi5f5aQdzgC2X2g2daKbyA\\n' +\r\n        'XL/z5FM9GHpS5BJjAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYE\\n' +\r\n        'FBDAiJ7Py9/A9etNa/ebOnx5l5MGMA4GA1UdDwEB/wQEAwIBhjANBgkqhkiG9w0B\\n' +\r\n        'AQsFAAOCAQEALMh/+81fFPdJV/RrJUeoUvFCGMp8iaANu97NpeJyKitNOv7RoeVP\\n' +\r\n        'WjivS0KcCqZaDBs+p6IZ0sLI5ZH098LDzzytcfZg0PsGqUAb8a0MiU/LfgDCI9Ee\\n' +\r\n        'jsOiwaFB8k0tfUJK32NPcIoQYApTMT2e26lPzYORSkfuntme2PTHUnuC7ikiQrZk\\n' +\r\n        'P+SZjWgRuMcp09JfRXyAYWIuix4Gy0eZ4rpRuaTK6mjAb1/LYoNK/iZ/gTeIqrNt\\n' +\r\n        'l70OWRsWW8jEmSyNTIubGK/gGGyfuZGSyqoRX6OKHESkP6SSulbIZHyJ5VZkgtXo\\n' +\r\n        '2XvyRyJ7w5pFyoofrL3Wv0UF8yt/GDszmg==\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIF/zCCA+egAwIBAgIRAMDk/F+rrhdn42SfE+ghPC8wDQYJKoZIhvcNAQEMBQAw\\n' +\r\n        'gZcxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\r\n        'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEwMC4GA1UEAwwn\\n' +\r\n        'QW1hem9uIFJEUyBldS13ZXN0LTIgUm9vdCBDQSBSU0E0MDk2IEcxMRAwDgYDVQQH\\n' +\r\n        'DAdTZWF0dGxlMCAXDTIxMDUyMTIyNTEyMloYDzIxMjEwNTIxMjM1MTIyWjCBlzEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdBbWF6\\n' +\r\n        'b24gUkRTIGV1LXdlc3QtMiBSb290IENBIFJTQTQwOTYgRzExEDAOBgNVBAcMB1Nl\\n' +\r\n        'YXR0bGUwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQC2twMALVg9vRVu\\n' +\r\n        'VNqsr6N8thmp3Dy8jEGTsm3GCQ+C5P2YcGlD/T/5icfWW84uF7Sx3ezcGlvsqFMf\\n' +\r\n        'Ukj9sQyqtz7qfFFugyy7pa/eH9f48kWFHLbQYm9GEgbYBIrWMp1cy3vyxuMCwQN4\\n' +\r\n        'DCncqU+yNpy0CprQJEha3PzY+3yJOjDQtc3zr99lyECCFJTDUucxHzyQvX89eL74\\n' +\r\n        'uh8la0lKH3v9wPpnEoftbrwmm5jHNFdzj7uXUHUJ41N7af7z7QUfghIRhlBDiKtx\\n' +\r\n        '5lYZemPCXajTc3ryDKUZC/b+B6ViXZmAeMdmQoPE0jwyEp/uaUcdp+FlUQwCfsBk\\n' +\r\n        'ayPFEApTWgPiku2isjdeTVmEgL8bJTDUZ6FYFR7ZHcYAsDzcwHgIu3GGEMVRS3Uf\\n' +\r\n        'ILmioiyly9vcK4Sa01ondARmsi/I0s7pWpKflaekyv5boJKD/xqwz9lGejmJHelf\\n' +\r\n        '8Od2TyqJScMpB7Q8c2ROxBwqwB72jMCEvYigB+Wnbb8RipliqNflIGx938FRCzKL\\n' +\r\n        'UQUBmNAznR/yRRL0wHf9UAE/8v9a09uZABeiznzOFAl/frHpgdAbC00LkFlnwwgX\\n' +\r\n        'g8YfEFlkp4fLx5B7LtoO6uVNFVimLxtwirpyKoj3G4M/kvSTux8bTw0heBCmWmKR\\n' +\r\n        '57MS6k7ODzbv+Kpeht2hqVZCNFMxoQIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/\\n' +\r\n        'MB0GA1UdDgQWBBRuMnDhJjoj7DcKALj+HbxEqj3r6jAOBgNVHQ8BAf8EBAMCAYYw\\n' +\r\n        'DQYJKoZIhvcNAQEMBQADggIBALSnXfx72C3ldhBP5kY4Mo2DDaGQ8FGpTOOiD95d\\n' +\r\n        '0rf7I9LrsBGVqu/Nir+kqqP80PB70+Jy9fHFFigXwcPBX3MpKGxK8Cel7kVf8t1B\\n' +\r\n        '4YD6A6bqlzP+OUL0uGWfZpdpDxwMDI2Flt4NEldHgXWPjvN1VblEKs0+kPnKowyg\\n' +\r\n        'jhRMgBbD/y+8yg0fIcjXUDTAw/+INcp21gWaMukKQr/8HswqC1yoqW9in2ijQkpK\\n' +\r\n        '2RB9vcQ0/gXR0oJUbZQx0jn0OH8Agt7yfMAnJAdnHO4M3gjvlJLzIC5/4aGrRXZl\\n' +\r\n        'JoZKfJ2fZRnrFMi0nhAYDeInoS+Rwx+QzaBk6fX5VPyCj8foZ0nmqvuYoydzD8W5\\n' +\r\n        'mMlycgxFqS+DUmO+liWllQC4/MnVBlHGB1Cu3wTj5kgOvNs/k+FW3GXGzD3+rpv0\\n' +\r\n        'QTLuwSbMr+MbEThxrSZRSXTCQzKfehyC+WZejgLb+8ylLJUA10e62o7H9PvCrwj+\\n' +\r\n        'ZDVmN7qj6amzvndCP98sZfX7CFZPLfcBd4wVIjHsFjSNEwWHOiFyLPPG7cdolGKA\\n' +\r\n        'lOFvonvo4A1uRc13/zFeP0Xi5n5OZ2go8aOOeGYdI2vB2sgH9R2IASH/jHmr0gvY\\n' +\r\n        '0dfBCcfXNgrS0toq0LX/y+5KkKOxh52vEYsJLdhqrveuZhQnsFEm/mFwjRXkyO7c\\n' +\r\n        '2jpC\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIGADCCA+igAwIBAgIQYe0HgSuFFP9ivYM2vONTrTANBgkqhkiG9w0BAQwFADCB\\n' +\r\n        'mDELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\r\n        'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTEwLwYDVQQDDChB\\n' +\r\n        'bWF6b24gUkRTIGV1LXNvdXRoLTEgUm9vdCBDQSBSU0E0MDk2IEcxMRAwDgYDVQQH\\n' +\r\n        'DAdTZWF0dGxlMCAXDTIxMDUxOTE4MzMyMVoYDzIxMjEwNTE5MTkzMzIxWjCBmDEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTEwLwYDVQQDDChBbWF6\\n' +\r\n        'b24gUkRTIGV1LXNvdXRoLTEgUm9vdCBDQSBSU0E0MDk2IEcxMRAwDgYDVQQHDAdT\\n' +\r\n        'ZWF0dGxlMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAuO7QPKfPMTo2\\n' +\r\n        'POQWvzDLwi5f++X98hGjORI1zkN9kotCYH5pAzSBwBPoMNaIfedgmsIxGHj2fq5G\\n' +\r\n        '4oXagNhNuGP79Zl6uKW5H7S74W7aWM8C0s8zuxMOI4GZy5h2IfQk3m/3AzZEX5w8\\n' +\r\n        'UtNPkzo2feDVOkerHT+j+vjXgAxZ4wHnuMDcRT+K4r9EXlAH6X9b/RO0JlfEwmNz\\n' +\r\n        'xlqqGxocq9qRC66N6W0HF2fNEAKP84n8H80xcZBOBthQORRi8HSmKcPdmrvwCuPz\\n' +\r\n        'M+L+j18q6RAVaA0ABbD0jMWcTf0UvjUfBStn5mvu/wGlLjmmRkZsppUTRukfwqXK\\n' +\r\n        'yltUsTq0tOIgCIpne5zA4v+MebbR5JBnsvd4gdh5BI01QH470yB7BkUefZ9bobOm\\n' +\r\n        'OseAAVXcYFJKe4DAA6uLDrqOfFSxV+CzVvEp3IhLRaik4G5MwI/h2c/jEYDqkg2J\\n' +\r\n        'HMflxc2gcSMdk7E5ByLz5f6QrFfSDFk02ZJTs4ssbbUEYohht9znPMQEaWVqATWE\\n' +\r\n        '3n0VspqZyoBNkH/agE5GiGZ/k/QyeqzMNj+c9kr43Upu8DpLrz8v2uAp5xNj3YVg\\n' +\r\n        'ihaeD6GW8+PQoEjZ3mrCmH7uGLmHxh7Am59LfEyNrDn+8Rq95WvkmbyHSVxZnBmo\\n' +\r\n        'h/6O3Jk+0/QhIXZ2hryMflPcYWeRGH0CAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB\\n' +\r\n        '/zAdBgNVHQ4EFgQU2eFK7+R3x/me8roIBNxBrplkM6EwDgYDVR0PAQH/BAQDAgGG\\n' +\r\n        'MA0GCSqGSIb3DQEBDAUAA4ICAQB5gWFe5s7ObQFj1fTO9L6gYgtFhnwdmxU0q8Ke\\n' +\r\n        'HWCrdFmyXdC39qdAFOwM5/7fa9zKmiMrZvy9HNvCXEp4Z7z9mHhBmuqPZQx0qPgU\\n' +\r\n        'uLdP8wGRuWryzp3g2oqkX9t31Z0JnkbIdp7kfRT6ME4I4VQsaY5Y3mh+hIHOUvcy\\n' +\r\n        'p+98i3UuEIcwJnVAV9wTTzrWusZl9iaQ1nSYbmkX9bBssJ2GmtW+T+VS/1hJ/Q4f\\n' +\r\n        'AlE3dOQkLFoPPb3YRWBHr2n1LPIqMVwDNAuWavRA2dSfaLl+kzbn/dua7HTQU5D4\\n' +\r\n        'b2Fu2vLhGirwRJe+V7zdef+tI7sngXqjgObyOeG5O2BY3s+um6D4fS0Th3QchMO7\\n' +\r\n        '0+GwcIgSgcjIjlrt6/xJwJLE8cRkUUieYKq1C4McpZWTF30WnzOPUzRzLHkcNzNA\\n' +\r\n        '0A7sKMK6QoYWo5Rmo8zewUxUqzc9oQSrYADP7PEwGncLtFe+dlRFx+PA1a+lcIgo\\n' +\r\n        '1ZGfXigYtQ3VKkcknyYlJ+hN4eCMBHtD81xDy9iP2MLE41JhLnoB2rVEtewO5diF\\n' +\r\n        '7o95Mwl84VMkLhhHPeGKSKzEbBtYYBifHNct+Bst8dru8UumTltgfX6urH3DN+/8\\n' +\r\n        'JF+5h3U8oR2LL5y76cyeb+GWDXXy9zoQe2QvTyTy88LwZq1JzujYi2k8QiLLhFIf\\n' +\r\n        'FEv9Bg==\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIICsDCCAjagAwIBAgIRAMgApnfGYPpK/fD0dbN2U4YwCgYIKoZIzj0EAwMwgZcx\\n' +\r\n        'CzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMu\\n' +\r\n        'MRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEwMC4GA1UEAwwnQW1h\\n' +\r\n        'em9uIFJEUyBldS1zb3V0aC0xIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQHDAdT\\n' +\r\n        'ZWF0dGxlMCAXDTIxMDUxOTE4MzgxMVoYDzIxMjEwNTE5MTkzODExWjCBlzELMAkG\\n' +\r\n        'A1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzAR\\n' +\r\n        'BgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdBbWF6b24g\\n' +\r\n        'UkRTIGV1LXNvdXRoLTEgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcMB1NlYXR0\\n' +\r\n        'bGUwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAAQfEWl6d4qSuIoECdZPp+39LaKsfsX7\\n' +\r\n        'THs3/RrtT0+h/jl3bjZ7Qc68k16x+HGcHbaayHfqD0LPdzH/kKtNSfQKqemdxDQh\\n' +\r\n        'Z4pwkixJu8T1VpXZ5zzCvBXCl75UqgEFS92jQjBAMA8GA1UdEwEB/wQFMAMBAf8w\\n' +\r\n        'HQYDVR0OBBYEFFPrSNtWS5JU+Tvi6ABV231XbjbEMA4GA1UdDwEB/wQEAwIBhjAK\\n' +\r\n        'BggqhkjOPQQDAwNoADBlAjEA+a7hF1IrNkBd2N/l7IQYAQw8chnRZDzh4wiGsZsC\\n' +\r\n        '6A83maaKFWUKIb3qZYXFSi02AjAbp3wxH3myAmF8WekDHhKcC2zDvyOiKLkg9Y6v\\n' +\r\n        'ZVmyMR043dscQbcsVoacOYv198c=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIICtDCCAjqgAwIBAgIRAPhVkIsQ51JFhD2kjFK5uAkwCgYIKoZIzj0EAwMwgZkx\\n' +\r\n        'CzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMu\\n' +\r\n        'MRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEyMDAGA1UEAwwpQW1h\\n' +\r\n        'em9uIFJEUyBldS1jZW50cmFsLTIgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcM\\n' +\r\n        'B1NlYXR0bGUwIBcNMjIwNjA2MjEyOTE3WhgPMjEyMjA2MDYyMjI5MTdaMIGZMQsw\\n' +\r\n        'CQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjET\\n' +\r\n        'MBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMjAwBgNVBAMMKUFtYXpv\\n' +\r\n        'biBSRFMgZXUtY2VudHJhbC0yIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQHDAdT\\n' +\r\n        'ZWF0dGxlMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEA5xnIEBtG5b2nmbj49UEwQza\\n' +\r\n        'yX0844fXjccYzZ8xCDUe9dS2XOUi0aZlGblgSe/3lwjg8fMcKXLObGGQfgIx1+5h\\n' +\r\n        'AIBjORis/dlyN5q/yH4U5sjS8tcR0GDGVHrsRUZCo0IwQDAPBgNVHRMBAf8EBTAD\\n' +\r\n        'AQH/MB0GA1UdDgQWBBRK+lSGutXf4DkTjR3WNfv4+KeNFTAOBgNVHQ8BAf8EBAMC\\n' +\r\n        'AYYwCgYIKoZIzj0EAwMDaAAwZQIxAJ4NxQ1Gerqr70ZrnUqc62Vl8NNqTzInamCG\\n' +\r\n        'Kce3FTsMWbS9qkgrjZkO9QqOcGIw/gIwSLrwUT+PKr9+H9eHyGvpq9/3AIYSnFkb\\n' +\r\n        'Cf3dyWPiLKoAtLFwjzB/CkJlsAS1c8dS\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIF/jCCA+agAwIBAgIQGZH12Q7x41qIh9vDu9ikTjANBgkqhkiG9w0BAQwFADCB\\n' +\r\n        'lzELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\r\n        'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdB\\n' +\r\n        'bWF6b24gUkRTIGV1LXdlc3QtMyBSb290IENBIFJTQTQwOTYgRzExEDAOBgNVBAcM\\n' +\r\n        'B1NlYXR0bGUwIBcNMjEwNTI1MjIyMjMzWhgPMjEyMTA1MjUyMzIyMzNaMIGXMQsw\\n' +\r\n        'CQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjET\\n' +\r\n        'MBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMDAuBgNVBAMMJ0FtYXpv\\n' +\r\n        'biBSRFMgZXUtd2VzdC0zIFJvb3QgQ0EgUlNBNDA5NiBHMTEQMA4GA1UEBwwHU2Vh\\n' +\r\n        'dHRsZTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAMqE47sHXWzdpuqj\\n' +\r\n        'JHb+6jM9tDbQLDFnYjDWpq4VpLPZhb7xPNh9gnYYTPKG4avG421EblAHqzy9D2pN\\n' +\r\n        '1z90yKbIfUb/Sy2MhQbmZomsObhONEra06fJ0Dydyjswf1iYRp2kwpx5AgkVoNo7\\n' +\r\n        '3dlws73zFjD7ImKvUx2C7B75bhnw2pJWkFnGcswl8fZt9B5Yt95sFOKEz2MSJE91\\n' +\r\n        'kZlHtya19OUxZ/cSGci4MlOySzqzbGwUqGxEIDlY8I39VMwXaYQ8uXUN4G780VcL\\n' +\r\n        'u46FeyRGxZGz2n3hMc805WAA1V5uir87vuirTvoSVREET97HVRGVVNJJ/FM6GXr1\\n' +\r\n        'VKtptybbo81nefYJg9KBysxAa2Ao2x2ry/2ZxwhS6VZ6v1+90bpZA1BIYFEDXXn/\\n' +\r\n        'dW07HSCFnYSlgPtSc+Muh15mdr94LspYeDqNIierK9i4tB6ep7llJAnq0BU91fM2\\n' +\r\n        'JPeqyoTtc3m06QhLf68ccSxO4l8Hmq9kLSHO7UXgtdjfRVaffngopTNk8qK7bIb7\\n' +\r\n        'LrgkqhiQw/PRCZjUdyXL153/fUcsj9nFNe25gM4vcFYwH6c5trd2tUl31NTi1MfG\\n' +\r\n        'Mgp3d2dqxQBIYANkEjtBDMy3SqQLIo9EymqmVP8xx2A/gCBgaxvMAsI6FSWRoC7+\\n' +\r\n        'hqJ8XH4mFnXSHKtYMe6WPY+/XZgtAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8w\\n' +\r\n        'HQYDVR0OBBYEFIkXqTnllT/VJnI2NqipA4XV8rh1MA4GA1UdDwEB/wQEAwIBhjAN\\n' +\r\n        'BgkqhkiG9w0BAQwFAAOCAgEAKjSle8eenGeHgT8pltWCw/HzWyQruVKhfYIBfKJd\\n' +\r\n        'MhV4EnH5BK7LxBIvpXGsFUrb0ThzSw0fn0zoA9jBs3i/Sj6KyeZ9qUF6b8ycDXd+\\n' +\r\n        'wHonmJiQ7nk7UuMefaYAfs06vosgl1rI7eBHC0itexIQmKh0aX+821l4GEgEoSMf\\n' +\r\n        'loMFTLXv2w36fPHHCsZ67ODldgcZbKNnpCTX0YrCwEYO3Pz/L398btiRcWGrewrK\\n' +\r\n        'jdxAAyietra8DRno1Zl87685tfqc6HsL9v8rVw58clAo9XAQvT+fmSOFw/PogRZ7\\n' +\r\n        'OMHUat3gu/uQ1M5S64nkLLFsKu7jzudBuoNmcJysPlzIbqJ7vYc82OUGe9ucF3wi\\n' +\r\n        '3tbKQ983hdJiTExVRBLX/fYjPsGbG3JtPTv89eg2tjWHlPhCDMMxyRKl6isu2RTq\\n' +\r\n        '6VT489Z2zQrC33MYF8ZqO1NKjtyMAMIZwxVu4cGLkVsqFmEV2ScDHa5RadDyD3Ok\\n' +\r\n        'm+mqybhvEVm5tPgY6p0ILPMN3yvJsMSPSvuBXhO/X5ppNnpw9gnxpwbjQKNhkFaG\\n' +\r\n        'M5pkADZ14uRguOLM4VthSwUSEAr5VQYCFZhEwK+UOyJAGiB/nJz6IxL5XBNUXmRM\\n' +\r\n        'Hl8Xvz4riq48LMQbjcVQj0XvH941yPh+P8xOi00SGaQRaWp55Vyr4YKGbV0mEDz1\\n' +\r\n        'r1o=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIF/zCCA+egAwIBAgIRAKwYju1QWxUZpn6D1gOtwgQwDQYJKoZIhvcNAQEMBQAw\\n' +\r\n        'gZcxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\r\n        'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEwMC4GA1UEAwwn\\n' +\r\n        'QW1hem9uIFJEUyBldS13ZXN0LTEgUm9vdCBDQSBSU0E0MDk2IEcxMRAwDgYDVQQH\\n' +\r\n        'DAdTZWF0dGxlMCAXDTIxMDUyMDE2NTM1NFoYDzIxMjEwNTIwMTc1MzU0WjCBlzEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdBbWF6\\n' +\r\n        'b24gUkRTIGV1LXdlc3QtMSBSb290IENBIFJTQTQwOTYgRzExEDAOBgNVBAcMB1Nl\\n' +\r\n        'YXR0bGUwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCKdBP1U4lqWWkc\\n' +\r\n        'Cb25/BKRTsvNVnISiKocva8GAzJyKfcGRa85gmgu41U+Hz6+39K+XkRfM0YS4BvQ\\n' +\r\n        'F1XxWT0bNyypuvwCvmYShSTjN1TY0ltncDddahTajE/4MdSOZb/c98u0yt03cH+G\\n' +\r\n        'hVwRyT50h0v/UEol50VfwcVAEZEgcQQYhf1IFUFlIvKpmDOqLuFakOnc7c9akK+i\\n' +\r\n        'ivST+JO1tgowbnNkn2iLlSSgUWgb1gjaOsNfysagv1RXdlyPw3EyfwkFifAQvF2P\\n' +\r\n        'Q0ayYZfYS640cccv7efM1MSVyFHR9PrrDsF/zr2S2sGPbeHr7R/HwLl+S5J/l9N9\\n' +\r\n        'y0rk6IHAWV4dEkOvgpnuJKURwA48iu1Hhi9e4moNS6eqoK2KmY3VFpuiyWcA73nH\\n' +\r\n        'GSmyaH+YuMrF7Fnuu7GEHZL/o6+F5cL3mj2SJJhL7sz0ryf5Cs5R4yN9BIEj/f49\\n' +\r\n        'wh84pM6nexoI0Q4wiSFCxWiBpjSmOK6h7z6+2utaB5p20XDZHhxAlmlx4vMuWtjh\\n' +\r\n        'XckgRFxc+ZpVMU3cAHUpVEoO49e/+qKEpPzp8Xg4cToKw2+AfTk3cmyyXQfGwXMQ\\n' +\r\n        'ZUHNZ3w9ILMWihGCM2aGUsLcGDRennvNmnmin/SENsOQ8Ku0/a3teEzwV9cmmdYz\\n' +\r\n        '5iYs1YtgPvKFobY6+T2RXXh+A5kprwIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/\\n' +\r\n        'MB0GA1UdDgQWBBSyUrsQVnKmA8z6/2Ech0rCvqpNmTAOBgNVHQ8BAf8EBAMCAYYw\\n' +\r\n        'DQYJKoZIhvcNAQEMBQADggIBAFlj3IFmgiFz5lvTzFTRizhVofhTJsGr14Yfkuc7\\n' +\r\n        'UrXPuXOwJomd4uot2d/VIeGJpfnuS84qGdmQyGewGTJ9inatHsGZgHl9NHNWRwKZ\\n' +\r\n        'lTKTbBiq7aqgtUSFa06v202wpzU+1kadxJJePrbABxiXVfOmIW/a1a4hPNcT3syH\\n' +\r\n        'FIEg1+CGsp71UNjBuwg3JTKWna0sLSKcxLOSOvX1fzxK5djzVpEsvQMB4PSAzXca\\n' +\r\n        'vENgg2ErTwgTA+4s6rRtiBF9pAusN1QVuBahYP3ftrY6f3ycS4K65GnqscyfvKt5\\n' +\r\n        'YgjtEKO3ZeeX8NpubMbzC+0Z6tVKfPFk/9TXuJtwvVeqow0YMrLLyRiYvK7EzJ97\\n' +\r\n        'rrkxoKnHYQSZ+rH2tZ5SE392/rfk1PJL0cdHnkpDkUDO+8cKsFjjYKAQSNC52sKX\\n' +\r\n        '74AVh6wMwxYwVZZJf2/2XxkjMWWhKNejsZhUkTISSmiLs+qPe3L67IM7GyKm9/m6\\n' +\r\n        'R3r8x6NGjhTsKH64iYJg7AeKeax4b2e4hBb6GXFftyOs7unpEOIVkJJgM6gh3mwn\\n' +\r\n        'R7v4gwFbLKADKt1vHuerSZMiTuNTGhSfCeDM53XI/mjZl2HeuCKP1mCDLlaO+gZR\\n' +\r\n        'Q/G+E0sBKgEX4xTkAc3kgkuQGfExdGtnN2U2ehF80lBHB8+2y2E+xWWXih/ZyIcW\\n' +\r\n        'wOx+\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIGBDCCA+ygAwIBAgIQM4C8g5iFRucSWdC8EdqHeDANBgkqhkiG9w0BAQwFADCB\\n' +\r\n        'mjELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\r\n        'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTMwMQYDVQQDDCpB\\n' +\r\n        'bWF6b24gUkRTIGV1LWNlbnRyYWwtMSBSb290IENBIFJTQTQwOTYgRzExEDAOBgNV\\n' +\r\n        'BAcMB1NlYXR0bGUwIBcNMjEwNTIxMjIyODI2WhgPMjEyMTA1MjEyMzI4MjZaMIGa\\n' +\r\n        'MQswCQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5j\\n' +\r\n        'LjETMBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMzAxBgNVBAMMKkFt\\n' +\r\n        'YXpvbiBSRFMgZXUtY2VudHJhbC0xIFJvb3QgQ0EgUlNBNDA5NiBHMTEQMA4GA1UE\\n' +\r\n        'BwwHU2VhdHRsZTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBANeTsD/u\\n' +\r\n        '6saPiY4Sg0GlJlMXMBltnrcGAEkwq34OKQ0bCXqcoNJ2rcAMmuFC5x9Ho1Y3YzB7\\n' +\r\n        'NO2GpIh6bZaO76GzSv4cnimcv9n/sQSYXsGbPD+bAtnN/RvNW1avt4C0q0/ghgF1\\n' +\r\n        'VFS8JihIrgPYIArAmDtGNEdl5PUrdi9y6QGggbRfidMDdxlRdZBe1C18ZdgERSEv\\n' +\r\n        'UgSTPRlVczONG5qcQkUGCH83MMqL5MKQiby/Br5ZyPq6rxQMwRnQ7tROuElzyYzL\\n' +\r\n        '7d6kke+PNzG1mYy4cbYdjebwANCtZ2qYRSUHAQsOgybRcSoarv2xqcjO9cEsDiRU\\n' +\r\n        'l97ToadGYa4VVERuTaNZxQwrld4mvzpyKuirqZltOqg0eoy8VUsaRPL3dc5aChR0\\n' +\r\n        'dSrBgRYmSAClcR2/2ZCWpXemikwgt031Dsc0A/+TmVurrsqszwbr0e5xqMow9LzO\\n' +\r\n        'MI/JtLd0VFtoOkL/7GG2tN8a+7gnLFxpv+AQ0DH5n4k/BY/IyS+H1erqSJhOTQ11\\n' +\r\n        'vDOFTM5YplB9hWV9fp5PRs54ILlHTlZLpWGs3I2BrJwzRtg/rOlvsosqcge9ryai\\n' +\r\n        'AKm2j+JBg5wJ19R8oxRy8cfrNTftZePpISaLTyV2B16w/GsSjqixjTQe9LRN2DHk\\n' +\r\n        'cC+HPqYyzW2a3pUVyTGHhW6a7YsPBs9yzt6hAgMBAAGjQjBAMA8GA1UdEwEB/wQF\\n' +\r\n        'MAMBAf8wHQYDVR0OBBYEFIqA8QkOs2cSirOpCuKuOh9VDfJfMA4GA1UdDwEB/wQE\\n' +\r\n        'AwIBhjANBgkqhkiG9w0BAQwFAAOCAgEAOUI90mEIsa+vNJku0iUwdBMnHiO4gm7E\\n' +\r\n        '5JloP7JG0xUr7d0hypDorMM3zVDAL+aZRHsq8n934Cywj7qEp1304UF6538ByGdz\\n' +\r\n        'tkfacJsUSYfdlNJE9KbA4T+U+7SNhj9jvePpVjdQbhgzxITE9f8CxY/eM40yluJJ\\n' +\r\n        'PhbaWvOiRagzo74wttlcDerzLT6Y/JrVpWhnB7IY8HvzK+BwAdaCsBUPC3HF+kth\\n' +\r\n        'CIqLq7J3YArTToejWZAp5OOI6DLPM1MEudyoejL02w0jq0CChmZ5i55ElEMnapRX\\n' +\r\n        '7GQTARHmjgAOqa95FjbHEZzRPqZ72AtZAWKFcYFNk+grXSeWiDgPFOsq6mDg8DDB\\n' +\r\n        '0kfbYwKLFFCC9YFmYzR2YrWw2NxAScccUc2chOWAoSNHiqBbHR8ofrlJSWrtmKqd\\n' +\r\n        'YRCXzn8wqXnTS3NNHNccqJ6dN+iMr9NGnytw8zwwSchiev53Fpc1mGrJ7BKTWH0t\\n' +\r\n        'ZrA6m32wzpMymtKozlOPYoE5mtZEzrzHEXfa44Rns7XIHxVQSXVWyBHLtIsZOrvW\\n' +\r\n        'U5F41rQaFEpEeUQ7sQvqUoISfTUVRNDn6GK6YaccEhCji14APLFIvhRQUDyYMIiM\\n' +\r\n        '4vll0F/xgVRHTgDVQ8b8sxdhSYlqB4Wc2Ym41YRz+X2yPqk3typEZBpc4P5Tt1/N\\n' +\r\n        '89cEIGdbjsA=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIEADCCAuigAwIBAgIQYjbPSg4+RNRD3zNxO1fuKDANBgkqhkiG9w0BAQsFADCB\\n' +\r\n        'mDELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\r\n        'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTEwLwYDVQQDDChB\\n' +\r\n        'bWF6b24gUkRTIGV1LW5vcnRoLTEgUm9vdCBDQSBSU0EyMDQ4IEcxMRAwDgYDVQQH\\n' +\r\n        'DAdTZWF0dGxlMCAXDTIxMDUyNDIwNTkyMVoYDzIwNjEwNTI0MjE1OTIxWjCBmDEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTEwLwYDVQQDDChBbWF6\\n' +\r\n        'b24gUkRTIGV1LW5vcnRoLTEgUm9vdCBDQSBSU0EyMDQ4IEcxMRAwDgYDVQQHDAdT\\n' +\r\n        'ZWF0dGxlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA179eQHxcV0YL\\n' +\r\n        'XMkqEmhSBazHhnRVd8yICbMq82PitE3BZcnv1Z5Zs/oOgNmMkOKae4tCXO/41JCX\\n' +\r\n        'wAgbs/eWWi+nnCfpQ/FqbLPg0h3dqzAgeszQyNl9IzTzX4Nd7JFRBVJXPIIKzlRf\\n' +\r\n        '+GmFsAhi3rYgDgO27pz3ciahVSN+CuACIRYnA0K0s9lhYdddmrW/SYeWyoB7jPa2\\n' +\r\n        'LmWpAs7bDOgS4LlP2H3eFepBPgNufRytSQUVA8f58lsE5w25vNiUSnrdlvDrIU5n\\n' +\r\n        'Qwzc7NIZCx4qJpRbSKWrUtbyJriWfAkGU7i0IoainHLn0eHp9bWkwb9D+C/tMk1X\\n' +\r\n        'ERZw2PDGkwIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBSFmR7s\\n' +\r\n        'dAblusFN+xhf1ae0KUqhWTAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZIhvcNAQELBQAD\\n' +\r\n        'ggEBAHsXOpjPMyH9lDhPM61zYdja1ebcMVgfUvsDvt+w0xKMKPhBzYDMs/cFOi1N\\n' +\r\n        'Q8LV79VNNfI2NuvFmGygcvTIR+4h0pqqZ+wjWl3Kk5jVxCrbHg3RBX02QLumKd/i\\n' +\r\n        'kwGcEtTUvTssn3SM8bgM0/1BDXgImZPC567ciLvWDo0s/Fe9dJJC3E0G7d/4s09n\\n' +\r\n        'OMdextcxFuWBZrBm/KK3QF0ByA8MG3//VXaGO9OIeeOJCpWn1G1PjT1UklYhkg61\\n' +\r\n        'EbsTiZVA2DLd1BGzfU4o4M5mo68l0msse/ndR1nEY6IywwpgIFue7+rEleDh6b9d\\n' +\r\n        'PYkG1rHVw2I0XDG4o17aOn5E94I=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIEADCCAuigAwIBAgIQC6W4HFghUkkgyQw14a6JljANBgkqhkiG9w0BAQsFADCB\\n' +\r\n        'mDELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\r\n        'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTEwLwYDVQQDDChB\\n' +\r\n        'bWF6b24gUkRTIGV1LXNvdXRoLTIgUm9vdCBDQSBSU0EyMDQ4IEcxMRAwDgYDVQQH\\n' +\r\n        'DAdTZWF0dGxlMCAXDTIyMDUyMzE4MTYzMloYDzIwNjIwNTIzMTkxNjMyWjCBmDEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTEwLwYDVQQDDChBbWF6\\n' +\r\n        'b24gUkRTIGV1LXNvdXRoLTIgUm9vdCBDQSBSU0EyMDQ4IEcxMRAwDgYDVQQHDAdT\\n' +\r\n        'ZWF0dGxlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAiM/t4FV2R9Nx\\n' +\r\n        'UQG203UY83jInTa/6TMq0SPyg617FqYZxvz2kkx09x3dmxepUg9ttGMlPgjsRZM5\\n' +\r\n        'LCFEi1FWk+hxHzt7vAdhHES5tdjwds3aIkgNEillmRDVrUsbrDwufLaa+MMDO2E1\\n' +\r\n        'wQ/JYFXw16WBCCi2g1EtyQ2Xp+tZDX5IWOTnvhZpW8vVDptZ2AcJ5rMhfOYO3OsK\\n' +\r\n        '5EF0GGA5ldzuezP+BkrBYGJ4wVKGxeaq9+5AT8iVZrypjwRkD7Y5CurywK3+aBwm\\n' +\r\n        's9Q5Nd8t45JCOUzYp92rFKsCriD86n/JnEvgDfdP6Hvtm0/DkwXK40Wz2q0Zrd0k\\n' +\r\n        'mjP054NRPwIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRR7yqd\\n' +\r\n        'SfKcX2Q8GzhcVucReIpewTAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZIhvcNAQELBQAD\\n' +\r\n        'ggEBAEszBRDwXcZyNm07VcFwI1Im94oKwKccuKYeJEsizTBsVon8VpEiMwDs+yGu\\n' +\r\n        '3p8kBhvkLwWybkD/vv6McH7T5b9jDX2DoOudqYnnaYeypsPH/00Vh3LvKagqzQza\\n' +\r\n        'orWLx+0tLo8xW4BtU+Wrn3JId8LvAhxyYXTn9bm+EwPcStp8xGLwu53OPD1RXYuy\\n' +\r\n        'uu+3ps/2piP7GVfou7H6PRaqbFHNfiGg6Y+WA0HGHiJzn8uLmrRJ5YRdIOOG9/xi\\n' +\r\n        'qTmAZloUNM7VNuurcMM2hWF494tQpsQ6ysg2qPjbBqzlGoOt3GfBTOZmqmwmqtam\\n' +\r\n        'K7juWM/mdMQAJ3SMlE5wI8nVdx4=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIICrjCCAjSgAwIBAgIRAL9SdzVPcpq7GOpvdGoM80IwCgYIKoZIzj0EAwMwgZYx\\n' +\r\n        'CzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMu\\n' +\r\n        'MRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEvMC0GA1UEAwwmQW1h\\n' +\r\n        'em9uIFJEUyBldS13ZXN0LTEgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcMB1Nl\\n' +\r\n        'YXR0bGUwIBcNMjEwNTIwMTY1ODA3WhgPMjEyMTA1MjAxNzU4MDdaMIGWMQswCQYD\\n' +\r\n        'VQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEG\\n' +\r\n        'A1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExLzAtBgNVBAMMJkFtYXpvbiBS\\n' +\r\n        'RFMgZXUtd2VzdC0xIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQHDAdTZWF0dGxl\\n' +\r\n        'MHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEJWDgXebvwjR+Ce+hxKOLbnsfN5W5dOlP\\n' +\r\n        'Zn8kwWnD+SLkU81Eac/BDJsXGrMk6jFD1vg16PEkoSevsuYWlC8xR6FmT6F6pmeh\\n' +\r\n        'fsMGOyJpfK4fyoEPhKeQoT23lFIc5Orjo0IwQDAPBgNVHRMBAf8EBTADAQH/MB0G\\n' +\r\n        'A1UdDgQWBBSVNAN1CHAz0eZ77qz2adeqjm31TzAOBgNVHQ8BAf8EBAMCAYYwCgYI\\n' +\r\n        'KoZIzj0EAwMDaAAwZQIxAMlQeHbcjor49jqmcJ9gRLWdEWpXG8thIf6zfYQ/OEAg\\n' +\r\n        'd7GDh4fR/OUk0VfjsBUN/gIwZB0bGdXvK38s6AAE/9IT051cz/wMe9GIrX1MnL1T\\n' +\r\n        '1F5OqnXJdiwfZRRTHsRQ/L00\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIGBDCCA+ygAwIBAgIQalr16vDfX4Rsr+gfQ4iVFDANBgkqhkiG9w0BAQwFADCB\\n' +\r\n        'mjELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\r\n        'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTMwMQYDVQQDDCpB\\n' +\r\n        'bWF6b24gUkRTIGV1LWNlbnRyYWwtMiBSb290IENBIFJTQTQwOTYgRzExEDAOBgNV\\n' +\r\n        'BAcMB1NlYXR0bGUwIBcNMjIwNjA2MjEyNTIzWhgPMjEyMjA2MDYyMjI1MjNaMIGa\\n' +\r\n        'MQswCQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5j\\n' +\r\n        'LjETMBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMzAxBgNVBAMMKkFt\\n' +\r\n        'YXpvbiBSRFMgZXUtY2VudHJhbC0yIFJvb3QgQ0EgUlNBNDA5NiBHMTEQMA4GA1UE\\n' +\r\n        'BwwHU2VhdHRsZTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBANbHbFg7\\n' +\r\n        '2VhZor1YNtez0VlNFaobS3PwOMcEn45BE3y7HONnElIIWXGQa0811M8V2FnyqnE8\\n' +\r\n        'Z5aO1EuvijvWf/3D8DPZkdmAkIfh5hlZYY6Aatr65kEOckwIAm7ZZzrwFogYuaFC\\n' +\r\n        'z/q0CW+8gxNK+98H/zeFx+IxiVoPPPX6UlrLvn+R6XYNERyHMLNgoZbbS5gGHk43\\n' +\r\n        'KhENVv3AWCCcCc85O4rVd+DGb2vMVt6IzXdTQt6Kih28+RGph+WDwYmf+3txTYr8\\n' +\r\n        'xMcCBt1+whyCPlMbC+Yn/ivtCO4LRf0MPZDRQrqTTrFf0h/V0BGEUmMGwuKgmzf5\\n' +\r\n        'Kl9ILdWv6S956ioZin2WgAxhcn7+z//sN++zkqLreSf90Vgv+A7xPRqIpTdJ/nWG\\n' +\r\n        'JaAOUofBfsDsk4X4SUFE7xJa1FZAiu2lqB/E+y7jnWOvFRalzxVJ2Y+D/ZfUfrnK\\n' +\r\n        '4pfKtyD1C6ni1celrZrAwLrJ3PoXPSg4aJKh8+CHex477SRsGj8KP19FG8r0P5AG\\n' +\r\n        '8lS1V+enFCNvT5KqEBpDZ/Y5SQAhAYFUX+zH4/n4ql0l/emS+x23kSRrF+yMkB9q\\n' +\r\n        'lhC/fMk6Pi3tICBjrDQ8XAxv56hfud9w6+/ljYB2uQ1iUYtlE3JdIiuE+3ws26O8\\n' +\r\n        'i7PLMD9zQmo+sVi12pLHfBHQ6RRHtdVRXbXRAgMBAAGjQjBAMA8GA1UdEwEB/wQF\\n' +\r\n        'MAMBAf8wHQYDVR0OBBYEFBFot08ipEL9ZUXCG4lagmF53C0/MA4GA1UdDwEB/wQE\\n' +\r\n        'AwIBhjANBgkqhkiG9w0BAQwFAAOCAgEAi2mcZi6cpaeqJ10xzMY0F3L2eOKYnlEQ\\n' +\r\n        'h6QyhmNKCUF05q5u+cok5KtznzqMwy7TFOZtbVHl8uUX+xvgq/MQCxqFAnuStBXm\\n' +\r\n        'gr2dg1h509ZwvTdk7TDxGdftvPCfnPNJBFbMSq4CZtNcOFBg9Rj8c3Yj+Qvwd56V\\n' +\r\n        'zWs65BUkDNJrXmxdvhJZjUkMa9vi/oFN+M84xXeZTaC5YDYNZZeW9706QqDbAVES\\n' +\r\n        '5ulvKLavB8waLI/lhRBK5/k0YykCMl0A8Togt8D1QsQ0eWWbIM8/HYJMPVFhJ8Wj\\n' +\r\n        'vT1p/YVeDA3Bo1iKDOttgC5vILf5Rw1ZEeDxjf/r8A7VS13D3OLjBmc31zxRTs3n\\n' +\r\n        'XvHKP9MieQHn9GE44tEYPjK3/yC6BDFzCBlvccYHmqGb+jvDEXEBXKzimdC9mcDl\\n' +\r\n        'f4BBQWGJBH5jkbU9p6iti19L/zHhz7qU6UJWbxY40w92L9jS9Utljh4A0LCTjlnR\\n' +\r\n        'NQUgjnGC6K+jkw8hj0LTC5Ip87oqoT9w7Av5EJ3VJ4hcnmNMXJJ1DkWYdnytcGpO\\n' +\r\n        'DMVITQzzDZRwhbitCVPHagTN2wdi9TEuYE33J0VmFeTc6FSI50wP2aOAZ0Q1/8Aj\\n' +\r\n        'bxeM5jS25eaHc2CQAuhrc/7GLnxOcPwdWQb2XWT8eHudhMnoRikVv/KSK3mf6om4\\n' +\r\n        '1YfpdH2jp30=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIID/jCCAuagAwIBAgIQTDc+UgTRtYO7ZGTQ8UWKDDANBgkqhkiG9w0BAQsFADCB\\n' +\r\n        'lzELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\r\n        'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdB\\n' +\r\n        'bWF6b24gUkRTIGV1LXdlc3QtMiBSb290IENBIFJTQTIwNDggRzExEDAOBgNVBAcM\\n' +\r\n        'B1NlYXR0bGUwIBcNMjEwNTIxMjI0NjI0WhgPMjA2MTA1MjEyMzQ2MjRaMIGXMQsw\\n' +\r\n        'CQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjET\\n' +\r\n        'MBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMDAuBgNVBAMMJ0FtYXpv\\n' +\r\n        'biBSRFMgZXUtd2VzdC0yIFJvb3QgQ0EgUlNBMjA0OCBHMTEQMA4GA1UEBwwHU2Vh\\n' +\r\n        'dHRsZTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAM1oGtthQ1YiVIC2\\n' +\r\n        'i4u4swMAGxAjc/BZp0yq0eP5ZQFaxnxs7zFAPabEWsrjeDzrRhdVO0h7zskrertP\\n' +\r\n        'gblGhfD20JfjvCHdP1RUhy/nzG+T+hn6Takan/GIgs8grlBMRHMgBYHW7tklhjaH\\n' +\r\n        '3F7LujhceAHhhgp6IOrpb6YTaTTaJbF3GTmkqxSJ3l1LtEoWz8Al/nL/Ftzxrtez\\n' +\r\n        'Vs6ebpvd7sw37sxmXBWX2OlvUrPCTmladw9OrllGXtCFw4YyLe3zozBlZ3cHzQ0q\\n' +\r\n        'lINhpRcajTMfZrsiGCkQtoJT+AqVJPS2sHjqsEH8yiySW9Jbq4zyMbM1yqQ2vnnx\\n' +\r\n        'MJgoYMcCAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUaQG88UnV\\n' +\r\n        'JPTI+Pcti1P+q3H7pGYwDgYDVR0PAQH/BAQDAgGGMA0GCSqGSIb3DQEBCwUAA4IB\\n' +\r\n        'AQBAkgr75V0sEJimC6QRiTVWEuj2Khy7unjSfudbM6zumhXEU2/sUaVLiYy6cA/x\\n' +\r\n        '3v0laDle6T07x9g64j5YastE/4jbzrGgIINFlY0JnaYmR3KZEjgi1s1fkRRf3llL\\n' +\r\n        'PJm9u4Q1mbwAMQK/ZjLuuRcL3uRIHJek18nRqT5h43GB26qXyvJqeYYpYfIjL9+/\\n' +\r\n        'YiZAbSRRZG+Li23cmPWrbA1CJY121SB+WybCbysbOXzhD3Sl2KSZRwSw4p2HrFtV\\n' +\r\n        '1Prk0dOBtZxCG9luf87ultuDZpfS0w6oNBAMXocgswk24ylcADkkFxBWW+7BETn1\\n' +\r\n        'EpK+t1Lm37mU4sxtuha00XAi\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIEADCCAuigAwIBAgIQcY44/8NUvBwr6LlHfRy7KjANBgkqhkiG9w0BAQsFADCB\\n' +\r\n        'mDELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\r\n        'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTEwLwYDVQQDDChB\\n' +\r\n        'bWF6b24gUkRTIGV1LXNvdXRoLTEgUm9vdCBDQSBSU0EyMDQ4IEcxMRAwDgYDVQQH\\n' +\r\n        'DAdTZWF0dGxlMCAXDTIxMDUxOTE4MjcxOFoYDzIwNjEwNTE5MTkyNzE4WjCBmDEL\\n' +\r\n        'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\r\n        'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTEwLwYDVQQDDChBbWF6\\n' +\r\n        'b24gUkRTIGV1LXNvdXRoLTEgUm9vdCBDQSBSU0EyMDQ4IEcxMRAwDgYDVQQHDAdT\\n' +\r\n        'ZWF0dGxlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0UaBeC+Usalu\\n' +\r\n        'EtXnV7+PnH+gi7/71tI/jkKVGKuhD2JDVvqLVoqbMHRh3+wGMvqKCjbHPcC2XMWv\\n' +\r\n        '566fpAj4UZ9CLB5fVzss+QVNTl+FH2XhEzigopp+872ajsNzcZxrMkifxGb4i0U+\\n' +\r\n        't0Zi+UrbL5tsfP2JonKR1crOrbS6/DlzHBjIiJazGOQcMsJjNuTOItLbMohLpraA\\n' +\r\n        '/nApa3kOvI7Ufool1/34MG0+wL3UUA4YkZ6oBJVxjZvvs6tI7Lzz/SnhK2widGdc\\n' +\r\n        'snbLqBpHNIZQSorVoiwcFaRBGYX/uzYkiw44Yfa4cK2V/B5zgu1Fbr0gbI2am4eh\\n' +\r\n        'yVYyg4jPawIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBS9gM1m\\n' +\r\n        'IIjyh9O5H/7Vj0R/akI7UzAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZIhvcNAQELBQAD\\n' +\r\n        'ggEBAF0Sm9HC2AUyedBVnwgkVXMibnYChOzz7T+0Y+fOLXYAEXex2s8oqGeZdGYX\\n' +\r\n        'JHkjBn7JXu7LM+TpTbPbFFDoc1sgMguD/ls+8XsqAl1CssW+amryIL+jfcfbgQ+P\\n' +\r\n        'ICwEUD9hGdjBgJ5WcuS+qqxHsEIlFNci3HxcxfBa9VsWs5TjI7Vsl4meL5lf7ZyL\\n' +\r\n        'wDV7dHRuU+cImqG1MIvPRIlvPnT7EghrCYi2VCPhP2pM/UvShuwVnkz4MJ29ebIk\\n' +\r\n        'WR9kpblFxFdE92D5UUvMCjC2kmtgzNiErvTcwIvOO9YCbBHzRB1fFiWrXUHhJWq9\\n' +\r\n        'IkaxR5icb/IpAV0A1lYZEWMVsfQ=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIGATCCA+mgAwIBAgIRAMa0TPL+QgbWfUPpYXQkf8wwDQYJKoZIhvcNAQEMBQAw\\n' +\r\n        'gZgxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\r\n        'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTExMC8GA1UEAwwo\\n' +\r\n        'QW1hem9uIFJEUyBldS1ub3J0aC0xIFJvb3QgQ0EgUlNBNDA5NiBHMTEQMA4GA1UE\\n' +\r\n        'BwwHU2VhdHRsZTAgFw0yMTA1MjQyMTAzMjBaGA8yMTIxMDUyNDIyMDMyMFowgZgx\\n' +\r\n        'CzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMu\\n' +\r\n        'MRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTExMC8GA1UEAwwoQW1h\\n' +\r\n        'em9uIFJEUyBldS1ub3J0aC0xIFJvb3QgQ0EgUlNBNDA5NiBHMTEQMA4GA1UEBwwH\\n' +\r\n        'U2VhdHRsZTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBANhS9LJVJyWp\\n' +\r\n        '6Rudy9t47y6kzvgnFYDrvJVtgEK0vFn5ifdlHE7xqMz4LZqWBFTnS+3oidwVRqo7\\n' +\r\n        'tqsuuElsouStO8m315/YUzKZEPmkw8h5ufWt/lg3NTCoUZNkB4p4skr7TspyMUwE\\n' +\r\n        'VdlKQuWTCOLtofwmWT+BnFF3To6xTh3XPlT3ssancw27Gob8kJegD7E0TSMVsecP\\n' +\r\n        'B8je65+3b8CGwcD3QB3kCTGLy87tXuS2+07pncHvjMRMBdDQQQqhXWsRSeUNg0IP\\n' +\r\n        'xdHTWcuwMldYPWK5zus9M4dCNBDlmZjKdcZZVUOKeBBAm7Uo7CbJCk8r/Fvfr6mw\\n' +\r\n        'nXXDtuWhqn/WhJiI/y0QU27M+Hy5CQMxBwFsfAjJkByBpdXmyYxUgTmMpLf43p7H\\n' +\r\n        'oWfH1xN0cT0OQEVmAQjMakauow4AQLNkilV+X6uAAu3STQVFRSrpvMen9Xx3EPC3\\n' +\r\n        'G9flHueTa71bU65Xe8ZmEmFhGeFYHY0GrNPAFhq9RThPRY0IPyCZe0Th8uGejkek\\n' +\r\n        'jQjm0FHPOqs5jc8CD8eJs4jSEFt9lasFLVDcAhx0FkacLKQjGHvKAnnbRwhN/dF3\\n' +\r\n        'xt4oL8Z4JGPCLau056gKnYaEyviN7PgO+IFIVOVIdKEBu2ASGE8/+QJB5bcHefNj\\n' +\r\n        '04hEkDW0UYJbSfPpVbGAR0gFI/QpycKnAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMB\\n' +\r\n        'Af8wHQYDVR0OBBYEFFMXvvjoaGGUcul8GA3FT05DLbZcMA4GA1UdDwEB/wQEAwIB\\n' +\r\n        'hjANBgkqhkiG9w0BAQwFAAOCAgEAQLwFhd2JKn4K/6salLyIA4mP58qbA/9BTB/r\\n' +\r\n        'D9l0bEwDlVPSdY7R3gZCe6v7SWLfA9RjE5tdWDrQMi5IU6W2OVrVsZS/yGJfwnwe\\n' +\r\n        'a/9iUAYprA5QYKDg37h12XhVsDKlYCekHdC+qa5WwB1SL3YUprDLPWeaIQdg+Uh2\\n' +\r\n        '+LxvpZGoxoEbca0fc7flwq9ke/3sXt/3V4wJDyY6AL2YNdjFzC+FtYjHHx8rYxHs\\n' +\r\n        'aesP7yunuN17KcfOZBBnSFRrx96k+Xm95VReTEEpwiBqAECqEpMbd+R0mFAayMb1\\n' +\r\n        'cE77GaK5yeC2f67NLYGpkpIoPbO9p9rzoXLE5GpSizMjimnz6QCbXPFAFBDfSzim\\n' +\r\n        'u6azp40kEUO6kWd7rBhqRwLc43D3TtNWQYxMve5mTRG4Od+eMKwYZmQz89BQCeqm\\n' +\r\n        'aZiJP9y9uwJw4p/A5V3lYHTDQqzmbOyhGUk6OdpdE8HXs/1ep1xTT20QDYOx3Ekt\\n' +\r\n        'r4mmNYfH/8v9nHNRlYJOqFhmoh1i85IUl5IHhg6OT5ZTTwsGTSxvgQQXrmmHVrgZ\\n' +\r\n        'rZIqyBKllCgVeB9sMEsntn4bGLig7CS/N1y2mYdW/745yCLZv2gj0NXhPqgEIdVV\\n' +\r\n        'f9DhFD4ohE1C63XP0kOQee+LYg/MY5vH8swpCSWxQgX5icv5jVDz8YTdCKgUc5u8\\n' +\r\n        'rM2p0kk=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n];\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/aws-ssl-profiles/lib/profiles/ca/defaults.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/aws-ssl-profiles/lib/profiles/ca/proxies.js":
/*!******************************************************************!*\
  !*** ./node_modules/aws-ssl-profiles/lib/profiles/ca/proxies.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.proxies = void 0;\r\n/**\r\n * CA Certificates for **Amazon RDS Proxy** (2024)\r\n *\r\n * - https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-proxy.howitworks.html#rds-proxy-security.tls\r\n * - https://www.amazontrust.com/repository/\r\n */\r\nexports.proxies = [\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIDQTCCAimgAwIBAgITBmyfz5m/jAo54vB4ikPmljZbyjANBgkqhkiG9w0BAQsF\\n' +\r\n        'ADA5MQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRkwFwYDVQQDExBBbWF6\\n' +\r\n        'b24gUm9vdCBDQSAxMB4XDTE1MDUyNjAwMDAwMFoXDTM4MDExNzAwMDAwMFowOTEL\\n' +\r\n        'MAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEZMBcGA1UEAxMQQW1hem9uIFJv\\n' +\r\n        'b3QgQ0EgMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALJ4gHHKeNXj\\n' +\r\n        'ca9HgFB0fW7Y14h29Jlo91ghYPl0hAEvrAIthtOgQ3pOsqTQNroBvo3bSMgHFzZM\\n' +\r\n        '9O6II8c+6zf1tRn4SWiw3te5djgdYZ6k/oI2peVKVuRF4fn9tBb6dNqcmzU5L/qw\\n' +\r\n        'IFAGbHrQgLKm+a/sRxmPUDgH3KKHOVj4utWp+UhnMJbulHheb4mjUcAwhmahRWa6\\n' +\r\n        'VOujw5H5SNz/0egwLX0tdHA114gk957EWW67c4cX8jJGKLhD+rcdqsq08p8kDi1L\\n' +\r\n        '93FcXmn/6pUCyziKrlA4b9v7LWIbxcceVOF34GfID5yHI9Y/QCB/IIDEgEw+OyQm\\n' +\r\n        'jgSubJrIqg0CAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMC\\n' +\r\n        'AYYwHQYDVR0OBBYEFIQYzIU07LwMlJQuCFmcx7IQTgoIMA0GCSqGSIb3DQEBCwUA\\n' +\r\n        'A4IBAQCY8jdaQZChGsV2USggNiMOruYou6r4lK5IpDB/G/wkjUu0yKGX9rbxenDI\\n' +\r\n        'U5PMCCjjmCXPI6T53iHTfIUJrU6adTrCC2qJeHZERxhlbI1Bjjt/msv0tadQ1wUs\\n' +\r\n        'N+gDS63pYaACbvXy8MWy7Vu33PqUXHeeE6V/Uq2V8viTO96LXFvKWlJbYK8U90vv\\n' +\r\n        'o/ufQJVtMVT8QtPHRh8jrdkPSHCa2XV4cdFyQzR1bldZwgJcJmApzyMZFo6IQ6XU\\n' +\r\n        '5MsI+yMRQ+hDKXJioaldXgjUkK642M4UwtBV8ob2xJNDd2ZhwLnoQdeXeGADbkpy\\n' +\r\n        'rqXRfboQnoZsG4q5WTP468SQvvG5\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIFQTCCAymgAwIBAgITBmyf0pY1hp8KD+WGePhbJruKNzANBgkqhkiG9w0BAQwF\\n' +\r\n        'ADA5MQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRkwFwYDVQQDExBBbWF6\\n' +\r\n        'b24gUm9vdCBDQSAyMB4XDTE1MDUyNjAwMDAwMFoXDTQwMDUyNjAwMDAwMFowOTEL\\n' +\r\n        'MAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEZMBcGA1UEAxMQQW1hem9uIFJv\\n' +\r\n        'b3QgQ0EgMjCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAK2Wny2cSkxK\\n' +\r\n        'gXlRmeyKy2tgURO8TW0G/LAIjd0ZEGrHJgw12MBvIITplLGbhQPDW9tK6Mj4kHbZ\\n' +\r\n        'W0/jTOgGNk3Mmqw9DJArktQGGWCsN0R5hYGCrVo34A3MnaZMUnbqQ523BNFQ9lXg\\n' +\r\n        '1dKmSYXpN+nKfq5clU1Imj+uIFptiJXZNLhSGkOQsL9sBbm2eLfq0OQ6PBJTYv9K\\n' +\r\n        '8nu+NQWpEjTj82R0Yiw9AElaKP4yRLuH3WUnAnE72kr3H9rN9yFVkE8P7K6C4Z9r\\n' +\r\n        '2UXTu/Bfh+08LDmG2j/e7HJV63mjrdvdfLC6HM783k81ds8P+HgfajZRRidhW+me\\n' +\r\n        'z/CiVX18JYpvL7TFz4QuK/0NURBs+18bvBt+xa47mAExkv8LV/SasrlX6avvDXbR\\n' +\r\n        '8O70zoan4G7ptGmh32n2M8ZpLpcTnqWHsFcQgTfJU7O7f/aS0ZzQGPSSbtqDT6Zj\\n' +\r\n        'mUyl+17vIWR6IF9sZIUVyzfpYgwLKhbcAS4y2j5L9Z469hdAlO+ekQiG+r5jqFoz\\n' +\r\n        '7Mt0Q5X5bGlSNscpb/xVA1wf+5+9R+vnSUeVC06JIglJ4PVhHvG/LopyboBZ/1c6\\n' +\r\n        '+XUyo05f7O0oYtlNc/LMgRdg7c3r3NunysV+Ar3yVAhU/bQtCSwXVEqY0VThUWcI\\n' +\r\n        '0u1ufm8/0i2BWSlmy5A5lREedCf+3euvAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMB\\n' +\r\n        'Af8wDgYDVR0PAQH/BAQDAgGGMB0GA1UdDgQWBBSwDPBMMPQFWAJI/TPlUq9LhONm\\n' +\r\n        'UjANBgkqhkiG9w0BAQwFAAOCAgEAqqiAjw54o+Ci1M3m9Zh6O+oAA7CXDpO8Wqj2\\n' +\r\n        'LIxyh6mx/H9z/WNxeKWHWc8w4Q0QshNabYL1auaAn6AFC2jkR2vHat+2/XcycuUY\\n' +\r\n        '+gn0oJMsXdKMdYV2ZZAMA3m3MSNjrXiDCYZohMr/+c8mmpJ5581LxedhpxfL86kS\\n' +\r\n        'k5Nrp+gvU5LEYFiwzAJRGFuFjWJZY7attN6a+yb3ACfAXVU3dJnJUH/jWS5E4ywl\\n' +\r\n        '7uxMMne0nxrpS10gxdr9HIcWxkPo1LsmmkVwXqkLN1PiRnsn/eBG8om3zEK2yygm\\n' +\r\n        'btmlyTrIQRNg91CMFa6ybRoVGld45pIq2WWQgj9sAq+uEjonljYE1x2igGOpm/Hl\\n' +\r\n        'urR8FLBOybEfdF849lHqm/osohHUqS0nGkWxr7JOcQ3AWEbWaQbLU8uz/mtBzUF+\\n' +\r\n        'fUwPfHJ5elnNXkoOrJupmHN5fLT0zLm4BwyydFy4x2+IoZCn9Kr5v2c69BoVYh63\\n' +\r\n        'n749sSmvZ6ES8lgQGVMDMBu4Gon2nL2XA46jCfMdiyHxtN/kHNGfZQIG6lzWE7OE\\n' +\r\n        '76KlXIx3KadowGuuQNKotOrN8I1LOJwZmhsoVLiJkO/KdYE+HvJkJMcYr07/R54H\\n' +\r\n        '9jVlpNMKVv/1F2Rs76giJUmTtt8AF9pYfl3uxRuw0dFfIRDH+fO6AgonB8Xx1sfT\\n' +\r\n        '4PsJYGw=\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIBtjCCAVugAwIBAgITBmyf1XSXNmY/Owua2eiedgPySjAKBggqhkjOPQQDAjA5\\n' +\r\n        'MQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRkwFwYDVQQDExBBbWF6b24g\\n' +\r\n        'Um9vdCBDQSAzMB4XDTE1MDUyNjAwMDAwMFoXDTQwMDUyNjAwMDAwMFowOTELMAkG\\n' +\r\n        'A1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEZMBcGA1UEAxMQQW1hem9uIFJvb3Qg\\n' +\r\n        'Q0EgMzBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABCmXp8ZBf8ANm+gBG1bG8lKl\\n' +\r\n        'ui2yEujSLtf6ycXYqm0fc4E7O5hrOXwzpcVOho6AF2hiRVd9RFgdszflZwjrZt6j\\n' +\r\n        'QjBAMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgGGMB0GA1UdDgQWBBSr\\n' +\r\n        'ttvXBp43rDCGB5Fwx5zEGbF4wDAKBggqhkjOPQQDAgNJADBGAiEA4IWSoxe3jfkr\\n' +\r\n        'BqWTrBqYaGFy+uGh0PsceGCmQ5nFuMQCIQCcAu/xlJyzlvnrxir4tiz+OpAUFteM\\n' +\r\n        'YyRIHN8wfdVoOw==\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIIB8jCCAXigAwIBAgITBmyf18G7EEwpQ+Vxe3ssyBrBDjAKBggqhkjOPQQDAzA5\\n' +\r\n        'MQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRkwFwYDVQQDExBBbWF6b24g\\n' +\r\n        'Um9vdCBDQSA0MB4XDTE1MDUyNjAwMDAwMFoXDTQwMDUyNjAwMDAwMFowOTELMAkG\\n' +\r\n        'A1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEZMBcGA1UEAxMQQW1hem9uIFJvb3Qg\\n' +\r\n        'Q0EgNDB2MBAGByqGSM49AgEGBSuBBAAiA2IABNKrijdPo1MN/sGKe0uoe0ZLY7Bi\\n' +\r\n        '9i0b2whxIdIA6GO9mif78DluXeo9pcmBqqNbIJhFXRbb/egQbeOc4OO9X4Ri83Bk\\n' +\r\n        'M6DLJC9wuoihKqB1+IGuYgbEgds5bimwHvouXKNCMEAwDwYDVR0TAQH/BAUwAwEB\\n' +\r\n        '/zAOBgNVHQ8BAf8EBAMCAYYwHQYDVR0OBBYEFNPsxzplbszh2naaVvuc84ZtV+WB\\n' +\r\n        'MAoGCCqGSM49BAMDA2gAMGUCMDqLIfG9fhGt0O9Yli/W651+kI0rz2ZVwyzjKKlw\\n' +\r\n        'CkcO8DdZEv8tmZQoTipPNU0zWgIxAOp1AE47xDqUEpHJWEadIRNyp4iciuRMStuW\\n' +\r\n        '1KyLa2tJElMzrdfkviT8tQp21KW8EA==\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n    '-----BEGIN CERTIFICATE-----\\n' +\r\n        'MIID7zCCAtegAwIBAgIBADANBgkqhkiG9w0BAQsFADCBmDELMAkGA1UEBhMCVVMx\\n' +\r\n        'EDAOBgNVBAgTB0FyaXpvbmExEzARBgNVBAcTClNjb3R0c2RhbGUxJTAjBgNVBAoT\\n' +\r\n        'HFN0YXJmaWVsZCBUZWNobm9sb2dpZXMsIEluYy4xOzA5BgNVBAMTMlN0YXJmaWVs\\n' +\r\n        'ZCBTZXJ2aWNlcyBSb290IENlcnRpZmljYXRlIEF1dGhvcml0eSAtIEcyMB4XDTA5\\n' +\r\n        'MDkwMTAwMDAwMFoXDTM3MTIzMTIzNTk1OVowgZgxCzAJBgNVBAYTAlVTMRAwDgYD\\n' +\r\n        'VQQIEwdBcml6b25hMRMwEQYDVQQHEwpTY290dHNkYWxlMSUwIwYDVQQKExxTdGFy\\n' +\r\n        'ZmllbGQgVGVjaG5vbG9naWVzLCBJbmMuMTswOQYDVQQDEzJTdGFyZmllbGQgU2Vy\\n' +\r\n        'dmljZXMgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkgLSBHMjCCASIwDQYJKoZI\\n' +\r\n        'hvcNAQEBBQADggEPADCCAQoCggEBANUMOsQq+U7i9b4Zl1+OiFOxHz/Lz58gE20p\\n' +\r\n        'OsgPfTz3a3Y4Y9k2YKibXlwAgLIvWX/2h/klQ4bnaRtSmpDhcePYLQ1Ob/bISdm2\\n' +\r\n        '8xpWriu2dBTrz/sm4xq6HZYuajtYlIlHVv8loJNwU4PahHQUw2eeBGg6345AWh1K\\n' +\r\n        'Ts9DkTvnVtYAcMtS7nt9rjrnvDH5RfbCYM8TWQIrgMw0R9+53pBlbQLPLJGmpufe\\n' +\r\n        'hRhJfGZOozptqbXuNC66DQO4M99H67FrjSXZm86B0UVGMpZwh94CDklDhbZsc7tk\\n' +\r\n        '6mFBrMnUVN+HL8cisibMn1lUaJ/8viovxFUcdUBgF4UCVTmLfwUCAwEAAaNCMEAw\\n' +\r\n        'DwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFJxfAN+q\\n' +\r\n        'AdcwKziIorhtSpzyEZGDMA0GCSqGSIb3DQEBCwUAA4IBAQBLNqaEd2ndOxmfZyMI\\n' +\r\n        'bw5hyf2E3F/YNoHN2BtBLZ9g3ccaaNnRbobhiCPPE95Dz+I0swSdHynVv/heyNXB\\n' +\r\n        've6SbzJ08pGCL72CQnqtKrcgfU28elUSwhXqvfdqlS5sdJ/PHLTyxQGjhdByPq1z\\n' +\r\n        'qwubdQxtRbeOlKyWN7Wg0I8VRw7j6IPdj/3vQQF3zCepYoUz8jcI73HPdwbeyBkd\\n' +\r\n        'iEDPfUYd/x7H4c7/I9vG+o1VTqkC50cRRj70/b17KSa7qWFiNyi2LSr2EIZkyXCn\\n' +\r\n        '0q23KXB56jzaYyWf/Wi3MOxw+3WKt21gZ7IeyLnp2KhvAotnDU0mV3HaIPzBSlCN\\n' +\r\n        'sSi6\\n' +\r\n        '-----END CERTIFICATE-----\\n',\r\n];\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/aws-ssl-profiles/lib/profiles/ca/proxies.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/denque/index.js":
/*!**************************************!*\
  !*** ./node_modules/denque/index.js ***!
  \**************************************/
/***/ ((module) => {

"use strict";
eval("\r\n\r\n/**\r\n * Custom implementation of a double ended queue.\r\n */\r\nfunction Denque(array, options) {\r\n  var options = options || {};\r\n  this._capacity = options.capacity;\r\n\r\n  this._head = 0;\r\n  this._tail = 0;\r\n\r\n  if (Array.isArray(array)) {\r\n    this._fromArray(array);\r\n  } else {\r\n    this._capacityMask = 0x3;\r\n    this._list = new Array(4);\r\n  }\r\n}\r\n\r\n/**\r\n * --------------\r\n *  PUBLIC API\r\n * -------------\r\n */\r\n\r\n/**\r\n * Returns the item at the specified index from the list.\r\n * 0 is the first element, 1 is the second, and so on...\r\n * Elements at negative values are that many from the end: -1 is one before the end\r\n * (the last element), -2 is two before the end (one before last), etc.\r\n * @param index\r\n * @returns {*}\r\n */\r\nDenque.prototype.peekAt = function peekAt(index) {\r\n  var i = index;\r\n  // expect a number or return undefined\r\n  if ((i !== (i | 0))) {\r\n    return void 0;\r\n  }\r\n  var len = this.size();\r\n  if (i >= len || i < -len) return undefined;\r\n  if (i < 0) i += len;\r\n  i = (this._head + i) & this._capacityMask;\r\n  return this._list[i];\r\n};\r\n\r\n/**\r\n * Alias for peekAt()\r\n * @param i\r\n * @returns {*}\r\n */\r\nDenque.prototype.get = function get(i) {\r\n  return this.peekAt(i);\r\n};\r\n\r\n/**\r\n * Returns the first item in the list without removing it.\r\n * @returns {*}\r\n */\r\nDenque.prototype.peek = function peek() {\r\n  if (this._head === this._tail) return undefined;\r\n  return this._list[this._head];\r\n};\r\n\r\n/**\r\n * Alias for peek()\r\n * @returns {*}\r\n */\r\nDenque.prototype.peekFront = function peekFront() {\r\n  return this.peek();\r\n};\r\n\r\n/**\r\n * Returns the item that is at the back of the queue without removing it.\r\n * Uses peekAt(-1)\r\n */\r\nDenque.prototype.peekBack = function peekBack() {\r\n  return this.peekAt(-1);\r\n};\r\n\r\n/**\r\n * Returns the current length of the queue\r\n * @return {Number}\r\n */\r\nObject.defineProperty(Denque.prototype, 'length', {\r\n  get: function length() {\r\n    return this.size();\r\n  }\r\n});\r\n\r\n/**\r\n * Return the number of items on the list, or 0 if empty.\r\n * @returns {number}\r\n */\r\nDenque.prototype.size = function size() {\r\n  if (this._head === this._tail) return 0;\r\n  if (this._head < this._tail) return this._tail - this._head;\r\n  else return this._capacityMask + 1 - (this._head - this._tail);\r\n};\r\n\r\n/**\r\n * Add an item at the beginning of the list.\r\n * @param item\r\n */\r\nDenque.prototype.unshift = function unshift(item) {\r\n  if (arguments.length === 0) return this.size();\r\n  var len = this._list.length;\r\n  this._head = (this._head - 1 + len) & this._capacityMask;\r\n  this._list[this._head] = item;\r\n  if (this._tail === this._head) this._growArray();\r\n  if (this._capacity && this.size() > this._capacity) this.pop();\r\n  if (this._head < this._tail) return this._tail - this._head;\r\n  else return this._capacityMask + 1 - (this._head - this._tail);\r\n};\r\n\r\n/**\r\n * Remove and return the first item on the list,\r\n * Returns undefined if the list is empty.\r\n * @returns {*}\r\n */\r\nDenque.prototype.shift = function shift() {\r\n  var head = this._head;\r\n  if (head === this._tail) return undefined;\r\n  var item = this._list[head];\r\n  this._list[head] = undefined;\r\n  this._head = (head + 1) & this._capacityMask;\r\n  if (head < 2 && this._tail > 10000 && this._tail <= this._list.length >>> 2) this._shrinkArray();\r\n  return item;\r\n};\r\n\r\n/**\r\n * Add an item to the bottom of the list.\r\n * @param item\r\n */\r\nDenque.prototype.push = function push(item) {\r\n  if (arguments.length === 0) return this.size();\r\n  var tail = this._tail;\r\n  this._list[tail] = item;\r\n  this._tail = (tail + 1) & this._capacityMask;\r\n  if (this._tail === this._head) {\r\n    this._growArray();\r\n  }\r\n  if (this._capacity && this.size() > this._capacity) {\r\n    this.shift();\r\n  }\r\n  if (this._head < this._tail) return this._tail - this._head;\r\n  else return this._capacityMask + 1 - (this._head - this._tail);\r\n};\r\n\r\n/**\r\n * Remove and return the last item on the list.\r\n * Returns undefined if the list is empty.\r\n * @returns {*}\r\n */\r\nDenque.prototype.pop = function pop() {\r\n  var tail = this._tail;\r\n  if (tail === this._head) return undefined;\r\n  var len = this._list.length;\r\n  this._tail = (tail - 1 + len) & this._capacityMask;\r\n  var item = this._list[this._tail];\r\n  this._list[this._tail] = undefined;\r\n  if (this._head < 2 && tail > 10000 && tail <= len >>> 2) this._shrinkArray();\r\n  return item;\r\n};\r\n\r\n/**\r\n * Remove and return the item at the specified index from the list.\r\n * Returns undefined if the list is empty.\r\n * @param index\r\n * @returns {*}\r\n */\r\nDenque.prototype.removeOne = function removeOne(index) {\r\n  var i = index;\r\n  // expect a number or return undefined\r\n  if ((i !== (i | 0))) {\r\n    return void 0;\r\n  }\r\n  if (this._head === this._tail) return void 0;\r\n  var size = this.size();\r\n  var len = this._list.length;\r\n  if (i >= size || i < -size) return void 0;\r\n  if (i < 0) i += size;\r\n  i = (this._head + i) & this._capacityMask;\r\n  var item = this._list[i];\r\n  var k;\r\n  if (index < size / 2) {\r\n    for (k = index; k > 0; k--) {\r\n      this._list[i] = this._list[i = (i - 1 + len) & this._capacityMask];\r\n    }\r\n    this._list[i] = void 0;\r\n    this._head = (this._head + 1 + len) & this._capacityMask;\r\n  } else {\r\n    for (k = size - 1 - index; k > 0; k--) {\r\n      this._list[i] = this._list[i = (i + 1 + len) & this._capacityMask];\r\n    }\r\n    this._list[i] = void 0;\r\n    this._tail = (this._tail - 1 + len) & this._capacityMask;\r\n  }\r\n  return item;\r\n};\r\n\r\n/**\r\n * Remove number of items from the specified index from the list.\r\n * Returns array of removed items.\r\n * Returns undefined if the list is empty.\r\n * @param index\r\n * @param count\r\n * @returns {array}\r\n */\r\nDenque.prototype.remove = function remove(index, count) {\r\n  var i = index;\r\n  var removed;\r\n  var del_count = count;\r\n  // expect a number or return undefined\r\n  if ((i !== (i | 0))) {\r\n    return void 0;\r\n  }\r\n  if (this._head === this._tail) return void 0;\r\n  var size = this.size();\r\n  var len = this._list.length;\r\n  if (i >= size || i < -size || count < 1) return void 0;\r\n  if (i < 0) i += size;\r\n  if (count === 1 || !count) {\r\n    removed = new Array(1);\r\n    removed[0] = this.removeOne(i);\r\n    return removed;\r\n  }\r\n  if (i === 0 && i + count >= size) {\r\n    removed = this.toArray();\r\n    this.clear();\r\n    return removed;\r\n  }\r\n  if (i + count > size) count = size - i;\r\n  var k;\r\n  removed = new Array(count);\r\n  for (k = 0; k < count; k++) {\r\n    removed[k] = this._list[(this._head + i + k) & this._capacityMask];\r\n  }\r\n  i = (this._head + i) & this._capacityMask;\r\n  if (index + count === size) {\r\n    this._tail = (this._tail - count + len) & this._capacityMask;\r\n    for (k = count; k > 0; k--) {\r\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\r\n    }\r\n    return removed;\r\n  }\r\n  if (index === 0) {\r\n    this._head = (this._head + count + len) & this._capacityMask;\r\n    for (k = count - 1; k > 0; k--) {\r\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\r\n    }\r\n    return removed;\r\n  }\r\n  if (i < size / 2) {\r\n    this._head = (this._head + index + count + len) & this._capacityMask;\r\n    for (k = index; k > 0; k--) {\r\n      this.unshift(this._list[i = (i - 1 + len) & this._capacityMask]);\r\n    }\r\n    i = (this._head - 1 + len) & this._capacityMask;\r\n    while (del_count > 0) {\r\n      this._list[i = (i - 1 + len) & this._capacityMask] = void 0;\r\n      del_count--;\r\n    }\r\n    if (index < 0) this._tail = i;\r\n  } else {\r\n    this._tail = i;\r\n    i = (i + count + len) & this._capacityMask;\r\n    for (k = size - (count + index); k > 0; k--) {\r\n      this.push(this._list[i++]);\r\n    }\r\n    i = this._tail;\r\n    while (del_count > 0) {\r\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\r\n      del_count--;\r\n    }\r\n  }\r\n  if (this._head < 2 && this._tail > 10000 && this._tail <= len >>> 2) this._shrinkArray();\r\n  return removed;\r\n};\r\n\r\n/**\r\n * Native splice implementation.\r\n * Remove number of items from the specified index from the list and/or add new elements.\r\n * Returns array of removed items or empty array if count == 0.\r\n * Returns undefined if the list is empty.\r\n *\r\n * @param index\r\n * @param count\r\n * @param {...*} [elements]\r\n * @returns {array}\r\n */\r\nDenque.prototype.splice = function splice(index, count) {\r\n  var i = index;\r\n  // expect a number or return undefined\r\n  if ((i !== (i | 0))) {\r\n    return void 0;\r\n  }\r\n  var size = this.size();\r\n  if (i < 0) i += size;\r\n  if (i > size) return void 0;\r\n  if (arguments.length > 2) {\r\n    var k;\r\n    var temp;\r\n    var removed;\r\n    var arg_len = arguments.length;\r\n    var len = this._list.length;\r\n    var arguments_index = 2;\r\n    if (!size || i < size / 2) {\r\n      temp = new Array(i);\r\n      for (k = 0; k < i; k++) {\r\n        temp[k] = this._list[(this._head + k) & this._capacityMask];\r\n      }\r\n      if (count === 0) {\r\n        removed = [];\r\n        if (i > 0) {\r\n          this._head = (this._head + i + len) & this._capacityMask;\r\n        }\r\n      } else {\r\n        removed = this.remove(i, count);\r\n        this._head = (this._head + i + len) & this._capacityMask;\r\n      }\r\n      while (arg_len > arguments_index) {\r\n        this.unshift(arguments[--arg_len]);\r\n      }\r\n      for (k = i; k > 0; k--) {\r\n        this.unshift(temp[k - 1]);\r\n      }\r\n    } else {\r\n      temp = new Array(size - (i + count));\r\n      var leng = temp.length;\r\n      for (k = 0; k < leng; k++) {\r\n        temp[k] = this._list[(this._head + i + count + k) & this._capacityMask];\r\n      }\r\n      if (count === 0) {\r\n        removed = [];\r\n        if (i != size) {\r\n          this._tail = (this._head + i + len) & this._capacityMask;\r\n        }\r\n      } else {\r\n        removed = this.remove(i, count);\r\n        this._tail = (this._tail - leng + len) & this._capacityMask;\r\n      }\r\n      while (arguments_index < arg_len) {\r\n        this.push(arguments[arguments_index++]);\r\n      }\r\n      for (k = 0; k < leng; k++) {\r\n        this.push(temp[k]);\r\n      }\r\n    }\r\n    return removed;\r\n  } else {\r\n    return this.remove(i, count);\r\n  }\r\n};\r\n\r\n/**\r\n * Soft clear - does not reset capacity.\r\n */\r\nDenque.prototype.clear = function clear() {\r\n  this._list = new Array(this._list.length);\r\n  this._head = 0;\r\n  this._tail = 0;\r\n};\r\n\r\n/**\r\n * Returns true or false whether the list is empty.\r\n * @returns {boolean}\r\n */\r\nDenque.prototype.isEmpty = function isEmpty() {\r\n  return this._head === this._tail;\r\n};\r\n\r\n/**\r\n * Returns an array of all queue items.\r\n * @returns {Array}\r\n */\r\nDenque.prototype.toArray = function toArray() {\r\n  return this._copyArray(false);\r\n};\r\n\r\n/**\r\n * -------------\r\n *   INTERNALS\r\n * -------------\r\n */\r\n\r\n/**\r\n * Fills the queue with items from an array\r\n * For use in the constructor\r\n * @param array\r\n * @private\r\n */\r\nDenque.prototype._fromArray = function _fromArray(array) {\r\n  var length = array.length;\r\n  var capacity = this._nextPowerOf2(length);\r\n\r\n  this._list = new Array(capacity);\r\n  this._capacityMask = capacity - 1;\r\n  this._tail = length;\r\n\r\n  for (var i = 0; i < length; i++) this._list[i] = array[i];\r\n};\r\n\r\n/**\r\n *\r\n * @param fullCopy\r\n * @param size Initialize the array with a specific size. Will default to the current list size\r\n * @returns {Array}\r\n * @private\r\n */\r\nDenque.prototype._copyArray = function _copyArray(fullCopy, size) {\r\n  var src = this._list;\r\n  var capacity = src.length;\r\n  var length = this.length;\r\n  size = size | length;\r\n\r\n  // No prealloc requested and the buffer is contiguous\r\n  if (size == length && this._head < this._tail) {\r\n    // Simply do a fast slice copy\r\n    return this._list.slice(this._head, this._tail);\r\n  }\r\n\r\n  var dest = new Array(size);\r\n\r\n  var k = 0;\r\n  var i;\r\n  if (fullCopy || this._head > this._tail) {\r\n    for (i = this._head; i < capacity; i++) dest[k++] = src[i];\r\n    for (i = 0; i < this._tail; i++) dest[k++] = src[i];\r\n  } else {\r\n    for (i = this._head; i < this._tail; i++) dest[k++] = src[i];\r\n  }\r\n\r\n  return dest;\r\n}\r\n\r\n/**\r\n * Grows the internal list array.\r\n * @private\r\n */\r\nDenque.prototype._growArray = function _growArray() {\r\n  if (this._head != 0) {\r\n    // double array size and copy existing data, head to end, then beginning to tail.\r\n    var newList = this._copyArray(true, this._list.length << 1);\r\n\r\n    this._tail = this._list.length;\r\n    this._head = 0;\r\n\r\n    this._list = newList;\r\n  } else {\r\n    this._tail = this._list.length;\r\n    this._list.length <<= 1;\r\n  }\r\n\r\n  this._capacityMask = (this._capacityMask << 1) | 1;\r\n};\r\n\r\n/**\r\n * Shrinks the internal list array.\r\n * @private\r\n */\r\nDenque.prototype._shrinkArray = function _shrinkArray() {\r\n  this._list.length >>>= 1;\r\n  this._capacityMask >>>= 1;\r\n};\r\n\r\n/**\r\n * Find the next power of 2, at least 4\r\n * @private\r\n * @param {number} num \r\n * @returns {number}\r\n */\r\nDenque.prototype._nextPowerOf2 = function _nextPowerOf2(num) {\r\n  var log2 = Math.log(num) / Math.log(2);\r\n  var nextPow2 = 1 << (log2 + 1);\r\n\r\n  return Math.max(nextPow2, 4);\r\n}\r\n\r\nmodule.exports = Denque;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/denque/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/generate-function/index.js":
/*!*************************************************!*\
  !*** ./node_modules/generate-function/index.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var util = __webpack_require__(/*! util */ \"util\")\r\nvar isProperty = __webpack_require__(/*! is-property */ \"(middleware)/./node_modules/is-property/is-property.js\")\r\n\r\nvar INDENT_START = /[\\{\\[]/\r\nvar INDENT_END = /[\\}\\]]/\r\n\r\n// from https://mathiasbynens.be/notes/reserved-keywords\r\nvar RESERVED = [\r\n  'do',\r\n  'if',\r\n  'in',\r\n  'for',\r\n  'let',\r\n  'new',\r\n  'try',\r\n  'var',\r\n  'case',\r\n  'else',\r\n  'enum',\r\n  'eval',\r\n  'null',\r\n  'this',\r\n  'true',\r\n  'void',\r\n  'with',\r\n  'await',\r\n  'break',\r\n  'catch',\r\n  'class',\r\n  'const',\r\n  'false',\r\n  'super',\r\n  'throw',\r\n  'while',\r\n  'yield',\r\n  'delete',\r\n  'export',\r\n  'import',\r\n  'public',\r\n  'return',\r\n  'static',\r\n  'switch',\r\n  'typeof',\r\n  'default',\r\n  'extends',\r\n  'finally',\r\n  'package',\r\n  'private',\r\n  'continue',\r\n  'debugger',\r\n  'function',\r\n  'arguments',\r\n  'interface',\r\n  'protected',\r\n  'implements',\r\n  'instanceof',\r\n  'NaN',\r\n  'undefined'\r\n]\r\n\r\nvar RESERVED_MAP = {}\r\n\r\nfor (var i = 0; i < RESERVED.length; i++) {\r\n  RESERVED_MAP[RESERVED[i]] = true\r\n}\r\n\r\nvar isVariable = function (name) {\r\n  return isProperty(name) && !RESERVED_MAP.hasOwnProperty(name)\r\n}\r\n\r\nvar formats = {\r\n  s: function(s) {\r\n    return '' + s\r\n  },\r\n  d: function(d) {\r\n    return '' + Number(d)\r\n  },\r\n  o: function(o) {\r\n    return JSON.stringify(o)\r\n  }\r\n}\r\n\r\nvar genfun = function() {\r\n  var lines = []\r\n  var indent = 0\r\n  var vars = {}\r\n\r\n  var push = function(str) {\r\n    var spaces = ''\r\n    while (spaces.length < indent*2) spaces += '  '\r\n    lines.push(spaces+str)\r\n  }\r\n\r\n  var pushLine = function(line) {\r\n    if (INDENT_END.test(line.trim()[0]) && INDENT_START.test(line[line.length-1])) {\r\n      indent--\r\n      push(line)\r\n      indent++\r\n      return\r\n    }\r\n    if (INDENT_START.test(line[line.length-1])) {\r\n      push(line)\r\n      indent++\r\n      return\r\n    }\r\n    if (INDENT_END.test(line.trim()[0])) {\r\n      indent--\r\n      push(line)\r\n      return\r\n    }\r\n\r\n    push(line)\r\n  }\r\n\r\n  var line = function(fmt) {\r\n    if (!fmt) return line\r\n\r\n    if (arguments.length === 1 && fmt.indexOf('\\n') > -1) {\r\n      var lines = fmt.trim().split('\\n')\r\n      for (var i = 0; i < lines.length; i++) {\r\n        pushLine(lines[i].trim())\r\n      }\r\n    } else {\r\n      pushLine(util.format.apply(util, arguments))\r\n    }\r\n\r\n    return line\r\n  }\r\n\r\n  line.scope = {}\r\n  line.formats = formats\r\n\r\n  line.sym = function(name) {\r\n    if (!name || !isVariable(name)) name = 'tmp'\r\n    if (!vars[name]) vars[name] = 0\r\n    return name + (vars[name]++ || '')\r\n  }\r\n\r\n  line.property = function(obj, name) {\r\n    if (arguments.length === 1) {\r\n      name = obj\r\n      obj = ''\r\n    }\r\n\r\n    name = name + ''\r\n\r\n    if (isProperty(name)) return (obj ? obj + '.' + name : name)\r\n    return obj ? obj + '[' + JSON.stringify(name) + ']' : JSON.stringify(name)\r\n  }\r\n\r\n  line.toString = function() {\r\n    return lines.join('\\n')\r\n  }\r\n\r\n  line.toFunction = function(scope) {\r\n    if (!scope) scope = {}\r\n\r\n    var src = 'return ('+line.toString()+')'\r\n\r\n    Object.keys(line.scope).forEach(function (key) {\r\n      if (!scope[key]) scope[key] = line.scope[key]\r\n    })\r\n\r\n    var keys = Object.keys(scope).map(function(key) {\r\n      return key\r\n    })\r\n\r\n    var vals = keys.map(function(key) {\r\n      return scope[key]\r\n    })\r\n\r\n    return Function.apply(null, keys.concat(src)).apply(null, vals)\r\n  }\r\n\r\n  if (arguments.length) line.apply(null, arguments)\r\n\r\n  return line\r\n}\r\n\r\ngenfun.formats = formats\r\nmodule.exports = genfun\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2dlbmVyYXRlLWZ1bmN0aW9uL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBLFdBQVcsbUJBQU8sQ0FBQyxrQkFBTTtBQUN6QixpQkFBaUIsbUJBQU8sQ0FBQywyRUFBYTtBQUN0QztBQUNBLHVCQUF1QjtBQUN2QixxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHFCQUFxQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixrQkFBa0I7QUFDeEM7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZ2VuZXJhdGUtZnVuY3Rpb24vaW5kZXguanM/YzMwZSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdXRpbCA9IHJlcXVpcmUoJ3V0aWwnKVxyXG52YXIgaXNQcm9wZXJ0eSA9IHJlcXVpcmUoJ2lzLXByb3BlcnR5JylcclxuXHJcbnZhciBJTkRFTlRfU1RBUlQgPSAvW1xce1xcW10vXHJcbnZhciBJTkRFTlRfRU5EID0gL1tcXH1cXF1dL1xyXG5cclxuLy8gZnJvbSBodHRwczovL21hdGhpYXNieW5lbnMuYmUvbm90ZXMvcmVzZXJ2ZWQta2V5d29yZHNcclxudmFyIFJFU0VSVkVEID0gW1xyXG4gICdkbycsXHJcbiAgJ2lmJyxcclxuICAnaW4nLFxyXG4gICdmb3InLFxyXG4gICdsZXQnLFxyXG4gICduZXcnLFxyXG4gICd0cnknLFxyXG4gICd2YXInLFxyXG4gICdjYXNlJyxcclxuICAnZWxzZScsXHJcbiAgJ2VudW0nLFxyXG4gICdldmFsJyxcclxuICAnbnVsbCcsXHJcbiAgJ3RoaXMnLFxyXG4gICd0cnVlJyxcclxuICAndm9pZCcsXHJcbiAgJ3dpdGgnLFxyXG4gICdhd2FpdCcsXHJcbiAgJ2JyZWFrJyxcclxuICAnY2F0Y2gnLFxyXG4gICdjbGFzcycsXHJcbiAgJ2NvbnN0JyxcclxuICAnZmFsc2UnLFxyXG4gICdzdXBlcicsXHJcbiAgJ3Rocm93JyxcclxuICAnd2hpbGUnLFxyXG4gICd5aWVsZCcsXHJcbiAgJ2RlbGV0ZScsXHJcbiAgJ2V4cG9ydCcsXHJcbiAgJ2ltcG9ydCcsXHJcbiAgJ3B1YmxpYycsXHJcbiAgJ3JldHVybicsXHJcbiAgJ3N0YXRpYycsXHJcbiAgJ3N3aXRjaCcsXHJcbiAgJ3R5cGVvZicsXHJcbiAgJ2RlZmF1bHQnLFxyXG4gICdleHRlbmRzJyxcclxuICAnZmluYWxseScsXHJcbiAgJ3BhY2thZ2UnLFxyXG4gICdwcml2YXRlJyxcclxuICAnY29udGludWUnLFxyXG4gICdkZWJ1Z2dlcicsXHJcbiAgJ2Z1bmN0aW9uJyxcclxuICAnYXJndW1lbnRzJyxcclxuICAnaW50ZXJmYWNlJyxcclxuICAncHJvdGVjdGVkJyxcclxuICAnaW1wbGVtZW50cycsXHJcbiAgJ2luc3RhbmNlb2YnLFxyXG4gICdOYU4nLFxyXG4gICd1bmRlZmluZWQnXHJcbl1cclxuXHJcbnZhciBSRVNFUlZFRF9NQVAgPSB7fVxyXG5cclxuZm9yICh2YXIgaSA9IDA7IGkgPCBSRVNFUlZFRC5sZW5ndGg7IGkrKykge1xyXG4gIFJFU0VSVkVEX01BUFtSRVNFUlZFRFtpXV0gPSB0cnVlXHJcbn1cclxuXHJcbnZhciBpc1ZhcmlhYmxlID0gZnVuY3Rpb24gKG5hbWUpIHtcclxuICByZXR1cm4gaXNQcm9wZXJ0eShuYW1lKSAmJiAhUkVTRVJWRURfTUFQLmhhc093blByb3BlcnR5KG5hbWUpXHJcbn1cclxuXHJcbnZhciBmb3JtYXRzID0ge1xyXG4gIHM6IGZ1bmN0aW9uKHMpIHtcclxuICAgIHJldHVybiAnJyArIHNcclxuICB9LFxyXG4gIGQ6IGZ1bmN0aW9uKGQpIHtcclxuICAgIHJldHVybiAnJyArIE51bWJlcihkKVxyXG4gIH0sXHJcbiAgbzogZnVuY3Rpb24obykge1xyXG4gICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KG8pXHJcbiAgfVxyXG59XHJcblxyXG52YXIgZ2VuZnVuID0gZnVuY3Rpb24oKSB7XHJcbiAgdmFyIGxpbmVzID0gW11cclxuICB2YXIgaW5kZW50ID0gMFxyXG4gIHZhciB2YXJzID0ge31cclxuXHJcbiAgdmFyIHB1c2ggPSBmdW5jdGlvbihzdHIpIHtcclxuICAgIHZhciBzcGFjZXMgPSAnJ1xyXG4gICAgd2hpbGUgKHNwYWNlcy5sZW5ndGggPCBpbmRlbnQqMikgc3BhY2VzICs9ICcgICdcclxuICAgIGxpbmVzLnB1c2goc3BhY2VzK3N0cilcclxuICB9XHJcblxyXG4gIHZhciBwdXNoTGluZSA9IGZ1bmN0aW9uKGxpbmUpIHtcclxuICAgIGlmIChJTkRFTlRfRU5ELnRlc3QobGluZS50cmltKClbMF0pICYmIElOREVOVF9TVEFSVC50ZXN0KGxpbmVbbGluZS5sZW5ndGgtMV0pKSB7XHJcbiAgICAgIGluZGVudC0tXHJcbiAgICAgIHB1c2gobGluZSlcclxuICAgICAgaW5kZW50KytcclxuICAgICAgcmV0dXJuXHJcbiAgICB9XHJcbiAgICBpZiAoSU5ERU5UX1NUQVJULnRlc3QobGluZVtsaW5lLmxlbmd0aC0xXSkpIHtcclxuICAgICAgcHVzaChsaW5lKVxyXG4gICAgICBpbmRlbnQrK1xyXG4gICAgICByZXR1cm5cclxuICAgIH1cclxuICAgIGlmIChJTkRFTlRfRU5ELnRlc3QobGluZS50cmltKClbMF0pKSB7XHJcbiAgICAgIGluZGVudC0tXHJcbiAgICAgIHB1c2gobGluZSlcclxuICAgICAgcmV0dXJuXHJcbiAgICB9XHJcblxyXG4gICAgcHVzaChsaW5lKVxyXG4gIH1cclxuXHJcbiAgdmFyIGxpbmUgPSBmdW5jdGlvbihmbXQpIHtcclxuICAgIGlmICghZm10KSByZXR1cm4gbGluZVxyXG5cclxuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAxICYmIGZtdC5pbmRleE9mKCdcXG4nKSA+IC0xKSB7XHJcbiAgICAgIHZhciBsaW5lcyA9IGZtdC50cmltKCkuc3BsaXQoJ1xcbicpXHJcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGluZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBwdXNoTGluZShsaW5lc1tpXS50cmltKCkpXHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHB1c2hMaW5lKHV0aWwuZm9ybWF0LmFwcGx5KHV0aWwsIGFyZ3VtZW50cykpXHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGxpbmVcclxuICB9XHJcblxyXG4gIGxpbmUuc2NvcGUgPSB7fVxyXG4gIGxpbmUuZm9ybWF0cyA9IGZvcm1hdHNcclxuXHJcbiAgbGluZS5zeW0gPSBmdW5jdGlvbihuYW1lKSB7XHJcbiAgICBpZiAoIW5hbWUgfHwgIWlzVmFyaWFibGUobmFtZSkpIG5hbWUgPSAndG1wJ1xyXG4gICAgaWYgKCF2YXJzW25hbWVdKSB2YXJzW25hbWVdID0gMFxyXG4gICAgcmV0dXJuIG5hbWUgKyAodmFyc1tuYW1lXSsrIHx8ICcnKVxyXG4gIH1cclxuXHJcbiAgbGluZS5wcm9wZXJ0eSA9IGZ1bmN0aW9uKG9iaiwgbmFtZSkge1xyXG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDEpIHtcclxuICAgICAgbmFtZSA9IG9ialxyXG4gICAgICBvYmogPSAnJ1xyXG4gICAgfVxyXG5cclxuICAgIG5hbWUgPSBuYW1lICsgJydcclxuXHJcbiAgICBpZiAoaXNQcm9wZXJ0eShuYW1lKSkgcmV0dXJuIChvYmogPyBvYmogKyAnLicgKyBuYW1lIDogbmFtZSlcclxuICAgIHJldHVybiBvYmogPyBvYmogKyAnWycgKyBKU09OLnN0cmluZ2lmeShuYW1lKSArICddJyA6IEpTT04uc3RyaW5naWZ5KG5hbWUpXHJcbiAgfVxyXG5cclxuICBsaW5lLnRvU3RyaW5nID0gZnVuY3Rpb24oKSB7XHJcbiAgICByZXR1cm4gbGluZXMuam9pbignXFxuJylcclxuICB9XHJcblxyXG4gIGxpbmUudG9GdW5jdGlvbiA9IGZ1bmN0aW9uKHNjb3BlKSB7XHJcbiAgICBpZiAoIXNjb3BlKSBzY29wZSA9IHt9XHJcblxyXG4gICAgdmFyIHNyYyA9ICdyZXR1cm4gKCcrbGluZS50b1N0cmluZygpKycpJ1xyXG5cclxuICAgIE9iamVjdC5rZXlzKGxpbmUuc2NvcGUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xyXG4gICAgICBpZiAoIXNjb3BlW2tleV0pIHNjb3BlW2tleV0gPSBsaW5lLnNjb3BlW2tleV1cclxuICAgIH0pXHJcblxyXG4gICAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhzY29wZSkubWFwKGZ1bmN0aW9uKGtleSkge1xyXG4gICAgICByZXR1cm4ga2V5XHJcbiAgICB9KVxyXG5cclxuICAgIHZhciB2YWxzID0ga2V5cy5tYXAoZnVuY3Rpb24oa2V5KSB7XHJcbiAgICAgIHJldHVybiBzY29wZVtrZXldXHJcbiAgICB9KVxyXG5cclxuICAgIHJldHVybiBGdW5jdGlvbi5hcHBseShudWxsLCBrZXlzLmNvbmNhdChzcmMpKS5hcHBseShudWxsLCB2YWxzKVxyXG4gIH1cclxuXHJcbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGgpIGxpbmUuYXBwbHkobnVsbCwgYXJndW1lbnRzKVxyXG5cclxuICByZXR1cm4gbGluZVxyXG59XHJcblxyXG5nZW5mdW4uZm9ybWF0cyA9IGZvcm1hdHNcclxubW9kdWxlLmV4cG9ydHMgPSBnZW5mdW5cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/generate-function/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/iconv-lite/encodings/dbcs-codec.js":
/*!*********************************************************!*\
  !*** ./node_modules/iconv-lite/encodings/dbcs-codec.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nvar Buffer = (__webpack_require__(/*! safer-buffer */ \"(middleware)/./node_modules/safer-buffer/safer.js\").Buffer);\r\n\r\n// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.\r\n// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.\r\n// To save memory and loading time, we read table files only when requested.\r\n\r\nexports._dbcs = DBCSCodec;\r\n\r\nvar UNASSIGNED = -1,\r\n    GB18030_CODE = -2,\r\n    SEQ_START  = -10,\r\n    NODE_START = -1000,\r\n    UNASSIGNED_NODE = new Array(0x100),\r\n    DEF_CHAR = -1;\r\n\r\nfor (var i = 0; i < 0x100; i++)\r\n    UNASSIGNED_NODE[i] = UNASSIGNED;\r\n\r\n\r\n// Class DBCSCodec reads and initializes mapping tables.\r\nfunction DBCSCodec(codecOptions, iconv) {\r\n    this.encodingName = codecOptions.encodingName;\r\n    if (!codecOptions)\r\n        throw new Error(\"DBCS codec is called without the data.\")\r\n    if (!codecOptions.table)\r\n        throw new Error(\"Encoding '\" + this.encodingName + \"' has no data.\");\r\n\r\n    // Load tables.\r\n    var mappingTable = codecOptions.table();\r\n\r\n\r\n    // Decode tables: MBCS -> Unicode.\r\n\r\n    // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.\r\n    // Trie root is decodeTables[0].\r\n    // Values: >=  0 -> unicode character code. can be > 0xFFFF\r\n    //         == UNASSIGNED -> unknown/unassigned sequence.\r\n    //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.\r\n    //         <= NODE_START -> index of the next node in our trie to process next byte.\r\n    //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.\r\n    this.decodeTables = [];\r\n    this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.\r\n\r\n    // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. \r\n    this.decodeTableSeq = [];\r\n\r\n    // Actual mapping tables consist of chunks. Use them to fill up decode tables.\r\n    for (var i = 0; i < mappingTable.length; i++)\r\n        this._addDecodeChunk(mappingTable[i]);\r\n\r\n    // Load & create GB18030 tables when needed.\r\n    if (typeof codecOptions.gb18030 === 'function') {\r\n        this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.\r\n\r\n        // Add GB18030 common decode nodes.\r\n        var commonThirdByteNodeIdx = this.decodeTables.length;\r\n        this.decodeTables.push(UNASSIGNED_NODE.slice(0));\r\n\r\n        var commonFourthByteNodeIdx = this.decodeTables.length;\r\n        this.decodeTables.push(UNASSIGNED_NODE.slice(0));\r\n\r\n        // Fill out the tree\r\n        var firstByteNode = this.decodeTables[0];\r\n        for (var i = 0x81; i <= 0xFE; i++) {\r\n            var secondByteNode = this.decodeTables[NODE_START - firstByteNode[i]];\r\n            for (var j = 0x30; j <= 0x39; j++) {\r\n                if (secondByteNode[j] === UNASSIGNED) {\r\n                    secondByteNode[j] = NODE_START - commonThirdByteNodeIdx;\r\n                } else if (secondByteNode[j] > NODE_START) {\r\n                    throw new Error(\"gb18030 decode tables conflict at byte 2\");\r\n                }\r\n\r\n                var thirdByteNode = this.decodeTables[NODE_START - secondByteNode[j]];\r\n                for (var k = 0x81; k <= 0xFE; k++) {\r\n                    if (thirdByteNode[k] === UNASSIGNED) {\r\n                        thirdByteNode[k] = NODE_START - commonFourthByteNodeIdx;\r\n                    } else if (thirdByteNode[k] === NODE_START - commonFourthByteNodeIdx) {\r\n                        continue;\r\n                    } else if (thirdByteNode[k] > NODE_START) {\r\n                        throw new Error(\"gb18030 decode tables conflict at byte 3\");\r\n                    }\r\n\r\n                    var fourthByteNode = this.decodeTables[NODE_START - thirdByteNode[k]];\r\n                    for (var l = 0x30; l <= 0x39; l++) {\r\n                        if (fourthByteNode[l] === UNASSIGNED)\r\n                            fourthByteNode[l] = GB18030_CODE;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    this.defaultCharUnicode = iconv.defaultCharUnicode;\r\n\r\n    \r\n    // Encode tables: Unicode -> DBCS.\r\n\r\n    // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.\r\n    // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.\r\n    // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).\r\n    //         == UNASSIGNED -> no conversion found. Output a default char.\r\n    //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.\r\n    this.encodeTable = [];\r\n    \r\n    // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of\r\n    // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key\r\n    // means end of sequence (needed when one sequence is a strict subsequence of another).\r\n    // Objects are kept separately from encodeTable to increase performance.\r\n    this.encodeTableSeq = [];\r\n\r\n    // Some chars can be decoded, but need not be encoded.\r\n    var skipEncodeChars = {};\r\n    if (codecOptions.encodeSkipVals)\r\n        for (var i = 0; i < codecOptions.encodeSkipVals.length; i++) {\r\n            var val = codecOptions.encodeSkipVals[i];\r\n            if (typeof val === 'number')\r\n                skipEncodeChars[val] = true;\r\n            else\r\n                for (var j = val.from; j <= val.to; j++)\r\n                    skipEncodeChars[j] = true;\r\n        }\r\n        \r\n    // Use decode trie to recursively fill out encode tables.\r\n    this._fillEncodeTable(0, 0, skipEncodeChars);\r\n\r\n    // Add more encoding pairs when needed.\r\n    if (codecOptions.encodeAdd) {\r\n        for (var uChar in codecOptions.encodeAdd)\r\n            if (Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar))\r\n                this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);\r\n    }\r\n\r\n    this.defCharSB  = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];\r\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = this.encodeTable[0]['?'];\r\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = \"?\".charCodeAt(0);\r\n}\r\n\r\nDBCSCodec.prototype.encoder = DBCSEncoder;\r\nDBCSCodec.prototype.decoder = DBCSDecoder;\r\n\r\n// Decoder helpers\r\nDBCSCodec.prototype._getDecodeTrieNode = function(addr) {\r\n    var bytes = [];\r\n    for (; addr > 0; addr >>>= 8)\r\n        bytes.push(addr & 0xFF);\r\n    if (bytes.length == 0)\r\n        bytes.push(0);\r\n\r\n    var node = this.decodeTables[0];\r\n    for (var i = bytes.length-1; i > 0; i--) { // Traverse nodes deeper into the trie.\r\n        var val = node[bytes[i]];\r\n\r\n        if (val == UNASSIGNED) { // Create new node.\r\n            node[bytes[i]] = NODE_START - this.decodeTables.length;\r\n            this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));\r\n        }\r\n        else if (val <= NODE_START) { // Existing node.\r\n            node = this.decodeTables[NODE_START - val];\r\n        }\r\n        else\r\n            throw new Error(\"Overwrite byte in \" + this.encodingName + \", addr: \" + addr.toString(16));\r\n    }\r\n    return node;\r\n}\r\n\r\n\r\nDBCSCodec.prototype._addDecodeChunk = function(chunk) {\r\n    // First element of chunk is the hex mbcs code where we start.\r\n    var curAddr = parseInt(chunk[0], 16);\r\n\r\n    // Choose the decoding node where we'll write our chars.\r\n    var writeTable = this._getDecodeTrieNode(curAddr);\r\n    curAddr = curAddr & 0xFF;\r\n\r\n    // Write all other elements of the chunk to the table.\r\n    for (var k = 1; k < chunk.length; k++) {\r\n        var part = chunk[k];\r\n        if (typeof part === \"string\") { // String, write as-is.\r\n            for (var l = 0; l < part.length;) {\r\n                var code = part.charCodeAt(l++);\r\n                if (0xD800 <= code && code < 0xDC00) { // Decode surrogate\r\n                    var codeTrail = part.charCodeAt(l++);\r\n                    if (0xDC00 <= codeTrail && codeTrail < 0xE000)\r\n                        writeTable[curAddr++] = 0x10000 + (code - 0xD800) * 0x400 + (codeTrail - 0xDC00);\r\n                    else\r\n                        throw new Error(\"Incorrect surrogate pair in \"  + this.encodingName + \" at chunk \" + chunk[0]);\r\n                }\r\n                else if (0x0FF0 < code && code <= 0x0FFF) { // Character sequence (our own encoding used)\r\n                    var len = 0xFFF - code + 2;\r\n                    var seq = [];\r\n                    for (var m = 0; m < len; m++)\r\n                        seq.push(part.charCodeAt(l++)); // Simple variation: don't support surrogates or subsequences in seq.\r\n\r\n                    writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;\r\n                    this.decodeTableSeq.push(seq);\r\n                }\r\n                else\r\n                    writeTable[curAddr++] = code; // Basic char\r\n            }\r\n        } \r\n        else if (typeof part === \"number\") { // Integer, meaning increasing sequence starting with prev character.\r\n            var charCode = writeTable[curAddr - 1] + 1;\r\n            for (var l = 0; l < part; l++)\r\n                writeTable[curAddr++] = charCode++;\r\n        }\r\n        else\r\n            throw new Error(\"Incorrect type '\" + typeof part + \"' given in \"  + this.encodingName + \" at chunk \" + chunk[0]);\r\n    }\r\n    if (curAddr > 0xFF)\r\n        throw new Error(\"Incorrect chunk in \"  + this.encodingName + \" at addr \" + chunk[0] + \": too long\" + curAddr);\r\n}\r\n\r\n// Encoder helpers\r\nDBCSCodec.prototype._getEncodeBucket = function(uCode) {\r\n    var high = uCode >> 8; // This could be > 0xFF because of astral characters.\r\n    if (this.encodeTable[high] === undefined)\r\n        this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.\r\n    return this.encodeTable[high];\r\n}\r\n\r\nDBCSCodec.prototype._setEncodeChar = function(uCode, dbcsCode) {\r\n    var bucket = this._getEncodeBucket(uCode);\r\n    var low = uCode & 0xFF;\r\n    if (bucket[low] <= SEQ_START)\r\n        this.encodeTableSeq[SEQ_START-bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.\r\n    else if (bucket[low] == UNASSIGNED)\r\n        bucket[low] = dbcsCode;\r\n}\r\n\r\nDBCSCodec.prototype._setEncodeSequence = function(seq, dbcsCode) {\r\n    \r\n    // Get the root of character tree according to first character of the sequence.\r\n    var uCode = seq[0];\r\n    var bucket = this._getEncodeBucket(uCode);\r\n    var low = uCode & 0xFF;\r\n\r\n    var node;\r\n    if (bucket[low] <= SEQ_START) {\r\n        // There's already a sequence with  - use it.\r\n        node = this.encodeTableSeq[SEQ_START-bucket[low]];\r\n    }\r\n    else {\r\n        // There was no sequence object - allocate a new one.\r\n        node = {};\r\n        if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.\r\n        bucket[low] = SEQ_START - this.encodeTableSeq.length;\r\n        this.encodeTableSeq.push(node);\r\n    }\r\n\r\n    // Traverse the character tree, allocating new nodes as needed.\r\n    for (var j = 1; j < seq.length-1; j++) {\r\n        var oldVal = node[uCode];\r\n        if (typeof oldVal === 'object')\r\n            node = oldVal;\r\n        else {\r\n            node = node[uCode] = {}\r\n            if (oldVal !== undefined)\r\n                node[DEF_CHAR] = oldVal\r\n        }\r\n    }\r\n\r\n    // Set the leaf to given dbcsCode.\r\n    uCode = seq[seq.length-1];\r\n    node[uCode] = dbcsCode;\r\n}\r\n\r\nDBCSCodec.prototype._fillEncodeTable = function(nodeIdx, prefix, skipEncodeChars) {\r\n    var node = this.decodeTables[nodeIdx];\r\n    var hasValues = false;\r\n    var subNodeEmpty = {};\r\n    for (var i = 0; i < 0x100; i++) {\r\n        var uCode = node[i];\r\n        var mbCode = prefix + i;\r\n        if (skipEncodeChars[mbCode])\r\n            continue;\r\n\r\n        if (uCode >= 0) {\r\n            this._setEncodeChar(uCode, mbCode);\r\n            hasValues = true;\r\n        } else if (uCode <= NODE_START) {\r\n            var subNodeIdx = NODE_START - uCode;\r\n            if (!subNodeEmpty[subNodeIdx]) {  // Skip empty subtrees (they are too large in gb18030).\r\n                var newPrefix = (mbCode << 8) >>> 0;  // NOTE: '>>> 0' keeps 32-bit num positive.\r\n                if (this._fillEncodeTable(subNodeIdx, newPrefix, skipEncodeChars))\r\n                    hasValues = true;\r\n                else\r\n                    subNodeEmpty[subNodeIdx] = true;\r\n            }\r\n        } else if (uCode <= SEQ_START) {\r\n            this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);\r\n            hasValues = true;\r\n        }\r\n    }\r\n    return hasValues;\r\n}\r\n\r\n\r\n\r\n// == Encoder ==================================================================\r\n\r\nfunction DBCSEncoder(options, codec) {\r\n    // Encoder state\r\n    this.leadSurrogate = -1;\r\n    this.seqObj = undefined;\r\n    \r\n    // Static data\r\n    this.encodeTable = codec.encodeTable;\r\n    this.encodeTableSeq = codec.encodeTableSeq;\r\n    this.defaultCharSingleByte = codec.defCharSB;\r\n    this.gb18030 = codec.gb18030;\r\n}\r\n\r\nDBCSEncoder.prototype.write = function(str) {\r\n    var newBuf = Buffer.alloc(str.length * (this.gb18030 ? 4 : 3)),\r\n        leadSurrogate = this.leadSurrogate,\r\n        seqObj = this.seqObj, nextChar = -1,\r\n        i = 0, j = 0;\r\n\r\n    while (true) {\r\n        // 0. Get next character.\r\n        if (nextChar === -1) {\r\n            if (i == str.length) break;\r\n            var uCode = str.charCodeAt(i++);\r\n        }\r\n        else {\r\n            var uCode = nextChar;\r\n            nextChar = -1;    \r\n        }\r\n\r\n        // 1. Handle surrogates.\r\n        if (0xD800 <= uCode && uCode < 0xE000) { // Char is one of surrogates.\r\n            if (uCode < 0xDC00) { // We've got lead surrogate.\r\n                if (leadSurrogate === -1) {\r\n                    leadSurrogate = uCode;\r\n                    continue;\r\n                } else {\r\n                    leadSurrogate = uCode;\r\n                    // Double lead surrogate found.\r\n                    uCode = UNASSIGNED;\r\n                }\r\n            } else { // We've got trail surrogate.\r\n                if (leadSurrogate !== -1) {\r\n                    uCode = 0x10000 + (leadSurrogate - 0xD800) * 0x400 + (uCode - 0xDC00);\r\n                    leadSurrogate = -1;\r\n                } else {\r\n                    // Incomplete surrogate pair - only trail surrogate found.\r\n                    uCode = UNASSIGNED;\r\n                }\r\n                \r\n            }\r\n        }\r\n        else if (leadSurrogate !== -1) {\r\n            // Incomplete surrogate pair - only lead surrogate found.\r\n            nextChar = uCode; uCode = UNASSIGNED; // Write an error, then current char.\r\n            leadSurrogate = -1;\r\n        }\r\n\r\n        // 2. Convert uCode character.\r\n        var dbcsCode = UNASSIGNED;\r\n        if (seqObj !== undefined && uCode != UNASSIGNED) { // We are in the middle of the sequence\r\n            var resCode = seqObj[uCode];\r\n            if (typeof resCode === 'object') { // Sequence continues.\r\n                seqObj = resCode;\r\n                continue;\r\n\r\n            } else if (typeof resCode == 'number') { // Sequence finished. Write it.\r\n                dbcsCode = resCode;\r\n\r\n            } else if (resCode == undefined) { // Current character is not part of the sequence.\r\n\r\n                // Try default character for this sequence\r\n                resCode = seqObj[DEF_CHAR];\r\n                if (resCode !== undefined) {\r\n                    dbcsCode = resCode; // Found. Write it.\r\n                    nextChar = uCode; // Current character will be written too in the next iteration.\r\n\r\n                } else {\r\n                    // TODO: What if we have no default? (resCode == undefined)\r\n                    // Then, we should write first char of the sequence as-is and try the rest recursively.\r\n                    // Didn't do it for now because no encoding has this situation yet.\r\n                    // Currently, just skip the sequence and write current char.\r\n                }\r\n            }\r\n            seqObj = undefined;\r\n        }\r\n        else if (uCode >= 0) {  // Regular character\r\n            var subtable = this.encodeTable[uCode >> 8];\r\n            if (subtable !== undefined)\r\n                dbcsCode = subtable[uCode & 0xFF];\r\n            \r\n            if (dbcsCode <= SEQ_START) { // Sequence start\r\n                seqObj = this.encodeTableSeq[SEQ_START-dbcsCode];\r\n                continue;\r\n            }\r\n\r\n            if (dbcsCode == UNASSIGNED && this.gb18030) {\r\n                // Use GB18030 algorithm to find character(s) to write.\r\n                var idx = findIdx(this.gb18030.uChars, uCode);\r\n                if (idx != -1) {\r\n                    var dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);\r\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 12600); dbcsCode = dbcsCode % 12600;\r\n                    newBuf[j++] = 0x30 + Math.floor(dbcsCode / 1260); dbcsCode = dbcsCode % 1260;\r\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 10); dbcsCode = dbcsCode % 10;\r\n                    newBuf[j++] = 0x30 + dbcsCode;\r\n                    continue;\r\n                }\r\n            }\r\n        }\r\n\r\n        // 3. Write dbcsCode character.\r\n        if (dbcsCode === UNASSIGNED)\r\n            dbcsCode = this.defaultCharSingleByte;\r\n        \r\n        if (dbcsCode < 0x100) {\r\n            newBuf[j++] = dbcsCode;\r\n        }\r\n        else if (dbcsCode < 0x10000) {\r\n            newBuf[j++] = dbcsCode >> 8;   // high byte\r\n            newBuf[j++] = dbcsCode & 0xFF; // low byte\r\n        }\r\n        else if (dbcsCode < 0x1000000) {\r\n            newBuf[j++] = dbcsCode >> 16;\r\n            newBuf[j++] = (dbcsCode >> 8) & 0xFF;\r\n            newBuf[j++] = dbcsCode & 0xFF;\r\n        } else {\r\n            newBuf[j++] = dbcsCode >>> 24;\r\n            newBuf[j++] = (dbcsCode >>> 16) & 0xFF;\r\n            newBuf[j++] = (dbcsCode >>> 8) & 0xFF;\r\n            newBuf[j++] = dbcsCode & 0xFF;\r\n        }\r\n    }\r\n\r\n    this.seqObj = seqObj;\r\n    this.leadSurrogate = leadSurrogate;\r\n    return newBuf.slice(0, j);\r\n}\r\n\r\nDBCSEncoder.prototype.end = function() {\r\n    if (this.leadSurrogate === -1 && this.seqObj === undefined)\r\n        return; // All clean. Most often case.\r\n\r\n    var newBuf = Buffer.alloc(10), j = 0;\r\n\r\n    if (this.seqObj) { // We're in the sequence.\r\n        var dbcsCode = this.seqObj[DEF_CHAR];\r\n        if (dbcsCode !== undefined) { // Write beginning of the sequence.\r\n            if (dbcsCode < 0x100) {\r\n                newBuf[j++] = dbcsCode;\r\n            }\r\n            else {\r\n                newBuf[j++] = dbcsCode >> 8;   // high byte\r\n                newBuf[j++] = dbcsCode & 0xFF; // low byte\r\n            }\r\n        } else {\r\n            // See todo above.\r\n        }\r\n        this.seqObj = undefined;\r\n    }\r\n\r\n    if (this.leadSurrogate !== -1) {\r\n        // Incomplete surrogate pair - only lead surrogate found.\r\n        newBuf[j++] = this.defaultCharSingleByte;\r\n        this.leadSurrogate = -1;\r\n    }\r\n    \r\n    return newBuf.slice(0, j);\r\n}\r\n\r\n// Export for testing\r\nDBCSEncoder.prototype.findIdx = findIdx;\r\n\r\n\r\n// == Decoder ==================================================================\r\n\r\nfunction DBCSDecoder(options, codec) {\r\n    // Decoder state\r\n    this.nodeIdx = 0;\r\n    this.prevBytes = [];\r\n\r\n    // Static data\r\n    this.decodeTables = codec.decodeTables;\r\n    this.decodeTableSeq = codec.decodeTableSeq;\r\n    this.defaultCharUnicode = codec.defaultCharUnicode;\r\n    this.gb18030 = codec.gb18030;\r\n}\r\n\r\nDBCSDecoder.prototype.write = function(buf) {\r\n    var newBuf = Buffer.alloc(buf.length*2),\r\n        nodeIdx = this.nodeIdx, \r\n        prevBytes = this.prevBytes, prevOffset = this.prevBytes.length,\r\n        seqStart = -this.prevBytes.length, // idx of the start of current parsed sequence.\r\n        uCode;\r\n\r\n    for (var i = 0, j = 0; i < buf.length; i++) {\r\n        var curByte = (i >= 0) ? buf[i] : prevBytes[i + prevOffset];\r\n\r\n        // Lookup in current trie node.\r\n        var uCode = this.decodeTables[nodeIdx][curByte];\r\n\r\n        if (uCode >= 0) { \r\n            // Normal character, just use it.\r\n        }\r\n        else if (uCode === UNASSIGNED) { // Unknown char.\r\n            // TODO: Callback with seq.\r\n            uCode = this.defaultCharUnicode.charCodeAt(0);\r\n            i = seqStart; // Skip one byte ('i' will be incremented by the for loop) and try to parse again.\r\n        }\r\n        else if (uCode === GB18030_CODE) {\r\n            if (i >= 3) {\r\n                var ptr = (buf[i-3]-0x81)*12600 + (buf[i-2]-0x30)*1260 + (buf[i-1]-0x81)*10 + (curByte-0x30);\r\n            } else {\r\n                var ptr = (prevBytes[i-3+prevOffset]-0x81)*12600 + \r\n                          (((i-2 >= 0) ? buf[i-2] : prevBytes[i-2+prevOffset])-0x30)*1260 + \r\n                          (((i-1 >= 0) ? buf[i-1] : prevBytes[i-1+prevOffset])-0x81)*10 + \r\n                          (curByte-0x30);\r\n            }\r\n            var idx = findIdx(this.gb18030.gbChars, ptr);\r\n            uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];\r\n        }\r\n        else if (uCode <= NODE_START) { // Go to next trie node.\r\n            nodeIdx = NODE_START - uCode;\r\n            continue;\r\n        }\r\n        else if (uCode <= SEQ_START) { // Output a sequence of chars.\r\n            var seq = this.decodeTableSeq[SEQ_START - uCode];\r\n            for (var k = 0; k < seq.length - 1; k++) {\r\n                uCode = seq[k];\r\n                newBuf[j++] = uCode & 0xFF;\r\n                newBuf[j++] = uCode >> 8;\r\n            }\r\n            uCode = seq[seq.length-1];\r\n        }\r\n        else\r\n            throw new Error(\"iconv-lite internal error: invalid decoding table value \" + uCode + \" at \" + nodeIdx + \"/\" + curByte);\r\n\r\n        // Write the character to buffer, handling higher planes using surrogate pair.\r\n        if (uCode >= 0x10000) { \r\n            uCode -= 0x10000;\r\n            var uCodeLead = 0xD800 | (uCode >> 10);\r\n            newBuf[j++] = uCodeLead & 0xFF;\r\n            newBuf[j++] = uCodeLead >> 8;\r\n\r\n            uCode = 0xDC00 | (uCode & 0x3FF);\r\n        }\r\n        newBuf[j++] = uCode & 0xFF;\r\n        newBuf[j++] = uCode >> 8;\r\n\r\n        // Reset trie node.\r\n        nodeIdx = 0; seqStart = i+1;\r\n    }\r\n\r\n    this.nodeIdx = nodeIdx;\r\n    this.prevBytes = (seqStart >= 0)\r\n        ? Array.prototype.slice.call(buf, seqStart)\r\n        : prevBytes.slice(seqStart + prevOffset).concat(Array.prototype.slice.call(buf));\r\n\r\n    return newBuf.slice(0, j).toString('ucs2');\r\n}\r\n\r\nDBCSDecoder.prototype.end = function() {\r\n    var ret = '';\r\n\r\n    // Try to parse all remaining chars.\r\n    while (this.prevBytes.length > 0) {\r\n        // Skip 1 character in the buffer.\r\n        ret += this.defaultCharUnicode;\r\n        var bytesArr = this.prevBytes.slice(1);\r\n\r\n        // Parse remaining as usual.\r\n        this.prevBytes = [];\r\n        this.nodeIdx = 0;\r\n        if (bytesArr.length > 0)\r\n            ret += this.write(bytesArr);\r\n    }\r\n\r\n    this.prevBytes = [];\r\n    this.nodeIdx = 0;\r\n    return ret;\r\n}\r\n\r\n// Binary search for GB18030. Returns largest i such that table[i] <= val.\r\nfunction findIdx(table, val) {\r\n    if (table[0] > val)\r\n        return -1;\r\n\r\n    var l = 0, r = table.length;\r\n    while (l < r-1) { // always table[l] <= val < table[r]\r\n        var mid = l + ((r-l+1) >> 1);\r\n        if (table[mid] <= val)\r\n            l = mid;\r\n        else\r\n            r = mid;\r\n    }\r\n    return l;\r\n}\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/iconv-lite/encodings/dbcs-codec.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/iconv-lite/encodings/dbcs-data.js":
/*!********************************************************!*\
  !*** ./node_modules/iconv-lite/encodings/dbcs-data.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\n// Description of supported double byte encodings and aliases.\r\n// Tables are not require()-d until they are needed to speed up library load.\r\n// require()-s are direct to support Browserify.\r\n\r\nmodule.exports = {\r\n    \r\n    // == Japanese/ShiftJIS ====================================================\r\n    // All japanese encodings are based on JIS X set of standards:\r\n    // JIS X 0201 - Single-byte encoding of ASCII + ¥ + Kana chars at 0xA1-0xDF.\r\n    // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. \r\n    //              Has several variations in 1978, 1983, 1990 and 1997.\r\n    // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.\r\n    // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.\r\n    //              2 planes, first is superset of 0208, second - revised 0212.\r\n    //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)\r\n\r\n    // Byte encodings are:\r\n    //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte\r\n    //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.\r\n    //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.\r\n    //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.\r\n    //               0x00-0x7F       - lower part of 0201\r\n    //               0x8E, 0xA1-0xDF - upper part of 0201\r\n    //               (0xA1-0xFE)x2   - 0208 plane (94x94).\r\n    //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).\r\n    //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.\r\n    //               Used as-is in ISO2022 family.\r\n    //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, \r\n    //                0201-1976 Roman, 0208-1978, 0208-1983.\r\n    //  * ISO2022-JP-1: Adds esc seq for 0212-1990.\r\n    //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.\r\n    //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.\r\n    //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.\r\n    //\r\n    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.\r\n    //\r\n    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html\r\n\r\n    'shiftjis': {\r\n        type: '_dbcs',\r\n        table: function() { return __webpack_require__(/*! ./tables/shiftjis.json */ \"(middleware)/./node_modules/iconv-lite/encodings/tables/shiftjis.json\") },\r\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\r\n        encodeSkipVals: [{from: 0xED40, to: 0xF940}],\r\n    },\r\n    'csshiftjis': 'shiftjis',\r\n    'mskanji': 'shiftjis',\r\n    'sjis': 'shiftjis',\r\n    'windows31j': 'shiftjis',\r\n    'ms31j': 'shiftjis',\r\n    'xsjis': 'shiftjis',\r\n    'windows932': 'shiftjis',\r\n    'ms932': 'shiftjis',\r\n    '932': 'shiftjis',\r\n    'cp932': 'shiftjis',\r\n\r\n    'eucjp': {\r\n        type: '_dbcs',\r\n        table: function() { return __webpack_require__(/*! ./tables/eucjp.json */ \"(middleware)/./node_modules/iconv-lite/encodings/tables/eucjp.json\") },\r\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\r\n    },\r\n\r\n    // TODO: KDDI extension to Shift_JIS\r\n    // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.\r\n    // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.\r\n\r\n\r\n    // == Chinese/GBK ==========================================================\r\n    // http://en.wikipedia.org/wiki/GBK\r\n    // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder\r\n\r\n    // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936\r\n    'gb2312': 'cp936',\r\n    'gb231280': 'cp936',\r\n    'gb23121980': 'cp936',\r\n    'csgb2312': 'cp936',\r\n    'csiso58gb231280': 'cp936',\r\n    'euccn': 'cp936',\r\n\r\n    // Microsoft's CP936 is a subset and approximation of GBK.\r\n    'windows936': 'cp936',\r\n    'ms936': 'cp936',\r\n    '936': 'cp936',\r\n    'cp936': {\r\n        type: '_dbcs',\r\n        table: function() { return __webpack_require__(/*! ./tables/cp936.json */ \"(middleware)/./node_modules/iconv-lite/encodings/tables/cp936.json\") },\r\n    },\r\n\r\n    // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.\r\n    'gbk': {\r\n        type: '_dbcs',\r\n        table: function() { return (__webpack_require__(/*! ./tables/cp936.json */ \"(middleware)/./node_modules/iconv-lite/encodings/tables/cp936.json\").concat)(__webpack_require__(/*! ./tables/gbk-added.json */ \"(middleware)/./node_modules/iconv-lite/encodings/tables/gbk-added.json\")) },\r\n    },\r\n    'xgbk': 'gbk',\r\n    'isoir58': 'gbk',\r\n\r\n    // GB18030 is an algorithmic extension of GBK.\r\n    // Main source: https://www.w3.org/TR/encoding/#gbk-encoder\r\n    // http://icu-project.org/docs/papers/gb18030.html\r\n    // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml\r\n    // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0\r\n    'gb18030': {\r\n        type: '_dbcs',\r\n        table: function() { return (__webpack_require__(/*! ./tables/cp936.json */ \"(middleware)/./node_modules/iconv-lite/encodings/tables/cp936.json\").concat)(__webpack_require__(/*! ./tables/gbk-added.json */ \"(middleware)/./node_modules/iconv-lite/encodings/tables/gbk-added.json\")) },\r\n        gb18030: function() { return __webpack_require__(/*! ./tables/gb18030-ranges.json */ \"(middleware)/./node_modules/iconv-lite/encodings/tables/gb18030-ranges.json\") },\r\n        encodeSkipVals: [0x80],\r\n        encodeAdd: {'€': 0xA2E3},\r\n    },\r\n\r\n    'chinese': 'gb18030',\r\n\r\n\r\n    // == Korean ===============================================================\r\n    // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.\r\n    'windows949': 'cp949',\r\n    'ms949': 'cp949',\r\n    '949': 'cp949',\r\n    'cp949': {\r\n        type: '_dbcs',\r\n        table: function() { return __webpack_require__(/*! ./tables/cp949.json */ \"(middleware)/./node_modules/iconv-lite/encodings/tables/cp949.json\") },\r\n    },\r\n\r\n    'cseuckr': 'cp949',\r\n    'csksc56011987': 'cp949',\r\n    'euckr': 'cp949',\r\n    'isoir149': 'cp949',\r\n    'korean': 'cp949',\r\n    'ksc56011987': 'cp949',\r\n    'ksc56011989': 'cp949',\r\n    'ksc5601': 'cp949',\r\n\r\n\r\n    // == Big5/Taiwan/Hong Kong ================================================\r\n    // There are lots of tables for Big5 and cp950. Please see the following links for history:\r\n    // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html\r\n    // Variations, in roughly number of defined chars:\r\n    //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT\r\n    //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/\r\n    //  * Big5-2003 (Taiwan standard) almost superset of cp950.\r\n    //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.\r\n    //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. \r\n    //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.\r\n    //    Plus, it has 4 combining sequences.\r\n    //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299\r\n    //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.\r\n    //    Implementations are not consistent within browsers; sometimes labeled as just big5.\r\n    //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.\r\n    //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31\r\n    //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.\r\n    //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt\r\n    //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt\r\n    // \r\n    // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder\r\n    // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.\r\n\r\n    'windows950': 'cp950',\r\n    'ms950': 'cp950',\r\n    '950': 'cp950',\r\n    'cp950': {\r\n        type: '_dbcs',\r\n        table: function() { return __webpack_require__(/*! ./tables/cp950.json */ \"(middleware)/./node_modules/iconv-lite/encodings/tables/cp950.json\") },\r\n    },\r\n\r\n    // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.\r\n    'big5': 'big5hkscs',\r\n    'big5hkscs': {\r\n        type: '_dbcs',\r\n        table: function() { return (__webpack_require__(/*! ./tables/cp950.json */ \"(middleware)/./node_modules/iconv-lite/encodings/tables/cp950.json\").concat)(__webpack_require__(/*! ./tables/big5-added.json */ \"(middleware)/./node_modules/iconv-lite/encodings/tables/big5-added.json\")) },\r\n        encodeSkipVals: [\r\n            // Although Encoding Standard says we should avoid encoding to HKSCS area (See Step 1 of\r\n            // https://encoding.spec.whatwg.org/#index-big5-pointer), we still do it to increase compatibility with ICU.\r\n            // But if a single unicode point can be encoded both as HKSCS and regular Big5, we prefer the latter.\r\n            0x8e69, 0x8e6f, 0x8e7e, 0x8eab, 0x8eb4, 0x8ecd, 0x8ed0, 0x8f57, 0x8f69, 0x8f6e, 0x8fcb, 0x8ffe,\r\n            0x906d, 0x907a, 0x90c4, 0x90dc, 0x90f1, 0x91bf, 0x92af, 0x92b0, 0x92b1, 0x92b2, 0x92d1, 0x9447, 0x94ca,\r\n            0x95d9, 0x96fc, 0x9975, 0x9b76, 0x9b78, 0x9b7b, 0x9bc6, 0x9bde, 0x9bec, 0x9bf6, 0x9c42, 0x9c53, 0x9c62,\r\n            0x9c68, 0x9c6b, 0x9c77, 0x9cbc, 0x9cbd, 0x9cd0, 0x9d57, 0x9d5a, 0x9dc4, 0x9def, 0x9dfb, 0x9ea9, 0x9eef,\r\n            0x9efd, 0x9f60, 0x9fcb, 0xa077, 0xa0dc, 0xa0df, 0x8fcc, 0x92c8, 0x9644, 0x96ed,\r\n\r\n            // Step 2 of https://encoding.spec.whatwg.org/#index-big5-pointer: Use last pointer for U+2550, U+255E, U+2561, U+256A, U+5341, or U+5345\r\n            0xa2a4, 0xa2a5, 0xa2a7, 0xa2a6, 0xa2cc, 0xa2ce,\r\n        ],\r\n    },\r\n\r\n    'cnbig5': 'big5hkscs',\r\n    'csbig5': 'big5hkscs',\r\n    'xxbig5': 'big5hkscs',\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/iconv-lite/encodings/dbcs-data.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/iconv-lite/encodings/index.js":
/*!****************************************************!*\
  !*** ./node_modules/iconv-lite/encodings/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\n// Update this array if you add/rename/remove files in this directory.\r\n// We support Browserify by skipping automatic module discovery and requiring modules directly.\r\nvar modules = [\r\n    __webpack_require__(/*! ./internal */ \"(middleware)/./node_modules/iconv-lite/encodings/internal.js\"),\r\n    __webpack_require__(/*! ./utf32 */ \"(middleware)/./node_modules/iconv-lite/encodings/utf32.js\"),\r\n    __webpack_require__(/*! ./utf16 */ \"(middleware)/./node_modules/iconv-lite/encodings/utf16.js\"),\r\n    __webpack_require__(/*! ./utf7 */ \"(middleware)/./node_modules/iconv-lite/encodings/utf7.js\"),\r\n    __webpack_require__(/*! ./sbcs-codec */ \"(middleware)/./node_modules/iconv-lite/encodings/sbcs-codec.js\"),\r\n    __webpack_require__(/*! ./sbcs-data */ \"(middleware)/./node_modules/iconv-lite/encodings/sbcs-data.js\"),\r\n    __webpack_require__(/*! ./sbcs-data-generated */ \"(middleware)/./node_modules/iconv-lite/encodings/sbcs-data-generated.js\"),\r\n    __webpack_require__(/*! ./dbcs-codec */ \"(middleware)/./node_modules/iconv-lite/encodings/dbcs-codec.js\"),\r\n    __webpack_require__(/*! ./dbcs-data */ \"(middleware)/./node_modules/iconv-lite/encodings/dbcs-data.js\"),\r\n];\r\n\r\n// Put all encoding/alias/codec definitions to single object and export it.\r\nfor (var i = 0; i < modules.length; i++) {\r\n    var module = modules[i];\r\n    for (var enc in module)\r\n        if (Object.prototype.hasOwnProperty.call(module, enc))\r\n            exports[enc] = module[enc];\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2ljb252LWxpdGUvZW5jb2RpbmdzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLG1CQUFPLENBQUMsZ0ZBQVk7QUFDeEIsSUFBSSxtQkFBTyxDQUFDLDBFQUFTO0FBQ3JCLElBQUksbUJBQU8sQ0FBQywwRUFBUztBQUNyQixJQUFJLG1CQUFPLENBQUMsd0VBQVE7QUFDcEIsSUFBSSxtQkFBTyxDQUFDLG9GQUFjO0FBQzFCLElBQUksbUJBQU8sQ0FBQyxrRkFBYTtBQUN6QixJQUFJLG1CQUFPLENBQUMsc0dBQXVCO0FBQ25DLElBQUksbUJBQU8sQ0FBQyxvRkFBYztBQUMxQixJQUFJLG1CQUFPLENBQUMsa0ZBQWE7QUFDekI7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG9CQUFvQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9pY29udi1saXRlL2VuY29kaW5ncy9pbmRleC5qcz84NmFmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5cclxuLy8gVXBkYXRlIHRoaXMgYXJyYXkgaWYgeW91IGFkZC9yZW5hbWUvcmVtb3ZlIGZpbGVzIGluIHRoaXMgZGlyZWN0b3J5LlxyXG4vLyBXZSBzdXBwb3J0IEJyb3dzZXJpZnkgYnkgc2tpcHBpbmcgYXV0b21hdGljIG1vZHVsZSBkaXNjb3ZlcnkgYW5kIHJlcXVpcmluZyBtb2R1bGVzIGRpcmVjdGx5LlxyXG52YXIgbW9kdWxlcyA9IFtcclxuICAgIHJlcXVpcmUoXCIuL2ludGVybmFsXCIpLFxyXG4gICAgcmVxdWlyZShcIi4vdXRmMzJcIiksXHJcbiAgICByZXF1aXJlKFwiLi91dGYxNlwiKSxcclxuICAgIHJlcXVpcmUoXCIuL3V0ZjdcIiksXHJcbiAgICByZXF1aXJlKFwiLi9zYmNzLWNvZGVjXCIpLFxyXG4gICAgcmVxdWlyZShcIi4vc2Jjcy1kYXRhXCIpLFxyXG4gICAgcmVxdWlyZShcIi4vc2Jjcy1kYXRhLWdlbmVyYXRlZFwiKSxcclxuICAgIHJlcXVpcmUoXCIuL2RiY3MtY29kZWNcIiksXHJcbiAgICByZXF1aXJlKFwiLi9kYmNzLWRhdGFcIiksXHJcbl07XHJcblxyXG4vLyBQdXQgYWxsIGVuY29kaW5nL2FsaWFzL2NvZGVjIGRlZmluaXRpb25zIHRvIHNpbmdsZSBvYmplY3QgYW5kIGV4cG9ydCBpdC5cclxuZm9yICh2YXIgaSA9IDA7IGkgPCBtb2R1bGVzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICB2YXIgbW9kdWxlID0gbW9kdWxlc1tpXTtcclxuICAgIGZvciAodmFyIGVuYyBpbiBtb2R1bGUpXHJcbiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChtb2R1bGUsIGVuYykpXHJcbiAgICAgICAgICAgIGV4cG9ydHNbZW5jXSA9IG1vZHVsZVtlbmNdO1xyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/iconv-lite/encodings/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/iconv-lite/encodings/internal.js":
/*!*******************************************************!*\
  !*** ./node_modules/iconv-lite/encodings/internal.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\r\nvar Buffer = (__webpack_require__(/*! safer-buffer */ \"(middleware)/./node_modules/safer-buffer/safer.js\").Buffer);\r\n\r\n// Export Node.js internal encodings.\r\n\r\nmodule.exports = {\r\n    // Encodings\r\n    utf8:   { type: \"_internal\", bomAware: true},\r\n    cesu8:  { type: \"_internal\", bomAware: true},\r\n    unicode11utf8: \"utf8\",\r\n\r\n    ucs2:   { type: \"_internal\", bomAware: true},\r\n    utf16le: \"ucs2\",\r\n\r\n    binary: { type: \"_internal\" },\r\n    base64: { type: \"_internal\" },\r\n    hex:    { type: \"_internal\" },\r\n\r\n    // Codec.\r\n    _internal: InternalCodec,\r\n};\r\n\r\n//------------------------------------------------------------------------------\r\n\r\nfunction InternalCodec(codecOptions, iconv) {\r\n    this.enc = codecOptions.encodingName;\r\n    this.bomAware = codecOptions.bomAware;\r\n\r\n    if (this.enc === \"base64\")\r\n        this.encoder = InternalEncoderBase64;\r\n    else if (this.enc === \"cesu8\") {\r\n        this.enc = \"utf8\"; // Use utf8 for decoding.\r\n        this.encoder = InternalEncoderCesu8;\r\n\r\n        // Add decoder for versions of Node not supporting CESU-8\r\n        if (Buffer.from('eda0bdedb2a9', 'hex').toString() !== '💩') {\r\n            this.decoder = InternalDecoderCesu8;\r\n            this.defaultCharUnicode = iconv.defaultCharUnicode;\r\n        }\r\n    }\r\n}\r\n\r\nInternalCodec.prototype.encoder = InternalEncoder;\r\nInternalCodec.prototype.decoder = InternalDecoder;\r\n\r\n//------------------------------------------------------------------------------\r\n\r\n// We use node.js internal decoder. Its signature is the same as ours.\r\nvar StringDecoder = (__webpack_require__(/*! string_decoder */ \"(middleware)/./node_modules/string_decoder/lib/string_decoder.js\").StringDecoder);\r\n\r\nif (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.\r\n    StringDecoder.prototype.end = function() {};\r\n\r\n\r\nfunction InternalDecoder(options, codec) {\r\n    this.decoder = new StringDecoder(codec.enc);\r\n}\r\n\r\nInternalDecoder.prototype.write = function(buf) {\r\n    if (!Buffer.isBuffer(buf)) {\r\n        buf = Buffer.from(buf);\r\n    }\r\n\r\n    return this.decoder.write(buf);\r\n}\r\n\r\nInternalDecoder.prototype.end = function() {\r\n    return this.decoder.end();\r\n}\r\n\r\n\r\n//------------------------------------------------------------------------------\r\n// Encoder is mostly trivial\r\n\r\nfunction InternalEncoder(options, codec) {\r\n    this.enc = codec.enc;\r\n}\r\n\r\nInternalEncoder.prototype.write = function(str) {\r\n    return Buffer.from(str, this.enc);\r\n}\r\n\r\nInternalEncoder.prototype.end = function() {\r\n}\r\n\r\n\r\n//------------------------------------------------------------------------------\r\n// Except base64 encoder, which must keep its state.\r\n\r\nfunction InternalEncoderBase64(options, codec) {\r\n    this.prevStr = '';\r\n}\r\n\r\nInternalEncoderBase64.prototype.write = function(str) {\r\n    str = this.prevStr + str;\r\n    var completeQuads = str.length - (str.length % 4);\r\n    this.prevStr = str.slice(completeQuads);\r\n    str = str.slice(0, completeQuads);\r\n\r\n    return Buffer.from(str, \"base64\");\r\n}\r\n\r\nInternalEncoderBase64.prototype.end = function() {\r\n    return Buffer.from(this.prevStr, \"base64\");\r\n}\r\n\r\n\r\n//------------------------------------------------------------------------------\r\n// CESU-8 encoder is also special.\r\n\r\nfunction InternalEncoderCesu8(options, codec) {\r\n}\r\n\r\nInternalEncoderCesu8.prototype.write = function(str) {\r\n    var buf = Buffer.alloc(str.length * 3), bufIdx = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var charCode = str.charCodeAt(i);\r\n        // Naive implementation, but it works because CESU-8 is especially easy\r\n        // to convert from UTF-16 (which all JS strings are encoded in).\r\n        if (charCode < 0x80)\r\n            buf[bufIdx++] = charCode;\r\n        else if (charCode < 0x800) {\r\n            buf[bufIdx++] = 0xC0 + (charCode >>> 6);\r\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\r\n        }\r\n        else { // charCode will always be < 0x10000 in javascript.\r\n            buf[bufIdx++] = 0xE0 + (charCode >>> 12);\r\n            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);\r\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\r\n        }\r\n    }\r\n    return buf.slice(0, bufIdx);\r\n}\r\n\r\nInternalEncoderCesu8.prototype.end = function() {\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// CESU-8 decoder is not implemented in Node v4.0+\r\n\r\nfunction InternalDecoderCesu8(options, codec) {\r\n    this.acc = 0;\r\n    this.contBytes = 0;\r\n    this.accBytes = 0;\r\n    this.defaultCharUnicode = codec.defaultCharUnicode;\r\n}\r\n\r\nInternalDecoderCesu8.prototype.write = function(buf) {\r\n    var acc = this.acc, contBytes = this.contBytes, accBytes = this.accBytes, \r\n        res = '';\r\n    for (var i = 0; i < buf.length; i++) {\r\n        var curByte = buf[i];\r\n        if ((curByte & 0xC0) !== 0x80) { // Leading byte\r\n            if (contBytes > 0) { // Previous code is invalid\r\n                res += this.defaultCharUnicode;\r\n                contBytes = 0;\r\n            }\r\n\r\n            if (curByte < 0x80) { // Single-byte code\r\n                res += String.fromCharCode(curByte);\r\n            } else if (curByte < 0xE0) { // Two-byte code\r\n                acc = curByte & 0x1F;\r\n                contBytes = 1; accBytes = 1;\r\n            } else if (curByte < 0xF0) { // Three-byte code\r\n                acc = curByte & 0x0F;\r\n                contBytes = 2; accBytes = 1;\r\n            } else { // Four or more are not supported for CESU-8.\r\n                res += this.defaultCharUnicode;\r\n            }\r\n        } else { // Continuation byte\r\n            if (contBytes > 0) { // We're waiting for it.\r\n                acc = (acc << 6) | (curByte & 0x3f);\r\n                contBytes--; accBytes++;\r\n                if (contBytes === 0) {\r\n                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)\r\n                    if (accBytes === 2 && acc < 0x80 && acc > 0)\r\n                        res += this.defaultCharUnicode;\r\n                    else if (accBytes === 3 && acc < 0x800)\r\n                        res += this.defaultCharUnicode;\r\n                    else\r\n                        // Actually add character.\r\n                        res += String.fromCharCode(acc);\r\n                }\r\n            } else { // Unexpected continuation byte\r\n                res += this.defaultCharUnicode;\r\n            }\r\n        }\r\n    }\r\n    this.acc = acc; this.contBytes = contBytes; this.accBytes = accBytes;\r\n    return res;\r\n}\r\n\r\nInternalDecoderCesu8.prototype.end = function() {\r\n    var res = 0;\r\n    if (this.contBytes > 0)\r\n        res += this.defaultCharUnicode;\r\n    return res;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/iconv-lite/encodings/internal.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/iconv-lite/encodings/sbcs-codec.js":
/*!*********************************************************!*\
  !*** ./node_modules/iconv-lite/encodings/sbcs-codec.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nvar Buffer = (__webpack_require__(/*! safer-buffer */ \"(middleware)/./node_modules/safer-buffer/safer.js\").Buffer);\r\n\r\n// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that\r\n// correspond to encoded bytes (if 128 - then lower half is ASCII). \r\n\r\nexports._sbcs = SBCSCodec;\r\nfunction SBCSCodec(codecOptions, iconv) {\r\n    if (!codecOptions)\r\n        throw new Error(\"SBCS codec is called without the data.\")\r\n    \r\n    // Prepare char buffer for decoding.\r\n    if (!codecOptions.chars || (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256))\r\n        throw new Error(\"Encoding '\"+codecOptions.type+\"' has incorrect 'chars' (must be of len 128 or 256)\");\r\n    \r\n    if (codecOptions.chars.length === 128) {\r\n        var asciiString = \"\";\r\n        for (var i = 0; i < 128; i++)\r\n            asciiString += String.fromCharCode(i);\r\n        codecOptions.chars = asciiString + codecOptions.chars;\r\n    }\r\n\r\n    this.decodeBuf = Buffer.from(codecOptions.chars, 'ucs2');\r\n    \r\n    // Encoding buffer.\r\n    var encodeBuf = Buffer.alloc(65536, iconv.defaultCharSingleByte.charCodeAt(0));\r\n\r\n    for (var i = 0; i < codecOptions.chars.length; i++)\r\n        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;\r\n\r\n    this.encodeBuf = encodeBuf;\r\n}\r\n\r\nSBCSCodec.prototype.encoder = SBCSEncoder;\r\nSBCSCodec.prototype.decoder = SBCSDecoder;\r\n\r\n\r\nfunction SBCSEncoder(options, codec) {\r\n    this.encodeBuf = codec.encodeBuf;\r\n}\r\n\r\nSBCSEncoder.prototype.write = function(str) {\r\n    var buf = Buffer.alloc(str.length);\r\n    for (var i = 0; i < str.length; i++)\r\n        buf[i] = this.encodeBuf[str.charCodeAt(i)];\r\n    \r\n    return buf;\r\n}\r\n\r\nSBCSEncoder.prototype.end = function() {\r\n}\r\n\r\n\r\nfunction SBCSDecoder(options, codec) {\r\n    this.decodeBuf = codec.decodeBuf;\r\n}\r\n\r\nSBCSDecoder.prototype.write = function(buf) {\r\n    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\r\n    var decodeBuf = this.decodeBuf;\r\n    var newBuf = Buffer.alloc(buf.length*2);\r\n    var idx1 = 0, idx2 = 0;\r\n    for (var i = 0; i < buf.length; i++) {\r\n        idx1 = buf[i]*2; idx2 = i*2;\r\n        newBuf[idx2] = decodeBuf[idx1];\r\n        newBuf[idx2+1] = decodeBuf[idx1+1];\r\n    }\r\n    return newBuf.toString('ucs2');\r\n}\r\n\r\nSBCSDecoder.prototype.end = function() {\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2ljb252LWxpdGUvZW5jb2RpbmdzL3NiY3MtY29kZWMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixhQUFhLHFHQUE4QjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixTQUFTO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiwrQkFBK0I7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGdCQUFnQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsZ0JBQWdCO0FBQ3BDLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9pY29udi1saXRlL2VuY29kaW5ncy9zYmNzLWNvZGVjLmpzPzc2ZjciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcbnZhciBCdWZmZXIgPSByZXF1aXJlKFwic2FmZXItYnVmZmVyXCIpLkJ1ZmZlcjtcclxuXHJcbi8vIFNpbmdsZS1ieXRlIGNvZGVjLiBOZWVkcyBhICdjaGFycycgc3RyaW5nIHBhcmFtZXRlciB0aGF0IGNvbnRhaW5zIDI1NiBvciAxMjggY2hhcnMgdGhhdFxyXG4vLyBjb3JyZXNwb25kIHRvIGVuY29kZWQgYnl0ZXMgKGlmIDEyOCAtIHRoZW4gbG93ZXIgaGFsZiBpcyBBU0NJSSkuIFxyXG5cclxuZXhwb3J0cy5fc2JjcyA9IFNCQ1NDb2RlYztcclxuZnVuY3Rpb24gU0JDU0NvZGVjKGNvZGVjT3B0aW9ucywgaWNvbnYpIHtcclxuICAgIGlmICghY29kZWNPcHRpb25zKVxyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlNCQ1MgY29kZWMgaXMgY2FsbGVkIHdpdGhvdXQgdGhlIGRhdGEuXCIpXHJcbiAgICBcclxuICAgIC8vIFByZXBhcmUgY2hhciBidWZmZXIgZm9yIGRlY29kaW5nLlxyXG4gICAgaWYgKCFjb2RlY09wdGlvbnMuY2hhcnMgfHwgKGNvZGVjT3B0aW9ucy5jaGFycy5sZW5ndGggIT09IDEyOCAmJiBjb2RlY09wdGlvbnMuY2hhcnMubGVuZ3RoICE9PSAyNTYpKVxyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkVuY29kaW5nICdcIitjb2RlY09wdGlvbnMudHlwZStcIicgaGFzIGluY29ycmVjdCAnY2hhcnMnIChtdXN0IGJlIG9mIGxlbiAxMjggb3IgMjU2KVwiKTtcclxuICAgIFxyXG4gICAgaWYgKGNvZGVjT3B0aW9ucy5jaGFycy5sZW5ndGggPT09IDEyOCkge1xyXG4gICAgICAgIHZhciBhc2NpaVN0cmluZyA9IFwiXCI7XHJcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCAxMjg7IGkrKylcclxuICAgICAgICAgICAgYXNjaWlTdHJpbmcgKz0gU3RyaW5nLmZyb21DaGFyQ29kZShpKTtcclxuICAgICAgICBjb2RlY09wdGlvbnMuY2hhcnMgPSBhc2NpaVN0cmluZyArIGNvZGVjT3B0aW9ucy5jaGFycztcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLmRlY29kZUJ1ZiA9IEJ1ZmZlci5mcm9tKGNvZGVjT3B0aW9ucy5jaGFycywgJ3VjczInKTtcclxuICAgIFxyXG4gICAgLy8gRW5jb2RpbmcgYnVmZmVyLlxyXG4gICAgdmFyIGVuY29kZUJ1ZiA9IEJ1ZmZlci5hbGxvYyg2NTUzNiwgaWNvbnYuZGVmYXVsdENoYXJTaW5nbGVCeXRlLmNoYXJDb2RlQXQoMCkpO1xyXG5cclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY29kZWNPcHRpb25zLmNoYXJzLmxlbmd0aDsgaSsrKVxyXG4gICAgICAgIGVuY29kZUJ1Zltjb2RlY09wdGlvbnMuY2hhcnMuY2hhckNvZGVBdChpKV0gPSBpO1xyXG5cclxuICAgIHRoaXMuZW5jb2RlQnVmID0gZW5jb2RlQnVmO1xyXG59XHJcblxyXG5TQkNTQ29kZWMucHJvdG90eXBlLmVuY29kZXIgPSBTQkNTRW5jb2RlcjtcclxuU0JDU0NvZGVjLnByb3RvdHlwZS5kZWNvZGVyID0gU0JDU0RlY29kZXI7XHJcblxyXG5cclxuZnVuY3Rpb24gU0JDU0VuY29kZXIob3B0aW9ucywgY29kZWMpIHtcclxuICAgIHRoaXMuZW5jb2RlQnVmID0gY29kZWMuZW5jb2RlQnVmO1xyXG59XHJcblxyXG5TQkNTRW5jb2Rlci5wcm90b3R5cGUud3JpdGUgPSBmdW5jdGlvbihzdHIpIHtcclxuICAgIHZhciBidWYgPSBCdWZmZXIuYWxsb2Moc3RyLmxlbmd0aCk7XHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHN0ci5sZW5ndGg7IGkrKylcclxuICAgICAgICBidWZbaV0gPSB0aGlzLmVuY29kZUJ1ZltzdHIuY2hhckNvZGVBdChpKV07XHJcbiAgICBcclxuICAgIHJldHVybiBidWY7XHJcbn1cclxuXHJcblNCQ1NFbmNvZGVyLnByb3RvdHlwZS5lbmQgPSBmdW5jdGlvbigpIHtcclxufVxyXG5cclxuXHJcbmZ1bmN0aW9uIFNCQ1NEZWNvZGVyKG9wdGlvbnMsIGNvZGVjKSB7XHJcbiAgICB0aGlzLmRlY29kZUJ1ZiA9IGNvZGVjLmRlY29kZUJ1ZjtcclxufVxyXG5cclxuU0JDU0RlY29kZXIucHJvdG90eXBlLndyaXRlID0gZnVuY3Rpb24oYnVmKSB7XHJcbiAgICAvLyBTdHJpbmdzIGFyZSBpbW11dGFibGUgaW4gSlMgLT4gd2UgdXNlIHVjczIgYnVmZmVyIHRvIHNwZWVkIHVwIGNvbXB1dGF0aW9ucy5cclxuICAgIHZhciBkZWNvZGVCdWYgPSB0aGlzLmRlY29kZUJ1ZjtcclxuICAgIHZhciBuZXdCdWYgPSBCdWZmZXIuYWxsb2MoYnVmLmxlbmd0aCoyKTtcclxuICAgIHZhciBpZHgxID0gMCwgaWR4MiA9IDA7XHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGJ1Zi5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIGlkeDEgPSBidWZbaV0qMjsgaWR4MiA9IGkqMjtcclxuICAgICAgICBuZXdCdWZbaWR4Ml0gPSBkZWNvZGVCdWZbaWR4MV07XHJcbiAgICAgICAgbmV3QnVmW2lkeDIrMV0gPSBkZWNvZGVCdWZbaWR4MSsxXTtcclxuICAgIH1cclxuICAgIHJldHVybiBuZXdCdWYudG9TdHJpbmcoJ3VjczInKTtcclxufVxyXG5cclxuU0JDU0RlY29kZXIucHJvdG90eXBlLmVuZCA9IGZ1bmN0aW9uKCkge1xyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/iconv-lite/encodings/sbcs-codec.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/iconv-lite/encodings/sbcs-data-generated.js":
/*!******************************************************************!*\
  !*** ./node_modules/iconv-lite/encodings/sbcs-data-generated.js ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
eval("\r\n\r\n// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.\r\nmodule.exports = {\r\n  \"437\": \"cp437\",\r\n  \"737\": \"cp737\",\r\n  \"775\": \"cp775\",\r\n  \"850\": \"cp850\",\r\n  \"852\": \"cp852\",\r\n  \"855\": \"cp855\",\r\n  \"856\": \"cp856\",\r\n  \"857\": \"cp857\",\r\n  \"858\": \"cp858\",\r\n  \"860\": \"cp860\",\r\n  \"861\": \"cp861\",\r\n  \"862\": \"cp862\",\r\n  \"863\": \"cp863\",\r\n  \"864\": \"cp864\",\r\n  \"865\": \"cp865\",\r\n  \"866\": \"cp866\",\r\n  \"869\": \"cp869\",\r\n  \"874\": \"windows874\",\r\n  \"922\": \"cp922\",\r\n  \"1046\": \"cp1046\",\r\n  \"1124\": \"cp1124\",\r\n  \"1125\": \"cp1125\",\r\n  \"1129\": \"cp1129\",\r\n  \"1133\": \"cp1133\",\r\n  \"1161\": \"cp1161\",\r\n  \"1162\": \"cp1162\",\r\n  \"1163\": \"cp1163\",\r\n  \"1250\": \"windows1250\",\r\n  \"1251\": \"windows1251\",\r\n  \"1252\": \"windows1252\",\r\n  \"1253\": \"windows1253\",\r\n  \"1254\": \"windows1254\",\r\n  \"1255\": \"windows1255\",\r\n  \"1256\": \"windows1256\",\r\n  \"1257\": \"windows1257\",\r\n  \"1258\": \"windows1258\",\r\n  \"28591\": \"iso88591\",\r\n  \"28592\": \"iso88592\",\r\n  \"28593\": \"iso88593\",\r\n  \"28594\": \"iso88594\",\r\n  \"28595\": \"iso88595\",\r\n  \"28596\": \"iso88596\",\r\n  \"28597\": \"iso88597\",\r\n  \"28598\": \"iso88598\",\r\n  \"28599\": \"iso88599\",\r\n  \"28600\": \"iso885910\",\r\n  \"28601\": \"iso885911\",\r\n  \"28603\": \"iso885913\",\r\n  \"28604\": \"iso885914\",\r\n  \"28605\": \"iso885915\",\r\n  \"28606\": \"iso885916\",\r\n  \"windows874\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"€����…�����������‘’“”•–—�������� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\r\n  },\r\n  \"win874\": \"windows874\",\r\n  \"cp874\": \"windows874\",\r\n  \"windows1250\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"€�‚�„…†‡�‰Š‹ŚŤŽŹ�‘’“”•–—�™š›śťžź ˇ˘Ł¤Ą¦§¨©Ş«¬­®Ż°±˛ł´µ¶·¸ąş»Ľ˝ľżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\r\n  },\r\n  \"win1250\": \"windows1250\",\r\n  \"cp1250\": \"windows1250\",\r\n  \"windows1251\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\r\n  },\r\n  \"win1251\": \"windows1251\",\r\n  \"cp1251\": \"windows1251\",\r\n  \"windows1252\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\r\n  },\r\n  \"win1252\": \"windows1252\",\r\n  \"cp1252\": \"windows1252\",\r\n  \"windows1253\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"€�‚ƒ„…†‡�‰�‹�����‘’“”•–—�™�›���� ΅Ά£¤¥¦§¨©�«¬­®―°±²³΄µ¶·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\r\n  },\r\n  \"win1253\": \"windows1253\",\r\n  \"cp1253\": \"windows1253\",\r\n  \"windows1254\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ����‘’“”•–—˜™š›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\r\n  },\r\n  \"win1254\": \"windows1254\",\r\n  \"cp1254\": \"windows1254\",\r\n  \"windows1255\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹�����‘’“”•–—˜™�›���� ¡¢£₪¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾¿ְֱֲֳִֵֶַָֹֺֻּֽ־ֿ׀ׁׂ׃װױײ׳״�������אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\r\n  },\r\n  \"win1255\": \"windows1255\",\r\n  \"cp1255\": \"windows1255\",\r\n  \"windows1256\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"€پ‚ƒ„…†‡ˆ‰ٹ‹Œچژڈگ‘’“”•–—ک™ڑ›œ‌‍ں ،¢£¤¥¦§¨©ھ«¬­®¯°±²³´µ¶·¸¹؛»¼½¾؟ہءآأؤإئابةتثجحخدذرزسشصض×طظعغـفقكàلâمنهوçèéêëىيîïًٌٍَôُِ÷ّùْûü‎‏ے\"\r\n  },\r\n  \"win1256\": \"windows1256\",\r\n  \"cp1256\": \"windows1256\",\r\n  \"windows1257\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"€�‚�„…†‡�‰�‹�¨ˇ¸�‘’“”•–—�™�›�¯˛� �¢£¤�¦§Ø©Ŗ«¬­®Æ°±²³´µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž˙\"\r\n  },\r\n  \"win1257\": \"windows1257\",\r\n  \"cp1257\": \"windows1257\",\r\n  \"windows1258\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹Œ����‘’“”•–—˜™�›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\r\n  },\r\n  \"win1258\": \"windows1258\",\r\n  \"cp1258\": \"windows1258\",\r\n  \"iso88591\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\r\n  },\r\n  \"cp28591\": \"iso88591\",\r\n  \"iso88592\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \" Ą˘Ł¤ĽŚ§¨ŠŞŤŹ­ŽŻ°ą˛ł´ľśˇ¸šşťź˝žżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\r\n  },\r\n  \"cp28592\": \"iso88592\",\r\n  \"iso88593\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \" Ħ˘£¤�Ĥ§¨İŞĞĴ­�Ż°ħ²³´µĥ·¸ışğĵ½�żÀÁÂ�ÄĊĈÇÈÉÊËÌÍÎÏ�ÑÒÓÔĠÖ×ĜÙÚÛÜŬŜßàáâ�äċĉçèéêëìíîï�ñòóôġö÷ĝùúûüŭŝ˙\"\r\n  },\r\n  \"cp28593\": \"iso88593\",\r\n  \"iso88594\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \" ĄĸŖ¤ĨĻ§¨ŠĒĢŦ­Ž¯°ą˛ŗ´ĩļˇ¸šēģŧŊžŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎĪĐŅŌĶÔÕÖ×ØŲÚÛÜŨŪßāáâãäåæįčéęëėíîīđņōķôõö÷øųúûüũū˙\"\r\n  },\r\n  \"cp28594\": \"iso88594\",\r\n  \"iso88595\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \" ЁЂЃЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ\"\r\n  },\r\n  \"cp28595\": \"iso88595\",\r\n  \"iso88596\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \" ���¤�������،­�������������؛���؟�ءآأؤإئابةتثجحخدذرزسشصضطظعغ�����ـفقكلمنهوىيًٌٍَُِّْ�������������\"\r\n  },\r\n  \"cp28596\": \"iso88596\",\r\n  \"iso88597\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \" ‘’£€₯¦§¨©ͺ«¬­�―°±²³΄΅Ά·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\r\n  },\r\n  \"cp28597\": \"iso88597\",\r\n  \"iso88598\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \" �¢£¤¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾��������������������������������‗אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\r\n  },\r\n  \"cp28598\": \"iso88598\",\r\n  \"iso88599\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\r\n  },\r\n  \"cp28599\": \"iso88599\",\r\n  \"iso885910\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \" ĄĒĢĪĨĶ§ĻĐŠŦŽ­ŪŊ°ąēģīĩķ·ļđšŧž―ūŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎÏÐŅŌÓÔÕÖŨØŲÚÛÜÝÞßāáâãäåæįčéęëėíîïðņōóôõöũøųúûüýþĸ\"\r\n  },\r\n  \"cp28600\": \"iso885910\",\r\n  \"iso885911\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \" กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\r\n  },\r\n  \"cp28601\": \"iso885911\",\r\n  \"iso885913\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \" ”¢£¤„¦§Ø©Ŗ«¬­®Æ°±²³“µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž’\"\r\n  },\r\n  \"cp28603\": \"iso885913\",\r\n  \"iso885914\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \" Ḃḃ£ĊċḊ§Ẁ©ẂḋỲ­®ŸḞḟĠġṀṁ¶ṖẁṗẃṠỳẄẅṡÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŴÑÒÓÔÕÖṪØÙÚÛÜÝŶßàáâãäåæçèéêëìíîïŵñòóôõöṫøùúûüýŷÿ\"\r\n  },\r\n  \"cp28604\": \"iso885914\",\r\n  \"iso885915\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \" ¡¢£€¥Š§š©ª«¬­®¯°±²³Žµ¶·ž¹º»ŒœŸ¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\r\n  },\r\n  \"cp28605\": \"iso885915\",\r\n  \"iso885916\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \" ĄąŁ€„Š§š©Ș«Ź­źŻ°±ČłŽ”¶·žčș»ŒœŸżÀÁÂĂÄĆÆÇÈÉÊËÌÍÎÏĐŃÒÓÔŐÖŚŰÙÚÛÜĘȚßàáâăäćæçèéêëìíîïđńòóôőöśűùúûüęțÿ\"\r\n  },\r\n  \"cp28606\": \"iso885916\",\r\n  \"cp437\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\r\n  },\r\n  \"ibm437\": \"cp437\",\r\n  \"csibm437\": \"cp437\",\r\n  \"cp737\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρσςτυφχψ░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ωάέήϊίόύϋώΆΈΉΊΌΎΏ±≥≤ΪΫ÷≈°∙·√ⁿ²■ \"\r\n  },\r\n  \"ibm737\": \"cp737\",\r\n  \"csibm737\": \"cp737\",\r\n  \"cp775\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"ĆüéāäģåćłēŖŗīŹÄÅÉæÆōöĢ¢ŚśÖÜø£Ø×¤ĀĪóŻżź”¦©®¬½¼Ł«»░▒▓│┤ĄČĘĖ╣║╗╝ĮŠ┐└┴┬├─┼ŲŪ╚╔╩╦╠═╬Žąčęėįšųūž┘┌█▄▌▐▀ÓßŌŃõÕµńĶķĻļņĒŅ’­±“¾¶§÷„°∙·¹³²■ \"\r\n  },\r\n  \"ibm775\": \"cp775\",\r\n  \"csibm775\": \"cp775\",\r\n  \"cp850\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\r\n  },\r\n  \"ibm850\": \"cp850\",\r\n  \"csibm850\": \"cp850\",\r\n  \"cp852\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"ÇüéâäůćçłëŐőîŹÄĆÉĹĺôöĽľŚśÖÜŤťŁ×čáíóúĄąŽžĘę¬źČş«»░▒▓│┤ÁÂĚŞ╣║╗╝Żż┐└┴┬├─┼Ăă╚╔╩╦╠═╬¤đĐĎËďŇÍÎě┘┌█▄ŢŮ▀ÓßÔŃńňŠšŔÚŕŰýÝţ´­˝˛ˇ˘§÷¸°¨˙űŘř■ \"\r\n  },\r\n  \"ibm852\": \"cp852\",\r\n  \"csibm852\": \"cp852\",\r\n  \"cp855\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"ђЂѓЃёЁєЄѕЅіІїЇјЈљЉњЊћЋќЌўЎџЏюЮъЪаАбБцЦдДеЕфФгГ«»░▒▓│┤хХиИ╣║╗╝йЙ┐└┴┬├─┼кК╚╔╩╦╠═╬¤лЛмМнНоОп┘┌█▄Пя▀ЯрРсСтТуУжЖвВьЬ№­ыЫзЗшШэЭщЩчЧ§■ \"\r\n  },\r\n  \"ibm855\": \"cp855\",\r\n  \"csibm855\": \"cp855\",\r\n  \"cp856\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת�£�×����������®¬½¼�«»░▒▓│┤���©╣║╗╝¢¥┐└┴┬├─┼��╚╔╩╦╠═╬¤���������┘┌█▄¦�▀������µ�������¯´­±‗¾¶§÷¸°¨·¹³²■ \"\r\n  },\r\n  \"ibm856\": \"cp856\",\r\n  \"csibm856\": \"cp856\",\r\n  \"cp857\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"ÇüéâäàåçêëèïîıÄÅÉæÆôöòûùİÖÜø£ØŞşáíóúñÑĞğ¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ºªÊËÈ�ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµ�×ÚÛÙìÿ¯´­±�¾¶§÷¸°¨·¹³²■ \"\r\n  },\r\n  \"ibm857\": \"cp857\",\r\n  \"csibm857\": \"cp857\",\r\n  \"cp858\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈ€ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\r\n  },\r\n  \"ibm858\": \"cp858\",\r\n  \"csibm858\": \"cp858\",\r\n  \"cp860\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"ÇüéâãàÁçêÊèÍÔìÃÂÉÀÈôõòÚùÌÕÜ¢£Ù₧ÓáíóúñÑªº¿Ò¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\r\n  },\r\n  \"ibm860\": \"cp860\",\r\n  \"csibm860\": \"cp860\",\r\n  \"cp861\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"ÇüéâäàåçêëèÐðÞÄÅÉæÆôöþûÝýÖÜø£Ø₧ƒáíóúÁÍÓÚ¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\r\n  },\r\n  \"ibm861\": \"cp861\",\r\n  \"csibm861\": \"cp861\",\r\n  \"cp862\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\r\n  },\r\n  \"ibm862\": \"cp862\",\r\n  \"csibm862\": \"cp862\",\r\n  \"cp863\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"ÇüéâÂà¶çêëèïî‗À§ÉÈÊôËÏûù¤ÔÜ¢£ÙÛƒ¦´óú¨¸³¯Î⌐¬½¼¾«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\r\n  },\r\n  \"ibm863\": \"cp863\",\r\n  \"csibm863\": \"cp863\",\r\n  \"cp864\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$٪&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~°·∙√▒─│┼┤┬├┴┐┌└┘β∞φ±½¼≈«»ﻷﻸ��ﻻﻼ� ­ﺂ£¤ﺄ��ﺎﺏﺕﺙ،ﺝﺡﺥ٠١٢٣٤٥٦٧٨٩ﻑ؛ﺱﺵﺹ؟¢ﺀﺁﺃﺅﻊﺋﺍﺑﺓﺗﺛﺟﺣﺧﺩﺫﺭﺯﺳﺷﺻﺿﻁﻅﻋﻏ¦¬÷×ﻉـﻓﻗﻛﻟﻣﻧﻫﻭﻯﻳﺽﻌﻎﻍﻡﹽّﻥﻩﻬﻰﻲﻐﻕﻵﻶﻝﻙﻱ■�\"\r\n  },\r\n  \"ibm864\": \"cp864\",\r\n  \"csibm864\": \"cp864\",\r\n  \"cp865\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø₧ƒáíóúñÑªº¿⌐¬½¼¡«¤░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\r\n  },\r\n  \"ibm865\": \"cp865\",\r\n  \"csibm865\": \"cp865\",\r\n  \"cp866\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ \"\r\n  },\r\n  \"ibm866\": \"cp866\",\r\n  \"csibm866\": \"cp866\",\r\n  \"cp869\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"������Ά�·¬¦‘’Έ―ΉΊΪΌ��ΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄­±υφχ§ψ΅°¨ωϋΰώ■ \"\r\n  },\r\n  \"ibm869\": \"cp869\",\r\n  \"csibm869\": \"cp869\",\r\n  \"cp922\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®‾°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŠÑÒÓÔÕÖ×ØÙÚÛÜÝŽßàáâãäåæçèéêëìíîïšñòóôõö÷øùúûüýžÿ\"\r\n  },\r\n  \"ibm922\": \"cp922\",\r\n  \"csibm922\": \"cp922\",\r\n  \"cp1046\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"ﺈ×÷ﹱ■│─┐┌└┘ﹹﹻﹽﹿﹷﺊﻰﻳﻲﻎﻏﻐﻶﻸﻺﻼ ¤ﺋﺑﺗﺛﺟﺣ،­ﺧﺳ٠١٢٣٤٥٦٧٨٩ﺷ؛ﺻﺿﻊ؟ﻋءآأؤإئابةتثجحخدذرزسشصضطﻇعغﻌﺂﺄﺎﻓـفقكلمنهوىيًٌٍَُِّْﻗﻛﻟﻵﻷﻹﻻﻣﻧﻬﻩ�\"\r\n  },\r\n  \"ibm1046\": \"cp1046\",\r\n  \"csibm1046\": \"cp1046\",\r\n  \"cp1124\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \" ЁЂҐЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђґєѕіїјљњћќ§ўџ\"\r\n  },\r\n  \"ibm1124\": \"cp1124\",\r\n  \"csibm1124\": \"cp1124\",\r\n  \"cp1125\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёҐґЄєІіЇї·√№¤■ \"\r\n  },\r\n  \"ibm1125\": \"cp1125\",\r\n  \"csibm1125\": \"cp1125\",\r\n  \"cp1129\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \" ¡¢£¤¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\r\n  },\r\n  \"ibm1129\": \"cp1129\",\r\n  \"csibm1129\": \"cp1129\",\r\n  \"cp1133\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \" ກຂຄງຈສຊຍດຕຖທນບປຜຝພຟມຢຣລວຫອຮ���ຯະາຳິີຶືຸູຼັົຽ���ເແໂໃໄ່້໊໋໌ໍໆ�ໜໝ₭����������������໐໑໒໓໔໕໖໗໘໙��¢¬¦�\"\r\n  },\r\n  \"ibm1133\": \"cp1133\",\r\n  \"csibm1133\": \"cp1133\",\r\n  \"cp1161\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"��������������������������������่กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู้๊๋€฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛¢¬¦ \"\r\n  },\r\n  \"ibm1161\": \"cp1161\",\r\n  \"csibm1161\": \"cp1161\",\r\n  \"cp1162\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"€…‘’“”•–— กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\r\n  },\r\n  \"ibm1162\": \"cp1162\",\r\n  \"csibm1162\": \"cp1162\",\r\n  \"cp1163\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \" ¡¢£€¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\r\n  },\r\n  \"ibm1163\": \"cp1163\",\r\n  \"csibm1163\": \"cp1163\",\r\n  \"maccroatian\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊�©⁄¤‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ\"\r\n  },\r\n  \"maccyrillic\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°¢£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµ∂ЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\r\n  },\r\n  \"macgreek\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦­ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ�\"\r\n  },\r\n  \"maciceland\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\r\n  },\r\n  \"macroman\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\r\n  },\r\n  \"macromania\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂŞ∞±≤≥¥µ∂∑∏π∫ªºΩăş¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›Ţţ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\r\n  },\r\n  \"macthai\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"«»…“”�•‘’� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู﻿​–—฿เแโใไๅๆ็่้๊๋์ํ™๏๐๑๒๓๔๕๖๗๘๙®©����\"\r\n  },\r\n  \"macturkish\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙ�ˆ˜¯˘˙˚¸˝˛ˇ\"\r\n  },\r\n  \"macukraine\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\r\n  },\r\n  \"koi8r\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ё╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡Ё╢╣╤╥╦╧╨╩╪╫╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\r\n  },\r\n  \"koi8u\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґ╝╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪Ґ╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\r\n  },\r\n  \"koi8ru\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґў╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪ҐЎ©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\r\n  },\r\n  \"koi8t\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"қғ‚Ғ„…†‡�‰ҳ‹ҲҷҶ�Қ‘’“”•–—�™�›�����ӯӮё¤ӣ¦§���«¬­®�°±²Ё�Ӣ¶·�№�»���©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\r\n  },\r\n  \"armscii8\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \" �և։)(»«—.՝,-֊…՜՛՞ԱաԲբԳգԴդԵեԶզԷէԸըԹթԺժԻիԼլԽխԾծԿկՀհՁձՂղՃճՄմՅյՆնՇշՈոՉչՊպՋջՌռՍսՎվՏտՐրՑցՒւՓփՔքՕօՖֆ՚�\"\r\n  },\r\n  \"rk1048\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊҚҺЏђ‘’“”•–—�™љ›њқһџ ҰұӘ¤Ө¦§Ё©Ғ«¬­®Ү°±Ііөµ¶·ё№ғ»әҢңүАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\r\n  },\r\n  \"tcvn\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"\\u0000ÚỤ\\u0003ỪỬỮ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010ỨỰỲỶỸÝỴ\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÀẢÃÁẠẶẬÈẺẼÉẸỆÌỈĨÍỊÒỎÕÓỌỘỜỞỠỚỢÙỦŨ ĂÂÊÔƠƯĐăâêôơưđẶ̀̀̉̃́àảãáạẲằẳẵắẴẮẦẨẪẤỀặầẩẫấậèỂẻẽéẹềểễếệìỉỄẾỒĩíịòỔỏõóọồổỗốộờởỡớợùỖủũúụừửữứựỳỷỹýỵỐ\"\r\n  },\r\n  \"georgianacademy\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზთიკლმნოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\r\n  },\r\n  \"georgianps\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზჱთიკლმნჲოპჟრსტჳუფქღყშჩცძწჭხჴჯჰჵæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\r\n  },\r\n  \"pt154\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"ҖҒӮғ„…ҶҮҲүҠӢҢҚҺҸҗ‘’“”•–—ҳҷҡӣңқһҹ ЎўЈӨҘҰ§Ё©Ә«¬ӯ®Ҝ°ұІіҙө¶·ё№ә»јҪҫҝАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\r\n  },\r\n  \"viscii\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"\\u0000\\u0001Ẳ\\u0003\\u0004ẴẪ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013Ỷ\\u0015\\u0016\\u0017\\u0018Ỹ\\u001a\\u001b\\u001c\\u001dỴ\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ẠẮẰẶẤẦẨẬẼẸẾỀỂỄỆỐỒỔỖỘỢỚỜỞỊỎỌỈỦŨỤỲÕắằặấầẩậẽẹếềểễệốồổỗỠƠộờởịỰỨỪỬơớƯÀÁÂÃẢĂẳẵÈÉÊẺÌÍĨỳĐứÒÓÔạỷừửÙÚỹỵÝỡưàáâãảăữẫèéêẻìíĩỉđựòóôõỏọụùúũủýợỮ\"\r\n  },\r\n  \"iso646cn\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\r\n  },\r\n  \"iso646jp\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[¥]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\r\n  },\r\n  \"hproman8\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \" ÀÂÈÊËÎÏ´ˋˆ¨˜ÙÛ₤¯Ýý°ÇçÑñ¡¿¤£¥§ƒ¢âêôûáéóúàèòùäëöüÅîØÆåíøæÄìÖÜÉïßÔÁÃãÐðÍÌÓÒÕõŠšÚŸÿÞþ·µ¶¾—¼½ªº«■»±�\"\r\n  },\r\n  \"macintosh\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\r\n  },\r\n  \"ascii\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"��������������������������������������������������������������������������������������������������������������������������������\"\r\n  },\r\n  \"tis620\": {\r\n    \"type\": \"_sbcs\",\r\n    \"chars\": \"���������������������������������กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\r\n  }\r\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/iconv-lite/encodings/sbcs-data-generated.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/iconv-lite/encodings/sbcs-data.js":
/*!********************************************************!*\
  !*** ./node_modules/iconv-lite/encodings/sbcs-data.js ***!
  \********************************************************/
/***/ ((module) => {

"use strict";
eval("\r\n\r\n// Manually added data to be used by sbcs codec in addition to generated one.\r\n\r\nmodule.exports = {\r\n    // Not supported by iconv, not sure why.\r\n    \"10029\": \"maccenteuro\",\r\n    \"maccenteuro\": {\r\n        \"type\": \"_sbcs\",\r\n        \"chars\": \"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ\"\r\n    },\r\n\r\n    \"808\": \"cp808\",\r\n    \"ibm808\": \"cp808\",\r\n    \"cp808\": {\r\n        \"type\": \"_sbcs\",\r\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№€■ \"\r\n    },\r\n\r\n    \"mik\": {\r\n        \"type\": \"_sbcs\",\r\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя└┴┬├─┼╣║╚╔╩╦╠═╬┐░▒▓│┤№§╗╝┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\r\n    },\r\n\r\n    \"cp720\": {\r\n        \"type\": \"_sbcs\",\r\n        \"chars\": \"\\x80\\x81éâ\\x84à\\x86çêëèïî\\x8d\\x8e\\x8f\\x90\\u0651\\u0652ô¤ـûùءآأؤ£إئابةتثجحخدذرزسشص«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ضطظعغفµقكلمنهوىي≡\\u064b\\u064c\\u064d\\u064e\\u064f\\u0650≈°∙·√ⁿ²■\\u00a0\"\r\n    },\r\n\r\n    // Aliases of generated encodings.\r\n    \"ascii8bit\": \"ascii\",\r\n    \"usascii\": \"ascii\",\r\n    \"ansix34\": \"ascii\",\r\n    \"ansix341968\": \"ascii\",\r\n    \"ansix341986\": \"ascii\",\r\n    \"csascii\": \"ascii\",\r\n    \"cp367\": \"ascii\",\r\n    \"ibm367\": \"ascii\",\r\n    \"isoir6\": \"ascii\",\r\n    \"iso646us\": \"ascii\",\r\n    \"iso646irv\": \"ascii\",\r\n    \"us\": \"ascii\",\r\n\r\n    \"latin1\": \"iso88591\",\r\n    \"latin2\": \"iso88592\",\r\n    \"latin3\": \"iso88593\",\r\n    \"latin4\": \"iso88594\",\r\n    \"latin5\": \"iso88599\",\r\n    \"latin6\": \"iso885910\",\r\n    \"latin7\": \"iso885913\",\r\n    \"latin8\": \"iso885914\",\r\n    \"latin9\": \"iso885915\",\r\n    \"latin10\": \"iso885916\",\r\n\r\n    \"csisolatin1\": \"iso88591\",\r\n    \"csisolatin2\": \"iso88592\",\r\n    \"csisolatin3\": \"iso88593\",\r\n    \"csisolatin4\": \"iso88594\",\r\n    \"csisolatincyrillic\": \"iso88595\",\r\n    \"csisolatinarabic\": \"iso88596\",\r\n    \"csisolatingreek\" : \"iso88597\",\r\n    \"csisolatinhebrew\": \"iso88598\",\r\n    \"csisolatin5\": \"iso88599\",\r\n    \"csisolatin6\": \"iso885910\",\r\n\r\n    \"l1\": \"iso88591\",\r\n    \"l2\": \"iso88592\",\r\n    \"l3\": \"iso88593\",\r\n    \"l4\": \"iso88594\",\r\n    \"l5\": \"iso88599\",\r\n    \"l6\": \"iso885910\",\r\n    \"l7\": \"iso885913\",\r\n    \"l8\": \"iso885914\",\r\n    \"l9\": \"iso885915\",\r\n    \"l10\": \"iso885916\",\r\n\r\n    \"isoir14\": \"iso646jp\",\r\n    \"isoir57\": \"iso646cn\",\r\n    \"isoir100\": \"iso88591\",\r\n    \"isoir101\": \"iso88592\",\r\n    \"isoir109\": \"iso88593\",\r\n    \"isoir110\": \"iso88594\",\r\n    \"isoir144\": \"iso88595\",\r\n    \"isoir127\": \"iso88596\",\r\n    \"isoir126\": \"iso88597\",\r\n    \"isoir138\": \"iso88598\",\r\n    \"isoir148\": \"iso88599\",\r\n    \"isoir157\": \"iso885910\",\r\n    \"isoir166\": \"tis620\",\r\n    \"isoir179\": \"iso885913\",\r\n    \"isoir199\": \"iso885914\",\r\n    \"isoir203\": \"iso885915\",\r\n    \"isoir226\": \"iso885916\",\r\n\r\n    \"cp819\": \"iso88591\",\r\n    \"ibm819\": \"iso88591\",\r\n\r\n    \"cyrillic\": \"iso88595\",\r\n\r\n    \"arabic\": \"iso88596\",\r\n    \"arabic8\": \"iso88596\",\r\n    \"ecma114\": \"iso88596\",\r\n    \"asmo708\": \"iso88596\",\r\n\r\n    \"greek\" : \"iso88597\",\r\n    \"greek8\" : \"iso88597\",\r\n    \"ecma118\" : \"iso88597\",\r\n    \"elot928\" : \"iso88597\",\r\n\r\n    \"hebrew\": \"iso88598\",\r\n    \"hebrew8\": \"iso88598\",\r\n\r\n    \"turkish\": \"iso88599\",\r\n    \"turkish8\": \"iso88599\",\r\n\r\n    \"thai\": \"iso885911\",\r\n    \"thai8\": \"iso885911\",\r\n\r\n    \"celtic\": \"iso885914\",\r\n    \"celtic8\": \"iso885914\",\r\n    \"isoceltic\": \"iso885914\",\r\n\r\n    \"tis6200\": \"tis620\",\r\n    \"tis62025291\": \"tis620\",\r\n    \"tis62025330\": \"tis620\",\r\n\r\n    \"10000\": \"macroman\",\r\n    \"10006\": \"macgreek\",\r\n    \"10007\": \"maccyrillic\",\r\n    \"10079\": \"maciceland\",\r\n    \"10081\": \"macturkish\",\r\n\r\n    \"cspc8codepage437\": \"cp437\",\r\n    \"cspc775baltic\": \"cp775\",\r\n    \"cspc850multilingual\": \"cp850\",\r\n    \"cspcp852\": \"cp852\",\r\n    \"cspc862latinhebrew\": \"cp862\",\r\n    \"cpgr\": \"cp869\",\r\n\r\n    \"msee\": \"cp1250\",\r\n    \"mscyrl\": \"cp1251\",\r\n    \"msansi\": \"cp1252\",\r\n    \"msgreek\": \"cp1253\",\r\n    \"msturk\": \"cp1254\",\r\n    \"mshebr\": \"cp1255\",\r\n    \"msarab\": \"cp1256\",\r\n    \"winbaltrim\": \"cp1257\",\r\n\r\n    \"cp20866\": \"koi8r\",\r\n    \"20866\": \"koi8r\",\r\n    \"ibm878\": \"koi8r\",\r\n    \"cskoi8r\": \"koi8r\",\r\n\r\n    \"cp21866\": \"koi8u\",\r\n    \"21866\": \"koi8u\",\r\n    \"ibm1168\": \"koi8u\",\r\n\r\n    \"strk10482002\": \"rk1048\",\r\n\r\n    \"tcvn5712\": \"tcvn\",\r\n    \"tcvn57121\": \"tcvn\",\r\n\r\n    \"gb198880\": \"iso646cn\",\r\n    \"cn\": \"iso646cn\",\r\n\r\n    \"csiso14jisc6220ro\": \"iso646jp\",\r\n    \"jisc62201969ro\": \"iso646jp\",\r\n    \"jp\": \"iso646jp\",\r\n\r\n    \"cshproman8\": \"hproman8\",\r\n    \"r8\": \"hproman8\",\r\n    \"roman8\": \"hproman8\",\r\n    \"xroman8\": \"hproman8\",\r\n    \"ibm1051\": \"hproman8\",\r\n\r\n    \"mac\": \"macintosh\",\r\n    \"csmacintosh\": \"macintosh\",\r\n};\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/iconv-lite/encodings/sbcs-data.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/iconv-lite/encodings/utf16.js":
/*!****************************************************!*\
  !*** ./node_modules/iconv-lite/encodings/utf16.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nvar Buffer = (__webpack_require__(/*! safer-buffer */ \"(middleware)/./node_modules/safer-buffer/safer.js\").Buffer);\r\n\r\n// Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js\r\n\r\n// == UTF16-BE codec. ==========================================================\r\n\r\nexports.utf16be = Utf16BECodec;\r\nfunction Utf16BECodec() {\r\n}\r\n\r\nUtf16BECodec.prototype.encoder = Utf16BEEncoder;\r\nUtf16BECodec.prototype.decoder = Utf16BEDecoder;\r\nUtf16BECodec.prototype.bomAware = true;\r\n\r\n\r\n// -- Encoding\r\n\r\nfunction Utf16BEEncoder() {\r\n}\r\n\r\nUtf16BEEncoder.prototype.write = function(str) {\r\n    var buf = Buffer.from(str, 'ucs2');\r\n    for (var i = 0; i < buf.length; i += 2) {\r\n        var tmp = buf[i]; buf[i] = buf[i+1]; buf[i+1] = tmp;\r\n    }\r\n    return buf;\r\n}\r\n\r\nUtf16BEEncoder.prototype.end = function() {\r\n}\r\n\r\n\r\n// -- Decoding\r\n\r\nfunction Utf16BEDecoder() {\r\n    this.overflowByte = -1;\r\n}\r\n\r\nUtf16BEDecoder.prototype.write = function(buf) {\r\n    if (buf.length == 0)\r\n        return '';\r\n\r\n    var buf2 = Buffer.alloc(buf.length + 1),\r\n        i = 0, j = 0;\r\n\r\n    if (this.overflowByte !== -1) {\r\n        buf2[0] = buf[0];\r\n        buf2[1] = this.overflowByte;\r\n        i = 1; j = 2;\r\n    }\r\n\r\n    for (; i < buf.length-1; i += 2, j+= 2) {\r\n        buf2[j] = buf[i+1];\r\n        buf2[j+1] = buf[i];\r\n    }\r\n\r\n    this.overflowByte = (i == buf.length-1) ? buf[buf.length-1] : -1;\r\n\r\n    return buf2.slice(0, j).toString('ucs2');\r\n}\r\n\r\nUtf16BEDecoder.prototype.end = function() {\r\n    this.overflowByte = -1;\r\n}\r\n\r\n\r\n// == UTF-16 codec =============================================================\r\n// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.\r\n// Defaults to UTF-16LE, as it's prevalent and default in Node.\r\n// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le\r\n// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});\r\n\r\n// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).\r\n\r\nexports.utf16 = Utf16Codec;\r\nfunction Utf16Codec(codecOptions, iconv) {\r\n    this.iconv = iconv;\r\n}\r\n\r\nUtf16Codec.prototype.encoder = Utf16Encoder;\r\nUtf16Codec.prototype.decoder = Utf16Decoder;\r\n\r\n\r\n// -- Encoding (pass-through)\r\n\r\nfunction Utf16Encoder(options, codec) {\r\n    options = options || {};\r\n    if (options.addBOM === undefined)\r\n        options.addBOM = true;\r\n    this.encoder = codec.iconv.getEncoder('utf-16le', options);\r\n}\r\n\r\nUtf16Encoder.prototype.write = function(str) {\r\n    return this.encoder.write(str);\r\n}\r\n\r\nUtf16Encoder.prototype.end = function() {\r\n    return this.encoder.end();\r\n}\r\n\r\n\r\n// -- Decoding\r\n\r\nfunction Utf16Decoder(options, codec) {\r\n    this.decoder = null;\r\n    this.initialBufs = [];\r\n    this.initialBufsLen = 0;\r\n\r\n    this.options = options || {};\r\n    this.iconv = codec.iconv;\r\n}\r\n\r\nUtf16Decoder.prototype.write = function(buf) {\r\n    if (!this.decoder) {\r\n        // Codec is not chosen yet. Accumulate initial bytes.\r\n        this.initialBufs.push(buf);\r\n        this.initialBufsLen += buf.length;\r\n        \r\n        if (this.initialBufsLen < 16) // We need more bytes to use space heuristic (see below)\r\n            return '';\r\n\r\n        // We have enough bytes -> detect endianness.\r\n        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\r\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\r\n\r\n        var resStr = '';\r\n        for (var i = 0; i < this.initialBufs.length; i++)\r\n            resStr += this.decoder.write(this.initialBufs[i]);\r\n\r\n        this.initialBufs.length = this.initialBufsLen = 0;\r\n        return resStr;\r\n    }\r\n\r\n    return this.decoder.write(buf);\r\n}\r\n\r\nUtf16Decoder.prototype.end = function() {\r\n    if (!this.decoder) {\r\n        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\r\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\r\n\r\n        var resStr = '';\r\n        for (var i = 0; i < this.initialBufs.length; i++)\r\n            resStr += this.decoder.write(this.initialBufs[i]);\r\n\r\n        var trail = this.decoder.end();\r\n        if (trail)\r\n            resStr += trail;\r\n\r\n        this.initialBufs.length = this.initialBufsLen = 0;\r\n        return resStr;\r\n    }\r\n    return this.decoder.end();\r\n}\r\n\r\nfunction detectEncoding(bufs, defaultEncoding) {\r\n    var b = [];\r\n    var charsProcessed = 0;\r\n    var asciiCharsLE = 0, asciiCharsBE = 0; // Number of ASCII chars when decoded as LE or BE.\r\n\r\n    outer_loop:\r\n    for (var i = 0; i < bufs.length; i++) {\r\n        var buf = bufs[i];\r\n        for (var j = 0; j < buf.length; j++) {\r\n            b.push(buf[j]);\r\n            if (b.length === 2) {\r\n                if (charsProcessed === 0) {\r\n                    // Check BOM first.\r\n                    if (b[0] === 0xFF && b[1] === 0xFE) return 'utf-16le';\r\n                    if (b[0] === 0xFE && b[1] === 0xFF) return 'utf-16be';\r\n                }\r\n\r\n                if (b[0] === 0 && b[1] !== 0) asciiCharsBE++;\r\n                if (b[0] !== 0 && b[1] === 0) asciiCharsLE++;\r\n\r\n                b.length = 0;\r\n                charsProcessed++;\r\n\r\n                if (charsProcessed >= 100) {\r\n                    break outer_loop;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Make decisions.\r\n    // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.\r\n    // So, we count ASCII as if it was LE or BE, and decide from that.\r\n    if (asciiCharsBE > asciiCharsLE) return 'utf-16be';\r\n    if (asciiCharsBE < asciiCharsLE) return 'utf-16le';\r\n\r\n    // Couldn't decide (likely all zeros or not enough data).\r\n    return defaultEncoding || 'utf-16le';\r\n}\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/iconv-lite/encodings/utf16.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/iconv-lite/encodings/utf32.js":
/*!****************************************************!*\
  !*** ./node_modules/iconv-lite/encodings/utf32.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\nvar Buffer = (__webpack_require__(/*! safer-buffer */ \"(middleware)/./node_modules/safer-buffer/safer.js\").Buffer);\r\n\r\n// == UTF32-LE/BE codec. ==========================================================\r\n\r\nexports._utf32 = Utf32Codec;\r\n\r\nfunction Utf32Codec(codecOptions, iconv) {\r\n    this.iconv = iconv;\r\n    this.bomAware = true;\r\n    this.isLE = codecOptions.isLE;\r\n}\r\n\r\nexports.utf32le = { type: '_utf32', isLE: true };\r\nexports.utf32be = { type: '_utf32', isLE: false };\r\n\r\n// Aliases\r\nexports.ucs4le = 'utf32le';\r\nexports.ucs4be = 'utf32be';\r\n\r\nUtf32Codec.prototype.encoder = Utf32Encoder;\r\nUtf32Codec.prototype.decoder = Utf32Decoder;\r\n\r\n// -- Encoding\r\n\r\nfunction Utf32Encoder(options, codec) {\r\n    this.isLE = codec.isLE;\r\n    this.highSurrogate = 0;\r\n}\r\n\r\nUtf32Encoder.prototype.write = function(str) {\r\n    var src = Buffer.from(str, 'ucs2');\r\n    var dst = Buffer.alloc(src.length * 2);\r\n    var write32 = this.isLE ? dst.writeUInt32LE : dst.writeUInt32BE;\r\n    var offset = 0;\r\n\r\n    for (var i = 0; i < src.length; i += 2) {\r\n        var code = src.readUInt16LE(i);\r\n        var isHighSurrogate = (0xD800 <= code && code < 0xDC00);\r\n        var isLowSurrogate = (0xDC00 <= code && code < 0xE000);\r\n\r\n        if (this.highSurrogate) {\r\n            if (isHighSurrogate || !isLowSurrogate) {\r\n                // There shouldn't be two high surrogates in a row, nor a high surrogate which isn't followed by a low\r\n                // surrogate. If this happens, keep the pending high surrogate as a stand-alone semi-invalid character\r\n                // (technically wrong, but expected by some applications, like Windows file names).\r\n                write32.call(dst, this.highSurrogate, offset);\r\n                offset += 4;\r\n            }\r\n            else {\r\n                // Create 32-bit value from high and low surrogates;\r\n                var codepoint = (((this.highSurrogate - 0xD800) << 10) | (code - 0xDC00)) + 0x10000;\r\n\r\n                write32.call(dst, codepoint, offset);\r\n                offset += 4;\r\n                this.highSurrogate = 0;\r\n\r\n                continue;\r\n            }\r\n        }\r\n\r\n        if (isHighSurrogate)\r\n            this.highSurrogate = code;\r\n        else {\r\n            // Even if the current character is a low surrogate, with no previous high surrogate, we'll\r\n            // encode it as a semi-invalid stand-alone character for the same reasons expressed above for\r\n            // unpaired high surrogates.\r\n            write32.call(dst, code, offset);\r\n            offset += 4;\r\n            this.highSurrogate = 0;\r\n        }\r\n    }\r\n\r\n    if (offset < dst.length)\r\n        dst = dst.slice(0, offset);\r\n\r\n    return dst;\r\n};\r\n\r\nUtf32Encoder.prototype.end = function() {\r\n    // Treat any leftover high surrogate as a semi-valid independent character.\r\n    if (!this.highSurrogate)\r\n        return;\r\n\r\n    var buf = Buffer.alloc(4);\r\n\r\n    if (this.isLE)\r\n        buf.writeUInt32LE(this.highSurrogate, 0);\r\n    else\r\n        buf.writeUInt32BE(this.highSurrogate, 0);\r\n\r\n    this.highSurrogate = 0;\r\n\r\n    return buf;\r\n};\r\n\r\n// -- Decoding\r\n\r\nfunction Utf32Decoder(options, codec) {\r\n    this.isLE = codec.isLE;\r\n    this.badChar = codec.iconv.defaultCharUnicode.charCodeAt(0);\r\n    this.overflow = [];\r\n}\r\n\r\nUtf32Decoder.prototype.write = function(src) {\r\n    if (src.length === 0)\r\n        return '';\r\n\r\n    var i = 0;\r\n    var codepoint = 0;\r\n    var dst = Buffer.alloc(src.length + 4);\r\n    var offset = 0;\r\n    var isLE = this.isLE;\r\n    var overflow = this.overflow;\r\n    var badChar = this.badChar;\r\n\r\n    if (overflow.length > 0) {\r\n        for (; i < src.length && overflow.length < 4; i++)\r\n            overflow.push(src[i]);\r\n        \r\n        if (overflow.length === 4) {\r\n            // NOTE: codepoint is a signed int32 and can be negative.\r\n            // NOTE: We copied this block from below to help V8 optimize it (it works with array, not buffer).\r\n            if (isLE) {\r\n                codepoint = overflow[i] | (overflow[i+1] << 8) | (overflow[i+2] << 16) | (overflow[i+3] << 24);\r\n            } else {\r\n                codepoint = overflow[i+3] | (overflow[i+2] << 8) | (overflow[i+1] << 16) | (overflow[i] << 24);\r\n            }\r\n            overflow.length = 0;\r\n\r\n            offset = _writeCodepoint(dst, offset, codepoint, badChar);\r\n        }\r\n    }\r\n\r\n    // Main loop. Should be as optimized as possible.\r\n    for (; i < src.length - 3; i += 4) {\r\n        // NOTE: codepoint is a signed int32 and can be negative.\r\n        if (isLE) {\r\n            codepoint = src[i] | (src[i+1] << 8) | (src[i+2] << 16) | (src[i+3] << 24);\r\n        } else {\r\n            codepoint = src[i+3] | (src[i+2] << 8) | (src[i+1] << 16) | (src[i] << 24);\r\n        }\r\n        offset = _writeCodepoint(dst, offset, codepoint, badChar);\r\n    }\r\n\r\n    // Keep overflowing bytes.\r\n    for (; i < src.length; i++) {\r\n        overflow.push(src[i]);\r\n    }\r\n\r\n    return dst.slice(0, offset).toString('ucs2');\r\n};\r\n\r\nfunction _writeCodepoint(dst, offset, codepoint, badChar) {\r\n    // NOTE: codepoint is signed int32 and can be negative. We keep it that way to help V8 with optimizations.\r\n    if (codepoint < 0 || codepoint > 0x10FFFF) {\r\n        // Not a valid Unicode codepoint\r\n        codepoint = badChar;\r\n    } \r\n\r\n    // Ephemeral Planes: Write high surrogate.\r\n    if (codepoint >= 0x10000) {\r\n        codepoint -= 0x10000;\r\n\r\n        var high = 0xD800 | (codepoint >> 10);\r\n        dst[offset++] = high & 0xff;\r\n        dst[offset++] = high >> 8;\r\n\r\n        // Low surrogate is written below.\r\n        var codepoint = 0xDC00 | (codepoint & 0x3FF);\r\n    }\r\n\r\n    // Write BMP char or low surrogate.\r\n    dst[offset++] = codepoint & 0xff;\r\n    dst[offset++] = codepoint >> 8;\r\n\r\n    return offset;\r\n};\r\n\r\nUtf32Decoder.prototype.end = function() {\r\n    this.overflow.length = 0;\r\n};\r\n\r\n// == UTF-32 Auto codec =============================================================\r\n// Decoder chooses automatically from UTF-32LE and UTF-32BE using BOM and space-based heuristic.\r\n// Defaults to UTF-32LE. http://en.wikipedia.org/wiki/UTF-32\r\n// Encoder/decoder default can be changed: iconv.decode(buf, 'utf32', {defaultEncoding: 'utf-32be'});\r\n\r\n// Encoder prepends BOM (which can be overridden with (addBOM: false}).\r\n\r\nexports.utf32 = Utf32AutoCodec;\r\nexports.ucs4 = 'utf32';\r\n\r\nfunction Utf32AutoCodec(options, iconv) {\r\n    this.iconv = iconv;\r\n}\r\n\r\nUtf32AutoCodec.prototype.encoder = Utf32AutoEncoder;\r\nUtf32AutoCodec.prototype.decoder = Utf32AutoDecoder;\r\n\r\n// -- Encoding\r\n\r\nfunction Utf32AutoEncoder(options, codec) {\r\n    options = options || {};\r\n\r\n    if (options.addBOM === undefined)\r\n        options.addBOM = true;\r\n\r\n    this.encoder = codec.iconv.getEncoder(options.defaultEncoding || 'utf-32le', options);\r\n}\r\n\r\nUtf32AutoEncoder.prototype.write = function(str) {\r\n    return this.encoder.write(str);\r\n};\r\n\r\nUtf32AutoEncoder.prototype.end = function() {\r\n    return this.encoder.end();\r\n};\r\n\r\n// -- Decoding\r\n\r\nfunction Utf32AutoDecoder(options, codec) {\r\n    this.decoder = null;\r\n    this.initialBufs = [];\r\n    this.initialBufsLen = 0;\r\n    this.options = options || {};\r\n    this.iconv = codec.iconv;\r\n}\r\n\r\nUtf32AutoDecoder.prototype.write = function(buf) {\r\n    if (!this.decoder) { \r\n        // Codec is not chosen yet. Accumulate initial bytes.\r\n        this.initialBufs.push(buf);\r\n        this.initialBufsLen += buf.length;\r\n\r\n        if (this.initialBufsLen < 32) // We need more bytes to use space heuristic (see below)\r\n            return '';\r\n\r\n        // We have enough bytes -> detect endianness.\r\n        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\r\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\r\n\r\n        var resStr = '';\r\n        for (var i = 0; i < this.initialBufs.length; i++)\r\n            resStr += this.decoder.write(this.initialBufs[i]);\r\n\r\n        this.initialBufs.length = this.initialBufsLen = 0;\r\n        return resStr;\r\n    }\r\n\r\n    return this.decoder.write(buf);\r\n};\r\n\r\nUtf32AutoDecoder.prototype.end = function() {\r\n    if (!this.decoder) {\r\n        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\r\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\r\n\r\n        var resStr = '';\r\n        for (var i = 0; i < this.initialBufs.length; i++)\r\n            resStr += this.decoder.write(this.initialBufs[i]);\r\n\r\n        var trail = this.decoder.end();\r\n        if (trail)\r\n            resStr += trail;\r\n\r\n        this.initialBufs.length = this.initialBufsLen = 0;\r\n        return resStr;\r\n    }\r\n\r\n    return this.decoder.end();\r\n};\r\n\r\nfunction detectEncoding(bufs, defaultEncoding) {\r\n    var b = [];\r\n    var charsProcessed = 0;\r\n    var invalidLE = 0, invalidBE = 0;   // Number of invalid chars when decoded as LE or BE.\r\n    var bmpCharsLE = 0, bmpCharsBE = 0; // Number of BMP chars when decoded as LE or BE.\r\n\r\n    outer_loop:\r\n    for (var i = 0; i < bufs.length; i++) {\r\n        var buf = bufs[i];\r\n        for (var j = 0; j < buf.length; j++) {\r\n            b.push(buf[j]);\r\n            if (b.length === 4) {\r\n                if (charsProcessed === 0) {\r\n                    // Check BOM first.\r\n                    if (b[0] === 0xFF && b[1] === 0xFE && b[2] === 0 && b[3] === 0) {\r\n                        return 'utf-32le';\r\n                    }\r\n                    if (b[0] === 0 && b[1] === 0 && b[2] === 0xFE && b[3] === 0xFF) {\r\n                        return 'utf-32be';\r\n                    }\r\n                }\r\n\r\n                if (b[0] !== 0 || b[1] > 0x10) invalidBE++;\r\n                if (b[3] !== 0 || b[2] > 0x10) invalidLE++;\r\n\r\n                if (b[0] === 0 && b[1] === 0 && (b[2] !== 0 || b[3] !== 0)) bmpCharsBE++;\r\n                if ((b[0] !== 0 || b[1] !== 0) && b[2] === 0 && b[3] === 0) bmpCharsLE++;\r\n\r\n                b.length = 0;\r\n                charsProcessed++;\r\n\r\n                if (charsProcessed >= 100) {\r\n                    break outer_loop;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Make decisions.\r\n    if (bmpCharsBE - invalidBE > bmpCharsLE - invalidLE)  return 'utf-32be';\r\n    if (bmpCharsBE - invalidBE < bmpCharsLE - invalidLE)  return 'utf-32le';\r\n\r\n    // Couldn't decide (likely all zeros or not enough data).\r\n    return defaultEncoding || 'utf-32le';\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2ljb252LWxpdGUvZW5jb2RpbmdzL3V0ZjMyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSxhQUFhLHFHQUE4QjtBQUMzQztBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLEtBQUs7QUFDcEIsZUFBZSxLQUFLO0FBQ3BCO0FBQ0E7QUFDQSxjQUFjO0FBQ2QsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsZ0JBQWdCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHVDQUF1QztBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG9CQUFvQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxnQkFBZ0I7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUVBQXVFLDRCQUE0QjtBQUNuRztBQUNBLHFFQUFxRTtBQUNyRTtBQUNBLGFBQWE7QUFDYixZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDZCQUE2QjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsNkJBQTZCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDO0FBQ3hDLHdDQUF3QztBQUN4QztBQUNBO0FBQ0Esb0JBQW9CLGlCQUFpQjtBQUNyQztBQUNBLHdCQUF3QixnQkFBZ0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvaWNvbnYtbGl0ZS9lbmNvZGluZ3MvdXRmMzIuanM/YTNkNCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG52YXIgQnVmZmVyID0gcmVxdWlyZSgnc2FmZXItYnVmZmVyJykuQnVmZmVyO1xyXG5cclxuLy8gPT0gVVRGMzItTEUvQkUgY29kZWMuID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuXHJcbmV4cG9ydHMuX3V0ZjMyID0gVXRmMzJDb2RlYztcclxuXHJcbmZ1bmN0aW9uIFV0ZjMyQ29kZWMoY29kZWNPcHRpb25zLCBpY29udikge1xyXG4gICAgdGhpcy5pY29udiA9IGljb252O1xyXG4gICAgdGhpcy5ib21Bd2FyZSA9IHRydWU7XHJcbiAgICB0aGlzLmlzTEUgPSBjb2RlY09wdGlvbnMuaXNMRTtcclxufVxyXG5cclxuZXhwb3J0cy51dGYzMmxlID0geyB0eXBlOiAnX3V0ZjMyJywgaXNMRTogdHJ1ZSB9O1xyXG5leHBvcnRzLnV0ZjMyYmUgPSB7IHR5cGU6ICdfdXRmMzInLCBpc0xFOiBmYWxzZSB9O1xyXG5cclxuLy8gQWxpYXNlc1xyXG5leHBvcnRzLnVjczRsZSA9ICd1dGYzMmxlJztcclxuZXhwb3J0cy51Y3M0YmUgPSAndXRmMzJiZSc7XHJcblxyXG5VdGYzMkNvZGVjLnByb3RvdHlwZS5lbmNvZGVyID0gVXRmMzJFbmNvZGVyO1xyXG5VdGYzMkNvZGVjLnByb3RvdHlwZS5kZWNvZGVyID0gVXRmMzJEZWNvZGVyO1xyXG5cclxuLy8gLS0gRW5jb2RpbmdcclxuXHJcbmZ1bmN0aW9uIFV0ZjMyRW5jb2RlcihvcHRpb25zLCBjb2RlYykge1xyXG4gICAgdGhpcy5pc0xFID0gY29kZWMuaXNMRTtcclxuICAgIHRoaXMuaGlnaFN1cnJvZ2F0ZSA9IDA7XHJcbn1cclxuXHJcblV0ZjMyRW5jb2Rlci5wcm90b3R5cGUud3JpdGUgPSBmdW5jdGlvbihzdHIpIHtcclxuICAgIHZhciBzcmMgPSBCdWZmZXIuZnJvbShzdHIsICd1Y3MyJyk7XHJcbiAgICB2YXIgZHN0ID0gQnVmZmVyLmFsbG9jKHNyYy5sZW5ndGggKiAyKTtcclxuICAgIHZhciB3cml0ZTMyID0gdGhpcy5pc0xFID8gZHN0LndyaXRlVUludDMyTEUgOiBkc3Qud3JpdGVVSW50MzJCRTtcclxuICAgIHZhciBvZmZzZXQgPSAwO1xyXG5cclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc3JjLmxlbmd0aDsgaSArPSAyKSB7XHJcbiAgICAgICAgdmFyIGNvZGUgPSBzcmMucmVhZFVJbnQxNkxFKGkpO1xyXG4gICAgICAgIHZhciBpc0hpZ2hTdXJyb2dhdGUgPSAoMHhEODAwIDw9IGNvZGUgJiYgY29kZSA8IDB4REMwMCk7XHJcbiAgICAgICAgdmFyIGlzTG93U3Vycm9nYXRlID0gKDB4REMwMCA8PSBjb2RlICYmIGNvZGUgPCAweEUwMDApO1xyXG5cclxuICAgICAgICBpZiAodGhpcy5oaWdoU3Vycm9nYXRlKSB7XHJcbiAgICAgICAgICAgIGlmIChpc0hpZ2hTdXJyb2dhdGUgfHwgIWlzTG93U3Vycm9nYXRlKSB7XHJcbiAgICAgICAgICAgICAgICAvLyBUaGVyZSBzaG91bGRuJ3QgYmUgdHdvIGhpZ2ggc3Vycm9nYXRlcyBpbiBhIHJvdywgbm9yIGEgaGlnaCBzdXJyb2dhdGUgd2hpY2ggaXNuJ3QgZm9sbG93ZWQgYnkgYSBsb3dcclxuICAgICAgICAgICAgICAgIC8vIHN1cnJvZ2F0ZS4gSWYgdGhpcyBoYXBwZW5zLCBrZWVwIHRoZSBwZW5kaW5nIGhpZ2ggc3Vycm9nYXRlIGFzIGEgc3RhbmQtYWxvbmUgc2VtaS1pbnZhbGlkIGNoYXJhY3RlclxyXG4gICAgICAgICAgICAgICAgLy8gKHRlY2huaWNhbGx5IHdyb25nLCBidXQgZXhwZWN0ZWQgYnkgc29tZSBhcHBsaWNhdGlvbnMsIGxpa2UgV2luZG93cyBmaWxlIG5hbWVzKS5cclxuICAgICAgICAgICAgICAgIHdyaXRlMzIuY2FsbChkc3QsIHRoaXMuaGlnaFN1cnJvZ2F0ZSwgb2Zmc2V0KTtcclxuICAgICAgICAgICAgICAgIG9mZnNldCArPSA0O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgLy8gQ3JlYXRlIDMyLWJpdCB2YWx1ZSBmcm9tIGhpZ2ggYW5kIGxvdyBzdXJyb2dhdGVzO1xyXG4gICAgICAgICAgICAgICAgdmFyIGNvZGVwb2ludCA9ICgoKHRoaXMuaGlnaFN1cnJvZ2F0ZSAtIDB4RDgwMCkgPDwgMTApIHwgKGNvZGUgLSAweERDMDApKSArIDB4MTAwMDA7XHJcblxyXG4gICAgICAgICAgICAgICAgd3JpdGUzMi5jYWxsKGRzdCwgY29kZXBvaW50LCBvZmZzZXQpO1xyXG4gICAgICAgICAgICAgICAgb2Zmc2V0ICs9IDQ7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmhpZ2hTdXJyb2dhdGUgPSAwO1xyXG5cclxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoaXNIaWdoU3Vycm9nYXRlKVxyXG4gICAgICAgICAgICB0aGlzLmhpZ2hTdXJyb2dhdGUgPSBjb2RlO1xyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAvLyBFdmVuIGlmIHRoZSBjdXJyZW50IGNoYXJhY3RlciBpcyBhIGxvdyBzdXJyb2dhdGUsIHdpdGggbm8gcHJldmlvdXMgaGlnaCBzdXJyb2dhdGUsIHdlJ2xsXHJcbiAgICAgICAgICAgIC8vIGVuY29kZSBpdCBhcyBhIHNlbWktaW52YWxpZCBzdGFuZC1hbG9uZSBjaGFyYWN0ZXIgZm9yIHRoZSBzYW1lIHJlYXNvbnMgZXhwcmVzc2VkIGFib3ZlIGZvclxyXG4gICAgICAgICAgICAvLyB1bnBhaXJlZCBoaWdoIHN1cnJvZ2F0ZXMuXHJcbiAgICAgICAgICAgIHdyaXRlMzIuY2FsbChkc3QsIGNvZGUsIG9mZnNldCk7XHJcbiAgICAgICAgICAgIG9mZnNldCArPSA0O1xyXG4gICAgICAgICAgICB0aGlzLmhpZ2hTdXJyb2dhdGUgPSAwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBpZiAob2Zmc2V0IDwgZHN0Lmxlbmd0aClcclxuICAgICAgICBkc3QgPSBkc3Quc2xpY2UoMCwgb2Zmc2V0KTtcclxuXHJcbiAgICByZXR1cm4gZHN0O1xyXG59O1xyXG5cclxuVXRmMzJFbmNvZGVyLnByb3RvdHlwZS5lbmQgPSBmdW5jdGlvbigpIHtcclxuICAgIC8vIFRyZWF0IGFueSBsZWZ0b3ZlciBoaWdoIHN1cnJvZ2F0ZSBhcyBhIHNlbWktdmFsaWQgaW5kZXBlbmRlbnQgY2hhcmFjdGVyLlxyXG4gICAgaWYgKCF0aGlzLmhpZ2hTdXJyb2dhdGUpXHJcbiAgICAgICAgcmV0dXJuO1xyXG5cclxuICAgIHZhciBidWYgPSBCdWZmZXIuYWxsb2MoNCk7XHJcblxyXG4gICAgaWYgKHRoaXMuaXNMRSlcclxuICAgICAgICBidWYud3JpdGVVSW50MzJMRSh0aGlzLmhpZ2hTdXJyb2dhdGUsIDApO1xyXG4gICAgZWxzZVxyXG4gICAgICAgIGJ1Zi53cml0ZVVJbnQzMkJFKHRoaXMuaGlnaFN1cnJvZ2F0ZSwgMCk7XHJcblxyXG4gICAgdGhpcy5oaWdoU3Vycm9nYXRlID0gMDtcclxuXHJcbiAgICByZXR1cm4gYnVmO1xyXG59O1xyXG5cclxuLy8gLS0gRGVjb2RpbmdcclxuXHJcbmZ1bmN0aW9uIFV0ZjMyRGVjb2RlcihvcHRpb25zLCBjb2RlYykge1xyXG4gICAgdGhpcy5pc0xFID0gY29kZWMuaXNMRTtcclxuICAgIHRoaXMuYmFkQ2hhciA9IGNvZGVjLmljb252LmRlZmF1bHRDaGFyVW5pY29kZS5jaGFyQ29kZUF0KDApO1xyXG4gICAgdGhpcy5vdmVyZmxvdyA9IFtdO1xyXG59XHJcblxyXG5VdGYzMkRlY29kZXIucHJvdG90eXBlLndyaXRlID0gZnVuY3Rpb24oc3JjKSB7XHJcbiAgICBpZiAoc3JjLmxlbmd0aCA9PT0gMClcclxuICAgICAgICByZXR1cm4gJyc7XHJcblxyXG4gICAgdmFyIGkgPSAwO1xyXG4gICAgdmFyIGNvZGVwb2ludCA9IDA7XHJcbiAgICB2YXIgZHN0ID0gQnVmZmVyLmFsbG9jKHNyYy5sZW5ndGggKyA0KTtcclxuICAgIHZhciBvZmZzZXQgPSAwO1xyXG4gICAgdmFyIGlzTEUgPSB0aGlzLmlzTEU7XHJcbiAgICB2YXIgb3ZlcmZsb3cgPSB0aGlzLm92ZXJmbG93O1xyXG4gICAgdmFyIGJhZENoYXIgPSB0aGlzLmJhZENoYXI7XHJcblxyXG4gICAgaWYgKG92ZXJmbG93Lmxlbmd0aCA+IDApIHtcclxuICAgICAgICBmb3IgKDsgaSA8IHNyYy5sZW5ndGggJiYgb3ZlcmZsb3cubGVuZ3RoIDwgNDsgaSsrKVxyXG4gICAgICAgICAgICBvdmVyZmxvdy5wdXNoKHNyY1tpXSk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgaWYgKG92ZXJmbG93Lmxlbmd0aCA9PT0gNCkge1xyXG4gICAgICAgICAgICAvLyBOT1RFOiBjb2RlcG9pbnQgaXMgYSBzaWduZWQgaW50MzIgYW5kIGNhbiBiZSBuZWdhdGl2ZS5cclxuICAgICAgICAgICAgLy8gTk9URTogV2UgY29waWVkIHRoaXMgYmxvY2sgZnJvbSBiZWxvdyB0byBoZWxwIFY4IG9wdGltaXplIGl0IChpdCB3b3JrcyB3aXRoIGFycmF5LCBub3QgYnVmZmVyKS5cclxuICAgICAgICAgICAgaWYgKGlzTEUpIHtcclxuICAgICAgICAgICAgICAgIGNvZGVwb2ludCA9IG92ZXJmbG93W2ldIHwgKG92ZXJmbG93W2krMV0gPDwgOCkgfCAob3ZlcmZsb3dbaSsyXSA8PCAxNikgfCAob3ZlcmZsb3dbaSszXSA8PCAyNCk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjb2RlcG9pbnQgPSBvdmVyZmxvd1tpKzNdIHwgKG92ZXJmbG93W2krMl0gPDwgOCkgfCAob3ZlcmZsb3dbaSsxXSA8PCAxNikgfCAob3ZlcmZsb3dbaV0gPDwgMjQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIG92ZXJmbG93Lmxlbmd0aCA9IDA7XHJcblxyXG4gICAgICAgICAgICBvZmZzZXQgPSBfd3JpdGVDb2RlcG9pbnQoZHN0LCBvZmZzZXQsIGNvZGVwb2ludCwgYmFkQ2hhcik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIE1haW4gbG9vcC4gU2hvdWxkIGJlIGFzIG9wdGltaXplZCBhcyBwb3NzaWJsZS5cclxuICAgIGZvciAoOyBpIDwgc3JjLmxlbmd0aCAtIDM7IGkgKz0gNCkge1xyXG4gICAgICAgIC8vIE5PVEU6IGNvZGVwb2ludCBpcyBhIHNpZ25lZCBpbnQzMiBhbmQgY2FuIGJlIG5lZ2F0aXZlLlxyXG4gICAgICAgIGlmIChpc0xFKSB7XHJcbiAgICAgICAgICAgIGNvZGVwb2ludCA9IHNyY1tpXSB8IChzcmNbaSsxXSA8PCA4KSB8IChzcmNbaSsyXSA8PCAxNikgfCAoc3JjW2krM10gPDwgMjQpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGNvZGVwb2ludCA9IHNyY1tpKzNdIHwgKHNyY1tpKzJdIDw8IDgpIHwgKHNyY1tpKzFdIDw8IDE2KSB8IChzcmNbaV0gPDwgMjQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBvZmZzZXQgPSBfd3JpdGVDb2RlcG9pbnQoZHN0LCBvZmZzZXQsIGNvZGVwb2ludCwgYmFkQ2hhcik7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gS2VlcCBvdmVyZmxvd2luZyBieXRlcy5cclxuICAgIGZvciAoOyBpIDwgc3JjLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgb3ZlcmZsb3cucHVzaChzcmNbaV0pO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBkc3Quc2xpY2UoMCwgb2Zmc2V0KS50b1N0cmluZygndWNzMicpO1xyXG59O1xyXG5cclxuZnVuY3Rpb24gX3dyaXRlQ29kZXBvaW50KGRzdCwgb2Zmc2V0LCBjb2RlcG9pbnQsIGJhZENoYXIpIHtcclxuICAgIC8vIE5PVEU6IGNvZGVwb2ludCBpcyBzaWduZWQgaW50MzIgYW5kIGNhbiBiZSBuZWdhdGl2ZS4gV2Uga2VlcCBpdCB0aGF0IHdheSB0byBoZWxwIFY4IHdpdGggb3B0aW1pemF0aW9ucy5cclxuICAgIGlmIChjb2RlcG9pbnQgPCAwIHx8IGNvZGVwb2ludCA+IDB4MTBGRkZGKSB7XHJcbiAgICAgICAgLy8gTm90IGEgdmFsaWQgVW5pY29kZSBjb2RlcG9pbnRcclxuICAgICAgICBjb2RlcG9pbnQgPSBiYWRDaGFyO1xyXG4gICAgfSBcclxuXHJcbiAgICAvLyBFcGhlbWVyYWwgUGxhbmVzOiBXcml0ZSBoaWdoIHN1cnJvZ2F0ZS5cclxuICAgIGlmIChjb2RlcG9pbnQgPj0gMHgxMDAwMCkge1xyXG4gICAgICAgIGNvZGVwb2ludCAtPSAweDEwMDAwO1xyXG5cclxuICAgICAgICB2YXIgaGlnaCA9IDB4RDgwMCB8IChjb2RlcG9pbnQgPj4gMTApO1xyXG4gICAgICAgIGRzdFtvZmZzZXQrK10gPSBoaWdoICYgMHhmZjtcclxuICAgICAgICBkc3Rbb2Zmc2V0KytdID0gaGlnaCA+PiA4O1xyXG5cclxuICAgICAgICAvLyBMb3cgc3Vycm9nYXRlIGlzIHdyaXR0ZW4gYmVsb3cuXHJcbiAgICAgICAgdmFyIGNvZGVwb2ludCA9IDB4REMwMCB8IChjb2RlcG9pbnQgJiAweDNGRik7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gV3JpdGUgQk1QIGNoYXIgb3IgbG93IHN1cnJvZ2F0ZS5cclxuICAgIGRzdFtvZmZzZXQrK10gPSBjb2RlcG9pbnQgJiAweGZmO1xyXG4gICAgZHN0W29mZnNldCsrXSA9IGNvZGVwb2ludCA+PiA4O1xyXG5cclxuICAgIHJldHVybiBvZmZzZXQ7XHJcbn07XHJcblxyXG5VdGYzMkRlY29kZXIucHJvdG90eXBlLmVuZCA9IGZ1bmN0aW9uKCkge1xyXG4gICAgdGhpcy5vdmVyZmxvdy5sZW5ndGggPSAwO1xyXG59O1xyXG5cclxuLy8gPT0gVVRGLTMyIEF1dG8gY29kZWMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyBEZWNvZGVyIGNob29zZXMgYXV0b21hdGljYWxseSBmcm9tIFVURi0zMkxFIGFuZCBVVEYtMzJCRSB1c2luZyBCT00gYW5kIHNwYWNlLWJhc2VkIGhldXJpc3RpYy5cclxuLy8gRGVmYXVsdHMgdG8gVVRGLTMyTEUuIGh0dHA6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvVVRGLTMyXHJcbi8vIEVuY29kZXIvZGVjb2RlciBkZWZhdWx0IGNhbiBiZSBjaGFuZ2VkOiBpY29udi5kZWNvZGUoYnVmLCAndXRmMzInLCB7ZGVmYXVsdEVuY29kaW5nOiAndXRmLTMyYmUnfSk7XHJcblxyXG4vLyBFbmNvZGVyIHByZXBlbmRzIEJPTSAod2hpY2ggY2FuIGJlIG92ZXJyaWRkZW4gd2l0aCAoYWRkQk9NOiBmYWxzZX0pLlxyXG5cclxuZXhwb3J0cy51dGYzMiA9IFV0ZjMyQXV0b0NvZGVjO1xyXG5leHBvcnRzLnVjczQgPSAndXRmMzInO1xyXG5cclxuZnVuY3Rpb24gVXRmMzJBdXRvQ29kZWMob3B0aW9ucywgaWNvbnYpIHtcclxuICAgIHRoaXMuaWNvbnYgPSBpY29udjtcclxufVxyXG5cclxuVXRmMzJBdXRvQ29kZWMucHJvdG90eXBlLmVuY29kZXIgPSBVdGYzMkF1dG9FbmNvZGVyO1xyXG5VdGYzMkF1dG9Db2RlYy5wcm90b3R5cGUuZGVjb2RlciA9IFV0ZjMyQXV0b0RlY29kZXI7XHJcblxyXG4vLyAtLSBFbmNvZGluZ1xyXG5cclxuZnVuY3Rpb24gVXRmMzJBdXRvRW5jb2RlcihvcHRpb25zLCBjb2RlYykge1xyXG4gICAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XHJcblxyXG4gICAgaWYgKG9wdGlvbnMuYWRkQk9NID09PSB1bmRlZmluZWQpXHJcbiAgICAgICAgb3B0aW9ucy5hZGRCT00gPSB0cnVlO1xyXG5cclxuICAgIHRoaXMuZW5jb2RlciA9IGNvZGVjLmljb252LmdldEVuY29kZXIob3B0aW9ucy5kZWZhdWx0RW5jb2RpbmcgfHwgJ3V0Zi0zMmxlJywgb3B0aW9ucyk7XHJcbn1cclxuXHJcblV0ZjMyQXV0b0VuY29kZXIucHJvdG90eXBlLndyaXRlID0gZnVuY3Rpb24oc3RyKSB7XHJcbiAgICByZXR1cm4gdGhpcy5lbmNvZGVyLndyaXRlKHN0cik7XHJcbn07XHJcblxyXG5VdGYzMkF1dG9FbmNvZGVyLnByb3RvdHlwZS5lbmQgPSBmdW5jdGlvbigpIHtcclxuICAgIHJldHVybiB0aGlzLmVuY29kZXIuZW5kKCk7XHJcbn07XHJcblxyXG4vLyAtLSBEZWNvZGluZ1xyXG5cclxuZnVuY3Rpb24gVXRmMzJBdXRvRGVjb2RlcihvcHRpb25zLCBjb2RlYykge1xyXG4gICAgdGhpcy5kZWNvZGVyID0gbnVsbDtcclxuICAgIHRoaXMuaW5pdGlhbEJ1ZnMgPSBbXTtcclxuICAgIHRoaXMuaW5pdGlhbEJ1ZnNMZW4gPSAwO1xyXG4gICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcclxuICAgIHRoaXMuaWNvbnYgPSBjb2RlYy5pY29udjtcclxufVxyXG5cclxuVXRmMzJBdXRvRGVjb2Rlci5wcm90b3R5cGUud3JpdGUgPSBmdW5jdGlvbihidWYpIHtcclxuICAgIGlmICghdGhpcy5kZWNvZGVyKSB7IFxyXG4gICAgICAgIC8vIENvZGVjIGlzIG5vdCBjaG9zZW4geWV0LiBBY2N1bXVsYXRlIGluaXRpYWwgYnl0ZXMuXHJcbiAgICAgICAgdGhpcy5pbml0aWFsQnVmcy5wdXNoKGJ1Zik7XHJcbiAgICAgICAgdGhpcy5pbml0aWFsQnVmc0xlbiArPSBidWYubGVuZ3RoO1xyXG5cclxuICAgICAgICBpZiAodGhpcy5pbml0aWFsQnVmc0xlbiA8IDMyKSAvLyBXZSBuZWVkIG1vcmUgYnl0ZXMgdG8gdXNlIHNwYWNlIGhldXJpc3RpYyAoc2VlIGJlbG93KVxyXG4gICAgICAgICAgICByZXR1cm4gJyc7XHJcblxyXG4gICAgICAgIC8vIFdlIGhhdmUgZW5vdWdoIGJ5dGVzIC0+IGRldGVjdCBlbmRpYW5uZXNzLlxyXG4gICAgICAgIHZhciBlbmNvZGluZyA9IGRldGVjdEVuY29kaW5nKHRoaXMuaW5pdGlhbEJ1ZnMsIHRoaXMub3B0aW9ucy5kZWZhdWx0RW5jb2RpbmcpO1xyXG4gICAgICAgIHRoaXMuZGVjb2RlciA9IHRoaXMuaWNvbnYuZ2V0RGVjb2RlcihlbmNvZGluZywgdGhpcy5vcHRpb25zKTtcclxuXHJcbiAgICAgICAgdmFyIHJlc1N0ciA9ICcnO1xyXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5pbml0aWFsQnVmcy5sZW5ndGg7IGkrKylcclxuICAgICAgICAgICAgcmVzU3RyICs9IHRoaXMuZGVjb2Rlci53cml0ZSh0aGlzLmluaXRpYWxCdWZzW2ldKTtcclxuXHJcbiAgICAgICAgdGhpcy5pbml0aWFsQnVmcy5sZW5ndGggPSB0aGlzLmluaXRpYWxCdWZzTGVuID0gMDtcclxuICAgICAgICByZXR1cm4gcmVzU3RyO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB0aGlzLmRlY29kZXIud3JpdGUoYnVmKTtcclxufTtcclxuXHJcblV0ZjMyQXV0b0RlY29kZXIucHJvdG90eXBlLmVuZCA9IGZ1bmN0aW9uKCkge1xyXG4gICAgaWYgKCF0aGlzLmRlY29kZXIpIHtcclxuICAgICAgICB2YXIgZW5jb2RpbmcgPSBkZXRlY3RFbmNvZGluZyh0aGlzLmluaXRpYWxCdWZzLCB0aGlzLm9wdGlvbnMuZGVmYXVsdEVuY29kaW5nKTtcclxuICAgICAgICB0aGlzLmRlY29kZXIgPSB0aGlzLmljb252LmdldERlY29kZXIoZW5jb2RpbmcsIHRoaXMub3B0aW9ucyk7XHJcblxyXG4gICAgICAgIHZhciByZXNTdHIgPSAnJztcclxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuaW5pdGlhbEJ1ZnMubGVuZ3RoOyBpKyspXHJcbiAgICAgICAgICAgIHJlc1N0ciArPSB0aGlzLmRlY29kZXIud3JpdGUodGhpcy5pbml0aWFsQnVmc1tpXSk7XHJcblxyXG4gICAgICAgIHZhciB0cmFpbCA9IHRoaXMuZGVjb2Rlci5lbmQoKTtcclxuICAgICAgICBpZiAodHJhaWwpXHJcbiAgICAgICAgICAgIHJlc1N0ciArPSB0cmFpbDtcclxuXHJcbiAgICAgICAgdGhpcy5pbml0aWFsQnVmcy5sZW5ndGggPSB0aGlzLmluaXRpYWxCdWZzTGVuID0gMDtcclxuICAgICAgICByZXR1cm4gcmVzU3RyO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB0aGlzLmRlY29kZXIuZW5kKCk7XHJcbn07XHJcblxyXG5mdW5jdGlvbiBkZXRlY3RFbmNvZGluZyhidWZzLCBkZWZhdWx0RW5jb2RpbmcpIHtcclxuICAgIHZhciBiID0gW107XHJcbiAgICB2YXIgY2hhcnNQcm9jZXNzZWQgPSAwO1xyXG4gICAgdmFyIGludmFsaWRMRSA9IDAsIGludmFsaWRCRSA9IDA7ICAgLy8gTnVtYmVyIG9mIGludmFsaWQgY2hhcnMgd2hlbiBkZWNvZGVkIGFzIExFIG9yIEJFLlxyXG4gICAgdmFyIGJtcENoYXJzTEUgPSAwLCBibXBDaGFyc0JFID0gMDsgLy8gTnVtYmVyIG9mIEJNUCBjaGFycyB3aGVuIGRlY29kZWQgYXMgTEUgb3IgQkUuXHJcblxyXG4gICAgb3V0ZXJfbG9vcDpcclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYnVmcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIHZhciBidWYgPSBidWZzW2ldO1xyXG4gICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgYnVmLmxlbmd0aDsgaisrKSB7XHJcbiAgICAgICAgICAgIGIucHVzaChidWZbal0pO1xyXG4gICAgICAgICAgICBpZiAoYi5sZW5ndGggPT09IDQpIHtcclxuICAgICAgICAgICAgICAgIGlmIChjaGFyc1Byb2Nlc3NlZCA9PT0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIENoZWNrIEJPTSBmaXJzdC5cclxuICAgICAgICAgICAgICAgICAgICBpZiAoYlswXSA9PT0gMHhGRiAmJiBiWzFdID09PSAweEZFICYmIGJbMl0gPT09IDAgJiYgYlszXSA9PT0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ3V0Zi0zMmxlJztcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGJbMF0gPT09IDAgJiYgYlsxXSA9PT0gMCAmJiBiWzJdID09PSAweEZFICYmIGJbM10gPT09IDB4RkYpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICd1dGYtMzJiZSc7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIGlmIChiWzBdICE9PSAwIHx8IGJbMV0gPiAweDEwKSBpbnZhbGlkQkUrKztcclxuICAgICAgICAgICAgICAgIGlmIChiWzNdICE9PSAwIHx8IGJbMl0gPiAweDEwKSBpbnZhbGlkTEUrKztcclxuXHJcbiAgICAgICAgICAgICAgICBpZiAoYlswXSA9PT0gMCAmJiBiWzFdID09PSAwICYmIChiWzJdICE9PSAwIHx8IGJbM10gIT09IDApKSBibXBDaGFyc0JFKys7XHJcbiAgICAgICAgICAgICAgICBpZiAoKGJbMF0gIT09IDAgfHwgYlsxXSAhPT0gMCkgJiYgYlsyXSA9PT0gMCAmJiBiWzNdID09PSAwKSBibXBDaGFyc0xFKys7XHJcblxyXG4gICAgICAgICAgICAgICAgYi5sZW5ndGggPSAwO1xyXG4gICAgICAgICAgICAgICAgY2hhcnNQcm9jZXNzZWQrKztcclxuXHJcbiAgICAgICAgICAgICAgICBpZiAoY2hhcnNQcm9jZXNzZWQgPj0gMTAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWsgb3V0ZXJfbG9vcDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyBNYWtlIGRlY2lzaW9ucy5cclxuICAgIGlmIChibXBDaGFyc0JFIC0gaW52YWxpZEJFID4gYm1wQ2hhcnNMRSAtIGludmFsaWRMRSkgIHJldHVybiAndXRmLTMyYmUnO1xyXG4gICAgaWYgKGJtcENoYXJzQkUgLSBpbnZhbGlkQkUgPCBibXBDaGFyc0xFIC0gaW52YWxpZExFKSAgcmV0dXJuICd1dGYtMzJsZSc7XHJcblxyXG4gICAgLy8gQ291bGRuJ3QgZGVjaWRlIChsaWtlbHkgYWxsIHplcm9zIG9yIG5vdCBlbm91Z2ggZGF0YSkuXHJcbiAgICByZXR1cm4gZGVmYXVsdEVuY29kaW5nIHx8ICd1dGYtMzJsZSc7XHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/iconv-lite/encodings/utf32.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/iconv-lite/encodings/utf7.js":
/*!***************************************************!*\
  !*** ./node_modules/iconv-lite/encodings/utf7.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nvar Buffer = (__webpack_require__(/*! safer-buffer */ \"(middleware)/./node_modules/safer-buffer/safer.js\").Buffer);\r\n\r\n// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152\r\n// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3\r\n\r\nexports.utf7 = Utf7Codec;\r\nexports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7\r\nfunction Utf7Codec(codecOptions, iconv) {\r\n    this.iconv = iconv;\r\n};\r\n\r\nUtf7Codec.prototype.encoder = Utf7Encoder;\r\nUtf7Codec.prototype.decoder = Utf7Decoder;\r\nUtf7Codec.prototype.bomAware = true;\r\n\r\n\r\n// -- Encoding\r\n\r\nvar nonDirectChars = /[^A-Za-z0-9'\\(\\),-\\.\\/:\\? \\n\\r\\t]+/g;\r\n\r\nfunction Utf7Encoder(options, codec) {\r\n    this.iconv = codec.iconv;\r\n}\r\n\r\nUtf7Encoder.prototype.write = function(str) {\r\n    // Naive implementation.\r\n    // Non-direct chars are encoded as \"+<base64>-\"; single \"+\" char is encoded as \"+-\".\r\n    return Buffer.from(str.replace(nonDirectChars, function(chunk) {\r\n        return \"+\" + (chunk === '+' ? '' : \r\n            this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) \r\n            + \"-\";\r\n    }.bind(this)));\r\n}\r\n\r\nUtf7Encoder.prototype.end = function() {\r\n}\r\n\r\n\r\n// -- Decoding\r\n\r\nfunction Utf7Decoder(options, codec) {\r\n    this.iconv = codec.iconv;\r\n    this.inBase64 = false;\r\n    this.base64Accum = '';\r\n}\r\n\r\nvar base64Regex = /[A-Za-z0-9\\/+]/;\r\nvar base64Chars = [];\r\nfor (var i = 0; i < 256; i++)\r\n    base64Chars[i] = base64Regex.test(String.fromCharCode(i));\r\n\r\nvar plusChar = '+'.charCodeAt(0), \r\n    minusChar = '-'.charCodeAt(0),\r\n    andChar = '&'.charCodeAt(0);\r\n\r\nUtf7Decoder.prototype.write = function(buf) {\r\n    var res = \"\", lastI = 0,\r\n        inBase64 = this.inBase64,\r\n        base64Accum = this.base64Accum;\r\n\r\n    // The decoder is more involved as we must handle chunks in stream.\r\n\r\n    for (var i = 0; i < buf.length; i++) {\r\n        if (!inBase64) { // We're in direct mode.\r\n            // Write direct chars until '+'\r\n            if (buf[i] == plusChar) {\r\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\r\n                lastI = i+1;\r\n                inBase64 = true;\r\n            }\r\n        } else { // We decode base64.\r\n            if (!base64Chars[buf[i]]) { // Base64 ended.\r\n                if (i == lastI && buf[i] == minusChar) {// \"+-\" -> \"+\"\r\n                    res += \"+\";\r\n                } else {\r\n                    var b64str = base64Accum + this.iconv.decode(buf.slice(lastI, i), \"ascii\");\r\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\r\n                }\r\n\r\n                if (buf[i] != minusChar) // Minus is absorbed after base64.\r\n                    i--;\r\n\r\n                lastI = i+1;\r\n                inBase64 = false;\r\n                base64Accum = '';\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!inBase64) {\r\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\r\n    } else {\r\n        var b64str = base64Accum + this.iconv.decode(buf.slice(lastI), \"ascii\");\r\n\r\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\r\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\r\n        b64str = b64str.slice(0, canBeDecoded);\r\n\r\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\r\n    }\r\n\r\n    this.inBase64 = inBase64;\r\n    this.base64Accum = base64Accum;\r\n\r\n    return res;\r\n}\r\n\r\nUtf7Decoder.prototype.end = function() {\r\n    var res = \"\";\r\n    if (this.inBase64 && this.base64Accum.length > 0)\r\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\r\n\r\n    this.inBase64 = false;\r\n    this.base64Accum = '';\r\n    return res;\r\n}\r\n\r\n\r\n// UTF-7-IMAP codec.\r\n// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)\r\n// Differences:\r\n//  * Base64 part is started by \"&\" instead of \"+\"\r\n//  * Direct characters are 0x20-0x7E, except \"&\" (0x26)\r\n//  * In Base64, \",\" is used instead of \"/\"\r\n//  * Base64 must not be used to represent direct characters.\r\n//  * No implicit shift back from Base64 (should always end with '-')\r\n//  * String must end in non-shifted position.\r\n//  * \"-&\" while in base64 is not allowed.\r\n\r\n\r\nexports.utf7imap = Utf7IMAPCodec;\r\nfunction Utf7IMAPCodec(codecOptions, iconv) {\r\n    this.iconv = iconv;\r\n};\r\n\r\nUtf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;\r\nUtf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;\r\nUtf7IMAPCodec.prototype.bomAware = true;\r\n\r\n\r\n// -- Encoding\r\n\r\nfunction Utf7IMAPEncoder(options, codec) {\r\n    this.iconv = codec.iconv;\r\n    this.inBase64 = false;\r\n    this.base64Accum = Buffer.alloc(6);\r\n    this.base64AccumIdx = 0;\r\n}\r\n\r\nUtf7IMAPEncoder.prototype.write = function(str) {\r\n    var inBase64 = this.inBase64,\r\n        base64Accum = this.base64Accum,\r\n        base64AccumIdx = this.base64AccumIdx,\r\n        buf = Buffer.alloc(str.length*5 + 10), bufIdx = 0;\r\n\r\n    for (var i = 0; i < str.length; i++) {\r\n        var uChar = str.charCodeAt(i);\r\n        if (0x20 <= uChar && uChar <= 0x7E) { // Direct character or '&'.\r\n            if (inBase64) {\r\n                if (base64AccumIdx > 0) {\r\n                    bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\r\n                    base64AccumIdx = 0;\r\n                }\r\n\r\n                buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\r\n                inBase64 = false;\r\n            }\r\n\r\n            if (!inBase64) {\r\n                buf[bufIdx++] = uChar; // Write direct character\r\n\r\n                if (uChar === andChar)  // Ampersand -> '&-'\r\n                    buf[bufIdx++] = minusChar;\r\n            }\r\n\r\n        } else { // Non-direct character\r\n            if (!inBase64) {\r\n                buf[bufIdx++] = andChar; // Write '&', then go to base64 mode.\r\n                inBase64 = true;\r\n            }\r\n            if (inBase64) {\r\n                base64Accum[base64AccumIdx++] = uChar >> 8;\r\n                base64Accum[base64AccumIdx++] = uChar & 0xFF;\r\n\r\n                if (base64AccumIdx == base64Accum.length) {\r\n                    bufIdx += buf.write(base64Accum.toString('base64').replace(/\\//g, ','), bufIdx);\r\n                    base64AccumIdx = 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    this.inBase64 = inBase64;\r\n    this.base64AccumIdx = base64AccumIdx;\r\n\r\n    return buf.slice(0, bufIdx);\r\n}\r\n\r\nUtf7IMAPEncoder.prototype.end = function() {\r\n    var buf = Buffer.alloc(10), bufIdx = 0;\r\n    if (this.inBase64) {\r\n        if (this.base64AccumIdx > 0) {\r\n            bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\r\n            this.base64AccumIdx = 0;\r\n        }\r\n\r\n        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\r\n        this.inBase64 = false;\r\n    }\r\n\r\n    return buf.slice(0, bufIdx);\r\n}\r\n\r\n\r\n// -- Decoding\r\n\r\nfunction Utf7IMAPDecoder(options, codec) {\r\n    this.iconv = codec.iconv;\r\n    this.inBase64 = false;\r\n    this.base64Accum = '';\r\n}\r\n\r\nvar base64IMAPChars = base64Chars.slice();\r\nbase64IMAPChars[','.charCodeAt(0)] = true;\r\n\r\nUtf7IMAPDecoder.prototype.write = function(buf) {\r\n    var res = \"\", lastI = 0,\r\n        inBase64 = this.inBase64,\r\n        base64Accum = this.base64Accum;\r\n\r\n    // The decoder is more involved as we must handle chunks in stream.\r\n    // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).\r\n\r\n    for (var i = 0; i < buf.length; i++) {\r\n        if (!inBase64) { // We're in direct mode.\r\n            // Write direct chars until '&'\r\n            if (buf[i] == andChar) {\r\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\r\n                lastI = i+1;\r\n                inBase64 = true;\r\n            }\r\n        } else { // We decode base64.\r\n            if (!base64IMAPChars[buf[i]]) { // Base64 ended.\r\n                if (i == lastI && buf[i] == minusChar) { // \"&-\" -> \"&\"\r\n                    res += \"&\";\r\n                } else {\r\n                    var b64str = base64Accum + this.iconv.decode(buf.slice(lastI, i), \"ascii\").replace(/,/g, '/');\r\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\r\n                }\r\n\r\n                if (buf[i] != minusChar) // Minus may be absorbed after base64.\r\n                    i--;\r\n\r\n                lastI = i+1;\r\n                inBase64 = false;\r\n                base64Accum = '';\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!inBase64) {\r\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\r\n    } else {\r\n        var b64str = base64Accum + this.iconv.decode(buf.slice(lastI), \"ascii\").replace(/,/g, '/');\r\n\r\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\r\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\r\n        b64str = b64str.slice(0, canBeDecoded);\r\n\r\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\r\n    }\r\n\r\n    this.inBase64 = inBase64;\r\n    this.base64Accum = base64Accum;\r\n\r\n    return res;\r\n}\r\n\r\nUtf7IMAPDecoder.prototype.end = function() {\r\n    var res = \"\";\r\n    if (this.inBase64 && this.base64Accum.length > 0)\r\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\r\n\r\n    this.inBase64 = false;\r\n    this.base64Accum = '';\r\n    return res;\r\n}\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/iconv-lite/encodings/utf7.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/iconv-lite/lib/bom-handling.js":
/*!*****************************************************!*\
  !*** ./node_modules/iconv-lite/lib/bom-handling.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\n\r\nvar BOMChar = '\\uFEFF';\r\n\r\nexports.PrependBOM = PrependBOMWrapper\r\nfunction PrependBOMWrapper(encoder, options) {\r\n    this.encoder = encoder;\r\n    this.addBOM = true;\r\n}\r\n\r\nPrependBOMWrapper.prototype.write = function(str) {\r\n    if (this.addBOM) {\r\n        str = BOMChar + str;\r\n        this.addBOM = false;\r\n    }\r\n\r\n    return this.encoder.write(str);\r\n}\r\n\r\nPrependBOMWrapper.prototype.end = function() {\r\n    return this.encoder.end();\r\n}\r\n\r\n\r\n//------------------------------------------------------------------------------\r\n\r\nexports.StripBOM = StripBOMWrapper;\r\nfunction StripBOMWrapper(decoder, options) {\r\n    this.decoder = decoder;\r\n    this.pass = false;\r\n    this.options = options || {};\r\n}\r\n\r\nStripBOMWrapper.prototype.write = function(buf) {\r\n    var res = this.decoder.write(buf);\r\n    if (this.pass || !res)\r\n        return res;\r\n\r\n    if (res[0] === BOMChar) {\r\n        res = res.slice(1);\r\n        if (typeof this.options.stripBOM === 'function')\r\n            this.options.stripBOM();\r\n    }\r\n\r\n    this.pass = true;\r\n    return res;\r\n}\r\n\r\nStripBOMWrapper.prototype.end = function() {\r\n    return this.decoder.end();\r\n}\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2ljb252LWxpdGUvbGliL2JvbS1oYW5kbGluZy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2ljb252LWxpdGUvbGliL2JvbS1oYW5kbGluZy5qcz9mOTQ1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5cclxudmFyIEJPTUNoYXIgPSAnXFx1RkVGRic7XHJcblxyXG5leHBvcnRzLlByZXBlbmRCT00gPSBQcmVwZW5kQk9NV3JhcHBlclxyXG5mdW5jdGlvbiBQcmVwZW5kQk9NV3JhcHBlcihlbmNvZGVyLCBvcHRpb25zKSB7XHJcbiAgICB0aGlzLmVuY29kZXIgPSBlbmNvZGVyO1xyXG4gICAgdGhpcy5hZGRCT00gPSB0cnVlO1xyXG59XHJcblxyXG5QcmVwZW5kQk9NV3JhcHBlci5wcm90b3R5cGUud3JpdGUgPSBmdW5jdGlvbihzdHIpIHtcclxuICAgIGlmICh0aGlzLmFkZEJPTSkge1xyXG4gICAgICAgIHN0ciA9IEJPTUNoYXIgKyBzdHI7XHJcbiAgICAgICAgdGhpcy5hZGRCT00gPSBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gdGhpcy5lbmNvZGVyLndyaXRlKHN0cik7XHJcbn1cclxuXHJcblByZXBlbmRCT01XcmFwcGVyLnByb3RvdHlwZS5lbmQgPSBmdW5jdGlvbigpIHtcclxuICAgIHJldHVybiB0aGlzLmVuY29kZXIuZW5kKCk7XHJcbn1cclxuXHJcblxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuZXhwb3J0cy5TdHJpcEJPTSA9IFN0cmlwQk9NV3JhcHBlcjtcclxuZnVuY3Rpb24gU3RyaXBCT01XcmFwcGVyKGRlY29kZXIsIG9wdGlvbnMpIHtcclxuICAgIHRoaXMuZGVjb2RlciA9IGRlY29kZXI7XHJcbiAgICB0aGlzLnBhc3MgPSBmYWxzZTtcclxuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnMgfHwge307XHJcbn1cclxuXHJcblN0cmlwQk9NV3JhcHBlci5wcm90b3R5cGUud3JpdGUgPSBmdW5jdGlvbihidWYpIHtcclxuICAgIHZhciByZXMgPSB0aGlzLmRlY29kZXIud3JpdGUoYnVmKTtcclxuICAgIGlmICh0aGlzLnBhc3MgfHwgIXJlcylcclxuICAgICAgICByZXR1cm4gcmVzO1xyXG5cclxuICAgIGlmIChyZXNbMF0gPT09IEJPTUNoYXIpIHtcclxuICAgICAgICByZXMgPSByZXMuc2xpY2UoMSk7XHJcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLm9wdGlvbnMuc3RyaXBCT00gPT09ICdmdW5jdGlvbicpXHJcbiAgICAgICAgICAgIHRoaXMub3B0aW9ucy5zdHJpcEJPTSgpO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMucGFzcyA9IHRydWU7XHJcbiAgICByZXR1cm4gcmVzO1xyXG59XHJcblxyXG5TdHJpcEJPTVdyYXBwZXIucHJvdG90eXBlLmVuZCA9IGZ1bmN0aW9uKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuZGVjb2Rlci5lbmQoKTtcclxufVxyXG5cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/iconv-lite/lib/bom-handling.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/iconv-lite/lib/index.js":
/*!**********************************************!*\
  !*** ./node_modules/iconv-lite/lib/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\nvar Buffer = (__webpack_require__(/*! safer-buffer */ \"(middleware)/./node_modules/safer-buffer/safer.js\").Buffer);\r\n\r\nvar bomHandling = __webpack_require__(/*! ./bom-handling */ \"(middleware)/./node_modules/iconv-lite/lib/bom-handling.js\"),\r\n    iconv = module.exports;\r\n\r\n// All codecs and aliases are kept here, keyed by encoding name/alias.\r\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\r\niconv.encodings = null;\r\n\r\n// Characters emitted in case of error.\r\niconv.defaultCharUnicode = '�';\r\niconv.defaultCharSingleByte = '?';\r\n\r\n// Public API.\r\niconv.encode = function encode(str, encoding, options) {\r\n    str = \"\" + (str || \"\"); // Ensure string.\r\n\r\n    var encoder = iconv.getEncoder(encoding, options);\r\n\r\n    var res = encoder.write(str);\r\n    var trail = encoder.end();\r\n    \r\n    return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res;\r\n}\r\n\r\niconv.decode = function decode(buf, encoding, options) {\r\n    if (typeof buf === 'string') {\r\n        if (!iconv.skipDecodeWarning) {\r\n            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\r\n            iconv.skipDecodeWarning = true;\r\n        }\r\n\r\n        buf = Buffer.from(\"\" + (buf || \"\"), \"binary\"); // Ensure buffer.\r\n    }\r\n\r\n    var decoder = iconv.getDecoder(encoding, options);\r\n\r\n    var res = decoder.write(buf);\r\n    var trail = decoder.end();\r\n\r\n    return trail ? (res + trail) : res;\r\n}\r\n\r\niconv.encodingExists = function encodingExists(enc) {\r\n    try {\r\n        iconv.getCodec(enc);\r\n        return true;\r\n    } catch (e) {\r\n        return false;\r\n    }\r\n}\r\n\r\n// Legacy aliases to convert functions\r\niconv.toEncoding = iconv.encode;\r\niconv.fromEncoding = iconv.decode;\r\n\r\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\r\niconv._codecDataCache = {};\r\niconv.getCodec = function getCodec(encoding) {\r\n    if (!iconv.encodings)\r\n        iconv.encodings = __webpack_require__(/*! ../encodings */ \"(middleware)/./node_modules/iconv-lite/encodings/index.js\"); // Lazy load all encoding definitions.\r\n    \r\n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\r\n    var enc = iconv._canonicalizeEncoding(encoding);\r\n\r\n    // Traverse iconv.encodings to find actual codec.\r\n    var codecOptions = {};\r\n    while (true) {\r\n        var codec = iconv._codecDataCache[enc];\r\n        if (codec)\r\n            return codec;\r\n\r\n        var codecDef = iconv.encodings[enc];\r\n\r\n        switch (typeof codecDef) {\r\n            case \"string\": // Direct alias to other encoding.\r\n                enc = codecDef;\r\n                break;\r\n\r\n            case \"object\": // Alias with options. Can be layered.\r\n                for (var key in codecDef)\r\n                    codecOptions[key] = codecDef[key];\r\n\r\n                if (!codecOptions.encodingName)\r\n                    codecOptions.encodingName = enc;\r\n                \r\n                enc = codecDef.type;\r\n                break;\r\n\r\n            case \"function\": // Codec itself.\r\n                if (!codecOptions.encodingName)\r\n                    codecOptions.encodingName = enc;\r\n\r\n                // The codec function must load all tables and return object with .encoder and .decoder methods.\r\n                // It'll be called only once (for each different options object).\r\n                codec = new codecDef(codecOptions, iconv);\r\n\r\n                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\r\n                return codec;\r\n\r\n            default:\r\n                throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\"+enc+\"')\");\r\n        }\r\n    }\r\n}\r\n\r\niconv._canonicalizeEncoding = function(encoding) {\r\n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\r\n    return (''+encoding).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g, \"\");\r\n}\r\n\r\niconv.getEncoder = function getEncoder(encoding, options) {\r\n    var codec = iconv.getCodec(encoding),\r\n        encoder = new codec.encoder(options, codec);\r\n\r\n    if (codec.bomAware && options && options.addBOM)\r\n        encoder = new bomHandling.PrependBOM(encoder, options);\r\n\r\n    return encoder;\r\n}\r\n\r\niconv.getDecoder = function getDecoder(encoding, options) {\r\n    var codec = iconv.getCodec(encoding),\r\n        decoder = new codec.decoder(options, codec);\r\n\r\n    if (codec.bomAware && !(options && options.stripBOM === false))\r\n        decoder = new bomHandling.StripBOM(decoder, options);\r\n\r\n    return decoder;\r\n}\r\n\r\n// Streaming API\r\n// NOTE: Streaming API naturally depends on 'stream' module from Node.js. Unfortunately in browser environments this module can add\r\n// up to 100Kb to the output bundle. To avoid unnecessary code bloat, we don't enable Streaming API in browser by default.\r\n// If you would like to enable it explicitly, please add the following code to your app:\r\n// > iconv.enableStreamingAPI(require('stream'));\r\niconv.enableStreamingAPI = function enableStreamingAPI(stream_module) {\r\n    if (iconv.supportsStreams)\r\n        return;\r\n\r\n    // Dependency-inject stream module to create IconvLite stream classes.\r\n    var streams = __webpack_require__(/*! ./streams */ \"(middleware)/./node_modules/iconv-lite/lib/streams.js\")(stream_module);\r\n\r\n    // Not public API yet, but expose the stream classes.\r\n    iconv.IconvLiteEncoderStream = streams.IconvLiteEncoderStream;\r\n    iconv.IconvLiteDecoderStream = streams.IconvLiteDecoderStream;\r\n\r\n    // Streaming API.\r\n    iconv.encodeStream = function encodeStream(encoding, options) {\r\n        return new iconv.IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\r\n    }\r\n\r\n    iconv.decodeStream = function decodeStream(encoding, options) {\r\n        return new iconv.IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\r\n    }\r\n\r\n    iconv.supportsStreams = true;\r\n}\r\n\r\n// Enable Streaming API automatically if 'stream' module is available and non-empty (the majority of environments).\r\nvar stream_module;\r\ntry {\r\n    stream_module = __webpack_require__(/*! stream */ \"?04f2\");\r\n} catch (e) {}\r\n\r\nif (stream_module && stream_module.Transform) {\r\n    iconv.enableStreamingAPI(stream_module);\r\n\r\n} else {\r\n    // In rare cases where 'stream' module is not available by default, throw a helpful exception.\r\n    iconv.encodeStream = iconv.decodeStream = function() {\r\n        throw new Error(\"iconv-lite Streaming API is not enabled. Use iconv.enableStreamingAPI(require('stream')); to enable it.\");\r\n    };\r\n}\r\n\r\nif (false) {}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2ljb252LWxpdGUvbGliL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSxhQUFhLHFHQUE4QjtBQUMzQztBQUNBLGtCQUFrQixtQkFBTyxDQUFDLGtGQUFnQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQ7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsbUJBQU8sQ0FBQywrRUFBYyxHQUFHO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBFQUEwRTtBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxFQUFFO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsbUJBQU8sQ0FBQyx3RUFBVztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLG1CQUFPLENBQUMscUJBQVE7QUFDcEMsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQSxtSEFBbUg7QUFDbkg7QUFDQTtBQUNBO0FBQ0EsSUFBSSxLQUFlLEVBQUUsRUFFcEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2ljb252LWxpdGUvbGliL2luZGV4LmpzPzA2OTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG52YXIgQnVmZmVyID0gcmVxdWlyZShcInNhZmVyLWJ1ZmZlclwiKS5CdWZmZXI7XHJcblxyXG52YXIgYm9tSGFuZGxpbmcgPSByZXF1aXJlKFwiLi9ib20taGFuZGxpbmdcIiksXHJcbiAgICBpY29udiA9IG1vZHVsZS5leHBvcnRzO1xyXG5cclxuLy8gQWxsIGNvZGVjcyBhbmQgYWxpYXNlcyBhcmUga2VwdCBoZXJlLCBrZXllZCBieSBlbmNvZGluZyBuYW1lL2FsaWFzLlxyXG4vLyBUaGV5IGFyZSBsYXp5IGxvYWRlZCBpbiBgaWNvbnYuZ2V0Q29kZWNgIGZyb20gYGVuY29kaW5ncy9pbmRleC5qc2AuXHJcbmljb252LmVuY29kaW5ncyA9IG51bGw7XHJcblxyXG4vLyBDaGFyYWN0ZXJzIGVtaXR0ZWQgaW4gY2FzZSBvZiBlcnJvci5cclxuaWNvbnYuZGVmYXVsdENoYXJVbmljb2RlID0gJ++/vSc7XHJcbmljb252LmRlZmF1bHRDaGFyU2luZ2xlQnl0ZSA9ICc/JztcclxuXHJcbi8vIFB1YmxpYyBBUEkuXHJcbmljb252LmVuY29kZSA9IGZ1bmN0aW9uIGVuY29kZShzdHIsIGVuY29kaW5nLCBvcHRpb25zKSB7XHJcbiAgICBzdHIgPSBcIlwiICsgKHN0ciB8fCBcIlwiKTsgLy8gRW5zdXJlIHN0cmluZy5cclxuXHJcbiAgICB2YXIgZW5jb2RlciA9IGljb252LmdldEVuY29kZXIoZW5jb2RpbmcsIG9wdGlvbnMpO1xyXG5cclxuICAgIHZhciByZXMgPSBlbmNvZGVyLndyaXRlKHN0cik7XHJcbiAgICB2YXIgdHJhaWwgPSBlbmNvZGVyLmVuZCgpO1xyXG4gICAgXHJcbiAgICByZXR1cm4gKHRyYWlsICYmIHRyYWlsLmxlbmd0aCA+IDApID8gQnVmZmVyLmNvbmNhdChbcmVzLCB0cmFpbF0pIDogcmVzO1xyXG59XHJcblxyXG5pY29udi5kZWNvZGUgPSBmdW5jdGlvbiBkZWNvZGUoYnVmLCBlbmNvZGluZywgb3B0aW9ucykge1xyXG4gICAgaWYgKHR5cGVvZiBidWYgPT09ICdzdHJpbmcnKSB7XHJcbiAgICAgICAgaWYgKCFpY29udi5za2lwRGVjb2RlV2FybmluZykge1xyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdJY29udi1saXRlIHdhcm5pbmc6IGRlY29kZSgpLWluZyBzdHJpbmdzIGlzIGRlcHJlY2F0ZWQuIFJlZmVyIHRvIGh0dHBzOi8vZ2l0aHViLmNvbS9hc2h0dWNoa2luL2ljb252LWxpdGUvd2lraS9Vc2UtQnVmZmVycy13aGVuLWRlY29kaW5nJyk7XHJcbiAgICAgICAgICAgIGljb252LnNraXBEZWNvZGVXYXJuaW5nID0gdHJ1ZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGJ1ZiA9IEJ1ZmZlci5mcm9tKFwiXCIgKyAoYnVmIHx8IFwiXCIpLCBcImJpbmFyeVwiKTsgLy8gRW5zdXJlIGJ1ZmZlci5cclxuICAgIH1cclxuXHJcbiAgICB2YXIgZGVjb2RlciA9IGljb252LmdldERlY29kZXIoZW5jb2RpbmcsIG9wdGlvbnMpO1xyXG5cclxuICAgIHZhciByZXMgPSBkZWNvZGVyLndyaXRlKGJ1Zik7XHJcbiAgICB2YXIgdHJhaWwgPSBkZWNvZGVyLmVuZCgpO1xyXG5cclxuICAgIHJldHVybiB0cmFpbCA/IChyZXMgKyB0cmFpbCkgOiByZXM7XHJcbn1cclxuXHJcbmljb252LmVuY29kaW5nRXhpc3RzID0gZnVuY3Rpb24gZW5jb2RpbmdFeGlzdHMoZW5jKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIGljb252LmdldENvZGVjKGVuYyk7XHJcbiAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG59XHJcblxyXG4vLyBMZWdhY3kgYWxpYXNlcyB0byBjb252ZXJ0IGZ1bmN0aW9uc1xyXG5pY29udi50b0VuY29kaW5nID0gaWNvbnYuZW5jb2RlO1xyXG5pY29udi5mcm9tRW5jb2RpbmcgPSBpY29udi5kZWNvZGU7XHJcblxyXG4vLyBTZWFyY2ggZm9yIGEgY29kZWMgaW4gaWNvbnYuZW5jb2RpbmdzLiBDYWNoZSBjb2RlYyBkYXRhIGluIGljb252Ll9jb2RlY0RhdGFDYWNoZS5cclxuaWNvbnYuX2NvZGVjRGF0YUNhY2hlID0ge307XHJcbmljb252LmdldENvZGVjID0gZnVuY3Rpb24gZ2V0Q29kZWMoZW5jb2RpbmcpIHtcclxuICAgIGlmICghaWNvbnYuZW5jb2RpbmdzKVxyXG4gICAgICAgIGljb252LmVuY29kaW5ncyA9IHJlcXVpcmUoXCIuLi9lbmNvZGluZ3NcIik7IC8vIExhenkgbG9hZCBhbGwgZW5jb2RpbmcgZGVmaW5pdGlvbnMuXHJcbiAgICBcclxuICAgIC8vIENhbm9uaWNhbGl6ZSBlbmNvZGluZyBuYW1lOiBzdHJpcCBhbGwgbm9uLWFscGhhbnVtZXJpYyBjaGFycyBhbmQgYXBwZW5kZWQgeWVhci5cclxuICAgIHZhciBlbmMgPSBpY29udi5fY2Fub25pY2FsaXplRW5jb2RpbmcoZW5jb2RpbmcpO1xyXG5cclxuICAgIC8vIFRyYXZlcnNlIGljb252LmVuY29kaW5ncyB0byBmaW5kIGFjdHVhbCBjb2RlYy5cclxuICAgIHZhciBjb2RlY09wdGlvbnMgPSB7fTtcclxuICAgIHdoaWxlICh0cnVlKSB7XHJcbiAgICAgICAgdmFyIGNvZGVjID0gaWNvbnYuX2NvZGVjRGF0YUNhY2hlW2VuY107XHJcbiAgICAgICAgaWYgKGNvZGVjKVxyXG4gICAgICAgICAgICByZXR1cm4gY29kZWM7XHJcblxyXG4gICAgICAgIHZhciBjb2RlY0RlZiA9IGljb252LmVuY29kaW5nc1tlbmNdO1xyXG5cclxuICAgICAgICBzd2l0Y2ggKHR5cGVvZiBjb2RlY0RlZikge1xyXG4gICAgICAgICAgICBjYXNlIFwic3RyaW5nXCI6IC8vIERpcmVjdCBhbGlhcyB0byBvdGhlciBlbmNvZGluZy5cclxuICAgICAgICAgICAgICAgIGVuYyA9IGNvZGVjRGVmO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgICAgICBjYXNlIFwib2JqZWN0XCI6IC8vIEFsaWFzIHdpdGggb3B0aW9ucy4gQ2FuIGJlIGxheWVyZWQuXHJcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBrZXkgaW4gY29kZWNEZWYpXHJcbiAgICAgICAgICAgICAgICAgICAgY29kZWNPcHRpb25zW2tleV0gPSBjb2RlY0RlZltrZXldO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmICghY29kZWNPcHRpb25zLmVuY29kaW5nTmFtZSlcclxuICAgICAgICAgICAgICAgICAgICBjb2RlY09wdGlvbnMuZW5jb2RpbmdOYW1lID0gZW5jO1xyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICBlbmMgPSBjb2RlY0RlZi50eXBlO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgICAgICBjYXNlIFwiZnVuY3Rpb25cIjogLy8gQ29kZWMgaXRzZWxmLlxyXG4gICAgICAgICAgICAgICAgaWYgKCFjb2RlY09wdGlvbnMuZW5jb2RpbmdOYW1lKVxyXG4gICAgICAgICAgICAgICAgICAgIGNvZGVjT3B0aW9ucy5lbmNvZGluZ05hbWUgPSBlbmM7XHJcblxyXG4gICAgICAgICAgICAgICAgLy8gVGhlIGNvZGVjIGZ1bmN0aW9uIG11c3QgbG9hZCBhbGwgdGFibGVzIGFuZCByZXR1cm4gb2JqZWN0IHdpdGggLmVuY29kZXIgYW5kIC5kZWNvZGVyIG1ldGhvZHMuXHJcbiAgICAgICAgICAgICAgICAvLyBJdCdsbCBiZSBjYWxsZWQgb25seSBvbmNlIChmb3IgZWFjaCBkaWZmZXJlbnQgb3B0aW9ucyBvYmplY3QpLlxyXG4gICAgICAgICAgICAgICAgY29kZWMgPSBuZXcgY29kZWNEZWYoY29kZWNPcHRpb25zLCBpY29udik7XHJcblxyXG4gICAgICAgICAgICAgICAgaWNvbnYuX2NvZGVjRGF0YUNhY2hlW2NvZGVjT3B0aW9ucy5lbmNvZGluZ05hbWVdID0gY29kZWM7IC8vIFNhdmUgaXQgdG8gYmUgcmV1c2VkIGxhdGVyLlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvZGVjO1xyXG5cclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkVuY29kaW5nIG5vdCByZWNvZ25pemVkOiAnXCIgKyBlbmNvZGluZyArIFwiJyAoc2VhcmNoZWQgYXM6ICdcIitlbmMrXCInKVwiKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbmljb252Ll9jYW5vbmljYWxpemVFbmNvZGluZyA9IGZ1bmN0aW9uKGVuY29kaW5nKSB7XHJcbiAgICAvLyBDYW5vbmljYWxpemUgZW5jb2RpbmcgbmFtZTogc3RyaXAgYWxsIG5vbi1hbHBoYW51bWVyaWMgY2hhcnMgYW5kIGFwcGVuZGVkIHllYXIuXHJcbiAgICByZXR1cm4gKCcnK2VuY29kaW5nKS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoLzpcXGR7NH0kfFteMC05YS16XS9nLCBcIlwiKTtcclxufVxyXG5cclxuaWNvbnYuZ2V0RW5jb2RlciA9IGZ1bmN0aW9uIGdldEVuY29kZXIoZW5jb2RpbmcsIG9wdGlvbnMpIHtcclxuICAgIHZhciBjb2RlYyA9IGljb252LmdldENvZGVjKGVuY29kaW5nKSxcclxuICAgICAgICBlbmNvZGVyID0gbmV3IGNvZGVjLmVuY29kZXIob3B0aW9ucywgY29kZWMpO1xyXG5cclxuICAgIGlmIChjb2RlYy5ib21Bd2FyZSAmJiBvcHRpb25zICYmIG9wdGlvbnMuYWRkQk9NKVxyXG4gICAgICAgIGVuY29kZXIgPSBuZXcgYm9tSGFuZGxpbmcuUHJlcGVuZEJPTShlbmNvZGVyLCBvcHRpb25zKTtcclxuXHJcbiAgICByZXR1cm4gZW5jb2RlcjtcclxufVxyXG5cclxuaWNvbnYuZ2V0RGVjb2RlciA9IGZ1bmN0aW9uIGdldERlY29kZXIoZW5jb2RpbmcsIG9wdGlvbnMpIHtcclxuICAgIHZhciBjb2RlYyA9IGljb252LmdldENvZGVjKGVuY29kaW5nKSxcclxuICAgICAgICBkZWNvZGVyID0gbmV3IGNvZGVjLmRlY29kZXIob3B0aW9ucywgY29kZWMpO1xyXG5cclxuICAgIGlmIChjb2RlYy5ib21Bd2FyZSAmJiAhKG9wdGlvbnMgJiYgb3B0aW9ucy5zdHJpcEJPTSA9PT0gZmFsc2UpKVxyXG4gICAgICAgIGRlY29kZXIgPSBuZXcgYm9tSGFuZGxpbmcuU3RyaXBCT00oZGVjb2Rlciwgb3B0aW9ucyk7XHJcblxyXG4gICAgcmV0dXJuIGRlY29kZXI7XHJcbn1cclxuXHJcbi8vIFN0cmVhbWluZyBBUElcclxuLy8gTk9URTogU3RyZWFtaW5nIEFQSSBuYXR1cmFsbHkgZGVwZW5kcyBvbiAnc3RyZWFtJyBtb2R1bGUgZnJvbSBOb2RlLmpzLiBVbmZvcnR1bmF0ZWx5IGluIGJyb3dzZXIgZW52aXJvbm1lbnRzIHRoaXMgbW9kdWxlIGNhbiBhZGRcclxuLy8gdXAgdG8gMTAwS2IgdG8gdGhlIG91dHB1dCBidW5kbGUuIFRvIGF2b2lkIHVubmVjZXNzYXJ5IGNvZGUgYmxvYXQsIHdlIGRvbid0IGVuYWJsZSBTdHJlYW1pbmcgQVBJIGluIGJyb3dzZXIgYnkgZGVmYXVsdC5cclxuLy8gSWYgeW91IHdvdWxkIGxpa2UgdG8gZW5hYmxlIGl0IGV4cGxpY2l0bHksIHBsZWFzZSBhZGQgdGhlIGZvbGxvd2luZyBjb2RlIHRvIHlvdXIgYXBwOlxyXG4vLyA+IGljb252LmVuYWJsZVN0cmVhbWluZ0FQSShyZXF1aXJlKCdzdHJlYW0nKSk7XHJcbmljb252LmVuYWJsZVN0cmVhbWluZ0FQSSA9IGZ1bmN0aW9uIGVuYWJsZVN0cmVhbWluZ0FQSShzdHJlYW1fbW9kdWxlKSB7XHJcbiAgICBpZiAoaWNvbnYuc3VwcG9ydHNTdHJlYW1zKVxyXG4gICAgICAgIHJldHVybjtcclxuXHJcbiAgICAvLyBEZXBlbmRlbmN5LWluamVjdCBzdHJlYW0gbW9kdWxlIHRvIGNyZWF0ZSBJY29udkxpdGUgc3RyZWFtIGNsYXNzZXMuXHJcbiAgICB2YXIgc3RyZWFtcyA9IHJlcXVpcmUoXCIuL3N0cmVhbXNcIikoc3RyZWFtX21vZHVsZSk7XHJcblxyXG4gICAgLy8gTm90IHB1YmxpYyBBUEkgeWV0LCBidXQgZXhwb3NlIHRoZSBzdHJlYW0gY2xhc3Nlcy5cclxuICAgIGljb252Lkljb252TGl0ZUVuY29kZXJTdHJlYW0gPSBzdHJlYW1zLkljb252TGl0ZUVuY29kZXJTdHJlYW07XHJcbiAgICBpY29udi5JY29udkxpdGVEZWNvZGVyU3RyZWFtID0gc3RyZWFtcy5JY29udkxpdGVEZWNvZGVyU3RyZWFtO1xyXG5cclxuICAgIC8vIFN0cmVhbWluZyBBUEkuXHJcbiAgICBpY29udi5lbmNvZGVTdHJlYW0gPSBmdW5jdGlvbiBlbmNvZGVTdHJlYW0oZW5jb2RpbmcsIG9wdGlvbnMpIHtcclxuICAgICAgICByZXR1cm4gbmV3IGljb252Lkljb252TGl0ZUVuY29kZXJTdHJlYW0oaWNvbnYuZ2V0RW5jb2RlcihlbmNvZGluZywgb3B0aW9ucyksIG9wdGlvbnMpO1xyXG4gICAgfVxyXG5cclxuICAgIGljb252LmRlY29kZVN0cmVhbSA9IGZ1bmN0aW9uIGRlY29kZVN0cmVhbShlbmNvZGluZywgb3B0aW9ucykge1xyXG4gICAgICAgIHJldHVybiBuZXcgaWNvbnYuSWNvbnZMaXRlRGVjb2RlclN0cmVhbShpY29udi5nZXREZWNvZGVyKGVuY29kaW5nLCBvcHRpb25zKSwgb3B0aW9ucyk7XHJcbiAgICB9XHJcblxyXG4gICAgaWNvbnYuc3VwcG9ydHNTdHJlYW1zID0gdHJ1ZTtcclxufVxyXG5cclxuLy8gRW5hYmxlIFN0cmVhbWluZyBBUEkgYXV0b21hdGljYWxseSBpZiAnc3RyZWFtJyBtb2R1bGUgaXMgYXZhaWxhYmxlIGFuZCBub24tZW1wdHkgKHRoZSBtYWpvcml0eSBvZiBlbnZpcm9ubWVudHMpLlxyXG52YXIgc3RyZWFtX21vZHVsZTtcclxudHJ5IHtcclxuICAgIHN0cmVhbV9tb2R1bGUgPSByZXF1aXJlKFwic3RyZWFtXCIpO1xyXG59IGNhdGNoIChlKSB7fVxyXG5cclxuaWYgKHN0cmVhbV9tb2R1bGUgJiYgc3RyZWFtX21vZHVsZS5UcmFuc2Zvcm0pIHtcclxuICAgIGljb252LmVuYWJsZVN0cmVhbWluZ0FQSShzdHJlYW1fbW9kdWxlKTtcclxuXHJcbn0gZWxzZSB7XHJcbiAgICAvLyBJbiByYXJlIGNhc2VzIHdoZXJlICdzdHJlYW0nIG1vZHVsZSBpcyBub3QgYXZhaWxhYmxlIGJ5IGRlZmF1bHQsIHRocm93IGEgaGVscGZ1bCBleGNlcHRpb24uXHJcbiAgICBpY29udi5lbmNvZGVTdHJlYW0gPSBpY29udi5kZWNvZGVTdHJlYW0gPSBmdW5jdGlvbigpIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJpY29udi1saXRlIFN0cmVhbWluZyBBUEkgaXMgbm90IGVuYWJsZWQuIFVzZSBpY29udi5lbmFibGVTdHJlYW1pbmdBUEkocmVxdWlyZSgnc3RyZWFtJykpOyB0byBlbmFibGUgaXQuXCIpO1xyXG4gICAgfTtcclxufVxyXG5cclxuaWYgKFwixIBcIiAhPSBcIlxcdTAxMDBcIikge1xyXG4gICAgY29uc29sZS5lcnJvcihcImljb252LWxpdGUgd2FybmluZzoganMgZmlsZXMgdXNlIG5vbi11dGY4IGVuY29kaW5nLiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2FzaHR1Y2hraW4vaWNvbnYtbGl0ZS93aWtpL0phdmFzY3JpcHQtc291cmNlLWZpbGUtZW5jb2RpbmdzIGZvciBtb3JlIGluZm8uXCIpO1xyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/iconv-lite/lib/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/iconv-lite/lib/streams.js":
/*!************************************************!*\
  !*** ./node_modules/iconv-lite/lib/streams.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\nvar Buffer = (__webpack_require__(/*! safer-buffer */ \"(middleware)/./node_modules/safer-buffer/safer.js\").Buffer);\r\n\r\n// NOTE: Due to 'stream' module being pretty large (~100Kb, significant in browser environments), \r\n// we opt to dependency-inject it instead of creating a hard dependency.\r\nmodule.exports = function(stream_module) {\r\n    var Transform = stream_module.Transform;\r\n\r\n    // == Encoder stream =======================================================\r\n\r\n    function IconvLiteEncoderStream(conv, options) {\r\n        this.conv = conv;\r\n        options = options || {};\r\n        options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\r\n        Transform.call(this, options);\r\n    }\r\n\r\n    IconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\r\n        constructor: { value: IconvLiteEncoderStream }\r\n    });\r\n\r\n    IconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {\r\n        if (typeof chunk != 'string')\r\n            return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\r\n        try {\r\n            var res = this.conv.write(chunk);\r\n            if (res && res.length) this.push(res);\r\n            done();\r\n        }\r\n        catch (e) {\r\n            done(e);\r\n        }\r\n    }\r\n\r\n    IconvLiteEncoderStream.prototype._flush = function(done) {\r\n        try {\r\n            var res = this.conv.end();\r\n            if (res && res.length) this.push(res);\r\n            done();\r\n        }\r\n        catch (e) {\r\n            done(e);\r\n        }\r\n    }\r\n\r\n    IconvLiteEncoderStream.prototype.collect = function(cb) {\r\n        var chunks = [];\r\n        this.on('error', cb);\r\n        this.on('data', function(chunk) { chunks.push(chunk); });\r\n        this.on('end', function() {\r\n            cb(null, Buffer.concat(chunks));\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    // == Decoder stream =======================================================\r\n\r\n    function IconvLiteDecoderStream(conv, options) {\r\n        this.conv = conv;\r\n        options = options || {};\r\n        options.encoding = this.encoding = 'utf8'; // We output strings.\r\n        Transform.call(this, options);\r\n    }\r\n\r\n    IconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\r\n        constructor: { value: IconvLiteDecoderStream }\r\n    });\r\n\r\n    IconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {\r\n        if (!Buffer.isBuffer(chunk) && !(chunk instanceof Uint8Array))\r\n            return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\r\n        try {\r\n            var res = this.conv.write(chunk);\r\n            if (res && res.length) this.push(res, this.encoding);\r\n            done();\r\n        }\r\n        catch (e) {\r\n            done(e);\r\n        }\r\n    }\r\n\r\n    IconvLiteDecoderStream.prototype._flush = function(done) {\r\n        try {\r\n            var res = this.conv.end();\r\n            if (res && res.length) this.push(res, this.encoding);                \r\n            done();\r\n        }\r\n        catch (e) {\r\n            done(e);\r\n        }\r\n    }\r\n\r\n    IconvLiteDecoderStream.prototype.collect = function(cb) {\r\n        var res = '';\r\n        this.on('error', cb);\r\n        this.on('data', function(chunk) { res += chunk; });\r\n        this.on('end', function() {\r\n            cb(null, res);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    return {\r\n        IconvLiteEncoderStream: IconvLiteEncoderStream,\r\n        IconvLiteDecoderStream: IconvLiteDecoderStream,\r\n    };\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2ljb252LWxpdGUvbGliL3N0cmVhbXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLGFBQWEscUdBQThCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUM7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkIsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLHFCQUFxQjtBQUMvRDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRDtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QixLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMsZUFBZTtBQUN6RDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2ljb252LWxpdGUvbGliL3N0cmVhbXMuanM/ZWU5YyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuXHJcbnZhciBCdWZmZXIgPSByZXF1aXJlKFwic2FmZXItYnVmZmVyXCIpLkJ1ZmZlcjtcclxuXHJcbi8vIE5PVEU6IER1ZSB0byAnc3RyZWFtJyBtb2R1bGUgYmVpbmcgcHJldHR5IGxhcmdlICh+MTAwS2IsIHNpZ25pZmljYW50IGluIGJyb3dzZXIgZW52aXJvbm1lbnRzKSwgXHJcbi8vIHdlIG9wdCB0byBkZXBlbmRlbmN5LWluamVjdCBpdCBpbnN0ZWFkIG9mIGNyZWF0aW5nIGEgaGFyZCBkZXBlbmRlbmN5LlxyXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHN0cmVhbV9tb2R1bGUpIHtcclxuICAgIHZhciBUcmFuc2Zvcm0gPSBzdHJlYW1fbW9kdWxlLlRyYW5zZm9ybTtcclxuXHJcbiAgICAvLyA9PSBFbmNvZGVyIHN0cmVhbSA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcblxyXG4gICAgZnVuY3Rpb24gSWNvbnZMaXRlRW5jb2RlclN0cmVhbShjb252LCBvcHRpb25zKSB7XHJcbiAgICAgICAgdGhpcy5jb252ID0gY29udjtcclxuICAgICAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcclxuICAgICAgICBvcHRpb25zLmRlY29kZVN0cmluZ3MgPSBmYWxzZTsgLy8gV2UgYWNjZXB0IG9ubHkgc3RyaW5ncywgc28gd2UgZG9uJ3QgbmVlZCB0byBkZWNvZGUgdGhlbS5cclxuICAgICAgICBUcmFuc2Zvcm0uY2FsbCh0aGlzLCBvcHRpb25zKTtcclxuICAgIH1cclxuXHJcbiAgICBJY29udkxpdGVFbmNvZGVyU3RyZWFtLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoVHJhbnNmb3JtLnByb3RvdHlwZSwge1xyXG4gICAgICAgIGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBJY29udkxpdGVFbmNvZGVyU3RyZWFtIH1cclxuICAgIH0pO1xyXG5cclxuICAgIEljb252TGl0ZUVuY29kZXJTdHJlYW0ucHJvdG90eXBlLl90cmFuc2Zvcm0gPSBmdW5jdGlvbihjaHVuaywgZW5jb2RpbmcsIGRvbmUpIHtcclxuICAgICAgICBpZiAodHlwZW9mIGNodW5rICE9ICdzdHJpbmcnKVxyXG4gICAgICAgICAgICByZXR1cm4gZG9uZShuZXcgRXJyb3IoXCJJY29udiBlbmNvZGluZyBzdHJlYW0gbmVlZHMgc3RyaW5ncyBhcyBpdHMgaW5wdXQuXCIpKTtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICB2YXIgcmVzID0gdGhpcy5jb252LndyaXRlKGNodW5rKTtcclxuICAgICAgICAgICAgaWYgKHJlcyAmJiByZXMubGVuZ3RoKSB0aGlzLnB1c2gocmVzKTtcclxuICAgICAgICAgICAgZG9uZSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICBkb25lKGUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBJY29udkxpdGVFbmNvZGVyU3RyZWFtLnByb3RvdHlwZS5fZmx1c2ggPSBmdW5jdGlvbihkb25lKSB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgdmFyIHJlcyA9IHRoaXMuY29udi5lbmQoKTtcclxuICAgICAgICAgICAgaWYgKHJlcyAmJiByZXMubGVuZ3RoKSB0aGlzLnB1c2gocmVzKTtcclxuICAgICAgICAgICAgZG9uZSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICBkb25lKGUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBJY29udkxpdGVFbmNvZGVyU3RyZWFtLnByb3RvdHlwZS5jb2xsZWN0ID0gZnVuY3Rpb24oY2IpIHtcclxuICAgICAgICB2YXIgY2h1bmtzID0gW107XHJcbiAgICAgICAgdGhpcy5vbignZXJyb3InLCBjYik7XHJcbiAgICAgICAgdGhpcy5vbignZGF0YScsIGZ1bmN0aW9uKGNodW5rKSB7IGNodW5rcy5wdXNoKGNodW5rKTsgfSk7XHJcbiAgICAgICAgdGhpcy5vbignZW5kJywgZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgIGNiKG51bGwsIEJ1ZmZlci5jb25jYXQoY2h1bmtzKSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIC8vID09IERlY29kZXIgc3RyZWFtID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuXHJcbiAgICBmdW5jdGlvbiBJY29udkxpdGVEZWNvZGVyU3RyZWFtKGNvbnYsIG9wdGlvbnMpIHtcclxuICAgICAgICB0aGlzLmNvbnYgPSBjb252O1xyXG4gICAgICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xyXG4gICAgICAgIG9wdGlvbnMuZW5jb2RpbmcgPSB0aGlzLmVuY29kaW5nID0gJ3V0ZjgnOyAvLyBXZSBvdXRwdXQgc3RyaW5ncy5cclxuICAgICAgICBUcmFuc2Zvcm0uY2FsbCh0aGlzLCBvcHRpb25zKTtcclxuICAgIH1cclxuXHJcbiAgICBJY29udkxpdGVEZWNvZGVyU3RyZWFtLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoVHJhbnNmb3JtLnByb3RvdHlwZSwge1xyXG4gICAgICAgIGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBJY29udkxpdGVEZWNvZGVyU3RyZWFtIH1cclxuICAgIH0pO1xyXG5cclxuICAgIEljb252TGl0ZURlY29kZXJTdHJlYW0ucHJvdG90eXBlLl90cmFuc2Zvcm0gPSBmdW5jdGlvbihjaHVuaywgZW5jb2RpbmcsIGRvbmUpIHtcclxuICAgICAgICBpZiAoIUJ1ZmZlci5pc0J1ZmZlcihjaHVuaykgJiYgIShjaHVuayBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpKVxyXG4gICAgICAgICAgICByZXR1cm4gZG9uZShuZXcgRXJyb3IoXCJJY29udiBkZWNvZGluZyBzdHJlYW0gbmVlZHMgYnVmZmVycyBhcyBpdHMgaW5wdXQuXCIpKTtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICB2YXIgcmVzID0gdGhpcy5jb252LndyaXRlKGNodW5rKTtcclxuICAgICAgICAgICAgaWYgKHJlcyAmJiByZXMubGVuZ3RoKSB0aGlzLnB1c2gocmVzLCB0aGlzLmVuY29kaW5nKTtcclxuICAgICAgICAgICAgZG9uZSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICBkb25lKGUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBJY29udkxpdGVEZWNvZGVyU3RyZWFtLnByb3RvdHlwZS5fZmx1c2ggPSBmdW5jdGlvbihkb25lKSB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgdmFyIHJlcyA9IHRoaXMuY29udi5lbmQoKTtcclxuICAgICAgICAgICAgaWYgKHJlcyAmJiByZXMubGVuZ3RoKSB0aGlzLnB1c2gocmVzLCB0aGlzLmVuY29kaW5nKTsgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGRvbmUoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY2F0Y2ggKGUpIHtcclxuICAgICAgICAgICAgZG9uZShlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgSWNvbnZMaXRlRGVjb2RlclN0cmVhbS5wcm90b3R5cGUuY29sbGVjdCA9IGZ1bmN0aW9uKGNiKSB7XHJcbiAgICAgICAgdmFyIHJlcyA9ICcnO1xyXG4gICAgICAgIHRoaXMub24oJ2Vycm9yJywgY2IpO1xyXG4gICAgICAgIHRoaXMub24oJ2RhdGEnLCBmdW5jdGlvbihjaHVuaykgeyByZXMgKz0gY2h1bms7IH0pO1xyXG4gICAgICAgIHRoaXMub24oJ2VuZCcsIGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICBjYihudWxsLCByZXMpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgSWNvbnZMaXRlRW5jb2RlclN0cmVhbTogSWNvbnZMaXRlRW5jb2RlclN0cmVhbSxcclxuICAgICAgICBJY29udkxpdGVEZWNvZGVyU3RyZWFtOiBJY29udkxpdGVEZWNvZGVyU3RyZWFtLFxyXG4gICAgfTtcclxufTtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/iconv-lite/lib/streams.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/is-property/is-property.js":
/*!*************************************************!*\
  !*** ./node_modules/is-property/is-property.js ***!
  \*************************************************/
/***/ ((module) => {

"use strict";
eval("\r\nfunction isProperty(str) {\r\n  return /^[$A-Z\\_a-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc][$A-Z\\_a-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc0-9\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19b0-\\u19c0\\u19c8\\u19c9\\u19d0-\\u19d9\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1dc0-\\u1de6\\u1dfc-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua900-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f]*$/.test(str)\r\n}\r\nmodule.exports = isProperty//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2lzLXByb3BlcnR5L2lzLXByb3BlcnR5LmpzIiwibWFwcGluZ3MiOiJBQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2lzLXByb3BlcnR5L2lzLXByb3BlcnR5LmpzPzc2NTQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCJcclxuZnVuY3Rpb24gaXNQcm9wZXJ0eShzdHIpIHtcclxuICByZXR1cm4gL15bJEEtWlxcX2EtelxceGFhXFx4YjVcXHhiYVxceGMwLVxceGQ2XFx4ZDgtXFx4ZjZcXHhmOC1cXHUwMmMxXFx1MDJjNi1cXHUwMmQxXFx1MDJlMC1cXHUwMmU0XFx1MDJlY1xcdTAyZWVcXHUwMzcwLVxcdTAzNzRcXHUwMzc2XFx1MDM3N1xcdTAzN2EtXFx1MDM3ZFxcdTAzODZcXHUwMzg4LVxcdTAzOGFcXHUwMzhjXFx1MDM4ZS1cXHUwM2ExXFx1MDNhMy1cXHUwM2Y1XFx1MDNmNy1cXHUwNDgxXFx1MDQ4YS1cXHUwNTI3XFx1MDUzMS1cXHUwNTU2XFx1MDU1OVxcdTA1NjEtXFx1MDU4N1xcdTA1ZDAtXFx1MDVlYVxcdTA1ZjAtXFx1MDVmMlxcdTA2MjAtXFx1MDY0YVxcdTA2NmVcXHUwNjZmXFx1MDY3MS1cXHUwNmQzXFx1MDZkNVxcdTA2ZTVcXHUwNmU2XFx1MDZlZVxcdTA2ZWZcXHUwNmZhLVxcdTA2ZmNcXHUwNmZmXFx1MDcxMFxcdTA3MTItXFx1MDcyZlxcdTA3NGQtXFx1MDdhNVxcdTA3YjFcXHUwN2NhLVxcdTA3ZWFcXHUwN2Y0XFx1MDdmNVxcdTA3ZmFcXHUwODAwLVxcdTA4MTVcXHUwODFhXFx1MDgyNFxcdTA4MjhcXHUwODQwLVxcdTA4NThcXHUwOGEwXFx1MDhhMi1cXHUwOGFjXFx1MDkwNC1cXHUwOTM5XFx1MDkzZFxcdTA5NTBcXHUwOTU4LVxcdTA5NjFcXHUwOTcxLVxcdTA5NzdcXHUwOTc5LVxcdTA5N2ZcXHUwOTg1LVxcdTA5OGNcXHUwOThmXFx1MDk5MFxcdTA5OTMtXFx1MDlhOFxcdTA5YWEtXFx1MDliMFxcdTA5YjJcXHUwOWI2LVxcdTA5YjlcXHUwOWJkXFx1MDljZVxcdTA5ZGNcXHUwOWRkXFx1MDlkZi1cXHUwOWUxXFx1MDlmMFxcdTA5ZjFcXHUwYTA1LVxcdTBhMGFcXHUwYTBmXFx1MGExMFxcdTBhMTMtXFx1MGEyOFxcdTBhMmEtXFx1MGEzMFxcdTBhMzJcXHUwYTMzXFx1MGEzNVxcdTBhMzZcXHUwYTM4XFx1MGEzOVxcdTBhNTktXFx1MGE1Y1xcdTBhNWVcXHUwYTcyLVxcdTBhNzRcXHUwYTg1LVxcdTBhOGRcXHUwYThmLVxcdTBhOTFcXHUwYTkzLVxcdTBhYThcXHUwYWFhLVxcdTBhYjBcXHUwYWIyXFx1MGFiM1xcdTBhYjUtXFx1MGFiOVxcdTBhYmRcXHUwYWQwXFx1MGFlMFxcdTBhZTFcXHUwYjA1LVxcdTBiMGNcXHUwYjBmXFx1MGIxMFxcdTBiMTMtXFx1MGIyOFxcdTBiMmEtXFx1MGIzMFxcdTBiMzJcXHUwYjMzXFx1MGIzNS1cXHUwYjM5XFx1MGIzZFxcdTBiNWNcXHUwYjVkXFx1MGI1Zi1cXHUwYjYxXFx1MGI3MVxcdTBiODNcXHUwYjg1LVxcdTBiOGFcXHUwYjhlLVxcdTBiOTBcXHUwYjkyLVxcdTBiOTVcXHUwYjk5XFx1MGI5YVxcdTBiOWNcXHUwYjllXFx1MGI5ZlxcdTBiYTNcXHUwYmE0XFx1MGJhOC1cXHUwYmFhXFx1MGJhZS1cXHUwYmI5XFx1MGJkMFxcdTBjMDUtXFx1MGMwY1xcdTBjMGUtXFx1MGMxMFxcdTBjMTItXFx1MGMyOFxcdTBjMmEtXFx1MGMzM1xcdTBjMzUtXFx1MGMzOVxcdTBjM2RcXHUwYzU4XFx1MGM1OVxcdTBjNjBcXHUwYzYxXFx1MGM4NS1cXHUwYzhjXFx1MGM4ZS1cXHUwYzkwXFx1MGM5Mi1cXHUwY2E4XFx1MGNhYS1cXHUwY2IzXFx1MGNiNS1cXHUwY2I5XFx1MGNiZFxcdTBjZGVcXHUwY2UwXFx1MGNlMVxcdTBjZjFcXHUwY2YyXFx1MGQwNS1cXHUwZDBjXFx1MGQwZS1cXHUwZDEwXFx1MGQxMi1cXHUwZDNhXFx1MGQzZFxcdTBkNGVcXHUwZDYwXFx1MGQ2MVxcdTBkN2EtXFx1MGQ3ZlxcdTBkODUtXFx1MGQ5NlxcdTBkOWEtXFx1MGRiMVxcdTBkYjMtXFx1MGRiYlxcdTBkYmRcXHUwZGMwLVxcdTBkYzZcXHUwZTAxLVxcdTBlMzBcXHUwZTMyXFx1MGUzM1xcdTBlNDAtXFx1MGU0NlxcdTBlODFcXHUwZTgyXFx1MGU4NFxcdTBlODdcXHUwZTg4XFx1MGU4YVxcdTBlOGRcXHUwZTk0LVxcdTBlOTdcXHUwZTk5LVxcdTBlOWZcXHUwZWExLVxcdTBlYTNcXHUwZWE1XFx1MGVhN1xcdTBlYWFcXHUwZWFiXFx1MGVhZC1cXHUwZWIwXFx1MGViMlxcdTBlYjNcXHUwZWJkXFx1MGVjMC1cXHUwZWM0XFx1MGVjNlxcdTBlZGMtXFx1MGVkZlxcdTBmMDBcXHUwZjQwLVxcdTBmNDdcXHUwZjQ5LVxcdTBmNmNcXHUwZjg4LVxcdTBmOGNcXHUxMDAwLVxcdTEwMmFcXHUxMDNmXFx1MTA1MC1cXHUxMDU1XFx1MTA1YS1cXHUxMDVkXFx1MTA2MVxcdTEwNjVcXHUxMDY2XFx1MTA2ZS1cXHUxMDcwXFx1MTA3NS1cXHUxMDgxXFx1MTA4ZVxcdTEwYTAtXFx1MTBjNVxcdTEwYzdcXHUxMGNkXFx1MTBkMC1cXHUxMGZhXFx1MTBmYy1cXHUxMjQ4XFx1MTI0YS1cXHUxMjRkXFx1MTI1MC1cXHUxMjU2XFx1MTI1OFxcdTEyNWEtXFx1MTI1ZFxcdTEyNjAtXFx1MTI4OFxcdTEyOGEtXFx1MTI4ZFxcdTEyOTAtXFx1MTJiMFxcdTEyYjItXFx1MTJiNVxcdTEyYjgtXFx1MTJiZVxcdTEyYzBcXHUxMmMyLVxcdTEyYzVcXHUxMmM4LVxcdTEyZDZcXHUxMmQ4LVxcdTEzMTBcXHUxMzEyLVxcdTEzMTVcXHUxMzE4LVxcdTEzNWFcXHUxMzgwLVxcdTEzOGZcXHUxM2EwLVxcdTEzZjRcXHUxNDAxLVxcdTE2NmNcXHUxNjZmLVxcdTE2N2ZcXHUxNjgxLVxcdTE2OWFcXHUxNmEwLVxcdTE2ZWFcXHUxNmVlLVxcdTE2ZjBcXHUxNzAwLVxcdTE3MGNcXHUxNzBlLVxcdTE3MTFcXHUxNzIwLVxcdTE3MzFcXHUxNzQwLVxcdTE3NTFcXHUxNzYwLVxcdTE3NmNcXHUxNzZlLVxcdTE3NzBcXHUxNzgwLVxcdTE3YjNcXHUxN2Q3XFx1MTdkY1xcdTE4MjAtXFx1MTg3N1xcdTE4ODAtXFx1MThhOFxcdTE4YWFcXHUxOGIwLVxcdTE4ZjVcXHUxOTAwLVxcdTE5MWNcXHUxOTUwLVxcdTE5NmRcXHUxOTcwLVxcdTE5NzRcXHUxOTgwLVxcdTE5YWJcXHUxOWMxLVxcdTE5YzdcXHUxYTAwLVxcdTFhMTZcXHUxYTIwLVxcdTFhNTRcXHUxYWE3XFx1MWIwNS1cXHUxYjMzXFx1MWI0NS1cXHUxYjRiXFx1MWI4My1cXHUxYmEwXFx1MWJhZVxcdTFiYWZcXHUxYmJhLVxcdTFiZTVcXHUxYzAwLVxcdTFjMjNcXHUxYzRkLVxcdTFjNGZcXHUxYzVhLVxcdTFjN2RcXHUxY2U5LVxcdTFjZWNcXHUxY2VlLVxcdTFjZjFcXHUxY2Y1XFx1MWNmNlxcdTFkMDAtXFx1MWRiZlxcdTFlMDAtXFx1MWYxNVxcdTFmMTgtXFx1MWYxZFxcdTFmMjAtXFx1MWY0NVxcdTFmNDgtXFx1MWY0ZFxcdTFmNTAtXFx1MWY1N1xcdTFmNTlcXHUxZjViXFx1MWY1ZFxcdTFmNWYtXFx1MWY3ZFxcdTFmODAtXFx1MWZiNFxcdTFmYjYtXFx1MWZiY1xcdTFmYmVcXHUxZmMyLVxcdTFmYzRcXHUxZmM2LVxcdTFmY2NcXHUxZmQwLVxcdTFmZDNcXHUxZmQ2LVxcdTFmZGJcXHUxZmUwLVxcdTFmZWNcXHUxZmYyLVxcdTFmZjRcXHUxZmY2LVxcdTFmZmNcXHUyMDcxXFx1MjA3ZlxcdTIwOTAtXFx1MjA5Y1xcdTIxMDJcXHUyMTA3XFx1MjEwYS1cXHUyMTEzXFx1MjExNVxcdTIxMTktXFx1MjExZFxcdTIxMjRcXHUyMTI2XFx1MjEyOFxcdTIxMmEtXFx1MjEyZFxcdTIxMmYtXFx1MjEzOVxcdTIxM2MtXFx1MjEzZlxcdTIxNDUtXFx1MjE0OVxcdTIxNGVcXHUyMTYwLVxcdTIxODhcXHUyYzAwLVxcdTJjMmVcXHUyYzMwLVxcdTJjNWVcXHUyYzYwLVxcdTJjZTRcXHUyY2ViLVxcdTJjZWVcXHUyY2YyXFx1MmNmM1xcdTJkMDAtXFx1MmQyNVxcdTJkMjdcXHUyZDJkXFx1MmQzMC1cXHUyZDY3XFx1MmQ2ZlxcdTJkODAtXFx1MmQ5NlxcdTJkYTAtXFx1MmRhNlxcdTJkYTgtXFx1MmRhZVxcdTJkYjAtXFx1MmRiNlxcdTJkYjgtXFx1MmRiZVxcdTJkYzAtXFx1MmRjNlxcdTJkYzgtXFx1MmRjZVxcdTJkZDAtXFx1MmRkNlxcdTJkZDgtXFx1MmRkZVxcdTJlMmZcXHUzMDA1LVxcdTMwMDdcXHUzMDIxLVxcdTMwMjlcXHUzMDMxLVxcdTMwMzVcXHUzMDM4LVxcdTMwM2NcXHUzMDQxLVxcdTMwOTZcXHUzMDlkLVxcdTMwOWZcXHUzMGExLVxcdTMwZmFcXHUzMGZjLVxcdTMwZmZcXHUzMTA1LVxcdTMxMmRcXHUzMTMxLVxcdTMxOGVcXHUzMWEwLVxcdTMxYmFcXHUzMWYwLVxcdTMxZmZcXHUzNDAwLVxcdTRkYjVcXHU0ZTAwLVxcdTlmY2NcXHVhMDAwLVxcdWE0OGNcXHVhNGQwLVxcdWE0ZmRcXHVhNTAwLVxcdWE2MGNcXHVhNjEwLVxcdWE2MWZcXHVhNjJhXFx1YTYyYlxcdWE2NDAtXFx1YTY2ZVxcdWE2N2YtXFx1YTY5N1xcdWE2YTAtXFx1YTZlZlxcdWE3MTctXFx1YTcxZlxcdWE3MjItXFx1YTc4OFxcdWE3OGItXFx1YTc4ZVxcdWE3OTAtXFx1YTc5M1xcdWE3YTAtXFx1YTdhYVxcdWE3ZjgtXFx1YTgwMVxcdWE4MDMtXFx1YTgwNVxcdWE4MDctXFx1YTgwYVxcdWE4MGMtXFx1YTgyMlxcdWE4NDAtXFx1YTg3M1xcdWE4ODItXFx1YThiM1xcdWE4ZjItXFx1YThmN1xcdWE4ZmJcXHVhOTBhLVxcdWE5MjVcXHVhOTMwLVxcdWE5NDZcXHVhOTYwLVxcdWE5N2NcXHVhOTg0LVxcdWE5YjJcXHVhOWNmXFx1YWEwMC1cXHVhYTI4XFx1YWE0MC1cXHVhYTQyXFx1YWE0NC1cXHVhYTRiXFx1YWE2MC1cXHVhYTc2XFx1YWE3YVxcdWFhODAtXFx1YWFhZlxcdWFhYjFcXHVhYWI1XFx1YWFiNlxcdWFhYjktXFx1YWFiZFxcdWFhYzBcXHVhYWMyXFx1YWFkYi1cXHVhYWRkXFx1YWFlMC1cXHVhYWVhXFx1YWFmMi1cXHVhYWY0XFx1YWIwMS1cXHVhYjA2XFx1YWIwOS1cXHVhYjBlXFx1YWIxMS1cXHVhYjE2XFx1YWIyMC1cXHVhYjI2XFx1YWIyOC1cXHVhYjJlXFx1YWJjMC1cXHVhYmUyXFx1YWMwMC1cXHVkN2EzXFx1ZDdiMC1cXHVkN2M2XFx1ZDdjYi1cXHVkN2ZiXFx1ZjkwMC1cXHVmYTZkXFx1ZmE3MC1cXHVmYWQ5XFx1ZmIwMC1cXHVmYjA2XFx1ZmIxMy1cXHVmYjE3XFx1ZmIxZFxcdWZiMWYtXFx1ZmIyOFxcdWZiMmEtXFx1ZmIzNlxcdWZiMzgtXFx1ZmIzY1xcdWZiM2VcXHVmYjQwXFx1ZmI0MVxcdWZiNDNcXHVmYjQ0XFx1ZmI0Ni1cXHVmYmIxXFx1ZmJkMy1cXHVmZDNkXFx1ZmQ1MC1cXHVmZDhmXFx1ZmQ5Mi1cXHVmZGM3XFx1ZmRmMC1cXHVmZGZiXFx1ZmU3MC1cXHVmZTc0XFx1ZmU3Ni1cXHVmZWZjXFx1ZmYyMS1cXHVmZjNhXFx1ZmY0MS1cXHVmZjVhXFx1ZmY2Ni1cXHVmZmJlXFx1ZmZjMi1cXHVmZmM3XFx1ZmZjYS1cXHVmZmNmXFx1ZmZkMi1cXHVmZmQ3XFx1ZmZkYS1cXHVmZmRjXVskQS1aXFxfYS16XFx4YWFcXHhiNVxceGJhXFx4YzAtXFx4ZDZcXHhkOC1cXHhmNlxceGY4LVxcdTAyYzFcXHUwMmM2LVxcdTAyZDFcXHUwMmUwLVxcdTAyZTRcXHUwMmVjXFx1MDJlZVxcdTAzNzAtXFx1MDM3NFxcdTAzNzZcXHUwMzc3XFx1MDM3YS1cXHUwMzdkXFx1MDM4NlxcdTAzODgtXFx1MDM4YVxcdTAzOGNcXHUwMzhlLVxcdTAzYTFcXHUwM2EzLVxcdTAzZjVcXHUwM2Y3LVxcdTA0ODFcXHUwNDhhLVxcdTA1MjdcXHUwNTMxLVxcdTA1NTZcXHUwNTU5XFx1MDU2MS1cXHUwNTg3XFx1MDVkMC1cXHUwNWVhXFx1MDVmMC1cXHUwNWYyXFx1MDYyMC1cXHUwNjRhXFx1MDY2ZVxcdTA2NmZcXHUwNjcxLVxcdTA2ZDNcXHUwNmQ1XFx1MDZlNVxcdTA2ZTZcXHUwNmVlXFx1MDZlZlxcdTA2ZmEtXFx1MDZmY1xcdTA2ZmZcXHUwNzEwXFx1MDcxMi1cXHUwNzJmXFx1MDc0ZC1cXHUwN2E1XFx1MDdiMVxcdTA3Y2EtXFx1MDdlYVxcdTA3ZjRcXHUwN2Y1XFx1MDdmYVxcdTA4MDAtXFx1MDgxNVxcdTA4MWFcXHUwODI0XFx1MDgyOFxcdTA4NDAtXFx1MDg1OFxcdTA4YTBcXHUwOGEyLVxcdTA4YWNcXHUwOTA0LVxcdTA5MzlcXHUwOTNkXFx1MDk1MFxcdTA5NTgtXFx1MDk2MVxcdTA5NzEtXFx1MDk3N1xcdTA5NzktXFx1MDk3ZlxcdTA5ODUtXFx1MDk4Y1xcdTA5OGZcXHUwOTkwXFx1MDk5My1cXHUwOWE4XFx1MDlhYS1cXHUwOWIwXFx1MDliMlxcdTA5YjYtXFx1MDliOVxcdTA5YmRcXHUwOWNlXFx1MDlkY1xcdTA5ZGRcXHUwOWRmLVxcdTA5ZTFcXHUwOWYwXFx1MDlmMVxcdTBhMDUtXFx1MGEwYVxcdTBhMGZcXHUwYTEwXFx1MGExMy1cXHUwYTI4XFx1MGEyYS1cXHUwYTMwXFx1MGEzMlxcdTBhMzNcXHUwYTM1XFx1MGEzNlxcdTBhMzhcXHUwYTM5XFx1MGE1OS1cXHUwYTVjXFx1MGE1ZVxcdTBhNzItXFx1MGE3NFxcdTBhODUtXFx1MGE4ZFxcdTBhOGYtXFx1MGE5MVxcdTBhOTMtXFx1MGFhOFxcdTBhYWEtXFx1MGFiMFxcdTBhYjJcXHUwYWIzXFx1MGFiNS1cXHUwYWI5XFx1MGFiZFxcdTBhZDBcXHUwYWUwXFx1MGFlMVxcdTBiMDUtXFx1MGIwY1xcdTBiMGZcXHUwYjEwXFx1MGIxMy1cXHUwYjI4XFx1MGIyYS1cXHUwYjMwXFx1MGIzMlxcdTBiMzNcXHUwYjM1LVxcdTBiMzlcXHUwYjNkXFx1MGI1Y1xcdTBiNWRcXHUwYjVmLVxcdTBiNjFcXHUwYjcxXFx1MGI4M1xcdTBiODUtXFx1MGI4YVxcdTBiOGUtXFx1MGI5MFxcdTBiOTItXFx1MGI5NVxcdTBiOTlcXHUwYjlhXFx1MGI5Y1xcdTBiOWVcXHUwYjlmXFx1MGJhM1xcdTBiYTRcXHUwYmE4LVxcdTBiYWFcXHUwYmFlLVxcdTBiYjlcXHUwYmQwXFx1MGMwNS1cXHUwYzBjXFx1MGMwZS1cXHUwYzEwXFx1MGMxMi1cXHUwYzI4XFx1MGMyYS1cXHUwYzMzXFx1MGMzNS1cXHUwYzM5XFx1MGMzZFxcdTBjNThcXHUwYzU5XFx1MGM2MFxcdTBjNjFcXHUwYzg1LVxcdTBjOGNcXHUwYzhlLVxcdTBjOTBcXHUwYzkyLVxcdTBjYThcXHUwY2FhLVxcdTBjYjNcXHUwY2I1LVxcdTBjYjlcXHUwY2JkXFx1MGNkZVxcdTBjZTBcXHUwY2UxXFx1MGNmMVxcdTBjZjJcXHUwZDA1LVxcdTBkMGNcXHUwZDBlLVxcdTBkMTBcXHUwZDEyLVxcdTBkM2FcXHUwZDNkXFx1MGQ0ZVxcdTBkNjBcXHUwZDYxXFx1MGQ3YS1cXHUwZDdmXFx1MGQ4NS1cXHUwZDk2XFx1MGQ5YS1cXHUwZGIxXFx1MGRiMy1cXHUwZGJiXFx1MGRiZFxcdTBkYzAtXFx1MGRjNlxcdTBlMDEtXFx1MGUzMFxcdTBlMzJcXHUwZTMzXFx1MGU0MC1cXHUwZTQ2XFx1MGU4MVxcdTBlODJcXHUwZTg0XFx1MGU4N1xcdTBlODhcXHUwZThhXFx1MGU4ZFxcdTBlOTQtXFx1MGU5N1xcdTBlOTktXFx1MGU5ZlxcdTBlYTEtXFx1MGVhM1xcdTBlYTVcXHUwZWE3XFx1MGVhYVxcdTBlYWJcXHUwZWFkLVxcdTBlYjBcXHUwZWIyXFx1MGViM1xcdTBlYmRcXHUwZWMwLVxcdTBlYzRcXHUwZWM2XFx1MGVkYy1cXHUwZWRmXFx1MGYwMFxcdTBmNDAtXFx1MGY0N1xcdTBmNDktXFx1MGY2Y1xcdTBmODgtXFx1MGY4Y1xcdTEwMDAtXFx1MTAyYVxcdTEwM2ZcXHUxMDUwLVxcdTEwNTVcXHUxMDVhLVxcdTEwNWRcXHUxMDYxXFx1MTA2NVxcdTEwNjZcXHUxMDZlLVxcdTEwNzBcXHUxMDc1LVxcdTEwODFcXHUxMDhlXFx1MTBhMC1cXHUxMGM1XFx1MTBjN1xcdTEwY2RcXHUxMGQwLVxcdTEwZmFcXHUxMGZjLVxcdTEyNDhcXHUxMjRhLVxcdTEyNGRcXHUxMjUwLVxcdTEyNTZcXHUxMjU4XFx1MTI1YS1cXHUxMjVkXFx1MTI2MC1cXHUxMjg4XFx1MTI4YS1cXHUxMjhkXFx1MTI5MC1cXHUxMmIwXFx1MTJiMi1cXHUxMmI1XFx1MTJiOC1cXHUxMmJlXFx1MTJjMFxcdTEyYzItXFx1MTJjNVxcdTEyYzgtXFx1MTJkNlxcdTEyZDgtXFx1MTMxMFxcdTEzMTItXFx1MTMxNVxcdTEzMTgtXFx1MTM1YVxcdTEzODAtXFx1MTM4ZlxcdTEzYTAtXFx1MTNmNFxcdTE0MDEtXFx1MTY2Y1xcdTE2NmYtXFx1MTY3ZlxcdTE2ODEtXFx1MTY5YVxcdTE2YTAtXFx1MTZlYVxcdTE2ZWUtXFx1MTZmMFxcdTE3MDAtXFx1MTcwY1xcdTE3MGUtXFx1MTcxMVxcdTE3MjAtXFx1MTczMVxcdTE3NDAtXFx1MTc1MVxcdTE3NjAtXFx1MTc2Y1xcdTE3NmUtXFx1MTc3MFxcdTE3ODAtXFx1MTdiM1xcdTE3ZDdcXHUxN2RjXFx1MTgyMC1cXHUxODc3XFx1MTg4MC1cXHUxOGE4XFx1MThhYVxcdTE4YjAtXFx1MThmNVxcdTE5MDAtXFx1MTkxY1xcdTE5NTAtXFx1MTk2ZFxcdTE5NzAtXFx1MTk3NFxcdTE5ODAtXFx1MTlhYlxcdTE5YzEtXFx1MTljN1xcdTFhMDAtXFx1MWExNlxcdTFhMjAtXFx1MWE1NFxcdTFhYTdcXHUxYjA1LVxcdTFiMzNcXHUxYjQ1LVxcdTFiNGJcXHUxYjgzLVxcdTFiYTBcXHUxYmFlXFx1MWJhZlxcdTFiYmEtXFx1MWJlNVxcdTFjMDAtXFx1MWMyM1xcdTFjNGQtXFx1MWM0ZlxcdTFjNWEtXFx1MWM3ZFxcdTFjZTktXFx1MWNlY1xcdTFjZWUtXFx1MWNmMVxcdTFjZjVcXHUxY2Y2XFx1MWQwMC1cXHUxZGJmXFx1MWUwMC1cXHUxZjE1XFx1MWYxOC1cXHUxZjFkXFx1MWYyMC1cXHUxZjQ1XFx1MWY0OC1cXHUxZjRkXFx1MWY1MC1cXHUxZjU3XFx1MWY1OVxcdTFmNWJcXHUxZjVkXFx1MWY1Zi1cXHUxZjdkXFx1MWY4MC1cXHUxZmI0XFx1MWZiNi1cXHUxZmJjXFx1MWZiZVxcdTFmYzItXFx1MWZjNFxcdTFmYzYtXFx1MWZjY1xcdTFmZDAtXFx1MWZkM1xcdTFmZDYtXFx1MWZkYlxcdTFmZTAtXFx1MWZlY1xcdTFmZjItXFx1MWZmNFxcdTFmZjYtXFx1MWZmY1xcdTIwNzFcXHUyMDdmXFx1MjA5MC1cXHUyMDljXFx1MjEwMlxcdTIxMDdcXHUyMTBhLVxcdTIxMTNcXHUyMTE1XFx1MjExOS1cXHUyMTFkXFx1MjEyNFxcdTIxMjZcXHUyMTI4XFx1MjEyYS1cXHUyMTJkXFx1MjEyZi1cXHUyMTM5XFx1MjEzYy1cXHUyMTNmXFx1MjE0NS1cXHUyMTQ5XFx1MjE0ZVxcdTIxNjAtXFx1MjE4OFxcdTJjMDAtXFx1MmMyZVxcdTJjMzAtXFx1MmM1ZVxcdTJjNjAtXFx1MmNlNFxcdTJjZWItXFx1MmNlZVxcdTJjZjJcXHUyY2YzXFx1MmQwMC1cXHUyZDI1XFx1MmQyN1xcdTJkMmRcXHUyZDMwLVxcdTJkNjdcXHUyZDZmXFx1MmQ4MC1cXHUyZDk2XFx1MmRhMC1cXHUyZGE2XFx1MmRhOC1cXHUyZGFlXFx1MmRiMC1cXHUyZGI2XFx1MmRiOC1cXHUyZGJlXFx1MmRjMC1cXHUyZGM2XFx1MmRjOC1cXHUyZGNlXFx1MmRkMC1cXHUyZGQ2XFx1MmRkOC1cXHUyZGRlXFx1MmUyZlxcdTMwMDUtXFx1MzAwN1xcdTMwMjEtXFx1MzAyOVxcdTMwMzEtXFx1MzAzNVxcdTMwMzgtXFx1MzAzY1xcdTMwNDEtXFx1MzA5NlxcdTMwOWQtXFx1MzA5ZlxcdTMwYTEtXFx1MzBmYVxcdTMwZmMtXFx1MzBmZlxcdTMxMDUtXFx1MzEyZFxcdTMxMzEtXFx1MzE4ZVxcdTMxYTAtXFx1MzFiYVxcdTMxZjAtXFx1MzFmZlxcdTM0MDAtXFx1NGRiNVxcdTRlMDAtXFx1OWZjY1xcdWEwMDAtXFx1YTQ4Y1xcdWE0ZDAtXFx1YTRmZFxcdWE1MDAtXFx1YTYwY1xcdWE2MTAtXFx1YTYxZlxcdWE2MmFcXHVhNjJiXFx1YTY0MC1cXHVhNjZlXFx1YTY3Zi1cXHVhNjk3XFx1YTZhMC1cXHVhNmVmXFx1YTcxNy1cXHVhNzFmXFx1YTcyMi1cXHVhNzg4XFx1YTc4Yi1cXHVhNzhlXFx1YTc5MC1cXHVhNzkzXFx1YTdhMC1cXHVhN2FhXFx1YTdmOC1cXHVhODAxXFx1YTgwMy1cXHVhODA1XFx1YTgwNy1cXHVhODBhXFx1YTgwYy1cXHVhODIyXFx1YTg0MC1cXHVhODczXFx1YTg4Mi1cXHVhOGIzXFx1YThmMi1cXHVhOGY3XFx1YThmYlxcdWE5MGEtXFx1YTkyNVxcdWE5MzAtXFx1YTk0NlxcdWE5NjAtXFx1YTk3Y1xcdWE5ODQtXFx1YTliMlxcdWE5Y2ZcXHVhYTAwLVxcdWFhMjhcXHVhYTQwLVxcdWFhNDJcXHVhYTQ0LVxcdWFhNGJcXHVhYTYwLVxcdWFhNzZcXHVhYTdhXFx1YWE4MC1cXHVhYWFmXFx1YWFiMVxcdWFhYjVcXHVhYWI2XFx1YWFiOS1cXHVhYWJkXFx1YWFjMFxcdWFhYzJcXHVhYWRiLVxcdWFhZGRcXHVhYWUwLVxcdWFhZWFcXHVhYWYyLVxcdWFhZjRcXHVhYjAxLVxcdWFiMDZcXHVhYjA5LVxcdWFiMGVcXHVhYjExLVxcdWFiMTZcXHVhYjIwLVxcdWFiMjZcXHVhYjI4LVxcdWFiMmVcXHVhYmMwLVxcdWFiZTJcXHVhYzAwLVxcdWQ3YTNcXHVkN2IwLVxcdWQ3YzZcXHVkN2NiLVxcdWQ3ZmJcXHVmOTAwLVxcdWZhNmRcXHVmYTcwLVxcdWZhZDlcXHVmYjAwLVxcdWZiMDZcXHVmYjEzLVxcdWZiMTdcXHVmYjFkXFx1ZmIxZi1cXHVmYjI4XFx1ZmIyYS1cXHVmYjM2XFx1ZmIzOC1cXHVmYjNjXFx1ZmIzZVxcdWZiNDBcXHVmYjQxXFx1ZmI0M1xcdWZiNDRcXHVmYjQ2LVxcdWZiYjFcXHVmYmQzLVxcdWZkM2RcXHVmZDUwLVxcdWZkOGZcXHVmZDkyLVxcdWZkYzdcXHVmZGYwLVxcdWZkZmJcXHVmZTcwLVxcdWZlNzRcXHVmZTc2LVxcdWZlZmNcXHVmZjIxLVxcdWZmM2FcXHVmZjQxLVxcdWZmNWFcXHVmZjY2LVxcdWZmYmVcXHVmZmMyLVxcdWZmYzdcXHVmZmNhLVxcdWZmY2ZcXHVmZmQyLVxcdWZmZDdcXHVmZmRhLVxcdWZmZGMwLTlcXHUwMzAwLVxcdTAzNmZcXHUwNDgzLVxcdTA0ODdcXHUwNTkxLVxcdTA1YmRcXHUwNWJmXFx1MDVjMVxcdTA1YzJcXHUwNWM0XFx1MDVjNVxcdTA1YzdcXHUwNjEwLVxcdTA2MWFcXHUwNjRiLVxcdTA2NjlcXHUwNjcwXFx1MDZkNi1cXHUwNmRjXFx1MDZkZi1cXHUwNmU0XFx1MDZlN1xcdTA2ZThcXHUwNmVhLVxcdTA2ZWRcXHUwNmYwLVxcdTA2ZjlcXHUwNzExXFx1MDczMC1cXHUwNzRhXFx1MDdhNi1cXHUwN2IwXFx1MDdjMC1cXHUwN2M5XFx1MDdlYi1cXHUwN2YzXFx1MDgxNi1cXHUwODE5XFx1MDgxYi1cXHUwODIzXFx1MDgyNS1cXHUwODI3XFx1MDgyOS1cXHUwODJkXFx1MDg1OS1cXHUwODViXFx1MDhlNC1cXHUwOGZlXFx1MDkwMC1cXHUwOTAzXFx1MDkzYS1cXHUwOTNjXFx1MDkzZS1cXHUwOTRmXFx1MDk1MS1cXHUwOTU3XFx1MDk2MlxcdTA5NjNcXHUwOTY2LVxcdTA5NmZcXHUwOTgxLVxcdTA5ODNcXHUwOWJjXFx1MDliZS1cXHUwOWM0XFx1MDljN1xcdTA5YzhcXHUwOWNiLVxcdTA5Y2RcXHUwOWQ3XFx1MDllMlxcdTA5ZTNcXHUwOWU2LVxcdTA5ZWZcXHUwYTAxLVxcdTBhMDNcXHUwYTNjXFx1MGEzZS1cXHUwYTQyXFx1MGE0N1xcdTBhNDhcXHUwYTRiLVxcdTBhNGRcXHUwYTUxXFx1MGE2Ni1cXHUwYTcxXFx1MGE3NVxcdTBhODEtXFx1MGE4M1xcdTBhYmNcXHUwYWJlLVxcdTBhYzVcXHUwYWM3LVxcdTBhYzlcXHUwYWNiLVxcdTBhY2RcXHUwYWUyXFx1MGFlM1xcdTBhZTYtXFx1MGFlZlxcdTBiMDEtXFx1MGIwM1xcdTBiM2NcXHUwYjNlLVxcdTBiNDRcXHUwYjQ3XFx1MGI0OFxcdTBiNGItXFx1MGI0ZFxcdTBiNTZcXHUwYjU3XFx1MGI2MlxcdTBiNjNcXHUwYjY2LVxcdTBiNmZcXHUwYjgyXFx1MGJiZS1cXHUwYmMyXFx1MGJjNi1cXHUwYmM4XFx1MGJjYS1cXHUwYmNkXFx1MGJkN1xcdTBiZTYtXFx1MGJlZlxcdTBjMDEtXFx1MGMwM1xcdTBjM2UtXFx1MGM0NFxcdTBjNDYtXFx1MGM0OFxcdTBjNGEtXFx1MGM0ZFxcdTBjNTVcXHUwYzU2XFx1MGM2MlxcdTBjNjNcXHUwYzY2LVxcdTBjNmZcXHUwYzgyXFx1MGM4M1xcdTBjYmNcXHUwY2JlLVxcdTBjYzRcXHUwY2M2LVxcdTBjYzhcXHUwY2NhLVxcdTBjY2RcXHUwY2Q1XFx1MGNkNlxcdTBjZTJcXHUwY2UzXFx1MGNlNi1cXHUwY2VmXFx1MGQwMlxcdTBkMDNcXHUwZDNlLVxcdTBkNDRcXHUwZDQ2LVxcdTBkNDhcXHUwZDRhLVxcdTBkNGRcXHUwZDU3XFx1MGQ2MlxcdTBkNjNcXHUwZDY2LVxcdTBkNmZcXHUwZDgyXFx1MGQ4M1xcdTBkY2FcXHUwZGNmLVxcdTBkZDRcXHUwZGQ2XFx1MGRkOC1cXHUwZGRmXFx1MGRmMlxcdTBkZjNcXHUwZTMxXFx1MGUzNC1cXHUwZTNhXFx1MGU0Ny1cXHUwZTRlXFx1MGU1MC1cXHUwZTU5XFx1MGViMVxcdTBlYjQtXFx1MGViOVxcdTBlYmJcXHUwZWJjXFx1MGVjOC1cXHUwZWNkXFx1MGVkMC1cXHUwZWQ5XFx1MGYxOFxcdTBmMTlcXHUwZjIwLVxcdTBmMjlcXHUwZjM1XFx1MGYzN1xcdTBmMzlcXHUwZjNlXFx1MGYzZlxcdTBmNzEtXFx1MGY4NFxcdTBmODZcXHUwZjg3XFx1MGY4ZC1cXHUwZjk3XFx1MGY5OS1cXHUwZmJjXFx1MGZjNlxcdTEwMmItXFx1MTAzZVxcdTEwNDAtXFx1MTA0OVxcdTEwNTYtXFx1MTA1OVxcdTEwNWUtXFx1MTA2MFxcdTEwNjItXFx1MTA2NFxcdTEwNjctXFx1MTA2ZFxcdTEwNzEtXFx1MTA3NFxcdTEwODItXFx1MTA4ZFxcdTEwOGYtXFx1MTA5ZFxcdTEzNWQtXFx1MTM1ZlxcdTE3MTItXFx1MTcxNFxcdTE3MzItXFx1MTczNFxcdTE3NTJcXHUxNzUzXFx1MTc3MlxcdTE3NzNcXHUxN2I0LVxcdTE3ZDNcXHUxN2RkXFx1MTdlMC1cXHUxN2U5XFx1MTgwYi1cXHUxODBkXFx1MTgxMC1cXHUxODE5XFx1MThhOVxcdTE5MjAtXFx1MTkyYlxcdTE5MzAtXFx1MTkzYlxcdTE5NDYtXFx1MTk0ZlxcdTE5YjAtXFx1MTljMFxcdTE5YzhcXHUxOWM5XFx1MTlkMC1cXHUxOWQ5XFx1MWExNy1cXHUxYTFiXFx1MWE1NS1cXHUxYTVlXFx1MWE2MC1cXHUxYTdjXFx1MWE3Zi1cXHUxYTg5XFx1MWE5MC1cXHUxYTk5XFx1MWIwMC1cXHUxYjA0XFx1MWIzNC1cXHUxYjQ0XFx1MWI1MC1cXHUxYjU5XFx1MWI2Yi1cXHUxYjczXFx1MWI4MC1cXHUxYjgyXFx1MWJhMS1cXHUxYmFkXFx1MWJiMC1cXHUxYmI5XFx1MWJlNi1cXHUxYmYzXFx1MWMyNC1cXHUxYzM3XFx1MWM0MC1cXHUxYzQ5XFx1MWM1MC1cXHUxYzU5XFx1MWNkMC1cXHUxY2QyXFx1MWNkNC1cXHUxY2U4XFx1MWNlZFxcdTFjZjItXFx1MWNmNFxcdTFkYzAtXFx1MWRlNlxcdTFkZmMtXFx1MWRmZlxcdTIwMGNcXHUyMDBkXFx1MjAzZlxcdTIwNDBcXHUyMDU0XFx1MjBkMC1cXHUyMGRjXFx1MjBlMVxcdTIwZTUtXFx1MjBmMFxcdTJjZWYtXFx1MmNmMVxcdTJkN2ZcXHUyZGUwLVxcdTJkZmZcXHUzMDJhLVxcdTMwMmZcXHUzMDk5XFx1MzA5YVxcdWE2MjAtXFx1YTYyOVxcdWE2NmZcXHVhNjc0LVxcdWE2N2RcXHVhNjlmXFx1YTZmMFxcdWE2ZjFcXHVhODAyXFx1YTgwNlxcdWE4MGJcXHVhODIzLVxcdWE4MjdcXHVhODgwXFx1YTg4MVxcdWE4YjQtXFx1YThjNFxcdWE4ZDAtXFx1YThkOVxcdWE4ZTAtXFx1YThmMVxcdWE5MDAtXFx1YTkwOVxcdWE5MjYtXFx1YTkyZFxcdWE5NDctXFx1YTk1M1xcdWE5ODAtXFx1YTk4M1xcdWE5YjMtXFx1YTljMFxcdWE5ZDAtXFx1YTlkOVxcdWFhMjktXFx1YWEzNlxcdWFhNDNcXHVhYTRjXFx1YWE0ZFxcdWFhNTAtXFx1YWE1OVxcdWFhN2JcXHVhYWIwXFx1YWFiMi1cXHVhYWI0XFx1YWFiN1xcdWFhYjhcXHVhYWJlXFx1YWFiZlxcdWFhYzFcXHVhYWViLVxcdWFhZWZcXHVhYWY1XFx1YWFmNlxcdWFiZTMtXFx1YWJlYVxcdWFiZWNcXHVhYmVkXFx1YWJmMC1cXHVhYmY5XFx1ZmIxZVxcdWZlMDAtXFx1ZmUwZlxcdWZlMjAtXFx1ZmUyNlxcdWZlMzNcXHVmZTM0XFx1ZmU0ZC1cXHVmZTRmXFx1ZmYxMC1cXHVmZjE5XFx1ZmYzZl0qJC8udGVzdChzdHIpXHJcbn1cclxubW9kdWxlLmV4cG9ydHMgPSBpc1Byb3BlcnR5Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/is-property/is-property.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/lru.min/lib/index.js":
/*!*******************************************!*\
  !*** ./node_modules/lru.min/lib/index.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.createLRU = void 0;\r\nconst createLRU = (options) => {\r\n    let { max } = options;\r\n    if (!(Number.isInteger(max) && max > 0))\r\n        throw new TypeError('`max` must be a positive integer');\r\n    let size = 0;\r\n    let head = 0;\r\n    let tail = 0;\r\n    let free = [];\r\n    const { onEviction } = options;\r\n    const keyMap = new Map();\r\n    const keyList = new Array(max).fill(undefined);\r\n    const valList = new Array(max).fill(undefined);\r\n    const next = new Array(max).fill(0);\r\n    const prev = new Array(max).fill(0);\r\n    const setTail = (index, type) => {\r\n        if (index === tail)\r\n            return;\r\n        const nextIndex = next[index];\r\n        const prevIndex = prev[index];\r\n        if (index === head)\r\n            head = nextIndex;\r\n        else if (type === 'get' || prevIndex !== 0)\r\n            next[prevIndex] = nextIndex;\r\n        if (nextIndex !== 0)\r\n            prev[nextIndex] = prevIndex;\r\n        next[tail] = index;\r\n        prev[index] = tail;\r\n        next[index] = 0;\r\n        tail = index;\r\n    };\r\n    const _evict = () => {\r\n        const evictHead = head;\r\n        const key = keyList[evictHead];\r\n        onEviction === null || onEviction === void 0 ? void 0 : onEviction(key, valList[evictHead]);\r\n        keyMap.delete(key);\r\n        keyList[evictHead] = undefined;\r\n        valList[evictHead] = undefined;\r\n        head = next[evictHead];\r\n        if (head !== 0)\r\n            prev[head] = 0;\r\n        size--;\r\n        if (size === 0)\r\n            head = tail = 0;\r\n        free.push(evictHead);\r\n        return evictHead;\r\n    };\r\n    return {\r\n        /** Adds a key-value pair to the cache. Updates the value if the key already exists. */\r\n        set(key, value) {\r\n            if (key === undefined)\r\n                return;\r\n            let index = keyMap.get(key);\r\n            if (index === undefined) {\r\n                index = size === max ? _evict() : free.length > 0 ? free.pop() : size;\r\n                keyMap.set(key, index);\r\n                keyList[index] = key;\r\n                size++;\r\n            }\r\n            else\r\n                onEviction === null || onEviction === void 0 ? void 0 : onEviction(key, valList[index]);\r\n            valList[index] = value;\r\n            if (size === 1)\r\n                head = tail = index;\r\n            else\r\n                setTail(index, 'set');\r\n        },\r\n        /** Retrieves the value for a given key and moves the key to the most recent position. */\r\n        get(key) {\r\n            const index = keyMap.get(key);\r\n            if (index === undefined)\r\n                return;\r\n            if (index !== tail)\r\n                setTail(index, 'get');\r\n            return valList[index];\r\n        },\r\n        /** Retrieves the value for a given key without changing its position. */\r\n        peek: (key) => {\r\n            const index = keyMap.get(key);\r\n            return index !== undefined ? valList[index] : undefined;\r\n        },\r\n        /** Checks if a key exists in the cache. */\r\n        has: (key) => keyMap.has(key),\r\n        /** Iterates over all keys in the cache, from most recent to least recent. */\r\n        *keys() {\r\n            let current = tail;\r\n            for (let i = 0; i < size; i++) {\r\n                yield keyList[current];\r\n                current = prev[current];\r\n            }\r\n        },\r\n        /** Iterates over all values in the cache, from most recent to least recent. */\r\n        *values() {\r\n            let current = tail;\r\n            for (let i = 0; i < size; i++) {\r\n                yield valList[current];\r\n                current = prev[current];\r\n            }\r\n        },\r\n        /** Iterates over `[key, value]` pairs in the cache, from most recent to least recent. */\r\n        *entries() {\r\n            let current = tail;\r\n            for (let i = 0; i < size; i++) {\r\n                yield [keyList[current], valList[current]];\r\n                current = prev[current];\r\n            }\r\n        },\r\n        /** Iterates over each value-key pair in the cache, from most recent to least recent. */\r\n        forEach: (callback) => {\r\n            let current = tail;\r\n            for (let i = 0; i < size; i++) {\r\n                const key = keyList[current];\r\n                const value = valList[current];\r\n                callback(value, key);\r\n                current = prev[current];\r\n            }\r\n        },\r\n        /** Deletes a key-value pair from the cache. */\r\n        delete(key) {\r\n            const index = keyMap.get(key);\r\n            if (index === undefined)\r\n                return false;\r\n            onEviction === null || onEviction === void 0 ? void 0 : onEviction(key, valList[index]);\r\n            keyMap.delete(key);\r\n            free.push(index);\r\n            keyList[index] = undefined;\r\n            valList[index] = undefined;\r\n            const prevIndex = prev[index];\r\n            const nextIndex = next[index];\r\n            if (prevIndex !== 0)\r\n                next[prevIndex] = nextIndex;\r\n            if (nextIndex !== 0)\r\n                prev[nextIndex] = prevIndex;\r\n            if (index === head)\r\n                head = nextIndex;\r\n            if (index === tail)\r\n                tail = prevIndex;\r\n            size--;\r\n            return true;\r\n        },\r\n        /** Evicts the oldest item or the specified number of the oldest items from the cache. */\r\n        evict: (number) => {\r\n            let toPrune = Math.min(number, size);\r\n            while (toPrune > 0) {\r\n                _evict();\r\n                toPrune--;\r\n            }\r\n        },\r\n        /** Clears all key-value pairs from the cache. */\r\n        clear() {\r\n            if (typeof onEviction === 'function') {\r\n                const iterator = keyMap.values();\r\n                for (let result = iterator.next(); !result.done; result = iterator.next())\r\n                    onEviction(keyList[result.value], valList[result.value]);\r\n            }\r\n            keyMap.clear();\r\n            keyList.fill(undefined);\r\n            valList.fill(undefined);\r\n            free = [];\r\n            size = 0;\r\n            head = tail = 0;\r\n        },\r\n        /** Resizes the cache to a new maximum size, evicting items if necessary. */\r\n        resize: (newMax) => {\r\n            if (!(Number.isInteger(newMax) && newMax > 0))\r\n                throw new TypeError('`max` must be a positive integer');\r\n            if (newMax === max)\r\n                return;\r\n            if (newMax < max) {\r\n                let current = tail;\r\n                const preserve = Math.min(size, newMax);\r\n                const remove = size - preserve;\r\n                const newKeyList = new Array(newMax);\r\n                const newValList = new Array(newMax);\r\n                const newNext = new Array(newMax);\r\n                const newPrev = new Array(newMax);\r\n                for (let i = 1; i <= remove; i++)\r\n                    onEviction === null || onEviction === void 0 ? void 0 : onEviction(keyList[i], valList[i]);\r\n                for (let i = preserve - 1; i >= 0; i--) {\r\n                    newKeyList[i] = keyList[current];\r\n                    newValList[i] = valList[current];\r\n                    newNext[i] = i + 1;\r\n                    newPrev[i] = i - 1;\r\n                    keyMap.set(newKeyList[i], i);\r\n                    current = prev[current];\r\n                }\r\n                head = 0;\r\n                tail = preserve - 1;\r\n                size = preserve;\r\n                keyList.length = newMax;\r\n                valList.length = newMax;\r\n                next.length = newMax;\r\n                prev.length = newMax;\r\n                for (let i = 0; i < preserve; i++) {\r\n                    keyList[i] = newKeyList[i];\r\n                    valList[i] = newValList[i];\r\n                    next[i] = newNext[i];\r\n                    prev[i] = newPrev[i];\r\n                }\r\n                free = [];\r\n                for (let i = preserve; i < newMax; i++)\r\n                    free.push(i);\r\n            }\r\n            else {\r\n                const fill = newMax - max;\r\n                keyList.push(...new Array(fill).fill(undefined));\r\n                valList.push(...new Array(fill).fill(undefined));\r\n                next.push(...new Array(fill).fill(0));\r\n                prev.push(...new Array(fill).fill(0));\r\n            }\r\n            max = newMax;\r\n        },\r\n        /** Returns the maximum number of items that can be stored in the cache. */\r\n        get max() {\r\n            return max;\r\n        },\r\n        /** Returns the number of items currently stored in the cache. */\r\n        get size() {\r\n            return size;\r\n        },\r\n        /** Returns the number of currently available slots in the cache before reaching the maximum size. */\r\n        get available() {\r\n            return max - size;\r\n        },\r\n    };\r\n};\r\nexports.createLRU = createLRU;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2xydS5taW4vbGliL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQjtBQUNqQjtBQUNBLFVBQVUsTUFBTTtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGFBQWE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsVUFBVTtBQUN0QztBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLFVBQVU7QUFDdEM7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixVQUFVO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsVUFBVTtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELGNBQWM7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLGFBQWE7QUFDN0M7QUFDQSwyQ0FBMkMsUUFBUTtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLGNBQWM7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLFlBQVk7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbHJ1Lm1pbi9saWIvaW5kZXguanM/M2Y5NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5leHBvcnRzLmNyZWF0ZUxSVSA9IHZvaWQgMDtcclxuY29uc3QgY3JlYXRlTFJVID0gKG9wdGlvbnMpID0+IHtcclxuICAgIGxldCB7IG1heCB9ID0gb3B0aW9ucztcclxuICAgIGlmICghKE51bWJlci5pc0ludGVnZXIobWF4KSAmJiBtYXggPiAwKSlcclxuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdgbWF4YCBtdXN0IGJlIGEgcG9zaXRpdmUgaW50ZWdlcicpO1xyXG4gICAgbGV0IHNpemUgPSAwO1xyXG4gICAgbGV0IGhlYWQgPSAwO1xyXG4gICAgbGV0IHRhaWwgPSAwO1xyXG4gICAgbGV0IGZyZWUgPSBbXTtcclxuICAgIGNvbnN0IHsgb25FdmljdGlvbiB9ID0gb3B0aW9ucztcclxuICAgIGNvbnN0IGtleU1hcCA9IG5ldyBNYXAoKTtcclxuICAgIGNvbnN0IGtleUxpc3QgPSBuZXcgQXJyYXkobWF4KS5maWxsKHVuZGVmaW5lZCk7XHJcbiAgICBjb25zdCB2YWxMaXN0ID0gbmV3IEFycmF5KG1heCkuZmlsbCh1bmRlZmluZWQpO1xyXG4gICAgY29uc3QgbmV4dCA9IG5ldyBBcnJheShtYXgpLmZpbGwoMCk7XHJcbiAgICBjb25zdCBwcmV2ID0gbmV3IEFycmF5KG1heCkuZmlsbCgwKTtcclxuICAgIGNvbnN0IHNldFRhaWwgPSAoaW5kZXgsIHR5cGUpID0+IHtcclxuICAgICAgICBpZiAoaW5kZXggPT09IHRhaWwpXHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICBjb25zdCBuZXh0SW5kZXggPSBuZXh0W2luZGV4XTtcclxuICAgICAgICBjb25zdCBwcmV2SW5kZXggPSBwcmV2W2luZGV4XTtcclxuICAgICAgICBpZiAoaW5kZXggPT09IGhlYWQpXHJcbiAgICAgICAgICAgIGhlYWQgPSBuZXh0SW5kZXg7XHJcbiAgICAgICAgZWxzZSBpZiAodHlwZSA9PT0gJ2dldCcgfHwgcHJldkluZGV4ICE9PSAwKVxyXG4gICAgICAgICAgICBuZXh0W3ByZXZJbmRleF0gPSBuZXh0SW5kZXg7XHJcbiAgICAgICAgaWYgKG5leHRJbmRleCAhPT0gMClcclxuICAgICAgICAgICAgcHJldltuZXh0SW5kZXhdID0gcHJldkluZGV4O1xyXG4gICAgICAgIG5leHRbdGFpbF0gPSBpbmRleDtcclxuICAgICAgICBwcmV2W2luZGV4XSA9IHRhaWw7XHJcbiAgICAgICAgbmV4dFtpbmRleF0gPSAwO1xyXG4gICAgICAgIHRhaWwgPSBpbmRleDtcclxuICAgIH07XHJcbiAgICBjb25zdCBfZXZpY3QgPSAoKSA9PiB7XHJcbiAgICAgICAgY29uc3QgZXZpY3RIZWFkID0gaGVhZDtcclxuICAgICAgICBjb25zdCBrZXkgPSBrZXlMaXN0W2V2aWN0SGVhZF07XHJcbiAgICAgICAgb25FdmljdGlvbiA9PT0gbnVsbCB8fCBvbkV2aWN0aW9uID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvbkV2aWN0aW9uKGtleSwgdmFsTGlzdFtldmljdEhlYWRdKTtcclxuICAgICAgICBrZXlNYXAuZGVsZXRlKGtleSk7XHJcbiAgICAgICAga2V5TGlzdFtldmljdEhlYWRdID0gdW5kZWZpbmVkO1xyXG4gICAgICAgIHZhbExpc3RbZXZpY3RIZWFkXSA9IHVuZGVmaW5lZDtcclxuICAgICAgICBoZWFkID0gbmV4dFtldmljdEhlYWRdO1xyXG4gICAgICAgIGlmIChoZWFkICE9PSAwKVxyXG4gICAgICAgICAgICBwcmV2W2hlYWRdID0gMDtcclxuICAgICAgICBzaXplLS07XHJcbiAgICAgICAgaWYgKHNpemUgPT09IDApXHJcbiAgICAgICAgICAgIGhlYWQgPSB0YWlsID0gMDtcclxuICAgICAgICBmcmVlLnB1c2goZXZpY3RIZWFkKTtcclxuICAgICAgICByZXR1cm4gZXZpY3RIZWFkO1xyXG4gICAgfTtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgLyoqIEFkZHMgYSBrZXktdmFsdWUgcGFpciB0byB0aGUgY2FjaGUuIFVwZGF0ZXMgdGhlIHZhbHVlIGlmIHRoZSBrZXkgYWxyZWFkeSBleGlzdHMuICovXHJcbiAgICAgICAgc2V0KGtleSwgdmFsdWUpIHtcclxuICAgICAgICAgICAgaWYgKGtleSA9PT0gdW5kZWZpbmVkKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICBsZXQgaW5kZXggPSBrZXlNYXAuZ2V0KGtleSk7XHJcbiAgICAgICAgICAgIGlmIChpbmRleCA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgICAgICBpbmRleCA9IHNpemUgPT09IG1heCA/IF9ldmljdCgpIDogZnJlZS5sZW5ndGggPiAwID8gZnJlZS5wb3AoKSA6IHNpemU7XHJcbiAgICAgICAgICAgICAgICBrZXlNYXAuc2V0KGtleSwgaW5kZXgpO1xyXG4gICAgICAgICAgICAgICAga2V5TGlzdFtpbmRleF0gPSBrZXk7XHJcbiAgICAgICAgICAgICAgICBzaXplKys7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAgICAgb25FdmljdGlvbiA9PT0gbnVsbCB8fCBvbkV2aWN0aW9uID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvbkV2aWN0aW9uKGtleSwgdmFsTGlzdFtpbmRleF0pO1xyXG4gICAgICAgICAgICB2YWxMaXN0W2luZGV4XSA9IHZhbHVlO1xyXG4gICAgICAgICAgICBpZiAoc2l6ZSA9PT0gMSlcclxuICAgICAgICAgICAgICAgIGhlYWQgPSB0YWlsID0gaW5kZXg7XHJcbiAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgICAgIHNldFRhaWwoaW5kZXgsICdzZXQnKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIC8qKiBSZXRyaWV2ZXMgdGhlIHZhbHVlIGZvciBhIGdpdmVuIGtleSBhbmQgbW92ZXMgdGhlIGtleSB0byB0aGUgbW9zdCByZWNlbnQgcG9zaXRpb24uICovXHJcbiAgICAgICAgZ2V0KGtleSkge1xyXG4gICAgICAgICAgICBjb25zdCBpbmRleCA9IGtleU1hcC5nZXQoa2V5KTtcclxuICAgICAgICAgICAgaWYgKGluZGV4ID09PSB1bmRlZmluZWQpXHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIGlmIChpbmRleCAhPT0gdGFpbClcclxuICAgICAgICAgICAgICAgIHNldFRhaWwoaW5kZXgsICdnZXQnKTtcclxuICAgICAgICAgICAgcmV0dXJuIHZhbExpc3RbaW5kZXhdO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLyoqIFJldHJpZXZlcyB0aGUgdmFsdWUgZm9yIGEgZ2l2ZW4ga2V5IHdpdGhvdXQgY2hhbmdpbmcgaXRzIHBvc2l0aW9uLiAqL1xyXG4gICAgICAgIHBlZWs6IChrZXkpID0+IHtcclxuICAgICAgICAgICAgY29uc3QgaW5kZXggPSBrZXlNYXAuZ2V0KGtleSk7XHJcbiAgICAgICAgICAgIHJldHVybiBpbmRleCAhPT0gdW5kZWZpbmVkID8gdmFsTGlzdFtpbmRleF0gOiB1bmRlZmluZWQ7XHJcbiAgICAgICAgfSxcclxuICAgICAgICAvKiogQ2hlY2tzIGlmIGEga2V5IGV4aXN0cyBpbiB0aGUgY2FjaGUuICovXHJcbiAgICAgICAgaGFzOiAoa2V5KSA9PiBrZXlNYXAuaGFzKGtleSksXHJcbiAgICAgICAgLyoqIEl0ZXJhdGVzIG92ZXIgYWxsIGtleXMgaW4gdGhlIGNhY2hlLCBmcm9tIG1vc3QgcmVjZW50IHRvIGxlYXN0IHJlY2VudC4gKi9cclxuICAgICAgICAqa2V5cygpIHtcclxuICAgICAgICAgICAgbGV0IGN1cnJlbnQgPSB0YWlsO1xyXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNpemU7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgeWllbGQga2V5TGlzdFtjdXJyZW50XTtcclxuICAgICAgICAgICAgICAgIGN1cnJlbnQgPSBwcmV2W2N1cnJlbnRdO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICAvKiogSXRlcmF0ZXMgb3ZlciBhbGwgdmFsdWVzIGluIHRoZSBjYWNoZSwgZnJvbSBtb3N0IHJlY2VudCB0byBsZWFzdCByZWNlbnQuICovXHJcbiAgICAgICAgKnZhbHVlcygpIHtcclxuICAgICAgICAgICAgbGV0IGN1cnJlbnQgPSB0YWlsO1xyXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNpemU7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgeWllbGQgdmFsTGlzdFtjdXJyZW50XTtcclxuICAgICAgICAgICAgICAgIGN1cnJlbnQgPSBwcmV2W2N1cnJlbnRdO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICAvKiogSXRlcmF0ZXMgb3ZlciBgW2tleSwgdmFsdWVdYCBwYWlycyBpbiB0aGUgY2FjaGUsIGZyb20gbW9zdCByZWNlbnQgdG8gbGVhc3QgcmVjZW50LiAqL1xyXG4gICAgICAgICplbnRyaWVzKCkge1xyXG4gICAgICAgICAgICBsZXQgY3VycmVudCA9IHRhaWw7XHJcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2l6ZTsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICB5aWVsZCBba2V5TGlzdFtjdXJyZW50XSwgdmFsTGlzdFtjdXJyZW50XV07XHJcbiAgICAgICAgICAgICAgICBjdXJyZW50ID0gcHJldltjdXJyZW50XTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLyoqIEl0ZXJhdGVzIG92ZXIgZWFjaCB2YWx1ZS1rZXkgcGFpciBpbiB0aGUgY2FjaGUsIGZyb20gbW9zdCByZWNlbnQgdG8gbGVhc3QgcmVjZW50LiAqL1xyXG4gICAgICAgIGZvckVhY2g6IChjYWxsYmFjaykgPT4ge1xyXG4gICAgICAgICAgICBsZXQgY3VycmVudCA9IHRhaWw7XHJcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2l6ZTsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBrZXkgPSBrZXlMaXN0W2N1cnJlbnRdO1xyXG4gICAgICAgICAgICAgICAgY29uc3QgdmFsdWUgPSB2YWxMaXN0W2N1cnJlbnRdO1xyXG4gICAgICAgICAgICAgICAgY2FsbGJhY2sodmFsdWUsIGtleSk7XHJcbiAgICAgICAgICAgICAgICBjdXJyZW50ID0gcHJldltjdXJyZW50XTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLyoqIERlbGV0ZXMgYSBrZXktdmFsdWUgcGFpciBmcm9tIHRoZSBjYWNoZS4gKi9cclxuICAgICAgICBkZWxldGUoa2V5KSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGluZGV4ID0ga2V5TWFwLmdldChrZXkpO1xyXG4gICAgICAgICAgICBpZiAoaW5kZXggPT09IHVuZGVmaW5lZClcclxuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgb25FdmljdGlvbiA9PT0gbnVsbCB8fCBvbkV2aWN0aW9uID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvbkV2aWN0aW9uKGtleSwgdmFsTGlzdFtpbmRleF0pO1xyXG4gICAgICAgICAgICBrZXlNYXAuZGVsZXRlKGtleSk7XHJcbiAgICAgICAgICAgIGZyZWUucHVzaChpbmRleCk7XHJcbiAgICAgICAgICAgIGtleUxpc3RbaW5kZXhdID0gdW5kZWZpbmVkO1xyXG4gICAgICAgICAgICB2YWxMaXN0W2luZGV4XSA9IHVuZGVmaW5lZDtcclxuICAgICAgICAgICAgY29uc3QgcHJldkluZGV4ID0gcHJldltpbmRleF07XHJcbiAgICAgICAgICAgIGNvbnN0IG5leHRJbmRleCA9IG5leHRbaW5kZXhdO1xyXG4gICAgICAgICAgICBpZiAocHJldkluZGV4ICE9PSAwKVxyXG4gICAgICAgICAgICAgICAgbmV4dFtwcmV2SW5kZXhdID0gbmV4dEluZGV4O1xyXG4gICAgICAgICAgICBpZiAobmV4dEluZGV4ICE9PSAwKVxyXG4gICAgICAgICAgICAgICAgcHJldltuZXh0SW5kZXhdID0gcHJldkluZGV4O1xyXG4gICAgICAgICAgICBpZiAoaW5kZXggPT09IGhlYWQpXHJcbiAgICAgICAgICAgICAgICBoZWFkID0gbmV4dEluZGV4O1xyXG4gICAgICAgICAgICBpZiAoaW5kZXggPT09IHRhaWwpXHJcbiAgICAgICAgICAgICAgICB0YWlsID0gcHJldkluZGV4O1xyXG4gICAgICAgICAgICBzaXplLS07XHJcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLyoqIEV2aWN0cyB0aGUgb2xkZXN0IGl0ZW0gb3IgdGhlIHNwZWNpZmllZCBudW1iZXIgb2YgdGhlIG9sZGVzdCBpdGVtcyBmcm9tIHRoZSBjYWNoZS4gKi9cclxuICAgICAgICBldmljdDogKG51bWJlcikgPT4ge1xyXG4gICAgICAgICAgICBsZXQgdG9QcnVuZSA9IE1hdGgubWluKG51bWJlciwgc2l6ZSk7XHJcbiAgICAgICAgICAgIHdoaWxlICh0b1BydW5lID4gMCkge1xyXG4gICAgICAgICAgICAgICAgX2V2aWN0KCk7XHJcbiAgICAgICAgICAgICAgICB0b1BydW5lLS07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIC8qKiBDbGVhcnMgYWxsIGtleS12YWx1ZSBwYWlycyBmcm9tIHRoZSBjYWNoZS4gKi9cclxuICAgICAgICBjbGVhcigpIHtcclxuICAgICAgICAgICAgaWYgKHR5cGVvZiBvbkV2aWN0aW9uID09PSAnZnVuY3Rpb24nKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBpdGVyYXRvciA9IGtleU1hcC52YWx1ZXMoKTtcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IHJlc3VsdCA9IGl0ZXJhdG9yLm5leHQoKTsgIXJlc3VsdC5kb25lOyByZXN1bHQgPSBpdGVyYXRvci5uZXh0KCkpXHJcbiAgICAgICAgICAgICAgICAgICAgb25FdmljdGlvbihrZXlMaXN0W3Jlc3VsdC52YWx1ZV0sIHZhbExpc3RbcmVzdWx0LnZhbHVlXSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAga2V5TWFwLmNsZWFyKCk7XHJcbiAgICAgICAgICAgIGtleUxpc3QuZmlsbCh1bmRlZmluZWQpO1xyXG4gICAgICAgICAgICB2YWxMaXN0LmZpbGwodW5kZWZpbmVkKTtcclxuICAgICAgICAgICAgZnJlZSA9IFtdO1xyXG4gICAgICAgICAgICBzaXplID0gMDtcclxuICAgICAgICAgICAgaGVhZCA9IHRhaWwgPSAwO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLyoqIFJlc2l6ZXMgdGhlIGNhY2hlIHRvIGEgbmV3IG1heGltdW0gc2l6ZSwgZXZpY3RpbmcgaXRlbXMgaWYgbmVjZXNzYXJ5LiAqL1xyXG4gICAgICAgIHJlc2l6ZTogKG5ld01heCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoIShOdW1iZXIuaXNJbnRlZ2VyKG5ld01heCkgJiYgbmV3TWF4ID4gMCkpXHJcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdgbWF4YCBtdXN0IGJlIGEgcG9zaXRpdmUgaW50ZWdlcicpO1xyXG4gICAgICAgICAgICBpZiAobmV3TWF4ID09PSBtYXgpXHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIGlmIChuZXdNYXggPCBtYXgpIHtcclxuICAgICAgICAgICAgICAgIGxldCBjdXJyZW50ID0gdGFpbDtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHByZXNlcnZlID0gTWF0aC5taW4oc2l6ZSwgbmV3TWF4KTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHJlbW92ZSA9IHNpemUgLSBwcmVzZXJ2ZTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IG5ld0tleUxpc3QgPSBuZXcgQXJyYXkobmV3TWF4KTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IG5ld1ZhbExpc3QgPSBuZXcgQXJyYXkobmV3TWF4KTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IG5ld05leHQgPSBuZXcgQXJyYXkobmV3TWF4KTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IG5ld1ByZXYgPSBuZXcgQXJyYXkobmV3TWF4KTtcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAxOyBpIDw9IHJlbW92ZTsgaSsrKVxyXG4gICAgICAgICAgICAgICAgICAgIG9uRXZpY3Rpb24gPT09IG51bGwgfHwgb25FdmljdGlvbiA9PT0gdm9pZCAwID8gdm9pZCAwIDogb25FdmljdGlvbihrZXlMaXN0W2ldLCB2YWxMaXN0W2ldKTtcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSBwcmVzZXJ2ZSAtIDE7IGkgPj0gMDsgaS0tKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbmV3S2V5TGlzdFtpXSA9IGtleUxpc3RbY3VycmVudF07XHJcbiAgICAgICAgICAgICAgICAgICAgbmV3VmFsTGlzdFtpXSA9IHZhbExpc3RbY3VycmVudF07XHJcbiAgICAgICAgICAgICAgICAgICAgbmV3TmV4dFtpXSA9IGkgKyAxO1xyXG4gICAgICAgICAgICAgICAgICAgIG5ld1ByZXZbaV0gPSBpIC0gMTtcclxuICAgICAgICAgICAgICAgICAgICBrZXlNYXAuc2V0KG5ld0tleUxpc3RbaV0sIGkpO1xyXG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnQgPSBwcmV2W2N1cnJlbnRdO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaGVhZCA9IDA7XHJcbiAgICAgICAgICAgICAgICB0YWlsID0gcHJlc2VydmUgLSAxO1xyXG4gICAgICAgICAgICAgICAgc2l6ZSA9IHByZXNlcnZlO1xyXG4gICAgICAgICAgICAgICAga2V5TGlzdC5sZW5ndGggPSBuZXdNYXg7XHJcbiAgICAgICAgICAgICAgICB2YWxMaXN0Lmxlbmd0aCA9IG5ld01heDtcclxuICAgICAgICAgICAgICAgIG5leHQubGVuZ3RoID0gbmV3TWF4O1xyXG4gICAgICAgICAgICAgICAgcHJldi5sZW5ndGggPSBuZXdNYXg7XHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHByZXNlcnZlOyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgICBrZXlMaXN0W2ldID0gbmV3S2V5TGlzdFtpXTtcclxuICAgICAgICAgICAgICAgICAgICB2YWxMaXN0W2ldID0gbmV3VmFsTGlzdFtpXTtcclxuICAgICAgICAgICAgICAgICAgICBuZXh0W2ldID0gbmV3TmV4dFtpXTtcclxuICAgICAgICAgICAgICAgICAgICBwcmV2W2ldID0gbmV3UHJldltpXTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGZyZWUgPSBbXTtcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSBwcmVzZXJ2ZTsgaSA8IG5ld01heDsgaSsrKVxyXG4gICAgICAgICAgICAgICAgICAgIGZyZWUucHVzaChpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGZpbGwgPSBuZXdNYXggLSBtYXg7XHJcbiAgICAgICAgICAgICAgICBrZXlMaXN0LnB1c2goLi4ubmV3IEFycmF5KGZpbGwpLmZpbGwodW5kZWZpbmVkKSk7XHJcbiAgICAgICAgICAgICAgICB2YWxMaXN0LnB1c2goLi4ubmV3IEFycmF5KGZpbGwpLmZpbGwodW5kZWZpbmVkKSk7XHJcbiAgICAgICAgICAgICAgICBuZXh0LnB1c2goLi4ubmV3IEFycmF5KGZpbGwpLmZpbGwoMCkpO1xyXG4gICAgICAgICAgICAgICAgcHJldi5wdXNoKC4uLm5ldyBBcnJheShmaWxsKS5maWxsKDApKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBtYXggPSBuZXdNYXg7XHJcbiAgICAgICAgfSxcclxuICAgICAgICAvKiogUmV0dXJucyB0aGUgbWF4aW11bSBudW1iZXIgb2YgaXRlbXMgdGhhdCBjYW4gYmUgc3RvcmVkIGluIHRoZSBjYWNoZS4gKi9cclxuICAgICAgICBnZXQgbWF4KCkge1xyXG4gICAgICAgICAgICByZXR1cm4gbWF4O1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLyoqIFJldHVybnMgdGhlIG51bWJlciBvZiBpdGVtcyBjdXJyZW50bHkgc3RvcmVkIGluIHRoZSBjYWNoZS4gKi9cclxuICAgICAgICBnZXQgc2l6ZSgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHNpemU7XHJcbiAgICAgICAgfSxcclxuICAgICAgICAvKiogUmV0dXJucyB0aGUgbnVtYmVyIG9mIGN1cnJlbnRseSBhdmFpbGFibGUgc2xvdHMgaW4gdGhlIGNhY2hlIGJlZm9yZSByZWFjaGluZyB0aGUgbWF4aW11bSBzaXplLiAqL1xyXG4gICAgICAgIGdldCBhdmFpbGFibGUoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBtYXggLSBzaXplO1xyXG4gICAgICAgIH0sXHJcbiAgICB9O1xyXG59O1xyXG5leHBvcnRzLmNyZWF0ZUxSVSA9IGNyZWF0ZUxSVTtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/lru.min/lib/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/named-placeholders/index.js":
/*!**************************************************!*\
  !*** ./node_modules/named-placeholders/index.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\n// based on code from Brian White @mscdex mariasql library - https://github.com/mscdex/node-mariasql/blob/master/lib/Client.js#L272-L332\r\n// License: https://github.com/mscdex/node-mariasql/blob/master/LICENSE\r\n\r\nconst RE_PARAM = /(?:\\?)|(?::(\\d+|(?:[a-zA-Z][a-zA-Z0-9_]*)))/g,\r\nDQUOTE = 34,\r\nSQUOTE = 39,\r\nBSLASH = 92;\r\n\r\nfunction parse(query) {\r\n  let ppos = RE_PARAM.exec(query);\r\n  let curpos = 0;\r\n  let start = 0;\r\n  let end;\r\n  const parts = [];\r\n  let inQuote = false;\r\n  let escape = false;\r\n  let qchr;\r\n  const tokens = [];\r\n  let qcnt = 0;\r\n  let lastTokenEndPos = 0;\r\n  let i;\r\n\r\n  if (ppos) {\r\n    do {\r\n      for (i=curpos,end=ppos.index; i<end; ++i) {\r\n        let chr = query.charCodeAt(i);\r\n        if (chr === BSLASH)\r\n        escape = !escape;\r\n        else {\r\n          if (escape) {\r\n            escape = false;\r\n            continue;\r\n          }\r\n          if (inQuote && chr === qchr) {\r\n            if (query.charCodeAt(i + 1) === qchr) {\r\n              // quote escaped via \"\" or ''\r\n              ++i;\r\n              continue;\r\n            }\r\n            inQuote = false;\r\n          } else if (chr === DQUOTE || chr === SQUOTE) {\r\n            inQuote = true;\r\n            qchr = chr;\r\n          }\r\n        }\r\n      }\r\n      if (!inQuote) {\r\n        parts.push(query.substring(start, end));\r\n        tokens.push(ppos[0].length === 1 ? qcnt++ : ppos[1]);\r\n        start = end + ppos[0].length;\r\n        lastTokenEndPos = start;\r\n      }\r\n      curpos = end + ppos[0].length;\r\n    } while (ppos = RE_PARAM.exec(query));\r\n\r\n    if (tokens.length) {\r\n      if (curpos < query.length) {\r\n        parts.push(query.substring(lastTokenEndPos));\r\n      }\r\n      return [parts, tokens];\r\n    }\r\n  }\r\n  return [query];\r\n};\r\n\r\nfunction createCompiler(config) {\r\n  if (!config)\r\n  config = {};\r\n  if (!config.placeholder) {\r\n    config.placeholder = '?';\r\n  }\r\n  let ncache = 100;\r\n  let cache;\r\n  if (typeof config.cache === 'number') {\r\n    ncache = config.cache;\r\n  }\r\n  if (typeof config.cache === 'object') {\r\n    cache = config.cache;\r\n  }\r\n  if (config.cache !== false && !cache) {\r\n    cache = new (__webpack_require__(/*! lru-cache */ \"(middleware)/./node_modules/lru-cache/index.js\"))({ max: ncache });\r\n  }\r\n\r\n  function toArrayParams(tree, params) {\r\n    const arr = [];\r\n    if (tree.length == 1) {\r\n      return [tree[0], []];\r\n    }\r\n\r\n    if (typeof params == 'undefined')\r\n      throw new Error('Named query contains placeholders, but parameters object is undefined');\r\n\r\n    const tokens = tree[1];\r\n    for (let i=0; i < tokens.length; ++i) {\r\n      arr.push(params[tokens[i]]);\r\n    }\r\n    return [tree[0], arr];\r\n  }\r\n\r\n  function noTailingSemicolon(s) {\r\n    if (s.slice(-1) == ':') {\r\n      return s.slice(0, -1);\r\n    }\r\n    return s;\r\n  }\r\n\r\n  function join(tree) {\r\n    if (tree.length == 1) {\r\n      return tree;\r\n    }\r\n\r\n    let unnamed = noTailingSemicolon(tree[0][0]);\r\n    for (let i=1; i < tree[0].length; ++i) {\r\n      if (tree[0][i-1].slice(-1) == ':') {\r\n        unnamed += config.placeholder;\r\n      }\r\n      unnamed += config.placeholder;\r\n      unnamed += noTailingSemicolon(tree[0][i]);\r\n    }\r\n\r\n    const last = tree[0][tree[0].length -1];\r\n    if (tree[0].length == tree[1].length) {\r\n      if (last.slice(-1) == ':') {\r\n        unnamed += config.placeholder;\r\n      }\r\n      unnamed += config.placeholder;\r\n    }\r\n    return [unnamed, tree[1]];\r\n  }\r\n\r\n  function compile(query, paramsObj) {\r\n    let tree;\r\n    if (cache && (tree = cache.get(query))) {\r\n      return toArrayParams(tree, paramsObj)\r\n    }\r\n    tree = join(parse(query));\r\n    if(cache) {\r\n      cache.set(query, tree);\r\n    }\r\n    return toArrayParams(tree, paramsObj);\r\n  }\r\n\r\n  compile.parse = parse;\r\n  return compile;\r\n}\r\n\r\n// named :one :two to postgres-style numbered $1 $2 $3\r\nfunction toNumbered(q, params) {\r\n  const tree = parse(q);\r\n  const paramsArr = [];\r\n  if (tree.length == 1) {\r\n    return [tree[0], paramsArr];\r\n  }\r\n\r\n  const pIndexes = {};\r\n  let pLastIndex = 0;\r\n  let qs = '';\r\n  let varIndex;\r\n  const varNames = [];\r\n  for (let i=0; i < tree[0].length; ++i) {\r\n    varIndex = pIndexes[tree[1][i]];\r\n    if (!varIndex) {\r\n      varIndex = ++pLastIndex;\r\n      pIndexes[tree[1][i]] = varIndex;\r\n    }\r\n    if (tree[1][i]) {\r\n      varNames[varIndex - 1] = tree[1][i];\r\n      qs += tree[0][i] + '$' + varIndex;\r\n    } else {\r\n      qs += tree[0][i];\r\n    }\r\n  }\r\n  return [qs, varNames.map(n => params[n])];\r\n}\r\n\r\nmodule.exports = createCompiler;\r\nmodule.exports.toNumbered = toNumbered;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/named-placeholders/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js ***!
  \************************************************************************/
/***/ ((module) => {

"use strict";
eval("\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __export = (target, all) => {\r\n  for (var name in all)\r\n    __defProp(target, name, { get: all[name], enumerable: true });\r\n};\r\nvar __copyProps = (to, from, except, desc) => {\r\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n    for (let key of __getOwnPropNames(from))\r\n      if (!__hasOwnProp.call(to, key) && key !== except)\r\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n  }\r\n  return to;\r\n};\r\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\r\n\r\n// src/index.ts\r\nvar src_exports = {};\r\n__export(src_exports, {\r\n  RequestCookies: () => RequestCookies,\r\n  ResponseCookies: () => ResponseCookies,\r\n  parseCookie: () => parseCookie,\r\n  parseSetCookie: () => parseSetCookie,\r\n  stringifyCookie: () => stringifyCookie\r\n});\r\nmodule.exports = __toCommonJS(src_exports);\r\n\r\n// src/serialize.ts\r\nfunction stringifyCookie(c) {\r\n  var _a;\r\n  const attrs = [\r\n    \"path\" in c && c.path && `Path=${c.path}`,\r\n    \"expires\" in c && (c.expires || c.expires === 0) && `Expires=${(typeof c.expires === \"number\" ? new Date(c.expires) : c.expires).toUTCString()}`,\r\n    \"maxAge\" in c && typeof c.maxAge === \"number\" && `Max-Age=${c.maxAge}`,\r\n    \"domain\" in c && c.domain && `Domain=${c.domain}`,\r\n    \"secure\" in c && c.secure && \"Secure\",\r\n    \"httpOnly\" in c && c.httpOnly && \"HttpOnly\",\r\n    \"sameSite\" in c && c.sameSite && `SameSite=${c.sameSite}`,\r\n    \"partitioned\" in c && c.partitioned && \"Partitioned\",\r\n    \"priority\" in c && c.priority && `Priority=${c.priority}`\r\n  ].filter(Boolean);\r\n  const stringified = `${c.name}=${encodeURIComponent((_a = c.value) != null ? _a : \"\")}`;\r\n  return attrs.length === 0 ? stringified : `${stringified}; ${attrs.join(\"; \")}`;\r\n}\r\nfunction parseCookie(cookie) {\r\n  const map = /* @__PURE__ */ new Map();\r\n  for (const pair of cookie.split(/; */)) {\r\n    if (!pair)\r\n      continue;\r\n    const splitAt = pair.indexOf(\"=\");\r\n    if (splitAt === -1) {\r\n      map.set(pair, \"true\");\r\n      continue;\r\n    }\r\n    const [key, value] = [pair.slice(0, splitAt), pair.slice(splitAt + 1)];\r\n    try {\r\n      map.set(key, decodeURIComponent(value != null ? value : \"true\"));\r\n    } catch {\r\n    }\r\n  }\r\n  return map;\r\n}\r\nfunction parseSetCookie(setCookie) {\r\n  if (!setCookie) {\r\n    return void 0;\r\n  }\r\n  const [[name, value], ...attributes] = parseCookie(setCookie);\r\n  const {\r\n    domain,\r\n    expires,\r\n    httponly,\r\n    maxage,\r\n    path,\r\n    samesite,\r\n    secure,\r\n    partitioned,\r\n    priority\r\n  } = Object.fromEntries(\r\n    attributes.map(([key, value2]) => [key.toLowerCase(), value2])\r\n  );\r\n  const cookie = {\r\n    name,\r\n    value: decodeURIComponent(value),\r\n    domain,\r\n    ...expires && { expires: new Date(expires) },\r\n    ...httponly && { httpOnly: true },\r\n    ...typeof maxage === \"string\" && { maxAge: Number(maxage) },\r\n    path,\r\n    ...samesite && { sameSite: parseSameSite(samesite) },\r\n    ...secure && { secure: true },\r\n    ...priority && { priority: parsePriority(priority) },\r\n    ...partitioned && { partitioned: true }\r\n  };\r\n  return compact(cookie);\r\n}\r\nfunction compact(t) {\r\n  const newT = {};\r\n  for (const key in t) {\r\n    if (t[key]) {\r\n      newT[key] = t[key];\r\n    }\r\n  }\r\n  return newT;\r\n}\r\nvar SAME_SITE = [\"strict\", \"lax\", \"none\"];\r\nfunction parseSameSite(string) {\r\n  string = string.toLowerCase();\r\n  return SAME_SITE.includes(string) ? string : void 0;\r\n}\r\nvar PRIORITY = [\"low\", \"medium\", \"high\"];\r\nfunction parsePriority(string) {\r\n  string = string.toLowerCase();\r\n  return PRIORITY.includes(string) ? string : void 0;\r\n}\r\nfunction splitCookiesString(cookiesString) {\r\n  if (!cookiesString)\r\n    return [];\r\n  var cookiesStrings = [];\r\n  var pos = 0;\r\n  var start;\r\n  var ch;\r\n  var lastComma;\r\n  var nextStart;\r\n  var cookiesSeparatorFound;\r\n  function skipWhitespace() {\r\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\r\n      pos += 1;\r\n    }\r\n    return pos < cookiesString.length;\r\n  }\r\n  function notSpecialChar() {\r\n    ch = cookiesString.charAt(pos);\r\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\r\n  }\r\n  while (pos < cookiesString.length) {\r\n    start = pos;\r\n    cookiesSeparatorFound = false;\r\n    while (skipWhitespace()) {\r\n      ch = cookiesString.charAt(pos);\r\n      if (ch === \",\") {\r\n        lastComma = pos;\r\n        pos += 1;\r\n        skipWhitespace();\r\n        nextStart = pos;\r\n        while (pos < cookiesString.length && notSpecialChar()) {\r\n          pos += 1;\r\n        }\r\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\r\n          cookiesSeparatorFound = true;\r\n          pos = nextStart;\r\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\r\n          start = pos;\r\n        } else {\r\n          pos = lastComma + 1;\r\n        }\r\n      } else {\r\n        pos += 1;\r\n      }\r\n    }\r\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\r\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\r\n    }\r\n  }\r\n  return cookiesStrings;\r\n}\r\n\r\n// src/request-cookies.ts\r\nvar RequestCookies = class {\r\n  constructor(requestHeaders) {\r\n    /** @internal */\r\n    this._parsed = /* @__PURE__ */ new Map();\r\n    this._headers = requestHeaders;\r\n    const header = requestHeaders.get(\"cookie\");\r\n    if (header) {\r\n      const parsed = parseCookie(header);\r\n      for (const [name, value] of parsed) {\r\n        this._parsed.set(name, { name, value });\r\n      }\r\n    }\r\n  }\r\n  [Symbol.iterator]() {\r\n    return this._parsed[Symbol.iterator]();\r\n  }\r\n  /**\r\n   * The amount of cookies received from the client\r\n   */\r\n  get size() {\r\n    return this._parsed.size;\r\n  }\r\n  get(...args) {\r\n    const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\r\n    return this._parsed.get(name);\r\n  }\r\n  getAll(...args) {\r\n    var _a;\r\n    const all = Array.from(this._parsed);\r\n    if (!args.length) {\r\n      return all.map(([_, value]) => value);\r\n    }\r\n    const name = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\r\n    return all.filter(([n]) => n === name).map(([_, value]) => value);\r\n  }\r\n  has(name) {\r\n    return this._parsed.has(name);\r\n  }\r\n  set(...args) {\r\n    const [name, value] = args.length === 1 ? [args[0].name, args[0].value] : args;\r\n    const map = this._parsed;\r\n    map.set(name, { name, value });\r\n    this._headers.set(\r\n      \"cookie\",\r\n      Array.from(map).map(([_, value2]) => stringifyCookie(value2)).join(\"; \")\r\n    );\r\n    return this;\r\n  }\r\n  /**\r\n   * Delete the cookies matching the passed name or names in the request.\r\n   */\r\n  delete(names) {\r\n    const map = this._parsed;\r\n    const result = !Array.isArray(names) ? map.delete(names) : names.map((name) => map.delete(name));\r\n    this._headers.set(\r\n      \"cookie\",\r\n      Array.from(map).map(([_, value]) => stringifyCookie(value)).join(\"; \")\r\n    );\r\n    return result;\r\n  }\r\n  /**\r\n   * Delete all the cookies in the cookies in the request.\r\n   */\r\n  clear() {\r\n    this.delete(Array.from(this._parsed.keys()));\r\n    return this;\r\n  }\r\n  /**\r\n   * Format the cookies in the request as a string for logging\r\n   */\r\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\r\n    return `RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\r\n  }\r\n  toString() {\r\n    return [...this._parsed.values()].map((v) => `${v.name}=${encodeURIComponent(v.value)}`).join(\"; \");\r\n  }\r\n};\r\n\r\n// src/response-cookies.ts\r\nvar ResponseCookies = class {\r\n  constructor(responseHeaders) {\r\n    /** @internal */\r\n    this._parsed = /* @__PURE__ */ new Map();\r\n    var _a, _b, _c;\r\n    this._headers = responseHeaders;\r\n    const setCookie = (_c = (_b = (_a = responseHeaders.getSetCookie) == null ? void 0 : _a.call(responseHeaders)) != null ? _b : responseHeaders.get(\"set-cookie\")) != null ? _c : [];\r\n    const cookieStrings = Array.isArray(setCookie) ? setCookie : splitCookiesString(setCookie);\r\n    for (const cookieString of cookieStrings) {\r\n      const parsed = parseSetCookie(cookieString);\r\n      if (parsed)\r\n        this._parsed.set(parsed.name, parsed);\r\n    }\r\n  }\r\n  /**\r\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-get CookieStore#get} without the Promise.\r\n   */\r\n  get(...args) {\r\n    const key = typeof args[0] === \"string\" ? args[0] : args[0].name;\r\n    return this._parsed.get(key);\r\n  }\r\n  /**\r\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-getAll CookieStore#getAll} without the Promise.\r\n   */\r\n  getAll(...args) {\r\n    var _a;\r\n    const all = Array.from(this._parsed.values());\r\n    if (!args.length) {\r\n      return all;\r\n    }\r\n    const key = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\r\n    return all.filter((c) => c.name === key);\r\n  }\r\n  has(name) {\r\n    return this._parsed.has(name);\r\n  }\r\n  /**\r\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-set CookieStore#set} without the Promise.\r\n   */\r\n  set(...args) {\r\n    const [name, value, cookie] = args.length === 1 ? [args[0].name, args[0].value, args[0]] : args;\r\n    const map = this._parsed;\r\n    map.set(name, normalizeCookie({ name, value, ...cookie }));\r\n    replace(map, this._headers);\r\n    return this;\r\n  }\r\n  /**\r\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-delete CookieStore#delete} without the Promise.\r\n   */\r\n  delete(...args) {\r\n    const [name, path, domain] = typeof args[0] === \"string\" ? [args[0]] : [args[0].name, args[0].path, args[0].domain];\r\n    return this.set({ name, path, domain, value: \"\", expires: /* @__PURE__ */ new Date(0) });\r\n  }\r\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\r\n    return `ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\r\n  }\r\n  toString() {\r\n    return [...this._parsed.values()].map(stringifyCookie).join(\"; \");\r\n  }\r\n};\r\nfunction replace(bag, headers) {\r\n  headers.delete(\"set-cookie\");\r\n  for (const [, value] of bag) {\r\n    const serialized = stringifyCookie(value);\r\n    headers.append(\"set-cookie\", serialized);\r\n  }\r\n}\r\nfunction normalizeCookie(cookie = { name: \"\", value: \"\" }) {\r\n  if (typeof cookie.expires === \"number\") {\r\n    cookie.expires = new Date(cookie.expires);\r\n  }\r\n  if (cookie.maxAge) {\r\n    cookie.expires = new Date(Date.now() + cookie.maxAge * 1e3);\r\n  }\r\n  if (cookie.path === null || cookie.path === void 0) {\r\n    cookie.path = \"/\";\r\n  }\r\n  return cookie;\r\n}\r\n// Annotate the CommonJS export names for ESM import in node:\r\n0 && (0);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/compiled/@opentelemetry/api/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/next/dist/compiled/@opentelemetry/api/index.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var __dirname = \"/\";\n(()=>{\"use strict\";var e={491:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ContextAPI=void 0;const n=r(223);const a=r(172);const o=r(930);const i=\"context\";const c=new n.NoopContextManager;class ContextAPI{constructor(){}static getInstance(){if(!this._instance){this._instance=new ContextAPI}return this._instance}setGlobalContextManager(e){return(0,a.registerGlobal)(i,e,o.DiagAPI.instance())}active(){return this._getContextManager().active()}with(e,t,r,...n){return this._getContextManager().with(e,t,r,...n)}bind(e,t){return this._getContextManager().bind(e,t)}_getContextManager(){return(0,a.getGlobal)(i)||c}disable(){this._getContextManager().disable();(0,a.unregisterGlobal)(i,o.DiagAPI.instance())}}t.ContextAPI=ContextAPI},930:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagAPI=void 0;const n=r(56);const a=r(912);const o=r(957);const i=r(172);const c=\"diag\";class DiagAPI{constructor(){function _logProxy(e){return function(...t){const r=(0,i.getGlobal)(\"diag\");if(!r)return;return r[e](...t)}}const e=this;const setLogger=(t,r={logLevel:o.DiagLogLevel.INFO})=>{var n,c,s;if(t===e){const t=new Error(\"Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation\");e.error((n=t.stack)!==null&&n!==void 0?n:t.message);return false}if(typeof r===\"number\"){r={logLevel:r}}const u=(0,i.getGlobal)(\"diag\");const l=(0,a.createLogLevelDiagLogger)((c=r.logLevel)!==null&&c!==void 0?c:o.DiagLogLevel.INFO,t);if(u&&!r.suppressOverrideMessage){const e=(s=(new Error).stack)!==null&&s!==void 0?s:\"<failed to generate stacktrace>\";u.warn(`Current logger will be overwritten from ${e}`);l.warn(`Current logger will overwrite one already registered from ${e}`)}return(0,i.registerGlobal)(\"diag\",l,e,true)};e.setLogger=setLogger;e.disable=()=>{(0,i.unregisterGlobal)(c,e)};e.createComponentLogger=e=>new n.DiagComponentLogger(e);e.verbose=_logProxy(\"verbose\");e.debug=_logProxy(\"debug\");e.info=_logProxy(\"info\");e.warn=_logProxy(\"warn\");e.error=_logProxy(\"error\")}static instance(){if(!this._instance){this._instance=new DiagAPI}return this._instance}}t.DiagAPI=DiagAPI},653:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.MetricsAPI=void 0;const n=r(660);const a=r(172);const o=r(930);const i=\"metrics\";class MetricsAPI{constructor(){}static getInstance(){if(!this._instance){this._instance=new MetricsAPI}return this._instance}setGlobalMeterProvider(e){return(0,a.registerGlobal)(i,e,o.DiagAPI.instance())}getMeterProvider(){return(0,a.getGlobal)(i)||n.NOOP_METER_PROVIDER}getMeter(e,t,r){return this.getMeterProvider().getMeter(e,t,r)}disable(){(0,a.unregisterGlobal)(i,o.DiagAPI.instance())}}t.MetricsAPI=MetricsAPI},181:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.PropagationAPI=void 0;const n=r(172);const a=r(874);const o=r(194);const i=r(277);const c=r(369);const s=r(930);const u=\"propagation\";const l=new a.NoopTextMapPropagator;class PropagationAPI{constructor(){this.createBaggage=c.createBaggage;this.getBaggage=i.getBaggage;this.getActiveBaggage=i.getActiveBaggage;this.setBaggage=i.setBaggage;this.deleteBaggage=i.deleteBaggage}static getInstance(){if(!this._instance){this._instance=new PropagationAPI}return this._instance}setGlobalPropagator(e){return(0,n.registerGlobal)(u,e,s.DiagAPI.instance())}inject(e,t,r=o.defaultTextMapSetter){return this._getGlobalPropagator().inject(e,t,r)}extract(e,t,r=o.defaultTextMapGetter){return this._getGlobalPropagator().extract(e,t,r)}fields(){return this._getGlobalPropagator().fields()}disable(){(0,n.unregisterGlobal)(u,s.DiagAPI.instance())}_getGlobalPropagator(){return(0,n.getGlobal)(u)||l}}t.PropagationAPI=PropagationAPI},997:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.TraceAPI=void 0;const n=r(172);const a=r(846);const o=r(139);const i=r(607);const c=r(930);const s=\"trace\";class TraceAPI{constructor(){this._proxyTracerProvider=new a.ProxyTracerProvider;this.wrapSpanContext=o.wrapSpanContext;this.isSpanContextValid=o.isSpanContextValid;this.deleteSpan=i.deleteSpan;this.getSpan=i.getSpan;this.getActiveSpan=i.getActiveSpan;this.getSpanContext=i.getSpanContext;this.setSpan=i.setSpan;this.setSpanContext=i.setSpanContext}static getInstance(){if(!this._instance){this._instance=new TraceAPI}return this._instance}setGlobalTracerProvider(e){const t=(0,n.registerGlobal)(s,this._proxyTracerProvider,c.DiagAPI.instance());if(t){this._proxyTracerProvider.setDelegate(e)}return t}getTracerProvider(){return(0,n.getGlobal)(s)||this._proxyTracerProvider}getTracer(e,t){return this.getTracerProvider().getTracer(e,t)}disable(){(0,n.unregisterGlobal)(s,c.DiagAPI.instance());this._proxyTracerProvider=new a.ProxyTracerProvider}}t.TraceAPI=TraceAPI},277:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.deleteBaggage=t.setBaggage=t.getActiveBaggage=t.getBaggage=void 0;const n=r(491);const a=r(780);const o=(0,a.createContextKey)(\"OpenTelemetry Baggage Key\");function getBaggage(e){return e.getValue(o)||undefined}t.getBaggage=getBaggage;function getActiveBaggage(){return getBaggage(n.ContextAPI.getInstance().active())}t.getActiveBaggage=getActiveBaggage;function setBaggage(e,t){return e.setValue(o,t)}t.setBaggage=setBaggage;function deleteBaggage(e){return e.deleteValue(o)}t.deleteBaggage=deleteBaggage},993:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.BaggageImpl=void 0;class BaggageImpl{constructor(e){this._entries=e?new Map(e):new Map}getEntry(e){const t=this._entries.get(e);if(!t){return undefined}return Object.assign({},t)}getAllEntries(){return Array.from(this._entries.entries()).map((([e,t])=>[e,t]))}setEntry(e,t){const r=new BaggageImpl(this._entries);r._entries.set(e,t);return r}removeEntry(e){const t=new BaggageImpl(this._entries);t._entries.delete(e);return t}removeEntries(...e){const t=new BaggageImpl(this._entries);for(const r of e){t._entries.delete(r)}return t}clear(){return new BaggageImpl}}t.BaggageImpl=BaggageImpl},830:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.baggageEntryMetadataSymbol=void 0;t.baggageEntryMetadataSymbol=Symbol(\"BaggageEntryMetadata\")},369:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.baggageEntryMetadataFromString=t.createBaggage=void 0;const n=r(930);const a=r(993);const o=r(830);const i=n.DiagAPI.instance();function createBaggage(e={}){return new a.BaggageImpl(new Map(Object.entries(e)))}t.createBaggage=createBaggage;function baggageEntryMetadataFromString(e){if(typeof e!==\"string\"){i.error(`Cannot create baggage metadata from unknown type: ${typeof e}`);e=\"\"}return{__TYPE__:o.baggageEntryMetadataSymbol,toString(){return e}}}t.baggageEntryMetadataFromString=baggageEntryMetadataFromString},67:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.context=void 0;const n=r(491);t.context=n.ContextAPI.getInstance()},223:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopContextManager=void 0;const n=r(780);class NoopContextManager{active(){return n.ROOT_CONTEXT}with(e,t,r,...n){return t.call(r,...n)}bind(e,t){return t}enable(){return this}disable(){return this}}t.NoopContextManager=NoopContextManager},780:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ROOT_CONTEXT=t.createContextKey=void 0;function createContextKey(e){return Symbol.for(e)}t.createContextKey=createContextKey;class BaseContext{constructor(e){const t=this;t._currentContext=e?new Map(e):new Map;t.getValue=e=>t._currentContext.get(e);t.setValue=(e,r)=>{const n=new BaseContext(t._currentContext);n._currentContext.set(e,r);return n};t.deleteValue=e=>{const r=new BaseContext(t._currentContext);r._currentContext.delete(e);return r}}}t.ROOT_CONTEXT=new BaseContext},506:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.diag=void 0;const n=r(930);t.diag=n.DiagAPI.instance()},56:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagComponentLogger=void 0;const n=r(172);class DiagComponentLogger{constructor(e){this._namespace=e.namespace||\"DiagComponentLogger\"}debug(...e){return logProxy(\"debug\",this._namespace,e)}error(...e){return logProxy(\"error\",this._namespace,e)}info(...e){return logProxy(\"info\",this._namespace,e)}warn(...e){return logProxy(\"warn\",this._namespace,e)}verbose(...e){return logProxy(\"verbose\",this._namespace,e)}}t.DiagComponentLogger=DiagComponentLogger;function logProxy(e,t,r){const a=(0,n.getGlobal)(\"diag\");if(!a){return}r.unshift(t);return a[e](...r)}},972:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagConsoleLogger=void 0;const r=[{n:\"error\",c:\"error\"},{n:\"warn\",c:\"warn\"},{n:\"info\",c:\"info\"},{n:\"debug\",c:\"debug\"},{n:\"verbose\",c:\"trace\"}];class DiagConsoleLogger{constructor(){function _consoleFunc(e){return function(...t){if(console){let r=console[e];if(typeof r!==\"function\"){r=console.log}if(typeof r===\"function\"){return r.apply(console,t)}}}}for(let e=0;e<r.length;e++){this[r[e].n]=_consoleFunc(r[e].c)}}}t.DiagConsoleLogger=DiagConsoleLogger},912:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.createLogLevelDiagLogger=void 0;const n=r(957);function createLogLevelDiagLogger(e,t){if(e<n.DiagLogLevel.NONE){e=n.DiagLogLevel.NONE}else if(e>n.DiagLogLevel.ALL){e=n.DiagLogLevel.ALL}t=t||{};function _filterFunc(r,n){const a=t[r];if(typeof a===\"function\"&&e>=n){return a.bind(t)}return function(){}}return{error:_filterFunc(\"error\",n.DiagLogLevel.ERROR),warn:_filterFunc(\"warn\",n.DiagLogLevel.WARN),info:_filterFunc(\"info\",n.DiagLogLevel.INFO),debug:_filterFunc(\"debug\",n.DiagLogLevel.DEBUG),verbose:_filterFunc(\"verbose\",n.DiagLogLevel.VERBOSE)}}t.createLogLevelDiagLogger=createLogLevelDiagLogger},957:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagLogLevel=void 0;var r;(function(e){e[e[\"NONE\"]=0]=\"NONE\";e[e[\"ERROR\"]=30]=\"ERROR\";e[e[\"WARN\"]=50]=\"WARN\";e[e[\"INFO\"]=60]=\"INFO\";e[e[\"DEBUG\"]=70]=\"DEBUG\";e[e[\"VERBOSE\"]=80]=\"VERBOSE\";e[e[\"ALL\"]=9999]=\"ALL\"})(r=t.DiagLogLevel||(t.DiagLogLevel={}))},172:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.unregisterGlobal=t.getGlobal=t.registerGlobal=void 0;const n=r(200);const a=r(521);const o=r(130);const i=a.VERSION.split(\".\")[0];const c=Symbol.for(`opentelemetry.js.api.${i}`);const s=n._globalThis;function registerGlobal(e,t,r,n=false){var o;const i=s[c]=(o=s[c])!==null&&o!==void 0?o:{version:a.VERSION};if(!n&&i[e]){const t=new Error(`@opentelemetry/api: Attempted duplicate registration of API: ${e}`);r.error(t.stack||t.message);return false}if(i.version!==a.VERSION){const t=new Error(`@opentelemetry/api: Registration of version v${i.version} for ${e} does not match previously registered API v${a.VERSION}`);r.error(t.stack||t.message);return false}i[e]=t;r.debug(`@opentelemetry/api: Registered a global for ${e} v${a.VERSION}.`);return true}t.registerGlobal=registerGlobal;function getGlobal(e){var t,r;const n=(t=s[c])===null||t===void 0?void 0:t.version;if(!n||!(0,o.isCompatible)(n)){return}return(r=s[c])===null||r===void 0?void 0:r[e]}t.getGlobal=getGlobal;function unregisterGlobal(e,t){t.debug(`@opentelemetry/api: Unregistering a global for ${e} v${a.VERSION}.`);const r=s[c];if(r){delete r[e]}}t.unregisterGlobal=unregisterGlobal},130:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.isCompatible=t._makeCompatibilityCheck=void 0;const n=r(521);const a=/^(\\d+)\\.(\\d+)\\.(\\d+)(-(.+))?$/;function _makeCompatibilityCheck(e){const t=new Set([e]);const r=new Set;const n=e.match(a);if(!n){return()=>false}const o={major:+n[1],minor:+n[2],patch:+n[3],prerelease:n[4]};if(o.prerelease!=null){return function isExactmatch(t){return t===e}}function _reject(e){r.add(e);return false}function _accept(e){t.add(e);return true}return function isCompatible(e){if(t.has(e)){return true}if(r.has(e)){return false}const n=e.match(a);if(!n){return _reject(e)}const i={major:+n[1],minor:+n[2],patch:+n[3],prerelease:n[4]};if(i.prerelease!=null){return _reject(e)}if(o.major!==i.major){return _reject(e)}if(o.major===0){if(o.minor===i.minor&&o.patch<=i.patch){return _accept(e)}return _reject(e)}if(o.minor<=i.minor){return _accept(e)}return _reject(e)}}t._makeCompatibilityCheck=_makeCompatibilityCheck;t.isCompatible=_makeCompatibilityCheck(n.VERSION)},886:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.metrics=void 0;const n=r(653);t.metrics=n.MetricsAPI.getInstance()},901:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ValueType=void 0;var r;(function(e){e[e[\"INT\"]=0]=\"INT\";e[e[\"DOUBLE\"]=1]=\"DOUBLE\"})(r=t.ValueType||(t.ValueType={}))},102:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.createNoopMeter=t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC=t.NOOP_OBSERVABLE_GAUGE_METRIC=t.NOOP_OBSERVABLE_COUNTER_METRIC=t.NOOP_UP_DOWN_COUNTER_METRIC=t.NOOP_HISTOGRAM_METRIC=t.NOOP_COUNTER_METRIC=t.NOOP_METER=t.NoopObservableUpDownCounterMetric=t.NoopObservableGaugeMetric=t.NoopObservableCounterMetric=t.NoopObservableMetric=t.NoopHistogramMetric=t.NoopUpDownCounterMetric=t.NoopCounterMetric=t.NoopMetric=t.NoopMeter=void 0;class NoopMeter{constructor(){}createHistogram(e,r){return t.NOOP_HISTOGRAM_METRIC}createCounter(e,r){return t.NOOP_COUNTER_METRIC}createUpDownCounter(e,r){return t.NOOP_UP_DOWN_COUNTER_METRIC}createObservableGauge(e,r){return t.NOOP_OBSERVABLE_GAUGE_METRIC}createObservableCounter(e,r){return t.NOOP_OBSERVABLE_COUNTER_METRIC}createObservableUpDownCounter(e,r){return t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC}addBatchObservableCallback(e,t){}removeBatchObservableCallback(e){}}t.NoopMeter=NoopMeter;class NoopMetric{}t.NoopMetric=NoopMetric;class NoopCounterMetric extends NoopMetric{add(e,t){}}t.NoopCounterMetric=NoopCounterMetric;class NoopUpDownCounterMetric extends NoopMetric{add(e,t){}}t.NoopUpDownCounterMetric=NoopUpDownCounterMetric;class NoopHistogramMetric extends NoopMetric{record(e,t){}}t.NoopHistogramMetric=NoopHistogramMetric;class NoopObservableMetric{addCallback(e){}removeCallback(e){}}t.NoopObservableMetric=NoopObservableMetric;class NoopObservableCounterMetric extends NoopObservableMetric{}t.NoopObservableCounterMetric=NoopObservableCounterMetric;class NoopObservableGaugeMetric extends NoopObservableMetric{}t.NoopObservableGaugeMetric=NoopObservableGaugeMetric;class NoopObservableUpDownCounterMetric extends NoopObservableMetric{}t.NoopObservableUpDownCounterMetric=NoopObservableUpDownCounterMetric;t.NOOP_METER=new NoopMeter;t.NOOP_COUNTER_METRIC=new NoopCounterMetric;t.NOOP_HISTOGRAM_METRIC=new NoopHistogramMetric;t.NOOP_UP_DOWN_COUNTER_METRIC=new NoopUpDownCounterMetric;t.NOOP_OBSERVABLE_COUNTER_METRIC=new NoopObservableCounterMetric;t.NOOP_OBSERVABLE_GAUGE_METRIC=new NoopObservableGaugeMetric;t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC=new NoopObservableUpDownCounterMetric;function createNoopMeter(){return t.NOOP_METER}t.createNoopMeter=createNoopMeter},660:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NOOP_METER_PROVIDER=t.NoopMeterProvider=void 0;const n=r(102);class NoopMeterProvider{getMeter(e,t,r){return n.NOOP_METER}}t.NoopMeterProvider=NoopMeterProvider;t.NOOP_METER_PROVIDER=new NoopMeterProvider},200:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){if(n===undefined)n=r;Object.defineProperty(e,n,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,n){if(n===undefined)n=r;e[n]=t[r]});var a=this&&this.__exportStar||function(e,t){for(var r in e)if(r!==\"default\"&&!Object.prototype.hasOwnProperty.call(t,r))n(t,e,r)};Object.defineProperty(t,\"__esModule\",{value:true});a(r(46),t)},651:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t._globalThis=void 0;t._globalThis=typeof globalThis===\"object\"?globalThis:__webpack_require__.g},46:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){if(n===undefined)n=r;Object.defineProperty(e,n,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,n){if(n===undefined)n=r;e[n]=t[r]});var a=this&&this.__exportStar||function(e,t){for(var r in e)if(r!==\"default\"&&!Object.prototype.hasOwnProperty.call(t,r))n(t,e,r)};Object.defineProperty(t,\"__esModule\",{value:true});a(r(651),t)},939:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.propagation=void 0;const n=r(181);t.propagation=n.PropagationAPI.getInstance()},874:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopTextMapPropagator=void 0;class NoopTextMapPropagator{inject(e,t){}extract(e,t){return e}fields(){return[]}}t.NoopTextMapPropagator=NoopTextMapPropagator},194:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.defaultTextMapSetter=t.defaultTextMapGetter=void 0;t.defaultTextMapGetter={get(e,t){if(e==null){return undefined}return e[t]},keys(e){if(e==null){return[]}return Object.keys(e)}};t.defaultTextMapSetter={set(e,t,r){if(e==null){return}e[t]=r}}},845:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.trace=void 0;const n=r(997);t.trace=n.TraceAPI.getInstance()},403:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NonRecordingSpan=void 0;const n=r(476);class NonRecordingSpan{constructor(e=n.INVALID_SPAN_CONTEXT){this._spanContext=e}spanContext(){return this._spanContext}setAttribute(e,t){return this}setAttributes(e){return this}addEvent(e,t){return this}setStatus(e){return this}updateName(e){return this}end(e){}isRecording(){return false}recordException(e,t){}}t.NonRecordingSpan=NonRecordingSpan},614:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopTracer=void 0;const n=r(491);const a=r(607);const o=r(403);const i=r(139);const c=n.ContextAPI.getInstance();class NoopTracer{startSpan(e,t,r=c.active()){const n=Boolean(t===null||t===void 0?void 0:t.root);if(n){return new o.NonRecordingSpan}const s=r&&(0,a.getSpanContext)(r);if(isSpanContext(s)&&(0,i.isSpanContextValid)(s)){return new o.NonRecordingSpan(s)}else{return new o.NonRecordingSpan}}startActiveSpan(e,t,r,n){let o;let i;let s;if(arguments.length<2){return}else if(arguments.length===2){s=t}else if(arguments.length===3){o=t;s=r}else{o=t;i=r;s=n}const u=i!==null&&i!==void 0?i:c.active();const l=this.startSpan(e,o,u);const g=(0,a.setSpan)(u,l);return c.with(g,s,undefined,l)}}t.NoopTracer=NoopTracer;function isSpanContext(e){return typeof e===\"object\"&&typeof e[\"spanId\"]===\"string\"&&typeof e[\"traceId\"]===\"string\"&&typeof e[\"traceFlags\"]===\"number\"}},124:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopTracerProvider=void 0;const n=r(614);class NoopTracerProvider{getTracer(e,t,r){return new n.NoopTracer}}t.NoopTracerProvider=NoopTracerProvider},125:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ProxyTracer=void 0;const n=r(614);const a=new n.NoopTracer;class ProxyTracer{constructor(e,t,r,n){this._provider=e;this.name=t;this.version=r;this.options=n}startSpan(e,t,r){return this._getTracer().startSpan(e,t,r)}startActiveSpan(e,t,r,n){const a=this._getTracer();return Reflect.apply(a.startActiveSpan,a,arguments)}_getTracer(){if(this._delegate){return this._delegate}const e=this._provider.getDelegateTracer(this.name,this.version,this.options);if(!e){return a}this._delegate=e;return this._delegate}}t.ProxyTracer=ProxyTracer},846:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ProxyTracerProvider=void 0;const n=r(125);const a=r(124);const o=new a.NoopTracerProvider;class ProxyTracerProvider{getTracer(e,t,r){var a;return(a=this.getDelegateTracer(e,t,r))!==null&&a!==void 0?a:new n.ProxyTracer(this,e,t,r)}getDelegate(){var e;return(e=this._delegate)!==null&&e!==void 0?e:o}setDelegate(e){this._delegate=e}getDelegateTracer(e,t,r){var n;return(n=this._delegate)===null||n===void 0?void 0:n.getTracer(e,t,r)}}t.ProxyTracerProvider=ProxyTracerProvider},996:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.SamplingDecision=void 0;var r;(function(e){e[e[\"NOT_RECORD\"]=0]=\"NOT_RECORD\";e[e[\"RECORD\"]=1]=\"RECORD\";e[e[\"RECORD_AND_SAMPLED\"]=2]=\"RECORD_AND_SAMPLED\"})(r=t.SamplingDecision||(t.SamplingDecision={}))},607:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.getSpanContext=t.setSpanContext=t.deleteSpan=t.setSpan=t.getActiveSpan=t.getSpan=void 0;const n=r(780);const a=r(403);const o=r(491);const i=(0,n.createContextKey)(\"OpenTelemetry Context Key SPAN\");function getSpan(e){return e.getValue(i)||undefined}t.getSpan=getSpan;function getActiveSpan(){return getSpan(o.ContextAPI.getInstance().active())}t.getActiveSpan=getActiveSpan;function setSpan(e,t){return e.setValue(i,t)}t.setSpan=setSpan;function deleteSpan(e){return e.deleteValue(i)}t.deleteSpan=deleteSpan;function setSpanContext(e,t){return setSpan(e,new a.NonRecordingSpan(t))}t.setSpanContext=setSpanContext;function getSpanContext(e){var t;return(t=getSpan(e))===null||t===void 0?void 0:t.spanContext()}t.getSpanContext=getSpanContext},325:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.TraceStateImpl=void 0;const n=r(564);const a=32;const o=512;const i=\",\";const c=\"=\";class TraceStateImpl{constructor(e){this._internalState=new Map;if(e)this._parse(e)}set(e,t){const r=this._clone();if(r._internalState.has(e)){r._internalState.delete(e)}r._internalState.set(e,t);return r}unset(e){const t=this._clone();t._internalState.delete(e);return t}get(e){return this._internalState.get(e)}serialize(){return this._keys().reduce(((e,t)=>{e.push(t+c+this.get(t));return e}),[]).join(i)}_parse(e){if(e.length>o)return;this._internalState=e.split(i).reverse().reduce(((e,t)=>{const r=t.trim();const a=r.indexOf(c);if(a!==-1){const o=r.slice(0,a);const i=r.slice(a+1,t.length);if((0,n.validateKey)(o)&&(0,n.validateValue)(i)){e.set(o,i)}else{}}return e}),new Map);if(this._internalState.size>a){this._internalState=new Map(Array.from(this._internalState.entries()).reverse().slice(0,a))}}_keys(){return Array.from(this._internalState.keys()).reverse()}_clone(){const e=new TraceStateImpl;e._internalState=new Map(this._internalState);return e}}t.TraceStateImpl=TraceStateImpl},564:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.validateValue=t.validateKey=void 0;const r=\"[_0-9a-z-*/]\";const n=`[a-z]${r}{0,255}`;const a=`[a-z0-9]${r}{0,240}@[a-z]${r}{0,13}`;const o=new RegExp(`^(?:${n}|${a})$`);const i=/^[ -~]{0,255}[!-~]$/;const c=/,|=/;function validateKey(e){return o.test(e)}t.validateKey=validateKey;function validateValue(e){return i.test(e)&&!c.test(e)}t.validateValue=validateValue},98:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.createTraceState=void 0;const n=r(325);function createTraceState(e){return new n.TraceStateImpl(e)}t.createTraceState=createTraceState},476:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.INVALID_SPAN_CONTEXT=t.INVALID_TRACEID=t.INVALID_SPANID=void 0;const n=r(475);t.INVALID_SPANID=\"0000000000000000\";t.INVALID_TRACEID=\"00000000000000000000000000000000\";t.INVALID_SPAN_CONTEXT={traceId:t.INVALID_TRACEID,spanId:t.INVALID_SPANID,traceFlags:n.TraceFlags.NONE}},357:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.SpanKind=void 0;var r;(function(e){e[e[\"INTERNAL\"]=0]=\"INTERNAL\";e[e[\"SERVER\"]=1]=\"SERVER\";e[e[\"CLIENT\"]=2]=\"CLIENT\";e[e[\"PRODUCER\"]=3]=\"PRODUCER\";e[e[\"CONSUMER\"]=4]=\"CONSUMER\"})(r=t.SpanKind||(t.SpanKind={}))},139:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.wrapSpanContext=t.isSpanContextValid=t.isValidSpanId=t.isValidTraceId=void 0;const n=r(476);const a=r(403);const o=/^([0-9a-f]{32})$/i;const i=/^[0-9a-f]{16}$/i;function isValidTraceId(e){return o.test(e)&&e!==n.INVALID_TRACEID}t.isValidTraceId=isValidTraceId;function isValidSpanId(e){return i.test(e)&&e!==n.INVALID_SPANID}t.isValidSpanId=isValidSpanId;function isSpanContextValid(e){return isValidTraceId(e.traceId)&&isValidSpanId(e.spanId)}t.isSpanContextValid=isSpanContextValid;function wrapSpanContext(e){return new a.NonRecordingSpan(e)}t.wrapSpanContext=wrapSpanContext},847:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.SpanStatusCode=void 0;var r;(function(e){e[e[\"UNSET\"]=0]=\"UNSET\";e[e[\"OK\"]=1]=\"OK\";e[e[\"ERROR\"]=2]=\"ERROR\"})(r=t.SpanStatusCode||(t.SpanStatusCode={}))},475:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.TraceFlags=void 0;var r;(function(e){e[e[\"NONE\"]=0]=\"NONE\";e[e[\"SAMPLED\"]=1]=\"SAMPLED\"})(r=t.TraceFlags||(t.TraceFlags={}))},521:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.VERSION=void 0;t.VERSION=\"1.6.0\"}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var a=t[r]={exports:{}};var o=true;try{e[r].call(a.exports,a,a.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return a.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r={};(()=>{var e=r;Object.defineProperty(e,\"__esModule\",{value:true});e.trace=e.propagation=e.metrics=e.diag=e.context=e.INVALID_SPAN_CONTEXT=e.INVALID_TRACEID=e.INVALID_SPANID=e.isValidSpanId=e.isValidTraceId=e.isSpanContextValid=e.createTraceState=e.TraceFlags=e.SpanStatusCode=e.SpanKind=e.SamplingDecision=e.ProxyTracerProvider=e.ProxyTracer=e.defaultTextMapSetter=e.defaultTextMapGetter=e.ValueType=e.createNoopMeter=e.DiagLogLevel=e.DiagConsoleLogger=e.ROOT_CONTEXT=e.createContextKey=e.baggageEntryMetadataFromString=void 0;var t=__nccwpck_require__(369);Object.defineProperty(e,\"baggageEntryMetadataFromString\",{enumerable:true,get:function(){return t.baggageEntryMetadataFromString}});var n=__nccwpck_require__(780);Object.defineProperty(e,\"createContextKey\",{enumerable:true,get:function(){return n.createContextKey}});Object.defineProperty(e,\"ROOT_CONTEXT\",{enumerable:true,get:function(){return n.ROOT_CONTEXT}});var a=__nccwpck_require__(972);Object.defineProperty(e,\"DiagConsoleLogger\",{enumerable:true,get:function(){return a.DiagConsoleLogger}});var o=__nccwpck_require__(957);Object.defineProperty(e,\"DiagLogLevel\",{enumerable:true,get:function(){return o.DiagLogLevel}});var i=__nccwpck_require__(102);Object.defineProperty(e,\"createNoopMeter\",{enumerable:true,get:function(){return i.createNoopMeter}});var c=__nccwpck_require__(901);Object.defineProperty(e,\"ValueType\",{enumerable:true,get:function(){return c.ValueType}});var s=__nccwpck_require__(194);Object.defineProperty(e,\"defaultTextMapGetter\",{enumerable:true,get:function(){return s.defaultTextMapGetter}});Object.defineProperty(e,\"defaultTextMapSetter\",{enumerable:true,get:function(){return s.defaultTextMapSetter}});var u=__nccwpck_require__(125);Object.defineProperty(e,\"ProxyTracer\",{enumerable:true,get:function(){return u.ProxyTracer}});var l=__nccwpck_require__(846);Object.defineProperty(e,\"ProxyTracerProvider\",{enumerable:true,get:function(){return l.ProxyTracerProvider}});var g=__nccwpck_require__(996);Object.defineProperty(e,\"SamplingDecision\",{enumerable:true,get:function(){return g.SamplingDecision}});var p=__nccwpck_require__(357);Object.defineProperty(e,\"SpanKind\",{enumerable:true,get:function(){return p.SpanKind}});var d=__nccwpck_require__(847);Object.defineProperty(e,\"SpanStatusCode\",{enumerable:true,get:function(){return d.SpanStatusCode}});var _=__nccwpck_require__(475);Object.defineProperty(e,\"TraceFlags\",{enumerable:true,get:function(){return _.TraceFlags}});var f=__nccwpck_require__(98);Object.defineProperty(e,\"createTraceState\",{enumerable:true,get:function(){return f.createTraceState}});var b=__nccwpck_require__(139);Object.defineProperty(e,\"isSpanContextValid\",{enumerable:true,get:function(){return b.isSpanContextValid}});Object.defineProperty(e,\"isValidTraceId\",{enumerable:true,get:function(){return b.isValidTraceId}});Object.defineProperty(e,\"isValidSpanId\",{enumerable:true,get:function(){return b.isValidSpanId}});var v=__nccwpck_require__(476);Object.defineProperty(e,\"INVALID_SPANID\",{enumerable:true,get:function(){return v.INVALID_SPANID}});Object.defineProperty(e,\"INVALID_TRACEID\",{enumerable:true,get:function(){return v.INVALID_TRACEID}});Object.defineProperty(e,\"INVALID_SPAN_CONTEXT\",{enumerable:true,get:function(){return v.INVALID_SPAN_CONTEXT}});const O=__nccwpck_require__(67);Object.defineProperty(e,\"context\",{enumerable:true,get:function(){return O.context}});const P=__nccwpck_require__(506);Object.defineProperty(e,\"diag\",{enumerable:true,get:function(){return P.diag}});const N=__nccwpck_require__(886);Object.defineProperty(e,\"metrics\",{enumerable:true,get:function(){return N.metrics}});const S=__nccwpck_require__(939);Object.defineProperty(e,\"propagation\",{enumerable:true,get:function(){return S.propagation}});const C=__nccwpck_require__(845);Object.defineProperty(e,\"trace\",{enumerable:true,get:function(){return C.trace}});e[\"default\"]={context:O.context,diag:P.diag,metrics:N.metrics,propagation:S.propagation,trace:C.trace}})();module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/compiled/@opentelemetry/api/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/compiled/cookie/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/compiled/cookie/index.js ***!
  \*********************************************************/
/***/ ((module) => {

eval("var __dirname = \"/\";\n(()=>{\"use strict\";if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var e={};(()=>{var r=e;\r\n/*!\r\n * cookie\r\n * Copyright(c) 2012-2014 Roman Shtylman\r\n * Copyright(c) 2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */r.parse=parse;r.serialize=serialize;var i=decodeURIComponent;var t=encodeURIComponent;var a=/; */;var n=/^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;function parse(e,r){if(typeof e!==\"string\"){throw new TypeError(\"argument str must be a string\")}var t={};var n=r||{};var o=e.split(a);var s=n.decode||i;for(var p=0;p<o.length;p++){var f=o[p];var u=f.indexOf(\"=\");if(u<0){continue}var v=f.substr(0,u).trim();var c=f.substr(++u,f.length).trim();if('\"'==c[0]){c=c.slice(1,-1)}if(undefined==t[v]){t[v]=tryDecode(c,s)}}return t}function serialize(e,r,i){var a=i||{};var o=a.encode||t;if(typeof o!==\"function\"){throw new TypeError(\"option encode is invalid\")}if(!n.test(e)){throw new TypeError(\"argument name is invalid\")}var s=o(r);if(s&&!n.test(s)){throw new TypeError(\"argument val is invalid\")}var p=e+\"=\"+s;if(null!=a.maxAge){var f=a.maxAge-0;if(isNaN(f)||!isFinite(f)){throw new TypeError(\"option maxAge is invalid\")}p+=\"; Max-Age=\"+Math.floor(f)}if(a.domain){if(!n.test(a.domain)){throw new TypeError(\"option domain is invalid\")}p+=\"; Domain=\"+a.domain}if(a.path){if(!n.test(a.path)){throw new TypeError(\"option path is invalid\")}p+=\"; Path=\"+a.path}if(a.expires){if(typeof a.expires.toUTCString!==\"function\"){throw new TypeError(\"option expires is invalid\")}p+=\"; Expires=\"+a.expires.toUTCString()}if(a.httpOnly){p+=\"; HttpOnly\"}if(a.secure){p+=\"; Secure\"}if(a.sameSite){var u=typeof a.sameSite===\"string\"?a.sameSite.toLowerCase():a.sameSite;switch(u){case true:p+=\"; SameSite=Strict\";break;case\"lax\":p+=\"; SameSite=Lax\";break;case\"strict\":p+=\"; SameSite=Strict\";break;case\"none\":p+=\"; SameSite=None\";break;default:throw new TypeError(\"option sameSite is invalid\")}}return p}function tryDecode(e,r){try{return r(e)}catch(r){return e}}})();module.exports=e})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9jb29raWUvaW5kZXguanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU0sYUFBYSxtRUFBbUUsU0FBUyxLQUFLLFNBQVMsTUFBTTtBQUNuSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHNCQUFzQix5QkFBeUIseUJBQXlCLFNBQVMsR0FBRyw4Q0FBOEMsb0JBQW9CLHdCQUF3QixxREFBcUQsU0FBUyxZQUFZLGlCQUFpQixrQkFBa0IsWUFBWSxXQUFXLEtBQUssV0FBVyxxQkFBcUIsUUFBUSxTQUFTLDJCQUEyQixvQ0FBb0MsY0FBYyxnQkFBZ0Isb0JBQW9CLHFCQUFxQixTQUFTLDBCQUEwQixZQUFZLGtCQUFrQiwwQkFBMEIsZ0RBQWdELGVBQWUsZ0RBQWdELFdBQVcsa0JBQWtCLCtDQUErQyxjQUFjLG1CQUFtQixpQkFBaUIsMkJBQTJCLGdEQUFnRCxNQUFNLHdCQUF3QixhQUFhLHNCQUFzQixnREFBZ0QsTUFBTSxrQkFBa0IsV0FBVyxvQkFBb0IsOENBQThDLE1BQU0sY0FBYyxjQUFjLDhDQUE4QyxpREFBaUQsTUFBTSxrQ0FBa0MsZUFBZSxNQUFNLFVBQVUsYUFBYSxNQUFNLFFBQVEsZUFBZSx1RUFBdUUsVUFBVSxnQkFBZ0IsaUJBQWlCLE1BQU0sZ0JBQWdCLGNBQWMsTUFBTSxtQkFBbUIsaUJBQWlCLE1BQU0saUJBQWlCLGVBQWUsTUFBTSwyREFBMkQsU0FBUyx3QkFBd0IsSUFBSSxZQUFZLFNBQVMsV0FBVyxJQUFJLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL2Nvb2tpZS9pbmRleC5qcz8zOTgwIl0sInNvdXJjZXNDb250ZW50IjpbIigoKT0+e1widXNlIHN0cmljdFwiO2lmKHR5cGVvZiBfX25jY3dwY2tfcmVxdWlyZV9fIT09XCJ1bmRlZmluZWRcIilfX25jY3dwY2tfcmVxdWlyZV9fLmFiPV9fZGlybmFtZStcIi9cIjt2YXIgZT17fTsoKCk9Pnt2YXIgcj1lO1xyXG4vKiFcclxuICogY29va2llXHJcbiAqIENvcHlyaWdodChjKSAyMDEyLTIwMTQgUm9tYW4gU2h0eWxtYW5cclxuICogQ29weXJpZ2h0KGMpIDIwMTUgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cclxuICogTUlUIExpY2Vuc2VkXHJcbiAqL3IucGFyc2U9cGFyc2U7ci5zZXJpYWxpemU9c2VyaWFsaXplO3ZhciBpPWRlY29kZVVSSUNvbXBvbmVudDt2YXIgdD1lbmNvZGVVUklDb21wb25lbnQ7dmFyIGE9LzsgKi87dmFyIG49L15bXFx1MDAwOVxcdTAwMjAtXFx1MDA3ZVxcdTAwODAtXFx1MDBmZl0rJC87ZnVuY3Rpb24gcGFyc2UoZSxyKXtpZih0eXBlb2YgZSE9PVwic3RyaW5nXCIpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJhcmd1bWVudCBzdHIgbXVzdCBiZSBhIHN0cmluZ1wiKX12YXIgdD17fTt2YXIgbj1yfHx7fTt2YXIgbz1lLnNwbGl0KGEpO3ZhciBzPW4uZGVjb2RlfHxpO2Zvcih2YXIgcD0wO3A8by5sZW5ndGg7cCsrKXt2YXIgZj1vW3BdO3ZhciB1PWYuaW5kZXhPZihcIj1cIik7aWYodTwwKXtjb250aW51ZX12YXIgdj1mLnN1YnN0cigwLHUpLnRyaW0oKTt2YXIgYz1mLnN1YnN0cigrK3UsZi5sZW5ndGgpLnRyaW0oKTtpZignXCInPT1jWzBdKXtjPWMuc2xpY2UoMSwtMSl9aWYodW5kZWZpbmVkPT10W3ZdKXt0W3ZdPXRyeURlY29kZShjLHMpfX1yZXR1cm4gdH1mdW5jdGlvbiBzZXJpYWxpemUoZSxyLGkpe3ZhciBhPWl8fHt9O3ZhciBvPWEuZW5jb2RlfHx0O2lmKHR5cGVvZiBvIT09XCJmdW5jdGlvblwiKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwib3B0aW9uIGVuY29kZSBpcyBpbnZhbGlkXCIpfWlmKCFuLnRlc3QoZSkpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJhcmd1bWVudCBuYW1lIGlzIGludmFsaWRcIil9dmFyIHM9byhyKTtpZihzJiYhbi50ZXN0KHMpKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiYXJndW1lbnQgdmFsIGlzIGludmFsaWRcIil9dmFyIHA9ZStcIj1cIitzO2lmKG51bGwhPWEubWF4QWdlKXt2YXIgZj1hLm1heEFnZS0wO2lmKGlzTmFOKGYpfHwhaXNGaW5pdGUoZikpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJvcHRpb24gbWF4QWdlIGlzIGludmFsaWRcIil9cCs9XCI7IE1heC1BZ2U9XCIrTWF0aC5mbG9vcihmKX1pZihhLmRvbWFpbil7aWYoIW4udGVzdChhLmRvbWFpbikpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJvcHRpb24gZG9tYWluIGlzIGludmFsaWRcIil9cCs9XCI7IERvbWFpbj1cIithLmRvbWFpbn1pZihhLnBhdGgpe2lmKCFuLnRlc3QoYS5wYXRoKSl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIm9wdGlvbiBwYXRoIGlzIGludmFsaWRcIil9cCs9XCI7IFBhdGg9XCIrYS5wYXRofWlmKGEuZXhwaXJlcyl7aWYodHlwZW9mIGEuZXhwaXJlcy50b1VUQ1N0cmluZyE9PVwiZnVuY3Rpb25cIil7dGhyb3cgbmV3IFR5cGVFcnJvcihcIm9wdGlvbiBleHBpcmVzIGlzIGludmFsaWRcIil9cCs9XCI7IEV4cGlyZXM9XCIrYS5leHBpcmVzLnRvVVRDU3RyaW5nKCl9aWYoYS5odHRwT25seSl7cCs9XCI7IEh0dHBPbmx5XCJ9aWYoYS5zZWN1cmUpe3ArPVwiOyBTZWN1cmVcIn1pZihhLnNhbWVTaXRlKXt2YXIgdT10eXBlb2YgYS5zYW1lU2l0ZT09PVwic3RyaW5nXCI/YS5zYW1lU2l0ZS50b0xvd2VyQ2FzZSgpOmEuc2FtZVNpdGU7c3dpdGNoKHUpe2Nhc2UgdHJ1ZTpwKz1cIjsgU2FtZVNpdGU9U3RyaWN0XCI7YnJlYWs7Y2FzZVwibGF4XCI6cCs9XCI7IFNhbWVTaXRlPUxheFwiO2JyZWFrO2Nhc2VcInN0cmljdFwiOnArPVwiOyBTYW1lU2l0ZT1TdHJpY3RcIjticmVhaztjYXNlXCJub25lXCI6cCs9XCI7IFNhbWVTaXRlPU5vbmVcIjticmVhaztkZWZhdWx0OnRocm93IG5ldyBUeXBlRXJyb3IoXCJvcHRpb24gc2FtZVNpdGUgaXMgaW52YWxpZFwiKX19cmV0dXJuIHB9ZnVuY3Rpb24gdHJ5RGVjb2RlKGUscil7dHJ5e3JldHVybiByKGUpfWNhdGNoKHIpe3JldHVybiBlfX19KSgpO21vZHVsZS5leHBvcnRzPWV9KSgpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/compiled/cookie/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/compiled/native-url/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/next/dist/compiled/native-url/index.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var __dirname = \"/\";\n(function(){var e={452:function(e){\"use strict\";e.exports=__webpack_require__(/*! next/dist/compiled/querystring-es3 */ \"(middleware)/./node_modules/next/dist/compiled/querystring-es3/index.js\")}};var t={};function __nccwpck_require__(o){var a=t[o];if(a!==undefined){return a.exports}var s=t[o]={exports:{}};var n=true;try{e[o](s,s.exports,__nccwpck_require__);n=false}finally{if(n)delete t[o]}return s.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var o={};!function(){var e=o;var t,a=(t=__nccwpck_require__(452))&&\"object\"==typeof t&&\"default\"in t?t.default:t,s=/https?|ftp|gopher|file/;function r(e){\"string\"==typeof e&&(e=d(e));var t=function(e,t,o){var a=e.auth,s=e.hostname,n=e.protocol||\"\",p=e.pathname||\"\",c=e.hash||\"\",i=e.query||\"\",u=!1;a=a?encodeURIComponent(a).replace(/%3A/i,\":\")+\"@\":\"\",e.host?u=a+e.host:s&&(u=a+(~s.indexOf(\":\")?\"[\"+s+\"]\":s),e.port&&(u+=\":\"+e.port)),i&&\"object\"==typeof i&&(i=t.encode(i));var f=e.search||i&&\"?\"+i||\"\";return n&&\":\"!==n.substr(-1)&&(n+=\":\"),e.slashes||(!n||o.test(n))&&!1!==u?(u=\"//\"+(u||\"\"),p&&\"/\"!==p[0]&&(p=\"/\"+p)):u||(u=\"\"),c&&\"#\"!==c[0]&&(c=\"#\"+c),f&&\"?\"!==f[0]&&(f=\"?\"+f),{protocol:n,host:u,pathname:p=p.replace(/[?#]/g,encodeURIComponent),search:f=f.replace(\"#\",\"%23\"),hash:c}}(e,a,s);return\"\"+t.protocol+t.host+t.pathname+t.search+t.hash}var n=\"http://\",p=\"w.w\",c=n+p,i=/^([a-z0-9.+-]*:\\/\\/\\/)([a-z0-9.+-]:\\/*)?/i,u=/https?|ftp|gopher|file/;function h(e,t){var o=\"string\"==typeof e?d(e):e;e=\"object\"==typeof e?r(e):e;var a=d(t),s=\"\";o.protocol&&!o.slashes&&(s=o.protocol,e=e.replace(o.protocol,\"\"),s+=\"/\"===t[0]||\"/\"===e[0]?\"/\":\"\"),s&&a.protocol&&(s=\"\",a.slashes||(s=a.protocol,t=t.replace(a.protocol,\"\")));var p=e.match(i);p&&!a.protocol&&(e=e.substr((s=p[1]+(p[2]||\"\")).length),/^\\/\\/[^/]/.test(t)&&(s=s.slice(0,-1)));var f=new URL(e,c+\"/\"),m=new URL(t,f).toString().replace(c,\"\"),v=a.protocol||o.protocol;return v+=o.slashes||a.slashes?\"//\":\"\",!s&&v?m=m.replace(n,v):s&&(m=m.replace(n,\"\")),u.test(m)||~t.indexOf(\".\")||\"/\"===e.slice(-1)||\"/\"===t.slice(-1)||\"/\"!==m.slice(-1)||(m=m.slice(0,-1)),s&&(m=s+(\"/\"===m[0]?m.substr(1):m)),m}function l(){}l.prototype.parse=d,l.prototype.format=r,l.prototype.resolve=h,l.prototype.resolveObject=h;var f=/^https?|ftp|gopher|file/,m=/^(.*?)([#?].*)/,v=/^([a-z0-9.+-]*:)(\\/{0,3})(.*)/i,_=/^([a-z0-9.+-]*:)?\\/\\/\\/*/i,b=/^([a-z0-9.+-]*:)(\\/{0,2})\\[(.*)\\]$/i;function d(e,t,o){if(void 0===t&&(t=!1),void 0===o&&(o=!1),e&&\"object\"==typeof e&&e instanceof l)return e;var s=(e=e.trim()).match(m);e=s?s[1].replace(/\\\\/g,\"/\")+s[2]:e.replace(/\\\\/g,\"/\"),b.test(e)&&\"/\"!==e.slice(-1)&&(e+=\"/\");var n=!/(^javascript)/.test(e)&&e.match(v),i=_.test(e),u=\"\";n&&(f.test(n[1])||(u=n[1].toLowerCase(),e=\"\"+n[2]+n[3]),n[2]||(i=!1,f.test(n[1])?(u=n[1],e=\"\"+n[3]):e=\"//\"+n[3]),3!==n[2].length&&1!==n[2].length||(u=n[1],e=\"/\"+n[3]));var g,y=(s?s[1]:e).match(/^https?:\\/\\/[^/]+(:[0-9]+)(?=\\/|$)/),w=y&&y[1],x=new l,C=\"\",U=\"\";try{g=new URL(e)}catch(t){C=t,u||o||!/^\\/\\//.test(e)||/^\\/\\/.+[@.]/.test(e)||(U=\"/\",e=e.substr(1));try{g=new URL(e,c)}catch(e){return x.protocol=u,x.href=u,x}}x.slashes=i&&!U,x.host=g.host===p?\"\":g.host,x.hostname=g.hostname===p?\"\":g.hostname.replace(/(\\[|\\])/g,\"\"),x.protocol=C?u||null:g.protocol,x.search=g.search.replace(/\\\\/g,\"%5C\"),x.hash=g.hash.replace(/\\\\/g,\"%5C\");var j=e.split(\"#\");!x.search&&~j[0].indexOf(\"?\")&&(x.search=\"?\"),x.hash||\"\"!==j[1]||(x.hash=\"#\"),x.query=t?a.decode(g.search.substr(1)):x.search.substr(1),x.pathname=U+(n?function(e){return e.replace(/['^|`]/g,(function(e){return\"%\"+e.charCodeAt().toString(16).toUpperCase()})).replace(/((?:%[0-9A-F]{2})+)/g,(function(e,t){try{return decodeURIComponent(t).split(\"\").map((function(e){var t=e.charCodeAt();return t>256||/^[a-z0-9]$/i.test(e)?e:\"%\"+t.toString(16).toUpperCase()})).join(\"\")}catch(e){return t}}))}(g.pathname):g.pathname),\"about:\"===x.protocol&&\"blank\"===x.pathname&&(x.protocol=\"\",x.pathname=\"\"),C&&\"/\"!==e[0]&&(x.pathname=x.pathname.substr(1)),u&&!f.test(u)&&\"/\"!==e.slice(-1)&&\"/\"===x.pathname&&(x.pathname=\"\"),x.path=x.pathname+x.search,x.auth=[g.username,g.password].map(decodeURIComponent).filter(Boolean).join(\":\"),x.port=g.port,w&&!x.host.endsWith(w)&&(x.host+=w,x.port=w.slice(1)),x.href=U?\"\"+x.pathname+x.search+x.hash:r(x);var q=/^(file)/.test(x.href)?[\"host\",\"hostname\"]:[];return Object.keys(x).forEach((function(e){~q.indexOf(e)||(x[e]=x[e]||null)})),x}e.parse=d,e.format=r,e.resolve=h,e.resolveObject=function(e,t){return d(h(e,t))},e.Url=l}();module.exports=o})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9uYXRpdmUtdXJsL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxZQUFZLE9BQU8sZ0JBQWdCLGFBQWEsVUFBVSxtQkFBTyxDQUFDLG1IQUFvQyxJQUFJLFNBQVMsZ0NBQWdDLFdBQVcsa0JBQWtCLGlCQUFpQixZQUFZLFlBQVksV0FBVyxJQUFJLHNDQUFzQyxRQUFRLFFBQVEsaUJBQWlCLGlCQUFpQixtRUFBbUUsU0FBUyxLQUFLLFNBQVMsWUFBWSxRQUFRLCtHQUErRyxjQUFjLDZCQUE2QixzQkFBc0IsNEZBQTRGLDZLQUE2Syw2QkFBNkIsaUxBQWlMLHlHQUF5RyxRQUFRLHNEQUFzRCx1R0FBdUcsZ0JBQWdCLGdDQUFnQyw0QkFBNEIsZ0JBQWdCLDhLQUE4SyxpQkFBaUIsZ0dBQWdHLHdGQUF3RixrT0FBa08sY0FBYywyRkFBMkYsMEVBQTBFLElBQUksNkRBQTZELElBQUksYUFBYSxrQkFBa0Isd0ZBQXdGLDRCQUE0Qiw2RkFBNkYsNERBQTRELHdLQUF3SywyRkFBMkYsSUFBSSxhQUFhLFNBQVMseUVBQXlFLElBQUksZUFBZSxTQUFTLGdDQUFnQyxxTkFBcU4sbUJBQW1CLG9LQUFvSyx3Q0FBd0Msb0RBQW9ELDBCQUEwQixFQUFFLHFCQUFxQixJQUFJLHdEQUF3RCxxQkFBcUIsdUVBQXVFLFlBQVksU0FBUyxVQUFVLEdBQUcscWJBQXFiLG9EQUFvRCwyQ0FBMkMsaUNBQWlDLEtBQUssK0RBQStELGlCQUFpQixTQUFTLEdBQUcsaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvbmF0aXZlLXVybC9pbmRleC5qcz8xYmY2Il0sInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe3ZhciBlPXs0NTI6ZnVuY3Rpb24oZSl7XCJ1c2Ugc3RyaWN0XCI7ZS5leHBvcnRzPXJlcXVpcmUoXCJuZXh0L2Rpc3QvY29tcGlsZWQvcXVlcnlzdHJpbmctZXMzXCIpfX07dmFyIHQ9e307ZnVuY3Rpb24gX19uY2N3cGNrX3JlcXVpcmVfXyhvKXt2YXIgYT10W29dO2lmKGEhPT11bmRlZmluZWQpe3JldHVybiBhLmV4cG9ydHN9dmFyIHM9dFtvXT17ZXhwb3J0czp7fX07dmFyIG49dHJ1ZTt0cnl7ZVtvXShzLHMuZXhwb3J0cyxfX25jY3dwY2tfcmVxdWlyZV9fKTtuPWZhbHNlfWZpbmFsbHl7aWYobilkZWxldGUgdFtvXX1yZXR1cm4gcy5leHBvcnRzfWlmKHR5cGVvZiBfX25jY3dwY2tfcmVxdWlyZV9fIT09XCJ1bmRlZmluZWRcIilfX25jY3dwY2tfcmVxdWlyZV9fLmFiPV9fZGlybmFtZStcIi9cIjt2YXIgbz17fTshZnVuY3Rpb24oKXt2YXIgZT1vO3ZhciB0LGE9KHQ9X19uY2N3cGNrX3JlcXVpcmVfXyg0NTIpKSYmXCJvYmplY3RcIj09dHlwZW9mIHQmJlwiZGVmYXVsdFwiaW4gdD90LmRlZmF1bHQ6dCxzPS9odHRwcz98ZnRwfGdvcGhlcnxmaWxlLztmdW5jdGlvbiByKGUpe1wic3RyaW5nXCI9PXR5cGVvZiBlJiYoZT1kKGUpKTt2YXIgdD1mdW5jdGlvbihlLHQsbyl7dmFyIGE9ZS5hdXRoLHM9ZS5ob3N0bmFtZSxuPWUucHJvdG9jb2x8fFwiXCIscD1lLnBhdGhuYW1lfHxcIlwiLGM9ZS5oYXNofHxcIlwiLGk9ZS5xdWVyeXx8XCJcIix1PSExO2E9YT9lbmNvZGVVUklDb21wb25lbnQoYSkucmVwbGFjZSgvJTNBL2ksXCI6XCIpK1wiQFwiOlwiXCIsZS5ob3N0P3U9YStlLmhvc3Q6cyYmKHU9YSsofnMuaW5kZXhPZihcIjpcIik/XCJbXCIrcytcIl1cIjpzKSxlLnBvcnQmJih1Kz1cIjpcIitlLnBvcnQpKSxpJiZcIm9iamVjdFwiPT10eXBlb2YgaSYmKGk9dC5lbmNvZGUoaSkpO3ZhciBmPWUuc2VhcmNofHxpJiZcIj9cIitpfHxcIlwiO3JldHVybiBuJiZcIjpcIiE9PW4uc3Vic3RyKC0xKSYmKG4rPVwiOlwiKSxlLnNsYXNoZXN8fCghbnx8by50ZXN0KG4pKSYmITEhPT11Pyh1PVwiLy9cIisodXx8XCJcIikscCYmXCIvXCIhPT1wWzBdJiYocD1cIi9cIitwKSk6dXx8KHU9XCJcIiksYyYmXCIjXCIhPT1jWzBdJiYoYz1cIiNcIitjKSxmJiZcIj9cIiE9PWZbMF0mJihmPVwiP1wiK2YpLHtwcm90b2NvbDpuLGhvc3Q6dSxwYXRobmFtZTpwPXAucmVwbGFjZSgvWz8jXS9nLGVuY29kZVVSSUNvbXBvbmVudCksc2VhcmNoOmY9Zi5yZXBsYWNlKFwiI1wiLFwiJTIzXCIpLGhhc2g6Y319KGUsYSxzKTtyZXR1cm5cIlwiK3QucHJvdG9jb2wrdC5ob3N0K3QucGF0aG5hbWUrdC5zZWFyY2grdC5oYXNofXZhciBuPVwiaHR0cDovL1wiLHA9XCJ3LndcIixjPW4rcCxpPS9eKFthLXowLTkuKy1dKjpcXC9cXC9cXC8pKFthLXowLTkuKy1dOlxcLyopPy9pLHU9L2h0dHBzP3xmdHB8Z29waGVyfGZpbGUvO2Z1bmN0aW9uIGgoZSx0KXt2YXIgbz1cInN0cmluZ1wiPT10eXBlb2YgZT9kKGUpOmU7ZT1cIm9iamVjdFwiPT10eXBlb2YgZT9yKGUpOmU7dmFyIGE9ZCh0KSxzPVwiXCI7by5wcm90b2NvbCYmIW8uc2xhc2hlcyYmKHM9by5wcm90b2NvbCxlPWUucmVwbGFjZShvLnByb3RvY29sLFwiXCIpLHMrPVwiL1wiPT09dFswXXx8XCIvXCI9PT1lWzBdP1wiL1wiOlwiXCIpLHMmJmEucHJvdG9jb2wmJihzPVwiXCIsYS5zbGFzaGVzfHwocz1hLnByb3RvY29sLHQ9dC5yZXBsYWNlKGEucHJvdG9jb2wsXCJcIikpKTt2YXIgcD1lLm1hdGNoKGkpO3AmJiFhLnByb3RvY29sJiYoZT1lLnN1YnN0cigocz1wWzFdKyhwWzJdfHxcIlwiKSkubGVuZ3RoKSwvXlxcL1xcL1teL10vLnRlc3QodCkmJihzPXMuc2xpY2UoMCwtMSkpKTt2YXIgZj1uZXcgVVJMKGUsYytcIi9cIiksbT1uZXcgVVJMKHQsZikudG9TdHJpbmcoKS5yZXBsYWNlKGMsXCJcIiksdj1hLnByb3RvY29sfHxvLnByb3RvY29sO3JldHVybiB2Kz1vLnNsYXNoZXN8fGEuc2xhc2hlcz9cIi8vXCI6XCJcIiwhcyYmdj9tPW0ucmVwbGFjZShuLHYpOnMmJihtPW0ucmVwbGFjZShuLFwiXCIpKSx1LnRlc3QobSl8fH50LmluZGV4T2YoXCIuXCIpfHxcIi9cIj09PWUuc2xpY2UoLTEpfHxcIi9cIj09PXQuc2xpY2UoLTEpfHxcIi9cIiE9PW0uc2xpY2UoLTEpfHwobT1tLnNsaWNlKDAsLTEpKSxzJiYobT1zKyhcIi9cIj09PW1bMF0/bS5zdWJzdHIoMSk6bSkpLG19ZnVuY3Rpb24gbCgpe31sLnByb3RvdHlwZS5wYXJzZT1kLGwucHJvdG90eXBlLmZvcm1hdD1yLGwucHJvdG90eXBlLnJlc29sdmU9aCxsLnByb3RvdHlwZS5yZXNvbHZlT2JqZWN0PWg7dmFyIGY9L15odHRwcz98ZnRwfGdvcGhlcnxmaWxlLyxtPS9eKC4qPykoWyM/XS4qKS8sdj0vXihbYS16MC05ListXSo6KShcXC97MCwzfSkoLiopL2ksXz0vXihbYS16MC05ListXSo6KT9cXC9cXC9cXC8qL2ksYj0vXihbYS16MC05ListXSo6KShcXC97MCwyfSlcXFsoLiopXFxdJC9pO2Z1bmN0aW9uIGQoZSx0LG8pe2lmKHZvaWQgMD09PXQmJih0PSExKSx2b2lkIDA9PT1vJiYobz0hMSksZSYmXCJvYmplY3RcIj09dHlwZW9mIGUmJmUgaW5zdGFuY2VvZiBsKXJldHVybiBlO3ZhciBzPShlPWUudHJpbSgpKS5tYXRjaChtKTtlPXM/c1sxXS5yZXBsYWNlKC9cXFxcL2csXCIvXCIpK3NbMl06ZS5yZXBsYWNlKC9cXFxcL2csXCIvXCIpLGIudGVzdChlKSYmXCIvXCIhPT1lLnNsaWNlKC0xKSYmKGUrPVwiL1wiKTt2YXIgbj0hLyheamF2YXNjcmlwdCkvLnRlc3QoZSkmJmUubWF0Y2godiksaT1fLnRlc3QoZSksdT1cIlwiO24mJihmLnRlc3QoblsxXSl8fCh1PW5bMV0udG9Mb3dlckNhc2UoKSxlPVwiXCIrblsyXStuWzNdKSxuWzJdfHwoaT0hMSxmLnRlc3QoblsxXSk/KHU9blsxXSxlPVwiXCIrblszXSk6ZT1cIi8vXCIrblszXSksMyE9PW5bMl0ubGVuZ3RoJiYxIT09blsyXS5sZW5ndGh8fCh1PW5bMV0sZT1cIi9cIituWzNdKSk7dmFyIGcseT0ocz9zWzFdOmUpLm1hdGNoKC9eaHR0cHM/OlxcL1xcL1teL10rKDpbMC05XSspKD89XFwvfCQpLyksdz15JiZ5WzFdLHg9bmV3IGwsQz1cIlwiLFU9XCJcIjt0cnl7Zz1uZXcgVVJMKGUpfWNhdGNoKHQpe0M9dCx1fHxvfHwhL15cXC9cXC8vLnRlc3QoZSl8fC9eXFwvXFwvLitbQC5dLy50ZXN0KGUpfHwoVT1cIi9cIixlPWUuc3Vic3RyKDEpKTt0cnl7Zz1uZXcgVVJMKGUsYyl9Y2F0Y2goZSl7cmV0dXJuIHgucHJvdG9jb2w9dSx4LmhyZWY9dSx4fX14LnNsYXNoZXM9aSYmIVUseC5ob3N0PWcuaG9zdD09PXA/XCJcIjpnLmhvc3QseC5ob3N0bmFtZT1nLmhvc3RuYW1lPT09cD9cIlwiOmcuaG9zdG5hbWUucmVwbGFjZSgvKFxcW3xcXF0pL2csXCJcIikseC5wcm90b2NvbD1DP3V8fG51bGw6Zy5wcm90b2NvbCx4LnNlYXJjaD1nLnNlYXJjaC5yZXBsYWNlKC9cXFxcL2csXCIlNUNcIikseC5oYXNoPWcuaGFzaC5yZXBsYWNlKC9cXFxcL2csXCIlNUNcIik7dmFyIGo9ZS5zcGxpdChcIiNcIik7IXguc2VhcmNoJiZ+alswXS5pbmRleE9mKFwiP1wiKSYmKHguc2VhcmNoPVwiP1wiKSx4Lmhhc2h8fFwiXCIhPT1qWzFdfHwoeC5oYXNoPVwiI1wiKSx4LnF1ZXJ5PXQ/YS5kZWNvZGUoZy5zZWFyY2guc3Vic3RyKDEpKTp4LnNlYXJjaC5zdWJzdHIoMSkseC5wYXRobmFtZT1VKyhuP2Z1bmN0aW9uKGUpe3JldHVybiBlLnJlcGxhY2UoL1snXnxgXS9nLChmdW5jdGlvbihlKXtyZXR1cm5cIiVcIitlLmNoYXJDb2RlQXQoKS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKX0pKS5yZXBsYWNlKC8oKD86JVswLTlBLUZdezJ9KSspL2csKGZ1bmN0aW9uKGUsdCl7dHJ5e3JldHVybiBkZWNvZGVVUklDb21wb25lbnQodCkuc3BsaXQoXCJcIikubWFwKChmdW5jdGlvbihlKXt2YXIgdD1lLmNoYXJDb2RlQXQoKTtyZXR1cm4gdD4yNTZ8fC9eW2EtejAtOV0kL2kudGVzdChlKT9lOlwiJVwiK3QudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKCl9KSkuam9pbihcIlwiKX1jYXRjaChlKXtyZXR1cm4gdH19KSl9KGcucGF0aG5hbWUpOmcucGF0aG5hbWUpLFwiYWJvdXQ6XCI9PT14LnByb3RvY29sJiZcImJsYW5rXCI9PT14LnBhdGhuYW1lJiYoeC5wcm90b2NvbD1cIlwiLHgucGF0aG5hbWU9XCJcIiksQyYmXCIvXCIhPT1lWzBdJiYoeC5wYXRobmFtZT14LnBhdGhuYW1lLnN1YnN0cigxKSksdSYmIWYudGVzdCh1KSYmXCIvXCIhPT1lLnNsaWNlKC0xKSYmXCIvXCI9PT14LnBhdGhuYW1lJiYoeC5wYXRobmFtZT1cIlwiKSx4LnBhdGg9eC5wYXRobmFtZSt4LnNlYXJjaCx4LmF1dGg9W2cudXNlcm5hbWUsZy5wYXNzd29yZF0ubWFwKGRlY29kZVVSSUNvbXBvbmVudCkuZmlsdGVyKEJvb2xlYW4pLmpvaW4oXCI6XCIpLHgucG9ydD1nLnBvcnQsdyYmIXguaG9zdC5lbmRzV2l0aCh3KSYmKHguaG9zdCs9dyx4LnBvcnQ9dy5zbGljZSgxKSkseC5ocmVmPVU/XCJcIit4LnBhdGhuYW1lK3guc2VhcmNoK3guaGFzaDpyKHgpO3ZhciBxPS9eKGZpbGUpLy50ZXN0KHguaHJlZik/W1wiaG9zdFwiLFwiaG9zdG5hbWVcIl06W107cmV0dXJuIE9iamVjdC5rZXlzKHgpLmZvckVhY2goKGZ1bmN0aW9uKGUpe35xLmluZGV4T2YoZSl8fCh4W2VdPXhbZV18fG51bGwpfSkpLHh9ZS5wYXJzZT1kLGUuZm9ybWF0PXIsZS5yZXNvbHZlPWgsZS5yZXNvbHZlT2JqZWN0PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGQoaChlLHQpKX0sZS5Vcmw9bH0oKTttb2R1bGUuZXhwb3J0cz1vfSkoKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/compiled/native-url/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/compiled/querystring-es3/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/querystring-es3/index.js ***!
  \******************************************************************/
/***/ ((module) => {

eval("var __dirname = \"/\";\n(function(){\"use strict\";var e={815:function(e){function hasOwnProperty(e,r){return Object.prototype.hasOwnProperty.call(e,r)}e.exports=function(e,n,t,o){n=n||\"&\";t=t||\"=\";var a={};if(typeof e!==\"string\"||e.length===0){return a}var i=/\\+/g;e=e.split(n);var u=1e3;if(o&&typeof o.maxKeys===\"number\"){u=o.maxKeys}var c=e.length;if(u>0&&c>u){c=u}for(var p=0;p<c;++p){var f=e[p].replace(i,\"%20\"),s=f.indexOf(t),_,l,y,d;if(s>=0){_=f.substr(0,s);l=f.substr(s+1)}else{_=f;l=\"\"}y=decodeURIComponent(_);d=decodeURIComponent(l);if(!hasOwnProperty(a,y)){a[y]=d}else if(r(a[y])){a[y].push(d)}else{a[y]=[a[y],d]}}return a};var r=Array.isArray||function(e){return Object.prototype.toString.call(e)===\"[object Array]\"}},577:function(e){var stringifyPrimitive=function(e){switch(typeof e){case\"string\":return e;case\"boolean\":return e?\"true\":\"false\";case\"number\":return isFinite(e)?e:\"\";default:return\"\"}};e.exports=function(e,t,o,a){t=t||\"&\";o=o||\"=\";if(e===null){e=undefined}if(typeof e===\"object\"){return map(n(e),(function(n){var a=encodeURIComponent(stringifyPrimitive(n))+o;if(r(e[n])){return map(e[n],(function(e){return a+encodeURIComponent(stringifyPrimitive(e))})).join(t)}else{return a+encodeURIComponent(stringifyPrimitive(e[n]))}})).join(t)}if(!a)return\"\";return encodeURIComponent(stringifyPrimitive(a))+o+encodeURIComponent(stringifyPrimitive(e))};var r=Array.isArray||function(e){return Object.prototype.toString.call(e)===\"[object Array]\"};function map(e,r){if(e.map)return e.map(r);var n=[];for(var t=0;t<e.length;t++){n.push(r(e[t],t))}return n}var n=Object.keys||function(e){var r=[];for(var n in e){if(Object.prototype.hasOwnProperty.call(e,n))r.push(n)}return r}}};var r={};function __nccwpck_require__(n){var t=r[n];if(t!==undefined){return t.exports}var o=r[n]={exports:{}};var a=true;try{e[n](o,o.exports,__nccwpck_require__);a=false}finally{if(a)delete r[n]}return o.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var n={};!function(){var e=n;e.decode=e.parse=__nccwpck_require__(815);e.encode=e.stringify=__nccwpck_require__(577)}();module.exports=n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9xdWVyeXN0cmluZy1lczMvaW5kZXguanMiLCJtYXBwaW5ncyI6IjtBQUFBLFlBQVksYUFBYSxPQUFPLGdCQUFnQiw2QkFBNkIsaURBQWlELDRCQUE0QixTQUFTLFNBQVMsU0FBUyxzQ0FBc0MsU0FBUyxZQUFZLGFBQWEsVUFBVSxtQ0FBbUMsWUFBWSxlQUFlLGFBQWEsSUFBSSxZQUFZLElBQUksS0FBSyxtREFBbUQsU0FBUyxnQkFBZ0IsZ0JBQWdCLEtBQUssSUFBSSxLQUFLLHdCQUF3Qix3QkFBd0IseUJBQXlCLE9BQU8saUJBQWlCLGFBQWEsS0FBSyxlQUFlLFVBQVUsaUNBQWlDLDZEQUE2RCxpQkFBaUIsbUNBQW1DLGlCQUFpQixzQkFBc0Isc0NBQXNDLHFDQUFxQyxtQkFBbUIsNEJBQTRCLFNBQVMsU0FBUyxhQUFhLFlBQVksd0JBQXdCLDZCQUE2QixrREFBa0QsWUFBWSw2QkFBNkIsbURBQW1ELFdBQVcsS0FBSyx1REFBdUQsV0FBVyxlQUFlLDhGQUE4RixpQ0FBaUMsNkRBQTZELGtCQUFrQix5QkFBeUIsU0FBUyxZQUFZLFdBQVcsS0FBSyxrQkFBa0IsU0FBUywrQkFBK0IsU0FBUyxnQkFBZ0IsdURBQXVELFlBQVksU0FBUyxnQ0FBZ0MsV0FBVyxrQkFBa0IsaUJBQWlCLFlBQVksWUFBWSxXQUFXLElBQUksc0NBQXNDLFFBQVEsUUFBUSxpQkFBaUIsaUJBQWlCLG1FQUFtRSxTQUFTLEtBQUssU0FBUyxZQUFZLFFBQVEsMENBQTBDLDhDQUE4QyxHQUFHLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3F1ZXJ5c3RyaW5nLWVzMy9pbmRleC5qcz9kNWNhIl0sInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe1widXNlIHN0cmljdFwiO3ZhciBlPXs4MTU6ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gaGFzT3duUHJvcGVydHkoZSxyKXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUscil9ZS5leHBvcnRzPWZ1bmN0aW9uKGUsbix0LG8pe249bnx8XCImXCI7dD10fHxcIj1cIjt2YXIgYT17fTtpZih0eXBlb2YgZSE9PVwic3RyaW5nXCJ8fGUubGVuZ3RoPT09MCl7cmV0dXJuIGF9dmFyIGk9L1xcKy9nO2U9ZS5zcGxpdChuKTt2YXIgdT0xZTM7aWYobyYmdHlwZW9mIG8ubWF4S2V5cz09PVwibnVtYmVyXCIpe3U9by5tYXhLZXlzfXZhciBjPWUubGVuZ3RoO2lmKHU+MCYmYz51KXtjPXV9Zm9yKHZhciBwPTA7cDxjOysrcCl7dmFyIGY9ZVtwXS5yZXBsYWNlKGksXCIlMjBcIikscz1mLmluZGV4T2YodCksXyxsLHksZDtpZihzPj0wKXtfPWYuc3Vic3RyKDAscyk7bD1mLnN1YnN0cihzKzEpfWVsc2V7Xz1mO2w9XCJcIn15PWRlY29kZVVSSUNvbXBvbmVudChfKTtkPWRlY29kZVVSSUNvbXBvbmVudChsKTtpZighaGFzT3duUHJvcGVydHkoYSx5KSl7YVt5XT1kfWVsc2UgaWYocihhW3ldKSl7YVt5XS5wdXNoKGQpfWVsc2V7YVt5XT1bYVt5XSxkXX19cmV0dXJuIGF9O3ZhciByPUFycmF5LmlzQXJyYXl8fGZ1bmN0aW9uKGUpe3JldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSk9PT1cIltvYmplY3QgQXJyYXldXCJ9fSw1Nzc6ZnVuY3Rpb24oZSl7dmFyIHN0cmluZ2lmeVByaW1pdGl2ZT1mdW5jdGlvbihlKXtzd2l0Y2godHlwZW9mIGUpe2Nhc2VcInN0cmluZ1wiOnJldHVybiBlO2Nhc2VcImJvb2xlYW5cIjpyZXR1cm4gZT9cInRydWVcIjpcImZhbHNlXCI7Y2FzZVwibnVtYmVyXCI6cmV0dXJuIGlzRmluaXRlKGUpP2U6XCJcIjtkZWZhdWx0OnJldHVyblwiXCJ9fTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0LG8sYSl7dD10fHxcIiZcIjtvPW98fFwiPVwiO2lmKGU9PT1udWxsKXtlPXVuZGVmaW5lZH1pZih0eXBlb2YgZT09PVwib2JqZWN0XCIpe3JldHVybiBtYXAobihlKSwoZnVuY3Rpb24obil7dmFyIGE9ZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShuKSkrbztpZihyKGVbbl0pKXtyZXR1cm4gbWFwKGVbbl0sKGZ1bmN0aW9uKGUpe3JldHVybiBhK2VuY29kZVVSSUNvbXBvbmVudChzdHJpbmdpZnlQcmltaXRpdmUoZSkpfSkpLmpvaW4odCl9ZWxzZXtyZXR1cm4gYStlbmNvZGVVUklDb21wb25lbnQoc3RyaW5naWZ5UHJpbWl0aXZlKGVbbl0pKX19KSkuam9pbih0KX1pZighYSlyZXR1cm5cIlwiO3JldHVybiBlbmNvZGVVUklDb21wb25lbnQoc3RyaW5naWZ5UHJpbWl0aXZlKGEpKStvK2VuY29kZVVSSUNvbXBvbmVudChzdHJpbmdpZnlQcmltaXRpdmUoZSkpfTt2YXIgcj1BcnJheS5pc0FycmF5fHxmdW5jdGlvbihlKXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGUpPT09XCJbb2JqZWN0IEFycmF5XVwifTtmdW5jdGlvbiBtYXAoZSxyKXtpZihlLm1hcClyZXR1cm4gZS5tYXAocik7dmFyIG49W107Zm9yKHZhciB0PTA7dDxlLmxlbmd0aDt0Kyspe24ucHVzaChyKGVbdF0sdCkpfXJldHVybiBufXZhciBuPU9iamVjdC5rZXlzfHxmdW5jdGlvbihlKXt2YXIgcj1bXTtmb3IodmFyIG4gaW4gZSl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsbikpci5wdXNoKG4pfXJldHVybiByfX19O3ZhciByPXt9O2Z1bmN0aW9uIF9fbmNjd3Bja19yZXF1aXJlX18obil7dmFyIHQ9cltuXTtpZih0IT09dW5kZWZpbmVkKXtyZXR1cm4gdC5leHBvcnRzfXZhciBvPXJbbl09e2V4cG9ydHM6e319O3ZhciBhPXRydWU7dHJ5e2Vbbl0obyxvLmV4cG9ydHMsX19uY2N3cGNrX3JlcXVpcmVfXyk7YT1mYWxzZX1maW5hbGx5e2lmKGEpZGVsZXRlIHJbbl19cmV0dXJuIG8uZXhwb3J0c31pZih0eXBlb2YgX19uY2N3cGNrX3JlcXVpcmVfXyE9PVwidW5kZWZpbmVkXCIpX19uY2N3cGNrX3JlcXVpcmVfXy5hYj1fX2Rpcm5hbWUrXCIvXCI7dmFyIG49e307IWZ1bmN0aW9uKCl7dmFyIGU9bjtlLmRlY29kZT1lLnBhcnNlPV9fbmNjd3Bja19yZXF1aXJlX18oODE1KTtlLmVuY29kZT1lLnN0cmluZ2lmeT1fX25jY3dwY2tfcmVxdWlyZV9fKDU3Nyl9KCk7bW9kdWxlLmV4cG9ydHM9bn0pKCk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/compiled/querystring-es3/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/compiled/ua-parser-js/ua-parser.js":
/*!*******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/ua-parser-js/ua-parser.js ***!
  \*******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __dirname = \"/\";\nvar __WEBPACK_AMD_DEFINE_RESULT__;(()=>{var i={226:function(i,e){(function(o,a){\"use strict\";var r=\"1.0.35\",t=\"\",n=\"?\",s=\"function\",b=\"undefined\",w=\"object\",l=\"string\",d=\"major\",c=\"model\",u=\"name\",p=\"type\",m=\"vendor\",f=\"version\",h=\"architecture\",v=\"console\",g=\"mobile\",k=\"tablet\",x=\"smarttv\",_=\"wearable\",y=\"embedded\",q=350;var T=\"Amazon\",S=\"Apple\",z=\"ASUS\",N=\"BlackBerry\",A=\"Browser\",C=\"Chrome\",E=\"Edge\",O=\"Firefox\",U=\"Google\",j=\"Huawei\",P=\"LG\",R=\"Microsoft\",M=\"Motorola\",B=\"Opera\",V=\"Samsung\",D=\"Sharp\",I=\"Sony\",W=\"Viera\",F=\"Xiaomi\",G=\"Zebra\",H=\"Facebook\",L=\"Chromium OS\",Z=\"Mac OS\";var extend=function(i,e){var o={};for(var a in i){if(e[a]&&e[a].length%2===0){o[a]=e[a].concat(i[a])}else{o[a]=i[a]}}return o},enumerize=function(i){var e={};for(var o=0;o<i.length;o++){e[i[o].toUpperCase()]=i[o]}return e},has=function(i,e){return typeof i===l?lowerize(e).indexOf(lowerize(i))!==-1:false},lowerize=function(i){return i.toLowerCase()},majorize=function(i){return typeof i===l?i.replace(/[^\\d\\.]/g,t).split(\".\")[0]:a},trim=function(i,e){if(typeof i===l){i=i.replace(/^\\s\\s*/,t);return typeof e===b?i:i.substring(0,q)}};var rgxMapper=function(i,e){var o=0,r,t,n,b,l,d;while(o<e.length&&!l){var c=e[o],u=e[o+1];r=t=0;while(r<c.length&&!l){if(!c[r]){break}l=c[r++].exec(i);if(!!l){for(n=0;n<u.length;n++){d=l[++t];b=u[n];if(typeof b===w&&b.length>0){if(b.length===2){if(typeof b[1]==s){this[b[0]]=b[1].call(this,d)}else{this[b[0]]=b[1]}}else if(b.length===3){if(typeof b[1]===s&&!(b[1].exec&&b[1].test)){this[b[0]]=d?b[1].call(this,d,b[2]):a}else{this[b[0]]=d?d.replace(b[1],b[2]):a}}else if(b.length===4){this[b[0]]=d?b[3].call(this,d.replace(b[1],b[2])):a}}else{this[b]=d?d:a}}}}o+=2}},strMapper=function(i,e){for(var o in e){if(typeof e[o]===w&&e[o].length>0){for(var r=0;r<e[o].length;r++){if(has(e[o][r],i)){return o===n?a:o}}}else if(has(e[o],i)){return o===n?a:o}}return i};var $={\"1.0\":\"/8\",1.2:\"/1\",1.3:\"/3\",\"2.0\":\"/412\",\"2.0.2\":\"/416\",\"2.0.3\":\"/417\",\"2.0.4\":\"/419\",\"?\":\"/\"},X={ME:\"4.90\",\"NT 3.11\":\"NT3.51\",\"NT 4.0\":\"NT4.0\",2e3:\"NT 5.0\",XP:[\"NT 5.1\",\"NT 5.2\"],Vista:\"NT 6.0\",7:\"NT 6.1\",8:\"NT 6.2\",8.1:\"NT 6.3\",10:[\"NT 6.4\",\"NT 10.0\"],RT:\"ARM\"};var K={browser:[[/\\b(?:crmo|crios)\\/([\\w\\.]+)/i],[f,[u,\"Chrome\"]],[/edg(?:e|ios|a)?\\/([\\w\\.]+)/i],[f,[u,\"Edge\"]],[/(opera mini)\\/([-\\w\\.]+)/i,/(opera [mobiletab]{3,6})\\b.+version\\/([-\\w\\.]+)/i,/(opera)(?:.+version\\/|[\\/ ]+)([\\w\\.]+)/i],[u,f],[/opios[\\/ ]+([\\w\\.]+)/i],[f,[u,B+\" Mini\"]],[/\\bopr\\/([\\w\\.]+)/i],[f,[u,B]],[/(kindle)\\/([\\w\\.]+)/i,/(lunascape|maxthon|netfront|jasmine|blazer)[\\/ ]?([\\w\\.]*)/i,/(avant |iemobile|slim)(?:browser)?[\\/ ]?([\\w\\.]*)/i,/(ba?idubrowser)[\\/ ]?([\\w\\.]+)/i,/(?:ms|\\()(ie) ([\\w\\.]+)/i,/(flock|rockmelt|midori|epiphany|silk|skyfire|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|qq|duckduckgo)\\/([-\\w\\.]+)/i,/(heytap|ovi)browser\\/([\\d\\.]+)/i,/(weibo)__([\\d\\.]+)/i],[u,f],[/(?:\\buc? ?browser|(?:juc.+)ucweb)[\\/ ]?([\\w\\.]+)/i],[f,[u,\"UC\"+A]],[/microm.+\\bqbcore\\/([\\w\\.]+)/i,/\\bqbcore\\/([\\w\\.]+).+microm/i],[f,[u,\"WeChat(Win) Desktop\"]],[/micromessenger\\/([\\w\\.]+)/i],[f,[u,\"WeChat\"]],[/konqueror\\/([\\w\\.]+)/i],[f,[u,\"Konqueror\"]],[/trident.+rv[: ]([\\w\\.]{1,9})\\b.+like gecko/i],[f,[u,\"IE\"]],[/ya(?:search)?browser\\/([\\w\\.]+)/i],[f,[u,\"Yandex\"]],[/(avast|avg)\\/([\\w\\.]+)/i],[[u,/(.+)/,\"$1 Secure \"+A],f],[/\\bfocus\\/([\\w\\.]+)/i],[f,[u,O+\" Focus\"]],[/\\bopt\\/([\\w\\.]+)/i],[f,[u,B+\" Touch\"]],[/coc_coc\\w+\\/([\\w\\.]+)/i],[f,[u,\"Coc Coc\"]],[/dolfin\\/([\\w\\.]+)/i],[f,[u,\"Dolphin\"]],[/coast\\/([\\w\\.]+)/i],[f,[u,B+\" Coast\"]],[/miuibrowser\\/([\\w\\.]+)/i],[f,[u,\"MIUI \"+A]],[/fxios\\/([-\\w\\.]+)/i],[f,[u,O]],[/\\bqihu|(qi?ho?o?|360)browser/i],[[u,\"360 \"+A]],[/(oculus|samsung|sailfish|huawei)browser\\/([\\w\\.]+)/i],[[u,/(.+)/,\"$1 \"+A],f],[/(comodo_dragon)\\/([\\w\\.]+)/i],[[u,/_/g,\" \"],f],[/(electron)\\/([\\w\\.]+) safari/i,/(tesla)(?: qtcarbrowser|\\/(20\\d\\d\\.[-\\w\\.]+))/i,/m?(qqbrowser|baiduboxapp|2345Explorer)[\\/ ]?([\\w\\.]+)/i],[u,f],[/(metasr)[\\/ ]?([\\w\\.]+)/i,/(lbbrowser)/i,/\\[(linkedin)app\\]/i],[u],[/((?:fban\\/fbios|fb_iab\\/fb4a)(?!.+fbav)|;fbav\\/([\\w\\.]+);)/i],[[u,H],f],[/(kakao(?:talk|story))[\\/ ]([\\w\\.]+)/i,/(naver)\\(.*?(\\d+\\.[\\w\\.]+).*\\)/i,/safari (line)\\/([\\w\\.]+)/i,/\\b(line)\\/([\\w\\.]+)\\/iab/i,/(chromium|instagram)[\\/ ]([-\\w\\.]+)/i],[u,f],[/\\bgsa\\/([\\w\\.]+) .*safari\\//i],[f,[u,\"GSA\"]],[/musical_ly(?:.+app_?version\\/|_)([\\w\\.]+)/i],[f,[u,\"TikTok\"]],[/headlesschrome(?:\\/([\\w\\.]+)| )/i],[f,[u,C+\" Headless\"]],[/ wv\\).+(chrome)\\/([\\w\\.]+)/i],[[u,C+\" WebView\"],f],[/droid.+ version\\/([\\w\\.]+)\\b.+(?:mobile safari|safari)/i],[f,[u,\"Android \"+A]],[/(chrome|omniweb|arora|[tizenoka]{5} ?browser)\\/v?([\\w\\.]+)/i],[u,f],[/version\\/([\\w\\.\\,]+) .*mobile\\/\\w+ (safari)/i],[f,[u,\"Mobile Safari\"]],[/version\\/([\\w(\\.|\\,)]+) .*(mobile ?safari|safari)/i],[f,u],[/webkit.+?(mobile ?safari|safari)(\\/[\\w\\.]+)/i],[u,[f,strMapper,$]],[/(webkit|khtml)\\/([\\w\\.]+)/i],[u,f],[/(navigator|netscape\\d?)\\/([-\\w\\.]+)/i],[[u,\"Netscape\"],f],[/mobile vr; rv:([\\w\\.]+)\\).+firefox/i],[f,[u,O+\" Reality\"]],[/ekiohf.+(flow)\\/([\\w\\.]+)/i,/(swiftfox)/i,/(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror|klar)[\\/ ]?([\\w\\.\\+]+)/i,/(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([-\\w\\.]+)$/i,/(firefox)\\/([\\w\\.]+)/i,/(mozilla)\\/([\\w\\.]+) .+rv\\:.+gecko\\/\\d+/i,/(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir|obigo|mosaic|(?:go|ice|up)[\\. ]?browser)[-\\/ ]?v?([\\w\\.]+)/i,/(links) \\(([\\w\\.]+)/i,/panasonic;(viera)/i],[u,f],[/(cobalt)\\/([\\w\\.]+)/i],[u,[f,/master.|lts./,\"\"]]],cpu:[[/(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\\)]/i],[[h,\"amd64\"]],[/(ia32(?=;))/i],[[h,lowerize]],[/((?:i[346]|x)86)[;\\)]/i],[[h,\"ia32\"]],[/\\b(aarch64|arm(v?8e?l?|_?64))\\b/i],[[h,\"arm64\"]],[/\\b(arm(?:v[67])?ht?n?[fl]p?)\\b/i],[[h,\"armhf\"]],[/windows (ce|mobile); ppc;/i],[[h,\"arm\"]],[/((?:ppc|powerpc)(?:64)?)(?: mac|;|\\))/i],[[h,/ower/,t,lowerize]],[/(sun4\\w)[;\\)]/i],[[h,\"sparc\"]],[/((?:avr32|ia64(?=;))|68k(?=\\))|\\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\\b|pa-risc)/i],[[h,lowerize]]],device:[[/\\b(sch-i[89]0\\d|shw-m380s|sm-[ptx]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus 10)/i],[c,[m,V],[p,k]],[/\\b((?:s[cgp]h|gt|sm)-\\w+|sc[g-]?[\\d]+a?|galaxy nexus)/i,/samsung[- ]([-\\w]+)/i,/sec-(sgh\\w+)/i],[c,[m,V],[p,g]],[/(?:\\/|\\()(ip(?:hone|od)[\\w, ]*)(?:\\/|;)/i],[c,[m,S],[p,g]],[/\\((ipad);[-\\w\\),; ]+apple/i,/applecoremedia\\/[\\w\\.]+ \\((ipad)/i,/\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i],[c,[m,S],[p,k]],[/(macintosh);/i],[c,[m,S]],[/\\b(sh-?[altvz]?\\d\\d[a-ekm]?)/i],[c,[m,D],[p,g]],[/\\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\\d{2})\\b(?!.+d\\/s)/i],[c,[m,j],[p,k]],[/(?:huawei|honor)([-\\w ]+)[;\\)]/i,/\\b(nexus 6p|\\w{2,4}e?-[atu]?[ln][\\dx][012359c][adn]?)\\b(?!.+d\\/s)/i],[c,[m,j],[p,g]],[/\\b(poco[\\w ]+)(?: bui|\\))/i,/\\b; (\\w+) build\\/hm\\1/i,/\\b(hm[-_ ]?note?[_ ]?(?:\\d\\w)?) bui/i,/\\b(redmi[\\-_ ]?(?:note|k)?[\\w_ ]+)(?: bui|\\))/i,/\\b(mi[-_ ]?(?:a\\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\\d?\\w?)[_ ]?(?:plus|se|lite)?)(?: bui|\\))/i],[[c,/_/g,\" \"],[m,F],[p,g]],[/\\b(mi[-_ ]?(?:pad)(?:[\\w_ ]+))(?: bui|\\))/i],[[c,/_/g,\" \"],[m,F],[p,k]],[/; (\\w+) bui.+ oppo/i,/\\b(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007|a101op)\\b/i],[c,[m,\"OPPO\"],[p,g]],[/vivo (\\w+)(?: bui|\\))/i,/\\b(v[12]\\d{3}\\w?[at])(?: bui|;)/i],[c,[m,\"Vivo\"],[p,g]],[/\\b(rmx[12]\\d{3})(?: bui|;|\\))/i],[c,[m,\"Realme\"],[p,g]],[/\\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\\b[\\w ]+build\\//i,/\\bmot(?:orola)?[- ](\\w*)/i,/((?:moto[\\w\\(\\) ]+|xt\\d{3,4}|nexus 6)(?= bui|\\)))/i],[c,[m,M],[p,g]],[/\\b(mz60\\d|xoom[2 ]{0,2}) build\\//i],[c,[m,M],[p,k]],[/((?=lg)?[vl]k\\-?\\d{3}) bui| 3\\.[-\\w; ]{10}lg?-([06cv9]{3,4})/i],[c,[m,P],[p,k]],[/(lm(?:-?f100[nv]?|-[\\w\\.]+)(?= bui|\\))|nexus [45])/i,/\\blg[-e;\\/ ]+((?!browser|netcast|android tv)\\w+)/i,/\\blg-?([\\d\\w]+) bui/i],[c,[m,P],[p,g]],[/(ideatab[-\\w ]+)/i,/lenovo ?(s[56]000[-\\w]+|tab(?:[\\w ]+)|yt[-\\d\\w]{6}|tb[-\\d\\w]{6})/i],[c,[m,\"Lenovo\"],[p,k]],[/(?:maemo|nokia).*(n900|lumia \\d+)/i,/nokia[-_ ]?([-\\w\\.]*)/i],[[c,/_/g,\" \"],[m,\"Nokia\"],[p,g]],[/(pixel c)\\b/i],[c,[m,U],[p,k]],[/droid.+; (pixel[\\daxl ]{0,6})(?: bui|\\))/i],[c,[m,U],[p,g]],[/droid.+ (a?\\d[0-2]{2}so|[c-g]\\d{4}|so[-gl]\\w+|xq-a\\w[4-7][12])(?= bui|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i],[c,[m,I],[p,g]],[/sony tablet [ps]/i,/\\b(?:sony)?sgp\\w+(?: bui|\\))/i],[[c,\"Xperia Tablet\"],[m,I],[p,k]],[/ (kb2005|in20[12]5|be20[12][59])\\b/i,/(?:one)?(?:plus)? (a\\d0\\d\\d)(?: b|\\))/i],[c,[m,\"OnePlus\"],[p,g]],[/(alexa)webm/i,/(kf[a-z]{2}wi|aeo[c-r]{2})( bui|\\))/i,/(kf[a-z]+)( bui|\\)).+silk\\//i],[c,[m,T],[p,k]],[/((?:sd|kf)[0349hijorstuw]+)( bui|\\)).+silk\\//i],[[c,/(.+)/g,\"Fire Phone $1\"],[m,T],[p,g]],[/(playbook);[-\\w\\),; ]+(rim)/i],[c,m,[p,k]],[/\\b((?:bb[a-f]|st[hv])100-\\d)/i,/\\(bb10; (\\w+)/i],[c,[m,N],[p,g]],[/(?:\\b|asus_)(transfo[prime ]{4,10} \\w+|eeepc|slider \\w+|nexus 7|padfone|p00[cj])/i],[c,[m,z],[p,k]],[/ (z[bes]6[027][012][km][ls]|zenfone \\d\\w?)\\b/i],[c,[m,z],[p,g]],[/(nexus 9)/i],[c,[m,\"HTC\"],[p,k]],[/(htc)[-;_ ]{1,2}([\\w ]+(?=\\)| bui)|\\w+)/i,/(zte)[- ]([\\w ]+?)(?: bui|\\/|\\))/i,/(alcatel|geeksphone|nexian|panasonic(?!(?:;|\\.))|sony(?!-bra))[-_ ]?([-\\w]*)/i],[m,[c,/_/g,\" \"],[p,g]],[/droid.+; ([ab][1-7]-?[0178a]\\d\\d?)/i],[c,[m,\"Acer\"],[p,k]],[/droid.+; (m[1-5] note) bui/i,/\\bmz-([-\\w]{2,})/i],[c,[m,\"Meizu\"],[p,g]],[/(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[-_ ]?([-\\w]*)/i,/(hp) ([\\w ]+\\w)/i,/(asus)-?(\\w+)/i,/(microsoft); (lumia[\\w ]+)/i,/(lenovo)[-_ ]?([-\\w]+)/i,/(jolla)/i,/(oppo) ?([\\w ]+) bui/i],[m,c,[p,g]],[/(kobo)\\s(ereader|touch)/i,/(archos) (gamepad2?)/i,/(hp).+(touchpad(?!.+tablet)|tablet)/i,/(kindle)\\/([\\w\\.]+)/i,/(nook)[\\w ]+build\\/(\\w+)/i,/(dell) (strea[kpr\\d ]*[\\dko])/i,/(le[- ]+pan)[- ]+(\\w{1,9}) bui/i,/(trinity)[- ]*(t\\d{3}) bui/i,/(gigaset)[- ]+(q\\w{1,9}) bui/i,/(vodafone) ([\\w ]+)(?:\\)| bui)/i],[m,c,[p,k]],[/(surface duo)/i],[c,[m,R],[p,k]],[/droid [\\d\\.]+; (fp\\du?)(?: b|\\))/i],[c,[m,\"Fairphone\"],[p,g]],[/(u304aa)/i],[c,[m,\"AT&T\"],[p,g]],[/\\bsie-(\\w*)/i],[c,[m,\"Siemens\"],[p,g]],[/\\b(rct\\w+) b/i],[c,[m,\"RCA\"],[p,k]],[/\\b(venue[\\d ]{2,7}) b/i],[c,[m,\"Dell\"],[p,k]],[/\\b(q(?:mv|ta)\\w+) b/i],[c,[m,\"Verizon\"],[p,k]],[/\\b(?:barnes[& ]+noble |bn[rt])([\\w\\+ ]*) b/i],[c,[m,\"Barnes & Noble\"],[p,k]],[/\\b(tm\\d{3}\\w+) b/i],[c,[m,\"NuVision\"],[p,k]],[/\\b(k88) b/i],[c,[m,\"ZTE\"],[p,k]],[/\\b(nx\\d{3}j) b/i],[c,[m,\"ZTE\"],[p,g]],[/\\b(gen\\d{3}) b.+49h/i],[c,[m,\"Swiss\"],[p,g]],[/\\b(zur\\d{3}) b/i],[c,[m,\"Swiss\"],[p,k]],[/\\b((zeki)?tb.*\\b) b/i],[c,[m,\"Zeki\"],[p,k]],[/\\b([yr]\\d{2}) b/i,/\\b(dragon[- ]+touch |dt)(\\w{5}) b/i],[[m,\"Dragon Touch\"],c,[p,k]],[/\\b(ns-?\\w{0,9}) b/i],[c,[m,\"Insignia\"],[p,k]],[/\\b((nxa|next)-?\\w{0,9}) b/i],[c,[m,\"NextBook\"],[p,k]],[/\\b(xtreme\\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i],[[m,\"Voice\"],c,[p,g]],[/\\b(lvtel\\-)?(v1[12]) b/i],[[m,\"LvTel\"],c,[p,g]],[/\\b(ph-1) /i],[c,[m,\"Essential\"],[p,g]],[/\\b(v(100md|700na|7011|917g).*\\b) b/i],[c,[m,\"Envizen\"],[p,k]],[/\\b(trio[-\\w\\. ]+) b/i],[c,[m,\"MachSpeed\"],[p,k]],[/\\btu_(1491) b/i],[c,[m,\"Rotor\"],[p,k]],[/(shield[\\w ]+) b/i],[c,[m,\"Nvidia\"],[p,k]],[/(sprint) (\\w+)/i],[m,c,[p,g]],[/(kin\\.[onetw]{3})/i],[[c,/\\./g,\" \"],[m,R],[p,g]],[/droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i],[c,[m,G],[p,k]],[/droid.+; (ec30|ps20|tc[2-8]\\d[kx])\\)/i],[c,[m,G],[p,g]],[/smart-tv.+(samsung)/i],[m,[p,x]],[/hbbtv.+maple;(\\d+)/i],[[c,/^/,\"SmartTV\"],[m,V],[p,x]],[/(nux; netcast.+smarttv|lg (netcast\\.tv-201\\d|android tv))/i],[[m,P],[p,x]],[/(apple) ?tv/i],[m,[c,S+\" TV\"],[p,x]],[/crkey/i],[[c,C+\"cast\"],[m,U],[p,x]],[/droid.+aft(\\w)( bui|\\))/i],[c,[m,T],[p,x]],[/\\(dtv[\\);].+(aquos)/i,/(aquos-tv[\\w ]+)\\)/i],[c,[m,D],[p,x]],[/(bravia[\\w ]+)( bui|\\))/i],[c,[m,I],[p,x]],[/(mitv-\\w{5}) bui/i],[c,[m,F],[p,x]],[/Hbbtv.*(technisat) (.*);/i],[m,c,[p,x]],[/\\b(roku)[\\dx]*[\\)\\/]((?:dvp-)?[\\d\\.]*)/i,/hbbtv\\/\\d+\\.\\d+\\.\\d+ +\\([\\w\\+ ]*; *([\\w\\d][^;]*);([^;]*)/i],[[m,trim],[c,trim],[p,x]],[/\\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\\b/i],[[p,x]],[/(ouya)/i,/(nintendo) ([wids3utch]+)/i],[m,c,[p,v]],[/droid.+; (shield) bui/i],[c,[m,\"Nvidia\"],[p,v]],[/(playstation [345portablevi]+)/i],[c,[m,I],[p,v]],[/\\b(xbox(?: one)?(?!; xbox))[\\); ]/i],[c,[m,R],[p,v]],[/((pebble))app/i],[m,c,[p,_]],[/(watch)(?: ?os[,\\/]|\\d,\\d\\/)[\\d\\.]+/i],[c,[m,S],[p,_]],[/droid.+; (glass) \\d/i],[c,[m,U],[p,_]],[/droid.+; (wt63?0{2,3})\\)/i],[c,[m,G],[p,_]],[/(quest( 2| pro)?)/i],[c,[m,H],[p,_]],[/(tesla)(?: qtcarbrowser|\\/[-\\w\\.]+)/i],[m,[p,y]],[/(aeobc)\\b/i],[c,[m,T],[p,y]],[/droid .+?; ([^;]+?)(?: bui|\\) applew).+? mobile safari/i],[c,[p,g]],[/droid .+?; ([^;]+?)(?: bui|\\) applew).+?(?! mobile) safari/i],[c,[p,k]],[/\\b((tablet|tab)[;\\/]|focus\\/\\d(?!.+mobile))/i],[[p,k]],[/(phone|mobile(?:[;\\/]| [ \\w\\/\\.]*safari)|pda(?=.+windows ce))/i],[[p,g]],[/(android[-\\w\\. ]{0,9});.+buil/i],[c,[m,\"Generic\"]]],engine:[[/windows.+ edge\\/([\\w\\.]+)/i],[f,[u,E+\"HTML\"]],[/webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i],[f,[u,\"Blink\"]],[/(presto)\\/([\\w\\.]+)/i,/(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\\/([\\w\\.]+)/i,/ekioh(flow)\\/([\\w\\.]+)/i,/(khtml|tasman|links)[\\/ ]\\(?([\\w\\.]+)/i,/(icab)[\\/ ]([23]\\.[\\d\\.]+)/i,/\\b(libweb)/i],[u,f],[/rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i],[f,u]],os:[[/microsoft (windows) (vista|xp)/i],[u,f],[/(windows) nt 6\\.2; (arm)/i,/(windows (?:phone(?: os)?|mobile))[\\/ ]?([\\d\\.\\w ]*)/i,/(windows)[\\/ ]?([ntce\\d\\. ]+\\w)(?!.+xbox)/i],[u,[f,strMapper,X]],[/(win(?=3|9|n)|win 9x )([nt\\d\\.]+)/i],[[u,\"Windows\"],[f,strMapper,X]],[/ip[honead]{2,4}\\b(?:.*os ([\\w]+) like mac|; opera)/i,/ios;fbsv\\/([\\d\\.]+)/i,/cfnetwork\\/.+darwin/i],[[f,/_/g,\".\"],[u,\"iOS\"]],[/(mac os x) ?([\\w\\. ]*)/i,/(macintosh|mac_powerpc\\b)(?!.+haiku)/i],[[u,Z],[f,/_/g,\".\"]],[/droid ([\\w\\.]+)\\b.+(android[- ]x86|harmonyos)/i],[f,u],[/(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\\/ ]?([\\w\\.]*)/i,/(blackberry)\\w*\\/([\\w\\.]*)/i,/(tizen|kaios)[\\/ ]([\\w\\.]+)/i,/\\((series40);/i],[u,f],[/\\(bb(10);/i],[f,[u,N]],[/(?:symbian ?os|symbos|s60(?=;)|series60)[-\\/ ]?([\\w\\.]*)/i],[f,[u,\"Symbian\"]],[/mozilla\\/[\\d\\.]+ \\((?:mobile|tablet|tv|mobile; [\\w ]+); rv:.+ gecko\\/([\\w\\.]+)/i],[f,[u,O+\" OS\"]],[/web0s;.+rt(tv)/i,/\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i],[f,[u,\"webOS\"]],[/watch(?: ?os[,\\/]|\\d,\\d\\/)([\\d\\.]+)/i],[f,[u,\"watchOS\"]],[/crkey\\/([\\d\\.]+)/i],[f,[u,C+\"cast\"]],[/(cros) [\\w]+(?:\\)| ([\\w\\.]+)\\b)/i],[[u,L],f],[/panasonic;(viera)/i,/(netrange)mmh/i,/(nettv)\\/(\\d+\\.[\\w\\.]+)/i,/(nintendo|playstation) ([wids345portablevuch]+)/i,/(xbox); +xbox ([^\\);]+)/i,/\\b(joli|palm)\\b ?(?:os)?\\/?([\\w\\.]*)/i,/(mint)[\\/\\(\\) ]?(\\w*)/i,/(mageia|vectorlinux)[; ]/i,/([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\\/ ]?(?!chrom|package)([-\\w\\.]*)/i,/(hurd|linux) ?([\\w\\.]*)/i,/(gnu) ?([\\w\\.]*)/i,/\\b([-frentopcghs]{0,5}bsd|dragonfly)[\\/ ]?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i,/(haiku) (\\w+)/i],[u,f],[/(sunos) ?([\\w\\.\\d]*)/i],[[u,\"Solaris\"],f],[/((?:open)?solaris)[-\\/ ]?([\\w\\.]*)/i,/(aix) ((\\d)(?=\\.|\\)| )[\\w\\.])*/i,/\\b(beos|os\\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i,/(unix) ?([\\w\\.]*)/i],[u,f]]};var UAParser=function(i,e){if(typeof i===w){e=i;i=a}if(!(this instanceof UAParser)){return new UAParser(i,e).getResult()}var r=typeof o!==b&&o.navigator?o.navigator:a;var n=i||(r&&r.userAgent?r.userAgent:t);var v=r&&r.userAgentData?r.userAgentData:a;var x=e?extend(K,e):K;var _=r&&r.userAgent==n;this.getBrowser=function(){var i={};i[u]=a;i[f]=a;rgxMapper.call(i,n,x.browser);i[d]=majorize(i[f]);if(_&&r&&r.brave&&typeof r.brave.isBrave==s){i[u]=\"Brave\"}return i};this.getCPU=function(){var i={};i[h]=a;rgxMapper.call(i,n,x.cpu);return i};this.getDevice=function(){var i={};i[m]=a;i[c]=a;i[p]=a;rgxMapper.call(i,n,x.device);if(_&&!i[p]&&v&&v.mobile){i[p]=g}if(_&&i[c]==\"Macintosh\"&&r&&typeof r.standalone!==b&&r.maxTouchPoints&&r.maxTouchPoints>2){i[c]=\"iPad\";i[p]=k}return i};this.getEngine=function(){var i={};i[u]=a;i[f]=a;rgxMapper.call(i,n,x.engine);return i};this.getOS=function(){var i={};i[u]=a;i[f]=a;rgxMapper.call(i,n,x.os);if(_&&!i[u]&&v&&v.platform!=\"Unknown\"){i[u]=v.platform.replace(/chrome os/i,L).replace(/macos/i,Z)}return i};this.getResult=function(){return{ua:this.getUA(),browser:this.getBrowser(),engine:this.getEngine(),os:this.getOS(),device:this.getDevice(),cpu:this.getCPU()}};this.getUA=function(){return n};this.setUA=function(i){n=typeof i===l&&i.length>q?trim(i,q):i;return this};this.setUA(n);return this};UAParser.VERSION=r;UAParser.BROWSER=enumerize([u,f,d]);UAParser.CPU=enumerize([h]);UAParser.DEVICE=enumerize([c,m,p,v,g,x,k,_,y]);UAParser.ENGINE=UAParser.OS=enumerize([u,f]);if(typeof e!==b){if(\"object\"!==b&&i.exports){e=i.exports=UAParser}e.UAParser=UAParser}else{if(\"function\"===s&&__webpack_require__.amdO){!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(){return UAParser}).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))}else if(typeof o!==b){o.UAParser=UAParser}}var Q=typeof o!==b&&(o.jQuery||o.Zepto);if(Q&&!Q.ua){var Y=new UAParser;Q.ua=Y.getResult();Q.ua.get=function(){return Y.getUA()};Q.ua.set=function(i){Y.setUA(i);var e=Y.getResult();for(var o in e){Q.ua[o]=e[o]}}}})(typeof window===\"object\"?window:this)}};var e={};function __nccwpck_require__(o){var a=e[o];if(a!==undefined){return a.exports}var r=e[o]={exports:{}};var t=true;try{i[o].call(r.exports,r,r.exports,__nccwpck_require__);t=false}finally{if(t)delete e[o]}return r.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var o=__nccwpck_require__(226);module.exports=o})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/compiled/ua-parser-js/ua-parser.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/api/server.js":
/*!**************************************************!*\
  !*** ./node_modules/next/dist/esm/api/server.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ImageResponse: () => (/* reexport safe */ _server_web_exports_index__WEBPACK_IMPORTED_MODULE_0__.ImageResponse),\n/* harmony export */   NextRequest: () => (/* reexport safe */ _server_web_exports_index__WEBPACK_IMPORTED_MODULE_0__.NextRequest),\n/* harmony export */   NextResponse: () => (/* reexport safe */ _server_web_exports_index__WEBPACK_IMPORTED_MODULE_0__.NextResponse),\n/* harmony export */   URLPattern: () => (/* reexport safe */ _server_web_exports_index__WEBPACK_IMPORTED_MODULE_0__.URLPattern),\n/* harmony export */   userAgent: () => (/* reexport safe */ _server_web_exports_index__WEBPACK_IMPORTED_MODULE_0__.userAgent),\n/* harmony export */   userAgentFromString: () => (/* reexport safe */ _server_web_exports_index__WEBPACK_IMPORTED_MODULE_0__.userAgentFromString)\n/* harmony export */ });\n/* harmony import */ var _server_web_exports_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../server/web/exports/index */ \"(middleware)/./node_modules/next/dist/esm/server/web/exports/index.js\");\n\r\n\r\n//# sourceMappingURL=server.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vYXBpL3NlcnZlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQTRDO0FBQzVDO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vYXBpL3NlcnZlci5qcz8zODkxIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuLi9zZXJ2ZXIvd2ViL2V4cG9ydHMvaW5kZXhcIjtcclxuXHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlcnZlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/api/server.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/app-router-headers.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/app-router-headers.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ACTION: () => (/* binding */ ACTION),\n/* harmony export */   FLIGHT_PARAMETERS: () => (/* binding */ FLIGHT_PARAMETERS),\n/* harmony export */   NEXT_DID_POSTPONE_HEADER: () => (/* binding */ NEXT_DID_POSTPONE_HEADER),\n/* harmony export */   NEXT_ROUTER_PREFETCH_HEADER: () => (/* binding */ NEXT_ROUTER_PREFETCH_HEADER),\n/* harmony export */   NEXT_ROUTER_STATE_TREE: () => (/* binding */ NEXT_ROUTER_STATE_TREE),\n/* harmony export */   NEXT_RSC_UNION_QUERY: () => (/* binding */ NEXT_RSC_UNION_QUERY),\n/* harmony export */   NEXT_URL: () => (/* binding */ NEXT_URL),\n/* harmony export */   RSC_CONTENT_TYPE_HEADER: () => (/* binding */ RSC_CONTENT_TYPE_HEADER),\n/* harmony export */   RSC_HEADER: () => (/* binding */ RSC_HEADER)\n/* harmony export */ });\nconst RSC_HEADER = \"RSC\";\nconst ACTION = \"Next-Action\";\nconst NEXT_ROUTER_STATE_TREE = \"Next-Router-State-Tree\";\nconst NEXT_ROUTER_PREFETCH_HEADER = \"Next-Router-Prefetch\";\nconst NEXT_URL = \"Next-Url\";\nconst RSC_CONTENT_TYPE_HEADER = \"text/x-component\";\nconst FLIGHT_PARAMETERS = [\n    [\n        RSC_HEADER\n    ],\n    [\n        NEXT_ROUTER_STATE_TREE\n    ],\n    [\n        NEXT_ROUTER_PREFETCH_HEADER\n    ]\n];\nconst NEXT_RSC_UNION_QUERY = \"_rsc\";\nconst NEXT_DID_POSTPONE_HEADER = \"x-nextjs-postponed\"; //# sourceMappingURL=app-router-headers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvYXBwLXJvdXRlci1oZWFkZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFPLE1BQU1BLGFBQWEsTUFBYztBQUNqQyxNQUFNQyxTQUFTLGNBQXNCO0FBRXJDLE1BQU1DLHlCQUF5Qix5QkFBaUM7QUFDaEUsTUFBTUMsOEJBQThCLHVCQUErQjtBQUNuRSxNQUFNQyxXQUFXLFdBQW1CO0FBQ3BDLE1BQU1DLDBCQUEwQixtQkFBMkI7QUFFM0QsTUFBTUMsb0JBQW9CO0lBQy9CO1FBQUNOO0tBQVc7SUFDWjtRQUFDRTtLQUF1QjtJQUN4QjtRQUFDQztLQUE0QjtDQUM5QixDQUFTO0FBRUgsTUFBTUksdUJBQXVCLE9BQWU7QUFFNUMsTUFBTUMsMkJBQTJCLHFCQUE2QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vLi4vc3JjL2NsaWVudC9jb21wb25lbnRzL2FwcC1yb3V0ZXItaGVhZGVycy50cz9mOTRlIl0sIm5hbWVzIjpbIlJTQ19IRUFERVIiLCJBQ1RJT04iLCJORVhUX1JPVVRFUl9TVEFURV9UUkVFIiwiTkVYVF9ST1VURVJfUFJFRkVUQ0hfSEVBREVSIiwiTkVYVF9VUkwiLCJSU0NfQ09OVEVOVF9UWVBFX0hFQURFUiIsIkZMSUdIVF9QQVJBTUVURVJTIiwiTkVYVF9SU0NfVU5JT05fUVVFUlkiLCJORVhUX0RJRF9QT1NUUE9ORV9IRUFERVIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/app-router-headers.js\n");

/***/ }),

/***/ "(shared)/./node_modules/next/dist/esm/client/components/request-async-storage.external.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/request-async-storage.external.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getExpectedRequestStore: () => (/* binding */ getExpectedRequestStore),\n/* harmony export */   requestAsyncStorage: () => (/* reexport safe */ _request_async_storage_instance__WEBPACK_IMPORTED_MODULE_0__.requestAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var _request_async_storage_instance__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./request-async-storage-instance */ \"(shared)/./node_modules/next/dist/esm/client/components/request-async-storage-instance.js\");\n\"TURBOPACK { transition: next-shared }\";\n\n\nfunction getExpectedRequestStore(callingExpression) {\n    const store = _request_async_storage_instance__WEBPACK_IMPORTED_MODULE_0__.requestAsyncStorage.getStore();\n    if (store) return store;\n    throw new Error(\"`\" + callingExpression + \"` was called outside a request scope. Read more: https://nextjs.org/docs/messages/next-dynamic-api-wrong-context\");\n} //# sourceMappingURL=request-async-storage.external.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNoYXJlZCkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9jbGllbnQvY29tcG9uZW50cy9yZXF1ZXN0LWFzeW5jLXN0b3JhZ2UuZXh0ZXJuYWwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBUUU7QUFDb0U7QUFnQnhDO0FBRXZCLFNBQVNDLHdCQUF3QkMsaUJBQXlCO0lBQy9ELE1BQU1DLFFBQVFILGdGQUFBQSxDQUFvQkksUUFBUTtJQUMxQyxJQUFJRCxPQUFPLE9BQU9BO0lBQ2xCLE1BQU0sSUFBSUUsTUFDUixNQUFLSCxvQkFBa0I7QUFFM0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uL3NyYy9jbGllbnQvY29tcG9uZW50cy9yZXF1ZXN0LWFzeW5jLXN0b3JhZ2UuZXh0ZXJuYWwudHM/M2NkNCJdLCJuYW1lcyI6WyJyZXF1ZXN0QXN5bmNTdG9yYWdlIiwiZ2V0RXhwZWN0ZWRSZXF1ZXN0U3RvcmUiLCJjYWxsaW5nRXhwcmVzc2lvbiIsInN0b3JlIiwiZ2V0U3RvcmUiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(shared)/./node_modules/next/dist/esm/client/components/request-async-storage.external.js\n");

/***/ }),

/***/ "(shared)/./node_modules/next/dist/esm/client/components/static-generation-async-storage.external.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/static-generation-async-storage.external.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   staticGenerationAsyncStorage: () => (/* reexport safe */ _static_generation_async_storage_instance__WEBPACK_IMPORTED_MODULE_0__.staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var _static_generation_async_storage_instance__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./static-generation-async-storage-instance */ \"(shared)/./node_modules/next/dist/esm/client/components/static-generation-async-storage-instance.js\");\n\"TURBOPACK { transition: next-shared }\";\n\n //# sourceMappingURL=static-generation-async-storage.external.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNoYXJlZCkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9jbGllbnQvY29tcG9uZW50cy9zdGF0aWMtZ2VuZXJhdGlvbi1hc3luYy1zdG9yYWdlLmV4dGVybmFsLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBU0U7QUFDdUY7QUFrRGxEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi8uLi9zcmMvY2xpZW50L2NvbXBvbmVudHMvc3RhdGljLWdlbmVyYXRpb24tYXN5bmMtc3RvcmFnZS5leHRlcm5hbC50cz8yMmI3Il0sIm5hbWVzIjpbInN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(shared)/./node_modules/next/dist/esm/client/components/static-generation-async-storage.external.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/lib/constants.js":
/*!*****************************************************!*\
  !*** ./node_modules/next/dist/esm/lib/constants.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ACTION_SUFFIX: () => (/* binding */ ACTION_SUFFIX),\n/* harmony export */   APP_DIR_ALIAS: () => (/* binding */ APP_DIR_ALIAS),\n/* harmony export */   CACHE_ONE_YEAR: () => (/* binding */ CACHE_ONE_YEAR),\n/* harmony export */   DOT_NEXT_ALIAS: () => (/* binding */ DOT_NEXT_ALIAS),\n/* harmony export */   ESLINT_DEFAULT_DIRS: () => (/* binding */ ESLINT_DEFAULT_DIRS),\n/* harmony export */   GSP_NO_RETURNED_VALUE: () => (/* binding */ GSP_NO_RETURNED_VALUE),\n/* harmony export */   GSSP_COMPONENT_MEMBER_ERROR: () => (/* binding */ GSSP_COMPONENT_MEMBER_ERROR),\n/* harmony export */   GSSP_NO_RETURNED_VALUE: () => (/* binding */ GSSP_NO_RETURNED_VALUE),\n/* harmony export */   INSTRUMENTATION_HOOK_FILENAME: () => (/* binding */ INSTRUMENTATION_HOOK_FILENAME),\n/* harmony export */   MIDDLEWARE_FILENAME: () => (/* binding */ MIDDLEWARE_FILENAME),\n/* harmony export */   MIDDLEWARE_LOCATION_REGEXP: () => (/* binding */ MIDDLEWARE_LOCATION_REGEXP),\n/* harmony export */   NEXT_BODY_SUFFIX: () => (/* binding */ NEXT_BODY_SUFFIX),\n/* harmony export */   NEXT_CACHE_IMPLICIT_TAG_ID: () => (/* binding */ NEXT_CACHE_IMPLICIT_TAG_ID),\n/* harmony export */   NEXT_CACHE_REVALIDATED_TAGS_HEADER: () => (/* binding */ NEXT_CACHE_REVALIDATED_TAGS_HEADER),\n/* harmony export */   NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER: () => (/* binding */ NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER),\n/* harmony export */   NEXT_CACHE_SOFT_TAGS_HEADER: () => (/* binding */ NEXT_CACHE_SOFT_TAGS_HEADER),\n/* harmony export */   NEXT_CACHE_SOFT_TAG_MAX_LENGTH: () => (/* binding */ NEXT_CACHE_SOFT_TAG_MAX_LENGTH),\n/* harmony export */   NEXT_CACHE_TAGS_HEADER: () => (/* binding */ NEXT_CACHE_TAGS_HEADER),\n/* harmony export */   NEXT_CACHE_TAG_MAX_ITEMS: () => (/* binding */ NEXT_CACHE_TAG_MAX_ITEMS),\n/* harmony export */   NEXT_CACHE_TAG_MAX_LENGTH: () => (/* binding */ NEXT_CACHE_TAG_MAX_LENGTH),\n/* harmony export */   NEXT_DATA_SUFFIX: () => (/* binding */ NEXT_DATA_SUFFIX),\n/* harmony export */   NEXT_INTERCEPTION_MARKER_PREFIX: () => (/* binding */ NEXT_INTERCEPTION_MARKER_PREFIX),\n/* harmony export */   NEXT_META_SUFFIX: () => (/* binding */ NEXT_META_SUFFIX),\n/* harmony export */   NEXT_QUERY_PARAM_PREFIX: () => (/* binding */ NEXT_QUERY_PARAM_PREFIX),\n/* harmony export */   NON_STANDARD_NODE_ENV: () => (/* binding */ NON_STANDARD_NODE_ENV),\n/* harmony export */   PAGES_DIR_ALIAS: () => (/* binding */ PAGES_DIR_ALIAS),\n/* harmony export */   PRERENDER_REVALIDATE_HEADER: () => (/* binding */ PRERENDER_REVALIDATE_HEADER),\n/* harmony export */   PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER: () => (/* binding */ PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER),\n/* harmony export */   PUBLIC_DIR_MIDDLEWARE_CONFLICT: () => (/* binding */ PUBLIC_DIR_MIDDLEWARE_CONFLICT),\n/* harmony export */   ROOT_DIR_ALIAS: () => (/* binding */ ROOT_DIR_ALIAS),\n/* harmony export */   RSC_ACTION_CLIENT_WRAPPER_ALIAS: () => (/* binding */ RSC_ACTION_CLIENT_WRAPPER_ALIAS),\n/* harmony export */   RSC_ACTION_ENCRYPTION_ALIAS: () => (/* binding */ RSC_ACTION_ENCRYPTION_ALIAS),\n/* harmony export */   RSC_ACTION_PROXY_ALIAS: () => (/* binding */ RSC_ACTION_PROXY_ALIAS),\n/* harmony export */   RSC_ACTION_VALIDATE_ALIAS: () => (/* binding */ RSC_ACTION_VALIDATE_ALIAS),\n/* harmony export */   RSC_MOD_REF_PROXY_ALIAS: () => (/* binding */ RSC_MOD_REF_PROXY_ALIAS),\n/* harmony export */   RSC_PREFETCH_SUFFIX: () => (/* binding */ RSC_PREFETCH_SUFFIX),\n/* harmony export */   RSC_SUFFIX: () => (/* binding */ RSC_SUFFIX),\n/* harmony export */   SERVER_PROPS_EXPORT_ERROR: () => (/* binding */ SERVER_PROPS_EXPORT_ERROR),\n/* harmony export */   SERVER_PROPS_GET_INIT_PROPS_CONFLICT: () => (/* binding */ SERVER_PROPS_GET_INIT_PROPS_CONFLICT),\n/* harmony export */   SERVER_PROPS_SSG_CONFLICT: () => (/* binding */ SERVER_PROPS_SSG_CONFLICT),\n/* harmony export */   SERVER_RUNTIME: () => (/* binding */ SERVER_RUNTIME),\n/* harmony export */   SSG_FALLBACK_EXPORT_ERROR: () => (/* binding */ SSG_FALLBACK_EXPORT_ERROR),\n/* harmony export */   SSG_GET_INITIAL_PROPS_CONFLICT: () => (/* binding */ SSG_GET_INITIAL_PROPS_CONFLICT),\n/* harmony export */   STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR: () => (/* binding */ STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR),\n/* harmony export */   UNSTABLE_REVALIDATE_RENAME_ERROR: () => (/* binding */ UNSTABLE_REVALIDATE_RENAME_ERROR),\n/* harmony export */   WEBPACK_LAYERS: () => (/* binding */ WEBPACK_LAYERS),\n/* harmony export */   WEBPACK_RESOURCE_QUERIES: () => (/* binding */ WEBPACK_RESOURCE_QUERIES)\n/* harmony export */ });\nconst NEXT_QUERY_PARAM_PREFIX = \"nxtP\";\r\nconst NEXT_INTERCEPTION_MARKER_PREFIX = \"nxtI\";\r\nconst PRERENDER_REVALIDATE_HEADER = \"x-prerender-revalidate\";\r\nconst PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER = \"x-prerender-revalidate-if-generated\";\r\nconst RSC_PREFETCH_SUFFIX = \".prefetch.rsc\";\r\nconst RSC_SUFFIX = \".rsc\";\r\nconst ACTION_SUFFIX = \".action\";\r\nconst NEXT_DATA_SUFFIX = \".json\";\r\nconst NEXT_META_SUFFIX = \".meta\";\r\nconst NEXT_BODY_SUFFIX = \".body\";\r\nconst NEXT_CACHE_TAGS_HEADER = \"x-next-cache-tags\";\r\nconst NEXT_CACHE_SOFT_TAGS_HEADER = \"x-next-cache-soft-tags\";\r\nconst NEXT_CACHE_REVALIDATED_TAGS_HEADER = \"x-next-revalidated-tags\";\r\nconst NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER = \"x-next-revalidate-tag-token\";\r\n// if these change make sure we update the related\r\n// documentation as well\r\nconst NEXT_CACHE_TAG_MAX_ITEMS = 128;\r\nconst NEXT_CACHE_TAG_MAX_LENGTH = 256;\r\nconst NEXT_CACHE_SOFT_TAG_MAX_LENGTH = 1024;\r\nconst NEXT_CACHE_IMPLICIT_TAG_ID = \"_N_T_\";\r\n// in seconds\r\nconst CACHE_ONE_YEAR = 31536000;\r\n// Patterns to detect middleware files\r\nconst MIDDLEWARE_FILENAME = \"middleware\";\r\nconst MIDDLEWARE_LOCATION_REGEXP = `(?:src/)?${MIDDLEWARE_FILENAME}`;\r\n// Pattern to detect instrumentation hooks file\r\nconst INSTRUMENTATION_HOOK_FILENAME = \"instrumentation\";\r\n// Because on Windows absolute paths in the generated code can break because of numbers, eg 1 in the path,\r\n// we have to use a private alias\r\nconst PAGES_DIR_ALIAS = \"private-next-pages\";\r\nconst DOT_NEXT_ALIAS = \"private-dot-next\";\r\nconst ROOT_DIR_ALIAS = \"private-next-root-dir\";\r\nconst APP_DIR_ALIAS = \"private-next-app-dir\";\r\nconst RSC_MOD_REF_PROXY_ALIAS = \"private-next-rsc-mod-ref-proxy\";\r\nconst RSC_ACTION_VALIDATE_ALIAS = \"private-next-rsc-action-validate\";\r\nconst RSC_ACTION_PROXY_ALIAS = \"private-next-rsc-server-reference\";\r\nconst RSC_ACTION_ENCRYPTION_ALIAS = \"private-next-rsc-action-encryption\";\r\nconst RSC_ACTION_CLIENT_WRAPPER_ALIAS = \"private-next-rsc-action-client-wrapper\";\r\nconst PUBLIC_DIR_MIDDLEWARE_CONFLICT = `You can not have a '_next' folder inside of your public folder. This conflicts with the internal '/_next' route. https://nextjs.org/docs/messages/public-next-folder-conflict`;\r\nconst SSG_GET_INITIAL_PROPS_CONFLICT = `You can not use getInitialProps with getStaticProps. To use SSG, please remove your getInitialProps`;\r\nconst SERVER_PROPS_GET_INIT_PROPS_CONFLICT = `You can not use getInitialProps with getServerSideProps. Please remove getInitialProps.`;\r\nconst SERVER_PROPS_SSG_CONFLICT = `You can not use getStaticProps or getStaticPaths with getServerSideProps. To use SSG, please remove getServerSideProps`;\r\nconst STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR = `can not have getInitialProps/getServerSideProps, https://nextjs.org/docs/messages/404-get-initial-props`;\r\nconst SERVER_PROPS_EXPORT_ERROR = `pages with \\`getServerSideProps\\` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export`;\r\nconst GSP_NO_RETURNED_VALUE = \"Your `getStaticProps` function did not return an object. Did you forget to add a `return`?\";\r\nconst GSSP_NO_RETURNED_VALUE = \"Your `getServerSideProps` function did not return an object. Did you forget to add a `return`?\";\r\nconst UNSTABLE_REVALIDATE_RENAME_ERROR = \"The `unstable_revalidate` property is available for general use.\\n\" + \"Please use `revalidate` instead.\";\r\nconst GSSP_COMPONENT_MEMBER_ERROR = `can not be attached to a page's component and must be exported from the page. See more info here: https://nextjs.org/docs/messages/gssp-component-member`;\r\nconst NON_STANDARD_NODE_ENV = `You are using a non-standard \"NODE_ENV\" value in your environment. This creates inconsistencies in the project and is strongly advised against. Read more: https://nextjs.org/docs/messages/non-standard-node-env`;\r\nconst SSG_FALLBACK_EXPORT_ERROR = `Pages with \\`fallback\\` enabled in \\`getStaticPaths\\` can not be exported. See more info here: https://nextjs.org/docs/messages/ssg-fallback-true-export`;\r\nconst ESLINT_DEFAULT_DIRS = [\r\n    \"app\",\r\n    \"pages\",\r\n    \"components\",\r\n    \"lib\",\r\n    \"src\"\r\n];\r\nconst SERVER_RUNTIME = {\r\n    edge: \"edge\",\r\n    experimentalEdge: \"experimental-edge\",\r\n    nodejs: \"nodejs\"\r\n};\r\n/**\r\n * The names of the webpack layers. These layers are the primitives for the\r\n * webpack chunks.\r\n */ const WEBPACK_LAYERS_NAMES = {\r\n    /**\r\n   * The layer for the shared code between the client and server bundles.\r\n   */ shared: \"shared\",\r\n    /**\r\n   * React Server Components layer (rsc).\r\n   */ reactServerComponents: \"rsc\",\r\n    /**\r\n   * Server Side Rendering layer for app (ssr).\r\n   */ serverSideRendering: \"ssr\",\r\n    /**\r\n   * The browser client bundle layer for actions.\r\n   */ actionBrowser: \"action-browser\",\r\n    /**\r\n   * The layer for the API routes.\r\n   */ api: \"api\",\r\n    /**\r\n   * The layer for the middleware code.\r\n   */ middleware: \"middleware\",\r\n    /**\r\n   * The layer for the instrumentation hooks.\r\n   */ instrument: \"instrument\",\r\n    /**\r\n   * The layer for assets on the edge.\r\n   */ edgeAsset: \"edge-asset\",\r\n    /**\r\n   * The browser client bundle layer for App directory.\r\n   */ appPagesBrowser: \"app-pages-browser\",\r\n    /**\r\n   * The server bundle layer for metadata routes.\r\n   */ appMetadataRoute: \"app-metadata-route\",\r\n    /**\r\n   * The layer for the server bundle for App Route handlers.\r\n   */ appRouteHandler: \"app-route-handler\"\r\n};\r\nconst WEBPACK_LAYERS = {\r\n    ...WEBPACK_LAYERS_NAMES,\r\n    GROUP: {\r\n        serverOnly: [\r\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\r\n            WEBPACK_LAYERS_NAMES.actionBrowser,\r\n            WEBPACK_LAYERS_NAMES.appMetadataRoute,\r\n            WEBPACK_LAYERS_NAMES.appRouteHandler,\r\n            WEBPACK_LAYERS_NAMES.instrument\r\n        ],\r\n        clientOnly: [\r\n            WEBPACK_LAYERS_NAMES.serverSideRendering,\r\n            WEBPACK_LAYERS_NAMES.appPagesBrowser\r\n        ],\r\n        nonClientServerTarget: [\r\n            // middleware and pages api\r\n            WEBPACK_LAYERS_NAMES.middleware,\r\n            WEBPACK_LAYERS_NAMES.api\r\n        ],\r\n        app: [\r\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\r\n            WEBPACK_LAYERS_NAMES.actionBrowser,\r\n            WEBPACK_LAYERS_NAMES.appMetadataRoute,\r\n            WEBPACK_LAYERS_NAMES.appRouteHandler,\r\n            WEBPACK_LAYERS_NAMES.serverSideRendering,\r\n            WEBPACK_LAYERS_NAMES.appPagesBrowser,\r\n            WEBPACK_LAYERS_NAMES.shared,\r\n            WEBPACK_LAYERS_NAMES.instrument\r\n        ]\r\n    }\r\n};\r\nconst WEBPACK_RESOURCE_QUERIES = {\r\n    edgeSSREntry: \"__next_edge_ssr_entry__\",\r\n    metadata: \"__next_metadata__\",\r\n    metadataRoute: \"__next_metadata_route__\",\r\n    metadataImageMeta: \"__next_metadata_image_meta__\"\r\n};\r\n\r\n\r\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/lib/constants.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/api-utils/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/api-utils/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApiError: () => (/* binding */ ApiError),\n/* harmony export */   COOKIE_NAME_PRERENDER_BYPASS: () => (/* binding */ COOKIE_NAME_PRERENDER_BYPASS),\n/* harmony export */   COOKIE_NAME_PRERENDER_DATA: () => (/* binding */ COOKIE_NAME_PRERENDER_DATA),\n/* harmony export */   RESPONSE_LIMIT_DEFAULT: () => (/* binding */ RESPONSE_LIMIT_DEFAULT),\n/* harmony export */   SYMBOL_CLEARED_COOKIES: () => (/* binding */ SYMBOL_CLEARED_COOKIES),\n/* harmony export */   SYMBOL_PREVIEW_DATA: () => (/* binding */ SYMBOL_PREVIEW_DATA),\n/* harmony export */   checkIsOnDemandRevalidate: () => (/* binding */ checkIsOnDemandRevalidate),\n/* harmony export */   clearPreviewData: () => (/* binding */ clearPreviewData),\n/* harmony export */   redirect: () => (/* binding */ redirect),\n/* harmony export */   sendError: () => (/* binding */ sendError),\n/* harmony export */   sendStatusCode: () => (/* binding */ sendStatusCode),\n/* harmony export */   setLazyProp: () => (/* binding */ setLazyProp),\n/* harmony export */   wrapApiHandler: () => (/* binding */ wrapApiHandler)\n/* harmony export */ });\n/* harmony import */ var _web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../web/spec-extension/adapters/headers */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js\");\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/constants */ \"(middleware)/./node_modules/next/dist/esm/lib/constants.js\");\n/* harmony import */ var _lib_trace_tracer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/trace/tracer */ \"(middleware)/./node_modules/next/dist/esm/server/lib/trace/tracer.js\");\n/* harmony import */ var _lib_trace_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/trace/constants */ \"(middleware)/./node_modules/next/dist/esm/server/lib/trace/constants.js\");\n\r\n\r\n\r\n\r\nfunction wrapApiHandler(page, handler) {\r\n    return (...args)=>{\r\n        var _getTracer_getRootSpanAttributes;\r\n        (_getTracer_getRootSpanAttributes = (0,_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_2__.getTracer)().getRootSpanAttributes()) == null ? void 0 : _getTracer_getRootSpanAttributes.set(\"next.route\", page);\r\n        // Call API route method\r\n        return (0,_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_2__.getTracer)().trace(_lib_trace_constants__WEBPACK_IMPORTED_MODULE_3__.NodeSpan.runHandler, {\r\n            spanName: `executing api route (pages) ${page}`\r\n        }, ()=>handler(...args));\r\n    };\r\n}\r\n/**\r\n *\r\n * @param res response object\r\n * @param statusCode `HTTP` status code of response\r\n */ function sendStatusCode(res, statusCode) {\r\n    res.statusCode = statusCode;\r\n    return res;\r\n}\r\n/**\r\n *\r\n * @param res response object\r\n * @param [statusOrUrl] `HTTP` status code of redirect\r\n * @param url URL of redirect\r\n */ function redirect(res, statusOrUrl, url) {\r\n    if (typeof statusOrUrl === \"string\") {\r\n        url = statusOrUrl;\r\n        statusOrUrl = 307;\r\n    }\r\n    if (typeof statusOrUrl !== \"number\" || typeof url !== \"string\") {\r\n        throw new Error(`Invalid redirect arguments. Please use a single argument URL, e.g. res.redirect('/destination') or use a status code and URL, e.g. res.redirect(307, '/destination').`);\r\n    }\r\n    res.writeHead(statusOrUrl, {\r\n        Location: url\r\n    });\r\n    res.write(url);\r\n    res.end();\r\n    return res;\r\n}\r\nfunction checkIsOnDemandRevalidate(req, previewProps) {\r\n    const headers = _web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_0__.HeadersAdapter.from(req.headers);\r\n    const previewModeId = headers.get(_lib_constants__WEBPACK_IMPORTED_MODULE_1__.PRERENDER_REVALIDATE_HEADER);\r\n    const isOnDemandRevalidate = previewModeId === previewProps.previewModeId;\r\n    const revalidateOnlyGenerated = headers.has(_lib_constants__WEBPACK_IMPORTED_MODULE_1__.PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER);\r\n    return {\r\n        isOnDemandRevalidate,\r\n        revalidateOnlyGenerated\r\n    };\r\n}\r\nconst COOKIE_NAME_PRERENDER_BYPASS = `__prerender_bypass`;\r\nconst COOKIE_NAME_PRERENDER_DATA = `__next_preview_data`;\r\nconst RESPONSE_LIMIT_DEFAULT = 4 * 1024 * 1024;\r\nconst SYMBOL_PREVIEW_DATA = Symbol(COOKIE_NAME_PRERENDER_DATA);\r\nconst SYMBOL_CLEARED_COOKIES = Symbol(COOKIE_NAME_PRERENDER_BYPASS);\r\nfunction clearPreviewData(res, options = {}) {\r\n    if (SYMBOL_CLEARED_COOKIES in res) {\r\n        return res;\r\n    }\r\n    const { serialize } = __webpack_require__(/*! next/dist/compiled/cookie */ \"(middleware)/./node_modules/next/dist/compiled/cookie/index.js\");\r\n    const previous = res.getHeader(\"Set-Cookie\");\r\n    res.setHeader(`Set-Cookie`, [\r\n        ...typeof previous === \"string\" ? [\r\n            previous\r\n        ] : Array.isArray(previous) ? previous : [],\r\n        serialize(COOKIE_NAME_PRERENDER_BYPASS, \"\", {\r\n            // To delete a cookie, set `expires` to a date in the past:\r\n            // https://tools.ietf.org/html/rfc6265#section-4.1.1\r\n            // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\r\n            expires: new Date(0),\r\n            httpOnly: true,\r\n            sameSite:  false ? 0 : \"lax\",\r\n            secure: \"development\" !== \"development\",\r\n            path: \"/\",\r\n            ...options.path !== undefined ? {\r\n                path: options.path\r\n            } : undefined\r\n        }),\r\n        serialize(COOKIE_NAME_PRERENDER_DATA, \"\", {\r\n            // To delete a cookie, set `expires` to a date in the past:\r\n            // https://tools.ietf.org/html/rfc6265#section-4.1.1\r\n            // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\r\n            expires: new Date(0),\r\n            httpOnly: true,\r\n            sameSite:  false ? 0 : \"lax\",\r\n            secure: \"development\" !== \"development\",\r\n            path: \"/\",\r\n            ...options.path !== undefined ? {\r\n                path: options.path\r\n            } : undefined\r\n        })\r\n    ]);\r\n    Object.defineProperty(res, SYMBOL_CLEARED_COOKIES, {\r\n        value: true,\r\n        enumerable: false\r\n    });\r\n    return res;\r\n}\r\n/**\r\n * Custom error class\r\n */ class ApiError extends Error {\r\n    constructor(statusCode, message){\r\n        super(message);\r\n        this.statusCode = statusCode;\r\n    }\r\n}\r\n/**\r\n * Sends error in `response`\r\n * @param res response object\r\n * @param statusCode of response\r\n * @param message of response\r\n */ function sendError(res, statusCode, message) {\r\n    res.statusCode = statusCode;\r\n    res.statusMessage = message;\r\n    res.end(message);\r\n}\r\n/**\r\n * Execute getter function only if its needed\r\n * @param LazyProps `req` and `params` for lazyProp\r\n * @param prop name of property\r\n * @param getter function to get data\r\n */ function setLazyProp({ req }, prop, getter) {\r\n    const opts = {\r\n        configurable: true,\r\n        enumerable: true\r\n    };\r\n    const optsReset = {\r\n        ...opts,\r\n        writable: true\r\n    };\r\n    Object.defineProperty(req, prop, {\r\n        ...opts,\r\n        get: ()=>{\r\n            const value = getter();\r\n            // we set the property on the object to avoid recalculating it\r\n            Object.defineProperty(req, prop, {\r\n                ...optsReset,\r\n                value\r\n            });\r\n            return value;\r\n        },\r\n        set: (value)=>{\r\n            Object.defineProperty(req, prop, {\r\n                ...optsReset,\r\n                value\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/api-utils/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/async-storage/draft-mode-provider.js":
/*!********************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/async-storage/draft-mode-provider.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DraftModeProvider: () => (/* binding */ DraftModeProvider)\n/* harmony export */ });\n/* harmony import */ var _api_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../api-utils */ \"(middleware)/./node_modules/next/dist/esm/server/api-utils/index.js\");\n\r\nclass DraftModeProvider {\r\n    constructor(previewProps, req, cookies, mutableCookies){\r\n        var _cookies_get;\r\n        // The logic for draftMode() is very similar to tryGetPreviewData()\r\n        // but Draft Mode does not have any data associated with it.\r\n        const isOnDemandRevalidate = previewProps && (0,_api_utils__WEBPACK_IMPORTED_MODULE_0__.checkIsOnDemandRevalidate)(req, previewProps).isOnDemandRevalidate;\r\n        const cookieValue = (_cookies_get = cookies.get(_api_utils__WEBPACK_IMPORTED_MODULE_0__.COOKIE_NAME_PRERENDER_BYPASS)) == null ? void 0 : _cookies_get.value;\r\n        this.isEnabled = Boolean(!isOnDemandRevalidate && cookieValue && previewProps && (cookieValue === previewProps.previewModeId || // In dev mode, the cookie can be actual hash value preview id but the preview props can still be `development-id`.\r\n         true && previewProps.previewModeId === \"development-id\"));\r\n        this._previewModeId = previewProps == null ? void 0 : previewProps.previewModeId;\r\n        this._mutableCookies = mutableCookies;\r\n    }\r\n    enable() {\r\n        if (!this._previewModeId) {\r\n            throw new Error(\"Invariant: previewProps missing previewModeId this should never happen\");\r\n        }\r\n        this._mutableCookies.set({\r\n            name: _api_utils__WEBPACK_IMPORTED_MODULE_0__.COOKIE_NAME_PRERENDER_BYPASS,\r\n            value: this._previewModeId,\r\n            httpOnly: true,\r\n            sameSite:  false ? 0 : \"lax\",\r\n            secure: \"development\" !== \"development\",\r\n            path: \"/\"\r\n        });\r\n    }\r\n    disable() {\r\n        // To delete a cookie, set `expires` to a date in the past:\r\n        // https://tools.ietf.org/html/rfc6265#section-4.1.1\r\n        // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\r\n        this._mutableCookies.set({\r\n            name: _api_utils__WEBPACK_IMPORTED_MODULE_0__.COOKIE_NAME_PRERENDER_BYPASS,\r\n            value: \"\",\r\n            httpOnly: true,\r\n            sameSite:  false ? 0 : \"lax\",\r\n            secure: \"development\" !== \"development\",\r\n            path: \"/\",\r\n            expires: new Date(0)\r\n        });\r\n    }\r\n}\r\n\r\n//# sourceMappingURL=draft-mode-provider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL2FzeW5jLXN0b3JhZ2UvZHJhZnQtbW9kZS1wcm92aWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF1RjtBQUNoRjtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscURBQXFELHFFQUF5QjtBQUM5RSx3REFBd0Qsb0VBQTRCO0FBQ3BGO0FBQ0EsUUFBUSxLQUFxQztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLG9FQUE0QjtBQUM5QztBQUNBO0FBQ0Esc0JBQXNCLE1BQXNDLEdBQUcsQ0FBTTtBQUNyRSxvQkFBb0IsYUFBb0I7QUFDeEM7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLG9FQUE0QjtBQUM5QztBQUNBO0FBQ0Esc0JBQXNCLE1BQXNDLEdBQUcsQ0FBTTtBQUNyRSxvQkFBb0IsYUFBb0I7QUFDeEM7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zZXJ2ZXIvYXN5bmMtc3RvcmFnZS9kcmFmdC1tb2RlLXByb3ZpZGVyLmpzPzk0YWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ09PS0lFX05BTUVfUFJFUkVOREVSX0JZUEFTUywgY2hlY2tJc09uRGVtYW5kUmV2YWxpZGF0ZSB9IGZyb20gXCIuLi9hcGktdXRpbHNcIjtcclxuZXhwb3J0IGNsYXNzIERyYWZ0TW9kZVByb3ZpZGVyIHtcclxuICAgIGNvbnN0cnVjdG9yKHByZXZpZXdQcm9wcywgcmVxLCBjb29raWVzLCBtdXRhYmxlQ29va2llcyl7XHJcbiAgICAgICAgdmFyIF9jb29raWVzX2dldDtcclxuICAgICAgICAvLyBUaGUgbG9naWMgZm9yIGRyYWZ0TW9kZSgpIGlzIHZlcnkgc2ltaWxhciB0byB0cnlHZXRQcmV2aWV3RGF0YSgpXHJcbiAgICAgICAgLy8gYnV0IERyYWZ0IE1vZGUgZG9lcyBub3QgaGF2ZSBhbnkgZGF0YSBhc3NvY2lhdGVkIHdpdGggaXQuXHJcbiAgICAgICAgY29uc3QgaXNPbkRlbWFuZFJldmFsaWRhdGUgPSBwcmV2aWV3UHJvcHMgJiYgY2hlY2tJc09uRGVtYW5kUmV2YWxpZGF0ZShyZXEsIHByZXZpZXdQcm9wcykuaXNPbkRlbWFuZFJldmFsaWRhdGU7XHJcbiAgICAgICAgY29uc3QgY29va2llVmFsdWUgPSAoX2Nvb2tpZXNfZ2V0ID0gY29va2llcy5nZXQoQ09PS0lFX05BTUVfUFJFUkVOREVSX0JZUEFTUykpID09IG51bGwgPyB2b2lkIDAgOiBfY29va2llc19nZXQudmFsdWU7XHJcbiAgICAgICAgdGhpcy5pc0VuYWJsZWQgPSBCb29sZWFuKCFpc09uRGVtYW5kUmV2YWxpZGF0ZSAmJiBjb29raWVWYWx1ZSAmJiBwcmV2aWV3UHJvcHMgJiYgKGNvb2tpZVZhbHVlID09PSBwcmV2aWV3UHJvcHMucHJldmlld01vZGVJZCB8fCAvLyBJbiBkZXYgbW9kZSwgdGhlIGNvb2tpZSBjYW4gYmUgYWN0dWFsIGhhc2ggdmFsdWUgcHJldmlldyBpZCBidXQgdGhlIHByZXZpZXcgcHJvcHMgY2FuIHN0aWxsIGJlIGBkZXZlbG9wbWVudC1pZGAuXHJcbiAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiICYmIHByZXZpZXdQcm9wcy5wcmV2aWV3TW9kZUlkID09PSBcImRldmVsb3BtZW50LWlkXCIpKTtcclxuICAgICAgICB0aGlzLl9wcmV2aWV3TW9kZUlkID0gcHJldmlld1Byb3BzID09IG51bGwgPyB2b2lkIDAgOiBwcmV2aWV3UHJvcHMucHJldmlld01vZGVJZDtcclxuICAgICAgICB0aGlzLl9tdXRhYmxlQ29va2llcyA9IG11dGFibGVDb29raWVzO1xyXG4gICAgfVxyXG4gICAgZW5hYmxlKCkge1xyXG4gICAgICAgIGlmICghdGhpcy5fcHJldmlld01vZGVJZCkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhcmlhbnQ6IHByZXZpZXdQcm9wcyBtaXNzaW5nIHByZXZpZXdNb2RlSWQgdGhpcyBzaG91bGQgbmV2ZXIgaGFwcGVuXCIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLl9tdXRhYmxlQ29va2llcy5zZXQoe1xyXG4gICAgICAgICAgICBuYW1lOiBDT09LSUVfTkFNRV9QUkVSRU5ERVJfQllQQVNTLFxyXG4gICAgICAgICAgICB2YWx1ZTogdGhpcy5fcHJldmlld01vZGVJZCxcclxuICAgICAgICAgICAgaHR0cE9ubHk6IHRydWUsXHJcbiAgICAgICAgICAgIHNhbWVTaXRlOiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJkZXZlbG9wbWVudFwiID8gXCJub25lXCIgOiBcImxheFwiLFxyXG4gICAgICAgICAgICBzZWN1cmU6IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcImRldmVsb3BtZW50XCIsXHJcbiAgICAgICAgICAgIHBhdGg6IFwiL1wiXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBkaXNhYmxlKCkge1xyXG4gICAgICAgIC8vIFRvIGRlbGV0ZSBhIGNvb2tpZSwgc2V0IGBleHBpcmVzYCB0byBhIGRhdGUgaW4gdGhlIHBhc3Q6XHJcbiAgICAgICAgLy8gaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzYyNjUjc2VjdGlvbi00LjEuMVxyXG4gICAgICAgIC8vIGBNYXgtQWdlOiAwYCBpcyBub3QgdmFsaWQsIHRodXMgaWdub3JlZCwgYW5kIHRoZSBjb29raWUgaXMgcGVyc2lzdGVkLlxyXG4gICAgICAgIHRoaXMuX211dGFibGVDb29raWVzLnNldCh7XHJcbiAgICAgICAgICAgIG5hbWU6IENPT0tJRV9OQU1FX1BSRVJFTkRFUl9CWVBBU1MsXHJcbiAgICAgICAgICAgIHZhbHVlOiBcIlwiLFxyXG4gICAgICAgICAgICBodHRwT25seTogdHJ1ZSxcclxuICAgICAgICAgICAgc2FtZVNpdGU6IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcImRldmVsb3BtZW50XCIgPyBcIm5vbmVcIiA6IFwibGF4XCIsXHJcbiAgICAgICAgICAgIHNlY3VyZTogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwiZGV2ZWxvcG1lbnRcIixcclxuICAgICAgICAgICAgcGF0aDogXCIvXCIsXHJcbiAgICAgICAgICAgIGV4cGlyZXM6IG5ldyBEYXRlKDApXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRyYWZ0LW1vZGUtcHJvdmlkZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/async-storage/draft-mode-provider.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/async-storage/request-async-storage-wrapper.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/async-storage/request-async-storage-wrapper.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequestAsyncStorageWrapper: () => (/* binding */ RequestAsyncStorageWrapper)\n/* harmony export */ });\n/* harmony import */ var _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../client/components/app-router-headers */ \"(middleware)/./node_modules/next/dist/esm/client/components/app-router-headers.js\");\n/* harmony import */ var _web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../web/spec-extension/adapters/headers */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js\");\n/* harmony import */ var _web_spec_extension_adapters_request_cookies__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../web/spec-extension/adapters/request-cookies */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/request-cookies.js\");\n/* harmony import */ var _web_spec_extension_cookies__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../web/spec-extension/cookies */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js\");\n/* harmony import */ var _draft_mode_provider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./draft-mode-provider */ \"(middleware)/./node_modules/next/dist/esm/server/async-storage/draft-mode-provider.js\");\n/* harmony import */ var _web_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../web/utils */ \"(middleware)/./node_modules/next/dist/esm/server/web/utils.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nfunction getHeaders(headers) {\r\n    const cleaned = _web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__.HeadersAdapter.from(headers);\r\n    for (const param of _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_0__.FLIGHT_PARAMETERS){\r\n        cleaned.delete(param.toString().toLowerCase());\r\n    }\r\n    return _web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__.HeadersAdapter.seal(cleaned);\r\n}\r\nfunction getMutableCookies(headers, onUpdateCookies) {\r\n    const cookies = new _web_spec_extension_cookies__WEBPACK_IMPORTED_MODULE_3__.RequestCookies(_web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__.HeadersAdapter.from(headers));\r\n    return _web_spec_extension_adapters_request_cookies__WEBPACK_IMPORTED_MODULE_2__.MutableRequestCookiesAdapter.wrap(cookies, onUpdateCookies);\r\n}\r\n/**\r\n * If middleware set cookies in this request (indicated by `x-middleware-set-cookie`),\r\n * then merge those into the existing cookie object, so that when `cookies()` is accessed\r\n * it's able to read the newly set cookies.\r\n */ function mergeMiddlewareCookies(req, existingCookies) {\r\n    if (\"x-middleware-set-cookie\" in req.headers && typeof req.headers[\"x-middleware-set-cookie\"] === \"string\") {\r\n        const setCookieValue = req.headers[\"x-middleware-set-cookie\"];\r\n        const responseHeaders = new Headers();\r\n        for (const cookie of (0,_web_utils__WEBPACK_IMPORTED_MODULE_5__.splitCookiesString)(setCookieValue)){\r\n            responseHeaders.append(\"set-cookie\", cookie);\r\n        }\r\n        const responseCookies = new _web_spec_extension_cookies__WEBPACK_IMPORTED_MODULE_3__.ResponseCookies(responseHeaders);\r\n        // Transfer cookies from ResponseCookies to RequestCookies\r\n        for (const cookie of responseCookies.getAll()){\r\n            existingCookies.set(cookie);\r\n        }\r\n    }\r\n}\r\nconst RequestAsyncStorageWrapper = {\r\n    /**\r\n   * Wrap the callback with the given store so it can access the underlying\r\n   * store using hooks.\r\n   *\r\n   * @param storage underlying storage object returned by the module\r\n   * @param context context to seed the store\r\n   * @param callback function to call within the scope of the context\r\n   * @returns the result returned by the callback\r\n   */ wrap (storage, { req, res, renderOpts }, callback) {\r\n        let previewProps = undefined;\r\n        if (renderOpts && \"previewProps\" in renderOpts) {\r\n            // TODO: investigate why previewProps isn't on RenderOpts\r\n            previewProps = renderOpts.previewProps;\r\n        }\r\n        function defaultOnUpdateCookies(cookies) {\r\n            if (res) {\r\n                res.setHeader(\"Set-Cookie\", cookies);\r\n            }\r\n        }\r\n        const cache = {};\r\n        const store = {\r\n            get headers () {\r\n                if (!cache.headers) {\r\n                    // Seal the headers object that'll freeze out any methods that could\r\n                    // mutate the underlying data.\r\n                    cache.headers = getHeaders(req.headers);\r\n                }\r\n                return cache.headers;\r\n            },\r\n            get cookies () {\r\n                if (!cache.cookies) {\r\n                    // if middleware is setting cookie(s), then include those in\r\n                    // the initial cached cookies so they can be read in render\r\n                    const requestCookies = new _web_spec_extension_cookies__WEBPACK_IMPORTED_MODULE_3__.RequestCookies(_web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__.HeadersAdapter.from(req.headers));\r\n                    mergeMiddlewareCookies(req, requestCookies);\r\n                    // Seal the cookies object that'll freeze out any methods that could\r\n                    // mutate the underlying data.\r\n                    cache.cookies = _web_spec_extension_adapters_request_cookies__WEBPACK_IMPORTED_MODULE_2__.RequestCookiesAdapter.seal(requestCookies);\r\n                }\r\n                return cache.cookies;\r\n            },\r\n            get mutableCookies () {\r\n                if (!cache.mutableCookies) {\r\n                    const mutableCookies = getMutableCookies(req.headers, (renderOpts == null ? void 0 : renderOpts.onUpdateCookies) || (res ? defaultOnUpdateCookies : undefined));\r\n                    mergeMiddlewareCookies(req, mutableCookies);\r\n                    cache.mutableCookies = mutableCookies;\r\n                }\r\n                return cache.mutableCookies;\r\n            },\r\n            get draftMode () {\r\n                if (!cache.draftMode) {\r\n                    cache.draftMode = new _draft_mode_provider__WEBPACK_IMPORTED_MODULE_4__.DraftModeProvider(previewProps, req, this.cookies, this.mutableCookies);\r\n                }\r\n                return cache.draftMode;\r\n            },\r\n            reactLoadableManifest: (renderOpts == null ? void 0 : renderOpts.reactLoadableManifest) || {},\r\n            assetPrefix: (renderOpts == null ? void 0 : renderOpts.assetPrefix) || \"\"\r\n        };\r\n        return storage.run(store, callback, store);\r\n    }\r\n};\r\n\r\n//# sourceMappingURL=request-async-storage-wrapper.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL2FzeW5jLXN0b3JhZ2UvcmVxdWVzdC1hc3luYy1zdG9yYWdlLXdyYXBwZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUErRTtBQUNQO0FBQzZDO0FBQ3JDO0FBQ3RCO0FBQ1I7QUFDbEQ7QUFDQSxvQkFBb0IsZ0ZBQWM7QUFDbEMsd0JBQXdCLG9GQUFpQjtBQUN6QztBQUNBO0FBQ0EsV0FBVyxnRkFBYztBQUN6QjtBQUNBO0FBQ0Esd0JBQXdCLHVFQUFjLENBQUMsZ0ZBQWM7QUFDckQsV0FBVyxzR0FBNEI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLDhEQUFrQjtBQUMvQztBQUNBO0FBQ0Esb0NBQW9DLHdFQUFlO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixzQkFBc0I7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0MsdUVBQWMsQ0FBQyxnRkFBYztBQUM1RTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsK0ZBQXFCO0FBQ3pEO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLDBDQUEwQyxtRUFBaUI7QUFDM0Q7QUFDQTtBQUNBLGFBQWE7QUFDYix5R0FBeUc7QUFDekc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL2FzeW5jLXN0b3JhZ2UvcmVxdWVzdC1hc3luYy1zdG9yYWdlLXdyYXBwZXIuanM/ZjY2ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBGTElHSFRfUEFSQU1FVEVSUyB9IGZyb20gXCIuLi8uLi9jbGllbnQvY29tcG9uZW50cy9hcHAtcm91dGVyLWhlYWRlcnNcIjtcclxuaW1wb3J0IHsgSGVhZGVyc0FkYXB0ZXIgfSBmcm9tIFwiLi4vd2ViL3NwZWMtZXh0ZW5zaW9uL2FkYXB0ZXJzL2hlYWRlcnNcIjtcclxuaW1wb3J0IHsgTXV0YWJsZVJlcXVlc3RDb29raWVzQWRhcHRlciwgUmVxdWVzdENvb2tpZXNBZGFwdGVyIH0gZnJvbSBcIi4uL3dlYi9zcGVjLWV4dGVuc2lvbi9hZGFwdGVycy9yZXF1ZXN0LWNvb2tpZXNcIjtcclxuaW1wb3J0IHsgUmVzcG9uc2VDb29raWVzLCBSZXF1ZXN0Q29va2llcyB9IGZyb20gXCIuLi93ZWIvc3BlYy1leHRlbnNpb24vY29va2llc1wiO1xyXG5pbXBvcnQgeyBEcmFmdE1vZGVQcm92aWRlciB9IGZyb20gXCIuL2RyYWZ0LW1vZGUtcHJvdmlkZXJcIjtcclxuaW1wb3J0IHsgc3BsaXRDb29raWVzU3RyaW5nIH0gZnJvbSBcIi4uL3dlYi91dGlsc1wiO1xyXG5mdW5jdGlvbiBnZXRIZWFkZXJzKGhlYWRlcnMpIHtcclxuICAgIGNvbnN0IGNsZWFuZWQgPSBIZWFkZXJzQWRhcHRlci5mcm9tKGhlYWRlcnMpO1xyXG4gICAgZm9yIChjb25zdCBwYXJhbSBvZiBGTElHSFRfUEFSQU1FVEVSUyl7XHJcbiAgICAgICAgY2xlYW5lZC5kZWxldGUocGFyYW0udG9TdHJpbmcoKS50b0xvd2VyQ2FzZSgpKTtcclxuICAgIH1cclxuICAgIHJldHVybiBIZWFkZXJzQWRhcHRlci5zZWFsKGNsZWFuZWQpO1xyXG59XHJcbmZ1bmN0aW9uIGdldE11dGFibGVDb29raWVzKGhlYWRlcnMsIG9uVXBkYXRlQ29va2llcykge1xyXG4gICAgY29uc3QgY29va2llcyA9IG5ldyBSZXF1ZXN0Q29va2llcyhIZWFkZXJzQWRhcHRlci5mcm9tKGhlYWRlcnMpKTtcclxuICAgIHJldHVybiBNdXRhYmxlUmVxdWVzdENvb2tpZXNBZGFwdGVyLndyYXAoY29va2llcywgb25VcGRhdGVDb29raWVzKTtcclxufVxyXG4vKipcclxuICogSWYgbWlkZGxld2FyZSBzZXQgY29va2llcyBpbiB0aGlzIHJlcXVlc3QgKGluZGljYXRlZCBieSBgeC1taWRkbGV3YXJlLXNldC1jb29raWVgKSxcclxuICogdGhlbiBtZXJnZSB0aG9zZSBpbnRvIHRoZSBleGlzdGluZyBjb29raWUgb2JqZWN0LCBzbyB0aGF0IHdoZW4gYGNvb2tpZXMoKWAgaXMgYWNjZXNzZWRcclxuICogaXQncyBhYmxlIHRvIHJlYWQgdGhlIG5ld2x5IHNldCBjb29raWVzLlxyXG4gKi8gZnVuY3Rpb24gbWVyZ2VNaWRkbGV3YXJlQ29va2llcyhyZXEsIGV4aXN0aW5nQ29va2llcykge1xyXG4gICAgaWYgKFwieC1taWRkbGV3YXJlLXNldC1jb29raWVcIiBpbiByZXEuaGVhZGVycyAmJiB0eXBlb2YgcmVxLmhlYWRlcnNbXCJ4LW1pZGRsZXdhcmUtc2V0LWNvb2tpZVwiXSA9PT0gXCJzdHJpbmdcIikge1xyXG4gICAgICAgIGNvbnN0IHNldENvb2tpZVZhbHVlID0gcmVxLmhlYWRlcnNbXCJ4LW1pZGRsZXdhcmUtc2V0LWNvb2tpZVwiXTtcclxuICAgICAgICBjb25zdCByZXNwb25zZUhlYWRlcnMgPSBuZXcgSGVhZGVycygpO1xyXG4gICAgICAgIGZvciAoY29uc3QgY29va2llIG9mIHNwbGl0Q29va2llc1N0cmluZyhzZXRDb29raWVWYWx1ZSkpe1xyXG4gICAgICAgICAgICByZXNwb25zZUhlYWRlcnMuYXBwZW5kKFwic2V0LWNvb2tpZVwiLCBjb29raWUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zdCByZXNwb25zZUNvb2tpZXMgPSBuZXcgUmVzcG9uc2VDb29raWVzKHJlc3BvbnNlSGVhZGVycyk7XHJcbiAgICAgICAgLy8gVHJhbnNmZXIgY29va2llcyBmcm9tIFJlc3BvbnNlQ29va2llcyB0byBSZXF1ZXN0Q29va2llc1xyXG4gICAgICAgIGZvciAoY29uc3QgY29va2llIG9mIHJlc3BvbnNlQ29va2llcy5nZXRBbGwoKSl7XHJcbiAgICAgICAgICAgIGV4aXN0aW5nQ29va2llcy5zZXQoY29va2llKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0IGNvbnN0IFJlcXVlc3RBc3luY1N0b3JhZ2VXcmFwcGVyID0ge1xyXG4gICAgLyoqXHJcbiAgICogV3JhcCB0aGUgY2FsbGJhY2sgd2l0aCB0aGUgZ2l2ZW4gc3RvcmUgc28gaXQgY2FuIGFjY2VzcyB0aGUgdW5kZXJseWluZ1xyXG4gICAqIHN0b3JlIHVzaW5nIGhvb2tzLlxyXG4gICAqXHJcbiAgICogQHBhcmFtIHN0b3JhZ2UgdW5kZXJseWluZyBzdG9yYWdlIG9iamVjdCByZXR1cm5lZCBieSB0aGUgbW9kdWxlXHJcbiAgICogQHBhcmFtIGNvbnRleHQgY29udGV4dCB0byBzZWVkIHRoZSBzdG9yZVxyXG4gICAqIEBwYXJhbSBjYWxsYmFjayBmdW5jdGlvbiB0byBjYWxsIHdpdGhpbiB0aGUgc2NvcGUgb2YgdGhlIGNvbnRleHRcclxuICAgKiBAcmV0dXJucyB0aGUgcmVzdWx0IHJldHVybmVkIGJ5IHRoZSBjYWxsYmFja1xyXG4gICAqLyB3cmFwIChzdG9yYWdlLCB7IHJlcSwgcmVzLCByZW5kZXJPcHRzIH0sIGNhbGxiYWNrKSB7XHJcbiAgICAgICAgbGV0IHByZXZpZXdQcm9wcyA9IHVuZGVmaW5lZDtcclxuICAgICAgICBpZiAocmVuZGVyT3B0cyAmJiBcInByZXZpZXdQcm9wc1wiIGluIHJlbmRlck9wdHMpIHtcclxuICAgICAgICAgICAgLy8gVE9ETzogaW52ZXN0aWdhdGUgd2h5IHByZXZpZXdQcm9wcyBpc24ndCBvbiBSZW5kZXJPcHRzXHJcbiAgICAgICAgICAgIHByZXZpZXdQcm9wcyA9IHJlbmRlck9wdHMucHJldmlld1Byb3BzO1xyXG4gICAgICAgIH1cclxuICAgICAgICBmdW5jdGlvbiBkZWZhdWx0T25VcGRhdGVDb29raWVzKGNvb2tpZXMpIHtcclxuICAgICAgICAgICAgaWYgKHJlcykge1xyXG4gICAgICAgICAgICAgICAgcmVzLnNldEhlYWRlcihcIlNldC1Db29raWVcIiwgY29va2llcyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3QgY2FjaGUgPSB7fTtcclxuICAgICAgICBjb25zdCBzdG9yZSA9IHtcclxuICAgICAgICAgICAgZ2V0IGhlYWRlcnMgKCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKCFjYWNoZS5oZWFkZXJzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gU2VhbCB0aGUgaGVhZGVycyBvYmplY3QgdGhhdCdsbCBmcmVlemUgb3V0IGFueSBtZXRob2RzIHRoYXQgY291bGRcclxuICAgICAgICAgICAgICAgICAgICAvLyBtdXRhdGUgdGhlIHVuZGVybHlpbmcgZGF0YS5cclxuICAgICAgICAgICAgICAgICAgICBjYWNoZS5oZWFkZXJzID0gZ2V0SGVhZGVycyhyZXEuaGVhZGVycyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gY2FjaGUuaGVhZGVycztcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgZ2V0IGNvb2tpZXMgKCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKCFjYWNoZS5jb29raWVzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gaWYgbWlkZGxld2FyZSBpcyBzZXR0aW5nIGNvb2tpZShzKSwgdGhlbiBpbmNsdWRlIHRob3NlIGluXHJcbiAgICAgICAgICAgICAgICAgICAgLy8gdGhlIGluaXRpYWwgY2FjaGVkIGNvb2tpZXMgc28gdGhleSBjYW4gYmUgcmVhZCBpbiByZW5kZXJcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCByZXF1ZXN0Q29va2llcyA9IG5ldyBSZXF1ZXN0Q29va2llcyhIZWFkZXJzQWRhcHRlci5mcm9tKHJlcS5oZWFkZXJzKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgbWVyZ2VNaWRkbGV3YXJlQ29va2llcyhyZXEsIHJlcXVlc3RDb29raWVzKTtcclxuICAgICAgICAgICAgICAgICAgICAvLyBTZWFsIHRoZSBjb29raWVzIG9iamVjdCB0aGF0J2xsIGZyZWV6ZSBvdXQgYW55IG1ldGhvZHMgdGhhdCBjb3VsZFxyXG4gICAgICAgICAgICAgICAgICAgIC8vIG11dGF0ZSB0aGUgdW5kZXJseWluZyBkYXRhLlxyXG4gICAgICAgICAgICAgICAgICAgIGNhY2hlLmNvb2tpZXMgPSBSZXF1ZXN0Q29va2llc0FkYXB0ZXIuc2VhbChyZXF1ZXN0Q29va2llcyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gY2FjaGUuY29va2llcztcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgZ2V0IG11dGFibGVDb29raWVzICgpIHtcclxuICAgICAgICAgICAgICAgIGlmICghY2FjaGUubXV0YWJsZUNvb2tpZXMpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBtdXRhYmxlQ29va2llcyA9IGdldE11dGFibGVDb29raWVzKHJlcS5oZWFkZXJzLCAocmVuZGVyT3B0cyA9PSBudWxsID8gdm9pZCAwIDogcmVuZGVyT3B0cy5vblVwZGF0ZUNvb2tpZXMpIHx8IChyZXMgPyBkZWZhdWx0T25VcGRhdGVDb29raWVzIDogdW5kZWZpbmVkKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgbWVyZ2VNaWRkbGV3YXJlQ29va2llcyhyZXEsIG11dGFibGVDb29raWVzKTtcclxuICAgICAgICAgICAgICAgICAgICBjYWNoZS5tdXRhYmxlQ29va2llcyA9IG11dGFibGVDb29raWVzO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGNhY2hlLm11dGFibGVDb29raWVzO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBnZXQgZHJhZnRNb2RlICgpIHtcclxuICAgICAgICAgICAgICAgIGlmICghY2FjaGUuZHJhZnRNb2RlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FjaGUuZHJhZnRNb2RlID0gbmV3IERyYWZ0TW9kZVByb3ZpZGVyKHByZXZpZXdQcm9wcywgcmVxLCB0aGlzLmNvb2tpZXMsIHRoaXMubXV0YWJsZUNvb2tpZXMpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGNhY2hlLmRyYWZ0TW9kZTtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgcmVhY3RMb2FkYWJsZU1hbmlmZXN0OiAocmVuZGVyT3B0cyA9PSBudWxsID8gdm9pZCAwIDogcmVuZGVyT3B0cy5yZWFjdExvYWRhYmxlTWFuaWZlc3QpIHx8IHt9LFxyXG4gICAgICAgICAgICBhc3NldFByZWZpeDogKHJlbmRlck9wdHMgPT0gbnVsbCA/IHZvaWQgMCA6IHJlbmRlck9wdHMuYXNzZXRQcmVmaXgpIHx8IFwiXCJcclxuICAgICAgICB9O1xyXG4gICAgICAgIHJldHVybiBzdG9yYWdlLnJ1bihzdG9yZSwgY2FsbGJhY2ssIHN0b3JlKTtcclxuICAgIH1cclxufTtcclxuXHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlcXVlc3QtYXN5bmMtc3RvcmFnZS13cmFwcGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/async-storage/request-async-storage-wrapper.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/internal-utils.js":
/*!*************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/internal-utils.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stripInternalQueries: () => (/* binding */ stripInternalQueries),\n/* harmony export */   stripInternalSearchParams: () => (/* binding */ stripInternalSearchParams)\n/* harmony export */ });\n/* harmony import */ var _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client/components/app-router-headers */ \"(middleware)/./node_modules/next/dist/esm/client/components/app-router-headers.js\");\n\r\nconst INTERNAL_QUERY_NAMES = [\r\n    \"__nextFallback\",\r\n    \"__nextLocale\",\r\n    \"__nextInferredLocaleFromDefault\",\r\n    \"__nextDefaultLocale\",\r\n    \"__nextIsNotFound\",\r\n    _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_0__.NEXT_RSC_UNION_QUERY\r\n];\r\nconst EDGE_EXTENDED_INTERNAL_QUERY_NAMES = [\r\n    \"__nextDataReq\"\r\n];\r\nfunction stripInternalQueries(query) {\r\n    for (const name of INTERNAL_QUERY_NAMES){\r\n        delete query[name];\r\n    }\r\n}\r\nfunction stripInternalSearchParams(url, isEdge) {\r\n    const isStringUrl = typeof url === \"string\";\r\n    const instance = isStringUrl ? new URL(url) : url;\r\n    for (const name of INTERNAL_QUERY_NAMES){\r\n        instance.searchParams.delete(name);\r\n    }\r\n    if (isEdge) {\r\n        for (const name of EDGE_EXTENDED_INTERNAL_QUERY_NAMES){\r\n            instance.searchParams.delete(name);\r\n        }\r\n    }\r\n    return isStringUrl ? instance.toString() : instance;\r\n}\r\n\r\n//# sourceMappingURL=internal-utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL2ludGVybmFsLXV0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUErRTtBQUMvRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLHVGQUFvQjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL2ludGVybmFsLXV0aWxzLmpzPzg2NGIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTkVYVF9SU0NfVU5JT05fUVVFUlkgfSBmcm9tIFwiLi4vY2xpZW50L2NvbXBvbmVudHMvYXBwLXJvdXRlci1oZWFkZXJzXCI7XHJcbmNvbnN0IElOVEVSTkFMX1FVRVJZX05BTUVTID0gW1xyXG4gICAgXCJfX25leHRGYWxsYmFja1wiLFxyXG4gICAgXCJfX25leHRMb2NhbGVcIixcclxuICAgIFwiX19uZXh0SW5mZXJyZWRMb2NhbGVGcm9tRGVmYXVsdFwiLFxyXG4gICAgXCJfX25leHREZWZhdWx0TG9jYWxlXCIsXHJcbiAgICBcIl9fbmV4dElzTm90Rm91bmRcIixcclxuICAgIE5FWFRfUlNDX1VOSU9OX1FVRVJZXHJcbl07XHJcbmNvbnN0IEVER0VfRVhURU5ERURfSU5URVJOQUxfUVVFUllfTkFNRVMgPSBbXHJcbiAgICBcIl9fbmV4dERhdGFSZXFcIlxyXG5dO1xyXG5leHBvcnQgZnVuY3Rpb24gc3RyaXBJbnRlcm5hbFF1ZXJpZXMocXVlcnkpIHtcclxuICAgIGZvciAoY29uc3QgbmFtZSBvZiBJTlRFUk5BTF9RVUVSWV9OQU1FUyl7XHJcbiAgICAgICAgZGVsZXRlIHF1ZXJ5W25hbWVdO1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBzdHJpcEludGVybmFsU2VhcmNoUGFyYW1zKHVybCwgaXNFZGdlKSB7XHJcbiAgICBjb25zdCBpc1N0cmluZ1VybCA9IHR5cGVvZiB1cmwgPT09IFwic3RyaW5nXCI7XHJcbiAgICBjb25zdCBpbnN0YW5jZSA9IGlzU3RyaW5nVXJsID8gbmV3IFVSTCh1cmwpIDogdXJsO1xyXG4gICAgZm9yIChjb25zdCBuYW1lIG9mIElOVEVSTkFMX1FVRVJZX05BTUVTKXtcclxuICAgICAgICBpbnN0YW5jZS5zZWFyY2hQYXJhbXMuZGVsZXRlKG5hbWUpO1xyXG4gICAgfVxyXG4gICAgaWYgKGlzRWRnZSkge1xyXG4gICAgICAgIGZvciAoY29uc3QgbmFtZSBvZiBFREdFX0VYVEVOREVEX0lOVEVSTkFMX1FVRVJZX05BTUVTKXtcclxuICAgICAgICAgICAgaW5zdGFuY2Uuc2VhcmNoUGFyYW1zLmRlbGV0ZShuYW1lKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gaXNTdHJpbmdVcmwgPyBpbnN0YW5jZS50b1N0cmluZygpIDogaW5zdGFuY2U7XHJcbn1cclxuXHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVybmFsLXV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/internal-utils.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/lib/trace/constants.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/lib/trace/constants.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AppRenderSpan: () => (/* binding */ AppRenderSpan),\n/* harmony export */   AppRouteRouteHandlersSpan: () => (/* binding */ AppRouteRouteHandlersSpan),\n/* harmony export */   BaseServerSpan: () => (/* binding */ BaseServerSpan),\n/* harmony export */   LoadComponentsSpan: () => (/* binding */ LoadComponentsSpan),\n/* harmony export */   LogSpanAllowList: () => (/* binding */ LogSpanAllowList),\n/* harmony export */   MiddlewareSpan: () => (/* binding */ MiddlewareSpan),\n/* harmony export */   NextNodeServerSpan: () => (/* binding */ NextNodeServerSpan),\n/* harmony export */   NextServerSpan: () => (/* binding */ NextServerSpan),\n/* harmony export */   NextVanillaSpanAllowlist: () => (/* binding */ NextVanillaSpanAllowlist),\n/* harmony export */   NodeSpan: () => (/* binding */ NodeSpan),\n/* harmony export */   RenderSpan: () => (/* binding */ RenderSpan),\n/* harmony export */   ResolveMetadataSpan: () => (/* binding */ ResolveMetadataSpan),\n/* harmony export */   RouterSpan: () => (/* binding */ RouterSpan),\n/* harmony export */   StartServerSpan: () => (/* binding */ StartServerSpan)\n/* harmony export */ });\n/**\r\n * Contains predefined constants for the trace span name in next/server.\r\n *\r\n * Currently, next/server/tracer is internal implementation only for tracking\r\n * next.js's implementation only with known span names defined here.\r\n **/ // eslint typescript has a bug with TS enums\r\n/* eslint-disable no-shadow */ var BaseServerSpan;\r\n(function(BaseServerSpan) {\r\n    BaseServerSpan[\"handleRequest\"] = \"BaseServer.handleRequest\";\r\n    BaseServerSpan[\"run\"] = \"BaseServer.run\";\r\n    BaseServerSpan[\"pipe\"] = \"BaseServer.pipe\";\r\n    BaseServerSpan[\"getStaticHTML\"] = \"BaseServer.getStaticHTML\";\r\n    BaseServerSpan[\"render\"] = \"BaseServer.render\";\r\n    BaseServerSpan[\"renderToResponseWithComponents\"] = \"BaseServer.renderToResponseWithComponents\";\r\n    BaseServerSpan[\"renderToResponse\"] = \"BaseServer.renderToResponse\";\r\n    BaseServerSpan[\"renderToHTML\"] = \"BaseServer.renderToHTML\";\r\n    BaseServerSpan[\"renderError\"] = \"BaseServer.renderError\";\r\n    BaseServerSpan[\"renderErrorToResponse\"] = \"BaseServer.renderErrorToResponse\";\r\n    BaseServerSpan[\"renderErrorToHTML\"] = \"BaseServer.renderErrorToHTML\";\r\n    BaseServerSpan[\"render404\"] = \"BaseServer.render404\";\r\n})(BaseServerSpan || (BaseServerSpan = {}));\r\nvar LoadComponentsSpan;\r\n(function(LoadComponentsSpan) {\r\n    LoadComponentsSpan[\"loadDefaultErrorComponents\"] = \"LoadComponents.loadDefaultErrorComponents\";\r\n    LoadComponentsSpan[\"loadComponents\"] = \"LoadComponents.loadComponents\";\r\n})(LoadComponentsSpan || (LoadComponentsSpan = {}));\r\nvar NextServerSpan;\r\n(function(NextServerSpan) {\r\n    NextServerSpan[\"getRequestHandler\"] = \"NextServer.getRequestHandler\";\r\n    NextServerSpan[\"getServer\"] = \"NextServer.getServer\";\r\n    NextServerSpan[\"getServerRequestHandler\"] = \"NextServer.getServerRequestHandler\";\r\n    NextServerSpan[\"createServer\"] = \"createServer.createServer\";\r\n})(NextServerSpan || (NextServerSpan = {}));\r\nvar NextNodeServerSpan;\r\n(function(NextNodeServerSpan) {\r\n    NextNodeServerSpan[\"compression\"] = \"NextNodeServer.compression\";\r\n    NextNodeServerSpan[\"getBuildId\"] = \"NextNodeServer.getBuildId\";\r\n    NextNodeServerSpan[\"createComponentTree\"] = \"NextNodeServer.createComponentTree\";\r\n    NextNodeServerSpan[\"clientComponentLoading\"] = \"NextNodeServer.clientComponentLoading\";\r\n    NextNodeServerSpan[\"getLayoutOrPageModule\"] = \"NextNodeServer.getLayoutOrPageModule\";\r\n    NextNodeServerSpan[\"generateStaticRoutes\"] = \"NextNodeServer.generateStaticRoutes\";\r\n    NextNodeServerSpan[\"generateFsStaticRoutes\"] = \"NextNodeServer.generateFsStaticRoutes\";\r\n    NextNodeServerSpan[\"generatePublicRoutes\"] = \"NextNodeServer.generatePublicRoutes\";\r\n    NextNodeServerSpan[\"generateImageRoutes\"] = \"NextNodeServer.generateImageRoutes.route\";\r\n    NextNodeServerSpan[\"sendRenderResult\"] = \"NextNodeServer.sendRenderResult\";\r\n    NextNodeServerSpan[\"proxyRequest\"] = \"NextNodeServer.proxyRequest\";\r\n    NextNodeServerSpan[\"runApi\"] = \"NextNodeServer.runApi\";\r\n    NextNodeServerSpan[\"render\"] = \"NextNodeServer.render\";\r\n    NextNodeServerSpan[\"renderHTML\"] = \"NextNodeServer.renderHTML\";\r\n    NextNodeServerSpan[\"imageOptimizer\"] = \"NextNodeServer.imageOptimizer\";\r\n    NextNodeServerSpan[\"getPagePath\"] = \"NextNodeServer.getPagePath\";\r\n    NextNodeServerSpan[\"getRoutesManifest\"] = \"NextNodeServer.getRoutesManifest\";\r\n    NextNodeServerSpan[\"findPageComponents\"] = \"NextNodeServer.findPageComponents\";\r\n    NextNodeServerSpan[\"getFontManifest\"] = \"NextNodeServer.getFontManifest\";\r\n    NextNodeServerSpan[\"getServerComponentManifest\"] = \"NextNodeServer.getServerComponentManifest\";\r\n    NextNodeServerSpan[\"getRequestHandler\"] = \"NextNodeServer.getRequestHandler\";\r\n    NextNodeServerSpan[\"renderToHTML\"] = \"NextNodeServer.renderToHTML\";\r\n    NextNodeServerSpan[\"renderError\"] = \"NextNodeServer.renderError\";\r\n    NextNodeServerSpan[\"renderErrorToHTML\"] = \"NextNodeServer.renderErrorToHTML\";\r\n    NextNodeServerSpan[\"render404\"] = \"NextNodeServer.render404\";\r\n    NextNodeServerSpan[\"startResponse\"] = \"NextNodeServer.startResponse\";\r\n    // nested inner span, does not require parent scope name\r\n    NextNodeServerSpan[\"route\"] = \"route\";\r\n    NextNodeServerSpan[\"onProxyReq\"] = \"onProxyReq\";\r\n    NextNodeServerSpan[\"apiResolver\"] = \"apiResolver\";\r\n    NextNodeServerSpan[\"internalFetch\"] = \"internalFetch\";\r\n})(NextNodeServerSpan || (NextNodeServerSpan = {}));\r\nvar StartServerSpan;\r\n(function(StartServerSpan) {\r\n    StartServerSpan[\"startServer\"] = \"startServer.startServer\";\r\n})(StartServerSpan || (StartServerSpan = {}));\r\nvar RenderSpan;\r\n(function(RenderSpan) {\r\n    RenderSpan[\"getServerSideProps\"] = \"Render.getServerSideProps\";\r\n    RenderSpan[\"getStaticProps\"] = \"Render.getStaticProps\";\r\n    RenderSpan[\"renderToString\"] = \"Render.renderToString\";\r\n    RenderSpan[\"renderDocument\"] = \"Render.renderDocument\";\r\n    RenderSpan[\"createBodyResult\"] = \"Render.createBodyResult\";\r\n})(RenderSpan || (RenderSpan = {}));\r\nvar AppRenderSpan;\r\n(function(AppRenderSpan) {\r\n    AppRenderSpan[\"renderToString\"] = \"AppRender.renderToString\";\r\n    AppRenderSpan[\"renderToReadableStream\"] = \"AppRender.renderToReadableStream\";\r\n    AppRenderSpan[\"getBodyResult\"] = \"AppRender.getBodyResult\";\r\n    AppRenderSpan[\"fetch\"] = \"AppRender.fetch\";\r\n})(AppRenderSpan || (AppRenderSpan = {}));\r\nvar RouterSpan;\r\n(function(RouterSpan) {\r\n    RouterSpan[\"executeRoute\"] = \"Router.executeRoute\";\r\n})(RouterSpan || (RouterSpan = {}));\r\nvar NodeSpan;\r\n(function(NodeSpan) {\r\n    NodeSpan[\"runHandler\"] = \"Node.runHandler\";\r\n})(NodeSpan || (NodeSpan = {}));\r\nvar AppRouteRouteHandlersSpan;\r\n(function(AppRouteRouteHandlersSpan) {\r\n    AppRouteRouteHandlersSpan[\"runHandler\"] = \"AppRouteRouteHandlers.runHandler\";\r\n})(AppRouteRouteHandlersSpan || (AppRouteRouteHandlersSpan = {}));\r\nvar ResolveMetadataSpan;\r\n(function(ResolveMetadataSpan) {\r\n    ResolveMetadataSpan[\"generateMetadata\"] = \"ResolveMetadata.generateMetadata\";\r\n    ResolveMetadataSpan[\"generateViewport\"] = \"ResolveMetadata.generateViewport\";\r\n})(ResolveMetadataSpan || (ResolveMetadataSpan = {}));\r\nvar MiddlewareSpan;\r\n(function(MiddlewareSpan) {\r\n    MiddlewareSpan[\"execute\"] = \"Middleware.execute\";\r\n})(MiddlewareSpan || (MiddlewareSpan = {}));\r\n// This list is used to filter out spans that are not relevant to the user\r\nconst NextVanillaSpanAllowlist = [\r\n    \"Middleware.execute\",\r\n    \"BaseServer.handleRequest\",\r\n    \"Render.getServerSideProps\",\r\n    \"Render.getStaticProps\",\r\n    \"AppRender.fetch\",\r\n    \"AppRender.getBodyResult\",\r\n    \"Render.renderDocument\",\r\n    \"Node.runHandler\",\r\n    \"AppRouteRouteHandlers.runHandler\",\r\n    \"ResolveMetadata.generateMetadata\",\r\n    \"ResolveMetadata.generateViewport\",\r\n    \"NextNodeServer.createComponentTree\",\r\n    \"NextNodeServer.findPageComponents\",\r\n    \"NextNodeServer.getLayoutOrPageModule\",\r\n    \"NextNodeServer.startResponse\",\r\n    \"NextNodeServer.clientComponentLoading\"\r\n];\r\n// These Spans are allowed to be always logged\r\n// when the otel log prefix env is set\r\nconst LogSpanAllowList = [\r\n    \"NextNodeServer.findPageComponents\",\r\n    \"NextNodeServer.createComponentTree\",\r\n    \"NextNodeServer.clientComponentLoading\"\r\n];\r\n\r\n\r\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/lib/trace/constants.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/lib/trace/tracer.js":
/*!***************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/lib/trace/tracer.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SpanKind: () => (/* binding */ SpanKind),\n/* harmony export */   SpanStatusCode: () => (/* binding */ SpanStatusCode),\n/* harmony export */   getTracer: () => (/* binding */ getTracer)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"(middleware)/./node_modules/next/dist/esm/server/lib/trace/constants.js\");\n\r\nlet api;\r\n// we want to allow users to use their own version of @opentelemetry/api if they\r\n// want to, so we try to require it first, and if it fails we fall back to the\r\n// version that is bundled with Next.js\r\n// this is because @opentelemetry/api has to be synced with the version of\r\n// @opentelemetry/tracing that is used, and we don't want to force users to use\r\n// the version that is bundled with Next.js.\r\n// the API is ~stable, so this should be fine\r\nif (true) {\r\n    api = __webpack_require__(/*! @opentelemetry/api */ \"(middleware)/./node_modules/next/dist/compiled/@opentelemetry/api/index.js\");\r\n} else {}\r\nconst { context, propagation, trace, SpanStatusCode, SpanKind, ROOT_CONTEXT } = api;\r\nconst isPromise = (p)=>{\r\n    return p !== null && typeof p === \"object\" && typeof p.then === \"function\";\r\n};\r\nconst closeSpanWithError = (span, error)=>{\r\n    if ((error == null ? void 0 : error.bubble) === true) {\r\n        span.setAttribute(\"next.bubble\", true);\r\n    } else {\r\n        if (error) {\r\n            span.recordException(error);\r\n        }\r\n        span.setStatus({\r\n            code: SpanStatusCode.ERROR,\r\n            message: error == null ? void 0 : error.message\r\n        });\r\n    }\r\n    span.end();\r\n};\r\n/** we use this map to propagate attributes from nested spans to the top span */ const rootSpanAttributesStore = new Map();\r\nconst rootSpanIdKey = api.createContextKey(\"next.rootSpanId\");\r\nlet lastSpanId = 0;\r\nconst getSpanId = ()=>lastSpanId++;\r\nclass NextTracerImpl {\r\n    /**\r\n   * Returns an instance to the trace with configured name.\r\n   * Since wrap / trace can be defined in any place prior to actual trace subscriber initialization,\r\n   * This should be lazily evaluated.\r\n   */ getTracerInstance() {\r\n        return trace.getTracer(\"next.js\", \"0.0.1\");\r\n    }\r\n    getContext() {\r\n        return context;\r\n    }\r\n    getActiveScopeSpan() {\r\n        return trace.getSpan(context == null ? void 0 : context.active());\r\n    }\r\n    withPropagatedContext(carrier, fn, getter) {\r\n        const activeContext = context.active();\r\n        if (trace.getSpanContext(activeContext)) {\r\n            // Active span is already set, too late to propagate.\r\n            return fn();\r\n        }\r\n        const remoteContext = propagation.extract(activeContext, carrier, getter);\r\n        return context.with(remoteContext, fn);\r\n    }\r\n    trace(...args) {\r\n        var _trace_getSpanContext;\r\n        const [type, fnOrOptions, fnOrEmpty] = args;\r\n        // coerce options form overload\r\n        const { fn, options } = typeof fnOrOptions === \"function\" ? {\r\n            fn: fnOrOptions,\r\n            options: {}\r\n        } : {\r\n            fn: fnOrEmpty,\r\n            options: {\r\n                ...fnOrOptions\r\n            }\r\n        };\r\n        const spanName = options.spanName ?? type;\r\n        if (!_constants__WEBPACK_IMPORTED_MODULE_0__.NextVanillaSpanAllowlist.includes(type) && process.env.NEXT_OTEL_VERBOSE !== \"1\" || options.hideSpan) {\r\n            return fn();\r\n        }\r\n        // Trying to get active scoped span to assign parent. If option specifies parent span manually, will try to use it.\r\n        let spanContext = this.getSpanContext((options == null ? void 0 : options.parentSpan) ?? this.getActiveScopeSpan());\r\n        let isRootSpan = false;\r\n        if (!spanContext) {\r\n            spanContext = (context == null ? void 0 : context.active()) ?? ROOT_CONTEXT;\r\n            isRootSpan = true;\r\n        } else if ((_trace_getSpanContext = trace.getSpanContext(spanContext)) == null ? void 0 : _trace_getSpanContext.isRemote) {\r\n            isRootSpan = true;\r\n        }\r\n        const spanId = getSpanId();\r\n        options.attributes = {\r\n            \"next.span_name\": spanName,\r\n            \"next.span_type\": type,\r\n            ...options.attributes\r\n        };\r\n        return context.with(spanContext.setValue(rootSpanIdKey, spanId), ()=>this.getTracerInstance().startActiveSpan(spanName, options, (span)=>{\r\n                const startTime = \"performance\" in globalThis ? globalThis.performance.now() : undefined;\r\n                const onCleanup = ()=>{\r\n                    rootSpanAttributesStore.delete(spanId);\r\n                    if (startTime && process.env.NEXT_OTEL_PERFORMANCE_PREFIX && _constants__WEBPACK_IMPORTED_MODULE_0__.LogSpanAllowList.includes(type || \"\")) {\r\n                        performance.measure(`${process.env.NEXT_OTEL_PERFORMANCE_PREFIX}:next-${(type.split(\".\").pop() || \"\").replace(/[A-Z]/g, (match)=>\"-\" + match.toLowerCase())}`, {\r\n                            start: startTime,\r\n                            end: performance.now()\r\n                        });\r\n                    }\r\n                };\r\n                if (isRootSpan) {\r\n                    rootSpanAttributesStore.set(spanId, new Map(Object.entries(options.attributes ?? {})));\r\n                }\r\n                try {\r\n                    if (fn.length > 1) {\r\n                        return fn(span, (err)=>closeSpanWithError(span, err));\r\n                    }\r\n                    const result = fn(span);\r\n                    if (isPromise(result)) {\r\n                        // If there's error make sure it throws\r\n                        return result.then((res)=>{\r\n                            span.end();\r\n                            // Need to pass down the promise result,\r\n                            // it could be react stream response with error { error, stream }\r\n                            return res;\r\n                        }).catch((err)=>{\r\n                            closeSpanWithError(span, err);\r\n                            throw err;\r\n                        }).finally(onCleanup);\r\n                    } else {\r\n                        span.end();\r\n                        onCleanup();\r\n                    }\r\n                    return result;\r\n                } catch (err) {\r\n                    closeSpanWithError(span, err);\r\n                    onCleanup();\r\n                    throw err;\r\n                }\r\n            }));\r\n    }\r\n    wrap(...args) {\r\n        const tracer = this;\r\n        const [name, options, fn] = args.length === 3 ? args : [\r\n            args[0],\r\n            {},\r\n            args[1]\r\n        ];\r\n        if (!_constants__WEBPACK_IMPORTED_MODULE_0__.NextVanillaSpanAllowlist.includes(name) && process.env.NEXT_OTEL_VERBOSE !== \"1\") {\r\n            return fn;\r\n        }\r\n        return function() {\r\n            let optionsObj = options;\r\n            if (typeof optionsObj === \"function\" && typeof fn === \"function\") {\r\n                optionsObj = optionsObj.apply(this, arguments);\r\n            }\r\n            const lastArgId = arguments.length - 1;\r\n            const cb = arguments[lastArgId];\r\n            if (typeof cb === \"function\") {\r\n                const scopeBoundCb = tracer.getContext().bind(context.active(), cb);\r\n                return tracer.trace(name, optionsObj, (_span, done)=>{\r\n                    arguments[lastArgId] = function(err) {\r\n                        done == null ? void 0 : done(err);\r\n                        return scopeBoundCb.apply(this, arguments);\r\n                    };\r\n                    return fn.apply(this, arguments);\r\n                });\r\n            } else {\r\n                return tracer.trace(name, optionsObj, ()=>fn.apply(this, arguments));\r\n            }\r\n        };\r\n    }\r\n    startSpan(...args) {\r\n        const [type, options] = args;\r\n        const spanContext = this.getSpanContext((options == null ? void 0 : options.parentSpan) ?? this.getActiveScopeSpan());\r\n        return this.getTracerInstance().startSpan(type, options, spanContext);\r\n    }\r\n    getSpanContext(parentSpan) {\r\n        const spanContext = parentSpan ? trace.setSpan(context.active(), parentSpan) : undefined;\r\n        return spanContext;\r\n    }\r\n    getRootSpanAttributes() {\r\n        const spanId = context.active().getValue(rootSpanIdKey);\r\n        return rootSpanAttributesStore.get(spanId);\r\n    }\r\n}\r\nconst getTracer = (()=>{\r\n    const tracer = new NextTracerImpl();\r\n    return ()=>tracer;\r\n})();\r\n\r\n\r\n//# sourceMappingURL=tracer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/lib/trace/tracer.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/adapter.js":
/*!**********************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/adapter.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NextRequestHint: () => (/* binding */ NextRequestHint),\n/* harmony export */   adapter: () => (/* binding */ adapter)\n/* harmony export */ });\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./error */ \"(middleware)/./node_modules/next/dist/esm/server/web/error.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"(middleware)/./node_modules/next/dist/esm/server/web/utils.js\");\n/* harmony import */ var _spec_extension_fetch_event__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./spec-extension/fetch-event */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js\");\n/* harmony import */ var _spec_extension_request__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./spec-extension/request */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/request.js\");\n/* harmony import */ var _spec_extension_response__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./spec-extension/response */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/response.js\");\n/* harmony import */ var _shared_lib_router_utils_relativize_url__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../shared/lib/router/utils/relativize-url */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/relativize-url.js\");\n/* harmony import */ var _next_url__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./next-url */ \"(middleware)/./node_modules/next/dist/esm/server/web/next-url.js\");\n/* harmony import */ var _internal_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../internal-utils */ \"(middleware)/./node_modules/next/dist/esm/server/internal-utils.js\");\n/* harmony import */ var _shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../shared/lib/router/utils/app-paths */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js\");\n/* harmony import */ var _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../client/components/app-router-headers */ \"(middleware)/./node_modules/next/dist/esm/client/components/app-router-headers.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./globals */ \"(middleware)/./node_modules/next/dist/esm/server/web/globals.js\");\n/* harmony import */ var _async_storage_request_async_storage_wrapper__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../async-storage/request-async-storage-wrapper */ \"(middleware)/./node_modules/next/dist/esm/server/async-storage/request-async-storage-wrapper.js\");\n/* harmony import */ var _client_components_request_async_storage_external__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../client/components/request-async-storage.external */ \"(shared)/./node_modules/next/dist/esm/client/components/request-async-storage.external.js\");\n/* harmony import */ var _lib_trace_tracer__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../lib/trace/tracer */ \"(middleware)/./node_modules/next/dist/esm/server/lib/trace/tracer.js\");\n/* harmony import */ var _lib_trace_constants__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../lib/trace/constants */ \"(middleware)/./node_modules/next/dist/esm/server/lib/trace/constants.js\");\n/* harmony import */ var _get_edge_preview_props__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./get-edge-preview-props */ \"(middleware)/./node_modules/next/dist/esm/server/web/get-edge-preview-props.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass NextRequestHint extends _spec_extension_request__WEBPACK_IMPORTED_MODULE_3__.NextRequest {\r\n    constructor(params){\r\n        super(params.input, params.init);\r\n        this.sourcePage = params.page;\r\n    }\r\n    get request() {\r\n        throw new _error__WEBPACK_IMPORTED_MODULE_0__.PageSignatureError({\r\n            page: this.sourcePage\r\n        });\r\n    }\r\n    respondWith() {\r\n        throw new _error__WEBPACK_IMPORTED_MODULE_0__.PageSignatureError({\r\n            page: this.sourcePage\r\n        });\r\n    }\r\n    waitUntil() {\r\n        throw new _error__WEBPACK_IMPORTED_MODULE_0__.PageSignatureError({\r\n            page: this.sourcePage\r\n        });\r\n    }\r\n}\r\nconst headersGetter = {\r\n    keys: (headers)=>Array.from(headers.keys()),\r\n    get: (headers, key)=>headers.get(key) ?? undefined\r\n};\r\nlet propagator = (request, fn)=>{\r\n    const tracer = (0,_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_13__.getTracer)();\r\n    return tracer.withPropagatedContext(request.headers, fn, headersGetter);\r\n};\r\nlet testApisIntercepted = false;\r\nfunction ensureTestApisIntercepted() {\r\n    if (!testApisIntercepted) {\r\n        testApisIntercepted = true;\r\n        if (process.env.NEXT_PRIVATE_TEST_PROXY === \"true\") {\r\n            const { interceptTestApis, wrapRequestHandler } = __webpack_require__(/*! next/dist/experimental/testmode/server-edge */ \"(middleware)/./node_modules/next/dist/experimental/testmode/server-edge.js\");\r\n            interceptTestApis();\r\n            propagator = wrapRequestHandler(propagator);\r\n        }\r\n    }\r\n}\r\nasync function adapter(params) {\r\n    ensureTestApisIntercepted();\r\n    await (0,_globals__WEBPACK_IMPORTED_MODULE_10__.ensureInstrumentationRegistered)();\r\n    // TODO-APP: use explicit marker for this\r\n    const isEdgeRendering = typeof self.__BUILD_MANIFEST !== \"undefined\";\r\n    params.request.url = (0,_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_8__.normalizeRscURL)(params.request.url);\r\n    const requestUrl = new _next_url__WEBPACK_IMPORTED_MODULE_6__.NextURL(params.request.url, {\r\n        headers: params.request.headers,\r\n        nextConfig: params.request.nextConfig\r\n    });\r\n    // Iterator uses an index to keep track of the current iteration. Because of deleting and appending below we can't just use the iterator.\r\n    // Instead we use the keys before iteration.\r\n    const keys = [\r\n        ...requestUrl.searchParams.keys()\r\n    ];\r\n    for (const key of keys){\r\n        const value = requestUrl.searchParams.getAll(key);\r\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.normalizeNextQueryParam)(key, (normalizedKey)=>{\r\n            requestUrl.searchParams.delete(normalizedKey);\r\n            for (const val of value){\r\n                requestUrl.searchParams.append(normalizedKey, val);\r\n            }\r\n            requestUrl.searchParams.delete(key);\r\n        });\r\n    }\r\n    // Ensure users only see page requests, never data requests.\r\n    const buildId = requestUrl.buildId;\r\n    requestUrl.buildId = \"\";\r\n    const isNextDataRequest = params.request.headers[\"x-nextjs-data\"];\r\n    if (isNextDataRequest && requestUrl.pathname === \"/index\") {\r\n        requestUrl.pathname = \"/\";\r\n    }\r\n    const requestHeaders = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.fromNodeOutgoingHttpHeaders)(params.request.headers);\r\n    const flightHeaders = new Map();\r\n    // Parameters should only be stripped for middleware\r\n    if (!isEdgeRendering) {\r\n        for (const param of _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_9__.FLIGHT_PARAMETERS){\r\n            const key = param.toString().toLowerCase();\r\n            const value = requestHeaders.get(key);\r\n            if (value) {\r\n                flightHeaders.set(key, requestHeaders.get(key));\r\n                requestHeaders.delete(key);\r\n            }\r\n        }\r\n    }\r\n    const normalizeUrl =  false ? 0 : requestUrl;\r\n    const request = new NextRequestHint({\r\n        page: params.page,\r\n        // Strip internal query parameters off the request.\r\n        input: (0,_internal_utils__WEBPACK_IMPORTED_MODULE_7__.stripInternalSearchParams)(normalizeUrl, true).toString(),\r\n        init: {\r\n            body: params.request.body,\r\n            geo: params.request.geo,\r\n            headers: requestHeaders,\r\n            ip: params.request.ip,\r\n            method: params.request.method,\r\n            nextConfig: params.request.nextConfig,\r\n            signal: params.request.signal\r\n        }\r\n    });\r\n    /**\r\n   * This allows to identify the request as a data request. The user doesn't\r\n   * need to know about this property neither use it. We add it for testing\r\n   * purposes.\r\n   */ if (isNextDataRequest) {\r\n        Object.defineProperty(request, \"__isData\", {\r\n            enumerable: false,\r\n            value: true\r\n        });\r\n    }\r\n    if (// If we are inside of the next start sandbox\r\n    // leverage the shared instance if not we need\r\n    // to create a fresh cache instance each time\r\n    !globalThis.__incrementalCacheShared && params.IncrementalCache) {\r\n        globalThis.__incrementalCache = new params.IncrementalCache({\r\n            appDir: true,\r\n            fetchCache: true,\r\n            minimalMode: \"development\" !== \"development\",\r\n            fetchCacheKeyPrefix: \"\",\r\n            dev: \"development\" === \"development\",\r\n            requestHeaders: params.request.headers,\r\n            requestProtocol: \"https\",\r\n            getPrerenderManifest: ()=>{\r\n                return {\r\n                    version: -1,\r\n                    routes: {},\r\n                    dynamicRoutes: {},\r\n                    notFoundRoutes: [],\r\n                    preview: (0,_get_edge_preview_props__WEBPACK_IMPORTED_MODULE_15__.getEdgePreviewProps)()\r\n                };\r\n            }\r\n        });\r\n    }\r\n    const event = new _spec_extension_fetch_event__WEBPACK_IMPORTED_MODULE_2__.NextFetchEvent({\r\n        request,\r\n        page: params.page\r\n    });\r\n    let response;\r\n    let cookiesFromResponse;\r\n    response = await propagator(request, ()=>{\r\n        // we only care to make async storage available for middleware\r\n        const isMiddleware = params.page === \"/middleware\" || params.page === \"/src/middleware\";\r\n        if (isMiddleware) {\r\n            return (0,_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_13__.getTracer)().trace(_lib_trace_constants__WEBPACK_IMPORTED_MODULE_14__.MiddlewareSpan.execute, {\r\n                spanName: `middleware ${request.method} ${request.nextUrl.pathname}`,\r\n                attributes: {\r\n                    \"http.target\": request.nextUrl.pathname,\r\n                    \"http.method\": request.method\r\n                }\r\n            }, ()=>_async_storage_request_async_storage_wrapper__WEBPACK_IMPORTED_MODULE_11__.RequestAsyncStorageWrapper.wrap(_client_components_request_async_storage_external__WEBPACK_IMPORTED_MODULE_12__.requestAsyncStorage, {\r\n                    req: request,\r\n                    renderOpts: {\r\n                        onUpdateCookies: (cookies)=>{\r\n                            cookiesFromResponse = cookies;\r\n                        },\r\n                        // @ts-expect-error: TODO: investigate why previewProps isn't on RenderOpts\r\n                        previewProps: (0,_get_edge_preview_props__WEBPACK_IMPORTED_MODULE_15__.getEdgePreviewProps)()\r\n                    }\r\n                }, ()=>params.handler(request, event)));\r\n        }\r\n        return params.handler(request, event);\r\n    });\r\n    // check if response is a Response object\r\n    if (response && !(response instanceof Response)) {\r\n        throw new TypeError(\"Expected an instance of Response to be returned\");\r\n    }\r\n    if (response && cookiesFromResponse) {\r\n        response.headers.set(\"set-cookie\", cookiesFromResponse);\r\n    }\r\n    /**\r\n   * For rewrites we must always include the locale in the final pathname\r\n   * so we re-create the NextURL forcing it to include it when the it is\r\n   * an internal rewrite. Also we make sure the outgoing rewrite URL is\r\n   * a data URL if the request was a data request.\r\n   */ const rewrite = response == null ? void 0 : response.headers.get(\"x-middleware-rewrite\");\r\n    if (response && rewrite && !isEdgeRendering) {\r\n        const rewriteUrl = new _next_url__WEBPACK_IMPORTED_MODULE_6__.NextURL(rewrite, {\r\n            forceLocale: true,\r\n            headers: params.request.headers,\r\n            nextConfig: params.request.nextConfig\r\n        });\r\n        if (true) {\r\n            if (rewriteUrl.host === request.nextUrl.host) {\r\n                rewriteUrl.buildId = buildId || rewriteUrl.buildId;\r\n                response.headers.set(\"x-middleware-rewrite\", String(rewriteUrl));\r\n            }\r\n        }\r\n        /**\r\n     * When the request is a data request we must show if there was a rewrite\r\n     * with an internal header so the client knows which component to load\r\n     * from the data request.\r\n     */ const relativizedRewrite = (0,_shared_lib_router_utils_relativize_url__WEBPACK_IMPORTED_MODULE_5__.relativizeURL)(String(rewriteUrl), String(requestUrl));\r\n        if (isNextDataRequest && // if the rewrite is external and external rewrite\r\n        // resolving config is enabled don't add this header\r\n        // so the upstream app can set it instead\r\n        !( false && 0)) {\r\n            response.headers.set(\"x-nextjs-rewrite\", relativizedRewrite);\r\n        }\r\n    }\r\n    /**\r\n   * For redirects we will not include the locale in case when it is the\r\n   * default and we must also make sure the outgoing URL is a data one if\r\n   * the incoming request was a data request.\r\n   */ const redirect = response == null ? void 0 : response.headers.get(\"Location\");\r\n    if (response && redirect && !isEdgeRendering) {\r\n        const redirectURL = new _next_url__WEBPACK_IMPORTED_MODULE_6__.NextURL(redirect, {\r\n            forceLocale: false,\r\n            headers: params.request.headers,\r\n            nextConfig: params.request.nextConfig\r\n        });\r\n        /**\r\n     * Responses created from redirects have immutable headers so we have\r\n     * to clone the response to be able to modify it.\r\n     */ response = new Response(response.body, response);\r\n        if (true) {\r\n            if (redirectURL.host === request.nextUrl.host) {\r\n                redirectURL.buildId = buildId || redirectURL.buildId;\r\n                response.headers.set(\"Location\", String(redirectURL));\r\n            }\r\n        }\r\n        /**\r\n     * When the request is a data request we can't use the location header as\r\n     * it may end up with CORS error. Instead we map to an internal header so\r\n     * the client knows the destination.\r\n     */ if (isNextDataRequest) {\r\n            response.headers.delete(\"Location\");\r\n            response.headers.set(\"x-nextjs-redirect\", (0,_shared_lib_router_utils_relativize_url__WEBPACK_IMPORTED_MODULE_5__.relativizeURL)(String(redirectURL), String(requestUrl)));\r\n        }\r\n    }\r\n    const finalResponse = response ? response : _spec_extension_response__WEBPACK_IMPORTED_MODULE_4__.NextResponse.next();\r\n    // Flight headers are not overridable / removable so they are applied at the end.\r\n    const middlewareOverrideHeaders = finalResponse.headers.get(\"x-middleware-override-headers\");\r\n    const overwrittenHeaders = [];\r\n    if (middlewareOverrideHeaders) {\r\n        for (const [key, value] of flightHeaders){\r\n            finalResponse.headers.set(`x-middleware-request-${key}`, value);\r\n            overwrittenHeaders.push(key);\r\n        }\r\n        if (overwrittenHeaders.length > 0) {\r\n            finalResponse.headers.set(\"x-middleware-override-headers\", middlewareOverrideHeaders + \",\" + overwrittenHeaders.join(\",\"));\r\n        }\r\n    }\r\n    return {\r\n        response: finalResponse,\r\n        waitUntil: Promise.all(event[_spec_extension_fetch_event__WEBPACK_IMPORTED_MODULE_2__.waitUntilSymbol]),\r\n        fetchMetrics: request.fetchMetrics\r\n    };\r\n}\r\n\r\n//# sourceMappingURL=adapter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/adapter.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/error.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/error.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PageSignatureError: () => (/* binding */ PageSignatureError),\n/* harmony export */   RemovedPageError: () => (/* binding */ RemovedPageError),\n/* harmony export */   RemovedUAError: () => (/* binding */ RemovedUAError)\n/* harmony export */ });\nclass PageSignatureError extends Error {\r\n    constructor({ page }){\r\n        super(`The middleware \"${page}\" accepts an async API directly with the form:\r\n  \r\n  export function middleware(request, event) {\r\n    return NextResponse.redirect('/new-location')\r\n  }\r\n  \r\n  Read more: https://nextjs.org/docs/messages/middleware-new-signature\r\n  `);\r\n    }\r\n}\r\nclass RemovedPageError extends Error {\r\n    constructor(){\r\n        super(`The request.page has been deprecated in favour of \\`URLPattern\\`.\r\n  Read more: https://nextjs.org/docs/messages/middleware-request-page\r\n  `);\r\n    }\r\n}\r\nclass RemovedUAError extends Error {\r\n    constructor(){\r\n        super(`The request.ua has been removed in favour of \\`userAgent\\` function.\r\n  Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\r\n  `);\r\n    }\r\n}\r\n\r\n//# sourceMappingURL=error.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9lcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBTztBQUNQLGtCQUFrQixNQUFNO0FBQ3hCLGlDQUFpQyxLQUFLO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvZXJyb3IuanM/MmY0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgUGFnZVNpZ25hdHVyZUVycm9yIGV4dGVuZHMgRXJyb3Ige1xyXG4gICAgY29uc3RydWN0b3IoeyBwYWdlIH0pe1xyXG4gICAgICAgIHN1cGVyKGBUaGUgbWlkZGxld2FyZSBcIiR7cGFnZX1cIiBhY2NlcHRzIGFuIGFzeW5jIEFQSSBkaXJlY3RseSB3aXRoIHRoZSBmb3JtOlxyXG4gIFxyXG4gIGV4cG9ydCBmdW5jdGlvbiBtaWRkbGV3YXJlKHJlcXVlc3QsIGV2ZW50KSB7XHJcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLnJlZGlyZWN0KCcvbmV3LWxvY2F0aW9uJylcclxuICB9XHJcbiAgXHJcbiAgUmVhZCBtb3JlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9taWRkbGV3YXJlLW5ldy1zaWduYXR1cmVcclxuICBgKTtcclxuICAgIH1cclxufVxyXG5leHBvcnQgY2xhc3MgUmVtb3ZlZFBhZ2VFcnJvciBleHRlbmRzIEVycm9yIHtcclxuICAgIGNvbnN0cnVjdG9yKCl7XHJcbiAgICAgICAgc3VwZXIoYFRoZSByZXF1ZXN0LnBhZ2UgaGFzIGJlZW4gZGVwcmVjYXRlZCBpbiBmYXZvdXIgb2YgXFxgVVJMUGF0dGVyblxcYC5cclxuICBSZWFkIG1vcmU6IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzL21pZGRsZXdhcmUtcmVxdWVzdC1wYWdlXHJcbiAgYCk7XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0IGNsYXNzIFJlbW92ZWRVQUVycm9yIGV4dGVuZHMgRXJyb3Ige1xyXG4gICAgY29uc3RydWN0b3IoKXtcclxuICAgICAgICBzdXBlcihgVGhlIHJlcXVlc3QudWEgaGFzIGJlZW4gcmVtb3ZlZCBpbiBmYXZvdXIgb2YgXFxgdXNlckFnZW50XFxgIGZ1bmN0aW9uLlxyXG4gIFJlYWQgbW9yZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvbWlkZGxld2FyZS1wYXJzZS11c2VyLWFnZW50XHJcbiAgYCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVycm9yLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/error.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/exports/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/exports/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ImageResponse: () => (/* reexport safe */ _spec_extension_image_response__WEBPACK_IMPORTED_MODULE_0__.ImageResponse),\n/* harmony export */   NextRequest: () => (/* reexport safe */ _spec_extension_request__WEBPACK_IMPORTED_MODULE_1__.NextRequest),\n/* harmony export */   NextResponse: () => (/* reexport safe */ _spec_extension_response__WEBPACK_IMPORTED_MODULE_2__.NextResponse),\n/* harmony export */   URLPattern: () => (/* reexport safe */ _spec_extension_url_pattern__WEBPACK_IMPORTED_MODULE_4__.URLPattern),\n/* harmony export */   userAgent: () => (/* reexport safe */ _spec_extension_user_agent__WEBPACK_IMPORTED_MODULE_3__.userAgent),\n/* harmony export */   userAgentFromString: () => (/* reexport safe */ _spec_extension_user_agent__WEBPACK_IMPORTED_MODULE_3__.userAgentFromString)\n/* harmony export */ });\n/* harmony import */ var _spec_extension_image_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../spec-extension/image-response */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/image-response.js\");\n/* harmony import */ var _spec_extension_request__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../spec-extension/request */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/request.js\");\n/* harmony import */ var _spec_extension_response__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../spec-extension/response */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/response.js\");\n/* harmony import */ var _spec_extension_user_agent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../spec-extension/user-agent */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/user-agent.js\");\n/* harmony import */ var _spec_extension_url_pattern__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../spec-extension/url-pattern */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/url-pattern.js\");\n// Alias index file of next/server for edge runtime for tree-shaking purpose\r\n\r\n\r\n\r\n\r\n\r\n\r\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9leHBvcnRzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDaUU7QUFDVDtBQUNFO0FBQ29CO0FBQ25CO0FBQzNEO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9leHBvcnRzL2luZGV4LmpzP2M1YTkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQWxpYXMgaW5kZXggZmlsZSBvZiBuZXh0L3NlcnZlciBmb3IgZWRnZSBydW50aW1lIGZvciB0cmVlLXNoYWtpbmcgcHVycG9zZVxyXG5leHBvcnQgeyBJbWFnZVJlc3BvbnNlIH0gZnJvbSBcIi4uL3NwZWMtZXh0ZW5zaW9uL2ltYWdlLXJlc3BvbnNlXCI7XHJcbmV4cG9ydCB7IE5leHRSZXF1ZXN0IH0gZnJvbSBcIi4uL3NwZWMtZXh0ZW5zaW9uL3JlcXVlc3RcIjtcclxuZXhwb3J0IHsgTmV4dFJlc3BvbnNlIH0gZnJvbSBcIi4uL3NwZWMtZXh0ZW5zaW9uL3Jlc3BvbnNlXCI7XHJcbmV4cG9ydCB7IHVzZXJBZ2VudCwgdXNlckFnZW50RnJvbVN0cmluZyB9IGZyb20gXCIuLi9zcGVjLWV4dGVuc2lvbi91c2VyLWFnZW50XCI7XHJcbmV4cG9ydCB7IFVSTFBhdHRlcm4gfSBmcm9tIFwiLi4vc3BlYy1leHRlbnNpb24vdXJsLXBhdHRlcm5cIjtcclxuXHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/exports/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/get-edge-preview-props.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/get-edge-preview-props.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEdgePreviewProps: () => (/* binding */ getEdgePreviewProps)\n/* harmony export */ });\n/**\r\n * In edge runtime, these props directly accessed from environment variables.\r\n *   - local: env vars will be injected through edge-runtime as runtime env vars\r\n *   - deployment: env vars will be replaced by edge build pipeline\r\n */ function getEdgePreviewProps() {\r\n    return {\r\n        previewModeId:  false ? 0 : \"development-id\",\r\n        previewModeSigningKey: process.env.__NEXT_PREVIEW_MODE_SIGNING_KEY || \"\",\r\n        previewModeEncryptionKey: process.env.__NEXT_PREVIEW_MODE_ENCRYPTION_KEY || \"\"\r\n    };\r\n}\r\n\r\n//# sourceMappingURL=get-edge-preview-props.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9nZXQtZWRnZS1wcmV2aWV3LXByb3BzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQVc7QUFDWDtBQUNBLHVCQUF1QixNQUFxQyxHQUFHLENBQWtDO0FBQ2pHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zZXJ2ZXIvd2ViL2dldC1lZGdlLXByZXZpZXctcHJvcHMuanM/MDJiMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogSW4gZWRnZSBydW50aW1lLCB0aGVzZSBwcm9wcyBkaXJlY3RseSBhY2Nlc3NlZCBmcm9tIGVudmlyb25tZW50IHZhcmlhYmxlcy5cclxuICogICAtIGxvY2FsOiBlbnYgdmFycyB3aWxsIGJlIGluamVjdGVkIHRocm91Z2ggZWRnZS1ydW50aW1lIGFzIHJ1bnRpbWUgZW52IHZhcnNcclxuICogICAtIGRlcGxveW1lbnQ6IGVudiB2YXJzIHdpbGwgYmUgcmVwbGFjZWQgYnkgZWRnZSBidWlsZCBwaXBlbGluZVxyXG4gKi8gZXhwb3J0IGZ1bmN0aW9uIGdldEVkZ2VQcmV2aWV3UHJvcHMoKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIHByZXZpZXdNb2RlSWQ6IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIiA/IHByb2Nlc3MuZW52Ll9fTkVYVF9QUkVWSUVXX01PREVfSUQgOiBcImRldmVsb3BtZW50LWlkXCIsXHJcbiAgICAgICAgcHJldmlld01vZGVTaWduaW5nS2V5OiBwcm9jZXNzLmVudi5fX05FWFRfUFJFVklFV19NT0RFX1NJR05JTkdfS0VZIHx8IFwiXCIsXHJcbiAgICAgICAgcHJldmlld01vZGVFbmNyeXB0aW9uS2V5OiBwcm9jZXNzLmVudi5fX05FWFRfUFJFVklFV19NT0RFX0VOQ1JZUFRJT05fS0VZIHx8IFwiXCJcclxuICAgIH07XHJcbn1cclxuXHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldC1lZGdlLXByZXZpZXctcHJvcHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/get-edge-preview-props.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/globals.js":
/*!**********************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/globals.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ensureInstrumentationRegistered: () => (/* binding */ ensureInstrumentationRegistered)\n/* harmony export */ });\nasync function registerInstrumentation() {\r\n    const register = \"_ENTRIES\" in globalThis && _ENTRIES.middleware_instrumentation && (await _ENTRIES.middleware_instrumentation).register;\r\n    if (register) {\r\n        try {\r\n            await register();\r\n        } catch (err) {\r\n            err.message = `An error occurred while loading instrumentation hook: ${err.message}`;\r\n            throw err;\r\n        }\r\n    }\r\n}\r\nlet registerInstrumentationPromise = null;\r\nfunction ensureInstrumentationRegistered() {\r\n    if (!registerInstrumentationPromise) {\r\n        registerInstrumentationPromise = registerInstrumentation();\r\n    }\r\n    return registerInstrumentationPromise;\r\n}\r\nfunction getUnsupportedModuleErrorMessage(module) {\r\n    // warning: if you change these messages, you must adjust how react-dev-overlay's middleware detects modules not found\r\n    return `The edge runtime does not support Node.js '${module}' module.\r\nLearn More: https://nextjs.org/docs/messages/node-module-in-edge-runtime`;\r\n}\r\nfunction __import_unsupported(moduleName) {\r\n    const proxy = new Proxy(function() {}, {\r\n        get (_obj, prop) {\r\n            if (prop === \"then\") {\r\n                return {};\r\n            }\r\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\r\n        },\r\n        construct () {\r\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\r\n        },\r\n        apply (_target, _this, args) {\r\n            if (typeof args[0] === \"function\") {\r\n                return args[0](proxy);\r\n            }\r\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\r\n        }\r\n    });\r\n    return new Proxy({}, {\r\n        get: ()=>proxy\r\n    });\r\n}\r\nfunction enhanceGlobals() {\r\n    // The condition is true when the \"process\" module is provided\r\n    if (process !== __webpack_require__.g.process) {\r\n        // prefer local process but global.process has correct \"env\"\r\n        process.env = __webpack_require__.g.process.env;\r\n        __webpack_require__.g.process = process;\r\n    }\r\n    // to allow building code that import but does not use node.js modules,\r\n    // webpack will expect this function to exist in global scope\r\n    Object.defineProperty(globalThis, \"__import_unsupported\", {\r\n        value: __import_unsupported,\r\n        enumerable: false,\r\n        configurable: false\r\n    });\r\n    // Eagerly fire instrumentation hook to make the startup faster.\r\n    void ensureInstrumentationRegistered();\r\n}\r\nenhanceGlobals();\r\n\r\n//# sourceMappingURL=globals.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9nbG9iYWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWLG1GQUFtRixZQUFZO0FBQy9GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBQXlELE9BQU87QUFDaEU7QUFDQTtBQUNBO0FBQ0EseUNBQXlDO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsdUJBQXVCO0FBQ3ZCO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixxQkFBTTtBQUMxQjtBQUNBLHNCQUFzQixxQkFBTTtBQUM1QixRQUFRLHFCQUFNO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvZ2xvYmFscy5qcz80NWExIl0sInNvdXJjZXNDb250ZW50IjpbImFzeW5jIGZ1bmN0aW9uIHJlZ2lzdGVySW5zdHJ1bWVudGF0aW9uKCkge1xyXG4gICAgY29uc3QgcmVnaXN0ZXIgPSBcIl9FTlRSSUVTXCIgaW4gZ2xvYmFsVGhpcyAmJiBfRU5UUklFUy5taWRkbGV3YXJlX2luc3RydW1lbnRhdGlvbiAmJiAoYXdhaXQgX0VOVFJJRVMubWlkZGxld2FyZV9pbnN0cnVtZW50YXRpb24pLnJlZ2lzdGVyO1xyXG4gICAgaWYgKHJlZ2lzdGVyKSB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgYXdhaXQgcmVnaXN0ZXIoKTtcclxuICAgICAgICB9IGNhdGNoIChlcnIpIHtcclxuICAgICAgICAgICAgZXJyLm1lc3NhZ2UgPSBgQW4gZXJyb3Igb2NjdXJyZWQgd2hpbGUgbG9hZGluZyBpbnN0cnVtZW50YXRpb24gaG9vazogJHtlcnIubWVzc2FnZX1gO1xyXG4gICAgICAgICAgICB0aHJvdyBlcnI7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbmxldCByZWdpc3Rlckluc3RydW1lbnRhdGlvblByb21pc2UgPSBudWxsO1xyXG5leHBvcnQgZnVuY3Rpb24gZW5zdXJlSW5zdHJ1bWVudGF0aW9uUmVnaXN0ZXJlZCgpIHtcclxuICAgIGlmICghcmVnaXN0ZXJJbnN0cnVtZW50YXRpb25Qcm9taXNlKSB7XHJcbiAgICAgICAgcmVnaXN0ZXJJbnN0cnVtZW50YXRpb25Qcm9taXNlID0gcmVnaXN0ZXJJbnN0cnVtZW50YXRpb24oKTtcclxuICAgIH1cclxuICAgIHJldHVybiByZWdpc3Rlckluc3RydW1lbnRhdGlvblByb21pc2U7XHJcbn1cclxuZnVuY3Rpb24gZ2V0VW5zdXBwb3J0ZWRNb2R1bGVFcnJvck1lc3NhZ2UobW9kdWxlKSB7XHJcbiAgICAvLyB3YXJuaW5nOiBpZiB5b3UgY2hhbmdlIHRoZXNlIG1lc3NhZ2VzLCB5b3UgbXVzdCBhZGp1c3QgaG93IHJlYWN0LWRldi1vdmVybGF5J3MgbWlkZGxld2FyZSBkZXRlY3RzIG1vZHVsZXMgbm90IGZvdW5kXHJcbiAgICByZXR1cm4gYFRoZSBlZGdlIHJ1bnRpbWUgZG9lcyBub3Qgc3VwcG9ydCBOb2RlLmpzICcke21vZHVsZX0nIG1vZHVsZS5cclxuTGVhcm4gTW9yZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvbm9kZS1tb2R1bGUtaW4tZWRnZS1ydW50aW1lYDtcclxufVxyXG5mdW5jdGlvbiBfX2ltcG9ydF91bnN1cHBvcnRlZChtb2R1bGVOYW1lKSB7XHJcbiAgICBjb25zdCBwcm94eSA9IG5ldyBQcm94eShmdW5jdGlvbigpIHt9LCB7XHJcbiAgICAgICAgZ2V0IChfb2JqLCBwcm9wKSB7XHJcbiAgICAgICAgICAgIGlmIChwcm9wID09PSBcInRoZW5cIikge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHt9O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihnZXRVbnN1cHBvcnRlZE1vZHVsZUVycm9yTWVzc2FnZShtb2R1bGVOYW1lKSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBjb25zdHJ1Y3QgKCkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoZ2V0VW5zdXBwb3J0ZWRNb2R1bGVFcnJvck1lc3NhZ2UobW9kdWxlTmFtZSkpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgYXBwbHkgKF90YXJnZXQsIF90aGlzLCBhcmdzKSB7XHJcbiAgICAgICAgICAgIGlmICh0eXBlb2YgYXJnc1swXSA9PT0gXCJmdW5jdGlvblwiKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gYXJnc1swXShwcm94eSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGdldFVuc3VwcG9ydGVkTW9kdWxlRXJyb3JNZXNzYWdlKG1vZHVsZU5hbWUpKTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuICAgIHJldHVybiBuZXcgUHJveHkoe30sIHtcclxuICAgICAgICBnZXQ6ICgpPT5wcm94eVxyXG4gICAgfSk7XHJcbn1cclxuZnVuY3Rpb24gZW5oYW5jZUdsb2JhbHMoKSB7XHJcbiAgICAvLyBUaGUgY29uZGl0aW9uIGlzIHRydWUgd2hlbiB0aGUgXCJwcm9jZXNzXCIgbW9kdWxlIGlzIHByb3ZpZGVkXHJcbiAgICBpZiAocHJvY2VzcyAhPT0gZ2xvYmFsLnByb2Nlc3MpIHtcclxuICAgICAgICAvLyBwcmVmZXIgbG9jYWwgcHJvY2VzcyBidXQgZ2xvYmFsLnByb2Nlc3MgaGFzIGNvcnJlY3QgXCJlbnZcIlxyXG4gICAgICAgIHByb2Nlc3MuZW52ID0gZ2xvYmFsLnByb2Nlc3MuZW52O1xyXG4gICAgICAgIGdsb2JhbC5wcm9jZXNzID0gcHJvY2VzcztcclxuICAgIH1cclxuICAgIC8vIHRvIGFsbG93IGJ1aWxkaW5nIGNvZGUgdGhhdCBpbXBvcnQgYnV0IGRvZXMgbm90IHVzZSBub2RlLmpzIG1vZHVsZXMsXHJcbiAgICAvLyB3ZWJwYWNrIHdpbGwgZXhwZWN0IHRoaXMgZnVuY3Rpb24gdG8gZXhpc3QgaW4gZ2xvYmFsIHNjb3BlXHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZ2xvYmFsVGhpcywgXCJfX2ltcG9ydF91bnN1cHBvcnRlZFwiLCB7XHJcbiAgICAgICAgdmFsdWU6IF9faW1wb3J0X3Vuc3VwcG9ydGVkLFxyXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogZmFsc2VcclxuICAgIH0pO1xyXG4gICAgLy8gRWFnZXJseSBmaXJlIGluc3RydW1lbnRhdGlvbiBob29rIHRvIG1ha2UgdGhlIHN0YXJ0dXAgZmFzdGVyLlxyXG4gICAgdm9pZCBlbnN1cmVJbnN0cnVtZW50YXRpb25SZWdpc3RlcmVkKCk7XHJcbn1cclxuZW5oYW5jZUdsb2JhbHMoKTtcclxuXHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdsb2JhbHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/globals.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/next-url.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/next-url.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NextURL: () => (/* binding */ NextURL)\n/* harmony export */ });\n/* harmony import */ var _shared_lib_i18n_detect_domain_locale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../shared/lib/i18n/detect-domain-locale */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/i18n/detect-domain-locale.js\");\n/* harmony import */ var _shared_lib_router_utils_format_next_pathname_info__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../shared/lib/router/utils/format-next-pathname-info */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/format-next-pathname-info.js\");\n/* harmony import */ var _shared_lib_get_hostname__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shared/lib/get-hostname */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/get-hostname.js\");\n/* harmony import */ var _shared_lib_router_utils_get_next_pathname_info__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../shared/lib/router/utils/get-next-pathname-info */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/get-next-pathname-info.js\");\n\r\n\r\n\r\n\r\nconst REGEX_LOCALHOST_HOSTNAME = /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|\\[::1\\]|localhost)/;\r\nfunction parseURL(url, base) {\r\n    return new URL(String(url).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"), base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"));\r\n}\r\nconst Internal = Symbol(\"NextURLInternal\");\r\nclass NextURL {\r\n    constructor(input, baseOrOpts, opts){\r\n        let base;\r\n        let options;\r\n        if (typeof baseOrOpts === \"object\" && \"pathname\" in baseOrOpts || typeof baseOrOpts === \"string\") {\r\n            base = baseOrOpts;\r\n            options = opts || {};\r\n        } else {\r\n            options = opts || baseOrOpts || {};\r\n        }\r\n        this[Internal] = {\r\n            url: parseURL(input, base ?? options.base),\r\n            options: options,\r\n            basePath: \"\"\r\n        };\r\n        this.analyze();\r\n    }\r\n    analyze() {\r\n        var _this_Internal_options_nextConfig_i18n, _this_Internal_options_nextConfig, _this_Internal_domainLocale, _this_Internal_options_nextConfig_i18n1, _this_Internal_options_nextConfig1;\r\n        const info = (0,_shared_lib_router_utils_get_next_pathname_info__WEBPACK_IMPORTED_MODULE_3__.getNextPathnameInfo)(this[Internal].url.pathname, {\r\n            nextConfig: this[Internal].options.nextConfig,\r\n            parseData: !undefined,\r\n            i18nProvider: this[Internal].options.i18nProvider\r\n        });\r\n        const hostname = (0,_shared_lib_get_hostname__WEBPACK_IMPORTED_MODULE_2__.getHostname)(this[Internal].url, this[Internal].options.headers);\r\n        this[Internal].domainLocale = this[Internal].options.i18nProvider ? this[Internal].options.i18nProvider.detectDomainLocale(hostname) : (0,_shared_lib_i18n_detect_domain_locale__WEBPACK_IMPORTED_MODULE_0__.detectDomainLocale)((_this_Internal_options_nextConfig = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n = _this_Internal_options_nextConfig.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n.domains, hostname);\r\n        const defaultLocale = ((_this_Internal_domainLocale = this[Internal].domainLocale) == null ? void 0 : _this_Internal_domainLocale.defaultLocale) || ((_this_Internal_options_nextConfig1 = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n1 = _this_Internal_options_nextConfig1.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n1.defaultLocale);\r\n        this[Internal].url.pathname = info.pathname;\r\n        this[Internal].defaultLocale = defaultLocale;\r\n        this[Internal].basePath = info.basePath ?? \"\";\r\n        this[Internal].buildId = info.buildId;\r\n        this[Internal].locale = info.locale ?? defaultLocale;\r\n        this[Internal].trailingSlash = info.trailingSlash;\r\n    }\r\n    formatPathname() {\r\n        return (0,_shared_lib_router_utils_format_next_pathname_info__WEBPACK_IMPORTED_MODULE_1__.formatNextPathnameInfo)({\r\n            basePath: this[Internal].basePath,\r\n            buildId: this[Internal].buildId,\r\n            defaultLocale: !this[Internal].options.forceLocale ? this[Internal].defaultLocale : undefined,\r\n            locale: this[Internal].locale,\r\n            pathname: this[Internal].url.pathname,\r\n            trailingSlash: this[Internal].trailingSlash\r\n        });\r\n    }\r\n    formatSearch() {\r\n        return this[Internal].url.search;\r\n    }\r\n    get buildId() {\r\n        return this[Internal].buildId;\r\n    }\r\n    set buildId(buildId) {\r\n        this[Internal].buildId = buildId;\r\n    }\r\n    get locale() {\r\n        return this[Internal].locale ?? \"\";\r\n    }\r\n    set locale(locale) {\r\n        var _this_Internal_options_nextConfig_i18n, _this_Internal_options_nextConfig;\r\n        if (!this[Internal].locale || !((_this_Internal_options_nextConfig = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n = _this_Internal_options_nextConfig.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n.locales.includes(locale))) {\r\n            throw new TypeError(`The NextURL configuration includes no locale \"${locale}\"`);\r\n        }\r\n        this[Internal].locale = locale;\r\n    }\r\n    get defaultLocale() {\r\n        return this[Internal].defaultLocale;\r\n    }\r\n    get domainLocale() {\r\n        return this[Internal].domainLocale;\r\n    }\r\n    get searchParams() {\r\n        return this[Internal].url.searchParams;\r\n    }\r\n    get host() {\r\n        return this[Internal].url.host;\r\n    }\r\n    set host(value) {\r\n        this[Internal].url.host = value;\r\n    }\r\n    get hostname() {\r\n        return this[Internal].url.hostname;\r\n    }\r\n    set hostname(value) {\r\n        this[Internal].url.hostname = value;\r\n    }\r\n    get port() {\r\n        return this[Internal].url.port;\r\n    }\r\n    set port(value) {\r\n        this[Internal].url.port = value;\r\n    }\r\n    get protocol() {\r\n        return this[Internal].url.protocol;\r\n    }\r\n    set protocol(value) {\r\n        this[Internal].url.protocol = value;\r\n    }\r\n    get href() {\r\n        const pathname = this.formatPathname();\r\n        const search = this.formatSearch();\r\n        return `${this.protocol}//${this.host}${pathname}${search}${this.hash}`;\r\n    }\r\n    set href(url) {\r\n        this[Internal].url = parseURL(url);\r\n        this.analyze();\r\n    }\r\n    get origin() {\r\n        return this[Internal].url.origin;\r\n    }\r\n    get pathname() {\r\n        return this[Internal].url.pathname;\r\n    }\r\n    set pathname(value) {\r\n        this[Internal].url.pathname = value;\r\n    }\r\n    get hash() {\r\n        return this[Internal].url.hash;\r\n    }\r\n    set hash(value) {\r\n        this[Internal].url.hash = value;\r\n    }\r\n    get search() {\r\n        return this[Internal].url.search;\r\n    }\r\n    set search(value) {\r\n        this[Internal].url.search = value;\r\n    }\r\n    get password() {\r\n        return this[Internal].url.password;\r\n    }\r\n    set password(value) {\r\n        this[Internal].url.password = value;\r\n    }\r\n    get username() {\r\n        return this[Internal].url.username;\r\n    }\r\n    set username(value) {\r\n        this[Internal].url.username = value;\r\n    }\r\n    get basePath() {\r\n        return this[Internal].basePath;\r\n    }\r\n    set basePath(value) {\r\n        this[Internal].basePath = value.startsWith(\"/\") ? value : `/${value}`;\r\n    }\r\n    toString() {\r\n        return this.href;\r\n    }\r\n    toJSON() {\r\n        return this.href;\r\n    }\r\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\r\n        return {\r\n            href: this.href,\r\n            origin: this.origin,\r\n            protocol: this.protocol,\r\n            username: this.username,\r\n            password: this.password,\r\n            host: this.host,\r\n            hostname: this.hostname,\r\n            port: this.port,\r\n            pathname: this.pathname,\r\n            search: this.search,\r\n            searchParams: this.searchParams,\r\n            hash: this.hash\r\n        };\r\n    }\r\n    clone() {\r\n        return new NextURL(String(this), this[Internal].options);\r\n    }\r\n}\r\n\r\n//# sourceMappingURL=next-url.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/next-url.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HeadersAdapter: () => (/* binding */ HeadersAdapter),\n/* harmony export */   ReadonlyHeadersError: () => (/* binding */ ReadonlyHeadersError)\n/* harmony export */ });\n/* harmony import */ var _reflect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reflect */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js\");\n\r\n/**\r\n * @internal\r\n */ class ReadonlyHeadersError extends Error {\r\n    constructor(){\r\n        super(\"Headers cannot be modified. Read more: https://nextjs.org/docs/app/api-reference/functions/headers\");\r\n    }\r\n    static callable() {\r\n        throw new ReadonlyHeadersError();\r\n    }\r\n}\r\nclass HeadersAdapter extends Headers {\r\n    constructor(headers){\r\n        // We've already overridden the methods that would be called, so we're just\r\n        // calling the super constructor to ensure that the instanceof check works.\r\n        super();\r\n        this.headers = new Proxy(headers, {\r\n            get (target, prop, receiver) {\r\n                // Because this is just an object, we expect that all \"get\" operations\r\n                // are for properties. If it's a \"get\" for a symbol, we'll just return\r\n                // the symbol.\r\n                if (typeof prop === \"symbol\") {\r\n                    return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.get(target, prop, receiver);\r\n                }\r\n                const lowercased = prop.toLowerCase();\r\n                // Let's find the original casing of the key. This assumes that there is\r\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\r\n                // headers object.\r\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\r\n                // If the original casing doesn't exist, return undefined.\r\n                if (typeof original === \"undefined\") return;\r\n                // If the original casing exists, return the value.\r\n                return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.get(target, original, receiver);\r\n            },\r\n            set (target, prop, value, receiver) {\r\n                if (typeof prop === \"symbol\") {\r\n                    return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.set(target, prop, value, receiver);\r\n                }\r\n                const lowercased = prop.toLowerCase();\r\n                // Let's find the original casing of the key. This assumes that there is\r\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\r\n                // headers object.\r\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\r\n                // If the original casing doesn't exist, use the prop as the key.\r\n                return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.set(target, original ?? prop, value, receiver);\r\n            },\r\n            has (target, prop) {\r\n                if (typeof prop === \"symbol\") return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.has(target, prop);\r\n                const lowercased = prop.toLowerCase();\r\n                // Let's find the original casing of the key. This assumes that there is\r\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\r\n                // headers object.\r\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\r\n                // If the original casing doesn't exist, return false.\r\n                if (typeof original === \"undefined\") return false;\r\n                // If the original casing exists, return true.\r\n                return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.has(target, original);\r\n            },\r\n            deleteProperty (target, prop) {\r\n                if (typeof prop === \"symbol\") return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.deleteProperty(target, prop);\r\n                const lowercased = prop.toLowerCase();\r\n                // Let's find the original casing of the key. This assumes that there is\r\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\r\n                // headers object.\r\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\r\n                // If the original casing doesn't exist, return true.\r\n                if (typeof original === \"undefined\") return true;\r\n                // If the original casing exists, delete the property.\r\n                return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.deleteProperty(target, original);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n   * Seals a Headers instance to prevent modification by throwing an error when\r\n   * any mutating method is called.\r\n   */ static seal(headers) {\r\n        return new Proxy(headers, {\r\n            get (target, prop, receiver) {\r\n                switch(prop){\r\n                    case \"append\":\r\n                    case \"delete\":\r\n                    case \"set\":\r\n                        return ReadonlyHeadersError.callable;\r\n                    default:\r\n                        return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.get(target, prop, receiver);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    /**\r\n   * Merges a header value into a string. This stores multiple values as an\r\n   * array, so we need to merge them into a string.\r\n   *\r\n   * @param value a header value\r\n   * @returns a merged header value (a string)\r\n   */ merge(value) {\r\n        if (Array.isArray(value)) return value.join(\", \");\r\n        return value;\r\n    }\r\n    /**\r\n   * Creates a Headers instance from a plain object or a Headers instance.\r\n   *\r\n   * @param headers a plain object or a Headers instance\r\n   * @returns a headers instance\r\n   */ static from(headers) {\r\n        if (headers instanceof Headers) return headers;\r\n        return new HeadersAdapter(headers);\r\n    }\r\n    append(name, value) {\r\n        const existing = this.headers[name];\r\n        if (typeof existing === \"string\") {\r\n            this.headers[name] = [\r\n                existing,\r\n                value\r\n            ];\r\n        } else if (Array.isArray(existing)) {\r\n            existing.push(value);\r\n        } else {\r\n            this.headers[name] = value;\r\n        }\r\n    }\r\n    delete(name) {\r\n        delete this.headers[name];\r\n    }\r\n    get(name) {\r\n        const value = this.headers[name];\r\n        if (typeof value !== \"undefined\") return this.merge(value);\r\n        return null;\r\n    }\r\n    has(name) {\r\n        return typeof this.headers[name] !== \"undefined\";\r\n    }\r\n    set(name, value) {\r\n        this.headers[name] = value;\r\n    }\r\n    forEach(callbackfn, thisArg) {\r\n        for (const [name, value] of this.entries()){\r\n            callbackfn.call(thisArg, value, name, this);\r\n        }\r\n    }\r\n    *entries() {\r\n        for (const key of Object.keys(this.headers)){\r\n            const name = key.toLowerCase();\r\n            // We assert here that this is a string because we got it from the\r\n            // Object.keys() call above.\r\n            const value = this.get(name);\r\n            yield [\r\n                name,\r\n                value\r\n            ];\r\n        }\r\n    }\r\n    *keys() {\r\n        for (const key of Object.keys(this.headers)){\r\n            const name = key.toLowerCase();\r\n            yield name;\r\n        }\r\n    }\r\n    *values() {\r\n        for (const key of Object.keys(this.headers)){\r\n            // We assert here that this is a string because we got it from the\r\n            // Object.keys() call above.\r\n            const value = this.get(key);\r\n            yield value;\r\n        }\r\n    }\r\n    [Symbol.iterator]() {\r\n        return this.entries();\r\n    }\r\n}\r\n\r\n//# sourceMappingURL=headers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReflectAdapter: () => (/* binding */ ReflectAdapter)\n/* harmony export */ });\nclass ReflectAdapter {\r\n    static get(target, prop, receiver) {\r\n        const value = Reflect.get(target, prop, receiver);\r\n        if (typeof value === \"function\") {\r\n            return value.bind(target);\r\n        }\r\n        return value;\r\n    }\r\n    static set(target, prop, value, receiver) {\r\n        return Reflect.set(target, prop, value, receiver);\r\n    }\r\n    static has(target, prop) {\r\n        return Reflect.has(target, prop);\r\n    }\r\n    static deleteProperty(target, prop) {\r\n        return Reflect.deleteProperty(target, prop);\r\n    }\r\n}\r\n\r\n//# sourceMappingURL=reflect.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9hZGFwdGVycy9yZWZsZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vYWRhcHRlcnMvcmVmbGVjdC5qcz85MDljIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBSZWZsZWN0QWRhcHRlciB7XHJcbiAgICBzdGF0aWMgZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpIHtcclxuICAgICAgICBjb25zdCB2YWx1ZSA9IFJlZmxlY3QuZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpO1xyXG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIikge1xyXG4gICAgICAgICAgICByZXR1cm4gdmFsdWUuYmluZCh0YXJnZXQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdmFsdWU7XHJcbiAgICB9XHJcbiAgICBzdGF0aWMgc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUsIHJlY2VpdmVyKSB7XHJcbiAgICAgICAgcmV0dXJuIFJlZmxlY3Quc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUsIHJlY2VpdmVyKTtcclxuICAgIH1cclxuICAgIHN0YXRpYyBoYXModGFyZ2V0LCBwcm9wKSB7XHJcbiAgICAgICAgcmV0dXJuIFJlZmxlY3QuaGFzKHRhcmdldCwgcHJvcCk7XHJcbiAgICB9XHJcbiAgICBzdGF0aWMgZGVsZXRlUHJvcGVydHkodGFyZ2V0LCBwcm9wKSB7XHJcbiAgICAgICAgcmV0dXJuIFJlZmxlY3QuZGVsZXRlUHJvcGVydHkodGFyZ2V0LCBwcm9wKTtcclxuICAgIH1cclxufVxyXG5cclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVmbGVjdC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/request-cookies.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/adapters/request-cookies.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MutableRequestCookiesAdapter: () => (/* binding */ MutableRequestCookiesAdapter),\n/* harmony export */   ReadonlyRequestCookiesError: () => (/* binding */ ReadonlyRequestCookiesError),\n/* harmony export */   RequestCookiesAdapter: () => (/* binding */ RequestCookiesAdapter),\n/* harmony export */   appendMutableCookies: () => (/* binding */ appendMutableCookies),\n/* harmony export */   getModifiedCookieValues: () => (/* binding */ getModifiedCookieValues)\n/* harmony export */ });\n/* harmony import */ var _cookies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cookies */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js\");\n/* harmony import */ var _reflect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reflect */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js\");\n/* harmony import */ var _client_components_static_generation_async_storage_external__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../client/components/static-generation-async-storage.external */ \"(shared)/./node_modules/next/dist/esm/client/components/static-generation-async-storage.external.js\");\n\r\n\r\n\r\n/**\r\n * @internal\r\n */ class ReadonlyRequestCookiesError extends Error {\r\n    constructor(){\r\n        super(\"Cookies can only be modified in a Server Action or Route Handler. Read more: https://nextjs.org/docs/app/api-reference/functions/cookies#cookiessetname-value-options\");\r\n    }\r\n    static callable() {\r\n        throw new ReadonlyRequestCookiesError();\r\n    }\r\n}\r\nclass RequestCookiesAdapter {\r\n    static seal(cookies) {\r\n        return new Proxy(cookies, {\r\n            get (target, prop, receiver) {\r\n                switch(prop){\r\n                    case \"clear\":\r\n                    case \"delete\":\r\n                    case \"set\":\r\n                        return ReadonlyRequestCookiesError.callable;\r\n                    default:\r\n                        return _reflect__WEBPACK_IMPORTED_MODULE_1__.ReflectAdapter.get(target, prop, receiver);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nconst SYMBOL_MODIFY_COOKIE_VALUES = Symbol.for(\"next.mutated.cookies\");\r\nfunction getModifiedCookieValues(cookies) {\r\n    const modified = cookies[SYMBOL_MODIFY_COOKIE_VALUES];\r\n    if (!modified || !Array.isArray(modified) || modified.length === 0) {\r\n        return [];\r\n    }\r\n    return modified;\r\n}\r\nfunction appendMutableCookies(headers, mutableCookies) {\r\n    const modifiedCookieValues = getModifiedCookieValues(mutableCookies);\r\n    if (modifiedCookieValues.length === 0) {\r\n        return false;\r\n    }\r\n    // Return a new response that extends the response with\r\n    // the modified cookies as fallbacks. `res` cookies\r\n    // will still take precedence.\r\n    const resCookies = new _cookies__WEBPACK_IMPORTED_MODULE_0__.ResponseCookies(headers);\r\n    const returnedCookies = resCookies.getAll();\r\n    // Set the modified cookies as fallbacks.\r\n    for (const cookie of modifiedCookieValues){\r\n        resCookies.set(cookie);\r\n    }\r\n    // Set the original cookies as the final values.\r\n    for (const cookie of returnedCookies){\r\n        resCookies.set(cookie);\r\n    }\r\n    return true;\r\n}\r\nclass MutableRequestCookiesAdapter {\r\n    static wrap(cookies, onUpdateCookies) {\r\n        const responseCookies = new _cookies__WEBPACK_IMPORTED_MODULE_0__.ResponseCookies(new Headers());\r\n        for (const cookie of cookies.getAll()){\r\n            responseCookies.set(cookie);\r\n        }\r\n        let modifiedValues = [];\r\n        const modifiedCookies = new Set();\r\n        const updateResponseCookies = ()=>{\r\n            // TODO-APP: change method of getting staticGenerationAsyncStore\r\n            const staticGenerationAsyncStore = _client_components_static_generation_async_storage_external__WEBPACK_IMPORTED_MODULE_2__.staticGenerationAsyncStorage.getStore();\r\n            if (staticGenerationAsyncStore) {\r\n                staticGenerationAsyncStore.pathWasRevalidated = true;\r\n            }\r\n            const allCookies = responseCookies.getAll();\r\n            modifiedValues = allCookies.filter((c)=>modifiedCookies.has(c.name));\r\n            if (onUpdateCookies) {\r\n                const serializedCookies = [];\r\n                for (const cookie of modifiedValues){\r\n                    const tempCookies = new _cookies__WEBPACK_IMPORTED_MODULE_0__.ResponseCookies(new Headers());\r\n                    tempCookies.set(cookie);\r\n                    serializedCookies.push(tempCookies.toString());\r\n                }\r\n                onUpdateCookies(serializedCookies);\r\n            }\r\n        };\r\n        return new Proxy(responseCookies, {\r\n            get (target, prop, receiver) {\r\n                switch(prop){\r\n                    // A special symbol to get the modified cookie values\r\n                    case SYMBOL_MODIFY_COOKIE_VALUES:\r\n                        return modifiedValues;\r\n                    // TODO: Throw error if trying to set a cookie after the response\r\n                    // headers have been set.\r\n                    case \"delete\":\r\n                        return function(...args) {\r\n                            modifiedCookies.add(typeof args[0] === \"string\" ? args[0] : args[0].name);\r\n                            try {\r\n                                target.delete(...args);\r\n                            } finally{\r\n                                updateResponseCookies();\r\n                            }\r\n                        };\r\n                    case \"set\":\r\n                        return function(...args) {\r\n                            modifiedCookies.add(typeof args[0] === \"string\" ? args[0] : args[0].name);\r\n                            try {\r\n                                return target.set(...args);\r\n                            } finally{\r\n                                updateResponseCookies();\r\n                            }\r\n                        };\r\n                    default:\r\n                        return _reflect__WEBPACK_IMPORTED_MODULE_1__.ReflectAdapter.get(target, prop, receiver);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n//# sourceMappingURL=request-cookies.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/request-cookies.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/cookies.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequestCookies: () => (/* reexport safe */ next_dist_compiled_edge_runtime_cookies__WEBPACK_IMPORTED_MODULE_0__.RequestCookies),\n/* harmony export */   ResponseCookies: () => (/* reexport safe */ next_dist_compiled_edge_runtime_cookies__WEBPACK_IMPORTED_MODULE_0__.ResponseCookies),\n/* harmony export */   stringifyCookie: () => (/* reexport safe */ next_dist_compiled_edge_runtime_cookies__WEBPACK_IMPORTED_MODULE_0__.stringifyCookie)\n/* harmony export */ });\n/* harmony import */ var next_dist_compiled_edge_runtime_cookies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/compiled/@edge-runtime/cookies */ \"(middleware)/./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js\");\n/* harmony import */ var next_dist_compiled_edge_runtime_cookies__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_compiled_edge_runtime_cookies__WEBPACK_IMPORTED_MODULE_0__);\n\r\n\r\n//# sourceMappingURL=cookies.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9jb29raWVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTRHO0FBQzVHO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9jb29raWVzLmpzPzNjNGIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgUmVxdWVzdENvb2tpZXMsIFJlc3BvbnNlQ29va2llcywgc3RyaW5naWZ5Q29va2llIH0gZnJvbSBcIm5leHQvZGlzdC9jb21waWxlZC9AZWRnZS1ydW50aW1lL2Nvb2tpZXNcIjtcclxuXHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvb2tpZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NextFetchEvent: () => (/* binding */ NextFetchEvent),\n/* harmony export */   waitUntilSymbol: () => (/* binding */ waitUntilSymbol)\n/* harmony export */ });\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error */ \"(middleware)/./node_modules/next/dist/esm/server/web/error.js\");\n\r\nconst responseSymbol = Symbol(\"response\");\r\nconst passThroughSymbol = Symbol(\"passThrough\");\r\nconst waitUntilSymbol = Symbol(\"waitUntil\");\r\nclass FetchEvent {\r\n    // eslint-disable-next-line @typescript-eslint/no-useless-constructor\r\n    constructor(_request){\r\n        this[waitUntilSymbol] = [];\r\n        this[passThroughSymbol] = false;\r\n    }\r\n    respondWith(response) {\r\n        if (!this[responseSymbol]) {\r\n            this[responseSymbol] = Promise.resolve(response);\r\n        }\r\n    }\r\n    passThroughOnException() {\r\n        this[passThroughSymbol] = true;\r\n    }\r\n    waitUntil(promise) {\r\n        this[waitUntilSymbol].push(promise);\r\n    }\r\n}\r\nclass NextFetchEvent extends FetchEvent {\r\n    constructor(params){\r\n        super(params.request);\r\n        this.sourcePage = params.page;\r\n    }\r\n    /**\r\n   * @deprecated The `request` is now the first parameter and the API is now async.\r\n   *\r\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\r\n   */ get request() {\r\n        throw new _error__WEBPACK_IMPORTED_MODULE_0__.PageSignatureError({\r\n            page: this.sourcePage\r\n        });\r\n    }\r\n    /**\r\n   * @deprecated Using `respondWith` is no longer needed.\r\n   *\r\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\r\n   */ respondWith() {\r\n        throw new _error__WEBPACK_IMPORTED_MODULE_0__.PageSignatureError({\r\n            page: this.sourcePage\r\n        });\r\n    }\r\n}\r\n\r\n//# sourceMappingURL=fetch-event.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9mZXRjaC1ldmVudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBOEM7QUFDOUM7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0Isc0RBQWtCO0FBQ3BDO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixzREFBa0I7QUFDcEM7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9mZXRjaC1ldmVudC5qcz81MGUxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VTaWduYXR1cmVFcnJvciB9IGZyb20gXCIuLi9lcnJvclwiO1xyXG5jb25zdCByZXNwb25zZVN5bWJvbCA9IFN5bWJvbChcInJlc3BvbnNlXCIpO1xyXG5jb25zdCBwYXNzVGhyb3VnaFN5bWJvbCA9IFN5bWJvbChcInBhc3NUaHJvdWdoXCIpO1xyXG5leHBvcnQgY29uc3Qgd2FpdFVudGlsU3ltYm9sID0gU3ltYm9sKFwid2FpdFVudGlsXCIpO1xyXG5jbGFzcyBGZXRjaEV2ZW50IHtcclxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdXNlbGVzcy1jb25zdHJ1Y3RvclxyXG4gICAgY29uc3RydWN0b3IoX3JlcXVlc3Qpe1xyXG4gICAgICAgIHRoaXNbd2FpdFVudGlsU3ltYm9sXSA9IFtdO1xyXG4gICAgICAgIHRoaXNbcGFzc1Rocm91Z2hTeW1ib2xdID0gZmFsc2U7XHJcbiAgICB9XHJcbiAgICByZXNwb25kV2l0aChyZXNwb25zZSkge1xyXG4gICAgICAgIGlmICghdGhpc1tyZXNwb25zZVN5bWJvbF0pIHtcclxuICAgICAgICAgICAgdGhpc1tyZXNwb25zZVN5bWJvbF0gPSBQcm9taXNlLnJlc29sdmUocmVzcG9uc2UpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHBhc3NUaHJvdWdoT25FeGNlcHRpb24oKSB7XHJcbiAgICAgICAgdGhpc1twYXNzVGhyb3VnaFN5bWJvbF0gPSB0cnVlO1xyXG4gICAgfVxyXG4gICAgd2FpdFVudGlsKHByb21pc2UpIHtcclxuICAgICAgICB0aGlzW3dhaXRVbnRpbFN5bWJvbF0ucHVzaChwcm9taXNlKTtcclxuICAgIH1cclxufVxyXG5leHBvcnQgY2xhc3MgTmV4dEZldGNoRXZlbnQgZXh0ZW5kcyBGZXRjaEV2ZW50IHtcclxuICAgIGNvbnN0cnVjdG9yKHBhcmFtcyl7XHJcbiAgICAgICAgc3VwZXIocGFyYW1zLnJlcXVlc3QpO1xyXG4gICAgICAgIHRoaXMuc291cmNlUGFnZSA9IHBhcmFtcy5wYWdlO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICogQGRlcHJlY2F0ZWQgVGhlIGByZXF1ZXN0YCBpcyBub3cgdGhlIGZpcnN0IHBhcmFtZXRlciBhbmQgdGhlIEFQSSBpcyBub3cgYXN5bmMuXHJcbiAgICpcclxuICAgKiBSZWFkIG1vcmU6IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzL21pZGRsZXdhcmUtbmV3LXNpZ25hdHVyZVxyXG4gICAqLyBnZXQgcmVxdWVzdCgpIHtcclxuICAgICAgICB0aHJvdyBuZXcgUGFnZVNpZ25hdHVyZUVycm9yKHtcclxuICAgICAgICAgICAgcGFnZTogdGhpcy5zb3VyY2VQYWdlXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgKiBAZGVwcmVjYXRlZCBVc2luZyBgcmVzcG9uZFdpdGhgIGlzIG5vIGxvbmdlciBuZWVkZWQuXHJcbiAgICpcclxuICAgKiBSZWFkIG1vcmU6IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzL21pZGRsZXdhcmUtbmV3LXNpZ25hdHVyZVxyXG4gICAqLyByZXNwb25kV2l0aCgpIHtcclxuICAgICAgICB0aHJvdyBuZXcgUGFnZVNpZ25hdHVyZUVycm9yKHtcclxuICAgICAgICAgICAgcGFnZTogdGhpcy5zb3VyY2VQYWdlXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZldGNoLWV2ZW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/image-response.js":
/*!********************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/image-response.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ImageResponse: () => (/* binding */ ImageResponse)\n/* harmony export */ });\n/**\r\n * @deprecated ImageResponse moved from \"next/server\" to \"next/og\" since Next.js 14, please import from \"next/og\" instead.\r\n * Migration with codemods: https://nextjs.org/docs/app/building-your-application/upgrading/codemods#next-og-import\r\n */ function ImageResponse() {\r\n    throw new Error('ImageResponse moved from \"next/server\" to \"next/og\" since Next.js 14, please import from \"next/og\" instead');\r\n}\r\n\r\n//# sourceMappingURL=image-response.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9pbWFnZS1yZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0EsSUFBVztBQUNYO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vaW1hZ2UtcmVzcG9uc2UuanM/OWNmYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGRlcHJlY2F0ZWQgSW1hZ2VSZXNwb25zZSBtb3ZlZCBmcm9tIFwibmV4dC9zZXJ2ZXJcIiB0byBcIm5leHQvb2dcIiBzaW5jZSBOZXh0LmpzIDE0LCBwbGVhc2UgaW1wb3J0IGZyb20gXCJuZXh0L29nXCIgaW5zdGVhZC5cclxuICogTWlncmF0aW9uIHdpdGggY29kZW1vZHM6IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL2FwcC9idWlsZGluZy15b3VyLWFwcGxpY2F0aW9uL3VwZ3JhZGluZy9jb2RlbW9kcyNuZXh0LW9nLWltcG9ydFxyXG4gKi8gZXhwb3J0IGZ1bmN0aW9uIEltYWdlUmVzcG9uc2UoKSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ltYWdlUmVzcG9uc2UgbW92ZWQgZnJvbSBcIm5leHQvc2VydmVyXCIgdG8gXCJuZXh0L29nXCIgc2luY2UgTmV4dC5qcyAxNCwgcGxlYXNlIGltcG9ydCBmcm9tIFwibmV4dC9vZ1wiIGluc3RlYWQnKTtcclxufVxyXG5cclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW1hZ2UtcmVzcG9uc2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/image-response.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/request.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/request.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   INTERNALS: () => (/* binding */ INTERNALS),\n/* harmony export */   NextRequest: () => (/* binding */ NextRequest)\n/* harmony export */ });\n/* harmony import */ var _next_url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../next-url */ \"(middleware)/./node_modules/next/dist/esm/server/web/next-url.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils */ \"(middleware)/./node_modules/next/dist/esm/server/web/utils.js\");\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error */ \"(middleware)/./node_modules/next/dist/esm/server/web/error.js\");\n/* harmony import */ var _cookies__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cookies */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js\");\n\r\n\r\n\r\n\r\nconst INTERNALS = Symbol(\"internal request\");\r\n/**\r\n * This class extends the [Web `Request` API](https://developer.mozilla.org/docs/Web/API/Request) with additional convenience methods.\r\n *\r\n * Read more: [Next.js Docs: `NextRequest`](https://nextjs.org/docs/app/api-reference/functions/next-request)\r\n */ class NextRequest extends Request {\r\n    constructor(input, init = {}){\r\n        const url = typeof input !== \"string\" && \"url\" in input ? input.url : String(input);\r\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.validateURL)(url);\r\n        if (input instanceof Request) super(input, init);\r\n        else super(url, init);\r\n        const nextUrl = new _next_url__WEBPACK_IMPORTED_MODULE_0__.NextURL(url, {\r\n            headers: (0,_utils__WEBPACK_IMPORTED_MODULE_1__.toNodeOutgoingHttpHeaders)(this.headers),\r\n            nextConfig: init.nextConfig\r\n        });\r\n        this[INTERNALS] = {\r\n            cookies: new _cookies__WEBPACK_IMPORTED_MODULE_3__.RequestCookies(this.headers),\r\n            geo: init.geo || {},\r\n            ip: init.ip,\r\n            nextUrl,\r\n            url:  false ? 0 : nextUrl.toString()\r\n        };\r\n    }\r\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\r\n        return {\r\n            cookies: this.cookies,\r\n            geo: this.geo,\r\n            ip: this.ip,\r\n            nextUrl: this.nextUrl,\r\n            url: this.url,\r\n            // rest of props come from Request\r\n            bodyUsed: this.bodyUsed,\r\n            cache: this.cache,\r\n            credentials: this.credentials,\r\n            destination: this.destination,\r\n            headers: Object.fromEntries(this.headers),\r\n            integrity: this.integrity,\r\n            keepalive: this.keepalive,\r\n            method: this.method,\r\n            mode: this.mode,\r\n            redirect: this.redirect,\r\n            referrer: this.referrer,\r\n            referrerPolicy: this.referrerPolicy,\r\n            signal: this.signal\r\n        };\r\n    }\r\n    get cookies() {\r\n        return this[INTERNALS].cookies;\r\n    }\r\n    get geo() {\r\n        return this[INTERNALS].geo;\r\n    }\r\n    get ip() {\r\n        return this[INTERNALS].ip;\r\n    }\r\n    get nextUrl() {\r\n        return this[INTERNALS].nextUrl;\r\n    }\r\n    /**\r\n   * @deprecated\r\n   * `page` has been deprecated in favour of `URLPattern`.\r\n   * Read more: https://nextjs.org/docs/messages/middleware-request-page\r\n   */ get page() {\r\n        throw new _error__WEBPACK_IMPORTED_MODULE_2__.RemovedPageError();\r\n    }\r\n    /**\r\n   * @deprecated\r\n   * `ua` has been removed in favour of \\`userAgent\\` function.\r\n   * Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\r\n   */ get ua() {\r\n        throw new _error__WEBPACK_IMPORTED_MODULE_2__.RemovedUAError();\r\n    }\r\n    get url() {\r\n        return this[INTERNALS].url;\r\n    }\r\n}\r\n\r\n//# sourceMappingURL=request.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9yZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFzQztBQUM0QjtBQUNOO0FBQ2pCO0FBQ3BDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFXO0FBQ1gsZ0NBQWdDO0FBQ2hDO0FBQ0EsUUFBUSxtREFBVztBQUNuQjtBQUNBO0FBQ0EsNEJBQTRCLDhDQUFPO0FBQ25DLHFCQUFxQixpRUFBeUI7QUFDOUM7QUFDQSxTQUFTO0FBQ1Q7QUFDQSx5QkFBeUIsb0RBQWM7QUFDdkMsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQSxpQkFBaUIsTUFBOEMsR0FBRyxDQUFHO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixvREFBZ0I7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGtEQUFjO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vcmVxdWVzdC5qcz9lNzQ0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRVUkwgfSBmcm9tIFwiLi4vbmV4dC11cmxcIjtcclxuaW1wb3J0IHsgdG9Ob2RlT3V0Z29pbmdIdHRwSGVhZGVycywgdmFsaWRhdGVVUkwgfSBmcm9tIFwiLi4vdXRpbHNcIjtcclxuaW1wb3J0IHsgUmVtb3ZlZFVBRXJyb3IsIFJlbW92ZWRQYWdlRXJyb3IgfSBmcm9tIFwiLi4vZXJyb3JcIjtcclxuaW1wb3J0IHsgUmVxdWVzdENvb2tpZXMgfSBmcm9tIFwiLi9jb29raWVzXCI7XHJcbmV4cG9ydCBjb25zdCBJTlRFUk5BTFMgPSBTeW1ib2woXCJpbnRlcm5hbCByZXF1ZXN0XCIpO1xyXG4vKipcclxuICogVGhpcyBjbGFzcyBleHRlbmRzIHRoZSBbV2ViIGBSZXF1ZXN0YCBBUEldKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0FQSS9SZXF1ZXN0KSB3aXRoIGFkZGl0aW9uYWwgY29udmVuaWVuY2UgbWV0aG9kcy5cclxuICpcclxuICogUmVhZCBtb3JlOiBbTmV4dC5qcyBEb2NzOiBgTmV4dFJlcXVlc3RgXShodHRwczovL25leHRqcy5vcmcvZG9jcy9hcHAvYXBpLXJlZmVyZW5jZS9mdW5jdGlvbnMvbmV4dC1yZXF1ZXN0KVxyXG4gKi8gZXhwb3J0IGNsYXNzIE5leHRSZXF1ZXN0IGV4dGVuZHMgUmVxdWVzdCB7XHJcbiAgICBjb25zdHJ1Y3RvcihpbnB1dCwgaW5pdCA9IHt9KXtcclxuICAgICAgICBjb25zdCB1cmwgPSB0eXBlb2YgaW5wdXQgIT09IFwic3RyaW5nXCIgJiYgXCJ1cmxcIiBpbiBpbnB1dCA/IGlucHV0LnVybCA6IFN0cmluZyhpbnB1dCk7XHJcbiAgICAgICAgdmFsaWRhdGVVUkwodXJsKTtcclxuICAgICAgICBpZiAoaW5wdXQgaW5zdGFuY2VvZiBSZXF1ZXN0KSBzdXBlcihpbnB1dCwgaW5pdCk7XHJcbiAgICAgICAgZWxzZSBzdXBlcih1cmwsIGluaXQpO1xyXG4gICAgICAgIGNvbnN0IG5leHRVcmwgPSBuZXcgTmV4dFVSTCh1cmwsIHtcclxuICAgICAgICAgICAgaGVhZGVyczogdG9Ob2RlT3V0Z29pbmdIdHRwSGVhZGVycyh0aGlzLmhlYWRlcnMpLFxyXG4gICAgICAgICAgICBuZXh0Q29uZmlnOiBpbml0Lm5leHRDb25maWdcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzW0lOVEVSTkFMU10gPSB7XHJcbiAgICAgICAgICAgIGNvb2tpZXM6IG5ldyBSZXF1ZXN0Q29va2llcyh0aGlzLmhlYWRlcnMpLFxyXG4gICAgICAgICAgICBnZW86IGluaXQuZ2VvIHx8IHt9LFxyXG4gICAgICAgICAgICBpcDogaW5pdC5pcCxcclxuICAgICAgICAgICAgbmV4dFVybCxcclxuICAgICAgICAgICAgdXJsOiBwcm9jZXNzLmVudi5fX05FWFRfTk9fTUlERExFV0FSRV9VUkxfTk9STUFMSVpFID8gdXJsIDogbmV4dFVybC50b1N0cmluZygpXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuICAgIFtTeW1ib2wuZm9yKFwiZWRnZS1ydW50aW1lLmluc3BlY3QuY3VzdG9tXCIpXSgpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBjb29raWVzOiB0aGlzLmNvb2tpZXMsXHJcbiAgICAgICAgICAgIGdlbzogdGhpcy5nZW8sXHJcbiAgICAgICAgICAgIGlwOiB0aGlzLmlwLFxyXG4gICAgICAgICAgICBuZXh0VXJsOiB0aGlzLm5leHRVcmwsXHJcbiAgICAgICAgICAgIHVybDogdGhpcy51cmwsXHJcbiAgICAgICAgICAgIC8vIHJlc3Qgb2YgcHJvcHMgY29tZSBmcm9tIFJlcXVlc3RcclxuICAgICAgICAgICAgYm9keVVzZWQ6IHRoaXMuYm9keVVzZWQsXHJcbiAgICAgICAgICAgIGNhY2hlOiB0aGlzLmNhY2hlLFxyXG4gICAgICAgICAgICBjcmVkZW50aWFsczogdGhpcy5jcmVkZW50aWFscyxcclxuICAgICAgICAgICAgZGVzdGluYXRpb246IHRoaXMuZGVzdGluYXRpb24sXHJcbiAgICAgICAgICAgIGhlYWRlcnM6IE9iamVjdC5mcm9tRW50cmllcyh0aGlzLmhlYWRlcnMpLFxyXG4gICAgICAgICAgICBpbnRlZ3JpdHk6IHRoaXMuaW50ZWdyaXR5LFxyXG4gICAgICAgICAgICBrZWVwYWxpdmU6IHRoaXMua2VlcGFsaXZlLFxyXG4gICAgICAgICAgICBtZXRob2Q6IHRoaXMubWV0aG9kLFxyXG4gICAgICAgICAgICBtb2RlOiB0aGlzLm1vZGUsXHJcbiAgICAgICAgICAgIHJlZGlyZWN0OiB0aGlzLnJlZGlyZWN0LFxyXG4gICAgICAgICAgICByZWZlcnJlcjogdGhpcy5yZWZlcnJlcixcclxuICAgICAgICAgICAgcmVmZXJyZXJQb2xpY3k6IHRoaXMucmVmZXJyZXJQb2xpY3ksXHJcbiAgICAgICAgICAgIHNpZ25hbDogdGhpcy5zaWduYWxcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG4gICAgZ2V0IGNvb2tpZXMoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXNbSU5URVJOQUxTXS5jb29raWVzO1xyXG4gICAgfVxyXG4gICAgZ2V0IGdlbygpIHtcclxuICAgICAgICByZXR1cm4gdGhpc1tJTlRFUk5BTFNdLmdlbztcclxuICAgIH1cclxuICAgIGdldCBpcCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpc1tJTlRFUk5BTFNdLmlwO1xyXG4gICAgfVxyXG4gICAgZ2V0IG5leHRVcmwoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXNbSU5URVJOQUxTXS5uZXh0VXJsO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICogQGRlcHJlY2F0ZWRcclxuICAgKiBgcGFnZWAgaGFzIGJlZW4gZGVwcmVjYXRlZCBpbiBmYXZvdXIgb2YgYFVSTFBhdHRlcm5gLlxyXG4gICAqIFJlYWQgbW9yZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvbWlkZGxld2FyZS1yZXF1ZXN0LXBhZ2VcclxuICAgKi8gZ2V0IHBhZ2UoKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IFJlbW92ZWRQYWdlRXJyb3IoKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAqIEBkZXByZWNhdGVkXHJcbiAgICogYHVhYCBoYXMgYmVlbiByZW1vdmVkIGluIGZhdm91ciBvZiBcXGB1c2VyQWdlbnRcXGAgZnVuY3Rpb24uXHJcbiAgICogUmVhZCBtb3JlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9taWRkbGV3YXJlLXBhcnNlLXVzZXItYWdlbnRcclxuICAgKi8gZ2V0IHVhKCkge1xyXG4gICAgICAgIHRocm93IG5ldyBSZW1vdmVkVUFFcnJvcigpO1xyXG4gICAgfVxyXG4gICAgZ2V0IHVybCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpc1tJTlRFUk5BTFNdLnVybDtcclxuICAgIH1cclxufVxyXG5cclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVxdWVzdC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/request.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/response.js":
/*!**************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/response.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NextResponse: () => (/* binding */ NextResponse)\n/* harmony export */ });\n/* harmony import */ var _web_spec_extension_cookies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cookies */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js\");\n/* harmony import */ var _next_url__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../next-url */ \"(middleware)/./node_modules/next/dist/esm/server/web/next-url.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ \"(middleware)/./node_modules/next/dist/esm/server/web/utils.js\");\n/* harmony import */ var _adapters_reflect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./adapters/reflect */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js\");\n\r\n\r\n\r\n\r\n\r\nconst INTERNALS = Symbol(\"internal response\");\r\nconst REDIRECTS = new Set([\r\n    301,\r\n    302,\r\n    303,\r\n    307,\r\n    308\r\n]);\r\nfunction handleMiddlewareField(init, headers) {\r\n    var _init_request;\r\n    if (init == null ? void 0 : (_init_request = init.request) == null ? void 0 : _init_request.headers) {\r\n        if (!(init.request.headers instanceof Headers)) {\r\n            throw new Error(\"request.headers must be an instance of Headers\");\r\n        }\r\n        const keys = [];\r\n        for (const [key, value] of init.request.headers){\r\n            headers.set(\"x-middleware-request-\" + key, value);\r\n            keys.push(key);\r\n        }\r\n        headers.set(\"x-middleware-override-headers\", keys.join(\",\"));\r\n    }\r\n}\r\n/**\r\n * This class extends the [Web `Response` API](https://developer.mozilla.org/docs/Web/API/Response) with additional convenience methods.\r\n *\r\n * Read more: [Next.js Docs: `NextResponse`](https://nextjs.org/docs/app/api-reference/functions/next-response)\r\n */ class NextResponse extends Response {\r\n    constructor(body, init = {}){\r\n        super(body, init);\r\n        const headers = this.headers;\r\n        const cookies = new _web_spec_extension_cookies__WEBPACK_IMPORTED_MODULE_0__.ResponseCookies(headers);\r\n        const cookiesProxy = new Proxy(cookies, {\r\n            get (target, prop, receiver) {\r\n                switch(prop){\r\n                    case \"delete\":\r\n                    case \"set\":\r\n                        {\r\n                            return (...args)=>{\r\n                                const result = Reflect.apply(target[prop], target, args);\r\n                                const newHeaders = new Headers(headers);\r\n                                if (result instanceof _web_spec_extension_cookies__WEBPACK_IMPORTED_MODULE_0__.ResponseCookies) {\r\n                                    headers.set(\"x-middleware-set-cookie\", result.getAll().map((cookie)=>(0,_web_spec_extension_cookies__WEBPACK_IMPORTED_MODULE_0__.stringifyCookie)(cookie)).join(\",\"));\r\n                                }\r\n                                handleMiddlewareField(init, newHeaders);\r\n                                return result;\r\n                            };\r\n                        }\r\n                    default:\r\n                        return _adapters_reflect__WEBPACK_IMPORTED_MODULE_3__.ReflectAdapter.get(target, prop, receiver);\r\n                }\r\n            }\r\n        });\r\n        this[INTERNALS] = {\r\n            cookies: cookiesProxy,\r\n            url: init.url ? new _next_url__WEBPACK_IMPORTED_MODULE_1__.NextURL(init.url, {\r\n                headers: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.toNodeOutgoingHttpHeaders)(headers),\r\n                nextConfig: init.nextConfig\r\n            }) : undefined\r\n        };\r\n    }\r\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\r\n        return {\r\n            cookies: this.cookies,\r\n            url: this.url,\r\n            // rest of props come from Response\r\n            body: this.body,\r\n            bodyUsed: this.bodyUsed,\r\n            headers: Object.fromEntries(this.headers),\r\n            ok: this.ok,\r\n            redirected: this.redirected,\r\n            status: this.status,\r\n            statusText: this.statusText,\r\n            type: this.type\r\n        };\r\n    }\r\n    get cookies() {\r\n        return this[INTERNALS].cookies;\r\n    }\r\n    static json(body, init) {\r\n        const response = Response.json(body, init);\r\n        return new NextResponse(response.body, response);\r\n    }\r\n    static redirect(url, init) {\r\n        const status = typeof init === \"number\" ? init : (init == null ? void 0 : init.status) ?? 307;\r\n        if (!REDIRECTS.has(status)) {\r\n            throw new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\r\n        }\r\n        const initObj = typeof init === \"object\" ? init : {};\r\n        const headers = new Headers(initObj == null ? void 0 : initObj.headers);\r\n        headers.set(\"Location\", (0,_utils__WEBPACK_IMPORTED_MODULE_2__.validateURL)(url));\r\n        return new NextResponse(null, {\r\n            ...initObj,\r\n            headers,\r\n            status\r\n        });\r\n    }\r\n    static rewrite(destination, init) {\r\n        const headers = new Headers(init == null ? void 0 : init.headers);\r\n        headers.set(\"x-middleware-rewrite\", (0,_utils__WEBPACK_IMPORTED_MODULE_2__.validateURL)(destination));\r\n        handleMiddlewareField(init, headers);\r\n        return new NextResponse(null, {\r\n            ...init,\r\n            headers\r\n        });\r\n    }\r\n    static next(init) {\r\n        const headers = new Headers(init == null ? void 0 : init.headers);\r\n        headers.set(\"x-middleware-next\", \"1\");\r\n        handleMiddlewareField(init, headers);\r\n        return new NextResponse(null, {\r\n            ...init,\r\n            headers\r\n        });\r\n    }\r\n}\r\n\r\n//# sourceMappingURL=response.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9yZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFtRTtBQUM3QjtBQUM0QjtBQUNkO0FBQ1I7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQVc7QUFDWCwrQkFBK0I7QUFDL0I7QUFDQTtBQUNBLDRCQUE0Qix3RUFBZTtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzREFBc0Qsd0VBQWU7QUFDckUseUdBQXlHLDRFQUFlO0FBQ3hIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQiw2REFBYztBQUM3QztBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxnQ0FBZ0MsOENBQU87QUFDdkMseUJBQXlCLGlFQUF5QjtBQUNsRDtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxtREFBVztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsbURBQVc7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zZXJ2ZXIvd2ViL3NwZWMtZXh0ZW5zaW9uL3Jlc3BvbnNlLmpzPzFmNWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3RyaW5naWZ5Q29va2llIH0gZnJvbSBcIi4uLy4uL3dlYi9zcGVjLWV4dGVuc2lvbi9jb29raWVzXCI7XHJcbmltcG9ydCB7IE5leHRVUkwgfSBmcm9tIFwiLi4vbmV4dC11cmxcIjtcclxuaW1wb3J0IHsgdG9Ob2RlT3V0Z29pbmdIdHRwSGVhZGVycywgdmFsaWRhdGVVUkwgfSBmcm9tIFwiLi4vdXRpbHNcIjtcclxuaW1wb3J0IHsgUmVmbGVjdEFkYXB0ZXIgfSBmcm9tIFwiLi9hZGFwdGVycy9yZWZsZWN0XCI7XHJcbmltcG9ydCB7IFJlc3BvbnNlQ29va2llcyB9IGZyb20gXCIuL2Nvb2tpZXNcIjtcclxuY29uc3QgSU5URVJOQUxTID0gU3ltYm9sKFwiaW50ZXJuYWwgcmVzcG9uc2VcIik7XHJcbmNvbnN0IFJFRElSRUNUUyA9IG5ldyBTZXQoW1xyXG4gICAgMzAxLFxyXG4gICAgMzAyLFxyXG4gICAgMzAzLFxyXG4gICAgMzA3LFxyXG4gICAgMzA4XHJcbl0pO1xyXG5mdW5jdGlvbiBoYW5kbGVNaWRkbGV3YXJlRmllbGQoaW5pdCwgaGVhZGVycykge1xyXG4gICAgdmFyIF9pbml0X3JlcXVlc3Q7XHJcbiAgICBpZiAoaW5pdCA9PSBudWxsID8gdm9pZCAwIDogKF9pbml0X3JlcXVlc3QgPSBpbml0LnJlcXVlc3QpID09IG51bGwgPyB2b2lkIDAgOiBfaW5pdF9yZXF1ZXN0LmhlYWRlcnMpIHtcclxuICAgICAgICBpZiAoIShpbml0LnJlcXVlc3QuaGVhZGVycyBpbnN0YW5jZW9mIEhlYWRlcnMpKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcInJlcXVlc3QuaGVhZGVycyBtdXN0IGJlIGFuIGluc3RhbmNlIG9mIEhlYWRlcnNcIik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IGtleXMgPSBbXTtcclxuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBpbml0LnJlcXVlc3QuaGVhZGVycyl7XHJcbiAgICAgICAgICAgIGhlYWRlcnMuc2V0KFwieC1taWRkbGV3YXJlLXJlcXVlc3QtXCIgKyBrZXksIHZhbHVlKTtcclxuICAgICAgICAgICAga2V5cy5wdXNoKGtleSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGhlYWRlcnMuc2V0KFwieC1taWRkbGV3YXJlLW92ZXJyaWRlLWhlYWRlcnNcIiwga2V5cy5qb2luKFwiLFwiKSk7XHJcbiAgICB9XHJcbn1cclxuLyoqXHJcbiAqIFRoaXMgY2xhc3MgZXh0ZW5kcyB0aGUgW1dlYiBgUmVzcG9uc2VgIEFQSV0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQVBJL1Jlc3BvbnNlKSB3aXRoIGFkZGl0aW9uYWwgY29udmVuaWVuY2UgbWV0aG9kcy5cclxuICpcclxuICogUmVhZCBtb3JlOiBbTmV4dC5qcyBEb2NzOiBgTmV4dFJlc3BvbnNlYF0oaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvYXBwL2FwaS1yZWZlcmVuY2UvZnVuY3Rpb25zL25leHQtcmVzcG9uc2UpXHJcbiAqLyBleHBvcnQgY2xhc3MgTmV4dFJlc3BvbnNlIGV4dGVuZHMgUmVzcG9uc2Uge1xyXG4gICAgY29uc3RydWN0b3IoYm9keSwgaW5pdCA9IHt9KXtcclxuICAgICAgICBzdXBlcihib2R5LCBpbml0KTtcclxuICAgICAgICBjb25zdCBoZWFkZXJzID0gdGhpcy5oZWFkZXJzO1xyXG4gICAgICAgIGNvbnN0IGNvb2tpZXMgPSBuZXcgUmVzcG9uc2VDb29raWVzKGhlYWRlcnMpO1xyXG4gICAgICAgIGNvbnN0IGNvb2tpZXNQcm94eSA9IG5ldyBQcm94eShjb29raWVzLCB7XHJcbiAgICAgICAgICAgIGdldCAodGFyZ2V0LCBwcm9wLCByZWNlaXZlcikge1xyXG4gICAgICAgICAgICAgICAgc3dpdGNoKHByb3Ape1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgXCJkZWxldGVcIjpcclxuICAgICAgICAgICAgICAgICAgICBjYXNlIFwic2V0XCI6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoLi4uYXJncyk9PntcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSBSZWZsZWN0LmFwcGx5KHRhcmdldFtwcm9wXSwgdGFyZ2V0LCBhcmdzKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBuZXdIZWFkZXJzID0gbmV3IEhlYWRlcnMoaGVhZGVycyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3VsdCBpbnN0YW5jZW9mIFJlc3BvbnNlQ29va2llcykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJzLnNldChcIngtbWlkZGxld2FyZS1zZXQtY29va2llXCIsIHJlc3VsdC5nZXRBbGwoKS5tYXAoKGNvb2tpZSk9PnN0cmluZ2lmeUNvb2tpZShjb29raWUpKS5qb2luKFwiLFwiKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhhbmRsZU1pZGRsZXdhcmVGaWVsZChpbml0LCBuZXdIZWFkZXJzKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBSZWZsZWN0QWRhcHRlci5nZXQodGFyZ2V0LCBwcm9wLCByZWNlaXZlcik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzW0lOVEVSTkFMU10gPSB7XHJcbiAgICAgICAgICAgIGNvb2tpZXM6IGNvb2tpZXNQcm94eSxcclxuICAgICAgICAgICAgdXJsOiBpbml0LnVybCA/IG5ldyBOZXh0VVJMKGluaXQudXJsLCB7XHJcbiAgICAgICAgICAgICAgICBoZWFkZXJzOiB0b05vZGVPdXRnb2luZ0h0dHBIZWFkZXJzKGhlYWRlcnMpLFxyXG4gICAgICAgICAgICAgICAgbmV4dENvbmZpZzogaW5pdC5uZXh0Q29uZmlnXHJcbiAgICAgICAgICAgIH0pIDogdW5kZWZpbmVkXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuICAgIFtTeW1ib2wuZm9yKFwiZWRnZS1ydW50aW1lLmluc3BlY3QuY3VzdG9tXCIpXSgpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBjb29raWVzOiB0aGlzLmNvb2tpZXMsXHJcbiAgICAgICAgICAgIHVybDogdGhpcy51cmwsXHJcbiAgICAgICAgICAgIC8vIHJlc3Qgb2YgcHJvcHMgY29tZSBmcm9tIFJlc3BvbnNlXHJcbiAgICAgICAgICAgIGJvZHk6IHRoaXMuYm9keSxcclxuICAgICAgICAgICAgYm9keVVzZWQ6IHRoaXMuYm9keVVzZWQsXHJcbiAgICAgICAgICAgIGhlYWRlcnM6IE9iamVjdC5mcm9tRW50cmllcyh0aGlzLmhlYWRlcnMpLFxyXG4gICAgICAgICAgICBvazogdGhpcy5vayxcclxuICAgICAgICAgICAgcmVkaXJlY3RlZDogdGhpcy5yZWRpcmVjdGVkLFxyXG4gICAgICAgICAgICBzdGF0dXM6IHRoaXMuc3RhdHVzLFxyXG4gICAgICAgICAgICBzdGF0dXNUZXh0OiB0aGlzLnN0YXR1c1RleHQsXHJcbiAgICAgICAgICAgIHR5cGU6IHRoaXMudHlwZVxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbiAgICBnZXQgY29va2llcygpIHtcclxuICAgICAgICByZXR1cm4gdGhpc1tJTlRFUk5BTFNdLmNvb2tpZXM7XHJcbiAgICB9XHJcbiAgICBzdGF0aWMganNvbihib2R5LCBpbml0KSB7XHJcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBSZXNwb25zZS5qc29uKGJvZHksIGluaXQpO1xyXG4gICAgICAgIHJldHVybiBuZXcgTmV4dFJlc3BvbnNlKHJlc3BvbnNlLmJvZHksIHJlc3BvbnNlKTtcclxuICAgIH1cclxuICAgIHN0YXRpYyByZWRpcmVjdCh1cmwsIGluaXQpIHtcclxuICAgICAgICBjb25zdCBzdGF0dXMgPSB0eXBlb2YgaW5pdCA9PT0gXCJudW1iZXJcIiA/IGluaXQgOiAoaW5pdCA9PSBudWxsID8gdm9pZCAwIDogaW5pdC5zdGF0dXMpID8/IDMwNztcclxuICAgICAgICBpZiAoIVJFRElSRUNUUy5oYXMoc3RhdHVzKSkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignRmFpbGVkIHRvIGV4ZWN1dGUgXCJyZWRpcmVjdFwiIG9uIFwicmVzcG9uc2VcIjogSW52YWxpZCBzdGF0dXMgY29kZScpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zdCBpbml0T2JqID0gdHlwZW9mIGluaXQgPT09IFwib2JqZWN0XCIgPyBpbml0IDoge307XHJcbiAgICAgICAgY29uc3QgaGVhZGVycyA9IG5ldyBIZWFkZXJzKGluaXRPYmogPT0gbnVsbCA/IHZvaWQgMCA6IGluaXRPYmouaGVhZGVycyk7XHJcbiAgICAgICAgaGVhZGVycy5zZXQoXCJMb2NhdGlvblwiLCB2YWxpZGF0ZVVSTCh1cmwpKTtcclxuICAgICAgICByZXR1cm4gbmV3IE5leHRSZXNwb25zZShudWxsLCB7XHJcbiAgICAgICAgICAgIC4uLmluaXRPYmosXHJcbiAgICAgICAgICAgIGhlYWRlcnMsXHJcbiAgICAgICAgICAgIHN0YXR1c1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgc3RhdGljIHJld3JpdGUoZGVzdGluYXRpb24sIGluaXQpIHtcclxuICAgICAgICBjb25zdCBoZWFkZXJzID0gbmV3IEhlYWRlcnMoaW5pdCA9PSBudWxsID8gdm9pZCAwIDogaW5pdC5oZWFkZXJzKTtcclxuICAgICAgICBoZWFkZXJzLnNldChcIngtbWlkZGxld2FyZS1yZXdyaXRlXCIsIHZhbGlkYXRlVVJMKGRlc3RpbmF0aW9uKSk7XHJcbiAgICAgICAgaGFuZGxlTWlkZGxld2FyZUZpZWxkKGluaXQsIGhlYWRlcnMpO1xyXG4gICAgICAgIHJldHVybiBuZXcgTmV4dFJlc3BvbnNlKG51bGwsIHtcclxuICAgICAgICAgICAgLi4uaW5pdCxcclxuICAgICAgICAgICAgaGVhZGVyc1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgc3RhdGljIG5leHQoaW5pdCkge1xyXG4gICAgICAgIGNvbnN0IGhlYWRlcnMgPSBuZXcgSGVhZGVycyhpbml0ID09IG51bGwgPyB2b2lkIDAgOiBpbml0LmhlYWRlcnMpO1xyXG4gICAgICAgIGhlYWRlcnMuc2V0KFwieC1taWRkbGV3YXJlLW5leHRcIiwgXCIxXCIpO1xyXG4gICAgICAgIGhhbmRsZU1pZGRsZXdhcmVGaWVsZChpbml0LCBoZWFkZXJzKTtcclxuICAgICAgICByZXR1cm4gbmV3IE5leHRSZXNwb25zZShudWxsLCB7XHJcbiAgICAgICAgICAgIC4uLmluaXQsXHJcbiAgICAgICAgICAgIGhlYWRlcnNcclxuICAgICAgICB9KTtcclxuICAgIH1cclxufVxyXG5cclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVzcG9uc2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/response.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/url-pattern.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/url-pattern.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   URLPattern: () => (/* binding */ GlobalURLPattern)\n/* harmony export */ });\nconst GlobalURLPattern = // @ts-expect-error: URLPattern is not available in Node.js\r\ntypeof URLPattern === \"undefined\" ? undefined : URLPattern;\r\n\r\n\r\n//# sourceMappingURL=url-pattern.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi91cmwtcGF0dGVybi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUMwQztBQUMxQztBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vdXJsLXBhdHRlcm4uanM/MGE4OCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBHbG9iYWxVUkxQYXR0ZXJuID0gLy8gQHRzLWV4cGVjdC1lcnJvcjogVVJMUGF0dGVybiBpcyBub3QgYXZhaWxhYmxlIGluIE5vZGUuanNcclxudHlwZW9mIFVSTFBhdHRlcm4gPT09IFwidW5kZWZpbmVkXCIgPyB1bmRlZmluZWQgOiBVUkxQYXR0ZXJuO1xyXG5leHBvcnQgeyBHbG9iYWxVUkxQYXR0ZXJuIGFzIFVSTFBhdHRlcm4gfTtcclxuXHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVybC1wYXR0ZXJuLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/url-pattern.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/user-agent.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/user-agent.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isBot: () => (/* binding */ isBot),\n/* harmony export */   userAgent: () => (/* binding */ userAgent),\n/* harmony export */   userAgentFromString: () => (/* binding */ userAgentFromString)\n/* harmony export */ });\n/* harmony import */ var next_dist_compiled_ua_parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/compiled/ua-parser-js */ \"(middleware)/./node_modules/next/dist/compiled/ua-parser-js/ua-parser.js\");\n/* harmony import */ var next_dist_compiled_ua_parser_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_compiled_ua_parser_js__WEBPACK_IMPORTED_MODULE_0__);\n\r\nfunction isBot(input) {\r\n    return /Googlebot|Mediapartners-Google|AdsBot-Google|googleweblight|Storebot-Google|Google-PageRenderer|Google-InspectionTool|Bingbot|BingPreview|Slurp|DuckDuckBot|baiduspider|yandex|sogou|LinkedInBot|bitlybot|tumblr|vkShare|quora link preview|facebookexternalhit|facebookcatalog|Twitterbot|applebot|redditbot|Slackbot|Discordbot|WhatsApp|SkypeUriPreview|ia_archiver/i.test(input);\r\n}\r\nfunction userAgentFromString(input) {\r\n    return {\r\n        ...next_dist_compiled_ua_parser_js__WEBPACK_IMPORTED_MODULE_0___default()(input),\r\n        isBot: input === undefined ? false : isBot(input)\r\n    };\r\n}\r\nfunction userAgent({ headers }) {\r\n    return userAgentFromString(headers.get(\"user-agent\") || undefined);\r\n}\r\n\r\n//# sourceMappingURL=user-agent.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi91c2VyLWFnZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXNEO0FBQy9DO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQSxXQUFXLHNFQUFPO0FBQ2xCO0FBQ0E7QUFDQTtBQUNPLHFCQUFxQixTQUFTO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vdXNlci1hZ2VudC5qcz9iZjUxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBwYXJzZXVhIGZyb20gXCJuZXh0L2Rpc3QvY29tcGlsZWQvdWEtcGFyc2VyLWpzXCI7XHJcbmV4cG9ydCBmdW5jdGlvbiBpc0JvdChpbnB1dCkge1xyXG4gICAgcmV0dXJuIC9Hb29nbGVib3R8TWVkaWFwYXJ0bmVycy1Hb29nbGV8QWRzQm90LUdvb2dsZXxnb29nbGV3ZWJsaWdodHxTdG9yZWJvdC1Hb29nbGV8R29vZ2xlLVBhZ2VSZW5kZXJlcnxHb29nbGUtSW5zcGVjdGlvblRvb2x8QmluZ2JvdHxCaW5nUHJldmlld3xTbHVycHxEdWNrRHVja0JvdHxiYWlkdXNwaWRlcnx5YW5kZXh8c29nb3V8TGlua2VkSW5Cb3R8Yml0bHlib3R8dHVtYmxyfHZrU2hhcmV8cXVvcmEgbGluayBwcmV2aWV3fGZhY2Vib29rZXh0ZXJuYWxoaXR8ZmFjZWJvb2tjYXRhbG9nfFR3aXR0ZXJib3R8YXBwbGVib3R8cmVkZGl0Ym90fFNsYWNrYm90fERpc2NvcmRib3R8V2hhdHNBcHB8U2t5cGVVcmlQcmV2aWV3fGlhX2FyY2hpdmVyL2kudGVzdChpbnB1dCk7XHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIHVzZXJBZ2VudEZyb21TdHJpbmcoaW5wdXQpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgLi4ucGFyc2V1YShpbnB1dCksXHJcbiAgICAgICAgaXNCb3Q6IGlucHV0ID09PSB1bmRlZmluZWQgPyBmYWxzZSA6IGlzQm90KGlucHV0KVxyXG4gICAgfTtcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gdXNlckFnZW50KHsgaGVhZGVycyB9KSB7XHJcbiAgICByZXR1cm4gdXNlckFnZW50RnJvbVN0cmluZyhoZWFkZXJzLmdldChcInVzZXItYWdlbnRcIikgfHwgdW5kZWZpbmVkKTtcclxufVxyXG5cclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXNlci1hZ2VudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/user-agent.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/utils.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/utils.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromNodeOutgoingHttpHeaders: () => (/* binding */ fromNodeOutgoingHttpHeaders),\n/* harmony export */   normalizeNextQueryParam: () => (/* binding */ normalizeNextQueryParam),\n/* harmony export */   splitCookiesString: () => (/* binding */ splitCookiesString),\n/* harmony export */   toNodeOutgoingHttpHeaders: () => (/* binding */ toNodeOutgoingHttpHeaders),\n/* harmony export */   validateURL: () => (/* binding */ validateURL)\n/* harmony export */ });\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/constants */ \"(middleware)/./node_modules/next/dist/esm/lib/constants.js\");\n\r\n/**\r\n * Converts a Node.js IncomingHttpHeaders object to a Headers object. Any\r\n * headers with multiple values will be joined with a comma and space. Any\r\n * headers that have an undefined value will be ignored and others will be\r\n * coerced to strings.\r\n *\r\n * @param nodeHeaders the headers object to convert\r\n * @returns the converted headers object\r\n */ function fromNodeOutgoingHttpHeaders(nodeHeaders) {\r\n    const headers = new Headers();\r\n    for (let [key, value] of Object.entries(nodeHeaders)){\r\n        const values = Array.isArray(value) ? value : [\r\n            value\r\n        ];\r\n        for (let v of values){\r\n            if (typeof v === \"undefined\") continue;\r\n            if (typeof v === \"number\") {\r\n                v = v.toString();\r\n            }\r\n            headers.append(key, v);\r\n        }\r\n    }\r\n    return headers;\r\n}\r\n/*\r\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\r\n  that are within a single set-cookie field-value, such as in the Expires portion.\r\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\r\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\r\n  React Native's fetch does this for *every* header, including set-cookie.\r\n  \r\n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\r\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\r\n*/ function splitCookiesString(cookiesString) {\r\n    var cookiesStrings = [];\r\n    var pos = 0;\r\n    var start;\r\n    var ch;\r\n    var lastComma;\r\n    var nextStart;\r\n    var cookiesSeparatorFound;\r\n    function skipWhitespace() {\r\n        while(pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))){\r\n            pos += 1;\r\n        }\r\n        return pos < cookiesString.length;\r\n    }\r\n    function notSpecialChar() {\r\n        ch = cookiesString.charAt(pos);\r\n        return ch !== \"=\" && ch !== \";\" && ch !== \",\";\r\n    }\r\n    while(pos < cookiesString.length){\r\n        start = pos;\r\n        cookiesSeparatorFound = false;\r\n        while(skipWhitespace()){\r\n            ch = cookiesString.charAt(pos);\r\n            if (ch === \",\") {\r\n                // ',' is a cookie separator if we have later first '=', not ';' or ','\r\n                lastComma = pos;\r\n                pos += 1;\r\n                skipWhitespace();\r\n                nextStart = pos;\r\n                while(pos < cookiesString.length && notSpecialChar()){\r\n                    pos += 1;\r\n                }\r\n                // currently special character\r\n                if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\r\n                    // we found cookies separator\r\n                    cookiesSeparatorFound = true;\r\n                    // pos is inside the next cookie, so back up and return it.\r\n                    pos = nextStart;\r\n                    cookiesStrings.push(cookiesString.substring(start, lastComma));\r\n                    start = pos;\r\n                } else {\r\n                    // in param ',' or param separator ';',\r\n                    // we continue from that comma\r\n                    pos = lastComma + 1;\r\n                }\r\n            } else {\r\n                pos += 1;\r\n            }\r\n        }\r\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) {\r\n            cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\r\n        }\r\n    }\r\n    return cookiesStrings;\r\n}\r\n/**\r\n * Converts a Headers object to a Node.js OutgoingHttpHeaders object. This is\r\n * required to support the set-cookie header, which may have multiple values.\r\n *\r\n * @param headers the headers object to convert\r\n * @returns the converted headers object\r\n */ function toNodeOutgoingHttpHeaders(headers) {\r\n    const nodeHeaders = {};\r\n    const cookies = [];\r\n    if (headers) {\r\n        for (const [key, value] of headers.entries()){\r\n            if (key.toLowerCase() === \"set-cookie\") {\r\n                // We may have gotten a comma joined string of cookies, or multiple\r\n                // set-cookie headers. We need to merge them into one header array\r\n                // to represent all the cookies.\r\n                cookies.push(...splitCookiesString(value));\r\n                nodeHeaders[key] = cookies.length === 1 ? cookies[0] : cookies;\r\n            } else {\r\n                nodeHeaders[key] = value;\r\n            }\r\n        }\r\n    }\r\n    return nodeHeaders;\r\n}\r\n/**\r\n * Validate the correctness of a user-provided URL.\r\n */ function validateURL(url) {\r\n    try {\r\n        return String(new URL(String(url)));\r\n    } catch (error) {\r\n        throw new Error(`URL is malformed \"${String(url)}\". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`, {\r\n            cause: error\r\n        });\r\n    }\r\n}\r\n/**\r\n * Normalizes `nxtP` and `nxtI` query param values to remove the prefix.\r\n * This function does not mutate the input key; it calls the provided function\r\n * with the normalized key.\r\n */ function normalizeNextQueryParam(key, onKeyNormalized) {\r\n    const prefixes = [\r\n        _lib_constants__WEBPACK_IMPORTED_MODULE_0__.NEXT_QUERY_PARAM_PREFIX,\r\n        _lib_constants__WEBPACK_IMPORTED_MODULE_0__.NEXT_INTERCEPTION_MARKER_PREFIX\r\n    ];\r\n    for (const prefix of prefixes){\r\n        if (key !== prefix && key.startsWith(prefix)) {\r\n            const normalizedKey = key.substring(prefix.length);\r\n            onKeyNormalized(normalizedKey);\r\n        }\r\n    }\r\n}\r\n\r\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/utils.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/get-hostname.js":
/*!***************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/get-hostname.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getHostname: () => (/* binding */ getHostname)\n/* harmony export */ });\n/**\r\n * Takes an object with a hostname property (like a parsed URL) and some\r\n * headers that may contain Host and returns the preferred hostname.\r\n * @param parsed An object containing a hostname property.\r\n * @param headers A dictionary with headers containing a `host`.\r\n */ function getHostname(parsed, headers) {\n    // Get the hostname from the headers if it exists, otherwise use the parsed\n    // hostname.\n    let hostname;\n    if ((headers == null ? void 0 : headers.host) && !Array.isArray(headers.host)) {\n        hostname = headers.host.toString().split(\":\", 1)[0];\n    } else if (parsed.hostname) {\n        hostname = parsed.hostname;\n    } else return;\n    return hostname.toLowerCase();\n} //# sourceMappingURL=get-hostname.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9nZXQtaG9zdG5hbWUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUVBOzs7OztDQUtDLEdBQ00sU0FBU0EsWUFDZEMsTUFBb0MsRUFDcENDLE9BQTZCO0lBRTdCLDJFQUEyRTtJQUMzRSxZQUFZO0lBQ1osSUFBSUM7SUFDSixJQUFJRCxDQUFBQSxXQUFBQSxPQUFBQSxLQUFBQSxJQUFBQSxRQUFTRSxJQUFJLEtBQUksQ0FBQ0MsTUFBTUMsT0FBTyxDQUFDSixRQUFRRSxJQUFJLEdBQUc7UUFDakRELFdBQVdELFFBQVFFLElBQUksQ0FBQ0csUUFBUSxHQUFHQyxLQUFLLENBQUMsS0FBSyxFQUFFLENBQUMsRUFBRTtJQUNyRCxPQUFPLElBQUlQLE9BQU9FLFFBQVEsRUFBRTtRQUMxQkEsV0FBV0YsT0FBT0UsUUFBUTtJQUM1QixPQUFPO0lBRVAsT0FBT0EsU0FBU00sV0FBVztBQUM3QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vLi4vc3JjL3NoYXJlZC9saWIvZ2V0LWhvc3RuYW1lLnRzPzMwMmUiXSwibmFtZXMiOlsiZ2V0SG9zdG5hbWUiLCJwYXJzZWQiLCJoZWFkZXJzIiwiaG9zdG5hbWUiLCJob3N0IiwiQXJyYXkiLCJpc0FycmF5IiwidG9TdHJpbmciLCJzcGxpdCIsInRvTG93ZXJDYXNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/get-hostname.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/i18n/detect-domain-locale.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/i18n/detect-domain-locale.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   detectDomainLocale: () => (/* binding */ detectDomainLocale)\n/* harmony export */ });\nfunction detectDomainLocale(domainItems, hostname, detectedLocale) {\n    if (!domainItems) return;\n    if (detectedLocale) {\n        detectedLocale = detectedLocale.toLowerCase();\n    }\n    for (const item of domainItems){\n        var _item_domain, _item_locales;\n        // remove port if present\n        const domainHostname = (_item_domain = item.domain) == null ? void 0 : _item_domain.split(\":\", 1)[0].toLowerCase();\n        if (hostname === domainHostname || detectedLocale === item.defaultLocale.toLowerCase() || ((_item_locales = item.locales) == null ? void 0 : _item_locales.some((locale)=>locale.toLowerCase() === detectedLocale))) {\n            return item;\n        }\n    }\n} //# sourceMappingURL=detect-domain-locale.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9pMThuL2RldGVjdC1kb21haW4tbG9jYWxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFFTyxTQUFTQSxtQkFDZEMsV0FBNEIsRUFDNUJDLFFBQWlCLEVBQ2pCQyxjQUF1QjtJQUV2QixJQUFJLENBQUNGLGFBQWE7SUFFbEIsSUFBSUUsZ0JBQWdCO1FBQ2xCQSxpQkFBaUJBLGVBQWVDLFdBQVc7SUFDN0M7SUFFQSxLQUFLLE1BQU1DLFFBQVFKLFlBQWE7WUFFUEksY0FJckJBO1FBTEYseUJBQXlCO1FBQ3pCLE1BQU1DLGlCQUFBQSxDQUFpQkQsZUFBQUEsS0FBS0UsTUFBTSxxQkFBWEYsYUFBYUcsS0FBSyxDQUFDLEtBQUssRUFBRSxDQUFDLEVBQUUsQ0FBQ0osV0FBVztRQUNoRSxJQUNFRixhQUFhSSxrQkFDYkgsbUJBQW1CRSxLQUFLSSxhQUFhLENBQUNMLFdBQVcsUUFDakRDLGdCQUFBQSxLQUFLSyxPQUFPLHFCQUFaTCxjQUFjTSxJQUFJLENBQUMsQ0FBQ0MsU0FBV0EsT0FBT1IsV0FBVyxPQUFPRCxlQUFBQSxHQUN4RDtZQUNBLE9BQU9FO1FBQ1Q7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi8uLi8uLi9zcmMvc2hhcmVkL2xpYi9pMThuL2RldGVjdC1kb21haW4tbG9jYWxlLnRzPzdkZWIiXSwibmFtZXMiOlsiZGV0ZWN0RG9tYWluTG9jYWxlIiwiZG9tYWluSXRlbXMiLCJob3N0bmFtZSIsImRldGVjdGVkTG9jYWxlIiwidG9Mb3dlckNhc2UiLCJpdGVtIiwiZG9tYWluSG9zdG5hbWUiLCJkb21haW4iLCJzcGxpdCIsImRlZmF1bHRMb2NhbGUiLCJsb2NhbGVzIiwic29tZSIsImxvY2FsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/i18n/detect-domain-locale.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/i18n/normalize-locale-path.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/i18n/normalize-locale-path.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normalizeLocalePath: () => (/* binding */ normalizeLocalePath)\n/* harmony export */ });\n/**\r\n * For a pathname that may include a locale from a list of locales, it\r\n * removes the locale from the pathname returning it alongside with the\r\n * detected locale.\r\n *\r\n * @param pathname A pathname that may include a locale.\r\n * @param locales A list of locales.\r\n * @returns The detected locale and pathname without locale\r\n */ function normalizeLocalePath(pathname, locales) {\n    let detectedLocale;\n    // first item will be empty string from splitting at first char\n    const pathnameParts = pathname.split(\"/\");\n    (locales || []).some((locale)=>{\n        if (pathnameParts[1] && pathnameParts[1].toLowerCase() === locale.toLowerCase()) {\n            detectedLocale = locale;\n            pathnameParts.splice(1, 1);\n            pathname = pathnameParts.join(\"/\") || \"/\";\n            return true;\n        }\n        return false;\n    });\n    return {\n        pathname,\n        detectedLocale\n    };\n} //# sourceMappingURL=normalize-locale-path.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9pMThuL25vcm1hbGl6ZS1sb2NhbGUtcGF0aC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBS0E7Ozs7Ozs7O0NBUUMsR0FDTSxTQUFTQSxvQkFDZEMsUUFBZ0IsRUFDaEJDLE9BQWtCO0lBRWxCLElBQUlDO0lBQ0osK0RBQStEO0lBQy9ELE1BQU1DLGdCQUFnQkgsU0FBU0ksS0FBSyxDQUFDO0lBRW5DSCxDQUFBQSxXQUFXLEVBQUUsRUFBRUksSUFBSSxDQUFDLENBQUNDO1FBQ3JCLElBQ0VILGFBQWEsQ0FBQyxFQUFFLElBQ2hCQSxhQUFhLENBQUMsRUFBRSxDQUFDSSxXQUFXLE9BQU9ELE9BQU9DLFdBQVcsSUFDckQ7WUFDQUwsaUJBQWlCSTtZQUNqQkgsY0FBY0ssTUFBTSxDQUFDLEdBQUc7WUFDeEJSLFdBQVdHLGNBQWNNLElBQUksQ0FBQyxRQUFRO1lBQ3RDLE9BQU87UUFDVDtRQUNBLE9BQU87SUFDVDtJQUVBLE9BQU87UUFDTFQ7UUFDQUU7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi8uLi8uLi9zcmMvc2hhcmVkL2xpYi9pMThuL25vcm1hbGl6ZS1sb2NhbGUtcGF0aC50cz8wYjczIl0sIm5hbWVzIjpbIm5vcm1hbGl6ZUxvY2FsZVBhdGgiLCJwYXRobmFtZSIsImxvY2FsZXMiLCJkZXRlY3RlZExvY2FsZSIsInBhdGhuYW1lUGFydHMiLCJzcGxpdCIsInNvbWUiLCJsb2NhbGUiLCJ0b0xvd2VyQ2FzZSIsInNwbGljZSIsImpvaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/i18n/normalize-locale-path.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/page-path/ensure-leading-slash.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/page-path/ensure-leading-slash.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ensureLeadingSlash: () => (/* binding */ ensureLeadingSlash)\n/* harmony export */ });\n/**\r\n * For a given page path, this function ensures that there is a leading slash.\r\n * If there is not a leading slash, one is added, otherwise it is noop.\r\n */ function ensureLeadingSlash(path) {\n    return path.startsWith(\"/\") ? path : \"/\" + path;\n} //# sourceMappingURL=ensure-leading-slash.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9wYWdlLXBhdGgvZW5zdXJlLWxlYWRpbmctc2xhc2guanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7Q0FHQyxHQUNNLFNBQVNBLG1CQUFtQkMsSUFBWTtJQUM3QyxPQUFPQSxLQUFLQyxVQUFVLENBQUMsT0FBT0QsT0FBTyxNQUFJQTtBQUMzQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vLi4vLi4vc3JjL3NoYXJlZC9saWIvcGFnZS1wYXRoL2Vuc3VyZS1sZWFkaW5nLXNsYXNoLnRzPzE4ZjIiXSwibmFtZXMiOlsiZW5zdXJlTGVhZGluZ1NsYXNoIiwicGF0aCIsInN0YXJ0c1dpdGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/page-path/ensure-leading-slash.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-locale.js":
/*!**************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/add-locale.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addLocale: () => (/* binding */ addLocale)\n/* harmony export */ });\n/* harmony import */ var _add_path_prefix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./add-path-prefix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js\");\n/* harmony import */ var _path_has_prefix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./path-has-prefix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js\");\n\n\n/**\r\n * For a given path and a locale, if the locale is given, it will prefix the\r\n * locale. The path shouldn't be an API path. If a default locale is given the\r\n * prefix will be omitted if the locale is already the default locale.\r\n */ function addLocale(path, locale, defaultLocale, ignorePrefix) {\n    // If no locale was given or the locale is the default locale, we don't need\n    // to prefix the path.\n    if (!locale || locale === defaultLocale) return path;\n    const lower = path.toLowerCase();\n    // If the path is an API path or the path already has the locale prefix, we\n    // don't need to prefix the path.\n    if (!ignorePrefix) {\n        if ((0,_path_has_prefix__WEBPACK_IMPORTED_MODULE_1__.pathHasPrefix)(lower, \"/api\")) return path;\n        if ((0,_path_has_prefix__WEBPACK_IMPORTED_MODULE_1__.pathHasPrefix)(lower, \"/\" + locale.toLowerCase())) return path;\n    }\n    // Add the locale prefix to the path.\n    return (0,_add_path_prefix__WEBPACK_IMPORTED_MODULE_0__.addPathPrefix)(path, \"/\" + locale);\n} //# sourceMappingURL=add-locale.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvYWRkLWxvY2FsZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBaUQ7QUFDQTtBQUVqRDs7OztDQUlDLEdBQ00sU0FBU0UsVUFDZEMsSUFBWSxFQUNaQyxNQUF1QixFQUN2QkMsYUFBc0IsRUFDdEJDLFlBQXNCO0lBRXRCLDRFQUE0RTtJQUM1RSxzQkFBc0I7SUFDdEIsSUFBSSxDQUFDRixVQUFVQSxXQUFXQyxlQUFlLE9BQU9GO0lBRWhELE1BQU1JLFFBQVFKLEtBQUtLLFdBQVc7SUFFOUIsMkVBQTJFO0lBQzNFLGlDQUFpQztJQUNqQyxJQUFJLENBQUNGLGNBQWM7UUFDakIsSUFBSUwsK0RBQUFBLENBQWNNLE9BQU8sU0FBUyxPQUFPSjtRQUN6QyxJQUFJRiwrREFBQUEsQ0FBY00sT0FBTyxNQUFJSCxPQUFPSSxXQUFXLEtBQU8sT0FBT0w7SUFDL0Q7SUFFQSxxQ0FBcUM7SUFDckMsT0FBT0gsK0RBQUFBLENBQWNHLE1BQU0sTUFBSUM7QUFDakMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uLy4uL3NyYy9zaGFyZWQvbGliL3JvdXRlci91dGlscy9hZGQtbG9jYWxlLnRzPzNjNTciXSwibmFtZXMiOlsiYWRkUGF0aFByZWZpeCIsInBhdGhIYXNQcmVmaXgiLCJhZGRMb2NhbGUiLCJwYXRoIiwibG9jYWxlIiwiZGVmYXVsdExvY2FsZSIsImlnbm9yZVByZWZpeCIsImxvd2VyIiwidG9Mb3dlckNhc2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-locale.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addPathPrefix: () => (/* binding */ addPathPrefix)\n/* harmony export */ });\n/* harmony import */ var _parse_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse-path */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js\");\n\n/**\r\n * Adds the provided prefix to the given path. It first ensures that the path\r\n * is indeed starting with a slash.\r\n */ function addPathPrefix(path, prefix) {\n    if (!path.startsWith(\"/\") || !prefix) {\n        return path;\n    }\n    const { pathname, query, hash } = (0,_parse_path__WEBPACK_IMPORTED_MODULE_0__.parsePath)(path);\n    return \"\" + prefix + pathname + query + hash;\n} //# sourceMappingURL=add-path-prefix.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvYWRkLXBhdGgtcHJlZml4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXdDO0FBRXhDOzs7Q0FHQyxHQUNNLFNBQVNDLGNBQWNDLElBQVksRUFBRUMsTUFBZTtJQUN6RCxJQUFJLENBQUNELEtBQUtFLFVBQVUsQ0FBQyxRQUFRLENBQUNELFFBQVE7UUFDcEMsT0FBT0Q7SUFDVDtJQUVBLE1BQU0sRUFBRUcsUUFBUSxFQUFFQyxLQUFLLEVBQUVDLElBQUksRUFBRSxHQUFHUCxzREFBQUEsQ0FBVUU7SUFDNUMsT0FBTyxLQUFHQyxTQUFTRSxXQUFXQyxRQUFRQztBQUN4QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vLi4vLi4vc3JjL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2FkZC1wYXRoLXByZWZpeC50cz9lMjBkIl0sIm5hbWVzIjpbInBhcnNlUGF0aCIsImFkZFBhdGhQcmVmaXgiLCJwYXRoIiwicHJlZml4Iiwic3RhcnRzV2l0aCIsInBhdGhuYW1lIiwicXVlcnkiLCJoYXNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-suffix.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/add-path-suffix.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addPathSuffix: () => (/* binding */ addPathSuffix)\n/* harmony export */ });\n/* harmony import */ var _parse_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse-path */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js\");\n\n/**\r\n * Similarly to `addPathPrefix`, this function adds a suffix at the end on the\r\n * provided path. It also works only for paths ensuring the argument starts\r\n * with a slash.\r\n */ function addPathSuffix(path, suffix) {\n    if (!path.startsWith(\"/\") || !suffix) {\n        return path;\n    }\n    const { pathname, query, hash } = (0,_parse_path__WEBPACK_IMPORTED_MODULE_0__.parsePath)(path);\n    return \"\" + pathname + suffix + query + hash;\n} //# sourceMappingURL=add-path-suffix.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvYWRkLXBhdGgtc3VmZml4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXdDO0FBRXhDOzs7O0NBSUMsR0FDTSxTQUFTQyxjQUFjQyxJQUFZLEVBQUVDLE1BQWU7SUFDekQsSUFBSSxDQUFDRCxLQUFLRSxVQUFVLENBQUMsUUFBUSxDQUFDRCxRQUFRO1FBQ3BDLE9BQU9EO0lBQ1Q7SUFFQSxNQUFNLEVBQUVHLFFBQVEsRUFBRUMsS0FBSyxFQUFFQyxJQUFJLEVBQUUsR0FBR1Asc0RBQUFBLENBQVVFO0lBQzVDLE9BQU8sS0FBR0csV0FBV0YsU0FBU0csUUFBUUM7QUFDeEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uLy4uL3NyYy9zaGFyZWQvbGliL3JvdXRlci91dGlscy9hZGQtcGF0aC1zdWZmaXgudHM/ODQ4NyJdLCJuYW1lcyI6WyJwYXJzZVBhdGgiLCJhZGRQYXRoU3VmZml4IiwicGF0aCIsInN1ZmZpeCIsInN0YXJ0c1dpdGgiLCJwYXRobmFtZSIsInF1ZXJ5IiwiaGFzaCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-suffix.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normalizeAppPath: () => (/* binding */ normalizeAppPath),\n/* harmony export */   normalizeRscURL: () => (/* binding */ normalizeRscURL)\n/* harmony export */ });\n/* harmony import */ var _page_path_ensure_leading_slash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../page-path/ensure-leading-slash */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/page-path/ensure-leading-slash.js\");\n/* harmony import */ var _segment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../segment */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/segment.js\");\n\n\n/**\r\n * Normalizes an app route so it represents the actual request path. Essentially\r\n * performing the following transformations:\r\n *\r\n * - `/(dashboard)/user/[id]/page` to `/user/[id]`\r\n * - `/(dashboard)/account/page` to `/account`\r\n * - `/user/[id]/page` to `/user/[id]`\r\n * - `/account/page` to `/account`\r\n * - `/page` to `/`\r\n * - `/(dashboard)/user/[id]/route` to `/user/[id]`\r\n * - `/(dashboard)/account/route` to `/account`\r\n * - `/user/[id]/route` to `/user/[id]`\r\n * - `/account/route` to `/account`\r\n * - `/route` to `/`\r\n * - `/` to `/`\r\n *\r\n * @param route the app route to normalize\r\n * @returns the normalized pathname\r\n */ function normalizeAppPath(route) {\n    return (0,_page_path_ensure_leading_slash__WEBPACK_IMPORTED_MODULE_0__.ensureLeadingSlash)(route.split(\"/\").reduce((pathname, segment, index, segments)=>{\n        // Empty segments are ignored.\n        if (!segment) {\n            return pathname;\n        }\n        // Groups are ignored.\n        if ((0,_segment__WEBPACK_IMPORTED_MODULE_1__.isGroupSegment)(segment)) {\n            return pathname;\n        }\n        // Parallel segments are ignored.\n        if (segment[0] === \"@\") {\n            return pathname;\n        }\n        // The last segment (if it's a leaf) should be ignored.\n        if ((segment === \"page\" || segment === \"route\") && index === segments.length - 1) {\n            return pathname;\n        }\n        return pathname + \"/\" + segment;\n    }, \"\"));\n}\n/**\r\n * Strips the `.rsc` extension if it's in the pathname.\r\n * Since this function is used on full urls it checks `?` for searchParams handling.\r\n */ function normalizeRscURL(url) {\n    return url.replace(/\\.rsc($|\\?)/, \"$1\");\n} //# sourceMappingURL=app-paths.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvYXBwLXBhdGhzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBeUU7QUFDM0I7QUFFOUM7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQWtCQyxHQUNNLFNBQVNFLGlCQUFpQkMsS0FBYTtJQUM1QyxPQUFPSCxtRkFBQUEsQ0FDTEcsTUFBTUMsS0FBSyxDQUFDLEtBQUtDLE1BQU0sQ0FBQyxDQUFDQyxVQUFVQyxTQUFTQyxPQUFPQztRQUNqRCw4QkFBOEI7UUFDOUIsSUFBSSxDQUFDRixTQUFTO1lBQ1osT0FBT0Q7UUFDVDtRQUVBLHNCQUFzQjtRQUN0QixJQUFJTCx3REFBQUEsQ0FBZU0sVUFBVTtZQUMzQixPQUFPRDtRQUNUO1FBRUEsaUNBQWlDO1FBQ2pDLElBQUlDLE9BQU8sQ0FBQyxFQUFFLEtBQUssS0FBSztZQUN0QixPQUFPRDtRQUNUO1FBRUEsdURBQXVEO1FBQ3ZELElBQ0UsQ0FBQ0MsWUFBWSxVQUFVQSxZQUFZLFlBQ25DQyxVQUFVQyxTQUFTQyxNQUFNLEdBQUcsR0FDNUI7WUFDQSxPQUFPSjtRQUNUO1FBRUEsT0FBT0EsV0FBWSxNQUFHQztJQUN4QixHQUFHO0FBRVA7QUFFQTs7O0NBR0MsR0FDTSxTQUFTSSxnQkFBZ0JDLEdBQVc7SUFDekMsT0FBT0EsSUFBSUMsT0FBTyxDQUNoQixlQUVBO0FBRUoiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uLy4uL3NyYy9zaGFyZWQvbGliL3JvdXRlci91dGlscy9hcHAtcGF0aHMudHM/YmM4OSJdLCJuYW1lcyI6WyJlbnN1cmVMZWFkaW5nU2xhc2giLCJpc0dyb3VwU2VnbWVudCIsIm5vcm1hbGl6ZUFwcFBhdGgiLCJyb3V0ZSIsInNwbGl0IiwicmVkdWNlIiwicGF0aG5hbWUiLCJzZWdtZW50IiwiaW5kZXgiLCJzZWdtZW50cyIsImxlbmd0aCIsIm5vcm1hbGl6ZVJzY1VSTCIsInVybCIsInJlcGxhY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/format-next-pathname-info.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/format-next-pathname-info.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatNextPathnameInfo: () => (/* binding */ formatNextPathnameInfo)\n/* harmony export */ });\n/* harmony import */ var _remove_trailing_slash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./remove-trailing-slash */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/remove-trailing-slash.js\");\n/* harmony import */ var _add_path_prefix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./add-path-prefix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js\");\n/* harmony import */ var _add_path_suffix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./add-path-suffix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-suffix.js\");\n/* harmony import */ var _add_locale__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./add-locale */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-locale.js\");\n\n\n\n\nfunction formatNextPathnameInfo(info) {\n    let pathname = (0,_add_locale__WEBPACK_IMPORTED_MODULE_3__.addLocale)(info.pathname, info.locale, info.buildId ? undefined : info.defaultLocale, info.ignorePrefix);\n    if (info.buildId || !info.trailingSlash) {\n        pathname = (0,_remove_trailing_slash__WEBPACK_IMPORTED_MODULE_0__.removeTrailingSlash)(pathname);\n    }\n    if (info.buildId) {\n        pathname = (0,_add_path_suffix__WEBPACK_IMPORTED_MODULE_2__.addPathSuffix)((0,_add_path_prefix__WEBPACK_IMPORTED_MODULE_1__.addPathPrefix)(pathname, \"/_next/data/\" + info.buildId), info.pathname === \"/\" ? \"index.json\" : \".json\");\n    }\n    pathname = (0,_add_path_prefix__WEBPACK_IMPORTED_MODULE_1__.addPathPrefix)(pathname, info.basePath);\n    return !info.buildId && info.trailingSlash ? !pathname.endsWith(\"/\") ? (0,_add_path_suffix__WEBPACK_IMPORTED_MODULE_2__.addPathSuffix)(pathname, \"/\") : pathname : (0,_remove_trailing_slash__WEBPACK_IMPORTED_MODULE_0__.removeTrailingSlash)(pathname);\n} //# sourceMappingURL=format-next-pathname-info.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvZm9ybWF0LW5leHQtcGF0aG5hbWUtaW5mby5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUM2RDtBQUNaO0FBQ0E7QUFDVDtBQU9qQyxTQUFTSSx1QkFBdUJDLElBQWtCO0lBQ3ZELElBQUlDLFdBQVdILHNEQUFBQSxDQUNiRSxLQUFLQyxRQUFRLEVBQ2JELEtBQUtFLE1BQU0sRUFDWEYsS0FBS0csT0FBTyxHQUFHQyxZQUFZSixLQUFLSyxhQUFhLEVBQzdDTCxLQUFLTSxZQUFZO0lBR25CLElBQUlOLEtBQUtHLE9BQU8sSUFBSSxDQUFDSCxLQUFLTyxhQUFhLEVBQUU7UUFDdkNOLFdBQVdOLDJFQUFBQSxDQUFvQk07SUFDakM7SUFFQSxJQUFJRCxLQUFLRyxPQUFPLEVBQUU7UUFDaEJGLFdBQVdKLCtEQUFBQSxDQUNURCwrREFBQUEsQ0FBY0ssVUFBVSxpQkFBZUQsS0FBS0csT0FBTyxHQUNuREgsS0FBS0MsUUFBUSxLQUFLLE1BQU0sZUFBZTtJQUUzQztJQUVBQSxXQUFXTCwrREFBQUEsQ0FBY0ssVUFBVUQsS0FBS1EsUUFBUTtJQUNoRCxPQUFPLENBQUNSLEtBQUtHLE9BQU8sSUFBSUgsS0FBS08sYUFBYSxHQUN0QyxDQUFDTixTQUFTUSxRQUFRLENBQUMsT0FDakJaLCtEQUFBQSxDQUFjSSxVQUFVLE9BQ3hCQSxXQUNGTiwyRUFBQUEsQ0FBb0JNO0FBQzFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi8uLi8uLi9zcmMvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvZm9ybWF0LW5leHQtcGF0aG5hbWUtaW5mby50cz9mYzQyIl0sIm5hbWVzIjpbInJlbW92ZVRyYWlsaW5nU2xhc2giLCJhZGRQYXRoUHJlZml4IiwiYWRkUGF0aFN1ZmZpeCIsImFkZExvY2FsZSIsImZvcm1hdE5leHRQYXRobmFtZUluZm8iLCJpbmZvIiwicGF0aG5hbWUiLCJsb2NhbGUiLCJidWlsZElkIiwidW5kZWZpbmVkIiwiZGVmYXVsdExvY2FsZSIsImlnbm9yZVByZWZpeCIsInRyYWlsaW5nU2xhc2giLCJiYXNlUGF0aCIsImVuZHNXaXRoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/format-next-pathname-info.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/get-next-pathname-info.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/get-next-pathname-info.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getNextPathnameInfo: () => (/* binding */ getNextPathnameInfo)\n/* harmony export */ });\n/* harmony import */ var _i18n_normalize_locale_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../i18n/normalize-locale-path */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/i18n/normalize-locale-path.js\");\n/* harmony import */ var _remove_path_prefix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./remove-path-prefix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/remove-path-prefix.js\");\n/* harmony import */ var _path_has_prefix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./path-has-prefix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js\");\n\n\n\nfunction getNextPathnameInfo(pathname, options) {\n    var _options_nextConfig;\n    const { basePath, i18n, trailingSlash } = (_options_nextConfig = options.nextConfig) != null ? _options_nextConfig : {};\n    const info = {\n        pathname,\n        trailingSlash: pathname !== \"/\" ? pathname.endsWith(\"/\") : trailingSlash\n    };\n    if (basePath && (0,_path_has_prefix__WEBPACK_IMPORTED_MODULE_2__.pathHasPrefix)(info.pathname, basePath)) {\n        info.pathname = (0,_remove_path_prefix__WEBPACK_IMPORTED_MODULE_1__.removePathPrefix)(info.pathname, basePath);\n        info.basePath = basePath;\n    }\n    let pathnameNoDataPrefix = info.pathname;\n    if (info.pathname.startsWith(\"/_next/data/\") && info.pathname.endsWith(\".json\")) {\n        const paths = info.pathname.replace(/^\\/_next\\/data\\//, \"\").replace(/\\.json$/, \"\").split(\"/\");\n        const buildId = paths[0];\n        info.buildId = buildId;\n        pathnameNoDataPrefix = paths[1] !== \"index\" ? \"/\" + paths.slice(1).join(\"/\") : \"/\";\n        // update pathname with normalized if enabled although\n        // we use normalized to populate locale info still\n        if (options.parseData === true) {\n            info.pathname = pathnameNoDataPrefix;\n        }\n    }\n    // If provided, use the locale route normalizer to detect the locale instead\n    // of the function below.\n    if (i18n) {\n        let result = options.i18nProvider ? options.i18nProvider.analyze(info.pathname) : (0,_i18n_normalize_locale_path__WEBPACK_IMPORTED_MODULE_0__.normalizeLocalePath)(info.pathname, i18n.locales);\n        info.locale = result.detectedLocale;\n        var _result_pathname;\n        info.pathname = (_result_pathname = result.pathname) != null ? _result_pathname : info.pathname;\n        if (!result.detectedLocale && info.buildId) {\n            result = options.i18nProvider ? options.i18nProvider.analyze(pathnameNoDataPrefix) : (0,_i18n_normalize_locale_path__WEBPACK_IMPORTED_MODULE_0__.normalizeLocalePath)(pathnameNoDataPrefix, i18n.locales);\n            if (result.detectedLocale) {\n                info.locale = result.detectedLocale;\n            }\n        }\n    }\n    return info;\n} //# sourceMappingURL=get-next-pathname-info.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvZ2V0LW5leHQtcGF0aG5hbWUtaW5mby5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXNFO0FBQ2Y7QUFDTjtBQWtEMUMsU0FBU0csb0JBQ2RDLFFBQWdCLEVBQ2hCQyxPQUFnQjtRQUUwQkE7SUFBMUMsTUFBTSxFQUFFQyxRQUFRLEVBQUVDLElBQUksRUFBRUMsYUFBYSxFQUFFLEdBQUdILENBQUFBLHNCQUFBQSxRQUFRSSxVQUFVLFlBQWxCSixzQkFBc0IsQ0FBQztJQUNqRSxNQUFNSyxPQUF5QjtRQUM3Qk47UUFDQUksZUFBZUosYUFBYSxNQUFNQSxTQUFTTyxRQUFRLENBQUMsT0FBT0g7SUFDN0Q7SUFFQSxJQUFJRixZQUFZSiwrREFBQUEsQ0FBY1EsS0FBS04sUUFBUSxFQUFFRSxXQUFXO1FBQ3RESSxLQUFLTixRQUFRLEdBQUdILHFFQUFBQSxDQUFpQlMsS0FBS04sUUFBUSxFQUFFRTtRQUNoREksS0FBS0osUUFBUSxHQUFHQTtJQUNsQjtJQUNBLElBQUlNLHVCQUF1QkYsS0FBS04sUUFBUTtJQUV4QyxJQUNFTSxLQUFLTixRQUFRLENBQUNTLFVBQVUsQ0FBQyxtQkFDekJILEtBQUtOLFFBQVEsQ0FBQ08sUUFBUSxDQUFDLFVBQ3ZCO1FBQ0EsTUFBTUcsUUFBUUosS0FBS04sUUFBUSxDQUN4QlcsT0FBTyxDQUFDLG9CQUFvQixJQUM1QkEsT0FBTyxDQUFDLFdBQVcsSUFDbkJDLEtBQUssQ0FBQztRQUVULE1BQU1DLFVBQVVILEtBQUssQ0FBQyxFQUFFO1FBQ3hCSixLQUFLTyxPQUFPLEdBQUdBO1FBQ2ZMLHVCQUNFRSxLQUFLLENBQUMsRUFBRSxLQUFLLFVBQVUsTUFBSUEsTUFBTUksS0FBSyxDQUFDLEdBQUdDLElBQUksQ0FBQyxPQUFTO1FBRTFELHNEQUFzRDtRQUN0RCxrREFBa0Q7UUFDbEQsSUFBSWQsUUFBUWUsU0FBUyxLQUFLLE1BQU07WUFDOUJWLEtBQUtOLFFBQVEsR0FBR1E7UUFDbEI7SUFDRjtJQUVBLDRFQUE0RTtJQUM1RSx5QkFBeUI7SUFDekIsSUFBSUwsTUFBTTtRQUNSLElBQUljLFNBQVNoQixRQUFRaUIsWUFBWSxHQUM3QmpCLFFBQVFpQixZQUFZLENBQUNDLE9BQU8sQ0FBQ2IsS0FBS04sUUFBUSxJQUMxQ0osZ0ZBQUFBLENBQW9CVSxLQUFLTixRQUFRLEVBQUVHLEtBQUtpQixPQUFPO1FBRW5EZCxLQUFLZSxNQUFNLEdBQUdKLE9BQU9LLGNBQWM7WUFDbkJMO1FBQWhCWCxLQUFLTixRQUFRLEdBQUdpQixDQUFBQSxtQkFBQUEsT0FBT2pCLFFBQVEsWUFBZmlCLG1CQUFtQlgsS0FBS04sUUFBUTtRQUVoRCxJQUFJLENBQUNpQixPQUFPSyxjQUFjLElBQUloQixLQUFLTyxPQUFPLEVBQUU7WUFDMUNJLFNBQVNoQixRQUFRaUIsWUFBWSxHQUN6QmpCLFFBQVFpQixZQUFZLENBQUNDLE9BQU8sQ0FBQ1gsd0JBQzdCWixnRkFBQUEsQ0FBb0JZLHNCQUFzQkwsS0FBS2lCLE9BQU87WUFFMUQsSUFBSUgsT0FBT0ssY0FBYyxFQUFFO2dCQUN6QmhCLEtBQUtlLE1BQU0sR0FBR0osT0FBT0ssY0FBYztZQUNyQztRQUNGO0lBQ0Y7SUFDQSxPQUFPaEI7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vLi4vLi4vc3JjL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2dldC1uZXh0LXBhdGhuYW1lLWluZm8udHM/MGZjNSJdLCJuYW1lcyI6WyJub3JtYWxpemVMb2NhbGVQYXRoIiwicmVtb3ZlUGF0aFByZWZpeCIsInBhdGhIYXNQcmVmaXgiLCJnZXROZXh0UGF0aG5hbWVJbmZvIiwicGF0aG5hbWUiLCJvcHRpb25zIiwiYmFzZVBhdGgiLCJpMThuIiwidHJhaWxpbmdTbGFzaCIsIm5leHRDb25maWciLCJpbmZvIiwiZW5kc1dpdGgiLCJwYXRobmFtZU5vRGF0YVByZWZpeCIsInN0YXJ0c1dpdGgiLCJwYXRocyIsInJlcGxhY2UiLCJzcGxpdCIsImJ1aWxkSWQiLCJzbGljZSIsImpvaW4iLCJwYXJzZURhdGEiLCJyZXN1bHQiLCJpMThuUHJvdmlkZXIiLCJhbmFseXplIiwibG9jYWxlcyIsImxvY2FsZSIsImRldGVjdGVkTG9jYWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/get-next-pathname-info.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js":
/*!**************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parsePath: () => (/* binding */ parsePath)\n/* harmony export */ });\n/**\r\n * Given a path this function will find the pathname, query and hash and return\r\n * them. This is useful to parse full paths on the client side.\r\n * @param path A path to parse e.g. /foo/bar?id=1#hash\r\n */ function parsePath(path) {\n    const hashIndex = path.indexOf(\"#\");\n    const queryIndex = path.indexOf(\"?\");\n    const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex);\n    if (hasQuery || hashIndex > -1) {\n        return {\n            pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n            query: hasQuery ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined) : \"\",\n            hash: hashIndex > -1 ? path.slice(hashIndex) : \"\"\n        };\n    }\n    return {\n        pathname: path,\n        query: \"\",\n        hash: \"\"\n    };\n} //# sourceMappingURL=parse-path.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcGFyc2UtcGF0aC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7Q0FJQyxHQUNNLFNBQVNBLFVBQVVDLElBQVk7SUFDcEMsTUFBTUMsWUFBWUQsS0FBS0UsT0FBTyxDQUFDO0lBQy9CLE1BQU1DLGFBQWFILEtBQUtFLE9BQU8sQ0FBQztJQUNoQyxNQUFNRSxXQUFXRCxhQUFhLENBQUMsS0FBTUYsQ0FBQUEsWUFBWSxLQUFLRSxhQUFhRixTQUFBQTtJQUVuRSxJQUFJRyxZQUFZSCxZQUFZLENBQUMsR0FBRztRQUM5QixPQUFPO1lBQ0xJLFVBQVVMLEtBQUtNLFNBQVMsQ0FBQyxHQUFHRixXQUFXRCxhQUFhRjtZQUNwRE0sT0FBT0gsV0FDSEosS0FBS00sU0FBUyxDQUFDSCxZQUFZRixZQUFZLENBQUMsSUFBSUEsWUFBWU8sYUFDeEQ7WUFDSkMsTUFBTVIsWUFBWSxDQUFDLElBQUlELEtBQUtVLEtBQUssQ0FBQ1QsYUFBYTtRQUNqRDtJQUNGO0lBRUEsT0FBTztRQUFFSSxVQUFVTDtRQUFNTyxPQUFPO1FBQUlFLE1BQU07SUFBRztBQUMvQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vLi4vLi4vc3JjL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL3BhcnNlLXBhdGgudHM/ZTViYSJdLCJuYW1lcyI6WyJwYXJzZVBhdGgiLCJwYXRoIiwiaGFzaEluZGV4IiwiaW5kZXhPZiIsInF1ZXJ5SW5kZXgiLCJoYXNRdWVyeSIsInBhdGhuYW1lIiwic3Vic3RyaW5nIiwicXVlcnkiLCJ1bmRlZmluZWQiLCJoYXNoIiwic2xpY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pathHasPrefix: () => (/* binding */ pathHasPrefix)\n/* harmony export */ });\n/* harmony import */ var _parse_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse-path */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js\");\n\n/**\r\n * Checks if a given path starts with a given prefix. It ensures it matches\r\n * exactly without containing extra chars. e.g. prefix /docs should replace\r\n * for /docs, /docs/, /docs/a but not /docsss\r\n * @param path The path to check.\r\n * @param prefix The prefix to check against.\r\n */ function pathHasPrefix(path, prefix) {\n    if (typeof path !== \"string\") {\n        return false;\n    }\n    const { pathname } = (0,_parse_path__WEBPACK_IMPORTED_MODULE_0__.parsePath)(path);\n    return pathname === prefix || pathname.startsWith(prefix + \"/\");\n} //# sourceMappingURL=path-has-prefix.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcGF0aC1oYXMtcHJlZml4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXdDO0FBRXhDOzs7Ozs7Q0FNQyxHQUNNLFNBQVNDLGNBQWNDLElBQVksRUFBRUMsTUFBYztJQUN4RCxJQUFJLE9BQU9ELFNBQVMsVUFBVTtRQUM1QixPQUFPO0lBQ1Q7SUFFQSxNQUFNLEVBQUVFLFFBQVEsRUFBRSxHQUFHSixzREFBQUEsQ0FBVUU7SUFDL0IsT0FBT0UsYUFBYUQsVUFBVUMsU0FBU0MsVUFBVSxDQUFDRixTQUFTO0FBQzdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi8uLi8uLi9zcmMvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcGF0aC1oYXMtcHJlZml4LnRzPzNhN2QiXSwibmFtZXMiOlsicGFyc2VQYXRoIiwicGF0aEhhc1ByZWZpeCIsInBhdGgiLCJwcmVmaXgiLCJwYXRobmFtZSIsInN0YXJ0c1dpdGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/relativize-url.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/relativize-url.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   relativizeURL: () => (/* binding */ relativizeURL)\n/* harmony export */ });\n/**\r\n * Given a URL as a string and a base URL it will make the URL relative\r\n * if the parsed protocol and host is the same as the one in the base\r\n * URL. Otherwise it returns the same URL string.\r\n */ function relativizeURL(url, base) {\n    const baseURL = typeof base === \"string\" ? new URL(base) : base;\n    const relative = new URL(url, base);\n    const origin = baseURL.protocol + \"//\" + baseURL.host;\n    return relative.protocol + \"//\" + relative.host === origin ? relative.toString().replace(origin, \"\") : relative.toString();\n} //# sourceMappingURL=relativize-url.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcmVsYXRpdml6ZS11cmwuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7O0NBSUMsR0FDTSxTQUFTQSxjQUFjQyxHQUFvQixFQUFFQyxJQUFrQjtJQUNwRSxNQUFNQyxVQUFVLE9BQU9ELFNBQVMsV0FBVyxJQUFJRSxJQUFJRixRQUFRQTtJQUMzRCxNQUFNRyxXQUFXLElBQUlELElBQUlILEtBQUtDO0lBQzlCLE1BQU1JLFNBQVNILFFBQVdJLFFBQVEsR0FBQyxPQUFJSixRQUFRSyxJQUFJO0lBQ25ELE9BQU9ILFNBQVlFLFFBQVEsR0FBQyxPQUFJRixTQUFTRyxJQUFJLEtBQU9GLFNBQ2hERCxTQUFTSSxRQUFRLEdBQUdDLE9BQU8sQ0FBQ0osUUFBUSxNQUNwQ0QsU0FBU0ksUUFBUTtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vLi4vLi4vc3JjL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL3JlbGF0aXZpemUtdXJsLnRzPzhkNTgiXSwibmFtZXMiOlsicmVsYXRpdml6ZVVSTCIsInVybCIsImJhc2UiLCJiYXNlVVJMIiwiVVJMIiwicmVsYXRpdmUiLCJvcmlnaW4iLCJwcm90b2NvbCIsImhvc3QiLCJ0b1N0cmluZyIsInJlcGxhY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/relativize-url.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/remove-path-prefix.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/remove-path-prefix.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   removePathPrefix: () => (/* binding */ removePathPrefix)\n/* harmony export */ });\n/* harmony import */ var _path_has_prefix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./path-has-prefix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js\");\n\n/**\r\n * Given a path and a prefix it will remove the prefix when it exists in the\r\n * given path. It ensures it matches exactly without containing extra chars\r\n * and if the prefix is not there it will be noop.\r\n *\r\n * @param path The path to remove the prefix from.\r\n * @param prefix The prefix to be removed.\r\n */ function removePathPrefix(path, prefix) {\n    // If the path doesn't start with the prefix we can return it as is. This\n    // protects us from situations where the prefix is a substring of the path\n    // prefix such as:\n    //\n    // For prefix: /blog\n    //\n    //   /blog -> true\n    //   /blog/ -> true\n    //   /blog/1 -> true\n    //   /blogging -> false\n    //   /blogging/ -> false\n    //   /blogging/1 -> false\n    if (!(0,_path_has_prefix__WEBPACK_IMPORTED_MODULE_0__.pathHasPrefix)(path, prefix)) {\n        return path;\n    }\n    // Remove the prefix from the path via slicing.\n    const withoutPrefix = path.slice(prefix.length);\n    // If the path without the prefix starts with a `/` we can return it as is.\n    if (withoutPrefix.startsWith(\"/\")) {\n        return withoutPrefix;\n    }\n    // If the path without the prefix doesn't start with a `/` we need to add it\n    // back to the path to make sure it's a valid path.\n    return \"/\" + withoutPrefix;\n} //# sourceMappingURL=remove-path-prefix.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcmVtb3ZlLXBhdGgtcHJlZml4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWlEO0FBRWpEOzs7Ozs7O0NBT0MsR0FDTSxTQUFTQyxpQkFBaUJDLElBQVksRUFBRUMsTUFBYztJQUMzRCx5RUFBeUU7SUFDekUsMEVBQTBFO0lBQzFFLGtCQUFrQjtJQUNsQixFQUFFO0lBQ0Ysb0JBQW9CO0lBQ3BCLEVBQUU7SUFDRixrQkFBa0I7SUFDbEIsbUJBQW1CO0lBQ25CLG9CQUFvQjtJQUNwQix1QkFBdUI7SUFDdkIsd0JBQXdCO0lBQ3hCLHlCQUF5QjtJQUN6QixJQUFJLENBQUNILCtEQUFBQSxDQUFjRSxNQUFNQyxTQUFTO1FBQ2hDLE9BQU9EO0lBQ1Q7SUFFQSwrQ0FBK0M7SUFDL0MsTUFBTUUsZ0JBQWdCRixLQUFLRyxLQUFLLENBQUNGLE9BQU9HLE1BQU07SUFFOUMsMkVBQTJFO0lBQzNFLElBQUlGLGNBQWNHLFVBQVUsQ0FBQyxNQUFNO1FBQ2pDLE9BQU9IO0lBQ1Q7SUFFQSw0RUFBNEU7SUFDNUUsbURBQW1EO0lBQ25ELE9BQU8sTUFBSUE7QUFDYiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vLi4vLi4vc3JjL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL3JlbW92ZS1wYXRoLXByZWZpeC50cz80MjUzIl0sIm5hbWVzIjpbInBhdGhIYXNQcmVmaXgiLCJyZW1vdmVQYXRoUHJlZml4IiwicGF0aCIsInByZWZpeCIsIndpdGhvdXRQcmVmaXgiLCJzbGljZSIsImxlbmd0aCIsInN0YXJ0c1dpdGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/remove-path-prefix.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/remove-trailing-slash.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/remove-trailing-slash.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   removeTrailingSlash: () => (/* binding */ removeTrailingSlash)\n/* harmony export */ });\n/**\r\n * Removes the trailing slash for a given route or page path. Preserves the\r\n * root page. Examples:\r\n *   - `/foo/bar/` -> `/foo/bar`\r\n *   - `/foo/bar` -> `/foo/bar`\r\n *   - `/` -> `/`\r\n */ function removeTrailingSlash(route) {\n    return route.replace(/\\/$/, \"\") || \"/\";\n} //# sourceMappingURL=remove-trailing-slash.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcmVtb3ZlLXRyYWlsaW5nLXNsYXNoLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Ozs7O0NBTUMsR0FDTSxTQUFTQSxvQkFBb0JDLEtBQWE7SUFDL0MsT0FBT0EsTUFBTUMsT0FBTyxDQUFDLE9BQU8sT0FBTztBQUNyQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vLi4vLi4vc3JjL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL3JlbW92ZS10cmFpbGluZy1zbGFzaC50cz8xM2IxIl0sIm5hbWVzIjpbInJlbW92ZVRyYWlsaW5nU2xhc2giLCJyb3V0ZSIsInJlcGxhY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/remove-trailing-slash.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/segment.js":
/*!**********************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/segment.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_SEGMENT_KEY: () => (/* binding */ DEFAULT_SEGMENT_KEY),\n/* harmony export */   PAGE_SEGMENT_KEY: () => (/* binding */ PAGE_SEGMENT_KEY),\n/* harmony export */   isGroupSegment: () => (/* binding */ isGroupSegment)\n/* harmony export */ });\nfunction isGroupSegment(segment) {\n    // Use array[0] for performant purpose\n    return segment[0] === \"(\" && segment.endsWith(\")\");\n}\nconst PAGE_SEGMENT_KEY = \"__PAGE__\";\nconst DEFAULT_SEGMENT_KEY = \"__DEFAULT__\"; //# sourceMappingURL=segment.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9zZWdtZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFPLFNBQVNBLGVBQWVDLE9BQWU7SUFDNUMsc0NBQXNDO0lBQ3RDLE9BQU9BLE9BQU8sQ0FBQyxFQUFFLEtBQUssT0FBT0EsUUFBUUMsUUFBUSxDQUFDO0FBQ2hEO0FBRU8sTUFBTUMsbUJBQW1CLFdBQVU7QUFDbkMsTUFBTUMsc0JBQXNCLGNBQWEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uL3NyYy9zaGFyZWQvbGliL3NlZ21lbnQudHM/YWQyNSJdLCJuYW1lcyI6WyJpc0dyb3VwU2VnbWVudCIsInNlZ21lbnQiLCJlbmRzV2l0aCIsIlBBR0VfU0VHTUVOVF9LRVkiLCJERUZBVUxUX1NFR01FTlRfS0VZIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/segment.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/experimental/testmode/context.js":
/*!*****************************************************************!*\
  !*** ./node_modules/next/dist/experimental/testmode/context.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({\r\n    value: true\r\n}));\r\n0 && (0);\r\nfunction _export(target, all) {\r\n    for(var name in all)Object.defineProperty(target, name, {\r\n        enumerable: true,\r\n        get: all[name]\r\n    });\r\n}\r\n_export(exports, {\r\n    getTestReqInfo: function() {\r\n        return getTestReqInfo;\r\n    },\r\n    withRequest: function() {\r\n        return withRequest;\r\n    }\r\n});\r\nconst _nodeasync_hooks = __webpack_require__(/*! node:async_hooks */ \"node:async_hooks\");\r\nconst testStorage = new _nodeasync_hooks.AsyncLocalStorage();\r\nfunction extractTestInfoFromRequest(req, reader) {\r\n    const proxyPortHeader = reader.header(req, \"next-test-proxy-port\");\r\n    if (!proxyPortHeader) {\r\n        return undefined;\r\n    }\r\n    const url = reader.url(req);\r\n    const proxyPort = Number(proxyPortHeader);\r\n    const testData = reader.header(req, \"next-test-data\") || \"\";\r\n    return {\r\n        url,\r\n        proxyPort,\r\n        testData\r\n    };\r\n}\r\nfunction withRequest(req, reader, fn) {\r\n    const testReqInfo = extractTestInfoFromRequest(req, reader);\r\n    if (!testReqInfo) {\r\n        return fn();\r\n    }\r\n    return testStorage.run(testReqInfo, fn);\r\n}\r\nfunction getTestReqInfo(req, reader) {\r\n    const testReqInfo = testStorage.getStore();\r\n    if (testReqInfo) {\r\n        return testReqInfo;\r\n    }\r\n    if (req && reader) {\r\n        return extractTestInfoFromRequest(req, reader);\r\n    }\r\n    return undefined;\r\n}\r\n\r\n//# sourceMappingURL=context.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9leHBlcmltZW50YWwvdGVzdG1vZGUvY29udGV4dC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLE1BQU0sQ0FHTDtBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCx5QkFBeUIsbUJBQU8sQ0FBQywwQ0FBa0I7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9leHBlcmltZW50YWwvdGVzdG1vZGUvY29udGV4dC5qcz9hN2M5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcclxuICAgIHZhbHVlOiB0cnVlXHJcbn0pO1xyXG4wICYmIChtb2R1bGUuZXhwb3J0cyA9IHtcclxuICAgIGdldFRlc3RSZXFJbmZvOiBudWxsLFxyXG4gICAgd2l0aFJlcXVlc3Q6IG51bGxcclxufSk7XHJcbmZ1bmN0aW9uIF9leHBvcnQodGFyZ2V0LCBhbGwpIHtcclxuICAgIGZvcih2YXIgbmFtZSBpbiBhbGwpT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgbmFtZSwge1xyXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgZ2V0OiBhbGxbbmFtZV1cclxuICAgIH0pO1xyXG59XHJcbl9leHBvcnQoZXhwb3J0cywge1xyXG4gICAgZ2V0VGVzdFJlcUluZm86IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIHJldHVybiBnZXRUZXN0UmVxSW5mbztcclxuICAgIH0sXHJcbiAgICB3aXRoUmVxdWVzdDogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgcmV0dXJuIHdpdGhSZXF1ZXN0O1xyXG4gICAgfVxyXG59KTtcclxuY29uc3QgX25vZGVhc3luY19ob29rcyA9IHJlcXVpcmUoXCJub2RlOmFzeW5jX2hvb2tzXCIpO1xyXG5jb25zdCB0ZXN0U3RvcmFnZSA9IG5ldyBfbm9kZWFzeW5jX2hvb2tzLkFzeW5jTG9jYWxTdG9yYWdlKCk7XHJcbmZ1bmN0aW9uIGV4dHJhY3RUZXN0SW5mb0Zyb21SZXF1ZXN0KHJlcSwgcmVhZGVyKSB7XHJcbiAgICBjb25zdCBwcm94eVBvcnRIZWFkZXIgPSByZWFkZXIuaGVhZGVyKHJlcSwgXCJuZXh0LXRlc3QtcHJveHktcG9ydFwiKTtcclxuICAgIGlmICghcHJveHlQb3J0SGVhZGVyKSB7XHJcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcclxuICAgIH1cclxuICAgIGNvbnN0IHVybCA9IHJlYWRlci51cmwocmVxKTtcclxuICAgIGNvbnN0IHByb3h5UG9ydCA9IE51bWJlcihwcm94eVBvcnRIZWFkZXIpO1xyXG4gICAgY29uc3QgdGVzdERhdGEgPSByZWFkZXIuaGVhZGVyKHJlcSwgXCJuZXh0LXRlc3QtZGF0YVwiKSB8fCBcIlwiO1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICB1cmwsXHJcbiAgICAgICAgcHJveHlQb3J0LFxyXG4gICAgICAgIHRlc3REYXRhXHJcbiAgICB9O1xyXG59XHJcbmZ1bmN0aW9uIHdpdGhSZXF1ZXN0KHJlcSwgcmVhZGVyLCBmbikge1xyXG4gICAgY29uc3QgdGVzdFJlcUluZm8gPSBleHRyYWN0VGVzdEluZm9Gcm9tUmVxdWVzdChyZXEsIHJlYWRlcik7XHJcbiAgICBpZiAoIXRlc3RSZXFJbmZvKSB7XHJcbiAgICAgICAgcmV0dXJuIGZuKCk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdGVzdFN0b3JhZ2UucnVuKHRlc3RSZXFJbmZvLCBmbik7XHJcbn1cclxuZnVuY3Rpb24gZ2V0VGVzdFJlcUluZm8ocmVxLCByZWFkZXIpIHtcclxuICAgIGNvbnN0IHRlc3RSZXFJbmZvID0gdGVzdFN0b3JhZ2UuZ2V0U3RvcmUoKTtcclxuICAgIGlmICh0ZXN0UmVxSW5mbykge1xyXG4gICAgICAgIHJldHVybiB0ZXN0UmVxSW5mbztcclxuICAgIH1cclxuICAgIGlmIChyZXEgJiYgcmVhZGVyKSB7XHJcbiAgICAgICAgcmV0dXJuIGV4dHJhY3RUZXN0SW5mb0Zyb21SZXF1ZXN0KHJlcSwgcmVhZGVyKTtcclxuICAgIH1cclxuICAgIHJldHVybiB1bmRlZmluZWQ7XHJcbn1cclxuXHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnRleHQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/experimental/testmode/context.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/experimental/testmode/fetch.js":
/*!***************************************************************!*\
  !*** ./node_modules/next/dist/experimental/testmode/fetch.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\n\r\nObject.defineProperty(exports, \"__esModule\", ({\r\n    value: true\r\n}));\r\n0 && (0);\r\nfunction _export(target, all) {\r\n    for(var name in all)Object.defineProperty(target, name, {\r\n        enumerable: true,\r\n        get: all[name]\r\n    });\r\n}\r\n_export(exports, {\r\n    handleFetch: function() {\r\n        return handleFetch;\r\n    },\r\n    interceptFetch: function() {\r\n        return interceptFetch;\r\n    },\r\n    reader: function() {\r\n        return reader;\r\n    }\r\n});\r\nconst _context = __webpack_require__(/*! ./context */ \"(middleware)/./node_modules/next/dist/experimental/testmode/context.js\");\r\nconst reader = {\r\n    url (req) {\r\n        return req.url;\r\n    },\r\n    header (req, name) {\r\n        return req.headers.get(name);\r\n    }\r\n};\r\nfunction getTestStack() {\r\n    let stack = (new Error().stack ?? \"\").split(\"\\n\");\r\n    // Skip the first line and find first non-empty line.\r\n    for(let i = 1; i < stack.length; i++){\r\n        if (stack[i].length > 0) {\r\n            stack = stack.slice(i);\r\n            break;\r\n        }\r\n    }\r\n    // Filter out franmework lines.\r\n    stack = stack.filter((f)=>!f.includes(\"/next/dist/\"));\r\n    // At most 5 lines.\r\n    stack = stack.slice(0, 5);\r\n    // Cleanup some internal info and trim.\r\n    stack = stack.map((s)=>s.replace(\"webpack-internal:///(rsc)/\", \"\").trim());\r\n    return stack.join(\"    \");\r\n}\r\nasync function buildProxyRequest(testData, request) {\r\n    const { url, method, headers, body, cache, credentials, integrity, mode, redirect, referrer, referrerPolicy } = request;\r\n    return {\r\n        testData,\r\n        api: \"fetch\",\r\n        request: {\r\n            url,\r\n            method,\r\n            headers: [\r\n                ...Array.from(headers),\r\n                [\r\n                    \"next-test-stack\",\r\n                    getTestStack()\r\n                ]\r\n            ],\r\n            body: body ? Buffer.from(await request.arrayBuffer()).toString(\"base64\") : null,\r\n            cache,\r\n            credentials,\r\n            integrity,\r\n            mode,\r\n            redirect,\r\n            referrer,\r\n            referrerPolicy\r\n        }\r\n    };\r\n}\r\nfunction buildResponse(proxyResponse) {\r\n    const { status, headers, body } = proxyResponse.response;\r\n    return new Response(body ? Buffer.from(body, \"base64\") : null, {\r\n        status,\r\n        headers: new Headers(headers)\r\n    });\r\n}\r\nasync function handleFetch(originalFetch, request) {\r\n    const testInfo = (0, _context.getTestReqInfo)(request, reader);\r\n    if (!testInfo) {\r\n        // Passthrough non-test requests.\r\n        return originalFetch(request);\r\n    }\r\n    const { testData, proxyPort } = testInfo;\r\n    const proxyRequest = await buildProxyRequest(testData, request);\r\n    const resp = await originalFetch(`http://localhost:${proxyPort}`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(proxyRequest),\r\n        next: {\r\n            // @ts-ignore\r\n            internal: true\r\n        }\r\n    });\r\n    if (!resp.ok) {\r\n        throw new Error(`Proxy request failed: ${resp.status}`);\r\n    }\r\n    const proxyResponse = await resp.json();\r\n    const { api } = proxyResponse;\r\n    switch(api){\r\n        case \"continue\":\r\n            return originalFetch(request);\r\n        case \"abort\":\r\n        case \"unhandled\":\r\n            throw new Error(`Proxy request aborted [${request.method} ${request.url}]`);\r\n        default:\r\n            break;\r\n    }\r\n    return buildResponse(proxyResponse);\r\n}\r\nfunction interceptFetch(originalFetch) {\r\n    __webpack_require__.g.fetch = function testFetch(input, init) {\r\n        var _init_next;\r\n        // Passthrough internal requests.\r\n        // @ts-ignore\r\n        if (init == null ? void 0 : (_init_next = init.next) == null ? void 0 : _init_next.internal) {\r\n            return originalFetch(input, init);\r\n        }\r\n        return handleFetch(originalFetch, new Request(input, init));\r\n    };\r\n    return ()=>{\r\n        __webpack_require__.g.fetch = originalFetch;\r\n    };\r\n}\r\n\r\n//# sourceMappingURL=fetch.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9leHBlcmltZW50YWwvdGVzdG1vZGUvZmV0Y2guanMiLCJtYXBwaW5ncyI6IjtBQUFhO0FBQ2IsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsTUFBTSxDQUlMO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsaUJBQWlCLG1CQUFPLENBQUMseUZBQVc7QUFDcEM7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLGtCQUFrQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxzR0FBc0c7QUFDbEg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsTUFBTTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSx3QkFBd0I7QUFDcEMsK0JBQStCLE1BQU07QUFDckM7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksc0JBQXNCO0FBQ2xDO0FBQ0EseURBQXlELFVBQVU7QUFDbkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsaURBQWlELFlBQVk7QUFDN0Q7QUFDQTtBQUNBLFlBQVksTUFBTTtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0RBQXNELGdCQUFnQixFQUFFLFlBQVk7QUFDcEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxxQkFBTTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEscUJBQU07QUFDZDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2V4cGVyaW1lbnRhbC90ZXN0bW9kZS9mZXRjaC5qcz8yMTk5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcclxuICAgIHZhbHVlOiB0cnVlXHJcbn0pO1xyXG4wICYmIChtb2R1bGUuZXhwb3J0cyA9IHtcclxuICAgIGhhbmRsZUZldGNoOiBudWxsLFxyXG4gICAgaW50ZXJjZXB0RmV0Y2g6IG51bGwsXHJcbiAgICByZWFkZXI6IG51bGxcclxufSk7XHJcbmZ1bmN0aW9uIF9leHBvcnQodGFyZ2V0LCBhbGwpIHtcclxuICAgIGZvcih2YXIgbmFtZSBpbiBhbGwpT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgbmFtZSwge1xyXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgZ2V0OiBhbGxbbmFtZV1cclxuICAgIH0pO1xyXG59XHJcbl9leHBvcnQoZXhwb3J0cywge1xyXG4gICAgaGFuZGxlRmV0Y2g6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIHJldHVybiBoYW5kbGVGZXRjaDtcclxuICAgIH0sXHJcbiAgICBpbnRlcmNlcHRGZXRjaDogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgcmV0dXJuIGludGVyY2VwdEZldGNoO1xyXG4gICAgfSxcclxuICAgIHJlYWRlcjogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgcmV0dXJuIHJlYWRlcjtcclxuICAgIH1cclxufSk7XHJcbmNvbnN0IF9jb250ZXh0ID0gcmVxdWlyZShcIi4vY29udGV4dFwiKTtcclxuY29uc3QgcmVhZGVyID0ge1xyXG4gICAgdXJsIChyZXEpIHtcclxuICAgICAgICByZXR1cm4gcmVxLnVybDtcclxuICAgIH0sXHJcbiAgICBoZWFkZXIgKHJlcSwgbmFtZSkge1xyXG4gICAgICAgIHJldHVybiByZXEuaGVhZGVycy5nZXQobmFtZSk7XHJcbiAgICB9XHJcbn07XHJcbmZ1bmN0aW9uIGdldFRlc3RTdGFjaygpIHtcclxuICAgIGxldCBzdGFjayA9IChuZXcgRXJyb3IoKS5zdGFjayA/PyBcIlwiKS5zcGxpdChcIlxcblwiKTtcclxuICAgIC8vIFNraXAgdGhlIGZpcnN0IGxpbmUgYW5kIGZpbmQgZmlyc3Qgbm9uLWVtcHR5IGxpbmUuXHJcbiAgICBmb3IobGV0IGkgPSAxOyBpIDwgc3RhY2subGVuZ3RoOyBpKyspe1xyXG4gICAgICAgIGlmIChzdGFja1tpXS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIHN0YWNrID0gc3RhY2suc2xpY2UoaSk7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8vIEZpbHRlciBvdXQgZnJhbm1ld29yayBsaW5lcy5cclxuICAgIHN0YWNrID0gc3RhY2suZmlsdGVyKChmKT0+IWYuaW5jbHVkZXMoXCIvbmV4dC9kaXN0L1wiKSk7XHJcbiAgICAvLyBBdCBtb3N0IDUgbGluZXMuXHJcbiAgICBzdGFjayA9IHN0YWNrLnNsaWNlKDAsIDUpO1xyXG4gICAgLy8gQ2xlYW51cCBzb21lIGludGVybmFsIGluZm8gYW5kIHRyaW0uXHJcbiAgICBzdGFjayA9IHN0YWNrLm1hcCgocyk9PnMucmVwbGFjZShcIndlYnBhY2staW50ZXJuYWw6Ly8vKHJzYykvXCIsIFwiXCIpLnRyaW0oKSk7XHJcbiAgICByZXR1cm4gc3RhY2suam9pbihcIiAgICBcIik7XHJcbn1cclxuYXN5bmMgZnVuY3Rpb24gYnVpbGRQcm94eVJlcXVlc3QodGVzdERhdGEsIHJlcXVlc3QpIHtcclxuICAgIGNvbnN0IHsgdXJsLCBtZXRob2QsIGhlYWRlcnMsIGJvZHksIGNhY2hlLCBjcmVkZW50aWFscywgaW50ZWdyaXR5LCBtb2RlLCByZWRpcmVjdCwgcmVmZXJyZXIsIHJlZmVycmVyUG9saWN5IH0gPSByZXF1ZXN0O1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICB0ZXN0RGF0YSxcclxuICAgICAgICBhcGk6IFwiZmV0Y2hcIixcclxuICAgICAgICByZXF1ZXN0OiB7XHJcbiAgICAgICAgICAgIHVybCxcclxuICAgICAgICAgICAgbWV0aG9kLFxyXG4gICAgICAgICAgICBoZWFkZXJzOiBbXHJcbiAgICAgICAgICAgICAgICAuLi5BcnJheS5mcm9tKGhlYWRlcnMpLFxyXG4gICAgICAgICAgICAgICAgW1xyXG4gICAgICAgICAgICAgICAgICAgIFwibmV4dC10ZXN0LXN0YWNrXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgZ2V0VGVzdFN0YWNrKClcclxuICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgXSxcclxuICAgICAgICAgICAgYm9keTogYm9keSA/IEJ1ZmZlci5mcm9tKGF3YWl0IHJlcXVlc3QuYXJyYXlCdWZmZXIoKSkudG9TdHJpbmcoXCJiYXNlNjRcIikgOiBudWxsLFxyXG4gICAgICAgICAgICBjYWNoZSxcclxuICAgICAgICAgICAgY3JlZGVudGlhbHMsXHJcbiAgICAgICAgICAgIGludGVncml0eSxcclxuICAgICAgICAgICAgbW9kZSxcclxuICAgICAgICAgICAgcmVkaXJlY3QsXHJcbiAgICAgICAgICAgIHJlZmVycmVyLFxyXG4gICAgICAgICAgICByZWZlcnJlclBvbGljeVxyXG4gICAgICAgIH1cclxuICAgIH07XHJcbn1cclxuZnVuY3Rpb24gYnVpbGRSZXNwb25zZShwcm94eVJlc3BvbnNlKSB7XHJcbiAgICBjb25zdCB7IHN0YXR1cywgaGVhZGVycywgYm9keSB9ID0gcHJveHlSZXNwb25zZS5yZXNwb25zZTtcclxuICAgIHJldHVybiBuZXcgUmVzcG9uc2UoYm9keSA/IEJ1ZmZlci5mcm9tKGJvZHksIFwiYmFzZTY0XCIpIDogbnVsbCwge1xyXG4gICAgICAgIHN0YXR1cyxcclxuICAgICAgICBoZWFkZXJzOiBuZXcgSGVhZGVycyhoZWFkZXJzKVxyXG4gICAgfSk7XHJcbn1cclxuYXN5bmMgZnVuY3Rpb24gaGFuZGxlRmV0Y2gob3JpZ2luYWxGZXRjaCwgcmVxdWVzdCkge1xyXG4gICAgY29uc3QgdGVzdEluZm8gPSAoMCwgX2NvbnRleHQuZ2V0VGVzdFJlcUluZm8pKHJlcXVlc3QsIHJlYWRlcik7XHJcbiAgICBpZiAoIXRlc3RJbmZvKSB7XHJcbiAgICAgICAgLy8gUGFzc3Rocm91Z2ggbm9uLXRlc3QgcmVxdWVzdHMuXHJcbiAgICAgICAgcmV0dXJuIG9yaWdpbmFsRmV0Y2gocmVxdWVzdCk7XHJcbiAgICB9XHJcbiAgICBjb25zdCB7IHRlc3REYXRhLCBwcm94eVBvcnQgfSA9IHRlc3RJbmZvO1xyXG4gICAgY29uc3QgcHJveHlSZXF1ZXN0ID0gYXdhaXQgYnVpbGRQcm94eVJlcXVlc3QodGVzdERhdGEsIHJlcXVlc3QpO1xyXG4gICAgY29uc3QgcmVzcCA9IGF3YWl0IG9yaWdpbmFsRmV0Y2goYGh0dHA6Ly9sb2NhbGhvc3Q6JHtwcm94eVBvcnR9YCwge1xyXG4gICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkocHJveHlSZXF1ZXN0KSxcclxuICAgICAgICBuZXh0OiB7XHJcbiAgICAgICAgICAgIC8vIEB0cy1pZ25vcmVcclxuICAgICAgICAgICAgaW50ZXJuYWw6IHRydWVcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuICAgIGlmICghcmVzcC5vaykge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgUHJveHkgcmVxdWVzdCBmYWlsZWQ6ICR7cmVzcC5zdGF0dXN9YCk7XHJcbiAgICB9XHJcbiAgICBjb25zdCBwcm94eVJlc3BvbnNlID0gYXdhaXQgcmVzcC5qc29uKCk7XHJcbiAgICBjb25zdCB7IGFwaSB9ID0gcHJveHlSZXNwb25zZTtcclxuICAgIHN3aXRjaChhcGkpe1xyXG4gICAgICAgIGNhc2UgXCJjb250aW51ZVwiOlxyXG4gICAgICAgICAgICByZXR1cm4gb3JpZ2luYWxGZXRjaChyZXF1ZXN0KTtcclxuICAgICAgICBjYXNlIFwiYWJvcnRcIjpcclxuICAgICAgICBjYXNlIFwidW5oYW5kbGVkXCI6XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgUHJveHkgcmVxdWVzdCBhYm9ydGVkIFske3JlcXVlc3QubWV0aG9kfSAke3JlcXVlc3QudXJsfV1gKTtcclxuICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICBicmVhaztcclxuICAgIH1cclxuICAgIHJldHVybiBidWlsZFJlc3BvbnNlKHByb3h5UmVzcG9uc2UpO1xyXG59XHJcbmZ1bmN0aW9uIGludGVyY2VwdEZldGNoKG9yaWdpbmFsRmV0Y2gpIHtcclxuICAgIGdsb2JhbC5mZXRjaCA9IGZ1bmN0aW9uIHRlc3RGZXRjaChpbnB1dCwgaW5pdCkge1xyXG4gICAgICAgIHZhciBfaW5pdF9uZXh0O1xyXG4gICAgICAgIC8vIFBhc3N0aHJvdWdoIGludGVybmFsIHJlcXVlc3RzLlxyXG4gICAgICAgIC8vIEB0cy1pZ25vcmVcclxuICAgICAgICBpZiAoaW5pdCA9PSBudWxsID8gdm9pZCAwIDogKF9pbml0X25leHQgPSBpbml0Lm5leHQpID09IG51bGwgPyB2b2lkIDAgOiBfaW5pdF9uZXh0LmludGVybmFsKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBvcmlnaW5hbEZldGNoKGlucHV0LCBpbml0KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGhhbmRsZUZldGNoKG9yaWdpbmFsRmV0Y2gsIG5ldyBSZXF1ZXN0KGlucHV0LCBpbml0KSk7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuICgpPT57XHJcbiAgICAgICAgZ2xvYmFsLmZldGNoID0gb3JpZ2luYWxGZXRjaDtcclxuICAgIH07XHJcbn1cclxuXHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZldGNoLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/experimental/testmode/fetch.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/experimental/testmode/server-edge.js":
/*!*********************************************************************!*\
  !*** ./node_modules/next/dist/experimental/testmode/server-edge.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({\r\n    value: true\r\n}));\r\n0 && (0);\r\nfunction _export(target, all) {\r\n    for(var name in all)Object.defineProperty(target, name, {\r\n        enumerable: true,\r\n        get: all[name]\r\n    });\r\n}\r\n_export(exports, {\r\n    interceptTestApis: function() {\r\n        return interceptTestApis;\r\n    },\r\n    wrapRequestHandler: function() {\r\n        return wrapRequestHandler;\r\n    }\r\n});\r\nconst _context = __webpack_require__(/*! ./context */ \"(middleware)/./node_modules/next/dist/experimental/testmode/context.js\");\r\nconst _fetch = __webpack_require__(/*! ./fetch */ \"(middleware)/./node_modules/next/dist/experimental/testmode/fetch.js\");\r\nfunction interceptTestApis() {\r\n    return (0, _fetch.interceptFetch)(__webpack_require__.g.fetch);\r\n}\r\nfunction wrapRequestHandler(handler) {\r\n    return (req, fn)=>(0, _context.withRequest)(req, _fetch.reader, ()=>handler(req, fn));\r\n}\r\n\r\n//# sourceMappingURL=server-edge.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9leHBlcmltZW50YWwvdGVzdG1vZGUvc2VydmVyLWVkZ2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixNQUFNLENBR0w7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsaUJBQWlCLG1CQUFPLENBQUMseUZBQVc7QUFDcEMsZUFBZSxtQkFBTyxDQUFDLHFGQUFTO0FBQ2hDO0FBQ0Esc0NBQXNDLHFCQUFNO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2V4cGVyaW1lbnRhbC90ZXN0bW9kZS9zZXJ2ZXItZWRnZS5qcz82MDVlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcclxuICAgIHZhbHVlOiB0cnVlXHJcbn0pO1xyXG4wICYmIChtb2R1bGUuZXhwb3J0cyA9IHtcclxuICAgIGludGVyY2VwdFRlc3RBcGlzOiBudWxsLFxyXG4gICAgd3JhcFJlcXVlc3RIYW5kbGVyOiBudWxsXHJcbn0pO1xyXG5mdW5jdGlvbiBfZXhwb3J0KHRhcmdldCwgYWxsKSB7XHJcbiAgICBmb3IodmFyIG5hbWUgaW4gYWxsKU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIG5hbWUsIHtcclxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGdldDogYWxsW25hbWVdXHJcbiAgICB9KTtcclxufVxyXG5fZXhwb3J0KGV4cG9ydHMsIHtcclxuICAgIGludGVyY2VwdFRlc3RBcGlzOiBmdW5jdGlvbigpIHtcclxuICAgICAgICByZXR1cm4gaW50ZXJjZXB0VGVzdEFwaXM7XHJcbiAgICB9LFxyXG4gICAgd3JhcFJlcXVlc3RIYW5kbGVyOiBmdW5jdGlvbigpIHtcclxuICAgICAgICByZXR1cm4gd3JhcFJlcXVlc3RIYW5kbGVyO1xyXG4gICAgfVxyXG59KTtcclxuY29uc3QgX2NvbnRleHQgPSByZXF1aXJlKFwiLi9jb250ZXh0XCIpO1xyXG5jb25zdCBfZmV0Y2ggPSByZXF1aXJlKFwiLi9mZXRjaFwiKTtcclxuZnVuY3Rpb24gaW50ZXJjZXB0VGVzdEFwaXMoKSB7XHJcbiAgICByZXR1cm4gKDAsIF9mZXRjaC5pbnRlcmNlcHRGZXRjaCkoZ2xvYmFsLmZldGNoKTtcclxufVxyXG5mdW5jdGlvbiB3cmFwUmVxdWVzdEhhbmRsZXIoaGFuZGxlcikge1xyXG4gICAgcmV0dXJuIChyZXEsIGZuKT0+KDAsIF9jb250ZXh0LndpdGhSZXF1ZXN0KShyZXEsIF9mZXRjaC5yZWFkZXIsICgpPT5oYW5kbGVyKHJlcSwgZm4pKTtcclxufVxyXG5cclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VydmVyLWVkZ2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/experimental/testmode/server-edge.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/safe-buffer/index.js":
/*!*******************************************!*\
  !*** ./node_modules/safe-buffer/index.js ***!
  \*******************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\r\n/* eslint-disable node/no-deprecated-api */\r\nvar buffer = __webpack_require__(/*! buffer */ \"buffer\")\r\nvar Buffer = buffer.Buffer\r\n\r\n// alternative to using Object.keys for old browsers\r\nfunction copyProps (src, dst) {\r\n  for (var key in src) {\r\n    dst[key] = src[key]\r\n  }\r\n}\r\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\r\n  module.exports = buffer\r\n} else {\r\n  // Copy properties from require('buffer')\r\n  copyProps(buffer, exports)\r\n  exports.Buffer = SafeBuffer\r\n}\r\n\r\nfunction SafeBuffer (arg, encodingOrOffset, length) {\r\n  return Buffer(arg, encodingOrOffset, length)\r\n}\r\n\r\nSafeBuffer.prototype = Object.create(Buffer.prototype)\r\n\r\n// Copy static methods from Buffer\r\ncopyProps(Buffer, SafeBuffer)\r\n\r\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\r\n  if (typeof arg === 'number') {\r\n    throw new TypeError('Argument must not be a number')\r\n  }\r\n  return Buffer(arg, encodingOrOffset, length)\r\n}\r\n\r\nSafeBuffer.alloc = function (size, fill, encoding) {\r\n  if (typeof size !== 'number') {\r\n    throw new TypeError('Argument must be a number')\r\n  }\r\n  var buf = Buffer(size)\r\n  if (fill !== undefined) {\r\n    if (typeof encoding === 'string') {\r\n      buf.fill(fill, encoding)\r\n    } else {\r\n      buf.fill(fill)\r\n    }\r\n  } else {\r\n    buf.fill(0)\r\n  }\r\n  return buf\r\n}\r\n\r\nSafeBuffer.allocUnsafe = function (size) {\r\n  if (typeof size !== 'number') {\r\n    throw new TypeError('Argument must be a number')\r\n  }\r\n  return Buffer(size)\r\n}\r\n\r\nSafeBuffer.allocUnsafeSlow = function (size) {\r\n  if (typeof size !== 'number') {\r\n    throw new TypeError('Argument must be a number')\r\n  }\r\n  return buffer.SlowBuffer(size)\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL3NhZmUtYnVmZmVyL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQSxhQUFhLG1CQUFPLENBQUMsc0JBQVE7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBLEVBQUUsY0FBYztBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zYWZlLWJ1ZmZlci9pbmRleC5qcz9iYjRmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBzYWZlLWJ1ZmZlci4gTUlUIExpY2Vuc2UuIEZlcm9zcyBBYm91a2hhZGlqZWggPGh0dHBzOi8vZmVyb3NzLm9yZy9vcGVuc291cmNlPiAqL1xyXG4vKiBlc2xpbnQtZGlzYWJsZSBub2RlL25vLWRlcHJlY2F0ZWQtYXBpICovXHJcbnZhciBidWZmZXIgPSByZXF1aXJlKCdidWZmZXInKVxyXG52YXIgQnVmZmVyID0gYnVmZmVyLkJ1ZmZlclxyXG5cclxuLy8gYWx0ZXJuYXRpdmUgdG8gdXNpbmcgT2JqZWN0LmtleXMgZm9yIG9sZCBicm93c2Vyc1xyXG5mdW5jdGlvbiBjb3B5UHJvcHMgKHNyYywgZHN0KSB7XHJcbiAgZm9yICh2YXIga2V5IGluIHNyYykge1xyXG4gICAgZHN0W2tleV0gPSBzcmNba2V5XVxyXG4gIH1cclxufVxyXG5pZiAoQnVmZmVyLmZyb20gJiYgQnVmZmVyLmFsbG9jICYmIEJ1ZmZlci5hbGxvY1Vuc2FmZSAmJiBCdWZmZXIuYWxsb2NVbnNhZmVTbG93KSB7XHJcbiAgbW9kdWxlLmV4cG9ydHMgPSBidWZmZXJcclxufSBlbHNlIHtcclxuICAvLyBDb3B5IHByb3BlcnRpZXMgZnJvbSByZXF1aXJlKCdidWZmZXInKVxyXG4gIGNvcHlQcm9wcyhidWZmZXIsIGV4cG9ydHMpXHJcbiAgZXhwb3J0cy5CdWZmZXIgPSBTYWZlQnVmZmVyXHJcbn1cclxuXHJcbmZ1bmN0aW9uIFNhZmVCdWZmZXIgKGFyZywgZW5jb2RpbmdPck9mZnNldCwgbGVuZ3RoKSB7XHJcbiAgcmV0dXJuIEJ1ZmZlcihhcmcsIGVuY29kaW5nT3JPZmZzZXQsIGxlbmd0aClcclxufVxyXG5cclxuU2FmZUJ1ZmZlci5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEJ1ZmZlci5wcm90b3R5cGUpXHJcblxyXG4vLyBDb3B5IHN0YXRpYyBtZXRob2RzIGZyb20gQnVmZmVyXHJcbmNvcHlQcm9wcyhCdWZmZXIsIFNhZmVCdWZmZXIpXHJcblxyXG5TYWZlQnVmZmVyLmZyb20gPSBmdW5jdGlvbiAoYXJnLCBlbmNvZGluZ09yT2Zmc2V0LCBsZW5ndGgpIHtcclxuICBpZiAodHlwZW9mIGFyZyA9PT0gJ251bWJlcicpIHtcclxuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0FyZ3VtZW50IG11c3Qgbm90IGJlIGEgbnVtYmVyJylcclxuICB9XHJcbiAgcmV0dXJuIEJ1ZmZlcihhcmcsIGVuY29kaW5nT3JPZmZzZXQsIGxlbmd0aClcclxufVxyXG5cclxuU2FmZUJ1ZmZlci5hbGxvYyA9IGZ1bmN0aW9uIChzaXplLCBmaWxsLCBlbmNvZGluZykge1xyXG4gIGlmICh0eXBlb2Ygc2l6ZSAhPT0gJ251bWJlcicpIHtcclxuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0FyZ3VtZW50IG11c3QgYmUgYSBudW1iZXInKVxyXG4gIH1cclxuICB2YXIgYnVmID0gQnVmZmVyKHNpemUpXHJcbiAgaWYgKGZpbGwgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgaWYgKHR5cGVvZiBlbmNvZGluZyA9PT0gJ3N0cmluZycpIHtcclxuICAgICAgYnVmLmZpbGwoZmlsbCwgZW5jb2RpbmcpXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBidWYuZmlsbChmaWxsKVxyXG4gICAgfVxyXG4gIH0gZWxzZSB7XHJcbiAgICBidWYuZmlsbCgwKVxyXG4gIH1cclxuICByZXR1cm4gYnVmXHJcbn1cclxuXHJcblNhZmVCdWZmZXIuYWxsb2NVbnNhZmUgPSBmdW5jdGlvbiAoc2l6ZSkge1xyXG4gIGlmICh0eXBlb2Ygc2l6ZSAhPT0gJ251bWJlcicpIHtcclxuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0FyZ3VtZW50IG11c3QgYmUgYSBudW1iZXInKVxyXG4gIH1cclxuICByZXR1cm4gQnVmZmVyKHNpemUpXHJcbn1cclxuXHJcblNhZmVCdWZmZXIuYWxsb2NVbnNhZmVTbG93ID0gZnVuY3Rpb24gKHNpemUpIHtcclxuICBpZiAodHlwZW9mIHNpemUgIT09ICdudW1iZXInKSB7XHJcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdBcmd1bWVudCBtdXN0IGJlIGEgbnVtYmVyJylcclxuICB9XHJcbiAgcmV0dXJuIGJ1ZmZlci5TbG93QnVmZmVyKHNpemUpXHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/safe-buffer/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/safer-buffer/safer.js":
/*!********************************************!*\
  !*** ./node_modules/safer-buffer/safer.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* eslint-disable node/no-deprecated-api */\r\n\r\n\r\n\r\nvar buffer = __webpack_require__(/*! buffer */ \"buffer\")\r\nvar Buffer = buffer.Buffer\r\n\r\nvar safer = {}\r\n\r\nvar key\r\n\r\nfor (key in buffer) {\r\n  if (!buffer.hasOwnProperty(key)) continue\r\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\r\n  safer[key] = buffer[key]\r\n}\r\n\r\nvar Safer = safer.Buffer = {}\r\nfor (key in Buffer) {\r\n  if (!Buffer.hasOwnProperty(key)) continue\r\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\r\n  Safer[key] = Buffer[key]\r\n}\r\n\r\nsafer.Buffer.prototype = Buffer.prototype\r\n\r\nif (!Safer.from || Safer.from === Uint8Array.from) {\r\n  Safer.from = function (value, encodingOrOffset, length) {\r\n    if (typeof value === 'number') {\r\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\r\n    }\r\n    if (value && typeof value.length === 'undefined') {\r\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\r\n    }\r\n    return Buffer(value, encodingOrOffset, length)\r\n  }\r\n}\r\n\r\nif (!Safer.alloc) {\r\n  Safer.alloc = function (size, fill, encoding) {\r\n    if (typeof size !== 'number') {\r\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\r\n    }\r\n    if (size < 0 || size >= 2 * (1 << 30)) {\r\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\r\n    }\r\n    var buf = Buffer(size)\r\n    if (!fill || fill.length === 0) {\r\n      buf.fill(0)\r\n    } else if (typeof encoding === 'string') {\r\n      buf.fill(fill, encoding)\r\n    } else {\r\n      buf.fill(fill)\r\n    }\r\n    return buf\r\n  }\r\n}\r\n\r\nif (!safer.kStringMaxLength) {\r\n  try {\r\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\r\n  } catch (e) {\r\n    // we can't determine kStringMaxLength in environments where process.binding\r\n    // is unsupported, so let's not set it\r\n  }\r\n}\r\n\r\nif (!safer.constants) {\r\n  safer.constants = {\r\n    MAX_LENGTH: safer.kMaxLength\r\n  }\r\n  if (safer.kStringMaxLength) {\r\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\r\n  }\r\n}\r\n\r\nmodule.exports = safer\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL3NhZmVyLWJ1ZmZlci9zYWZlci5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ1k7QUFDWjtBQUNBLGFBQWEsbUJBQU8sQ0FBQyxzQkFBUTtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3NhZmVyLWJ1ZmZlci9zYWZlci5qcz9kMjg3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIG5vZGUvbm8tZGVwcmVjYXRlZC1hcGkgKi9cclxuXHJcbid1c2Ugc3RyaWN0J1xyXG5cclxudmFyIGJ1ZmZlciA9IHJlcXVpcmUoJ2J1ZmZlcicpXHJcbnZhciBCdWZmZXIgPSBidWZmZXIuQnVmZmVyXHJcblxyXG52YXIgc2FmZXIgPSB7fVxyXG5cclxudmFyIGtleVxyXG5cclxuZm9yIChrZXkgaW4gYnVmZmVyKSB7XHJcbiAgaWYgKCFidWZmZXIuaGFzT3duUHJvcGVydHkoa2V5KSkgY29udGludWVcclxuICBpZiAoa2V5ID09PSAnU2xvd0J1ZmZlcicgfHwga2V5ID09PSAnQnVmZmVyJykgY29udGludWVcclxuICBzYWZlcltrZXldID0gYnVmZmVyW2tleV1cclxufVxyXG5cclxudmFyIFNhZmVyID0gc2FmZXIuQnVmZmVyID0ge31cclxuZm9yIChrZXkgaW4gQnVmZmVyKSB7XHJcbiAgaWYgKCFCdWZmZXIuaGFzT3duUHJvcGVydHkoa2V5KSkgY29udGludWVcclxuICBpZiAoa2V5ID09PSAnYWxsb2NVbnNhZmUnIHx8IGtleSA9PT0gJ2FsbG9jVW5zYWZlU2xvdycpIGNvbnRpbnVlXHJcbiAgU2FmZXJba2V5XSA9IEJ1ZmZlcltrZXldXHJcbn1cclxuXHJcbnNhZmVyLkJ1ZmZlci5wcm90b3R5cGUgPSBCdWZmZXIucHJvdG90eXBlXHJcblxyXG5pZiAoIVNhZmVyLmZyb20gfHwgU2FmZXIuZnJvbSA9PT0gVWludDhBcnJheS5mcm9tKSB7XHJcbiAgU2FmZXIuZnJvbSA9IGZ1bmN0aW9uICh2YWx1ZSwgZW5jb2RpbmdPck9mZnNldCwgbGVuZ3RoKSB7XHJcbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJykge1xyXG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdUaGUgXCJ2YWx1ZVwiIGFyZ3VtZW50IG11c3Qgbm90IGJlIG9mIHR5cGUgbnVtYmVyLiBSZWNlaXZlZCB0eXBlICcgKyB0eXBlb2YgdmFsdWUpXHJcbiAgICB9XHJcbiAgICBpZiAodmFsdWUgJiYgdHlwZW9mIHZhbHVlLmxlbmd0aCA9PT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIGZpcnN0IGFyZ3VtZW50IG11c3QgYmUgb25lIG9mIHR5cGUgc3RyaW5nLCBCdWZmZXIsIEFycmF5QnVmZmVyLCBBcnJheSwgb3IgQXJyYXktbGlrZSBPYmplY3QuIFJlY2VpdmVkIHR5cGUgJyArIHR5cGVvZiB2YWx1ZSlcclxuICAgIH1cclxuICAgIHJldHVybiBCdWZmZXIodmFsdWUsIGVuY29kaW5nT3JPZmZzZXQsIGxlbmd0aClcclxuICB9XHJcbn1cclxuXHJcbmlmICghU2FmZXIuYWxsb2MpIHtcclxuICBTYWZlci5hbGxvYyA9IGZ1bmN0aW9uIChzaXplLCBmaWxsLCBlbmNvZGluZykge1xyXG4gICAgaWYgKHR5cGVvZiBzaXplICE9PSAnbnVtYmVyJykge1xyXG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdUaGUgXCJzaXplXCIgYXJndW1lbnQgbXVzdCBiZSBvZiB0eXBlIG51bWJlci4gUmVjZWl2ZWQgdHlwZSAnICsgdHlwZW9mIHNpemUpXHJcbiAgICB9XHJcbiAgICBpZiAoc2l6ZSA8IDAgfHwgc2l6ZSA+PSAyICogKDEgPDwgMzApKSB7XHJcbiAgICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdUaGUgdmFsdWUgXCInICsgc2l6ZSArICdcIiBpcyBpbnZhbGlkIGZvciBvcHRpb24gXCJzaXplXCInKVxyXG4gICAgfVxyXG4gICAgdmFyIGJ1ZiA9IEJ1ZmZlcihzaXplKVxyXG4gICAgaWYgKCFmaWxsIHx8IGZpbGwubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgIGJ1Zi5maWxsKDApXHJcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBlbmNvZGluZyA9PT0gJ3N0cmluZycpIHtcclxuICAgICAgYnVmLmZpbGwoZmlsbCwgZW5jb2RpbmcpXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBidWYuZmlsbChmaWxsKVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIGJ1ZlxyXG4gIH1cclxufVxyXG5cclxuaWYgKCFzYWZlci5rU3RyaW5nTWF4TGVuZ3RoKSB7XHJcbiAgdHJ5IHtcclxuICAgIHNhZmVyLmtTdHJpbmdNYXhMZW5ndGggPSBwcm9jZXNzLmJpbmRpbmcoJ2J1ZmZlcicpLmtTdHJpbmdNYXhMZW5ndGhcclxuICB9IGNhdGNoIChlKSB7XHJcbiAgICAvLyB3ZSBjYW4ndCBkZXRlcm1pbmUga1N0cmluZ01heExlbmd0aCBpbiBlbnZpcm9ubWVudHMgd2hlcmUgcHJvY2Vzcy5iaW5kaW5nXHJcbiAgICAvLyBpcyB1bnN1cHBvcnRlZCwgc28gbGV0J3Mgbm90IHNldCBpdFxyXG4gIH1cclxufVxyXG5cclxuaWYgKCFzYWZlci5jb25zdGFudHMpIHtcclxuICBzYWZlci5jb25zdGFudHMgPSB7XHJcbiAgICBNQVhfTEVOR1RIOiBzYWZlci5rTWF4TGVuZ3RoXHJcbiAgfVxyXG4gIGlmIChzYWZlci5rU3RyaW5nTWF4TGVuZ3RoKSB7XHJcbiAgICBzYWZlci5jb25zdGFudHMuTUFYX1NUUklOR19MRU5HVEggPSBzYWZlci5rU3RyaW5nTWF4TGVuZ3RoXHJcbiAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHNhZmVyXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/safer-buffer/safer.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/seq-queue/index.js":
/*!*****************************************!*\
  !*** ./node_modules/seq-queue/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! ./lib/seq-queue */ \"(middleware)/./node_modules/seq-queue/lib/seq-queue.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL3NlcS1xdWV1ZS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxxSEFBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3NlcS1xdWV1ZS9pbmRleC5qcz8zMzU4Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9saWIvc2VxLXF1ZXVlJyk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/seq-queue/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/seq-queue/lib/seq-queue.js":
/*!*************************************************!*\
  !*** ./node_modules/seq-queue/lib/seq-queue.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var EventEmitter = (__webpack_require__(/*! events */ \"events\").EventEmitter);\r\nvar util = __webpack_require__(/*! util */ \"util\");\r\n\r\nvar DEFAULT_TIMEOUT = 3000;\r\nvar INIT_ID = 0;\r\nvar EVENT_CLOSED = 'closed';\r\nvar EVENT_DRAINED = 'drained';\r\n\r\n/**\r\n * Instance a new queue\r\n *\r\n * @param {Number} timeout a global timeout for new queue\r\n * @class\r\n * @constructor\r\n */\r\nvar SeqQueue = function(timeout) {\r\n\tEventEmitter.call(this);\r\n\t\r\n\tif(timeout && timeout > 0) {\r\n\t\tthis.timeout = timeout;\r\n\t} else {\r\n\t\tthis.timeout = DEFAULT_TIMEOUT;\r\n\t}\r\n\t\r\n\tthis.status = SeqQueueManager.STATUS_IDLE;\r\n\tthis.curId = INIT_ID;\r\n\tthis.queue = [];\r\n};\r\nutil.inherits(SeqQueue, EventEmitter);\r\n\r\n/**\r\n * Add a task into queue.\r\n * \r\n * @param fn new request\r\n * @param ontimeout callback when task timeout\r\n * @param timeout timeout for current request. take the global timeout if this is invalid\r\n * @returns true or false\r\n */\r\nSeqQueue.prototype.push = function(fn, ontimeout, timeout) {\r\n\tif(this.status !== SeqQueueManager.STATUS_IDLE && this.status !== SeqQueueManager.STATUS_BUSY) {\r\n\t\t//ignore invalid status\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif(typeof fn !== 'function') {\r\n\t\tthrow new Error('fn should be a function.');\r\n\t}\r\n\tthis.queue.push({fn: fn, ontimeout: ontimeout, timeout: timeout});\r\n\r\n\tif(this.status === SeqQueueManager.STATUS_IDLE) {\r\n\t\tthis.status = SeqQueueManager.STATUS_BUSY;\r\n\t\tvar self = this;\r\n\t\tprocess.nextTick(function() {\r\n\t\t\tself._next(self.curId);\r\n\t\t});\r\n\t}\r\n\treturn true;\r\n};\r\n\r\n/**\r\n * Close queue\r\n * \r\n * @param {Boolean} force if true will close the queue immediately else will execute the rest task in queue\r\n */\r\nSeqQueue.prototype.close = function(force) {\r\n\tif(this.status !== SeqQueueManager.STATUS_IDLE && this.status !== SeqQueueManager.STATUS_BUSY) {\r\n\t\t//ignore invalid status\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tif(force) {\r\n\t\tthis.status = SeqQueueManager.STATUS_DRAINED;\r\n\t\tif(this.timerId) {\r\n\t\t\tclearTimeout(this.timerId);\r\n\t\t\tthis.timerId = undefined;\r\n\t\t}\r\n\t\tthis.emit(EVENT_DRAINED);\r\n\t} else {\r\n\t\tthis.status = SeqQueueManager.STATUS_CLOSED;\r\n\t\tthis.emit(EVENT_CLOSED);\r\n\t}\r\n};\r\n\r\n/**\r\n * Invoke next task\r\n * \r\n * @param {String|Number} tid last executed task id\r\n * @api private\r\n */\r\nSeqQueue.prototype._next = function(tid) {\r\n\tif(tid !== this.curId || this.status !== SeqQueueManager.STATUS_BUSY && this.status !== SeqQueueManager.STATUS_CLOSED) {\r\n\t\t//ignore invalid next call\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tif(this.timerId) {\r\n\t\tclearTimeout(this.timerId);\r\n\t\tthis.timerId = undefined;\r\n\t}\r\n\t\r\n\tvar task = this.queue.shift();\r\n\tif(!task) {\r\n\t\tif(this.status === SeqQueueManager.STATUS_BUSY) {\r\n\t\t\tthis.status = SeqQueueManager.STATUS_IDLE;\r\n\t\t\tthis.curId++;\t//modify curId to invalidate timeout task\r\n\t\t} else {\r\n\t\t\tthis.status = SeqQueueManager.STATUS_DRAINED;\r\n\t\t\tthis.emit(EVENT_DRAINED);\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tvar self = this;\r\n\ttask.id = ++this.curId;\r\n\r\n\tvar timeout = task.timeout > 0 ? task.timeout : this.timeout;\r\n\ttimeout = timeout > 0 ? timeout : DEFAULT_TIMEOUT;\r\n\tthis.timerId = setTimeout(function() {\r\n\t\tprocess.nextTick(function() {\r\n\t\t\tself._next(task.id);\r\n\t\t});\r\n\t\tself.emit('timeout', task);\r\n\t\tif(task.ontimeout) {\r\n\t\t\ttask.ontimeout();\r\n\t\t}\r\n\t}, timeout);\r\n\r\n\ttry {\r\n\t\ttask.fn({\r\n\t\t\tdone: function() {\r\n\t\t\t\tvar res = task.id === self.curId;\r\n\t\t\t\tprocess.nextTick(function() {\r\n\t\t\t\t\tself._next(task.id);\r\n\t\t\t\t});\r\n\t\t\t\treturn res;\r\n\t\t\t}\r\n\t\t});\r\n\t} catch(err) {\r\n\t\tself.emit('error', err, task);\r\n\t\tprocess.nextTick(function() {\r\n\t\t\tself._next(task.id);\r\n\t\t});\r\n\t}\r\n};\r\n\r\n/**\r\n * Queue manager.\r\n * \r\n * @module\r\n */\r\nvar SeqQueueManager = module.exports;\r\n\r\n/**\r\n * Queue status: idle, welcome new tasks\r\n *\r\n * @const\r\n * @type {Number}\r\n * @memberOf SeqQueueManager\r\n */\r\nSeqQueueManager.STATUS_IDLE = 0;\r\n\r\n/**\r\n * Queue status: busy, queue is working for some tasks now\r\n *\r\n * @const\r\n * @type {Number}\r\n * @memberOf SeqQueueManager\r\n */\r\nSeqQueueManager.STATUS_BUSY = 1;\r\n\r\n/**\r\n * Queue status: closed, queue has closed and would not receive task any more \r\n * \t\t\t\t\tand is processing the remaining tasks now.\r\n *\r\n * @const\r\n * @type {Number}\r\n * @memberOf SeqQueueManager\r\n */\r\nSeqQueueManager.STATUS_CLOSED = 2; \r\n\r\n/**\r\n * Queue status: drained, queue is ready to be destroy\r\n *\r\n * @const\r\n * @type {Number}\r\n * @memberOf SeqQueueManager\r\n */\r\nSeqQueueManager.STATUS_DRAINED = 3;\r\n\r\n/**\r\n * Create Sequence queue\r\n * \r\n * @param  {Number} timeout a global timeout for the new queue instance\r\n * @return {Object}         new queue instance\r\n * @memberOf SeqQueueManager\r\n */\r\nSeqQueueManager.createQueue = function(timeout) {\r\n\treturn new SeqQueue(timeout);\r\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/seq-queue/lib/seq-queue.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/sqlstring/index.js":
/*!*****************************************!*\
  !*** ./node_modules/sqlstring/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! ./lib/SqlString */ \"(middleware)/./node_modules/sqlstring/lib/SqlString.js\");\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL3NxbHN0cmluZy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxxSEFBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3NxbHN0cmluZy9pbmRleC5qcz8zNjU1Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9saWIvU3FsU3RyaW5nJyk7XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/sqlstring/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/sqlstring/lib/SqlString.js":
/*!*************************************************!*\
  !*** ./node_modules/sqlstring/lib/SqlString.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\nvar SqlString  = exports;\r\n\r\nvar ID_GLOBAL_REGEXP    = /`/g;\r\nvar QUAL_GLOBAL_REGEXP  = /\\./g;\r\nvar CHARS_GLOBAL_REGEXP = /[\\0\\b\\t\\n\\r\\x1a\\\"\\'\\\\]/g; // eslint-disable-line no-control-regex\r\nvar CHARS_ESCAPE_MAP    = {\r\n  '\\0'   : '\\\\0',\r\n  '\\b'   : '\\\\b',\r\n  '\\t'   : '\\\\t',\r\n  '\\n'   : '\\\\n',\r\n  '\\r'   : '\\\\r',\r\n  '\\x1a' : '\\\\Z',\r\n  '\"'    : '\\\\\"',\r\n  '\\''   : '\\\\\\'',\r\n  '\\\\'   : '\\\\\\\\'\r\n};\r\n\r\nSqlString.escapeId = function escapeId(val, forbidQualified) {\r\n  if (Array.isArray(val)) {\r\n    var sql = '';\r\n\r\n    for (var i = 0; i < val.length; i++) {\r\n      sql += (i === 0 ? '' : ', ') + SqlString.escapeId(val[i], forbidQualified);\r\n    }\r\n\r\n    return sql;\r\n  } else if (forbidQualified) {\r\n    return '`' + String(val).replace(ID_GLOBAL_REGEXP, '``') + '`';\r\n  } else {\r\n    return '`' + String(val).replace(ID_GLOBAL_REGEXP, '``').replace(QUAL_GLOBAL_REGEXP, '`.`') + '`';\r\n  }\r\n};\r\n\r\nSqlString.escape = function escape(val, stringifyObjects, timeZone) {\r\n  if (val === undefined || val === null) {\r\n    return 'NULL';\r\n  }\r\n\r\n  switch (typeof val) {\r\n    case 'boolean': return (val) ? 'true' : 'false';\r\n    case 'number': return val + '';\r\n    case 'object':\r\n      if (Object.prototype.toString.call(val) === '[object Date]') {\r\n        return SqlString.dateToString(val, timeZone || 'local');\r\n      } else if (Array.isArray(val)) {\r\n        return SqlString.arrayToList(val, timeZone);\r\n      } else if (Buffer.isBuffer(val)) {\r\n        return SqlString.bufferToString(val);\r\n      } else if (typeof val.toSqlString === 'function') {\r\n        return String(val.toSqlString());\r\n      } else if (stringifyObjects) {\r\n        return escapeString(val.toString());\r\n      } else {\r\n        return SqlString.objectToValues(val, timeZone);\r\n      }\r\n    default: return escapeString(val);\r\n  }\r\n};\r\n\r\nSqlString.arrayToList = function arrayToList(array, timeZone) {\r\n  var sql = '';\r\n\r\n  for (var i = 0; i < array.length; i++) {\r\n    var val = array[i];\r\n\r\n    if (Array.isArray(val)) {\r\n      sql += (i === 0 ? '' : ', ') + '(' + SqlString.arrayToList(val, timeZone) + ')';\r\n    } else {\r\n      sql += (i === 0 ? '' : ', ') + SqlString.escape(val, true, timeZone);\r\n    }\r\n  }\r\n\r\n  return sql;\r\n};\r\n\r\nSqlString.format = function format(sql, values, stringifyObjects, timeZone) {\r\n  if (values == null) {\r\n    return sql;\r\n  }\r\n\r\n  if (!Array.isArray(values)) {\r\n    values = [values];\r\n  }\r\n\r\n  var chunkIndex        = 0;\r\n  var placeholdersRegex = /\\?+/g;\r\n  var result            = '';\r\n  var valuesIndex       = 0;\r\n  var match;\r\n\r\n  while (valuesIndex < values.length && (match = placeholdersRegex.exec(sql))) {\r\n    var len = match[0].length;\r\n\r\n    if (len > 2) {\r\n      continue;\r\n    }\r\n\r\n    var value = len === 2\r\n      ? SqlString.escapeId(values[valuesIndex])\r\n      : SqlString.escape(values[valuesIndex], stringifyObjects, timeZone);\r\n\r\n    result += sql.slice(chunkIndex, match.index) + value;\r\n    chunkIndex = placeholdersRegex.lastIndex;\r\n    valuesIndex++;\r\n  }\r\n\r\n  if (chunkIndex === 0) {\r\n    // Nothing was replaced\r\n    return sql;\r\n  }\r\n\r\n  if (chunkIndex < sql.length) {\r\n    return result + sql.slice(chunkIndex);\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nSqlString.dateToString = function dateToString(date, timeZone) {\r\n  var dt = new Date(date);\r\n\r\n  if (isNaN(dt.getTime())) {\r\n    return 'NULL';\r\n  }\r\n\r\n  var year;\r\n  var month;\r\n  var day;\r\n  var hour;\r\n  var minute;\r\n  var second;\r\n  var millisecond;\r\n\r\n  if (timeZone === 'local') {\r\n    year        = dt.getFullYear();\r\n    month       = dt.getMonth() + 1;\r\n    day         = dt.getDate();\r\n    hour        = dt.getHours();\r\n    minute      = dt.getMinutes();\r\n    second      = dt.getSeconds();\r\n    millisecond = dt.getMilliseconds();\r\n  } else {\r\n    var tz = convertTimezone(timeZone);\r\n\r\n    if (tz !== false && tz !== 0) {\r\n      dt.setTime(dt.getTime() + (tz * 60000));\r\n    }\r\n\r\n    year       = dt.getUTCFullYear();\r\n    month       = dt.getUTCMonth() + 1;\r\n    day         = dt.getUTCDate();\r\n    hour        = dt.getUTCHours();\r\n    minute      = dt.getUTCMinutes();\r\n    second      = dt.getUTCSeconds();\r\n    millisecond = dt.getUTCMilliseconds();\r\n  }\r\n\r\n  // YYYY-MM-DD HH:mm:ss.mmm\r\n  var str = zeroPad(year, 4) + '-' + zeroPad(month, 2) + '-' + zeroPad(day, 2) + ' ' +\r\n    zeroPad(hour, 2) + ':' + zeroPad(minute, 2) + ':' + zeroPad(second, 2) + '.' +\r\n    zeroPad(millisecond, 3);\r\n\r\n  return escapeString(str);\r\n};\r\n\r\nSqlString.bufferToString = function bufferToString(buffer) {\r\n  return 'X' + escapeString(buffer.toString('hex'));\r\n};\r\n\r\nSqlString.objectToValues = function objectToValues(object, timeZone) {\r\n  var sql = '';\r\n\r\n  for (var key in object) {\r\n    var val = object[key];\r\n\r\n    if (typeof val === 'function') {\r\n      continue;\r\n    }\r\n\r\n    sql += (sql.length === 0 ? '' : ', ') + SqlString.escapeId(key) + ' = ' + SqlString.escape(val, true, timeZone);\r\n  }\r\n\r\n  return sql;\r\n};\r\n\r\nSqlString.raw = function raw(sql) {\r\n  if (typeof sql !== 'string') {\r\n    throw new TypeError('argument sql must be a string');\r\n  }\r\n\r\n  return {\r\n    toSqlString: function toSqlString() { return sql; }\r\n  };\r\n};\r\n\r\nfunction escapeString(val) {\r\n  var chunkIndex = CHARS_GLOBAL_REGEXP.lastIndex = 0;\r\n  var escapedVal = '';\r\n  var match;\r\n\r\n  while ((match = CHARS_GLOBAL_REGEXP.exec(val))) {\r\n    escapedVal += val.slice(chunkIndex, match.index) + CHARS_ESCAPE_MAP[match[0]];\r\n    chunkIndex = CHARS_GLOBAL_REGEXP.lastIndex;\r\n  }\r\n\r\n  if (chunkIndex === 0) {\r\n    // Nothing was escaped\r\n    return \"'\" + val + \"'\";\r\n  }\r\n\r\n  if (chunkIndex < val.length) {\r\n    return \"'\" + escapedVal + val.slice(chunkIndex) + \"'\";\r\n  }\r\n\r\n  return \"'\" + escapedVal + \"'\";\r\n}\r\n\r\nfunction zeroPad(number, length) {\r\n  number = number.toString();\r\n  while (number.length < length) {\r\n    number = '0' + number;\r\n  }\r\n\r\n  return number;\r\n}\r\n\r\nfunction convertTimezone(tz) {\r\n  if (tz === 'Z') {\r\n    return 0;\r\n  }\r\n\r\n  var m = tz.match(/([\\+\\-\\s])(\\d\\d):?(\\d\\d)?/);\r\n  if (m) {\r\n    return (m[1] === '-' ? -1 : 1) * (parseInt(m[2], 10) + ((m[3] ? parseInt(m[3], 10) : 0) / 60)) * 60;\r\n  }\r\n  return false;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/sqlstring/lib/SqlString.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/string_decoder/lib/string_decoder.js":
/*!***********************************************************!*\
  !*** ./node_modules/string_decoder/lib/string_decoder.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n\r\n\r\n/*<replacement>*/\r\n\r\nvar Buffer = (__webpack_require__(/*! safe-buffer */ \"(middleware)/./node_modules/safe-buffer/index.js\").Buffer);\r\n/*</replacement>*/\r\n\r\nvar isEncoding = Buffer.isEncoding || function (encoding) {\r\n  encoding = '' + encoding;\r\n  switch (encoding && encoding.toLowerCase()) {\r\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\r\n      return true;\r\n    default:\r\n      return false;\r\n  }\r\n};\r\n\r\nfunction _normalizeEncoding(enc) {\r\n  if (!enc) return 'utf8';\r\n  var retried;\r\n  while (true) {\r\n    switch (enc) {\r\n      case 'utf8':\r\n      case 'utf-8':\r\n        return 'utf8';\r\n      case 'ucs2':\r\n      case 'ucs-2':\r\n      case 'utf16le':\r\n      case 'utf-16le':\r\n        return 'utf16le';\r\n      case 'latin1':\r\n      case 'binary':\r\n        return 'latin1';\r\n      case 'base64':\r\n      case 'ascii':\r\n      case 'hex':\r\n        return enc;\r\n      default:\r\n        if (retried) return; // undefined\r\n        enc = ('' + enc).toLowerCase();\r\n        retried = true;\r\n    }\r\n  }\r\n};\r\n\r\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\r\n// modules monkey-patch it to support additional encodings\r\nfunction normalizeEncoding(enc) {\r\n  var nenc = _normalizeEncoding(enc);\r\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\r\n  return nenc || enc;\r\n}\r\n\r\n// StringDecoder provides an interface for efficiently splitting a series of\r\n// buffers into a series of JS strings without breaking apart multi-byte\r\n// characters.\r\nexports.StringDecoder = StringDecoder;\r\nfunction StringDecoder(encoding) {\r\n  this.encoding = normalizeEncoding(encoding);\r\n  var nb;\r\n  switch (this.encoding) {\r\n    case 'utf16le':\r\n      this.text = utf16Text;\r\n      this.end = utf16End;\r\n      nb = 4;\r\n      break;\r\n    case 'utf8':\r\n      this.fillLast = utf8FillLast;\r\n      nb = 4;\r\n      break;\r\n    case 'base64':\r\n      this.text = base64Text;\r\n      this.end = base64End;\r\n      nb = 3;\r\n      break;\r\n    default:\r\n      this.write = simpleWrite;\r\n      this.end = simpleEnd;\r\n      return;\r\n  }\r\n  this.lastNeed = 0;\r\n  this.lastTotal = 0;\r\n  this.lastChar = Buffer.allocUnsafe(nb);\r\n}\r\n\r\nStringDecoder.prototype.write = function (buf) {\r\n  if (buf.length === 0) return '';\r\n  var r;\r\n  var i;\r\n  if (this.lastNeed) {\r\n    r = this.fillLast(buf);\r\n    if (r === undefined) return '';\r\n    i = this.lastNeed;\r\n    this.lastNeed = 0;\r\n  } else {\r\n    i = 0;\r\n  }\r\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\r\n  return r || '';\r\n};\r\n\r\nStringDecoder.prototype.end = utf8End;\r\n\r\n// Returns only complete characters in a Buffer\r\nStringDecoder.prototype.text = utf8Text;\r\n\r\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\r\nStringDecoder.prototype.fillLast = function (buf) {\r\n  if (this.lastNeed <= buf.length) {\r\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\r\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\r\n  }\r\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\r\n  this.lastNeed -= buf.length;\r\n};\r\n\r\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\r\n// continuation byte. If an invalid byte is detected, -2 is returned.\r\nfunction utf8CheckByte(byte) {\r\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\r\n  return byte >> 6 === 0x02 ? -1 : -2;\r\n}\r\n\r\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\r\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\r\n// needed to complete the UTF-8 character (if applicable) are returned.\r\nfunction utf8CheckIncomplete(self, buf, i) {\r\n  var j = buf.length - 1;\r\n  if (j < i) return 0;\r\n  var nb = utf8CheckByte(buf[j]);\r\n  if (nb >= 0) {\r\n    if (nb > 0) self.lastNeed = nb - 1;\r\n    return nb;\r\n  }\r\n  if (--j < i || nb === -2) return 0;\r\n  nb = utf8CheckByte(buf[j]);\r\n  if (nb >= 0) {\r\n    if (nb > 0) self.lastNeed = nb - 2;\r\n    return nb;\r\n  }\r\n  if (--j < i || nb === -2) return 0;\r\n  nb = utf8CheckByte(buf[j]);\r\n  if (nb >= 0) {\r\n    if (nb > 0) {\r\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\r\n    }\r\n    return nb;\r\n  }\r\n  return 0;\r\n}\r\n\r\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\r\n// needed or are available. If we see a non-continuation byte where we expect\r\n// one, we \"replace\" the validated continuation bytes we've seen so far with\r\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\r\n// behavior. The continuation byte check is included three times in the case\r\n// where all of the continuation bytes for a character exist in the same buffer.\r\n// It is also done this way as a slight performance increase instead of using a\r\n// loop.\r\nfunction utf8CheckExtraBytes(self, buf, p) {\r\n  if ((buf[0] & 0xC0) !== 0x80) {\r\n    self.lastNeed = 0;\r\n    return '\\ufffd';\r\n  }\r\n  if (self.lastNeed > 1 && buf.length > 1) {\r\n    if ((buf[1] & 0xC0) !== 0x80) {\r\n      self.lastNeed = 1;\r\n      return '\\ufffd';\r\n    }\r\n    if (self.lastNeed > 2 && buf.length > 2) {\r\n      if ((buf[2] & 0xC0) !== 0x80) {\r\n        self.lastNeed = 2;\r\n        return '\\ufffd';\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\r\nfunction utf8FillLast(buf) {\r\n  var p = this.lastTotal - this.lastNeed;\r\n  var r = utf8CheckExtraBytes(this, buf, p);\r\n  if (r !== undefined) return r;\r\n  if (this.lastNeed <= buf.length) {\r\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\r\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\r\n  }\r\n  buf.copy(this.lastChar, p, 0, buf.length);\r\n  this.lastNeed -= buf.length;\r\n}\r\n\r\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\r\n// partial character, the character's bytes are buffered until the required\r\n// number of bytes are available.\r\nfunction utf8Text(buf, i) {\r\n  var total = utf8CheckIncomplete(this, buf, i);\r\n  if (!this.lastNeed) return buf.toString('utf8', i);\r\n  this.lastTotal = total;\r\n  var end = buf.length - (total - this.lastNeed);\r\n  buf.copy(this.lastChar, 0, end);\r\n  return buf.toString('utf8', i, end);\r\n}\r\n\r\n// For UTF-8, a replacement character is added when ending on a partial\r\n// character.\r\nfunction utf8End(buf) {\r\n  var r = buf && buf.length ? this.write(buf) : '';\r\n  if (this.lastNeed) return r + '\\ufffd';\r\n  return r;\r\n}\r\n\r\n// UTF-16LE typically needs two bytes per character, but even if we have an even\r\n// number of bytes available, we need to check if we end on a leading/high\r\n// surrogate. In that case, we need to wait for the next two bytes in order to\r\n// decode the last character properly.\r\nfunction utf16Text(buf, i) {\r\n  if ((buf.length - i) % 2 === 0) {\r\n    var r = buf.toString('utf16le', i);\r\n    if (r) {\r\n      var c = r.charCodeAt(r.length - 1);\r\n      if (c >= 0xD800 && c <= 0xDBFF) {\r\n        this.lastNeed = 2;\r\n        this.lastTotal = 4;\r\n        this.lastChar[0] = buf[buf.length - 2];\r\n        this.lastChar[1] = buf[buf.length - 1];\r\n        return r.slice(0, -1);\r\n      }\r\n    }\r\n    return r;\r\n  }\r\n  this.lastNeed = 1;\r\n  this.lastTotal = 2;\r\n  this.lastChar[0] = buf[buf.length - 1];\r\n  return buf.toString('utf16le', i, buf.length - 1);\r\n}\r\n\r\n// For UTF-16LE we do not explicitly append special replacement characters if we\r\n// end on a partial character, we simply let v8 handle that.\r\nfunction utf16End(buf) {\r\n  var r = buf && buf.length ? this.write(buf) : '';\r\n  if (this.lastNeed) {\r\n    var end = this.lastTotal - this.lastNeed;\r\n    return r + this.lastChar.toString('utf16le', 0, end);\r\n  }\r\n  return r;\r\n}\r\n\r\nfunction base64Text(buf, i) {\r\n  var n = (buf.length - i) % 3;\r\n  if (n === 0) return buf.toString('base64', i);\r\n  this.lastNeed = 3 - n;\r\n  this.lastTotal = 3;\r\n  if (n === 1) {\r\n    this.lastChar[0] = buf[buf.length - 1];\r\n  } else {\r\n    this.lastChar[0] = buf[buf.length - 2];\r\n    this.lastChar[1] = buf[buf.length - 1];\r\n  }\r\n  return buf.toString('base64', i, buf.length - n);\r\n}\r\n\r\nfunction base64End(buf) {\r\n  var r = buf && buf.length ? this.write(buf) : '';\r\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\r\n  return r;\r\n}\r\n\r\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\r\nfunction simpleWrite(buf) {\r\n  return buf.toString(this.encoding);\r\n}\r\n\r\nfunction simpleEnd(buf) {\r\n  return buf && buf.length ? this.write(buf) : '';\r\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/string_decoder/lib/string_decoder.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/process/browser.js":
/*!*********************************************!*\
  !*** ../../node_modules/process/browser.js ***!
  \*********************************************/
/***/ ((module) => {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/process/browser.js\n");

/***/ }),

/***/ "(shared)/./node_modules/next/dist/esm/client/components/async-local-storage.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/async-local-storage.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAsyncLocalStorage: () => (/* binding */ createAsyncLocalStorage)\n/* harmony export */ });\nconst sharedAsyncLocalStorageNotAvailableError = new Error(\"Invariant: AsyncLocalStorage accessed in runtime where it is not available\");\nclass FakeAsyncLocalStorage {\n    disable() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    getStore() {\n        // This fake implementation of AsyncLocalStorage always returns `undefined`.\n        return undefined;\n    }\n    run() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    exit() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    enterWith() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n}\nconst maybeGlobalAsyncLocalStorage = globalThis.AsyncLocalStorage;\nfunction createAsyncLocalStorage() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return new maybeGlobalAsyncLocalStorage();\n    }\n    return new FakeAsyncLocalStorage();\n} //# sourceMappingURL=async-local-storage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNoYXJlZCkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9jbGllbnQvY29tcG9uZW50cy9hc3luYy1sb2NhbC1zdG9yYWdlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFFQSxNQUFNQSwyQ0FBMkMsSUFBSUMsTUFDbkQ7QUFHRixNQUFNQztJQUdKQyxVQUFnQjtRQUNkLE1BQU1IO0lBQ1I7SUFFQUksV0FBOEI7UUFDNUIsNEVBQTRFO1FBQzVFLE9BQU9DO0lBQ1Q7SUFFQUMsTUFBWTtRQUNWLE1BQU1OO0lBQ1I7SUFFQU8sT0FBYTtRQUNYLE1BQU1QO0lBQ1I7SUFFQVEsWUFBa0I7UUFDaEIsTUFBTVI7SUFDUjtBQUNGO0FBRUEsTUFBTVMsK0JBQStCQyxXQUFvQkMsaUJBQWlCO0FBRW5FLFNBQVNDO0lBR2QsSUFBSUgsOEJBQThCO1FBQ2hDLE9BQU8sSUFBSUE7SUFDYjtJQUNBLE9BQU8sSUFBSVA7QUFDYiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vLi4vc3JjL2NsaWVudC9jb21wb25lbnRzL2FzeW5jLWxvY2FsLXN0b3JhZ2UudHM/OTdmNiJdLCJuYW1lcyI6WyJzaGFyZWRBc3luY0xvY2FsU3RvcmFnZU5vdEF2YWlsYWJsZUVycm9yIiwiRXJyb3IiLCJGYWtlQXN5bmNMb2NhbFN0b3JhZ2UiLCJkaXNhYmxlIiwiZ2V0U3RvcmUiLCJ1bmRlZmluZWQiLCJydW4iLCJleGl0IiwiZW50ZXJXaXRoIiwibWF5YmVHbG9iYWxBc3luY0xvY2FsU3RvcmFnZSIsImdsb2JhbFRoaXMiLCJBc3luY0xvY2FsU3RvcmFnZSIsImNyZWF0ZUFzeW5jTG9jYWxTdG9yYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(shared)/./node_modules/next/dist/esm/client/components/async-local-storage.js\n");

/***/ }),

/***/ "(shared)/./node_modules/next/dist/esm/client/components/request-async-storage-instance.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/request-async-storage-instance.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var _async_local_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./async-local-storage */ \"(shared)/./node_modules/next/dist/esm/client/components/async-local-storage.js\");\n\nconst requestAsyncStorage = (0,_async_local_storage__WEBPACK_IMPORTED_MODULE_0__.createAsyncLocalStorage)(); //# sourceMappingURL=request-async-storage-instance.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNoYXJlZCkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9jbGllbnQvY29tcG9uZW50cy9yZXF1ZXN0LWFzeW5jLXN0b3JhZ2UtaW5zdGFuY2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBK0Q7QUFHeEQsTUFBTUMsc0JBQ1hELDZFQUFBQSxHQUF5QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vLi4vc3JjL2NsaWVudC9jb21wb25lbnRzL3JlcXVlc3QtYXN5bmMtc3RvcmFnZS1pbnN0YW5jZS50cz8yOTk5Il0sIm5hbWVzIjpbImNyZWF0ZUFzeW5jTG9jYWxTdG9yYWdlIiwicmVxdWVzdEFzeW5jU3RvcmFnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(shared)/./node_modules/next/dist/esm/client/components/request-async-storage-instance.js\n");

/***/ }),

/***/ "(shared)/./node_modules/next/dist/esm/client/components/static-generation-async-storage-instance.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/static-generation-async-storage-instance.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var _async_local_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./async-local-storage */ \"(shared)/./node_modules/next/dist/esm/client/components/async-local-storage.js\");\n\nconst staticGenerationAsyncStorage = (0,_async_local_storage__WEBPACK_IMPORTED_MODULE_0__.createAsyncLocalStorage)(); //# sourceMappingURL=static-generation-async-storage-instance.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNoYXJlZCkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9jbGllbnQvY29tcG9uZW50cy9zdGF0aWMtZ2VuZXJhdGlvbi1hc3luYy1zdG9yYWdlLWluc3RhbmNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQytEO0FBRXhELE1BQU1DLCtCQUNYRCw2RUFBQUEsR0FBeUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uL3NyYy9jbGllbnQvY29tcG9uZW50cy9zdGF0aWMtZ2VuZXJhdGlvbi1hc3luYy1zdG9yYWdlLWluc3RhbmNlLnRzP2Y3MjYiXSwibmFtZXMiOlsiY3JlYXRlQXN5bmNMb2NhbFN0b3JhZ2UiLCJzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(shared)/./node_modules/next/dist/esm/client/components/static-generation-async-storage-instance.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/long/umd/index.js":
/*!****************************************!*\
  !*** ./node_modules/long/umd/index.js ***!
  \****************************************/
/***/ (function(module, exports) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// GENERATED FILE. DO NOT EDIT.\r\n(function (global, factory) {\r\n  function preferDefault(exports) {\r\n    return exports.default || exports;\r\n  }\r\n  if (true) {\r\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\r\n      var exports = {};\r\n      factory(exports);\r\n      return preferDefault(exports);\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n  } else {}\r\n})(\r\n  typeof globalThis !== \"undefined\"\r\n    ? globalThis\r\n    : typeof self !== \"undefined\"\r\n      ? self\r\n      : this,\r\n  function (_exports) {\r\n    \"use strict\";\r\n\r\n    Object.defineProperty(_exports, \"__esModule\", {\r\n      value: true,\r\n    });\r\n    _exports.default = void 0;\r\n    /**\r\n     * @license\r\n     * Copyright 2009 The Closure Library Authors\r\n     * Copyright 2020 Daniel Wirtz / The long.js Authors.\r\n     *\r\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n     * you may not use this file except in compliance with the License.\r\n     * You may obtain a copy of the License at\r\n     *\r\n     *     http://www.apache.org/licenses/LICENSE-2.0\r\n     *\r\n     * Unless required by applicable law or agreed to in writing, software\r\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n     * See the License for the specific language governing permissions and\r\n     * limitations under the License.\r\n     *\r\n     * SPDX-License-Identifier: Apache-2.0\r\n     */\r\n\r\n    // WebAssembly optimizations to do native i64 multiplication and divide\r\n    var wasm = null;\r\n    try {\r\n      wasm = new WebAssembly.Instance(\r\n        new WebAssembly.Module(\r\n          new Uint8Array([\r\n            // \\0asm\r\n            0, 97, 115, 109,\r\n            // version 1\r\n            1, 0, 0, 0,\r\n            // section \"type\"\r\n            1, 13, 2,\r\n            // 0, () => i32\r\n            96, 0, 1, 127,\r\n            // 1, (i32, i32, i32, i32) => i32\r\n            96, 4, 127, 127, 127, 127, 1, 127,\r\n            // section \"function\"\r\n            3, 7, 6,\r\n            // 0, type 0\r\n            0,\r\n            // 1, type 1\r\n            1,\r\n            // 2, type 1\r\n            1,\r\n            // 3, type 1\r\n            1,\r\n            // 4, type 1\r\n            1,\r\n            // 5, type 1\r\n            1,\r\n            // section \"global\"\r\n            6, 6, 1,\r\n            // 0, \"high\", mutable i32\r\n            127, 1, 65, 0, 11,\r\n            // section \"export\"\r\n            7, 50, 6,\r\n            // 0, \"mul\"\r\n            3, 109, 117, 108, 0, 1,\r\n            // 1, \"div_s\"\r\n            5, 100, 105, 118, 95, 115, 0, 2,\r\n            // 2, \"div_u\"\r\n            5, 100, 105, 118, 95, 117, 0, 3,\r\n            // 3, \"rem_s\"\r\n            5, 114, 101, 109, 95, 115, 0, 4,\r\n            // 4, \"rem_u\"\r\n            5, 114, 101, 109, 95, 117, 0, 5,\r\n            // 5, \"get_high\"\r\n            8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0,\r\n            // section \"code\"\r\n            10, 191, 1, 6,\r\n            // 0, \"get_high\"\r\n            4, 0, 35, 0, 11,\r\n            // 1, \"mul\"\r\n            36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173,\r\n            32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0,\r\n            32, 4, 167, 11,\r\n            // 2, \"div_s\"\r\n            36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173,\r\n            32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0,\r\n            32, 4, 167, 11,\r\n            // 3, \"div_u\"\r\n            36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173,\r\n            32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0,\r\n            32, 4, 167, 11,\r\n            // 4, \"rem_s\"\r\n            36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173,\r\n            32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0,\r\n            32, 4, 167, 11,\r\n            // 5, \"rem_u\"\r\n            36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173,\r\n            32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0,\r\n            32, 4, 167, 11,\r\n          ]),\r\n        ),\r\n        {},\r\n      ).exports;\r\n    } catch {\r\n      // no wasm support :(\r\n    }\r\n\r\n    /**\r\n     * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n     *  See the from* functions below for more convenient ways of constructing Longs.\r\n     * @exports Long\r\n     * @class A Long class for representing a 64 bit two's-complement integer value.\r\n     * @param {number} low The low (signed) 32 bits of the long\r\n     * @param {number} high The high (signed) 32 bits of the long\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n     * @constructor\r\n     */\r\n    function Long(low, high, unsigned) {\r\n      /**\r\n       * The low 32 bits as a signed value.\r\n       * @type {number}\r\n       */\r\n      this.low = low | 0;\r\n\r\n      /**\r\n       * The high 32 bits as a signed value.\r\n       * @type {number}\r\n       */\r\n      this.high = high | 0;\r\n\r\n      /**\r\n       * Whether unsigned or not.\r\n       * @type {boolean}\r\n       */\r\n      this.unsigned = !!unsigned;\r\n    }\r\n\r\n    // The internal representation of a long is the two given signed, 32-bit values.\r\n    // We use 32-bit pieces because these are the size of integers on which\r\n    // Javascript performs bit-operations.  For operations like addition and\r\n    // multiplication, we split each number into 16 bit pieces, which can easily be\r\n    // multiplied within Javascript's floating-point representation without overflow\r\n    // or change in sign.\r\n    //\r\n    // In the algorithms below, we frequently reduce the negative case to the\r\n    // positive case by negating the input(s) and then post-processing the result.\r\n    // Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n    // (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n    // a positive number, it overflows back into a negative).  Not handling this\r\n    // case would often result in infinite recursion.\r\n    //\r\n    // Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n    // methods on which they depend.\r\n\r\n    /**\r\n     * An indicator used to reliably determine if an object is a Long or not.\r\n     * @type {boolean}\r\n     * @const\r\n     * @private\r\n     */\r\n    Long.prototype.__isLong__;\r\n    Object.defineProperty(Long.prototype, \"__isLong__\", {\r\n      value: true,\r\n    });\r\n\r\n    /**\r\n     * @function\r\n     * @param {*} obj Object\r\n     * @returns {boolean}\r\n     * @inner\r\n     */\r\n    function isLong(obj) {\r\n      return (obj && obj[\"__isLong__\"]) === true;\r\n    }\r\n\r\n    /**\r\n     * @function\r\n     * @param {*} value number\r\n     * @returns {number}\r\n     * @inner\r\n     */\r\n    function ctz32(value) {\r\n      var c = Math.clz32(value & -value);\r\n      return value ? 31 - c : c;\r\n    }\r\n\r\n    /**\r\n     * Tests if the specified object is a Long.\r\n     * @function\r\n     * @param {*} obj Object\r\n     * @returns {boolean}\r\n     */\r\n    Long.isLong = isLong;\r\n\r\n    /**\r\n     * A cache of the Long representations of small integer values.\r\n     * @type {!Object}\r\n     * @inner\r\n     */\r\n    var INT_CACHE = {};\r\n\r\n    /**\r\n     * A cache of the Long representations of small unsigned integer values.\r\n     * @type {!Object}\r\n     * @inner\r\n     */\r\n    var UINT_CACHE = {};\r\n\r\n    /**\r\n     * @param {number} value\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromInt(value, unsigned) {\r\n      var obj, cachedObj, cache;\r\n      if (unsigned) {\r\n        value >>>= 0;\r\n        if ((cache = 0 <= value && value < 256)) {\r\n          cachedObj = UINT_CACHE[value];\r\n          if (cachedObj) return cachedObj;\r\n        }\r\n        obj = fromBits(value, 0, true);\r\n        if (cache) UINT_CACHE[value] = obj;\r\n        return obj;\r\n      } else {\r\n        value |= 0;\r\n        if ((cache = -128 <= value && value < 128)) {\r\n          cachedObj = INT_CACHE[value];\r\n          if (cachedObj) return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache) INT_CACHE[value] = obj;\r\n        return obj;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representing the given 32 bit integer value.\r\n     * @function\r\n     * @param {number} value The 32 bit integer in question\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromInt = fromInt;\r\n\r\n    /**\r\n     * @param {number} value\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromNumber(value, unsigned) {\r\n      if (isNaN(value)) return unsigned ? UZERO : ZERO;\r\n      if (unsigned) {\r\n        if (value < 0) return UZERO;\r\n        if (value >= TWO_PWR_64_DBL) return MAX_UNSIGNED_VALUE;\r\n      } else {\r\n        if (value <= -TWO_PWR_63_DBL) return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL) return MAX_VALUE;\r\n      }\r\n      if (value < 0) return fromNumber(-value, unsigned).neg();\r\n      return fromBits(\r\n        value % TWO_PWR_32_DBL | 0,\r\n        (value / TWO_PWR_32_DBL) | 0,\r\n        unsigned,\r\n      );\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n     * @function\r\n     * @param {number} value The number in question\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromNumber = fromNumber;\r\n\r\n    /**\r\n     * @param {number} lowBits\r\n     * @param {number} highBits\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromBits(lowBits, highBits, unsigned) {\r\n      return new Long(lowBits, highBits, unsigned);\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n     *  assumed to use 32 bits.\r\n     * @function\r\n     * @param {number} lowBits The low 32 bits\r\n     * @param {number} highBits The high 32 bits\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromBits = fromBits;\r\n\r\n    /**\r\n     * @function\r\n     * @param {number} base\r\n     * @param {number} exponent\r\n     * @returns {number}\r\n     * @inner\r\n     */\r\n    var pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n    /**\r\n     * @param {string} str\r\n     * @param {(boolean|number)=} unsigned\r\n     * @param {number=} radix\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromString(str, unsigned, radix) {\r\n      if (str.length === 0) throw Error(\"empty string\");\r\n      if (typeof unsigned === \"number\") {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned;\r\n        unsigned = false;\r\n      } else {\r\n        unsigned = !!unsigned;\r\n      }\r\n      if (\r\n        str === \"NaN\" ||\r\n        str === \"Infinity\" ||\r\n        str === \"+Infinity\" ||\r\n        str === \"-Infinity\"\r\n      )\r\n        return unsigned ? UZERO : ZERO;\r\n      radix = radix || 10;\r\n      if (radix < 2 || 36 < radix) throw RangeError(\"radix\");\r\n      var p;\r\n      if ((p = str.indexOf(\"-\")) > 0) throw Error(\"interior hyphen\");\r\n      else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n      }\r\n\r\n      // Do several (8) digits each time through the loop, so as to\r\n      // minimize the calls to the very expensive emulated div.\r\n      var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n      var result = ZERO;\r\n      for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n          value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n          var power = fromNumber(pow_dbl(radix, size));\r\n          result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n          result = result.mul(radixToPower);\r\n          result = result.add(fromNumber(value));\r\n        }\r\n      }\r\n      result.unsigned = unsigned;\r\n      return result;\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representation of the given string, written using the specified radix.\r\n     * @function\r\n     * @param {string} str The textual representation of the Long\r\n     * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n     * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromString = fromString;\r\n\r\n    /**\r\n     * @function\r\n     * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromValue(val, unsigned) {\r\n      if (typeof val === \"number\") return fromNumber(val, unsigned);\r\n      if (typeof val === \"string\") return fromString(val, unsigned);\r\n      // Throws for non-objects, converts non-instanceof Long:\r\n      return fromBits(\r\n        val.low,\r\n        val.high,\r\n        typeof unsigned === \"boolean\" ? unsigned : val.unsigned,\r\n      );\r\n    }\r\n\r\n    /**\r\n     * Converts the specified value to a Long using the appropriate from* function for its type.\r\n     * @function\r\n     * @param {!Long|number|bigint|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n     * @returns {!Long}\r\n     */\r\n    Long.fromValue = fromValue;\r\n\r\n    // NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n    // no runtime penalty for these.\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_16_DBL = 1 << 16;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_24_DBL = 1 << 24;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var ZERO = fromInt(0);\r\n\r\n    /**\r\n     * Signed zero.\r\n     * @type {!Long}\r\n     */\r\n    Long.ZERO = ZERO;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var UZERO = fromInt(0, true);\r\n\r\n    /**\r\n     * Unsigned zero.\r\n     * @type {!Long}\r\n     */\r\n    Long.UZERO = UZERO;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var ONE = fromInt(1);\r\n\r\n    /**\r\n     * Signed one.\r\n     * @type {!Long}\r\n     */\r\n    Long.ONE = ONE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var UONE = fromInt(1, true);\r\n\r\n    /**\r\n     * Unsigned one.\r\n     * @type {!Long}\r\n     */\r\n    Long.UONE = UONE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var NEG_ONE = fromInt(-1);\r\n\r\n    /**\r\n     * Signed negative one.\r\n     * @type {!Long}\r\n     */\r\n    Long.NEG_ONE = NEG_ONE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var MAX_VALUE = fromBits(0xffffffff | 0, 0x7fffffff | 0, false);\r\n\r\n    /**\r\n     * Maximum signed value.\r\n     * @type {!Long}\r\n     */\r\n    Long.MAX_VALUE = MAX_VALUE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var MAX_UNSIGNED_VALUE = fromBits(0xffffffff | 0, 0xffffffff | 0, true);\r\n\r\n    /**\r\n     * Maximum unsigned value.\r\n     * @type {!Long}\r\n     */\r\n    Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\r\n\r\n    /**\r\n     * Minimum signed value.\r\n     * @type {!Long}\r\n     */\r\n    Long.MIN_VALUE = MIN_VALUE;\r\n\r\n    /**\r\n     * @alias Long.prototype\r\n     * @inner\r\n     */\r\n    var LongPrototype = Long.prototype;\r\n\r\n    /**\r\n     * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n     * @this {!Long}\r\n     * @returns {number}\r\n     */\r\n    LongPrototype.toInt = function toInt() {\r\n      return this.unsigned ? this.low >>> 0 : this.low;\r\n    };\r\n\r\n    /**\r\n     * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n     * @this {!Long}\r\n     * @returns {number}\r\n     */\r\n    LongPrototype.toNumber = function toNumber() {\r\n      if (this.unsigned)\r\n        return (this.high >>> 0) * TWO_PWR_32_DBL + (this.low >>> 0);\r\n      return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n    };\r\n\r\n    /**\r\n     * Converts the Long to a string written in the specified radix.\r\n     * @this {!Long}\r\n     * @param {number=} radix Radix (2-36), defaults to 10\r\n     * @returns {string}\r\n     * @override\r\n     * @throws {RangeError} If `radix` is out of range\r\n     */\r\n    LongPrototype.toString = function toString(radix) {\r\n      radix = radix || 10;\r\n      if (radix < 2 || 36 < radix) throw RangeError(\"radix\");\r\n      if (this.isZero()) return \"0\";\r\n      if (this.isNegative()) {\r\n        // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n          // We need to change the Long value before it can be negated, so we remove\r\n          // the bottom-most digit in this base and then recurse to do the rest.\r\n          var radixLong = fromNumber(radix),\r\n            div = this.div(radixLong),\r\n            rem1 = div.mul(radixLong).sub(this);\r\n          return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else return \"-\" + this.neg().toString(radix);\r\n      }\r\n\r\n      // Do several (6) digits each time through the loop, so as to\r\n      // minimize the calls to the very expensive emulated div.\r\n      var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n      var result = \"\";\r\n      while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n          intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n          digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero()) return digits + result;\r\n        else {\r\n          while (digits.length < 6) digits = \"0\" + digits;\r\n          result = \"\" + digits + result;\r\n        }\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Gets the high 32 bits as a signed integer.\r\n     * @this {!Long}\r\n     * @returns {number} Signed high bits\r\n     */\r\n    LongPrototype.getHighBits = function getHighBits() {\r\n      return this.high;\r\n    };\r\n\r\n    /**\r\n     * Gets the high 32 bits as an unsigned integer.\r\n     * @this {!Long}\r\n     * @returns {number} Unsigned high bits\r\n     */\r\n    LongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n      return this.high >>> 0;\r\n    };\r\n\r\n    /**\r\n     * Gets the low 32 bits as a signed integer.\r\n     * @this {!Long}\r\n     * @returns {number} Signed low bits\r\n     */\r\n    LongPrototype.getLowBits = function getLowBits() {\r\n      return this.low;\r\n    };\r\n\r\n    /**\r\n     * Gets the low 32 bits as an unsigned integer.\r\n     * @this {!Long}\r\n     * @returns {number} Unsigned low bits\r\n     */\r\n    LongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n      return this.low >>> 0;\r\n    };\r\n\r\n    /**\r\n     * Gets the number of bits needed to represent the absolute value of this Long.\r\n     * @this {!Long}\r\n     * @returns {number}\r\n     */\r\n    LongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n      if (this.isNegative())\r\n        // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n      var val = this.high != 0 ? this.high : this.low;\r\n      for (var bit = 31; bit > 0; bit--) if ((val & (1 << bit)) != 0) break;\r\n      return this.high != 0 ? bit + 33 : bit + 1;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long can be safely represented as a JavaScript number.\r\n     * @this {!Long}\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isSafeInteger = function isSafeInteger() {\r\n      // 2^53-1 is the maximum safe value\r\n      var top11Bits = this.high >> 21;\r\n      // [0, 2^53-1]\r\n      if (!top11Bits) return true;\r\n      // > 2^53-1\r\n      if (this.unsigned) return false;\r\n      // [-2^53, -1] except -2^53\r\n      return top11Bits === -1 && !(this.low === 0 && this.high === -0x200000);\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals zero.\r\n     * @this {!Long}\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isZero = function isZero() {\r\n      return this.high === 0 && this.low === 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.eqz = LongPrototype.isZero;\r\n\r\n    /**\r\n     * Tests if this Long's value is negative.\r\n     * @this {!Long}\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isNegative = function isNegative() {\r\n      return !this.unsigned && this.high < 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is positive or zero.\r\n     * @this {!Long}\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isPositive = function isPositive() {\r\n      return this.unsigned || this.high >= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is odd.\r\n     * @this {!Long}\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isOdd = function isOdd() {\r\n      return (this.low & 1) === 1;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is even.\r\n     * @this {!Long}\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isEven = function isEven() {\r\n      return (this.low & 1) === 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals the specified's.\r\n     * @this {!Long}\r\n     * @param {!Long|number|bigint|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.equals = function equals(other) {\r\n      if (!isLong(other)) other = fromValue(other);\r\n      if (\r\n        this.unsigned !== other.unsigned &&\r\n        this.high >>> 31 === 1 &&\r\n        other.high >>> 31 === 1\r\n      )\r\n        return false;\r\n      return this.high === other.high && this.low === other.low;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n     * @function\r\n     * @param {!Long|number|bigint|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.eq = LongPrototype.equals;\r\n\r\n    /**\r\n     * Tests if this Long's value differs from the specified's.\r\n     * @this {!Long}\r\n     * @param {!Long|number|bigint|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.notEquals = function notEquals(other) {\r\n      return !this.eq(/* validates */ other);\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n     * @function\r\n     * @param {!Long|number|bigint|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.neq = LongPrototype.notEquals;\r\n\r\n    /**\r\n     * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n     * @function\r\n     * @param {!Long|number|bigint|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.ne = LongPrototype.notEquals;\r\n\r\n    /**\r\n     * Tests if this Long's value is less than the specified's.\r\n     * @this {!Long}\r\n     * @param {!Long|number|bigint|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lessThan = function lessThan(other) {\r\n      return this.comp(/* validates */ other) < 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n     * @function\r\n     * @param {!Long|number|bigint|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lt = LongPrototype.lessThan;\r\n\r\n    /**\r\n     * Tests if this Long's value is less than or equal the specified's.\r\n     * @this {!Long}\r\n     * @param {!Long|number|bigint|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n      return this.comp(/* validates */ other) <= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n     * @function\r\n     * @param {!Long|number|bigint|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n    /**\r\n     * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n     * @function\r\n     * @param {!Long|number|bigint|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than the specified's.\r\n     * @this {!Long}\r\n     * @param {!Long|number|bigint|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.greaterThan = function greaterThan(other) {\r\n      return this.comp(/* validates */ other) > 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n     * @function\r\n     * @param {!Long|number|bigint|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than or equal the specified's.\r\n     * @this {!Long}\r\n     * @param {!Long|number|bigint|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n      return this.comp(/* validates */ other) >= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n     * @function\r\n     * @param {!Long|number|bigint|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n     * @function\r\n     * @param {!Long|number|bigint|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n    /**\r\n     * Compares this Long's value with the specified's.\r\n     * @this {!Long}\r\n     * @param {!Long|number|bigint|string} other Other value\r\n     * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n     *  if the given one is greater\r\n     */\r\n    LongPrototype.compare = function compare(other) {\r\n      if (!isLong(other)) other = fromValue(other);\r\n      if (this.eq(other)) return 0;\r\n      var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n      if (thisNeg && !otherNeg) return -1;\r\n      if (!thisNeg && otherNeg) return 1;\r\n      // At this point the sign bits are the same\r\n      if (!this.unsigned) return this.sub(other).isNegative() ? -1 : 1;\r\n      // Both are positive if at least one is unsigned\r\n      return other.high >>> 0 > this.high >>> 0 ||\r\n        (other.high === this.high && other.low >>> 0 > this.low >>> 0)\r\n        ? -1\r\n        : 1;\r\n    };\r\n\r\n    /**\r\n     * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n     * @function\r\n     * @param {!Long|number|bigint|string} other Other value\r\n     * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n     *  if the given one is greater\r\n     */\r\n    LongPrototype.comp = LongPrototype.compare;\r\n\r\n    /**\r\n     * Negates this Long's value.\r\n     * @this {!Long}\r\n     * @returns {!Long} Negated Long\r\n     */\r\n    LongPrototype.negate = function negate() {\r\n      if (!this.unsigned && this.eq(MIN_VALUE)) return MIN_VALUE;\r\n      return this.not().add(ONE);\r\n    };\r\n\r\n    /**\r\n     * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n     * @function\r\n     * @returns {!Long} Negated Long\r\n     */\r\n    LongPrototype.neg = LongPrototype.negate;\r\n\r\n    /**\r\n     * Returns the sum of this and the specified Long.\r\n     * @this {!Long}\r\n     * @param {!Long|number|bigint|string} addend Addend\r\n     * @returns {!Long} Sum\r\n     */\r\n    LongPrototype.add = function add(addend) {\r\n      if (!isLong(addend)) addend = fromValue(addend);\r\n\r\n      // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n      var a48 = this.high >>> 16;\r\n      var a32 = this.high & 0xffff;\r\n      var a16 = this.low >>> 16;\r\n      var a00 = this.low & 0xffff;\r\n      var b48 = addend.high >>> 16;\r\n      var b32 = addend.high & 0xffff;\r\n      var b16 = addend.low >>> 16;\r\n      var b00 = addend.low & 0xffff;\r\n      var c48 = 0,\r\n        c32 = 0,\r\n        c16 = 0,\r\n        c00 = 0;\r\n      c00 += a00 + b00;\r\n      c16 += c00 >>> 16;\r\n      c00 &= 0xffff;\r\n      c16 += a16 + b16;\r\n      c32 += c16 >>> 16;\r\n      c16 &= 0xffff;\r\n      c32 += a32 + b32;\r\n      c48 += c32 >>> 16;\r\n      c32 &= 0xffff;\r\n      c48 += a48 + b48;\r\n      c48 &= 0xffff;\r\n      return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the difference of this and the specified Long.\r\n     * @this {!Long}\r\n     * @param {!Long|number|bigint|string} subtrahend Subtrahend\r\n     * @returns {!Long} Difference\r\n     */\r\n    LongPrototype.subtract = function subtract(subtrahend) {\r\n      if (!isLong(subtrahend)) subtrahend = fromValue(subtrahend);\r\n      return this.add(subtrahend.neg());\r\n    };\r\n\r\n    /**\r\n     * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n     * @function\r\n     * @param {!Long|number|bigint|string} subtrahend Subtrahend\r\n     * @returns {!Long} Difference\r\n     */\r\n    LongPrototype.sub = LongPrototype.subtract;\r\n\r\n    /**\r\n     * Returns the product of this and the specified Long.\r\n     * @this {!Long}\r\n     * @param {!Long|number|bigint|string} multiplier Multiplier\r\n     * @returns {!Long} Product\r\n     */\r\n    LongPrototype.multiply = function multiply(multiplier) {\r\n      if (this.isZero()) return this;\r\n      if (!isLong(multiplier)) multiplier = fromValue(multiplier);\r\n\r\n      // use wasm support if present\r\n      if (wasm) {\r\n        var low = wasm[\"mul\"](\r\n          this.low,\r\n          this.high,\r\n          multiplier.low,\r\n          multiplier.high,\r\n        );\r\n        return fromBits(low, wasm[\"get_high\"](), this.unsigned);\r\n      }\r\n      if (multiplier.isZero()) return this.unsigned ? UZERO : ZERO;\r\n      if (this.eq(MIN_VALUE)) return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n      if (multiplier.eq(MIN_VALUE)) return this.isOdd() ? MIN_VALUE : ZERO;\r\n      if (this.isNegative()) {\r\n        if (multiplier.isNegative()) return this.neg().mul(multiplier.neg());\r\n        else return this.neg().mul(multiplier).neg();\r\n      } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n      // If both longs are small, use float multiplication\r\n      if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(\r\n          this.toNumber() * multiplier.toNumber(),\r\n          this.unsigned,\r\n        );\r\n\r\n      // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n      // We can skip products that would overflow.\r\n\r\n      var a48 = this.high >>> 16;\r\n      var a32 = this.high & 0xffff;\r\n      var a16 = this.low >>> 16;\r\n      var a00 = this.low & 0xffff;\r\n      var b48 = multiplier.high >>> 16;\r\n      var b32 = multiplier.high & 0xffff;\r\n      var b16 = multiplier.low >>> 16;\r\n      var b00 = multiplier.low & 0xffff;\r\n      var c48 = 0,\r\n        c32 = 0,\r\n        c16 = 0,\r\n        c00 = 0;\r\n      c00 += a00 * b00;\r\n      c16 += c00 >>> 16;\r\n      c00 &= 0xffff;\r\n      c16 += a16 * b00;\r\n      c32 += c16 >>> 16;\r\n      c16 &= 0xffff;\r\n      c16 += a00 * b16;\r\n      c32 += c16 >>> 16;\r\n      c16 &= 0xffff;\r\n      c32 += a32 * b00;\r\n      c48 += c32 >>> 16;\r\n      c32 &= 0xffff;\r\n      c32 += a16 * b16;\r\n      c48 += c32 >>> 16;\r\n      c32 &= 0xffff;\r\n      c32 += a00 * b32;\r\n      c48 += c32 >>> 16;\r\n      c32 &= 0xffff;\r\n      c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n      c48 &= 0xffff;\r\n      return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n     * @function\r\n     * @param {!Long|number|bigint|string} multiplier Multiplier\r\n     * @returns {!Long} Product\r\n     */\r\n    LongPrototype.mul = LongPrototype.multiply;\r\n\r\n    /**\r\n     * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n     *  unsigned if this Long is unsigned.\r\n     * @this {!Long}\r\n     * @param {!Long|number|bigint|string} divisor Divisor\r\n     * @returns {!Long} Quotient\r\n     */\r\n    LongPrototype.divide = function divide(divisor) {\r\n      if (!isLong(divisor)) divisor = fromValue(divisor);\r\n      if (divisor.isZero()) throw Error(\"division by zero\");\r\n\r\n      // use wasm support if present\r\n      if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (\r\n          !this.unsigned &&\r\n          this.high === -0x80000000 &&\r\n          divisor.low === -1 &&\r\n          divisor.high === -1\r\n        ) {\r\n          // be consistent with non-wasm code path\r\n          return this;\r\n        }\r\n        var low = (this.unsigned ? wasm[\"div_u\"] : wasm[\"div_s\"])(\r\n          this.low,\r\n          this.high,\r\n          divisor.low,\r\n          divisor.high,\r\n        );\r\n        return fromBits(low, wasm[\"get_high\"](), this.unsigned);\r\n      }\r\n      if (this.isZero()) return this.unsigned ? UZERO : ZERO;\r\n      var approx, rem, res;\r\n      if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n          if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n            return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\r\n          else if (divisor.eq(MIN_VALUE)) return ONE;\r\n          else {\r\n            // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n            var halfThis = this.shr(1);\r\n            approx = halfThis.div(divisor).shl(1);\r\n            if (approx.eq(ZERO)) {\r\n              return divisor.isNegative() ? ONE : NEG_ONE;\r\n            } else {\r\n              rem = this.sub(divisor.mul(approx));\r\n              res = approx.add(rem.div(divisor));\r\n              return res;\r\n            }\r\n          }\r\n        } else if (divisor.eq(MIN_VALUE)) return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n          if (divisor.isNegative()) return this.neg().div(divisor.neg());\r\n          return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative()) return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n      } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned) divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this)) return UZERO;\r\n        if (divisor.gt(this.shru(1)))\r\n          // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n          return UONE;\r\n        res = UZERO;\r\n      }\r\n\r\n      // Repeat the following until the remainder is less than other:  find a\r\n      // floating-point that approximates remainder / other *from below*, add this\r\n      // into the result, and subtract it from the remainder.  It is critical that\r\n      // the approximate value is less than or equal to the real value so that the\r\n      // remainder never becomes negative.\r\n      rem = this;\r\n      while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n          delta = log2 <= 48 ? 1 : pow_dbl(2, log2 - 48),\r\n          // Decrease the approximation until it is smaller than the remainder.  Note\r\n          // that if it is too large, the product overflows and is negative.\r\n          approxRes = fromNumber(approx),\r\n          approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n          approx -= delta;\r\n          approxRes = fromNumber(approx, this.unsigned);\r\n          approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero()) approxRes = ONE;\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n      }\r\n      return res;\r\n    };\r\n\r\n    /**\r\n     * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n     * @function\r\n     * @param {!Long|number|bigint|string} divisor Divisor\r\n     * @returns {!Long} Quotient\r\n     */\r\n    LongPrototype.div = LongPrototype.divide;\r\n\r\n    /**\r\n     * Returns this Long modulo the specified.\r\n     * @this {!Long}\r\n     * @param {!Long|number|bigint|string} divisor Divisor\r\n     * @returns {!Long} Remainder\r\n     */\r\n    LongPrototype.modulo = function modulo(divisor) {\r\n      if (!isLong(divisor)) divisor = fromValue(divisor);\r\n\r\n      // use wasm support if present\r\n      if (wasm) {\r\n        var low = (this.unsigned ? wasm[\"rem_u\"] : wasm[\"rem_s\"])(\r\n          this.low,\r\n          this.high,\r\n          divisor.low,\r\n          divisor.high,\r\n        );\r\n        return fromBits(low, wasm[\"get_high\"](), this.unsigned);\r\n      }\r\n      return this.sub(this.div(divisor).mul(divisor));\r\n    };\r\n\r\n    /**\r\n     * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n     * @function\r\n     * @param {!Long|number|bigint|string} divisor Divisor\r\n     * @returns {!Long} Remainder\r\n     */\r\n    LongPrototype.mod = LongPrototype.modulo;\r\n\r\n    /**\r\n     * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n     * @function\r\n     * @param {!Long|number|bigint|string} divisor Divisor\r\n     * @returns {!Long} Remainder\r\n     */\r\n    LongPrototype.rem = LongPrototype.modulo;\r\n\r\n    /**\r\n     * Returns the bitwise NOT of this Long.\r\n     * @this {!Long}\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.not = function not() {\r\n      return fromBits(~this.low, ~this.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns count leading zeros of this Long.\r\n     * @this {!Long}\r\n     * @returns {!number}\r\n     */\r\n    LongPrototype.countLeadingZeros = function countLeadingZeros() {\r\n      return this.high ? Math.clz32(this.high) : Math.clz32(this.low) + 32;\r\n    };\r\n\r\n    /**\r\n     * Returns count leading zeros. This is an alias of {@link Long#countLeadingZeros}.\r\n     * @function\r\n     * @param {!Long}\r\n     * @returns {!number}\r\n     */\r\n    LongPrototype.clz = LongPrototype.countLeadingZeros;\r\n\r\n    /**\r\n     * Returns count trailing zeros of this Long.\r\n     * @this {!Long}\r\n     * @returns {!number}\r\n     */\r\n    LongPrototype.countTrailingZeros = function countTrailingZeros() {\r\n      return this.low ? ctz32(this.low) : ctz32(this.high) + 32;\r\n    };\r\n\r\n    /**\r\n     * Returns count trailing zeros. This is an alias of {@link Long#countTrailingZeros}.\r\n     * @function\r\n     * @param {!Long}\r\n     * @returns {!number}\r\n     */\r\n    LongPrototype.ctz = LongPrototype.countTrailingZeros;\r\n\r\n    /**\r\n     * Returns the bitwise AND of this Long and the specified.\r\n     * @this {!Long}\r\n     * @param {!Long|number|bigint|string} other Other Long\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.and = function and(other) {\r\n      if (!isLong(other)) other = fromValue(other);\r\n      return fromBits(\r\n        this.low & other.low,\r\n        this.high & other.high,\r\n        this.unsigned,\r\n      );\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise OR of this Long and the specified.\r\n     * @this {!Long}\r\n     * @param {!Long|number|bigint|string} other Other Long\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.or = function or(other) {\r\n      if (!isLong(other)) other = fromValue(other);\r\n      return fromBits(\r\n        this.low | other.low,\r\n        this.high | other.high,\r\n        this.unsigned,\r\n      );\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise XOR of this Long and the given one.\r\n     * @this {!Long}\r\n     * @param {!Long|number|bigint|string} other Other Long\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.xor = function xor(other) {\r\n      if (!isLong(other)) other = fromValue(other);\r\n      return fromBits(\r\n        this.low ^ other.low,\r\n        this.high ^ other.high,\r\n        this.unsigned,\r\n      );\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits shifted to the left by the given amount.\r\n     * @this {!Long}\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n      if (isLong(numBits)) numBits = numBits.toInt();\r\n      if ((numBits &= 63) === 0) return this;\r\n      else if (numBits < 32)\r\n        return fromBits(\r\n          this.low << numBits,\r\n          (this.high << numBits) | (this.low >>> (32 - numBits)),\r\n          this.unsigned,\r\n        );\r\n      else return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n    /**\r\n     * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n     * @this {!Long}\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shiftRight = function shiftRight(numBits) {\r\n      if (isLong(numBits)) numBits = numBits.toInt();\r\n      if ((numBits &= 63) === 0) return this;\r\n      else if (numBits < 32)\r\n        return fromBits(\r\n          (this.low >>> numBits) | (this.high << (32 - numBits)),\r\n          this.high >> numBits,\r\n          this.unsigned,\r\n        );\r\n      else\r\n        return fromBits(\r\n          this.high >> (numBits - 32),\r\n          this.high >= 0 ? 0 : -1,\r\n          this.unsigned,\r\n        );\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n    /**\r\n     * Returns this Long with bits logically shifted to the right by the given amount.\r\n     * @this {!Long}\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n      if (isLong(numBits)) numBits = numBits.toInt();\r\n      if ((numBits &= 63) === 0) return this;\r\n      if (numBits < 32)\r\n        return fromBits(\r\n          (this.low >>> numBits) | (this.high << (32 - numBits)),\r\n          this.high >>> numBits,\r\n          this.unsigned,\r\n        );\r\n      if (numBits === 32) return fromBits(this.high, 0, this.unsigned);\r\n      return fromBits(this.high >>> (numBits - 32), 0, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n    /**\r\n     * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n    /**\r\n     * Returns this Long with bits rotated to the left by the given amount.\r\n     * @this {!Long}\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Rotated Long\r\n     */\r\n    LongPrototype.rotateLeft = function rotateLeft(numBits) {\r\n      var b;\r\n      if (isLong(numBits)) numBits = numBits.toInt();\r\n      if ((numBits &= 63) === 0) return this;\r\n      if (numBits === 32) return fromBits(this.high, this.low, this.unsigned);\r\n      if (numBits < 32) {\r\n        b = 32 - numBits;\r\n        return fromBits(\r\n          (this.low << numBits) | (this.high >>> b),\r\n          (this.high << numBits) | (this.low >>> b),\r\n          this.unsigned,\r\n        );\r\n      }\r\n      numBits -= 32;\r\n      b = 32 - numBits;\r\n      return fromBits(\r\n        (this.high << numBits) | (this.low >>> b),\r\n        (this.low << numBits) | (this.high >>> b),\r\n        this.unsigned,\r\n      );\r\n    };\r\n    /**\r\n     * Returns this Long with bits rotated to the left by the given amount. This is an alias of {@link Long#rotateLeft}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Rotated Long\r\n     */\r\n    LongPrototype.rotl = LongPrototype.rotateLeft;\r\n\r\n    /**\r\n     * Returns this Long with bits rotated to the right by the given amount.\r\n     * @this {!Long}\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Rotated Long\r\n     */\r\n    LongPrototype.rotateRight = function rotateRight(numBits) {\r\n      var b;\r\n      if (isLong(numBits)) numBits = numBits.toInt();\r\n      if ((numBits &= 63) === 0) return this;\r\n      if (numBits === 32) return fromBits(this.high, this.low, this.unsigned);\r\n      if (numBits < 32) {\r\n        b = 32 - numBits;\r\n        return fromBits(\r\n          (this.high << b) | (this.low >>> numBits),\r\n          (this.low << b) | (this.high >>> numBits),\r\n          this.unsigned,\r\n        );\r\n      }\r\n      numBits -= 32;\r\n      b = 32 - numBits;\r\n      return fromBits(\r\n        (this.low << b) | (this.high >>> numBits),\r\n        (this.high << b) | (this.low >>> numBits),\r\n        this.unsigned,\r\n      );\r\n    };\r\n    /**\r\n     * Returns this Long with bits rotated to the right by the given amount. This is an alias of {@link Long#rotateRight}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Rotated Long\r\n     */\r\n    LongPrototype.rotr = LongPrototype.rotateRight;\r\n\r\n    /**\r\n     * Converts this Long to signed.\r\n     * @this {!Long}\r\n     * @returns {!Long} Signed long\r\n     */\r\n    LongPrototype.toSigned = function toSigned() {\r\n      if (!this.unsigned) return this;\r\n      return fromBits(this.low, this.high, false);\r\n    };\r\n\r\n    /**\r\n     * Converts this Long to unsigned.\r\n     * @this {!Long}\r\n     * @returns {!Long} Unsigned long\r\n     */\r\n    LongPrototype.toUnsigned = function toUnsigned() {\r\n      if (this.unsigned) return this;\r\n      return fromBits(this.low, this.high, true);\r\n    };\r\n\r\n    /**\r\n     * Converts this Long to its byte representation.\r\n     * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n     * @this {!Long}\r\n     * @returns {!Array.<number>} Byte representation\r\n     */\r\n    LongPrototype.toBytes = function toBytes(le) {\r\n      return le ? this.toBytesLE() : this.toBytesBE();\r\n    };\r\n\r\n    /**\r\n     * Converts this Long to its little endian byte representation.\r\n     * @this {!Long}\r\n     * @returns {!Array.<number>} Little endian byte representation\r\n     */\r\n    LongPrototype.toBytesLE = function toBytesLE() {\r\n      var hi = this.high,\r\n        lo = this.low;\r\n      return [\r\n        lo & 0xff,\r\n        (lo >>> 8) & 0xff,\r\n        (lo >>> 16) & 0xff,\r\n        lo >>> 24,\r\n        hi & 0xff,\r\n        (hi >>> 8) & 0xff,\r\n        (hi >>> 16) & 0xff,\r\n        hi >>> 24,\r\n      ];\r\n    };\r\n\r\n    /**\r\n     * Converts this Long to its big endian byte representation.\r\n     * @this {!Long}\r\n     * @returns {!Array.<number>} Big endian byte representation\r\n     */\r\n    LongPrototype.toBytesBE = function toBytesBE() {\r\n      var hi = this.high,\r\n        lo = this.low;\r\n      return [\r\n        hi >>> 24,\r\n        (hi >>> 16) & 0xff,\r\n        (hi >>> 8) & 0xff,\r\n        hi & 0xff,\r\n        lo >>> 24,\r\n        (lo >>> 16) & 0xff,\r\n        (lo >>> 8) & 0xff,\r\n        lo & 0xff,\r\n      ];\r\n    };\r\n\r\n    /**\r\n     * Creates a Long from its byte representation.\r\n     * @param {!Array.<number>} bytes Byte representation\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n     * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n     * @returns {Long} The corresponding Long value\r\n     */\r\n    Long.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n      return le\r\n        ? Long.fromBytesLE(bytes, unsigned)\r\n        : Long.fromBytesBE(bytes, unsigned);\r\n    };\r\n\r\n    /**\r\n     * Creates a Long from its little endian byte representation.\r\n     * @param {!Array.<number>} bytes Little endian byte representation\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n     * @returns {Long} The corresponding Long value\r\n     */\r\n    Long.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n      return new Long(\r\n        bytes[0] | (bytes[1] << 8) | (bytes[2] << 16) | (bytes[3] << 24),\r\n        bytes[4] | (bytes[5] << 8) | (bytes[6] << 16) | (bytes[7] << 24),\r\n        unsigned,\r\n      );\r\n    };\r\n\r\n    /**\r\n     * Creates a Long from its big endian byte representation.\r\n     * @param {!Array.<number>} bytes Big endian byte representation\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n     * @returns {Long} The corresponding Long value\r\n     */\r\n    Long.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n      return new Long(\r\n        (bytes[4] << 24) | (bytes[5] << 16) | (bytes[6] << 8) | bytes[7],\r\n        (bytes[0] << 24) | (bytes[1] << 16) | (bytes[2] << 8) | bytes[3],\r\n        unsigned,\r\n      );\r\n    };\r\n\r\n    // Support conversion to/from BigInt where available\r\n    if (typeof BigInt === \"function\") {\r\n      /**\r\n       * Returns a Long representing the given big integer.\r\n       * @function\r\n       * @param {number} value The big integer value\r\n       * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n       * @returns {!Long} The corresponding Long value\r\n       */\r\n      Long.fromBigInt = function fromBigInt(value, unsigned) {\r\n        var lowBits = Number(BigInt.asIntN(32, value));\r\n        var highBits = Number(BigInt.asIntN(32, value >> BigInt(32)));\r\n        return fromBits(lowBits, highBits, unsigned);\r\n      };\r\n\r\n      // Override\r\n      Long.fromValue = function fromValueWithBigInt(value, unsigned) {\r\n        if (typeof value === \"bigint\") return Long.fromBigInt(value, unsigned);\r\n        return fromValue(value, unsigned);\r\n      };\r\n\r\n      /**\r\n       * Converts the Long to its big integer representation.\r\n       * @this {!Long}\r\n       * @returns {bigint}\r\n       */\r\n      LongPrototype.toBigInt = function toBigInt() {\r\n        var lowBigInt = BigInt(this.low >>> 0);\r\n        var highBigInt = BigInt(this.unsigned ? this.high >>> 0 : this.high);\r\n        return (highBigInt << BigInt(32)) | lowBigInt;\r\n      };\r\n    }\r\n    var _default = (_exports.default = Long);\r\n  },\r\n);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2xvbmcvdW1kL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLElBQTBDO0FBQ2hELElBQUksaUNBQU8sRUFBRSxtQ0FBRTtBQUNmO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFBQSxrR0FBQztBQUNOLElBQUksS0FBSyxFQVNOO0FBQ0gsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkIsZUFBZSxVQUFVO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLGVBQWUsR0FBRztBQUNsQixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsR0FBRztBQUNsQixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLEdBQUc7QUFDbEIsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkIsZUFBZSxVQUFVO0FBQ3pCLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsVUFBVTtBQUN6QixpQkFBaUIsT0FBTztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QixlQUFlLFVBQVU7QUFDekIsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkIsZUFBZSxVQUFVO0FBQ3pCLGlCQUFpQixPQUFPO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsUUFBUTtBQUN2QixlQUFlLFVBQVU7QUFDekIsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsUUFBUTtBQUN2QixlQUFlLFVBQVU7QUFDekIsaUJBQWlCLE9BQU87QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkIsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QixlQUFlLG1CQUFtQjtBQUNsQyxlQUFlLFNBQVM7QUFDeEIsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLGdCQUFnQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkIsZUFBZSxtQkFBbUI7QUFDbEMsZUFBZSxTQUFTO0FBQ3hCLGlCQUFpQixPQUFPO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHNCQUFzQiwrQ0FBK0M7QUFDcEYsZUFBZSxVQUFVO0FBQ3pCLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsNkJBQTZCLCtDQUErQztBQUMzRixlQUFlLFVBQVU7QUFDekIsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2QsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCxlQUFlLFNBQVM7QUFDeEIsaUJBQWlCO0FBQ2pCO0FBQ0EsZ0JBQWdCLFlBQVk7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLFNBQVM7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0VBQW9FLGtCQUFrQjtBQUN0RixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2QsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2QsZUFBZSw0QkFBNEI7QUFDM0MsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0VBQStFLGtCQUFrQjtBQUNqRztBQUNBLGVBQWUsNEJBQTRCO0FBQzNDLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkLGVBQWUsNEJBQTRCO0FBQzNDLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxRkFBcUYscUJBQXFCO0FBQzFHO0FBQ0EsZUFBZSw0QkFBNEI7QUFDM0MsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUZBQXFGLHFCQUFxQjtBQUMxRztBQUNBLGVBQWUsNEJBQTRCO0FBQzNDLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkLGVBQWUsNEJBQTRCO0FBQzNDLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxRkFBcUYsb0JBQW9CO0FBQ3pHO0FBQ0EsZUFBZSw0QkFBNEI7QUFDM0MsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2QsZUFBZSw0QkFBNEI7QUFDM0MsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhGQUE4RiwyQkFBMkI7QUFDekg7QUFDQSxlQUFlLDRCQUE0QjtBQUMzQyxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4RkFBOEYsMkJBQTJCO0FBQ3pIO0FBQ0EsZUFBZSw0QkFBNEI7QUFDM0MsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2QsZUFBZSw0QkFBNEI7QUFDM0MsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdGQUF3Rix1QkFBdUI7QUFDL0c7QUFDQSxlQUFlLDRCQUE0QjtBQUMzQyxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCxlQUFlLDRCQUE0QjtBQUMzQyxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUdBQWlHLDhCQUE4QjtBQUMvSDtBQUNBLGVBQWUsNEJBQTRCO0FBQzNDLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlHQUFpRyw4QkFBOEI7QUFDL0g7QUFDQSxlQUFlLDRCQUE0QjtBQUMzQyxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCxlQUFlLDRCQUE0QjtBQUMzQyxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZFQUE2RSxtQkFBbUI7QUFDaEc7QUFDQSxlQUFlLDRCQUE0QjtBQUMzQyxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2QsaUJBQWlCLE9BQU87QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsa0JBQWtCO0FBQ3pFO0FBQ0EsaUJBQWlCLE9BQU87QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCxlQUFlLDRCQUE0QjtBQUMzQyxpQkFBaUIsT0FBTztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCxlQUFlLDRCQUE0QjtBQUMzQyxpQkFBaUIsT0FBTztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1GQUFtRixvQkFBb0I7QUFDdkc7QUFDQSxlQUFlLDRCQUE0QjtBQUMzQyxpQkFBaUIsT0FBTztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkLGVBQWUsNEJBQTRCO0FBQzNDLGlCQUFpQixPQUFPO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnRkFBZ0Ysb0JBQW9CO0FBQ3BHO0FBQ0EsZUFBZSw0QkFBNEI7QUFDM0MsaUJBQWlCLE9BQU87QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkLGVBQWUsNEJBQTRCO0FBQzNDLGlCQUFpQixPQUFPO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsbUJBQW1CO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdFQUF3RSxrQkFBa0I7QUFDMUY7QUFDQSxlQUFlLDRCQUE0QjtBQUMzQyxpQkFBaUIsT0FBTztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkLGVBQWUsNEJBQTRCO0FBQzNDLGlCQUFpQixPQUFPO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9FQUFvRSxrQkFBa0I7QUFDdEY7QUFDQSxlQUFlLDRCQUE0QjtBQUMzQyxpQkFBaUIsT0FBTztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9FQUFvRSxrQkFBa0I7QUFDdEY7QUFDQSxlQUFlLDRCQUE0QjtBQUMzQyxpQkFBaUIsT0FBTztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBQXlELDZCQUE2QjtBQUN0RjtBQUNBLGVBQWU7QUFDZixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMERBQTBELDhCQUE4QjtBQUN4RjtBQUNBLGVBQWU7QUFDZixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCxlQUFlLDRCQUE0QjtBQUMzQyxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkLGVBQWUsNEJBQTRCO0FBQzNDLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2QsZUFBZSw0QkFBNEI7QUFDM0MsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCxlQUFlLGNBQWM7QUFDN0IsaUJBQWlCLE9BQU87QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlHQUFpRyxxQkFBcUI7QUFDdEg7QUFDQSxlQUFlLGNBQWM7QUFDN0IsaUJBQWlCLE9BQU87QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCxlQUFlLGNBQWM7QUFDN0IsaUJBQWlCLE9BQU87QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpSEFBaUgsc0JBQXNCO0FBQ3ZJO0FBQ0EsZUFBZSxjQUFjO0FBQzdCLGlCQUFpQixPQUFPO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2QsZUFBZSxjQUFjO0FBQzdCLGlCQUFpQixPQUFPO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRHQUE0Ryw4QkFBOEI7QUFDMUk7QUFDQSxlQUFlLGNBQWM7QUFDN0IsaUJBQWlCLE9BQU87QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0R0FBNEcsOEJBQThCO0FBQzFJO0FBQ0EsZUFBZSxjQUFjO0FBQzdCLGlCQUFpQixPQUFPO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2QsZUFBZSxjQUFjO0FBQzdCLGlCQUFpQixPQUFPO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpR0FBaUcsc0JBQXNCO0FBQ3ZIO0FBQ0EsZUFBZSxjQUFjO0FBQzdCLGlCQUFpQixPQUFPO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2QsZUFBZSxjQUFjO0FBQzdCLGlCQUFpQixPQUFPO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrR0FBa0csdUJBQXVCO0FBQ3pIO0FBQ0EsZUFBZSxjQUFjO0FBQzdCLGlCQUFpQixPQUFPO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2QsaUJBQWlCLE9BQU87QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCxpQkFBaUIsT0FBTztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxVQUFVO0FBQ3pCLGNBQWM7QUFDZCxpQkFBaUIsaUJBQWlCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkLGlCQUFpQixpQkFBaUI7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkLGlCQUFpQixpQkFBaUI7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxpQkFBaUI7QUFDaEMsZUFBZSxVQUFVO0FBQ3pCLGVBQWUsVUFBVTtBQUN6QixpQkFBaUIsTUFBTTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGlCQUFpQjtBQUNoQyxlQUFlLFVBQVU7QUFDekIsaUJBQWlCLE1BQU07QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsaUJBQWlCO0FBQ2hDLGVBQWUsVUFBVTtBQUN6QixpQkFBaUIsTUFBTTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFFBQVE7QUFDekIsaUJBQWlCLFVBQVU7QUFDM0IsbUJBQW1CLE9BQU87QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb25nL3VtZC9pbmRleC5qcz83N2Y1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEdFTkVSQVRFRCBGSUxFLiBETyBOT1QgRURJVC5cclxuKGZ1bmN0aW9uIChnbG9iYWwsIGZhY3RvcnkpIHtcclxuICBmdW5jdGlvbiBwcmVmZXJEZWZhdWx0KGV4cG9ydHMpIHtcclxuICAgIHJldHVybiBleHBvcnRzLmRlZmF1bHQgfHwgZXhwb3J0cztcclxuICB9XHJcbiAgaWYgKHR5cGVvZiBkZWZpbmUgPT09IFwiZnVuY3Rpb25cIiAmJiBkZWZpbmUuYW1kKSB7XHJcbiAgICBkZWZpbmUoW10sIGZ1bmN0aW9uICgpIHtcclxuICAgICAgdmFyIGV4cG9ydHMgPSB7fTtcclxuICAgICAgZmFjdG9yeShleHBvcnRzKTtcclxuICAgICAgcmV0dXJuIHByZWZlckRlZmF1bHQoZXhwb3J0cyk7XHJcbiAgICB9KTtcclxuICB9IGVsc2UgaWYgKHR5cGVvZiBleHBvcnRzID09PSBcIm9iamVjdFwiKSB7XHJcbiAgICBmYWN0b3J5KGV4cG9ydHMpO1xyXG4gICAgaWYgKHR5cGVvZiBtb2R1bGUgPT09IFwib2JqZWN0XCIpIG1vZHVsZS5leHBvcnRzID0gcHJlZmVyRGVmYXVsdChleHBvcnRzKTtcclxuICB9IGVsc2Uge1xyXG4gICAgKGZ1bmN0aW9uICgpIHtcclxuICAgICAgdmFyIGV4cG9ydHMgPSB7fTtcclxuICAgICAgZmFjdG9yeShleHBvcnRzKTtcclxuICAgICAgZ2xvYmFsLkxvbmcgPSBwcmVmZXJEZWZhdWx0KGV4cG9ydHMpO1xyXG4gICAgfSkoKTtcclxuICB9XHJcbn0pKFxyXG4gIHR5cGVvZiBnbG9iYWxUaGlzICE9PSBcInVuZGVmaW5lZFwiXHJcbiAgICA/IGdsb2JhbFRoaXNcclxuICAgIDogdHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCJcclxuICAgICAgPyBzZWxmXHJcbiAgICAgIDogdGhpcyxcclxuICBmdW5jdGlvbiAoX2V4cG9ydHMpIHtcclxuICAgIFwidXNlIHN0cmljdFwiO1xyXG5cclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShfZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcclxuICAgICAgdmFsdWU6IHRydWUsXHJcbiAgICB9KTtcclxuICAgIF9leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XHJcbiAgICAvKipcclxuICAgICAqIEBsaWNlbnNlXHJcbiAgICAgKiBDb3B5cmlnaHQgMjAwOSBUaGUgQ2xvc3VyZSBMaWJyYXJ5IEF1dGhvcnNcclxuICAgICAqIENvcHlyaWdodCAyMDIwIERhbmllbCBXaXJ0eiAvIFRoZSBsb25nLmpzIEF1dGhvcnMuXHJcbiAgICAgKlxyXG4gICAgICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICAgICAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICAgICAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gICAgICpcclxuICAgICAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICAgICAqXHJcbiAgICAgKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiAgICAgKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAgICAgKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICAgICAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuICAgICAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gICAgICpcclxuICAgICAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wXHJcbiAgICAgKi9cclxuXHJcbiAgICAvLyBXZWJBc3NlbWJseSBvcHRpbWl6YXRpb25zIHRvIGRvIG5hdGl2ZSBpNjQgbXVsdGlwbGljYXRpb24gYW5kIGRpdmlkZVxyXG4gICAgdmFyIHdhc20gPSBudWxsO1xyXG4gICAgdHJ5IHtcclxuICAgICAgd2FzbSA9IG5ldyBXZWJBc3NlbWJseS5JbnN0YW5jZShcclxuICAgICAgICBuZXcgV2ViQXNzZW1ibHkuTW9kdWxlKFxyXG4gICAgICAgICAgbmV3IFVpbnQ4QXJyYXkoW1xyXG4gICAgICAgICAgICAvLyBcXDBhc21cclxuICAgICAgICAgICAgMCwgOTcsIDExNSwgMTA5LFxyXG4gICAgICAgICAgICAvLyB2ZXJzaW9uIDFcclxuICAgICAgICAgICAgMSwgMCwgMCwgMCxcclxuICAgICAgICAgICAgLy8gc2VjdGlvbiBcInR5cGVcIlxyXG4gICAgICAgICAgICAxLCAxMywgMixcclxuICAgICAgICAgICAgLy8gMCwgKCkgPT4gaTMyXHJcbiAgICAgICAgICAgIDk2LCAwLCAxLCAxMjcsXHJcbiAgICAgICAgICAgIC8vIDEsIChpMzIsIGkzMiwgaTMyLCBpMzIpID0+IGkzMlxyXG4gICAgICAgICAgICA5NiwgNCwgMTI3LCAxMjcsIDEyNywgMTI3LCAxLCAxMjcsXHJcbiAgICAgICAgICAgIC8vIHNlY3Rpb24gXCJmdW5jdGlvblwiXHJcbiAgICAgICAgICAgIDMsIDcsIDYsXHJcbiAgICAgICAgICAgIC8vIDAsIHR5cGUgMFxyXG4gICAgICAgICAgICAwLFxyXG4gICAgICAgICAgICAvLyAxLCB0eXBlIDFcclxuICAgICAgICAgICAgMSxcclxuICAgICAgICAgICAgLy8gMiwgdHlwZSAxXHJcbiAgICAgICAgICAgIDEsXHJcbiAgICAgICAgICAgIC8vIDMsIHR5cGUgMVxyXG4gICAgICAgICAgICAxLFxyXG4gICAgICAgICAgICAvLyA0LCB0eXBlIDFcclxuICAgICAgICAgICAgMSxcclxuICAgICAgICAgICAgLy8gNSwgdHlwZSAxXHJcbiAgICAgICAgICAgIDEsXHJcbiAgICAgICAgICAgIC8vIHNlY3Rpb24gXCJnbG9iYWxcIlxyXG4gICAgICAgICAgICA2LCA2LCAxLFxyXG4gICAgICAgICAgICAvLyAwLCBcImhpZ2hcIiwgbXV0YWJsZSBpMzJcclxuICAgICAgICAgICAgMTI3LCAxLCA2NSwgMCwgMTEsXHJcbiAgICAgICAgICAgIC8vIHNlY3Rpb24gXCJleHBvcnRcIlxyXG4gICAgICAgICAgICA3LCA1MCwgNixcclxuICAgICAgICAgICAgLy8gMCwgXCJtdWxcIlxyXG4gICAgICAgICAgICAzLCAxMDksIDExNywgMTA4LCAwLCAxLFxyXG4gICAgICAgICAgICAvLyAxLCBcImRpdl9zXCJcclxuICAgICAgICAgICAgNSwgMTAwLCAxMDUsIDExOCwgOTUsIDExNSwgMCwgMixcclxuICAgICAgICAgICAgLy8gMiwgXCJkaXZfdVwiXHJcbiAgICAgICAgICAgIDUsIDEwMCwgMTA1LCAxMTgsIDk1LCAxMTcsIDAsIDMsXHJcbiAgICAgICAgICAgIC8vIDMsIFwicmVtX3NcIlxyXG4gICAgICAgICAgICA1LCAxMTQsIDEwMSwgMTA5LCA5NSwgMTE1LCAwLCA0LFxyXG4gICAgICAgICAgICAvLyA0LCBcInJlbV91XCJcclxuICAgICAgICAgICAgNSwgMTE0LCAxMDEsIDEwOSwgOTUsIDExNywgMCwgNSxcclxuICAgICAgICAgICAgLy8gNSwgXCJnZXRfaGlnaFwiXHJcbiAgICAgICAgICAgIDgsIDEwMywgMTAxLCAxMTYsIDk1LCAxMDQsIDEwNSwgMTAzLCAxMDQsIDAsIDAsXHJcbiAgICAgICAgICAgIC8vIHNlY3Rpb24gXCJjb2RlXCJcclxuICAgICAgICAgICAgMTAsIDE5MSwgMSwgNixcclxuICAgICAgICAgICAgLy8gMCwgXCJnZXRfaGlnaFwiXHJcbiAgICAgICAgICAgIDQsIDAsIDM1LCAwLCAxMSxcclxuICAgICAgICAgICAgLy8gMSwgXCJtdWxcIlxyXG4gICAgICAgICAgICAzNiwgMSwgMSwgMTI2LCAzMiwgMCwgMTczLCAzMiwgMSwgMTczLCA2NiwgMzIsIDEzNCwgMTMyLCAzMiwgMiwgMTczLFxyXG4gICAgICAgICAgICAzMiwgMywgMTczLCA2NiwgMzIsIDEzNCwgMTMyLCAxMjYsIDM0LCA0LCA2NiwgMzIsIDEzNSwgMTY3LCAzNiwgMCxcclxuICAgICAgICAgICAgMzIsIDQsIDE2NywgMTEsXHJcbiAgICAgICAgICAgIC8vIDIsIFwiZGl2X3NcIlxyXG4gICAgICAgICAgICAzNiwgMSwgMSwgMTI2LCAzMiwgMCwgMTczLCAzMiwgMSwgMTczLCA2NiwgMzIsIDEzNCwgMTMyLCAzMiwgMiwgMTczLFxyXG4gICAgICAgICAgICAzMiwgMywgMTczLCA2NiwgMzIsIDEzNCwgMTMyLCAxMjcsIDM0LCA0LCA2NiwgMzIsIDEzNSwgMTY3LCAzNiwgMCxcclxuICAgICAgICAgICAgMzIsIDQsIDE2NywgMTEsXHJcbiAgICAgICAgICAgIC8vIDMsIFwiZGl2X3VcIlxyXG4gICAgICAgICAgICAzNiwgMSwgMSwgMTI2LCAzMiwgMCwgMTczLCAzMiwgMSwgMTczLCA2NiwgMzIsIDEzNCwgMTMyLCAzMiwgMiwgMTczLFxyXG4gICAgICAgICAgICAzMiwgMywgMTczLCA2NiwgMzIsIDEzNCwgMTMyLCAxMjgsIDM0LCA0LCA2NiwgMzIsIDEzNSwgMTY3LCAzNiwgMCxcclxuICAgICAgICAgICAgMzIsIDQsIDE2NywgMTEsXHJcbiAgICAgICAgICAgIC8vIDQsIFwicmVtX3NcIlxyXG4gICAgICAgICAgICAzNiwgMSwgMSwgMTI2LCAzMiwgMCwgMTczLCAzMiwgMSwgMTczLCA2NiwgMzIsIDEzNCwgMTMyLCAzMiwgMiwgMTczLFxyXG4gICAgICAgICAgICAzMiwgMywgMTczLCA2NiwgMzIsIDEzNCwgMTMyLCAxMjksIDM0LCA0LCA2NiwgMzIsIDEzNSwgMTY3LCAzNiwgMCxcclxuICAgICAgICAgICAgMzIsIDQsIDE2NywgMTEsXHJcbiAgICAgICAgICAgIC8vIDUsIFwicmVtX3VcIlxyXG4gICAgICAgICAgICAzNiwgMSwgMSwgMTI2LCAzMiwgMCwgMTczLCAzMiwgMSwgMTczLCA2NiwgMzIsIDEzNCwgMTMyLCAzMiwgMiwgMTczLFxyXG4gICAgICAgICAgICAzMiwgMywgMTczLCA2NiwgMzIsIDEzNCwgMTMyLCAxMzAsIDM0LCA0LCA2NiwgMzIsIDEzNSwgMTY3LCAzNiwgMCxcclxuICAgICAgICAgICAgMzIsIDQsIDE2NywgMTEsXHJcbiAgICAgICAgICBdKSxcclxuICAgICAgICApLFxyXG4gICAgICAgIHt9LFxyXG4gICAgICApLmV4cG9ydHM7XHJcbiAgICB9IGNhdGNoIHtcclxuICAgICAgLy8gbm8gd2FzbSBzdXBwb3J0IDooXHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDb25zdHJ1Y3RzIGEgNjQgYml0IHR3bydzLWNvbXBsZW1lbnQgaW50ZWdlciwgZ2l2ZW4gaXRzIGxvdyBhbmQgaGlnaCAzMiBiaXQgdmFsdWVzIGFzICpzaWduZWQqIGludGVnZXJzLlxyXG4gICAgICogIFNlZSB0aGUgZnJvbSogZnVuY3Rpb25zIGJlbG93IGZvciBtb3JlIGNvbnZlbmllbnQgd2F5cyBvZiBjb25zdHJ1Y3RpbmcgTG9uZ3MuXHJcbiAgICAgKiBAZXhwb3J0cyBMb25nXHJcbiAgICAgKiBAY2xhc3MgQSBMb25nIGNsYXNzIGZvciByZXByZXNlbnRpbmcgYSA2NCBiaXQgdHdvJ3MtY29tcGxlbWVudCBpbnRlZ2VyIHZhbHVlLlxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGxvdyBUaGUgbG93IChzaWduZWQpIDMyIGJpdHMgb2YgdGhlIGxvbmdcclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBoaWdoIFRoZSBoaWdoIChzaWduZWQpIDMyIGJpdHMgb2YgdGhlIGxvbmdcclxuICAgICAqIEBwYXJhbSB7Ym9vbGVhbj19IHVuc2lnbmVkIFdoZXRoZXIgdW5zaWduZWQgb3Igbm90LCBkZWZhdWx0cyB0byBzaWduZWRcclxuICAgICAqIEBjb25zdHJ1Y3RvclxyXG4gICAgICovXHJcbiAgICBmdW5jdGlvbiBMb25nKGxvdywgaGlnaCwgdW5zaWduZWQpIHtcclxuICAgICAgLyoqXHJcbiAgICAgICAqIFRoZSBsb3cgMzIgYml0cyBhcyBhIHNpZ25lZCB2YWx1ZS5cclxuICAgICAgICogQHR5cGUge251bWJlcn1cclxuICAgICAgICovXHJcbiAgICAgIHRoaXMubG93ID0gbG93IHwgMDtcclxuXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBUaGUgaGlnaCAzMiBiaXRzIGFzIGEgc2lnbmVkIHZhbHVlLlxyXG4gICAgICAgKiBAdHlwZSB7bnVtYmVyfVxyXG4gICAgICAgKi9cclxuICAgICAgdGhpcy5oaWdoID0gaGlnaCB8IDA7XHJcblxyXG4gICAgICAvKipcclxuICAgICAgICogV2hldGhlciB1bnNpZ25lZCBvciBub3QuXHJcbiAgICAgICAqIEB0eXBlIHtib29sZWFufVxyXG4gICAgICAgKi9cclxuICAgICAgdGhpcy51bnNpZ25lZCA9ICEhdW5zaWduZWQ7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gVGhlIGludGVybmFsIHJlcHJlc2VudGF0aW9uIG9mIGEgbG9uZyBpcyB0aGUgdHdvIGdpdmVuIHNpZ25lZCwgMzItYml0IHZhbHVlcy5cclxuICAgIC8vIFdlIHVzZSAzMi1iaXQgcGllY2VzIGJlY2F1c2UgdGhlc2UgYXJlIHRoZSBzaXplIG9mIGludGVnZXJzIG9uIHdoaWNoXHJcbiAgICAvLyBKYXZhc2NyaXB0IHBlcmZvcm1zIGJpdC1vcGVyYXRpb25zLiAgRm9yIG9wZXJhdGlvbnMgbGlrZSBhZGRpdGlvbiBhbmRcclxuICAgIC8vIG11bHRpcGxpY2F0aW9uLCB3ZSBzcGxpdCBlYWNoIG51bWJlciBpbnRvIDE2IGJpdCBwaWVjZXMsIHdoaWNoIGNhbiBlYXNpbHkgYmVcclxuICAgIC8vIG11bHRpcGxpZWQgd2l0aGluIEphdmFzY3JpcHQncyBmbG9hdGluZy1wb2ludCByZXByZXNlbnRhdGlvbiB3aXRob3V0IG92ZXJmbG93XHJcbiAgICAvLyBvciBjaGFuZ2UgaW4gc2lnbi5cclxuICAgIC8vXHJcbiAgICAvLyBJbiB0aGUgYWxnb3JpdGhtcyBiZWxvdywgd2UgZnJlcXVlbnRseSByZWR1Y2UgdGhlIG5lZ2F0aXZlIGNhc2UgdG8gdGhlXHJcbiAgICAvLyBwb3NpdGl2ZSBjYXNlIGJ5IG5lZ2F0aW5nIHRoZSBpbnB1dChzKSBhbmQgdGhlbiBwb3N0LXByb2Nlc3NpbmcgdGhlIHJlc3VsdC5cclxuICAgIC8vIE5vdGUgdGhhdCB3ZSBtdXN0IEFMV0FZUyBjaGVjayBzcGVjaWFsbHkgd2hldGhlciB0aG9zZSB2YWx1ZXMgYXJlIE1JTl9WQUxVRVxyXG4gICAgLy8gKC0yXjYzKSBiZWNhdXNlIC1NSU5fVkFMVUUgPT0gTUlOX1ZBTFVFIChzaW5jZSAyXjYzIGNhbm5vdCBiZSByZXByZXNlbnRlZCBhc1xyXG4gICAgLy8gYSBwb3NpdGl2ZSBudW1iZXIsIGl0IG92ZXJmbG93cyBiYWNrIGludG8gYSBuZWdhdGl2ZSkuICBOb3QgaGFuZGxpbmcgdGhpc1xyXG4gICAgLy8gY2FzZSB3b3VsZCBvZnRlbiByZXN1bHQgaW4gaW5maW5pdGUgcmVjdXJzaW9uLlxyXG4gICAgLy9cclxuICAgIC8vIENvbW1vbiBjb25zdGFudCB2YWx1ZXMgWkVSTywgT05FLCBORUdfT05FLCBldGMuIGFyZSBkZWZpbmVkIGJlbG93IHRoZSBmcm9tKlxyXG4gICAgLy8gbWV0aG9kcyBvbiB3aGljaCB0aGV5IGRlcGVuZC5cclxuXHJcbiAgICAvKipcclxuICAgICAqIEFuIGluZGljYXRvciB1c2VkIHRvIHJlbGlhYmx5IGRldGVybWluZSBpZiBhbiBvYmplY3QgaXMgYSBMb25nIG9yIG5vdC5cclxuICAgICAqIEB0eXBlIHtib29sZWFufVxyXG4gICAgICogQGNvbnN0XHJcbiAgICAgKiBAcHJpdmF0ZVxyXG4gICAgICovXHJcbiAgICBMb25nLnByb3RvdHlwZS5fX2lzTG9uZ19fO1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KExvbmcucHJvdG90eXBlLCBcIl9faXNMb25nX19cIiwge1xyXG4gICAgICB2YWx1ZTogdHJ1ZSxcclxuICAgIH0pO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogQGZ1bmN0aW9uXHJcbiAgICAgKiBAcGFyYW0geyp9IG9iaiBPYmplY3RcclxuICAgICAqIEByZXR1cm5zIHtib29sZWFufVxyXG4gICAgICogQGlubmVyXHJcbiAgICAgKi9cclxuICAgIGZ1bmN0aW9uIGlzTG9uZyhvYmopIHtcclxuICAgICAgcmV0dXJuIChvYmogJiYgb2JqW1wiX19pc0xvbmdfX1wiXSkgPT09IHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBAZnVuY3Rpb25cclxuICAgICAqIEBwYXJhbSB7Kn0gdmFsdWUgbnVtYmVyXHJcbiAgICAgKiBAcmV0dXJucyB7bnVtYmVyfVxyXG4gICAgICogQGlubmVyXHJcbiAgICAgKi9cclxuICAgIGZ1bmN0aW9uIGN0ejMyKHZhbHVlKSB7XHJcbiAgICAgIHZhciBjID0gTWF0aC5jbHozMih2YWx1ZSAmIC12YWx1ZSk7XHJcbiAgICAgIHJldHVybiB2YWx1ZSA/IDMxIC0gYyA6IGM7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUZXN0cyBpZiB0aGUgc3BlY2lmaWVkIG9iamVjdCBpcyBhIExvbmcuXHJcbiAgICAgKiBAZnVuY3Rpb25cclxuICAgICAqIEBwYXJhbSB7Kn0gb2JqIE9iamVjdFxyXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59XHJcbiAgICAgKi9cclxuICAgIExvbmcuaXNMb25nID0gaXNMb25nO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogQSBjYWNoZSBvZiB0aGUgTG9uZyByZXByZXNlbnRhdGlvbnMgb2Ygc21hbGwgaW50ZWdlciB2YWx1ZXMuXHJcbiAgICAgKiBAdHlwZSB7IU9iamVjdH1cclxuICAgICAqIEBpbm5lclxyXG4gICAgICovXHJcbiAgICB2YXIgSU5UX0NBQ0hFID0ge307XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBBIGNhY2hlIG9mIHRoZSBMb25nIHJlcHJlc2VudGF0aW9ucyBvZiBzbWFsbCB1bnNpZ25lZCBpbnRlZ2VyIHZhbHVlcy5cclxuICAgICAqIEB0eXBlIHshT2JqZWN0fVxyXG4gICAgICogQGlubmVyXHJcbiAgICAgKi9cclxuICAgIHZhciBVSU5UX0NBQ0hFID0ge307XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gdmFsdWVcclxuICAgICAqIEBwYXJhbSB7Ym9vbGVhbj19IHVuc2lnbmVkXHJcbiAgICAgKiBAcmV0dXJucyB7IUxvbmd9XHJcbiAgICAgKiBAaW5uZXJcclxuICAgICAqL1xyXG4gICAgZnVuY3Rpb24gZnJvbUludCh2YWx1ZSwgdW5zaWduZWQpIHtcclxuICAgICAgdmFyIG9iaiwgY2FjaGVkT2JqLCBjYWNoZTtcclxuICAgICAgaWYgKHVuc2lnbmVkKSB7XHJcbiAgICAgICAgdmFsdWUgPj4+PSAwO1xyXG4gICAgICAgIGlmICgoY2FjaGUgPSAwIDw9IHZhbHVlICYmIHZhbHVlIDwgMjU2KSkge1xyXG4gICAgICAgICAgY2FjaGVkT2JqID0gVUlOVF9DQUNIRVt2YWx1ZV07XHJcbiAgICAgICAgICBpZiAoY2FjaGVkT2JqKSByZXR1cm4gY2FjaGVkT2JqO1xyXG4gICAgICAgIH1cclxuICAgICAgICBvYmogPSBmcm9tQml0cyh2YWx1ZSwgMCwgdHJ1ZSk7XHJcbiAgICAgICAgaWYgKGNhY2hlKSBVSU5UX0NBQ0hFW3ZhbHVlXSA9IG9iajtcclxuICAgICAgICByZXR1cm4gb2JqO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHZhbHVlIHw9IDA7XHJcbiAgICAgICAgaWYgKChjYWNoZSA9IC0xMjggPD0gdmFsdWUgJiYgdmFsdWUgPCAxMjgpKSB7XHJcbiAgICAgICAgICBjYWNoZWRPYmogPSBJTlRfQ0FDSEVbdmFsdWVdO1xyXG4gICAgICAgICAgaWYgKGNhY2hlZE9iaikgcmV0dXJuIGNhY2hlZE9iajtcclxuICAgICAgICB9XHJcbiAgICAgICAgb2JqID0gZnJvbUJpdHModmFsdWUsIHZhbHVlIDwgMCA/IC0xIDogMCwgZmFsc2UpO1xyXG4gICAgICAgIGlmIChjYWNoZSkgSU5UX0NBQ0hFW3ZhbHVlXSA9IG9iajtcclxuICAgICAgICByZXR1cm4gb2JqO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIGEgTG9uZyByZXByZXNlbnRpbmcgdGhlIGdpdmVuIDMyIGJpdCBpbnRlZ2VyIHZhbHVlLlxyXG4gICAgICogQGZ1bmN0aW9uXHJcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gdmFsdWUgVGhlIDMyIGJpdCBpbnRlZ2VyIGluIHF1ZXN0aW9uXHJcbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW49fSB1bnNpZ25lZCBXaGV0aGVyIHVuc2lnbmVkIG9yIG5vdCwgZGVmYXVsdHMgdG8gc2lnbmVkXHJcbiAgICAgKiBAcmV0dXJucyB7IUxvbmd9IFRoZSBjb3JyZXNwb25kaW5nIExvbmcgdmFsdWVcclxuICAgICAqL1xyXG4gICAgTG9uZy5mcm9tSW50ID0gZnJvbUludDtcclxuXHJcbiAgICAvKipcclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSB2YWx1ZVxyXG4gICAgICogQHBhcmFtIHtib29sZWFuPX0gdW5zaWduZWRcclxuICAgICAqIEByZXR1cm5zIHshTG9uZ31cclxuICAgICAqIEBpbm5lclxyXG4gICAgICovXHJcbiAgICBmdW5jdGlvbiBmcm9tTnVtYmVyKHZhbHVlLCB1bnNpZ25lZCkge1xyXG4gICAgICBpZiAoaXNOYU4odmFsdWUpKSByZXR1cm4gdW5zaWduZWQgPyBVWkVSTyA6IFpFUk87XHJcbiAgICAgIGlmICh1bnNpZ25lZCkge1xyXG4gICAgICAgIGlmICh2YWx1ZSA8IDApIHJldHVybiBVWkVSTztcclxuICAgICAgICBpZiAodmFsdWUgPj0gVFdPX1BXUl82NF9EQkwpIHJldHVybiBNQVhfVU5TSUdORURfVkFMVUU7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgaWYgKHZhbHVlIDw9IC1UV09fUFdSXzYzX0RCTCkgcmV0dXJuIE1JTl9WQUxVRTtcclxuICAgICAgICBpZiAodmFsdWUgKyAxID49IFRXT19QV1JfNjNfREJMKSByZXR1cm4gTUFYX1ZBTFVFO1xyXG4gICAgICB9XHJcbiAgICAgIGlmICh2YWx1ZSA8IDApIHJldHVybiBmcm9tTnVtYmVyKC12YWx1ZSwgdW5zaWduZWQpLm5lZygpO1xyXG4gICAgICByZXR1cm4gZnJvbUJpdHMoXHJcbiAgICAgICAgdmFsdWUgJSBUV09fUFdSXzMyX0RCTCB8IDAsXHJcbiAgICAgICAgKHZhbHVlIC8gVFdPX1BXUl8zMl9EQkwpIHwgMCxcclxuICAgICAgICB1bnNpZ25lZCxcclxuICAgICAgKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgYSBMb25nIHJlcHJlc2VudGluZyB0aGUgZ2l2ZW4gdmFsdWUsIHByb3ZpZGVkIHRoYXQgaXQgaXMgYSBmaW5pdGUgbnVtYmVyLiBPdGhlcndpc2UsIHplcm8gaXMgcmV0dXJuZWQuXHJcbiAgICAgKiBAZnVuY3Rpb25cclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSB2YWx1ZSBUaGUgbnVtYmVyIGluIHF1ZXN0aW9uXHJcbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW49fSB1bnNpZ25lZCBXaGV0aGVyIHVuc2lnbmVkIG9yIG5vdCwgZGVmYXVsdHMgdG8gc2lnbmVkXHJcbiAgICAgKiBAcmV0dXJucyB7IUxvbmd9IFRoZSBjb3JyZXNwb25kaW5nIExvbmcgdmFsdWVcclxuICAgICAqL1xyXG4gICAgTG9uZy5mcm9tTnVtYmVyID0gZnJvbU51bWJlcjtcclxuXHJcbiAgICAvKipcclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBsb3dCaXRzXHJcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gaGlnaEJpdHNcclxuICAgICAqIEBwYXJhbSB7Ym9vbGVhbj19IHVuc2lnbmVkXHJcbiAgICAgKiBAcmV0dXJucyB7IUxvbmd9XHJcbiAgICAgKiBAaW5uZXJcclxuICAgICAqL1xyXG4gICAgZnVuY3Rpb24gZnJvbUJpdHMobG93Qml0cywgaGlnaEJpdHMsIHVuc2lnbmVkKSB7XHJcbiAgICAgIHJldHVybiBuZXcgTG9uZyhsb3dCaXRzLCBoaWdoQml0cywgdW5zaWduZWQpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyBhIExvbmcgcmVwcmVzZW50aW5nIHRoZSA2NCBiaXQgaW50ZWdlciB0aGF0IGNvbWVzIGJ5IGNvbmNhdGVuYXRpbmcgdGhlIGdpdmVuIGxvdyBhbmQgaGlnaCBiaXRzLiBFYWNoIGlzXHJcbiAgICAgKiAgYXNzdW1lZCB0byB1c2UgMzIgYml0cy5cclxuICAgICAqIEBmdW5jdGlvblxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGxvd0JpdHMgVGhlIGxvdyAzMiBiaXRzXHJcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gaGlnaEJpdHMgVGhlIGhpZ2ggMzIgYml0c1xyXG4gICAgICogQHBhcmFtIHtib29sZWFuPX0gdW5zaWduZWQgV2hldGhlciB1bnNpZ25lZCBvciBub3QsIGRlZmF1bHRzIHRvIHNpZ25lZFxyXG4gICAgICogQHJldHVybnMgeyFMb25nfSBUaGUgY29ycmVzcG9uZGluZyBMb25nIHZhbHVlXHJcbiAgICAgKi9cclxuICAgIExvbmcuZnJvbUJpdHMgPSBmcm9tQml0cztcclxuXHJcbiAgICAvKipcclxuICAgICAqIEBmdW5jdGlvblxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGJhc2VcclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBleHBvbmVudFxyXG4gICAgICogQHJldHVybnMge251bWJlcn1cclxuICAgICAqIEBpbm5lclxyXG4gICAgICovXHJcbiAgICB2YXIgcG93X2RibCA9IE1hdGgucG93OyAvLyBVc2VkIDQgdGltZXMgKDQqOCB0byAxNSs0KVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHN0clxyXG4gICAgICogQHBhcmFtIHsoYm9vbGVhbnxudW1iZXIpPX0gdW5zaWduZWRcclxuICAgICAqIEBwYXJhbSB7bnVtYmVyPX0gcmFkaXhcclxuICAgICAqIEByZXR1cm5zIHshTG9uZ31cclxuICAgICAqIEBpbm5lclxyXG4gICAgICovXHJcbiAgICBmdW5jdGlvbiBmcm9tU3RyaW5nKHN0ciwgdW5zaWduZWQsIHJhZGl4KSB7XHJcbiAgICAgIGlmIChzdHIubGVuZ3RoID09PSAwKSB0aHJvdyBFcnJvcihcImVtcHR5IHN0cmluZ1wiKTtcclxuICAgICAgaWYgKHR5cGVvZiB1bnNpZ25lZCA9PT0gXCJudW1iZXJcIikge1xyXG4gICAgICAgIC8vIEZvciBnb29nLm1hdGgubG9uZyBjb21wYXRpYmlsaXR5XHJcbiAgICAgICAgcmFkaXggPSB1bnNpZ25lZDtcclxuICAgICAgICB1bnNpZ25lZCA9IGZhbHNlO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHVuc2lnbmVkID0gISF1bnNpZ25lZDtcclxuICAgICAgfVxyXG4gICAgICBpZiAoXHJcbiAgICAgICAgc3RyID09PSBcIk5hTlwiIHx8XHJcbiAgICAgICAgc3RyID09PSBcIkluZmluaXR5XCIgfHxcclxuICAgICAgICBzdHIgPT09IFwiK0luZmluaXR5XCIgfHxcclxuICAgICAgICBzdHIgPT09IFwiLUluZmluaXR5XCJcclxuICAgICAgKVxyXG4gICAgICAgIHJldHVybiB1bnNpZ25lZCA/IFVaRVJPIDogWkVSTztcclxuICAgICAgcmFkaXggPSByYWRpeCB8fCAxMDtcclxuICAgICAgaWYgKHJhZGl4IDwgMiB8fCAzNiA8IHJhZGl4KSB0aHJvdyBSYW5nZUVycm9yKFwicmFkaXhcIik7XHJcbiAgICAgIHZhciBwO1xyXG4gICAgICBpZiAoKHAgPSBzdHIuaW5kZXhPZihcIi1cIikpID4gMCkgdGhyb3cgRXJyb3IoXCJpbnRlcmlvciBoeXBoZW5cIik7XHJcbiAgICAgIGVsc2UgaWYgKHAgPT09IDApIHtcclxuICAgICAgICByZXR1cm4gZnJvbVN0cmluZyhzdHIuc3Vic3RyaW5nKDEpLCB1bnNpZ25lZCwgcmFkaXgpLm5lZygpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAvLyBEbyBzZXZlcmFsICg4KSBkaWdpdHMgZWFjaCB0aW1lIHRocm91Z2ggdGhlIGxvb3AsIHNvIGFzIHRvXHJcbiAgICAgIC8vIG1pbmltaXplIHRoZSBjYWxscyB0byB0aGUgdmVyeSBleHBlbnNpdmUgZW11bGF0ZWQgZGl2LlxyXG4gICAgICB2YXIgcmFkaXhUb1Bvd2VyID0gZnJvbU51bWJlcihwb3dfZGJsKHJhZGl4LCA4KSk7XHJcbiAgICAgIHZhciByZXN1bHQgPSBaRVJPO1xyXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHN0ci5sZW5ndGg7IGkgKz0gOCkge1xyXG4gICAgICAgIHZhciBzaXplID0gTWF0aC5taW4oOCwgc3RyLmxlbmd0aCAtIGkpLFxyXG4gICAgICAgICAgdmFsdWUgPSBwYXJzZUludChzdHIuc3Vic3RyaW5nKGksIGkgKyBzaXplKSwgcmFkaXgpO1xyXG4gICAgICAgIGlmIChzaXplIDwgOCkge1xyXG4gICAgICAgICAgdmFyIHBvd2VyID0gZnJvbU51bWJlcihwb3dfZGJsKHJhZGl4LCBzaXplKSk7XHJcbiAgICAgICAgICByZXN1bHQgPSByZXN1bHQubXVsKHBvd2VyKS5hZGQoZnJvbU51bWJlcih2YWx1ZSkpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICByZXN1bHQgPSByZXN1bHQubXVsKHJhZGl4VG9Qb3dlcik7XHJcbiAgICAgICAgICByZXN1bHQgPSByZXN1bHQuYWRkKGZyb21OdW1iZXIodmFsdWUpKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgcmVzdWx0LnVuc2lnbmVkID0gdW5zaWduZWQ7XHJcbiAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIGEgTG9uZyByZXByZXNlbnRhdGlvbiBvZiB0aGUgZ2l2ZW4gc3RyaW5nLCB3cml0dGVuIHVzaW5nIHRoZSBzcGVjaWZpZWQgcmFkaXguXHJcbiAgICAgKiBAZnVuY3Rpb25cclxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBzdHIgVGhlIHRleHR1YWwgcmVwcmVzZW50YXRpb24gb2YgdGhlIExvbmdcclxuICAgICAqIEBwYXJhbSB7KGJvb2xlYW58bnVtYmVyKT19IHVuc2lnbmVkIFdoZXRoZXIgdW5zaWduZWQgb3Igbm90LCBkZWZhdWx0cyB0byBzaWduZWRcclxuICAgICAqIEBwYXJhbSB7bnVtYmVyPX0gcmFkaXggVGhlIHJhZGl4IGluIHdoaWNoIHRoZSB0ZXh0IGlzIHdyaXR0ZW4gKDItMzYpLCBkZWZhdWx0cyB0byAxMFxyXG4gICAgICogQHJldHVybnMgeyFMb25nfSBUaGUgY29ycmVzcG9uZGluZyBMb25nIHZhbHVlXHJcbiAgICAgKi9cclxuICAgIExvbmcuZnJvbVN0cmluZyA9IGZyb21TdHJpbmc7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBAZnVuY3Rpb25cclxuICAgICAqIEBwYXJhbSB7IUxvbmd8bnVtYmVyfHN0cmluZ3whe2xvdzogbnVtYmVyLCBoaWdoOiBudW1iZXIsIHVuc2lnbmVkOiBib29sZWFufX0gdmFsXHJcbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW49fSB1bnNpZ25lZFxyXG4gICAgICogQHJldHVybnMgeyFMb25nfVxyXG4gICAgICogQGlubmVyXHJcbiAgICAgKi9cclxuICAgIGZ1bmN0aW9uIGZyb21WYWx1ZSh2YWwsIHVuc2lnbmVkKSB7XHJcbiAgICAgIGlmICh0eXBlb2YgdmFsID09PSBcIm51bWJlclwiKSByZXR1cm4gZnJvbU51bWJlcih2YWwsIHVuc2lnbmVkKTtcclxuICAgICAgaWYgKHR5cGVvZiB2YWwgPT09IFwic3RyaW5nXCIpIHJldHVybiBmcm9tU3RyaW5nKHZhbCwgdW5zaWduZWQpO1xyXG4gICAgICAvLyBUaHJvd3MgZm9yIG5vbi1vYmplY3RzLCBjb252ZXJ0cyBub24taW5zdGFuY2VvZiBMb25nOlxyXG4gICAgICByZXR1cm4gZnJvbUJpdHMoXHJcbiAgICAgICAgdmFsLmxvdyxcclxuICAgICAgICB2YWwuaGlnaCxcclxuICAgICAgICB0eXBlb2YgdW5zaWduZWQgPT09IFwiYm9vbGVhblwiID8gdW5zaWduZWQgOiB2YWwudW5zaWduZWQsXHJcbiAgICAgICk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDb252ZXJ0cyB0aGUgc3BlY2lmaWVkIHZhbHVlIHRvIGEgTG9uZyB1c2luZyB0aGUgYXBwcm9wcmlhdGUgZnJvbSogZnVuY3Rpb24gZm9yIGl0cyB0eXBlLlxyXG4gICAgICogQGZ1bmN0aW9uXHJcbiAgICAgKiBAcGFyYW0geyFMb25nfG51bWJlcnxiaWdpbnR8c3RyaW5nfCF7bG93OiBudW1iZXIsIGhpZ2g6IG51bWJlciwgdW5zaWduZWQ6IGJvb2xlYW59fSB2YWwgVmFsdWVcclxuICAgICAqIEBwYXJhbSB7Ym9vbGVhbj19IHVuc2lnbmVkIFdoZXRoZXIgdW5zaWduZWQgb3Igbm90LCBkZWZhdWx0cyB0byBzaWduZWRcclxuICAgICAqIEByZXR1cm5zIHshTG9uZ31cclxuICAgICAqL1xyXG4gICAgTG9uZy5mcm9tVmFsdWUgPSBmcm9tVmFsdWU7XHJcblxyXG4gICAgLy8gTk9URTogdGhlIGNvbXBpbGVyIHNob3VsZCBpbmxpbmUgdGhlc2UgY29uc3RhbnQgdmFsdWVzIGJlbG93IGFuZCB0aGVuIHJlbW92ZSB0aGVzZSB2YXJpYWJsZXMsIHNvIHRoZXJlIHNob3VsZCBiZVxyXG4gICAgLy8gbm8gcnVudGltZSBwZW5hbHR5IGZvciB0aGVzZS5cclxuXHJcbiAgICAvKipcclxuICAgICAqIEB0eXBlIHtudW1iZXJ9XHJcbiAgICAgKiBAY29uc3RcclxuICAgICAqIEBpbm5lclxyXG4gICAgICovXHJcbiAgICB2YXIgVFdPX1BXUl8xNl9EQkwgPSAxIDw8IDE2O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogQHR5cGUge251bWJlcn1cclxuICAgICAqIEBjb25zdFxyXG4gICAgICogQGlubmVyXHJcbiAgICAgKi9cclxuICAgIHZhciBUV09fUFdSXzI0X0RCTCA9IDEgPDwgMjQ7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBAdHlwZSB7bnVtYmVyfVxyXG4gICAgICogQGNvbnN0XHJcbiAgICAgKiBAaW5uZXJcclxuICAgICAqL1xyXG4gICAgdmFyIFRXT19QV1JfMzJfREJMID0gVFdPX1BXUl8xNl9EQkwgKiBUV09fUFdSXzE2X0RCTDtcclxuXHJcbiAgICAvKipcclxuICAgICAqIEB0eXBlIHtudW1iZXJ9XHJcbiAgICAgKiBAY29uc3RcclxuICAgICAqIEBpbm5lclxyXG4gICAgICovXHJcbiAgICB2YXIgVFdPX1BXUl82NF9EQkwgPSBUV09fUFdSXzMyX0RCTCAqIFRXT19QV1JfMzJfREJMO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogQHR5cGUge251bWJlcn1cclxuICAgICAqIEBjb25zdFxyXG4gICAgICogQGlubmVyXHJcbiAgICAgKi9cclxuICAgIHZhciBUV09fUFdSXzYzX0RCTCA9IFRXT19QV1JfNjRfREJMIC8gMjtcclxuXHJcbiAgICAvKipcclxuICAgICAqIEB0eXBlIHshTG9uZ31cclxuICAgICAqIEBjb25zdFxyXG4gICAgICogQGlubmVyXHJcbiAgICAgKi9cclxuICAgIHZhciBUV09fUFdSXzI0ID0gZnJvbUludChUV09fUFdSXzI0X0RCTCk7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBAdHlwZSB7IUxvbmd9XHJcbiAgICAgKiBAaW5uZXJcclxuICAgICAqL1xyXG4gICAgdmFyIFpFUk8gPSBmcm9tSW50KDApO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogU2lnbmVkIHplcm8uXHJcbiAgICAgKiBAdHlwZSB7IUxvbmd9XHJcbiAgICAgKi9cclxuICAgIExvbmcuWkVSTyA9IFpFUk87XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBAdHlwZSB7IUxvbmd9XHJcbiAgICAgKiBAaW5uZXJcclxuICAgICAqL1xyXG4gICAgdmFyIFVaRVJPID0gZnJvbUludCgwLCB0cnVlKTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFVuc2lnbmVkIHplcm8uXHJcbiAgICAgKiBAdHlwZSB7IUxvbmd9XHJcbiAgICAgKi9cclxuICAgIExvbmcuVVpFUk8gPSBVWkVSTztcclxuXHJcbiAgICAvKipcclxuICAgICAqIEB0eXBlIHshTG9uZ31cclxuICAgICAqIEBpbm5lclxyXG4gICAgICovXHJcbiAgICB2YXIgT05FID0gZnJvbUludCgxKTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFNpZ25lZCBvbmUuXHJcbiAgICAgKiBAdHlwZSB7IUxvbmd9XHJcbiAgICAgKi9cclxuICAgIExvbmcuT05FID0gT05FO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogQHR5cGUgeyFMb25nfVxyXG4gICAgICogQGlubmVyXHJcbiAgICAgKi9cclxuICAgIHZhciBVT05FID0gZnJvbUludCgxLCB0cnVlKTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFVuc2lnbmVkIG9uZS5cclxuICAgICAqIEB0eXBlIHshTG9uZ31cclxuICAgICAqL1xyXG4gICAgTG9uZy5VT05FID0gVU9ORTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIEB0eXBlIHshTG9uZ31cclxuICAgICAqIEBpbm5lclxyXG4gICAgICovXHJcbiAgICB2YXIgTkVHX09ORSA9IGZyb21JbnQoLTEpO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogU2lnbmVkIG5lZ2F0aXZlIG9uZS5cclxuICAgICAqIEB0eXBlIHshTG9uZ31cclxuICAgICAqL1xyXG4gICAgTG9uZy5ORUdfT05FID0gTkVHX09ORTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIEB0eXBlIHshTG9uZ31cclxuICAgICAqIEBpbm5lclxyXG4gICAgICovXHJcbiAgICB2YXIgTUFYX1ZBTFVFID0gZnJvbUJpdHMoMHhmZmZmZmZmZiB8IDAsIDB4N2ZmZmZmZmYgfCAwLCBmYWxzZSk7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBNYXhpbXVtIHNpZ25lZCB2YWx1ZS5cclxuICAgICAqIEB0eXBlIHshTG9uZ31cclxuICAgICAqL1xyXG4gICAgTG9uZy5NQVhfVkFMVUUgPSBNQVhfVkFMVUU7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBAdHlwZSB7IUxvbmd9XHJcbiAgICAgKiBAaW5uZXJcclxuICAgICAqL1xyXG4gICAgdmFyIE1BWF9VTlNJR05FRF9WQUxVRSA9IGZyb21CaXRzKDB4ZmZmZmZmZmYgfCAwLCAweGZmZmZmZmZmIHwgMCwgdHJ1ZSk7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBNYXhpbXVtIHVuc2lnbmVkIHZhbHVlLlxyXG4gICAgICogQHR5cGUgeyFMb25nfVxyXG4gICAgICovXHJcbiAgICBMb25nLk1BWF9VTlNJR05FRF9WQUxVRSA9IE1BWF9VTlNJR05FRF9WQUxVRTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIEB0eXBlIHshTG9uZ31cclxuICAgICAqIEBpbm5lclxyXG4gICAgICovXHJcbiAgICB2YXIgTUlOX1ZBTFVFID0gZnJvbUJpdHMoMCwgMHg4MDAwMDAwMCB8IDAsIGZhbHNlKTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIE1pbmltdW0gc2lnbmVkIHZhbHVlLlxyXG4gICAgICogQHR5cGUgeyFMb25nfVxyXG4gICAgICovXHJcbiAgICBMb25nLk1JTl9WQUxVRSA9IE1JTl9WQUxVRTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIEBhbGlhcyBMb25nLnByb3RvdHlwZVxyXG4gICAgICogQGlubmVyXHJcbiAgICAgKi9cclxuICAgIHZhciBMb25nUHJvdG90eXBlID0gTG9uZy5wcm90b3R5cGU7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDb252ZXJ0cyB0aGUgTG9uZyB0byBhIDMyIGJpdCBpbnRlZ2VyLCBhc3N1bWluZyBpdCBpcyBhIDMyIGJpdCBpbnRlZ2VyLlxyXG4gICAgICogQHRoaXMgeyFMb25nfVxyXG4gICAgICogQHJldHVybnMge251bWJlcn1cclxuICAgICAqL1xyXG4gICAgTG9uZ1Byb3RvdHlwZS50b0ludCA9IGZ1bmN0aW9uIHRvSW50KCkge1xyXG4gICAgICByZXR1cm4gdGhpcy51bnNpZ25lZCA/IHRoaXMubG93ID4+PiAwIDogdGhpcy5sb3c7XHJcbiAgICB9O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ29udmVydHMgdGhlIExvbmcgdG8gYSB0aGUgbmVhcmVzdCBmbG9hdGluZy1wb2ludCByZXByZXNlbnRhdGlvbiBvZiB0aGlzIHZhbHVlIChkb3VibGUsIDUzIGJpdCBtYW50aXNzYSkuXHJcbiAgICAgKiBAdGhpcyB7IUxvbmd9XHJcbiAgICAgKiBAcmV0dXJucyB7bnVtYmVyfVxyXG4gICAgICovXHJcbiAgICBMb25nUHJvdG90eXBlLnRvTnVtYmVyID0gZnVuY3Rpb24gdG9OdW1iZXIoKSB7XHJcbiAgICAgIGlmICh0aGlzLnVuc2lnbmVkKVxyXG4gICAgICAgIHJldHVybiAodGhpcy5oaWdoID4+PiAwKSAqIFRXT19QV1JfMzJfREJMICsgKHRoaXMubG93ID4+PiAwKTtcclxuICAgICAgcmV0dXJuIHRoaXMuaGlnaCAqIFRXT19QV1JfMzJfREJMICsgKHRoaXMubG93ID4+PiAwKTtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDb252ZXJ0cyB0aGUgTG9uZyB0byBhIHN0cmluZyB3cml0dGVuIGluIHRoZSBzcGVjaWZpZWQgcmFkaXguXHJcbiAgICAgKiBAdGhpcyB7IUxvbmd9XHJcbiAgICAgKiBAcGFyYW0ge251bWJlcj19IHJhZGl4IFJhZGl4ICgyLTM2KSwgZGVmYXVsdHMgdG8gMTBcclxuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9XHJcbiAgICAgKiBAb3ZlcnJpZGVcclxuICAgICAqIEB0aHJvd3Mge1JhbmdlRXJyb3J9IElmIGByYWRpeGAgaXMgb3V0IG9mIHJhbmdlXHJcbiAgICAgKi9cclxuICAgIExvbmdQcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZyhyYWRpeCkge1xyXG4gICAgICByYWRpeCA9IHJhZGl4IHx8IDEwO1xyXG4gICAgICBpZiAocmFkaXggPCAyIHx8IDM2IDwgcmFkaXgpIHRocm93IFJhbmdlRXJyb3IoXCJyYWRpeFwiKTtcclxuICAgICAgaWYgKHRoaXMuaXNaZXJvKCkpIHJldHVybiBcIjBcIjtcclxuICAgICAgaWYgKHRoaXMuaXNOZWdhdGl2ZSgpKSB7XHJcbiAgICAgICAgLy8gVW5zaWduZWQgTG9uZ3MgYXJlIG5ldmVyIG5lZ2F0aXZlXHJcbiAgICAgICAgaWYgKHRoaXMuZXEoTUlOX1ZBTFVFKSkge1xyXG4gICAgICAgICAgLy8gV2UgbmVlZCB0byBjaGFuZ2UgdGhlIExvbmcgdmFsdWUgYmVmb3JlIGl0IGNhbiBiZSBuZWdhdGVkLCBzbyB3ZSByZW1vdmVcclxuICAgICAgICAgIC8vIHRoZSBib3R0b20tbW9zdCBkaWdpdCBpbiB0aGlzIGJhc2UgYW5kIHRoZW4gcmVjdXJzZSB0byBkbyB0aGUgcmVzdC5cclxuICAgICAgICAgIHZhciByYWRpeExvbmcgPSBmcm9tTnVtYmVyKHJhZGl4KSxcclxuICAgICAgICAgICAgZGl2ID0gdGhpcy5kaXYocmFkaXhMb25nKSxcclxuICAgICAgICAgICAgcmVtMSA9IGRpdi5tdWwocmFkaXhMb25nKS5zdWIodGhpcyk7XHJcbiAgICAgICAgICByZXR1cm4gZGl2LnRvU3RyaW5nKHJhZGl4KSArIHJlbTEudG9JbnQoKS50b1N0cmluZyhyYWRpeCk7XHJcbiAgICAgICAgfSBlbHNlIHJldHVybiBcIi1cIiArIHRoaXMubmVnKCkudG9TdHJpbmcocmFkaXgpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAvLyBEbyBzZXZlcmFsICg2KSBkaWdpdHMgZWFjaCB0aW1lIHRocm91Z2ggdGhlIGxvb3AsIHNvIGFzIHRvXHJcbiAgICAgIC8vIG1pbmltaXplIHRoZSBjYWxscyB0byB0aGUgdmVyeSBleHBlbnNpdmUgZW11bGF0ZWQgZGl2LlxyXG4gICAgICB2YXIgcmFkaXhUb1Bvd2VyID0gZnJvbU51bWJlcihwb3dfZGJsKHJhZGl4LCA2KSwgdGhpcy51bnNpZ25lZCksXHJcbiAgICAgICAgcmVtID0gdGhpcztcclxuICAgICAgdmFyIHJlc3VsdCA9IFwiXCI7XHJcbiAgICAgIHdoaWxlICh0cnVlKSB7XHJcbiAgICAgICAgdmFyIHJlbURpdiA9IHJlbS5kaXYocmFkaXhUb1Bvd2VyKSxcclxuICAgICAgICAgIGludHZhbCA9IHJlbS5zdWIocmVtRGl2Lm11bChyYWRpeFRvUG93ZXIpKS50b0ludCgpID4+PiAwLFxyXG4gICAgICAgICAgZGlnaXRzID0gaW50dmFsLnRvU3RyaW5nKHJhZGl4KTtcclxuICAgICAgICByZW0gPSByZW1EaXY7XHJcbiAgICAgICAgaWYgKHJlbS5pc1plcm8oKSkgcmV0dXJuIGRpZ2l0cyArIHJlc3VsdDtcclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgIHdoaWxlIChkaWdpdHMubGVuZ3RoIDwgNikgZGlnaXRzID0gXCIwXCIgKyBkaWdpdHM7XHJcbiAgICAgICAgICByZXN1bHQgPSBcIlwiICsgZGlnaXRzICsgcmVzdWx0O1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIEdldHMgdGhlIGhpZ2ggMzIgYml0cyBhcyBhIHNpZ25lZCBpbnRlZ2VyLlxyXG4gICAgICogQHRoaXMgeyFMb25nfVxyXG4gICAgICogQHJldHVybnMge251bWJlcn0gU2lnbmVkIGhpZ2ggYml0c1xyXG4gICAgICovXHJcbiAgICBMb25nUHJvdG90eXBlLmdldEhpZ2hCaXRzID0gZnVuY3Rpb24gZ2V0SGlnaEJpdHMoKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLmhpZ2g7XHJcbiAgICB9O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0cyB0aGUgaGlnaCAzMiBiaXRzIGFzIGFuIHVuc2lnbmVkIGludGVnZXIuXHJcbiAgICAgKiBAdGhpcyB7IUxvbmd9XHJcbiAgICAgKiBAcmV0dXJucyB7bnVtYmVyfSBVbnNpZ25lZCBoaWdoIGJpdHNcclxuICAgICAqL1xyXG4gICAgTG9uZ1Byb3RvdHlwZS5nZXRIaWdoQml0c1Vuc2lnbmVkID0gZnVuY3Rpb24gZ2V0SGlnaEJpdHNVbnNpZ25lZCgpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuaGlnaCA+Pj4gMDtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXRzIHRoZSBsb3cgMzIgYml0cyBhcyBhIHNpZ25lZCBpbnRlZ2VyLlxyXG4gICAgICogQHRoaXMgeyFMb25nfVxyXG4gICAgICogQHJldHVybnMge251bWJlcn0gU2lnbmVkIGxvdyBiaXRzXHJcbiAgICAgKi9cclxuICAgIExvbmdQcm90b3R5cGUuZ2V0TG93Qml0cyA9IGZ1bmN0aW9uIGdldExvd0JpdHMoKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLmxvdztcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXRzIHRoZSBsb3cgMzIgYml0cyBhcyBhbiB1bnNpZ25lZCBpbnRlZ2VyLlxyXG4gICAgICogQHRoaXMgeyFMb25nfVxyXG4gICAgICogQHJldHVybnMge251bWJlcn0gVW5zaWduZWQgbG93IGJpdHNcclxuICAgICAqL1xyXG4gICAgTG9uZ1Byb3RvdHlwZS5nZXRMb3dCaXRzVW5zaWduZWQgPSBmdW5jdGlvbiBnZXRMb3dCaXRzVW5zaWduZWQoKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLmxvdyA+Pj4gMDtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXRzIHRoZSBudW1iZXIgb2YgYml0cyBuZWVkZWQgdG8gcmVwcmVzZW50IHRoZSBhYnNvbHV0ZSB2YWx1ZSBvZiB0aGlzIExvbmcuXHJcbiAgICAgKiBAdGhpcyB7IUxvbmd9XHJcbiAgICAgKiBAcmV0dXJucyB7bnVtYmVyfVxyXG4gICAgICovXHJcbiAgICBMb25nUHJvdG90eXBlLmdldE51bUJpdHNBYnMgPSBmdW5jdGlvbiBnZXROdW1CaXRzQWJzKCkge1xyXG4gICAgICBpZiAodGhpcy5pc05lZ2F0aXZlKCkpXHJcbiAgICAgICAgLy8gVW5zaWduZWQgTG9uZ3MgYXJlIG5ldmVyIG5lZ2F0aXZlXHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZXEoTUlOX1ZBTFVFKSA/IDY0IDogdGhpcy5uZWcoKS5nZXROdW1CaXRzQWJzKCk7XHJcbiAgICAgIHZhciB2YWwgPSB0aGlzLmhpZ2ggIT0gMCA/IHRoaXMuaGlnaCA6IHRoaXMubG93O1xyXG4gICAgICBmb3IgKHZhciBiaXQgPSAzMTsgYml0ID4gMDsgYml0LS0pIGlmICgodmFsICYgKDEgPDwgYml0KSkgIT0gMCkgYnJlYWs7XHJcbiAgICAgIHJldHVybiB0aGlzLmhpZ2ggIT0gMCA/IGJpdCArIDMzIDogYml0ICsgMTtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUZXN0cyBpZiB0aGlzIExvbmcgY2FuIGJlIHNhZmVseSByZXByZXNlbnRlZCBhcyBhIEphdmFTY3JpcHQgbnVtYmVyLlxyXG4gICAgICogQHRoaXMgeyFMb25nfVxyXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59XHJcbiAgICAgKi9cclxuICAgIExvbmdQcm90b3R5cGUuaXNTYWZlSW50ZWdlciA9IGZ1bmN0aW9uIGlzU2FmZUludGVnZXIoKSB7XHJcbiAgICAgIC8vIDJeNTMtMSBpcyB0aGUgbWF4aW11bSBzYWZlIHZhbHVlXHJcbiAgICAgIHZhciB0b3AxMUJpdHMgPSB0aGlzLmhpZ2ggPj4gMjE7XHJcbiAgICAgIC8vIFswLCAyXjUzLTFdXHJcbiAgICAgIGlmICghdG9wMTFCaXRzKSByZXR1cm4gdHJ1ZTtcclxuICAgICAgLy8gPiAyXjUzLTFcclxuICAgICAgaWYgKHRoaXMudW5zaWduZWQpIHJldHVybiBmYWxzZTtcclxuICAgICAgLy8gWy0yXjUzLCAtMV0gZXhjZXB0IC0yXjUzXHJcbiAgICAgIHJldHVybiB0b3AxMUJpdHMgPT09IC0xICYmICEodGhpcy5sb3cgPT09IDAgJiYgdGhpcy5oaWdoID09PSAtMHgyMDAwMDApO1xyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFRlc3RzIGlmIHRoaXMgTG9uZydzIHZhbHVlIGVxdWFscyB6ZXJvLlxyXG4gICAgICogQHRoaXMgeyFMb25nfVxyXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59XHJcbiAgICAgKi9cclxuICAgIExvbmdQcm90b3R5cGUuaXNaZXJvID0gZnVuY3Rpb24gaXNaZXJvKCkge1xyXG4gICAgICByZXR1cm4gdGhpcy5oaWdoID09PSAwICYmIHRoaXMubG93ID09PSAwO1xyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFRlc3RzIGlmIHRoaXMgTG9uZydzIHZhbHVlIGVxdWFscyB6ZXJvLiBUaGlzIGlzIGFuIGFsaWFzIG9mIHtAbGluayBMb25nI2lzWmVyb30uXHJcbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cclxuICAgICAqL1xyXG4gICAgTG9uZ1Byb3RvdHlwZS5lcXogPSBMb25nUHJvdG90eXBlLmlzWmVybztcclxuXHJcbiAgICAvKipcclxuICAgICAqIFRlc3RzIGlmIHRoaXMgTG9uZydzIHZhbHVlIGlzIG5lZ2F0aXZlLlxyXG4gICAgICogQHRoaXMgeyFMb25nfVxyXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59XHJcbiAgICAgKi9cclxuICAgIExvbmdQcm90b3R5cGUuaXNOZWdhdGl2ZSA9IGZ1bmN0aW9uIGlzTmVnYXRpdmUoKSB7XHJcbiAgICAgIHJldHVybiAhdGhpcy51bnNpZ25lZCAmJiB0aGlzLmhpZ2ggPCAwO1xyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFRlc3RzIGlmIHRoaXMgTG9uZydzIHZhbHVlIGlzIHBvc2l0aXZlIG9yIHplcm8uXHJcbiAgICAgKiBAdGhpcyB7IUxvbmd9XHJcbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cclxuICAgICAqL1xyXG4gICAgTG9uZ1Byb3RvdHlwZS5pc1Bvc2l0aXZlID0gZnVuY3Rpb24gaXNQb3NpdGl2ZSgpIHtcclxuICAgICAgcmV0dXJuIHRoaXMudW5zaWduZWQgfHwgdGhpcy5oaWdoID49IDA7XHJcbiAgICB9O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGVzdHMgaWYgdGhpcyBMb25nJ3MgdmFsdWUgaXMgb2RkLlxyXG4gICAgICogQHRoaXMgeyFMb25nfVxyXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59XHJcbiAgICAgKi9cclxuICAgIExvbmdQcm90b3R5cGUuaXNPZGQgPSBmdW5jdGlvbiBpc09kZCgpIHtcclxuICAgICAgcmV0dXJuICh0aGlzLmxvdyAmIDEpID09PSAxO1xyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFRlc3RzIGlmIHRoaXMgTG9uZydzIHZhbHVlIGlzIGV2ZW4uXHJcbiAgICAgKiBAdGhpcyB7IUxvbmd9XHJcbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cclxuICAgICAqL1xyXG4gICAgTG9uZ1Byb3RvdHlwZS5pc0V2ZW4gPSBmdW5jdGlvbiBpc0V2ZW4oKSB7XHJcbiAgICAgIHJldHVybiAodGhpcy5sb3cgJiAxKSA9PT0gMDtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUZXN0cyBpZiB0aGlzIExvbmcncyB2YWx1ZSBlcXVhbHMgdGhlIHNwZWNpZmllZCdzLlxyXG4gICAgICogQHRoaXMgeyFMb25nfVxyXG4gICAgICogQHBhcmFtIHshTG9uZ3xudW1iZXJ8YmlnaW50fHN0cmluZ30gb3RoZXIgT3RoZXIgdmFsdWVcclxuICAgICAqIEByZXR1cm5zIHtib29sZWFufVxyXG4gICAgICovXHJcbiAgICBMb25nUHJvdG90eXBlLmVxdWFscyA9IGZ1bmN0aW9uIGVxdWFscyhvdGhlcikge1xyXG4gICAgICBpZiAoIWlzTG9uZyhvdGhlcikpIG90aGVyID0gZnJvbVZhbHVlKG90aGVyKTtcclxuICAgICAgaWYgKFxyXG4gICAgICAgIHRoaXMudW5zaWduZWQgIT09IG90aGVyLnVuc2lnbmVkICYmXHJcbiAgICAgICAgdGhpcy5oaWdoID4+PiAzMSA9PT0gMSAmJlxyXG4gICAgICAgIG90aGVyLmhpZ2ggPj4+IDMxID09PSAxXHJcbiAgICAgIClcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgIHJldHVybiB0aGlzLmhpZ2ggPT09IG90aGVyLmhpZ2ggJiYgdGhpcy5sb3cgPT09IG90aGVyLmxvdztcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUZXN0cyBpZiB0aGlzIExvbmcncyB2YWx1ZSBlcXVhbHMgdGhlIHNwZWNpZmllZCdzLiBUaGlzIGlzIGFuIGFsaWFzIG9mIHtAbGluayBMb25nI2VxdWFsc30uXHJcbiAgICAgKiBAZnVuY3Rpb25cclxuICAgICAqIEBwYXJhbSB7IUxvbmd8bnVtYmVyfGJpZ2ludHxzdHJpbmd9IG90aGVyIE90aGVyIHZhbHVlXHJcbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cclxuICAgICAqL1xyXG4gICAgTG9uZ1Byb3RvdHlwZS5lcSA9IExvbmdQcm90b3R5cGUuZXF1YWxzO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGVzdHMgaWYgdGhpcyBMb25nJ3MgdmFsdWUgZGlmZmVycyBmcm9tIHRoZSBzcGVjaWZpZWQncy5cclxuICAgICAqIEB0aGlzIHshTG9uZ31cclxuICAgICAqIEBwYXJhbSB7IUxvbmd8bnVtYmVyfGJpZ2ludHxzdHJpbmd9IG90aGVyIE90aGVyIHZhbHVlXHJcbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cclxuICAgICAqL1xyXG4gICAgTG9uZ1Byb3RvdHlwZS5ub3RFcXVhbHMgPSBmdW5jdGlvbiBub3RFcXVhbHMob3RoZXIpIHtcclxuICAgICAgcmV0dXJuICF0aGlzLmVxKC8qIHZhbGlkYXRlcyAqLyBvdGhlcik7XHJcbiAgICB9O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGVzdHMgaWYgdGhpcyBMb25nJ3MgdmFsdWUgZGlmZmVycyBmcm9tIHRoZSBzcGVjaWZpZWQncy4gVGhpcyBpcyBhbiBhbGlhcyBvZiB7QGxpbmsgTG9uZyNub3RFcXVhbHN9LlxyXG4gICAgICogQGZ1bmN0aW9uXHJcbiAgICAgKiBAcGFyYW0geyFMb25nfG51bWJlcnxiaWdpbnR8c3RyaW5nfSBvdGhlciBPdGhlciB2YWx1ZVxyXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59XHJcbiAgICAgKi9cclxuICAgIExvbmdQcm90b3R5cGUubmVxID0gTG9uZ1Byb3RvdHlwZS5ub3RFcXVhbHM7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUZXN0cyBpZiB0aGlzIExvbmcncyB2YWx1ZSBkaWZmZXJzIGZyb20gdGhlIHNwZWNpZmllZCdzLiBUaGlzIGlzIGFuIGFsaWFzIG9mIHtAbGluayBMb25nI25vdEVxdWFsc30uXHJcbiAgICAgKiBAZnVuY3Rpb25cclxuICAgICAqIEBwYXJhbSB7IUxvbmd8bnVtYmVyfGJpZ2ludHxzdHJpbmd9IG90aGVyIE90aGVyIHZhbHVlXHJcbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cclxuICAgICAqL1xyXG4gICAgTG9uZ1Byb3RvdHlwZS5uZSA9IExvbmdQcm90b3R5cGUubm90RXF1YWxzO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGVzdHMgaWYgdGhpcyBMb25nJ3MgdmFsdWUgaXMgbGVzcyB0aGFuIHRoZSBzcGVjaWZpZWQncy5cclxuICAgICAqIEB0aGlzIHshTG9uZ31cclxuICAgICAqIEBwYXJhbSB7IUxvbmd8bnVtYmVyfGJpZ2ludHxzdHJpbmd9IG90aGVyIE90aGVyIHZhbHVlXHJcbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cclxuICAgICAqL1xyXG4gICAgTG9uZ1Byb3RvdHlwZS5sZXNzVGhhbiA9IGZ1bmN0aW9uIGxlc3NUaGFuKG90aGVyKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLmNvbXAoLyogdmFsaWRhdGVzICovIG90aGVyKSA8IDA7XHJcbiAgICB9O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGVzdHMgaWYgdGhpcyBMb25nJ3MgdmFsdWUgaXMgbGVzcyB0aGFuIHRoZSBzcGVjaWZpZWQncy4gVGhpcyBpcyBhbiBhbGlhcyBvZiB7QGxpbmsgTG9uZyNsZXNzVGhhbn0uXHJcbiAgICAgKiBAZnVuY3Rpb25cclxuICAgICAqIEBwYXJhbSB7IUxvbmd8bnVtYmVyfGJpZ2ludHxzdHJpbmd9IG90aGVyIE90aGVyIHZhbHVlXHJcbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cclxuICAgICAqL1xyXG4gICAgTG9uZ1Byb3RvdHlwZS5sdCA9IExvbmdQcm90b3R5cGUubGVzc1RoYW47XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUZXN0cyBpZiB0aGlzIExvbmcncyB2YWx1ZSBpcyBsZXNzIHRoYW4gb3IgZXF1YWwgdGhlIHNwZWNpZmllZCdzLlxyXG4gICAgICogQHRoaXMgeyFMb25nfVxyXG4gICAgICogQHBhcmFtIHshTG9uZ3xudW1iZXJ8YmlnaW50fHN0cmluZ30gb3RoZXIgT3RoZXIgdmFsdWVcclxuICAgICAqIEByZXR1cm5zIHtib29sZWFufVxyXG4gICAgICovXHJcbiAgICBMb25nUHJvdG90eXBlLmxlc3NUaGFuT3JFcXVhbCA9IGZ1bmN0aW9uIGxlc3NUaGFuT3JFcXVhbChvdGhlcikge1xyXG4gICAgICByZXR1cm4gdGhpcy5jb21wKC8qIHZhbGlkYXRlcyAqLyBvdGhlcikgPD0gMDtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUZXN0cyBpZiB0aGlzIExvbmcncyB2YWx1ZSBpcyBsZXNzIHRoYW4gb3IgZXF1YWwgdGhlIHNwZWNpZmllZCdzLiBUaGlzIGlzIGFuIGFsaWFzIG9mIHtAbGluayBMb25nI2xlc3NUaGFuT3JFcXVhbH0uXHJcbiAgICAgKiBAZnVuY3Rpb25cclxuICAgICAqIEBwYXJhbSB7IUxvbmd8bnVtYmVyfGJpZ2ludHxzdHJpbmd9IG90aGVyIE90aGVyIHZhbHVlXHJcbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cclxuICAgICAqL1xyXG4gICAgTG9uZ1Byb3RvdHlwZS5sdGUgPSBMb25nUHJvdG90eXBlLmxlc3NUaGFuT3JFcXVhbDtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFRlc3RzIGlmIHRoaXMgTG9uZydzIHZhbHVlIGlzIGxlc3MgdGhhbiBvciBlcXVhbCB0aGUgc3BlY2lmaWVkJ3MuIFRoaXMgaXMgYW4gYWxpYXMgb2Yge0BsaW5rIExvbmcjbGVzc1RoYW5PckVxdWFsfS5cclxuICAgICAqIEBmdW5jdGlvblxyXG4gICAgICogQHBhcmFtIHshTG9uZ3xudW1iZXJ8YmlnaW50fHN0cmluZ30gb3RoZXIgT3RoZXIgdmFsdWVcclxuICAgICAqIEByZXR1cm5zIHtib29sZWFufVxyXG4gICAgICovXHJcbiAgICBMb25nUHJvdG90eXBlLmxlID0gTG9uZ1Byb3RvdHlwZS5sZXNzVGhhbk9yRXF1YWw7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUZXN0cyBpZiB0aGlzIExvbmcncyB2YWx1ZSBpcyBncmVhdGVyIHRoYW4gdGhlIHNwZWNpZmllZCdzLlxyXG4gICAgICogQHRoaXMgeyFMb25nfVxyXG4gICAgICogQHBhcmFtIHshTG9uZ3xudW1iZXJ8YmlnaW50fHN0cmluZ30gb3RoZXIgT3RoZXIgdmFsdWVcclxuICAgICAqIEByZXR1cm5zIHtib29sZWFufVxyXG4gICAgICovXHJcbiAgICBMb25nUHJvdG90eXBlLmdyZWF0ZXJUaGFuID0gZnVuY3Rpb24gZ3JlYXRlclRoYW4ob3RoZXIpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuY29tcCgvKiB2YWxpZGF0ZXMgKi8gb3RoZXIpID4gMDtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUZXN0cyBpZiB0aGlzIExvbmcncyB2YWx1ZSBpcyBncmVhdGVyIHRoYW4gdGhlIHNwZWNpZmllZCdzLiBUaGlzIGlzIGFuIGFsaWFzIG9mIHtAbGluayBMb25nI2dyZWF0ZXJUaGFufS5cclxuICAgICAqIEBmdW5jdGlvblxyXG4gICAgICogQHBhcmFtIHshTG9uZ3xudW1iZXJ8YmlnaW50fHN0cmluZ30gb3RoZXIgT3RoZXIgdmFsdWVcclxuICAgICAqIEByZXR1cm5zIHtib29sZWFufVxyXG4gICAgICovXHJcbiAgICBMb25nUHJvdG90eXBlLmd0ID0gTG9uZ1Byb3RvdHlwZS5ncmVhdGVyVGhhbjtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFRlc3RzIGlmIHRoaXMgTG9uZydzIHZhbHVlIGlzIGdyZWF0ZXIgdGhhbiBvciBlcXVhbCB0aGUgc3BlY2lmaWVkJ3MuXHJcbiAgICAgKiBAdGhpcyB7IUxvbmd9XHJcbiAgICAgKiBAcGFyYW0geyFMb25nfG51bWJlcnxiaWdpbnR8c3RyaW5nfSBvdGhlciBPdGhlciB2YWx1ZVxyXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59XHJcbiAgICAgKi9cclxuICAgIExvbmdQcm90b3R5cGUuZ3JlYXRlclRoYW5PckVxdWFsID0gZnVuY3Rpb24gZ3JlYXRlclRoYW5PckVxdWFsKG90aGVyKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLmNvbXAoLyogdmFsaWRhdGVzICovIG90aGVyKSA+PSAwO1xyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFRlc3RzIGlmIHRoaXMgTG9uZydzIHZhbHVlIGlzIGdyZWF0ZXIgdGhhbiBvciBlcXVhbCB0aGUgc3BlY2lmaWVkJ3MuIFRoaXMgaXMgYW4gYWxpYXMgb2Yge0BsaW5rIExvbmcjZ3JlYXRlclRoYW5PckVxdWFsfS5cclxuICAgICAqIEBmdW5jdGlvblxyXG4gICAgICogQHBhcmFtIHshTG9uZ3xudW1iZXJ8YmlnaW50fHN0cmluZ30gb3RoZXIgT3RoZXIgdmFsdWVcclxuICAgICAqIEByZXR1cm5zIHtib29sZWFufVxyXG4gICAgICovXHJcbiAgICBMb25nUHJvdG90eXBlLmd0ZSA9IExvbmdQcm90b3R5cGUuZ3JlYXRlclRoYW5PckVxdWFsO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGVzdHMgaWYgdGhpcyBMb25nJ3MgdmFsdWUgaXMgZ3JlYXRlciB0aGFuIG9yIGVxdWFsIHRoZSBzcGVjaWZpZWQncy4gVGhpcyBpcyBhbiBhbGlhcyBvZiB7QGxpbmsgTG9uZyNncmVhdGVyVGhhbk9yRXF1YWx9LlxyXG4gICAgICogQGZ1bmN0aW9uXHJcbiAgICAgKiBAcGFyYW0geyFMb25nfG51bWJlcnxiaWdpbnR8c3RyaW5nfSBvdGhlciBPdGhlciB2YWx1ZVxyXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59XHJcbiAgICAgKi9cclxuICAgIExvbmdQcm90b3R5cGUuZ2UgPSBMb25nUHJvdG90eXBlLmdyZWF0ZXJUaGFuT3JFcXVhbDtcclxuXHJcbiAgICAvKipcclxuICAgICAqIENvbXBhcmVzIHRoaXMgTG9uZydzIHZhbHVlIHdpdGggdGhlIHNwZWNpZmllZCdzLlxyXG4gICAgICogQHRoaXMgeyFMb25nfVxyXG4gICAgICogQHBhcmFtIHshTG9uZ3xudW1iZXJ8YmlnaW50fHN0cmluZ30gb3RoZXIgT3RoZXIgdmFsdWVcclxuICAgICAqIEByZXR1cm5zIHtudW1iZXJ9IDAgaWYgdGhleSBhcmUgdGhlIHNhbWUsIDEgaWYgdGhlIHRoaXMgaXMgZ3JlYXRlciBhbmQgLTFcclxuICAgICAqICBpZiB0aGUgZ2l2ZW4gb25lIGlzIGdyZWF0ZXJcclxuICAgICAqL1xyXG4gICAgTG9uZ1Byb3RvdHlwZS5jb21wYXJlID0gZnVuY3Rpb24gY29tcGFyZShvdGhlcikge1xyXG4gICAgICBpZiAoIWlzTG9uZyhvdGhlcikpIG90aGVyID0gZnJvbVZhbHVlKG90aGVyKTtcclxuICAgICAgaWYgKHRoaXMuZXEob3RoZXIpKSByZXR1cm4gMDtcclxuICAgICAgdmFyIHRoaXNOZWcgPSB0aGlzLmlzTmVnYXRpdmUoKSxcclxuICAgICAgICBvdGhlck5lZyA9IG90aGVyLmlzTmVnYXRpdmUoKTtcclxuICAgICAgaWYgKHRoaXNOZWcgJiYgIW90aGVyTmVnKSByZXR1cm4gLTE7XHJcbiAgICAgIGlmICghdGhpc05lZyAmJiBvdGhlck5lZykgcmV0dXJuIDE7XHJcbiAgICAgIC8vIEF0IHRoaXMgcG9pbnQgdGhlIHNpZ24gYml0cyBhcmUgdGhlIHNhbWVcclxuICAgICAgaWYgKCF0aGlzLnVuc2lnbmVkKSByZXR1cm4gdGhpcy5zdWIob3RoZXIpLmlzTmVnYXRpdmUoKSA/IC0xIDogMTtcclxuICAgICAgLy8gQm90aCBhcmUgcG9zaXRpdmUgaWYgYXQgbGVhc3Qgb25lIGlzIHVuc2lnbmVkXHJcbiAgICAgIHJldHVybiBvdGhlci5oaWdoID4+PiAwID4gdGhpcy5oaWdoID4+PiAwIHx8XHJcbiAgICAgICAgKG90aGVyLmhpZ2ggPT09IHRoaXMuaGlnaCAmJiBvdGhlci5sb3cgPj4+IDAgPiB0aGlzLmxvdyA+Pj4gMClcclxuICAgICAgICA/IC0xXHJcbiAgICAgICAgOiAxO1xyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIENvbXBhcmVzIHRoaXMgTG9uZydzIHZhbHVlIHdpdGggdGhlIHNwZWNpZmllZCdzLiBUaGlzIGlzIGFuIGFsaWFzIG9mIHtAbGluayBMb25nI2NvbXBhcmV9LlxyXG4gICAgICogQGZ1bmN0aW9uXHJcbiAgICAgKiBAcGFyYW0geyFMb25nfG51bWJlcnxiaWdpbnR8c3RyaW5nfSBvdGhlciBPdGhlciB2YWx1ZVxyXG4gICAgICogQHJldHVybnMge251bWJlcn0gMCBpZiB0aGV5IGFyZSB0aGUgc2FtZSwgMSBpZiB0aGUgdGhpcyBpcyBncmVhdGVyIGFuZCAtMVxyXG4gICAgICogIGlmIHRoZSBnaXZlbiBvbmUgaXMgZ3JlYXRlclxyXG4gICAgICovXHJcbiAgICBMb25nUHJvdG90eXBlLmNvbXAgPSBMb25nUHJvdG90eXBlLmNvbXBhcmU7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBOZWdhdGVzIHRoaXMgTG9uZydzIHZhbHVlLlxyXG4gICAgICogQHRoaXMgeyFMb25nfVxyXG4gICAgICogQHJldHVybnMgeyFMb25nfSBOZWdhdGVkIExvbmdcclxuICAgICAqL1xyXG4gICAgTG9uZ1Byb3RvdHlwZS5uZWdhdGUgPSBmdW5jdGlvbiBuZWdhdGUoKSB7XHJcbiAgICAgIGlmICghdGhpcy51bnNpZ25lZCAmJiB0aGlzLmVxKE1JTl9WQUxVRSkpIHJldHVybiBNSU5fVkFMVUU7XHJcbiAgICAgIHJldHVybiB0aGlzLm5vdCgpLmFkZChPTkUpO1xyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIE5lZ2F0ZXMgdGhpcyBMb25nJ3MgdmFsdWUuIFRoaXMgaXMgYW4gYWxpYXMgb2Yge0BsaW5rIExvbmcjbmVnYXRlfS5cclxuICAgICAqIEBmdW5jdGlvblxyXG4gICAgICogQHJldHVybnMgeyFMb25nfSBOZWdhdGVkIExvbmdcclxuICAgICAqL1xyXG4gICAgTG9uZ1Byb3RvdHlwZS5uZWcgPSBMb25nUHJvdG90eXBlLm5lZ2F0ZTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgdGhlIHN1bSBvZiB0aGlzIGFuZCB0aGUgc3BlY2lmaWVkIExvbmcuXHJcbiAgICAgKiBAdGhpcyB7IUxvbmd9XHJcbiAgICAgKiBAcGFyYW0geyFMb25nfG51bWJlcnxiaWdpbnR8c3RyaW5nfSBhZGRlbmQgQWRkZW5kXHJcbiAgICAgKiBAcmV0dXJucyB7IUxvbmd9IFN1bVxyXG4gICAgICovXHJcbiAgICBMb25nUHJvdG90eXBlLmFkZCA9IGZ1bmN0aW9uIGFkZChhZGRlbmQpIHtcclxuICAgICAgaWYgKCFpc0xvbmcoYWRkZW5kKSkgYWRkZW5kID0gZnJvbVZhbHVlKGFkZGVuZCk7XHJcblxyXG4gICAgICAvLyBEaXZpZGUgZWFjaCBudW1iZXIgaW50byA0IGNodW5rcyBvZiAxNiBiaXRzLCBhbmQgdGhlbiBzdW0gdGhlIGNodW5rcy5cclxuXHJcbiAgICAgIHZhciBhNDggPSB0aGlzLmhpZ2ggPj4+IDE2O1xyXG4gICAgICB2YXIgYTMyID0gdGhpcy5oaWdoICYgMHhmZmZmO1xyXG4gICAgICB2YXIgYTE2ID0gdGhpcy5sb3cgPj4+IDE2O1xyXG4gICAgICB2YXIgYTAwID0gdGhpcy5sb3cgJiAweGZmZmY7XHJcbiAgICAgIHZhciBiNDggPSBhZGRlbmQuaGlnaCA+Pj4gMTY7XHJcbiAgICAgIHZhciBiMzIgPSBhZGRlbmQuaGlnaCAmIDB4ZmZmZjtcclxuICAgICAgdmFyIGIxNiA9IGFkZGVuZC5sb3cgPj4+IDE2O1xyXG4gICAgICB2YXIgYjAwID0gYWRkZW5kLmxvdyAmIDB4ZmZmZjtcclxuICAgICAgdmFyIGM0OCA9IDAsXHJcbiAgICAgICAgYzMyID0gMCxcclxuICAgICAgICBjMTYgPSAwLFxyXG4gICAgICAgIGMwMCA9IDA7XHJcbiAgICAgIGMwMCArPSBhMDAgKyBiMDA7XHJcbiAgICAgIGMxNiArPSBjMDAgPj4+IDE2O1xyXG4gICAgICBjMDAgJj0gMHhmZmZmO1xyXG4gICAgICBjMTYgKz0gYTE2ICsgYjE2O1xyXG4gICAgICBjMzIgKz0gYzE2ID4+PiAxNjtcclxuICAgICAgYzE2ICY9IDB4ZmZmZjtcclxuICAgICAgYzMyICs9IGEzMiArIGIzMjtcclxuICAgICAgYzQ4ICs9IGMzMiA+Pj4gMTY7XHJcbiAgICAgIGMzMiAmPSAweGZmZmY7XHJcbiAgICAgIGM0OCArPSBhNDggKyBiNDg7XHJcbiAgICAgIGM0OCAmPSAweGZmZmY7XHJcbiAgICAgIHJldHVybiBmcm9tQml0cygoYzE2IDw8IDE2KSB8IGMwMCwgKGM0OCA8PCAxNikgfCBjMzIsIHRoaXMudW5zaWduZWQpO1xyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgdGhlIGRpZmZlcmVuY2Ugb2YgdGhpcyBhbmQgdGhlIHNwZWNpZmllZCBMb25nLlxyXG4gICAgICogQHRoaXMgeyFMb25nfVxyXG4gICAgICogQHBhcmFtIHshTG9uZ3xudW1iZXJ8YmlnaW50fHN0cmluZ30gc3VidHJhaGVuZCBTdWJ0cmFoZW5kXHJcbiAgICAgKiBAcmV0dXJucyB7IUxvbmd9IERpZmZlcmVuY2VcclxuICAgICAqL1xyXG4gICAgTG9uZ1Byb3RvdHlwZS5zdWJ0cmFjdCA9IGZ1bmN0aW9uIHN1YnRyYWN0KHN1YnRyYWhlbmQpIHtcclxuICAgICAgaWYgKCFpc0xvbmcoc3VidHJhaGVuZCkpIHN1YnRyYWhlbmQgPSBmcm9tVmFsdWUoc3VidHJhaGVuZCk7XHJcbiAgICAgIHJldHVybiB0aGlzLmFkZChzdWJ0cmFoZW5kLm5lZygpKTtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIHRoZSBkaWZmZXJlbmNlIG9mIHRoaXMgYW5kIHRoZSBzcGVjaWZpZWQgTG9uZy4gVGhpcyBpcyBhbiBhbGlhcyBvZiB7QGxpbmsgTG9uZyNzdWJ0cmFjdH0uXHJcbiAgICAgKiBAZnVuY3Rpb25cclxuICAgICAqIEBwYXJhbSB7IUxvbmd8bnVtYmVyfGJpZ2ludHxzdHJpbmd9IHN1YnRyYWhlbmQgU3VidHJhaGVuZFxyXG4gICAgICogQHJldHVybnMgeyFMb25nfSBEaWZmZXJlbmNlXHJcbiAgICAgKi9cclxuICAgIExvbmdQcm90b3R5cGUuc3ViID0gTG9uZ1Byb3RvdHlwZS5zdWJ0cmFjdDtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgdGhlIHByb2R1Y3Qgb2YgdGhpcyBhbmQgdGhlIHNwZWNpZmllZCBMb25nLlxyXG4gICAgICogQHRoaXMgeyFMb25nfVxyXG4gICAgICogQHBhcmFtIHshTG9uZ3xudW1iZXJ8YmlnaW50fHN0cmluZ30gbXVsdGlwbGllciBNdWx0aXBsaWVyXHJcbiAgICAgKiBAcmV0dXJucyB7IUxvbmd9IFByb2R1Y3RcclxuICAgICAqL1xyXG4gICAgTG9uZ1Byb3RvdHlwZS5tdWx0aXBseSA9IGZ1bmN0aW9uIG11bHRpcGx5KG11bHRpcGxpZXIpIHtcclxuICAgICAgaWYgKHRoaXMuaXNaZXJvKCkpIHJldHVybiB0aGlzO1xyXG4gICAgICBpZiAoIWlzTG9uZyhtdWx0aXBsaWVyKSkgbXVsdGlwbGllciA9IGZyb21WYWx1ZShtdWx0aXBsaWVyKTtcclxuXHJcbiAgICAgIC8vIHVzZSB3YXNtIHN1cHBvcnQgaWYgcHJlc2VudFxyXG4gICAgICBpZiAod2FzbSkge1xyXG4gICAgICAgIHZhciBsb3cgPSB3YXNtW1wibXVsXCJdKFxyXG4gICAgICAgICAgdGhpcy5sb3csXHJcbiAgICAgICAgICB0aGlzLmhpZ2gsXHJcbiAgICAgICAgICBtdWx0aXBsaWVyLmxvdyxcclxuICAgICAgICAgIG11bHRpcGxpZXIuaGlnaCxcclxuICAgICAgICApO1xyXG4gICAgICAgIHJldHVybiBmcm9tQml0cyhsb3csIHdhc21bXCJnZXRfaGlnaFwiXSgpLCB0aGlzLnVuc2lnbmVkKTtcclxuICAgICAgfVxyXG4gICAgICBpZiAobXVsdGlwbGllci5pc1plcm8oKSkgcmV0dXJuIHRoaXMudW5zaWduZWQgPyBVWkVSTyA6IFpFUk87XHJcbiAgICAgIGlmICh0aGlzLmVxKE1JTl9WQUxVRSkpIHJldHVybiBtdWx0aXBsaWVyLmlzT2RkKCkgPyBNSU5fVkFMVUUgOiBaRVJPO1xyXG4gICAgICBpZiAobXVsdGlwbGllci5lcShNSU5fVkFMVUUpKSByZXR1cm4gdGhpcy5pc09kZCgpID8gTUlOX1ZBTFVFIDogWkVSTztcclxuICAgICAgaWYgKHRoaXMuaXNOZWdhdGl2ZSgpKSB7XHJcbiAgICAgICAgaWYgKG11bHRpcGxpZXIuaXNOZWdhdGl2ZSgpKSByZXR1cm4gdGhpcy5uZWcoKS5tdWwobXVsdGlwbGllci5uZWcoKSk7XHJcbiAgICAgICAgZWxzZSByZXR1cm4gdGhpcy5uZWcoKS5tdWwobXVsdGlwbGllcikubmVnKCk7XHJcbiAgICAgIH0gZWxzZSBpZiAobXVsdGlwbGllci5pc05lZ2F0aXZlKCkpXHJcbiAgICAgICAgcmV0dXJuIHRoaXMubXVsKG11bHRpcGxpZXIubmVnKCkpLm5lZygpO1xyXG5cclxuICAgICAgLy8gSWYgYm90aCBsb25ncyBhcmUgc21hbGwsIHVzZSBmbG9hdCBtdWx0aXBsaWNhdGlvblxyXG4gICAgICBpZiAodGhpcy5sdChUV09fUFdSXzI0KSAmJiBtdWx0aXBsaWVyLmx0KFRXT19QV1JfMjQpKVxyXG4gICAgICAgIHJldHVybiBmcm9tTnVtYmVyKFxyXG4gICAgICAgICAgdGhpcy50b051bWJlcigpICogbXVsdGlwbGllci50b051bWJlcigpLFxyXG4gICAgICAgICAgdGhpcy51bnNpZ25lZCxcclxuICAgICAgICApO1xyXG5cclxuICAgICAgLy8gRGl2aWRlIGVhY2ggbG9uZyBpbnRvIDQgY2h1bmtzIG9mIDE2IGJpdHMsIGFuZCB0aGVuIGFkZCB1cCA0eDQgcHJvZHVjdHMuXHJcbiAgICAgIC8vIFdlIGNhbiBza2lwIHByb2R1Y3RzIHRoYXQgd291bGQgb3ZlcmZsb3cuXHJcblxyXG4gICAgICB2YXIgYTQ4ID0gdGhpcy5oaWdoID4+PiAxNjtcclxuICAgICAgdmFyIGEzMiA9IHRoaXMuaGlnaCAmIDB4ZmZmZjtcclxuICAgICAgdmFyIGExNiA9IHRoaXMubG93ID4+PiAxNjtcclxuICAgICAgdmFyIGEwMCA9IHRoaXMubG93ICYgMHhmZmZmO1xyXG4gICAgICB2YXIgYjQ4ID0gbXVsdGlwbGllci5oaWdoID4+PiAxNjtcclxuICAgICAgdmFyIGIzMiA9IG11bHRpcGxpZXIuaGlnaCAmIDB4ZmZmZjtcclxuICAgICAgdmFyIGIxNiA9IG11bHRpcGxpZXIubG93ID4+PiAxNjtcclxuICAgICAgdmFyIGIwMCA9IG11bHRpcGxpZXIubG93ICYgMHhmZmZmO1xyXG4gICAgICB2YXIgYzQ4ID0gMCxcclxuICAgICAgICBjMzIgPSAwLFxyXG4gICAgICAgIGMxNiA9IDAsXHJcbiAgICAgICAgYzAwID0gMDtcclxuICAgICAgYzAwICs9IGEwMCAqIGIwMDtcclxuICAgICAgYzE2ICs9IGMwMCA+Pj4gMTY7XHJcbiAgICAgIGMwMCAmPSAweGZmZmY7XHJcbiAgICAgIGMxNiArPSBhMTYgKiBiMDA7XHJcbiAgICAgIGMzMiArPSBjMTYgPj4+IDE2O1xyXG4gICAgICBjMTYgJj0gMHhmZmZmO1xyXG4gICAgICBjMTYgKz0gYTAwICogYjE2O1xyXG4gICAgICBjMzIgKz0gYzE2ID4+PiAxNjtcclxuICAgICAgYzE2ICY9IDB4ZmZmZjtcclxuICAgICAgYzMyICs9IGEzMiAqIGIwMDtcclxuICAgICAgYzQ4ICs9IGMzMiA+Pj4gMTY7XHJcbiAgICAgIGMzMiAmPSAweGZmZmY7XHJcbiAgICAgIGMzMiArPSBhMTYgKiBiMTY7XHJcbiAgICAgIGM0OCArPSBjMzIgPj4+IDE2O1xyXG4gICAgICBjMzIgJj0gMHhmZmZmO1xyXG4gICAgICBjMzIgKz0gYTAwICogYjMyO1xyXG4gICAgICBjNDggKz0gYzMyID4+PiAxNjtcclxuICAgICAgYzMyICY9IDB4ZmZmZjtcclxuICAgICAgYzQ4ICs9IGE0OCAqIGIwMCArIGEzMiAqIGIxNiArIGExNiAqIGIzMiArIGEwMCAqIGI0ODtcclxuICAgICAgYzQ4ICY9IDB4ZmZmZjtcclxuICAgICAgcmV0dXJuIGZyb21CaXRzKChjMTYgPDwgMTYpIHwgYzAwLCAoYzQ4IDw8IDE2KSB8IGMzMiwgdGhpcy51bnNpZ25lZCk7XHJcbiAgICB9O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyB0aGUgcHJvZHVjdCBvZiB0aGlzIGFuZCB0aGUgc3BlY2lmaWVkIExvbmcuIFRoaXMgaXMgYW4gYWxpYXMgb2Yge0BsaW5rIExvbmcjbXVsdGlwbHl9LlxyXG4gICAgICogQGZ1bmN0aW9uXHJcbiAgICAgKiBAcGFyYW0geyFMb25nfG51bWJlcnxiaWdpbnR8c3RyaW5nfSBtdWx0aXBsaWVyIE11bHRpcGxpZXJcclxuICAgICAqIEByZXR1cm5zIHshTG9uZ30gUHJvZHVjdFxyXG4gICAgICovXHJcbiAgICBMb25nUHJvdG90eXBlLm11bCA9IExvbmdQcm90b3R5cGUubXVsdGlwbHk7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIHRoaXMgTG9uZyBkaXZpZGVkIGJ5IHRoZSBzcGVjaWZpZWQuIFRoZSByZXN1bHQgaXMgc2lnbmVkIGlmIHRoaXMgTG9uZyBpcyBzaWduZWQgb3JcclxuICAgICAqICB1bnNpZ25lZCBpZiB0aGlzIExvbmcgaXMgdW5zaWduZWQuXHJcbiAgICAgKiBAdGhpcyB7IUxvbmd9XHJcbiAgICAgKiBAcGFyYW0geyFMb25nfG51bWJlcnxiaWdpbnR8c3RyaW5nfSBkaXZpc29yIERpdmlzb3JcclxuICAgICAqIEByZXR1cm5zIHshTG9uZ30gUXVvdGllbnRcclxuICAgICAqL1xyXG4gICAgTG9uZ1Byb3RvdHlwZS5kaXZpZGUgPSBmdW5jdGlvbiBkaXZpZGUoZGl2aXNvcikge1xyXG4gICAgICBpZiAoIWlzTG9uZyhkaXZpc29yKSkgZGl2aXNvciA9IGZyb21WYWx1ZShkaXZpc29yKTtcclxuICAgICAgaWYgKGRpdmlzb3IuaXNaZXJvKCkpIHRocm93IEVycm9yKFwiZGl2aXNpb24gYnkgemVyb1wiKTtcclxuXHJcbiAgICAgIC8vIHVzZSB3YXNtIHN1cHBvcnQgaWYgcHJlc2VudFxyXG4gICAgICBpZiAod2FzbSkge1xyXG4gICAgICAgIC8vIGd1YXJkIGFnYWluc3Qgc2lnbmVkIGRpdmlzaW9uIG92ZXJmbG93OiB0aGUgbGFyZ2VzdFxyXG4gICAgICAgIC8vIG5lZ2F0aXZlIG51bWJlciAvIC0xIHdvdWxkIGJlIDEgbGFyZ2VyIHRoYW4gdGhlIGxhcmdlc3RcclxuICAgICAgICAvLyBwb3NpdGl2ZSBudW1iZXIsIGR1ZSB0byB0d28ncyBjb21wbGVtZW50LlxyXG4gICAgICAgIGlmIChcclxuICAgICAgICAgICF0aGlzLnVuc2lnbmVkICYmXHJcbiAgICAgICAgICB0aGlzLmhpZ2ggPT09IC0weDgwMDAwMDAwICYmXHJcbiAgICAgICAgICBkaXZpc29yLmxvdyA9PT0gLTEgJiZcclxuICAgICAgICAgIGRpdmlzb3IuaGlnaCA9PT0gLTFcclxuICAgICAgICApIHtcclxuICAgICAgICAgIC8vIGJlIGNvbnNpc3RlbnQgd2l0aCBub24td2FzbSBjb2RlIHBhdGhcclxuICAgICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgbG93ID0gKHRoaXMudW5zaWduZWQgPyB3YXNtW1wiZGl2X3VcIl0gOiB3YXNtW1wiZGl2X3NcIl0pKFxyXG4gICAgICAgICAgdGhpcy5sb3csXHJcbiAgICAgICAgICB0aGlzLmhpZ2gsXHJcbiAgICAgICAgICBkaXZpc29yLmxvdyxcclxuICAgICAgICAgIGRpdmlzb3IuaGlnaCxcclxuICAgICAgICApO1xyXG4gICAgICAgIHJldHVybiBmcm9tQml0cyhsb3csIHdhc21bXCJnZXRfaGlnaFwiXSgpLCB0aGlzLnVuc2lnbmVkKTtcclxuICAgICAgfVxyXG4gICAgICBpZiAodGhpcy5pc1plcm8oKSkgcmV0dXJuIHRoaXMudW5zaWduZWQgPyBVWkVSTyA6IFpFUk87XHJcbiAgICAgIHZhciBhcHByb3gsIHJlbSwgcmVzO1xyXG4gICAgICBpZiAoIXRoaXMudW5zaWduZWQpIHtcclxuICAgICAgICAvLyBUaGlzIHNlY3Rpb24gaXMgb25seSByZWxldmFudCBmb3Igc2lnbmVkIGxvbmdzIGFuZCBpcyBkZXJpdmVkIGZyb20gdGhlXHJcbiAgICAgICAgLy8gY2xvc3VyZSBsaWJyYXJ5IGFzIGEgd2hvbGUuXHJcbiAgICAgICAgaWYgKHRoaXMuZXEoTUlOX1ZBTFVFKSkge1xyXG4gICAgICAgICAgaWYgKGRpdmlzb3IuZXEoT05FKSB8fCBkaXZpc29yLmVxKE5FR19PTkUpKVxyXG4gICAgICAgICAgICByZXR1cm4gTUlOX1ZBTFVFOyAvLyByZWNhbGwgdGhhdCAtTUlOX1ZBTFVFID09IE1JTl9WQUxVRVxyXG4gICAgICAgICAgZWxzZSBpZiAoZGl2aXNvci5lcShNSU5fVkFMVUUpKSByZXR1cm4gT05FO1xyXG4gICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIC8vIEF0IHRoaXMgcG9pbnQsIHdlIGhhdmUgfG90aGVyfCA+PSAyLCBzbyB8dGhpcy9vdGhlcnwgPCB8TUlOX1ZBTFVFfC5cclxuICAgICAgICAgICAgdmFyIGhhbGZUaGlzID0gdGhpcy5zaHIoMSk7XHJcbiAgICAgICAgICAgIGFwcHJveCA9IGhhbGZUaGlzLmRpdihkaXZpc29yKS5zaGwoMSk7XHJcbiAgICAgICAgICAgIGlmIChhcHByb3guZXEoWkVSTykpIHtcclxuICAgICAgICAgICAgICByZXR1cm4gZGl2aXNvci5pc05lZ2F0aXZlKCkgPyBPTkUgOiBORUdfT05FO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgIHJlbSA9IHRoaXMuc3ViKGRpdmlzb3IubXVsKGFwcHJveCkpO1xyXG4gICAgICAgICAgICAgIHJlcyA9IGFwcHJveC5hZGQocmVtLmRpdihkaXZpc29yKSk7XHJcbiAgICAgICAgICAgICAgcmV0dXJuIHJlcztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSBpZiAoZGl2aXNvci5lcShNSU5fVkFMVUUpKSByZXR1cm4gdGhpcy51bnNpZ25lZCA/IFVaRVJPIDogWkVSTztcclxuICAgICAgICBpZiAodGhpcy5pc05lZ2F0aXZlKCkpIHtcclxuICAgICAgICAgIGlmIChkaXZpc29yLmlzTmVnYXRpdmUoKSkgcmV0dXJuIHRoaXMubmVnKCkuZGl2KGRpdmlzb3IubmVnKCkpO1xyXG4gICAgICAgICAgcmV0dXJuIHRoaXMubmVnKCkuZGl2KGRpdmlzb3IpLm5lZygpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAoZGl2aXNvci5pc05lZ2F0aXZlKCkpIHJldHVybiB0aGlzLmRpdihkaXZpc29yLm5lZygpKS5uZWcoKTtcclxuICAgICAgICByZXMgPSBaRVJPO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIC8vIFRoZSBhbGdvcml0aG0gYmVsb3cgaGFzIG5vdCBiZWVuIG1hZGUgZm9yIHVuc2lnbmVkIGxvbmdzLiBJdCdzIHRoZXJlZm9yZVxyXG4gICAgICAgIC8vIHJlcXVpcmVkIHRvIHRha2Ugc3BlY2lhbCBjYXJlIG9mIHRoZSBNU0IgcHJpb3IgdG8gcnVubmluZyBpdC5cclxuICAgICAgICBpZiAoIWRpdmlzb3IudW5zaWduZWQpIGRpdmlzb3IgPSBkaXZpc29yLnRvVW5zaWduZWQoKTtcclxuICAgICAgICBpZiAoZGl2aXNvci5ndCh0aGlzKSkgcmV0dXJuIFVaRVJPO1xyXG4gICAgICAgIGlmIChkaXZpc29yLmd0KHRoaXMuc2hydSgxKSkpXHJcbiAgICAgICAgICAvLyAxNSA+Pj4gMSA9IDcgOyB3aXRoIGRpdmlzb3IgPSA4IDsgdHJ1ZVxyXG4gICAgICAgICAgcmV0dXJuIFVPTkU7XHJcbiAgICAgICAgcmVzID0gVVpFUk87XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIFJlcGVhdCB0aGUgZm9sbG93aW5nIHVudGlsIHRoZSByZW1haW5kZXIgaXMgbGVzcyB0aGFuIG90aGVyOiAgZmluZCBhXHJcbiAgICAgIC8vIGZsb2F0aW5nLXBvaW50IHRoYXQgYXBwcm94aW1hdGVzIHJlbWFpbmRlciAvIG90aGVyICpmcm9tIGJlbG93KiwgYWRkIHRoaXNcclxuICAgICAgLy8gaW50byB0aGUgcmVzdWx0LCBhbmQgc3VidHJhY3QgaXQgZnJvbSB0aGUgcmVtYWluZGVyLiAgSXQgaXMgY3JpdGljYWwgdGhhdFxyXG4gICAgICAvLyB0aGUgYXBwcm94aW1hdGUgdmFsdWUgaXMgbGVzcyB0aGFuIG9yIGVxdWFsIHRvIHRoZSByZWFsIHZhbHVlIHNvIHRoYXQgdGhlXHJcbiAgICAgIC8vIHJlbWFpbmRlciBuZXZlciBiZWNvbWVzIG5lZ2F0aXZlLlxyXG4gICAgICByZW0gPSB0aGlzO1xyXG4gICAgICB3aGlsZSAocmVtLmd0ZShkaXZpc29yKSkge1xyXG4gICAgICAgIC8vIEFwcHJveGltYXRlIHRoZSByZXN1bHQgb2YgZGl2aXNpb24uIFRoaXMgbWF5IGJlIGEgbGl0dGxlIGdyZWF0ZXIgb3JcclxuICAgICAgICAvLyBzbWFsbGVyIHRoYW4gdGhlIGFjdHVhbCB2YWx1ZS5cclxuICAgICAgICBhcHByb3ggPSBNYXRoLm1heCgxLCBNYXRoLmZsb29yKHJlbS50b051bWJlcigpIC8gZGl2aXNvci50b051bWJlcigpKSk7XHJcblxyXG4gICAgICAgIC8vIFdlIHdpbGwgdHdlYWsgdGhlIGFwcHJveGltYXRlIHJlc3VsdCBieSBjaGFuZ2luZyBpdCBpbiB0aGUgNDgtdGggZGlnaXQgb3JcclxuICAgICAgICAvLyB0aGUgc21hbGxlc3Qgbm9uLWZyYWN0aW9uYWwgZGlnaXQsIHdoaWNoZXZlciBpcyBsYXJnZXIuXHJcbiAgICAgICAgdmFyIGxvZzIgPSBNYXRoLmNlaWwoTWF0aC5sb2coYXBwcm94KSAvIE1hdGguTE4yKSxcclxuICAgICAgICAgIGRlbHRhID0gbG9nMiA8PSA0OCA/IDEgOiBwb3dfZGJsKDIsIGxvZzIgLSA0OCksXHJcbiAgICAgICAgICAvLyBEZWNyZWFzZSB0aGUgYXBwcm94aW1hdGlvbiB1bnRpbCBpdCBpcyBzbWFsbGVyIHRoYW4gdGhlIHJlbWFpbmRlci4gIE5vdGVcclxuICAgICAgICAgIC8vIHRoYXQgaWYgaXQgaXMgdG9vIGxhcmdlLCB0aGUgcHJvZHVjdCBvdmVyZmxvd3MgYW5kIGlzIG5lZ2F0aXZlLlxyXG4gICAgICAgICAgYXBwcm94UmVzID0gZnJvbU51bWJlcihhcHByb3gpLFxyXG4gICAgICAgICAgYXBwcm94UmVtID0gYXBwcm94UmVzLm11bChkaXZpc29yKTtcclxuICAgICAgICB3aGlsZSAoYXBwcm94UmVtLmlzTmVnYXRpdmUoKSB8fCBhcHByb3hSZW0uZ3QocmVtKSkge1xyXG4gICAgICAgICAgYXBwcm94IC09IGRlbHRhO1xyXG4gICAgICAgICAgYXBwcm94UmVzID0gZnJvbU51bWJlcihhcHByb3gsIHRoaXMudW5zaWduZWQpO1xyXG4gICAgICAgICAgYXBwcm94UmVtID0gYXBwcm94UmVzLm11bChkaXZpc29yKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIFdlIGtub3cgdGhlIGFuc3dlciBjYW4ndCBiZSB6ZXJvLi4uIGFuZCBhY3R1YWxseSwgemVybyB3b3VsZCBjYXVzZVxyXG4gICAgICAgIC8vIGluZmluaXRlIHJlY3Vyc2lvbiBzaW5jZSB3ZSB3b3VsZCBtYWtlIG5vIHByb2dyZXNzLlxyXG4gICAgICAgIGlmIChhcHByb3hSZXMuaXNaZXJvKCkpIGFwcHJveFJlcyA9IE9ORTtcclxuICAgICAgICByZXMgPSByZXMuYWRkKGFwcHJveFJlcyk7XHJcbiAgICAgICAgcmVtID0gcmVtLnN1YihhcHByb3hSZW0pO1xyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiByZXM7XHJcbiAgICB9O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyB0aGlzIExvbmcgZGl2aWRlZCBieSB0aGUgc3BlY2lmaWVkLiBUaGlzIGlzIGFuIGFsaWFzIG9mIHtAbGluayBMb25nI2RpdmlkZX0uXHJcbiAgICAgKiBAZnVuY3Rpb25cclxuICAgICAqIEBwYXJhbSB7IUxvbmd8bnVtYmVyfGJpZ2ludHxzdHJpbmd9IGRpdmlzb3IgRGl2aXNvclxyXG4gICAgICogQHJldHVybnMgeyFMb25nfSBRdW90aWVudFxyXG4gICAgICovXHJcbiAgICBMb25nUHJvdG90eXBlLmRpdiA9IExvbmdQcm90b3R5cGUuZGl2aWRlO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyB0aGlzIExvbmcgbW9kdWxvIHRoZSBzcGVjaWZpZWQuXHJcbiAgICAgKiBAdGhpcyB7IUxvbmd9XHJcbiAgICAgKiBAcGFyYW0geyFMb25nfG51bWJlcnxiaWdpbnR8c3RyaW5nfSBkaXZpc29yIERpdmlzb3JcclxuICAgICAqIEByZXR1cm5zIHshTG9uZ30gUmVtYWluZGVyXHJcbiAgICAgKi9cclxuICAgIExvbmdQcm90b3R5cGUubW9kdWxvID0gZnVuY3Rpb24gbW9kdWxvKGRpdmlzb3IpIHtcclxuICAgICAgaWYgKCFpc0xvbmcoZGl2aXNvcikpIGRpdmlzb3IgPSBmcm9tVmFsdWUoZGl2aXNvcik7XHJcblxyXG4gICAgICAvLyB1c2Ugd2FzbSBzdXBwb3J0IGlmIHByZXNlbnRcclxuICAgICAgaWYgKHdhc20pIHtcclxuICAgICAgICB2YXIgbG93ID0gKHRoaXMudW5zaWduZWQgPyB3YXNtW1wicmVtX3VcIl0gOiB3YXNtW1wicmVtX3NcIl0pKFxyXG4gICAgICAgICAgdGhpcy5sb3csXHJcbiAgICAgICAgICB0aGlzLmhpZ2gsXHJcbiAgICAgICAgICBkaXZpc29yLmxvdyxcclxuICAgICAgICAgIGRpdmlzb3IuaGlnaCxcclxuICAgICAgICApO1xyXG4gICAgICAgIHJldHVybiBmcm9tQml0cyhsb3csIHdhc21bXCJnZXRfaGlnaFwiXSgpLCB0aGlzLnVuc2lnbmVkKTtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gdGhpcy5zdWIodGhpcy5kaXYoZGl2aXNvcikubXVsKGRpdmlzb3IpKTtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIHRoaXMgTG9uZyBtb2R1bG8gdGhlIHNwZWNpZmllZC4gVGhpcyBpcyBhbiBhbGlhcyBvZiB7QGxpbmsgTG9uZyNtb2R1bG99LlxyXG4gICAgICogQGZ1bmN0aW9uXHJcbiAgICAgKiBAcGFyYW0geyFMb25nfG51bWJlcnxiaWdpbnR8c3RyaW5nfSBkaXZpc29yIERpdmlzb3JcclxuICAgICAqIEByZXR1cm5zIHshTG9uZ30gUmVtYWluZGVyXHJcbiAgICAgKi9cclxuICAgIExvbmdQcm90b3R5cGUubW9kID0gTG9uZ1Byb3RvdHlwZS5tb2R1bG87XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIHRoaXMgTG9uZyBtb2R1bG8gdGhlIHNwZWNpZmllZC4gVGhpcyBpcyBhbiBhbGlhcyBvZiB7QGxpbmsgTG9uZyNtb2R1bG99LlxyXG4gICAgICogQGZ1bmN0aW9uXHJcbiAgICAgKiBAcGFyYW0geyFMb25nfG51bWJlcnxiaWdpbnR8c3RyaW5nfSBkaXZpc29yIERpdmlzb3JcclxuICAgICAqIEByZXR1cm5zIHshTG9uZ30gUmVtYWluZGVyXHJcbiAgICAgKi9cclxuICAgIExvbmdQcm90b3R5cGUucmVtID0gTG9uZ1Byb3RvdHlwZS5tb2R1bG87XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIHRoZSBiaXR3aXNlIE5PVCBvZiB0aGlzIExvbmcuXHJcbiAgICAgKiBAdGhpcyB7IUxvbmd9XHJcbiAgICAgKiBAcmV0dXJucyB7IUxvbmd9XHJcbiAgICAgKi9cclxuICAgIExvbmdQcm90b3R5cGUubm90ID0gZnVuY3Rpb24gbm90KCkge1xyXG4gICAgICByZXR1cm4gZnJvbUJpdHMofnRoaXMubG93LCB+dGhpcy5oaWdoLCB0aGlzLnVuc2lnbmVkKTtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIGNvdW50IGxlYWRpbmcgemVyb3Mgb2YgdGhpcyBMb25nLlxyXG4gICAgICogQHRoaXMgeyFMb25nfVxyXG4gICAgICogQHJldHVybnMgeyFudW1iZXJ9XHJcbiAgICAgKi9cclxuICAgIExvbmdQcm90b3R5cGUuY291bnRMZWFkaW5nWmVyb3MgPSBmdW5jdGlvbiBjb3VudExlYWRpbmdaZXJvcygpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuaGlnaCA/IE1hdGguY2x6MzIodGhpcy5oaWdoKSA6IE1hdGguY2x6MzIodGhpcy5sb3cpICsgMzI7XHJcbiAgICB9O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyBjb3VudCBsZWFkaW5nIHplcm9zLiBUaGlzIGlzIGFuIGFsaWFzIG9mIHtAbGluayBMb25nI2NvdW50TGVhZGluZ1plcm9zfS5cclxuICAgICAqIEBmdW5jdGlvblxyXG4gICAgICogQHBhcmFtIHshTG9uZ31cclxuICAgICAqIEByZXR1cm5zIHshbnVtYmVyfVxyXG4gICAgICovXHJcbiAgICBMb25nUHJvdG90eXBlLmNseiA9IExvbmdQcm90b3R5cGUuY291bnRMZWFkaW5nWmVyb3M7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIGNvdW50IHRyYWlsaW5nIHplcm9zIG9mIHRoaXMgTG9uZy5cclxuICAgICAqIEB0aGlzIHshTG9uZ31cclxuICAgICAqIEByZXR1cm5zIHshbnVtYmVyfVxyXG4gICAgICovXHJcbiAgICBMb25nUHJvdG90eXBlLmNvdW50VHJhaWxpbmdaZXJvcyA9IGZ1bmN0aW9uIGNvdW50VHJhaWxpbmdaZXJvcygpIHtcclxuICAgICAgcmV0dXJuIHRoaXMubG93ID8gY3R6MzIodGhpcy5sb3cpIDogY3R6MzIodGhpcy5oaWdoKSArIDMyO1xyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgY291bnQgdHJhaWxpbmcgemVyb3MuIFRoaXMgaXMgYW4gYWxpYXMgb2Yge0BsaW5rIExvbmcjY291bnRUcmFpbGluZ1plcm9zfS5cclxuICAgICAqIEBmdW5jdGlvblxyXG4gICAgICogQHBhcmFtIHshTG9uZ31cclxuICAgICAqIEByZXR1cm5zIHshbnVtYmVyfVxyXG4gICAgICovXHJcbiAgICBMb25nUHJvdG90eXBlLmN0eiA9IExvbmdQcm90b3R5cGUuY291bnRUcmFpbGluZ1plcm9zO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyB0aGUgYml0d2lzZSBBTkQgb2YgdGhpcyBMb25nIGFuZCB0aGUgc3BlY2lmaWVkLlxyXG4gICAgICogQHRoaXMgeyFMb25nfVxyXG4gICAgICogQHBhcmFtIHshTG9uZ3xudW1iZXJ8YmlnaW50fHN0cmluZ30gb3RoZXIgT3RoZXIgTG9uZ1xyXG4gICAgICogQHJldHVybnMgeyFMb25nfVxyXG4gICAgICovXHJcbiAgICBMb25nUHJvdG90eXBlLmFuZCA9IGZ1bmN0aW9uIGFuZChvdGhlcikge1xyXG4gICAgICBpZiAoIWlzTG9uZyhvdGhlcikpIG90aGVyID0gZnJvbVZhbHVlKG90aGVyKTtcclxuICAgICAgcmV0dXJuIGZyb21CaXRzKFxyXG4gICAgICAgIHRoaXMubG93ICYgb3RoZXIubG93LFxyXG4gICAgICAgIHRoaXMuaGlnaCAmIG90aGVyLmhpZ2gsXHJcbiAgICAgICAgdGhpcy51bnNpZ25lZCxcclxuICAgICAgKTtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIHRoZSBiaXR3aXNlIE9SIG9mIHRoaXMgTG9uZyBhbmQgdGhlIHNwZWNpZmllZC5cclxuICAgICAqIEB0aGlzIHshTG9uZ31cclxuICAgICAqIEBwYXJhbSB7IUxvbmd8bnVtYmVyfGJpZ2ludHxzdHJpbmd9IG90aGVyIE90aGVyIExvbmdcclxuICAgICAqIEByZXR1cm5zIHshTG9uZ31cclxuICAgICAqL1xyXG4gICAgTG9uZ1Byb3RvdHlwZS5vciA9IGZ1bmN0aW9uIG9yKG90aGVyKSB7XHJcbiAgICAgIGlmICghaXNMb25nKG90aGVyKSkgb3RoZXIgPSBmcm9tVmFsdWUob3RoZXIpO1xyXG4gICAgICByZXR1cm4gZnJvbUJpdHMoXHJcbiAgICAgICAgdGhpcy5sb3cgfCBvdGhlci5sb3csXHJcbiAgICAgICAgdGhpcy5oaWdoIHwgb3RoZXIuaGlnaCxcclxuICAgICAgICB0aGlzLnVuc2lnbmVkLFxyXG4gICAgICApO1xyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgdGhlIGJpdHdpc2UgWE9SIG9mIHRoaXMgTG9uZyBhbmQgdGhlIGdpdmVuIG9uZS5cclxuICAgICAqIEB0aGlzIHshTG9uZ31cclxuICAgICAqIEBwYXJhbSB7IUxvbmd8bnVtYmVyfGJpZ2ludHxzdHJpbmd9IG90aGVyIE90aGVyIExvbmdcclxuICAgICAqIEByZXR1cm5zIHshTG9uZ31cclxuICAgICAqL1xyXG4gICAgTG9uZ1Byb3RvdHlwZS54b3IgPSBmdW5jdGlvbiB4b3Iob3RoZXIpIHtcclxuICAgICAgaWYgKCFpc0xvbmcob3RoZXIpKSBvdGhlciA9IGZyb21WYWx1ZShvdGhlcik7XHJcbiAgICAgIHJldHVybiBmcm9tQml0cyhcclxuICAgICAgICB0aGlzLmxvdyBeIG90aGVyLmxvdyxcclxuICAgICAgICB0aGlzLmhpZ2ggXiBvdGhlci5oaWdoLFxyXG4gICAgICAgIHRoaXMudW5zaWduZWQsXHJcbiAgICAgICk7XHJcbiAgICB9O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyB0aGlzIExvbmcgd2l0aCBiaXRzIHNoaWZ0ZWQgdG8gdGhlIGxlZnQgYnkgdGhlIGdpdmVuIGFtb3VudC5cclxuICAgICAqIEB0aGlzIHshTG9uZ31cclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfCFMb25nfSBudW1CaXRzIE51bWJlciBvZiBiaXRzXHJcbiAgICAgKiBAcmV0dXJucyB7IUxvbmd9IFNoaWZ0ZWQgTG9uZ1xyXG4gICAgICovXHJcbiAgICBMb25nUHJvdG90eXBlLnNoaWZ0TGVmdCA9IGZ1bmN0aW9uIHNoaWZ0TGVmdChudW1CaXRzKSB7XHJcbiAgICAgIGlmIChpc0xvbmcobnVtQml0cykpIG51bUJpdHMgPSBudW1CaXRzLnRvSW50KCk7XHJcbiAgICAgIGlmICgobnVtQml0cyAmPSA2MykgPT09IDApIHJldHVybiB0aGlzO1xyXG4gICAgICBlbHNlIGlmIChudW1CaXRzIDwgMzIpXHJcbiAgICAgICAgcmV0dXJuIGZyb21CaXRzKFxyXG4gICAgICAgICAgdGhpcy5sb3cgPDwgbnVtQml0cyxcclxuICAgICAgICAgICh0aGlzLmhpZ2ggPDwgbnVtQml0cykgfCAodGhpcy5sb3cgPj4+ICgzMiAtIG51bUJpdHMpKSxcclxuICAgICAgICAgIHRoaXMudW5zaWduZWQsXHJcbiAgICAgICAgKTtcclxuICAgICAgZWxzZSByZXR1cm4gZnJvbUJpdHMoMCwgdGhpcy5sb3cgPDwgKG51bUJpdHMgLSAzMiksIHRoaXMudW5zaWduZWQpO1xyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgdGhpcyBMb25nIHdpdGggYml0cyBzaGlmdGVkIHRvIHRoZSBsZWZ0IGJ5IHRoZSBnaXZlbiBhbW91bnQuIFRoaXMgaXMgYW4gYWxpYXMgb2Yge0BsaW5rIExvbmcjc2hpZnRMZWZ0fS5cclxuICAgICAqIEBmdW5jdGlvblxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ8IUxvbmd9IG51bUJpdHMgTnVtYmVyIG9mIGJpdHNcclxuICAgICAqIEByZXR1cm5zIHshTG9uZ30gU2hpZnRlZCBMb25nXHJcbiAgICAgKi9cclxuICAgIExvbmdQcm90b3R5cGUuc2hsID0gTG9uZ1Byb3RvdHlwZS5zaGlmdExlZnQ7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIHRoaXMgTG9uZyB3aXRoIGJpdHMgYXJpdGhtZXRpY2FsbHkgc2hpZnRlZCB0byB0aGUgcmlnaHQgYnkgdGhlIGdpdmVuIGFtb3VudC5cclxuICAgICAqIEB0aGlzIHshTG9uZ31cclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfCFMb25nfSBudW1CaXRzIE51bWJlciBvZiBiaXRzXHJcbiAgICAgKiBAcmV0dXJucyB7IUxvbmd9IFNoaWZ0ZWQgTG9uZ1xyXG4gICAgICovXHJcbiAgICBMb25nUHJvdG90eXBlLnNoaWZ0UmlnaHQgPSBmdW5jdGlvbiBzaGlmdFJpZ2h0KG51bUJpdHMpIHtcclxuICAgICAgaWYgKGlzTG9uZyhudW1CaXRzKSkgbnVtQml0cyA9IG51bUJpdHMudG9JbnQoKTtcclxuICAgICAgaWYgKChudW1CaXRzICY9IDYzKSA9PT0gMCkgcmV0dXJuIHRoaXM7XHJcbiAgICAgIGVsc2UgaWYgKG51bUJpdHMgPCAzMilcclxuICAgICAgICByZXR1cm4gZnJvbUJpdHMoXHJcbiAgICAgICAgICAodGhpcy5sb3cgPj4+IG51bUJpdHMpIHwgKHRoaXMuaGlnaCA8PCAoMzIgLSBudW1CaXRzKSksXHJcbiAgICAgICAgICB0aGlzLmhpZ2ggPj4gbnVtQml0cyxcclxuICAgICAgICAgIHRoaXMudW5zaWduZWQsXHJcbiAgICAgICAgKTtcclxuICAgICAgZWxzZVxyXG4gICAgICAgIHJldHVybiBmcm9tQml0cyhcclxuICAgICAgICAgIHRoaXMuaGlnaCA+PiAobnVtQml0cyAtIDMyKSxcclxuICAgICAgICAgIHRoaXMuaGlnaCA+PSAwID8gMCA6IC0xLFxyXG4gICAgICAgICAgdGhpcy51bnNpZ25lZCxcclxuICAgICAgICApO1xyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgdGhpcyBMb25nIHdpdGggYml0cyBhcml0aG1ldGljYWxseSBzaGlmdGVkIHRvIHRoZSByaWdodCBieSB0aGUgZ2l2ZW4gYW1vdW50LiBUaGlzIGlzIGFuIGFsaWFzIG9mIHtAbGluayBMb25nI3NoaWZ0UmlnaHR9LlxyXG4gICAgICogQGZ1bmN0aW9uXHJcbiAgICAgKiBAcGFyYW0ge251bWJlcnwhTG9uZ30gbnVtQml0cyBOdW1iZXIgb2YgYml0c1xyXG4gICAgICogQHJldHVybnMgeyFMb25nfSBTaGlmdGVkIExvbmdcclxuICAgICAqL1xyXG4gICAgTG9uZ1Byb3RvdHlwZS5zaHIgPSBMb25nUHJvdG90eXBlLnNoaWZ0UmlnaHQ7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIHRoaXMgTG9uZyB3aXRoIGJpdHMgbG9naWNhbGx5IHNoaWZ0ZWQgdG8gdGhlIHJpZ2h0IGJ5IHRoZSBnaXZlbiBhbW91bnQuXHJcbiAgICAgKiBAdGhpcyB7IUxvbmd9XHJcbiAgICAgKiBAcGFyYW0ge251bWJlcnwhTG9uZ30gbnVtQml0cyBOdW1iZXIgb2YgYml0c1xyXG4gICAgICogQHJldHVybnMgeyFMb25nfSBTaGlmdGVkIExvbmdcclxuICAgICAqL1xyXG4gICAgTG9uZ1Byb3RvdHlwZS5zaGlmdFJpZ2h0VW5zaWduZWQgPSBmdW5jdGlvbiBzaGlmdFJpZ2h0VW5zaWduZWQobnVtQml0cykge1xyXG4gICAgICBpZiAoaXNMb25nKG51bUJpdHMpKSBudW1CaXRzID0gbnVtQml0cy50b0ludCgpO1xyXG4gICAgICBpZiAoKG51bUJpdHMgJj0gNjMpID09PSAwKSByZXR1cm4gdGhpcztcclxuICAgICAgaWYgKG51bUJpdHMgPCAzMilcclxuICAgICAgICByZXR1cm4gZnJvbUJpdHMoXHJcbiAgICAgICAgICAodGhpcy5sb3cgPj4+IG51bUJpdHMpIHwgKHRoaXMuaGlnaCA8PCAoMzIgLSBudW1CaXRzKSksXHJcbiAgICAgICAgICB0aGlzLmhpZ2ggPj4+IG51bUJpdHMsXHJcbiAgICAgICAgICB0aGlzLnVuc2lnbmVkLFxyXG4gICAgICAgICk7XHJcbiAgICAgIGlmIChudW1CaXRzID09PSAzMikgcmV0dXJuIGZyb21CaXRzKHRoaXMuaGlnaCwgMCwgdGhpcy51bnNpZ25lZCk7XHJcbiAgICAgIHJldHVybiBmcm9tQml0cyh0aGlzLmhpZ2ggPj4+IChudW1CaXRzIC0gMzIpLCAwLCB0aGlzLnVuc2lnbmVkKTtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIHRoaXMgTG9uZyB3aXRoIGJpdHMgbG9naWNhbGx5IHNoaWZ0ZWQgdG8gdGhlIHJpZ2h0IGJ5IHRoZSBnaXZlbiBhbW91bnQuIFRoaXMgaXMgYW4gYWxpYXMgb2Yge0BsaW5rIExvbmcjc2hpZnRSaWdodFVuc2lnbmVkfS5cclxuICAgICAqIEBmdW5jdGlvblxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ8IUxvbmd9IG51bUJpdHMgTnVtYmVyIG9mIGJpdHNcclxuICAgICAqIEByZXR1cm5zIHshTG9uZ30gU2hpZnRlZCBMb25nXHJcbiAgICAgKi9cclxuICAgIExvbmdQcm90b3R5cGUuc2hydSA9IExvbmdQcm90b3R5cGUuc2hpZnRSaWdodFVuc2lnbmVkO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyB0aGlzIExvbmcgd2l0aCBiaXRzIGxvZ2ljYWxseSBzaGlmdGVkIHRvIHRoZSByaWdodCBieSB0aGUgZ2l2ZW4gYW1vdW50LiBUaGlzIGlzIGFuIGFsaWFzIG9mIHtAbGluayBMb25nI3NoaWZ0UmlnaHRVbnNpZ25lZH0uXHJcbiAgICAgKiBAZnVuY3Rpb25cclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfCFMb25nfSBudW1CaXRzIE51bWJlciBvZiBiaXRzXHJcbiAgICAgKiBAcmV0dXJucyB7IUxvbmd9IFNoaWZ0ZWQgTG9uZ1xyXG4gICAgICovXHJcbiAgICBMb25nUHJvdG90eXBlLnNocl91ID0gTG9uZ1Byb3RvdHlwZS5zaGlmdFJpZ2h0VW5zaWduZWQ7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIHRoaXMgTG9uZyB3aXRoIGJpdHMgcm90YXRlZCB0byB0aGUgbGVmdCBieSB0aGUgZ2l2ZW4gYW1vdW50LlxyXG4gICAgICogQHRoaXMgeyFMb25nfVxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ8IUxvbmd9IG51bUJpdHMgTnVtYmVyIG9mIGJpdHNcclxuICAgICAqIEByZXR1cm5zIHshTG9uZ30gUm90YXRlZCBMb25nXHJcbiAgICAgKi9cclxuICAgIExvbmdQcm90b3R5cGUucm90YXRlTGVmdCA9IGZ1bmN0aW9uIHJvdGF0ZUxlZnQobnVtQml0cykge1xyXG4gICAgICB2YXIgYjtcclxuICAgICAgaWYgKGlzTG9uZyhudW1CaXRzKSkgbnVtQml0cyA9IG51bUJpdHMudG9JbnQoKTtcclxuICAgICAgaWYgKChudW1CaXRzICY9IDYzKSA9PT0gMCkgcmV0dXJuIHRoaXM7XHJcbiAgICAgIGlmIChudW1CaXRzID09PSAzMikgcmV0dXJuIGZyb21CaXRzKHRoaXMuaGlnaCwgdGhpcy5sb3csIHRoaXMudW5zaWduZWQpO1xyXG4gICAgICBpZiAobnVtQml0cyA8IDMyKSB7XHJcbiAgICAgICAgYiA9IDMyIC0gbnVtQml0cztcclxuICAgICAgICByZXR1cm4gZnJvbUJpdHMoXHJcbiAgICAgICAgICAodGhpcy5sb3cgPDwgbnVtQml0cykgfCAodGhpcy5oaWdoID4+PiBiKSxcclxuICAgICAgICAgICh0aGlzLmhpZ2ggPDwgbnVtQml0cykgfCAodGhpcy5sb3cgPj4+IGIpLFxyXG4gICAgICAgICAgdGhpcy51bnNpZ25lZCxcclxuICAgICAgICApO1xyXG4gICAgICB9XHJcbiAgICAgIG51bUJpdHMgLT0gMzI7XHJcbiAgICAgIGIgPSAzMiAtIG51bUJpdHM7XHJcbiAgICAgIHJldHVybiBmcm9tQml0cyhcclxuICAgICAgICAodGhpcy5oaWdoIDw8IG51bUJpdHMpIHwgKHRoaXMubG93ID4+PiBiKSxcclxuICAgICAgICAodGhpcy5sb3cgPDwgbnVtQml0cykgfCAodGhpcy5oaWdoID4+PiBiKSxcclxuICAgICAgICB0aGlzLnVuc2lnbmVkLFxyXG4gICAgICApO1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyB0aGlzIExvbmcgd2l0aCBiaXRzIHJvdGF0ZWQgdG8gdGhlIGxlZnQgYnkgdGhlIGdpdmVuIGFtb3VudC4gVGhpcyBpcyBhbiBhbGlhcyBvZiB7QGxpbmsgTG9uZyNyb3RhdGVMZWZ0fS5cclxuICAgICAqIEBmdW5jdGlvblxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ8IUxvbmd9IG51bUJpdHMgTnVtYmVyIG9mIGJpdHNcclxuICAgICAqIEByZXR1cm5zIHshTG9uZ30gUm90YXRlZCBMb25nXHJcbiAgICAgKi9cclxuICAgIExvbmdQcm90b3R5cGUucm90bCA9IExvbmdQcm90b3R5cGUucm90YXRlTGVmdDtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgdGhpcyBMb25nIHdpdGggYml0cyByb3RhdGVkIHRvIHRoZSByaWdodCBieSB0aGUgZ2l2ZW4gYW1vdW50LlxyXG4gICAgICogQHRoaXMgeyFMb25nfVxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ8IUxvbmd9IG51bUJpdHMgTnVtYmVyIG9mIGJpdHNcclxuICAgICAqIEByZXR1cm5zIHshTG9uZ30gUm90YXRlZCBMb25nXHJcbiAgICAgKi9cclxuICAgIExvbmdQcm90b3R5cGUucm90YXRlUmlnaHQgPSBmdW5jdGlvbiByb3RhdGVSaWdodChudW1CaXRzKSB7XHJcbiAgICAgIHZhciBiO1xyXG4gICAgICBpZiAoaXNMb25nKG51bUJpdHMpKSBudW1CaXRzID0gbnVtQml0cy50b0ludCgpO1xyXG4gICAgICBpZiAoKG51bUJpdHMgJj0gNjMpID09PSAwKSByZXR1cm4gdGhpcztcclxuICAgICAgaWYgKG51bUJpdHMgPT09IDMyKSByZXR1cm4gZnJvbUJpdHModGhpcy5oaWdoLCB0aGlzLmxvdywgdGhpcy51bnNpZ25lZCk7XHJcbiAgICAgIGlmIChudW1CaXRzIDwgMzIpIHtcclxuICAgICAgICBiID0gMzIgLSBudW1CaXRzO1xyXG4gICAgICAgIHJldHVybiBmcm9tQml0cyhcclxuICAgICAgICAgICh0aGlzLmhpZ2ggPDwgYikgfCAodGhpcy5sb3cgPj4+IG51bUJpdHMpLFxyXG4gICAgICAgICAgKHRoaXMubG93IDw8IGIpIHwgKHRoaXMuaGlnaCA+Pj4gbnVtQml0cyksXHJcbiAgICAgICAgICB0aGlzLnVuc2lnbmVkLFxyXG4gICAgICAgICk7XHJcbiAgICAgIH1cclxuICAgICAgbnVtQml0cyAtPSAzMjtcclxuICAgICAgYiA9IDMyIC0gbnVtQml0cztcclxuICAgICAgcmV0dXJuIGZyb21CaXRzKFxyXG4gICAgICAgICh0aGlzLmxvdyA8PCBiKSB8ICh0aGlzLmhpZ2ggPj4+IG51bUJpdHMpLFxyXG4gICAgICAgICh0aGlzLmhpZ2ggPDwgYikgfCAodGhpcy5sb3cgPj4+IG51bUJpdHMpLFxyXG4gICAgICAgIHRoaXMudW5zaWduZWQsXHJcbiAgICAgICk7XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIHRoaXMgTG9uZyB3aXRoIGJpdHMgcm90YXRlZCB0byB0aGUgcmlnaHQgYnkgdGhlIGdpdmVuIGFtb3VudC4gVGhpcyBpcyBhbiBhbGlhcyBvZiB7QGxpbmsgTG9uZyNyb3RhdGVSaWdodH0uXHJcbiAgICAgKiBAZnVuY3Rpb25cclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfCFMb25nfSBudW1CaXRzIE51bWJlciBvZiBiaXRzXHJcbiAgICAgKiBAcmV0dXJucyB7IUxvbmd9IFJvdGF0ZWQgTG9uZ1xyXG4gICAgICovXHJcbiAgICBMb25nUHJvdG90eXBlLnJvdHIgPSBMb25nUHJvdG90eXBlLnJvdGF0ZVJpZ2h0O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ29udmVydHMgdGhpcyBMb25nIHRvIHNpZ25lZC5cclxuICAgICAqIEB0aGlzIHshTG9uZ31cclxuICAgICAqIEByZXR1cm5zIHshTG9uZ30gU2lnbmVkIGxvbmdcclxuICAgICAqL1xyXG4gICAgTG9uZ1Byb3RvdHlwZS50b1NpZ25lZCA9IGZ1bmN0aW9uIHRvU2lnbmVkKCkge1xyXG4gICAgICBpZiAoIXRoaXMudW5zaWduZWQpIHJldHVybiB0aGlzO1xyXG4gICAgICByZXR1cm4gZnJvbUJpdHModGhpcy5sb3csIHRoaXMuaGlnaCwgZmFsc2UpO1xyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIENvbnZlcnRzIHRoaXMgTG9uZyB0byB1bnNpZ25lZC5cclxuICAgICAqIEB0aGlzIHshTG9uZ31cclxuICAgICAqIEByZXR1cm5zIHshTG9uZ30gVW5zaWduZWQgbG9uZ1xyXG4gICAgICovXHJcbiAgICBMb25nUHJvdG90eXBlLnRvVW5zaWduZWQgPSBmdW5jdGlvbiB0b1Vuc2lnbmVkKCkge1xyXG4gICAgICBpZiAodGhpcy51bnNpZ25lZCkgcmV0dXJuIHRoaXM7XHJcbiAgICAgIHJldHVybiBmcm9tQml0cyh0aGlzLmxvdywgdGhpcy5oaWdoLCB0cnVlKTtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDb252ZXJ0cyB0aGlzIExvbmcgdG8gaXRzIGJ5dGUgcmVwcmVzZW50YXRpb24uXHJcbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW49fSBsZSBXaGV0aGVyIGxpdHRsZSBvciBiaWcgZW5kaWFuLCBkZWZhdWx0cyB0byBiaWcgZW5kaWFuXHJcbiAgICAgKiBAdGhpcyB7IUxvbmd9XHJcbiAgICAgKiBAcmV0dXJucyB7IUFycmF5LjxudW1iZXI+fSBCeXRlIHJlcHJlc2VudGF0aW9uXHJcbiAgICAgKi9cclxuICAgIExvbmdQcm90b3R5cGUudG9CeXRlcyA9IGZ1bmN0aW9uIHRvQnl0ZXMobGUpIHtcclxuICAgICAgcmV0dXJuIGxlID8gdGhpcy50b0J5dGVzTEUoKSA6IHRoaXMudG9CeXRlc0JFKCk7XHJcbiAgICB9O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ29udmVydHMgdGhpcyBMb25nIHRvIGl0cyBsaXR0bGUgZW5kaWFuIGJ5dGUgcmVwcmVzZW50YXRpb24uXHJcbiAgICAgKiBAdGhpcyB7IUxvbmd9XHJcbiAgICAgKiBAcmV0dXJucyB7IUFycmF5LjxudW1iZXI+fSBMaXR0bGUgZW5kaWFuIGJ5dGUgcmVwcmVzZW50YXRpb25cclxuICAgICAqL1xyXG4gICAgTG9uZ1Byb3RvdHlwZS50b0J5dGVzTEUgPSBmdW5jdGlvbiB0b0J5dGVzTEUoKSB7XHJcbiAgICAgIHZhciBoaSA9IHRoaXMuaGlnaCxcclxuICAgICAgICBsbyA9IHRoaXMubG93O1xyXG4gICAgICByZXR1cm4gW1xyXG4gICAgICAgIGxvICYgMHhmZixcclxuICAgICAgICAobG8gPj4+IDgpICYgMHhmZixcclxuICAgICAgICAobG8gPj4+IDE2KSAmIDB4ZmYsXHJcbiAgICAgICAgbG8gPj4+IDI0LFxyXG4gICAgICAgIGhpICYgMHhmZixcclxuICAgICAgICAoaGkgPj4+IDgpICYgMHhmZixcclxuICAgICAgICAoaGkgPj4+IDE2KSAmIDB4ZmYsXHJcbiAgICAgICAgaGkgPj4+IDI0LFxyXG4gICAgICBdO1xyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIENvbnZlcnRzIHRoaXMgTG9uZyB0byBpdHMgYmlnIGVuZGlhbiBieXRlIHJlcHJlc2VudGF0aW9uLlxyXG4gICAgICogQHRoaXMgeyFMb25nfVxyXG4gICAgICogQHJldHVybnMgeyFBcnJheS48bnVtYmVyPn0gQmlnIGVuZGlhbiBieXRlIHJlcHJlc2VudGF0aW9uXHJcbiAgICAgKi9cclxuICAgIExvbmdQcm90b3R5cGUudG9CeXRlc0JFID0gZnVuY3Rpb24gdG9CeXRlc0JFKCkge1xyXG4gICAgICB2YXIgaGkgPSB0aGlzLmhpZ2gsXHJcbiAgICAgICAgbG8gPSB0aGlzLmxvdztcclxuICAgICAgcmV0dXJuIFtcclxuICAgICAgICBoaSA+Pj4gMjQsXHJcbiAgICAgICAgKGhpID4+PiAxNikgJiAweGZmLFxyXG4gICAgICAgIChoaSA+Pj4gOCkgJiAweGZmLFxyXG4gICAgICAgIGhpICYgMHhmZixcclxuICAgICAgICBsbyA+Pj4gMjQsXHJcbiAgICAgICAgKGxvID4+PiAxNikgJiAweGZmLFxyXG4gICAgICAgIChsbyA+Pj4gOCkgJiAweGZmLFxyXG4gICAgICAgIGxvICYgMHhmZixcclxuICAgICAgXTtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDcmVhdGVzIGEgTG9uZyBmcm9tIGl0cyBieXRlIHJlcHJlc2VudGF0aW9uLlxyXG4gICAgICogQHBhcmFtIHshQXJyYXkuPG51bWJlcj59IGJ5dGVzIEJ5dGUgcmVwcmVzZW50YXRpb25cclxuICAgICAqIEBwYXJhbSB7Ym9vbGVhbj19IHVuc2lnbmVkIFdoZXRoZXIgdW5zaWduZWQgb3Igbm90LCBkZWZhdWx0cyB0byBzaWduZWRcclxuICAgICAqIEBwYXJhbSB7Ym9vbGVhbj19IGxlIFdoZXRoZXIgbGl0dGxlIG9yIGJpZyBlbmRpYW4sIGRlZmF1bHRzIHRvIGJpZyBlbmRpYW5cclxuICAgICAqIEByZXR1cm5zIHtMb25nfSBUaGUgY29ycmVzcG9uZGluZyBMb25nIHZhbHVlXHJcbiAgICAgKi9cclxuICAgIExvbmcuZnJvbUJ5dGVzID0gZnVuY3Rpb24gZnJvbUJ5dGVzKGJ5dGVzLCB1bnNpZ25lZCwgbGUpIHtcclxuICAgICAgcmV0dXJuIGxlXHJcbiAgICAgICAgPyBMb25nLmZyb21CeXRlc0xFKGJ5dGVzLCB1bnNpZ25lZClcclxuICAgICAgICA6IExvbmcuZnJvbUJ5dGVzQkUoYnl0ZXMsIHVuc2lnbmVkKTtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDcmVhdGVzIGEgTG9uZyBmcm9tIGl0cyBsaXR0bGUgZW5kaWFuIGJ5dGUgcmVwcmVzZW50YXRpb24uXHJcbiAgICAgKiBAcGFyYW0geyFBcnJheS48bnVtYmVyPn0gYnl0ZXMgTGl0dGxlIGVuZGlhbiBieXRlIHJlcHJlc2VudGF0aW9uXHJcbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW49fSB1bnNpZ25lZCBXaGV0aGVyIHVuc2lnbmVkIG9yIG5vdCwgZGVmYXVsdHMgdG8gc2lnbmVkXHJcbiAgICAgKiBAcmV0dXJucyB7TG9uZ30gVGhlIGNvcnJlc3BvbmRpbmcgTG9uZyB2YWx1ZVxyXG4gICAgICovXHJcbiAgICBMb25nLmZyb21CeXRlc0xFID0gZnVuY3Rpb24gZnJvbUJ5dGVzTEUoYnl0ZXMsIHVuc2lnbmVkKSB7XHJcbiAgICAgIHJldHVybiBuZXcgTG9uZyhcclxuICAgICAgICBieXRlc1swXSB8IChieXRlc1sxXSA8PCA4KSB8IChieXRlc1syXSA8PCAxNikgfCAoYnl0ZXNbM10gPDwgMjQpLFxyXG4gICAgICAgIGJ5dGVzWzRdIHwgKGJ5dGVzWzVdIDw8IDgpIHwgKGJ5dGVzWzZdIDw8IDE2KSB8IChieXRlc1s3XSA8PCAyNCksXHJcbiAgICAgICAgdW5zaWduZWQsXHJcbiAgICAgICk7XHJcbiAgICB9O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlcyBhIExvbmcgZnJvbSBpdHMgYmlnIGVuZGlhbiBieXRlIHJlcHJlc2VudGF0aW9uLlxyXG4gICAgICogQHBhcmFtIHshQXJyYXkuPG51bWJlcj59IGJ5dGVzIEJpZyBlbmRpYW4gYnl0ZSByZXByZXNlbnRhdGlvblxyXG4gICAgICogQHBhcmFtIHtib29sZWFuPX0gdW5zaWduZWQgV2hldGhlciB1bnNpZ25lZCBvciBub3QsIGRlZmF1bHRzIHRvIHNpZ25lZFxyXG4gICAgICogQHJldHVybnMge0xvbmd9IFRoZSBjb3JyZXNwb25kaW5nIExvbmcgdmFsdWVcclxuICAgICAqL1xyXG4gICAgTG9uZy5mcm9tQnl0ZXNCRSA9IGZ1bmN0aW9uIGZyb21CeXRlc0JFKGJ5dGVzLCB1bnNpZ25lZCkge1xyXG4gICAgICByZXR1cm4gbmV3IExvbmcoXHJcbiAgICAgICAgKGJ5dGVzWzRdIDw8IDI0KSB8IChieXRlc1s1XSA8PCAxNikgfCAoYnl0ZXNbNl0gPDwgOCkgfCBieXRlc1s3XSxcclxuICAgICAgICAoYnl0ZXNbMF0gPDwgMjQpIHwgKGJ5dGVzWzFdIDw8IDE2KSB8IChieXRlc1syXSA8PCA4KSB8IGJ5dGVzWzNdLFxyXG4gICAgICAgIHVuc2lnbmVkLFxyXG4gICAgICApO1xyXG4gICAgfTtcclxuXHJcbiAgICAvLyBTdXBwb3J0IGNvbnZlcnNpb24gdG8vZnJvbSBCaWdJbnQgd2hlcmUgYXZhaWxhYmxlXHJcbiAgICBpZiAodHlwZW9mIEJpZ0ludCA9PT0gXCJmdW5jdGlvblwiKSB7XHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBSZXR1cm5zIGEgTG9uZyByZXByZXNlbnRpbmcgdGhlIGdpdmVuIGJpZyBpbnRlZ2VyLlxyXG4gICAgICAgKiBAZnVuY3Rpb25cclxuICAgICAgICogQHBhcmFtIHtudW1iZXJ9IHZhbHVlIFRoZSBiaWcgaW50ZWdlciB2YWx1ZVxyXG4gICAgICAgKiBAcGFyYW0ge2Jvb2xlYW49fSB1bnNpZ25lZCBXaGV0aGVyIHVuc2lnbmVkIG9yIG5vdCwgZGVmYXVsdHMgdG8gc2lnbmVkXHJcbiAgICAgICAqIEByZXR1cm5zIHshTG9uZ30gVGhlIGNvcnJlc3BvbmRpbmcgTG9uZyB2YWx1ZVxyXG4gICAgICAgKi9cclxuICAgICAgTG9uZy5mcm9tQmlnSW50ID0gZnVuY3Rpb24gZnJvbUJpZ0ludCh2YWx1ZSwgdW5zaWduZWQpIHtcclxuICAgICAgICB2YXIgbG93Qml0cyA9IE51bWJlcihCaWdJbnQuYXNJbnROKDMyLCB2YWx1ZSkpO1xyXG4gICAgICAgIHZhciBoaWdoQml0cyA9IE51bWJlcihCaWdJbnQuYXNJbnROKDMyLCB2YWx1ZSA+PiBCaWdJbnQoMzIpKSk7XHJcbiAgICAgICAgcmV0dXJuIGZyb21CaXRzKGxvd0JpdHMsIGhpZ2hCaXRzLCB1bnNpZ25lZCk7XHJcbiAgICAgIH07XHJcblxyXG4gICAgICAvLyBPdmVycmlkZVxyXG4gICAgICBMb25nLmZyb21WYWx1ZSA9IGZ1bmN0aW9uIGZyb21WYWx1ZVdpdGhCaWdJbnQodmFsdWUsIHVuc2lnbmVkKSB7XHJcbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJiaWdpbnRcIikgcmV0dXJuIExvbmcuZnJvbUJpZ0ludCh2YWx1ZSwgdW5zaWduZWQpO1xyXG4gICAgICAgIHJldHVybiBmcm9tVmFsdWUodmFsdWUsIHVuc2lnbmVkKTtcclxuICAgICAgfTtcclxuXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKiBDb252ZXJ0cyB0aGUgTG9uZyB0byBpdHMgYmlnIGludGVnZXIgcmVwcmVzZW50YXRpb24uXHJcbiAgICAgICAqIEB0aGlzIHshTG9uZ31cclxuICAgICAgICogQHJldHVybnMge2JpZ2ludH1cclxuICAgICAgICovXHJcbiAgICAgIExvbmdQcm90b3R5cGUudG9CaWdJbnQgPSBmdW5jdGlvbiB0b0JpZ0ludCgpIHtcclxuICAgICAgICB2YXIgbG93QmlnSW50ID0gQmlnSW50KHRoaXMubG93ID4+PiAwKTtcclxuICAgICAgICB2YXIgaGlnaEJpZ0ludCA9IEJpZ0ludCh0aGlzLnVuc2lnbmVkID8gdGhpcy5oaWdoID4+PiAwIDogdGhpcy5oaWdoKTtcclxuICAgICAgICByZXR1cm4gKGhpZ2hCaWdJbnQgPDwgQmlnSW50KDMyKSkgfCBsb3dCaWdJbnQ7XHJcbiAgICAgIH07XHJcbiAgICB9XHJcbiAgICB2YXIgX2RlZmF1bHQgPSAoX2V4cG9ydHMuZGVmYXVsdCA9IExvbmcpO1xyXG4gIH0sXHJcbik7XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/long/umd/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/lru-cache/index.js":
/*!*****************************************!*\
  !*** ./node_modules/lru-cache/index.js ***!
  \*****************************************/
/***/ ((module) => {

eval("const perf =\r\n  typeof performance === 'object' &&\r\n  performance &&\r\n  typeof performance.now === 'function'\r\n    ? performance\r\n    : Date\r\n\r\nconst hasAbortController = typeof AbortController === 'function'\r\n\r\n// minimal backwards-compatibility polyfill\r\n// this doesn't have nearly all the checks and whatnot that\r\n// actual AbortController/Signal has, but it's enough for\r\n// our purposes, and if used properly, behaves the same.\r\nconst AC = hasAbortController\r\n  ? AbortController\r\n  : class AbortController {\r\n      constructor() {\r\n        this.signal = new AS()\r\n      }\r\n      abort(reason = new Error('This operation was aborted')) {\r\n        this.signal.reason = this.signal.reason || reason\r\n        this.signal.aborted = true\r\n        this.signal.dispatchEvent({\r\n          type: 'abort',\r\n          target: this.signal,\r\n        })\r\n      }\r\n    }\r\n\r\nconst hasAbortSignal = typeof AbortSignal === 'function'\r\n// Some polyfills put this on the AC class, not global\r\nconst hasACAbortSignal = typeof AC.AbortSignal === 'function'\r\nconst AS = hasAbortSignal\r\n  ? AbortSignal\r\n  : hasACAbortSignal\r\n  ? AC.AbortController\r\n  : class AbortSignal {\r\n      constructor() {\r\n        this.reason = undefined\r\n        this.aborted = false\r\n        this._listeners = []\r\n      }\r\n      dispatchEvent(e) {\r\n        if (e.type === 'abort') {\r\n          this.aborted = true\r\n          this.onabort(e)\r\n          this._listeners.forEach(f => f(e), this)\r\n        }\r\n      }\r\n      onabort() {}\r\n      addEventListener(ev, fn) {\r\n        if (ev === 'abort') {\r\n          this._listeners.push(fn)\r\n        }\r\n      }\r\n      removeEventListener(ev, fn) {\r\n        if (ev === 'abort') {\r\n          this._listeners = this._listeners.filter(f => f !== fn)\r\n        }\r\n      }\r\n    }\r\n\r\nconst warned = new Set()\r\nconst deprecatedOption = (opt, instead) => {\r\n  const code = `LRU_CACHE_OPTION_${opt}`\r\n  if (shouldWarn(code)) {\r\n    warn(code, `${opt} option`, `options.${instead}`, LRUCache)\r\n  }\r\n}\r\nconst deprecatedMethod = (method, instead) => {\r\n  const code = `LRU_CACHE_METHOD_${method}`\r\n  if (shouldWarn(code)) {\r\n    const { prototype } = LRUCache\r\n    const { get } = Object.getOwnPropertyDescriptor(prototype, method)\r\n    warn(code, `${method} method`, `cache.${instead}()`, get)\r\n  }\r\n}\r\nconst deprecatedProperty = (field, instead) => {\r\n  const code = `LRU_CACHE_PROPERTY_${field}`\r\n  if (shouldWarn(code)) {\r\n    const { prototype } = LRUCache\r\n    const { get } = Object.getOwnPropertyDescriptor(prototype, field)\r\n    warn(code, `${field} property`, `cache.${instead}`, get)\r\n  }\r\n}\r\n\r\nconst emitWarning = (...a) => {\r\n  typeof process === 'object' &&\r\n  process &&\r\n  typeof process.emitWarning === 'function'\r\n    ? process.emitWarning(...a)\r\n    : console.error(...a)\r\n}\r\n\r\nconst shouldWarn = code => !warned.has(code)\r\n\r\nconst warn = (code, what, instead, fn) => {\r\n  warned.add(code)\r\n  const msg = `The ${what} is deprecated. Please use ${instead} instead.`\r\n  emitWarning(msg, 'DeprecationWarning', code, fn)\r\n}\r\n\r\nconst isPosInt = n => n && n === Math.floor(n) && n > 0 && isFinite(n)\r\n\r\n/* istanbul ignore next - This is a little bit ridiculous, tbh.\r\n * The maximum array length is 2^32-1 or thereabouts on most JS impls.\r\n * And well before that point, you're caching the entire world, I mean,\r\n * that's ~32GB of just integers for the next/prev links, plus whatever\r\n * else to hold that many keys and values.  Just filling the memory with\r\n * zeroes at init time is brutal when you get that big.\r\n * But why not be complete?\r\n * Maybe in the future, these limits will have expanded. */\r\nconst getUintArray = max =>\r\n  !isPosInt(max)\r\n    ? null\r\n    : max <= Math.pow(2, 8)\r\n    ? Uint8Array\r\n    : max <= Math.pow(2, 16)\r\n    ? Uint16Array\r\n    : max <= Math.pow(2, 32)\r\n    ? Uint32Array\r\n    : max <= Number.MAX_SAFE_INTEGER\r\n    ? ZeroArray\r\n    : null\r\n\r\nclass ZeroArray extends Array {\r\n  constructor(size) {\r\n    super(size)\r\n    this.fill(0)\r\n  }\r\n}\r\n\r\nclass Stack {\r\n  constructor(max) {\r\n    if (max === 0) {\r\n      return []\r\n    }\r\n    const UintArray = getUintArray(max)\r\n    this.heap = new UintArray(max)\r\n    this.length = 0\r\n  }\r\n  push(n) {\r\n    this.heap[this.length++] = n\r\n  }\r\n  pop() {\r\n    return this.heap[--this.length]\r\n  }\r\n}\r\n\r\nclass LRUCache {\r\n  constructor(options = {}) {\r\n    const {\r\n      max = 0,\r\n      ttl,\r\n      ttlResolution = 1,\r\n      ttlAutopurge,\r\n      updateAgeOnGet,\r\n      updateAgeOnHas,\r\n      allowStale,\r\n      dispose,\r\n      disposeAfter,\r\n      noDisposeOnSet,\r\n      noUpdateTTL,\r\n      maxSize = 0,\r\n      maxEntrySize = 0,\r\n      sizeCalculation,\r\n      fetchMethod,\r\n      fetchContext,\r\n      noDeleteOnFetchRejection,\r\n      noDeleteOnStaleGet,\r\n      allowStaleOnFetchRejection,\r\n      allowStaleOnFetchAbort,\r\n      ignoreFetchAbort,\r\n    } = options\r\n\r\n    // deprecated options, don't trigger a warning for getting them if\r\n    // the thing being passed in is another LRUCache we're copying.\r\n    const { length, maxAge, stale } =\r\n      options instanceof LRUCache ? {} : options\r\n\r\n    if (max !== 0 && !isPosInt(max)) {\r\n      throw new TypeError('max option must be a nonnegative integer')\r\n    }\r\n\r\n    const UintArray = max ? getUintArray(max) : Array\r\n    if (!UintArray) {\r\n      throw new Error('invalid max value: ' + max)\r\n    }\r\n\r\n    this.max = max\r\n    this.maxSize = maxSize\r\n    this.maxEntrySize = maxEntrySize || this.maxSize\r\n    this.sizeCalculation = sizeCalculation || length\r\n    if (this.sizeCalculation) {\r\n      if (!this.maxSize && !this.maxEntrySize) {\r\n        throw new TypeError(\r\n          'cannot set sizeCalculation without setting maxSize or maxEntrySize'\r\n        )\r\n      }\r\n      if (typeof this.sizeCalculation !== 'function') {\r\n        throw new TypeError('sizeCalculation set to non-function')\r\n      }\r\n    }\r\n\r\n    this.fetchMethod = fetchMethod || null\r\n    if (this.fetchMethod && typeof this.fetchMethod !== 'function') {\r\n      throw new TypeError(\r\n        'fetchMethod must be a function if specified'\r\n      )\r\n    }\r\n\r\n    this.fetchContext = fetchContext\r\n    if (!this.fetchMethod && fetchContext !== undefined) {\r\n      throw new TypeError(\r\n        'cannot set fetchContext without fetchMethod'\r\n      )\r\n    }\r\n\r\n    this.keyMap = new Map()\r\n    this.keyList = new Array(max).fill(null)\r\n    this.valList = new Array(max).fill(null)\r\n    this.next = new UintArray(max)\r\n    this.prev = new UintArray(max)\r\n    this.head = 0\r\n    this.tail = 0\r\n    this.free = new Stack(max)\r\n    this.initialFill = 1\r\n    this.size = 0\r\n\r\n    if (typeof dispose === 'function') {\r\n      this.dispose = dispose\r\n    }\r\n    if (typeof disposeAfter === 'function') {\r\n      this.disposeAfter = disposeAfter\r\n      this.disposed = []\r\n    } else {\r\n      this.disposeAfter = null\r\n      this.disposed = null\r\n    }\r\n    this.noDisposeOnSet = !!noDisposeOnSet\r\n    this.noUpdateTTL = !!noUpdateTTL\r\n    this.noDeleteOnFetchRejection = !!noDeleteOnFetchRejection\r\n    this.allowStaleOnFetchRejection = !!allowStaleOnFetchRejection\r\n    this.allowStaleOnFetchAbort = !!allowStaleOnFetchAbort\r\n    this.ignoreFetchAbort = !!ignoreFetchAbort\r\n\r\n    // NB: maxEntrySize is set to maxSize if it's set\r\n    if (this.maxEntrySize !== 0) {\r\n      if (this.maxSize !== 0) {\r\n        if (!isPosInt(this.maxSize)) {\r\n          throw new TypeError(\r\n            'maxSize must be a positive integer if specified'\r\n          )\r\n        }\r\n      }\r\n      if (!isPosInt(this.maxEntrySize)) {\r\n        throw new TypeError(\r\n          'maxEntrySize must be a positive integer if specified'\r\n        )\r\n      }\r\n      this.initializeSizeTracking()\r\n    }\r\n\r\n    this.allowStale = !!allowStale || !!stale\r\n    this.noDeleteOnStaleGet = !!noDeleteOnStaleGet\r\n    this.updateAgeOnGet = !!updateAgeOnGet\r\n    this.updateAgeOnHas = !!updateAgeOnHas\r\n    this.ttlResolution =\r\n      isPosInt(ttlResolution) || ttlResolution === 0\r\n        ? ttlResolution\r\n        : 1\r\n    this.ttlAutopurge = !!ttlAutopurge\r\n    this.ttl = ttl || maxAge || 0\r\n    if (this.ttl) {\r\n      if (!isPosInt(this.ttl)) {\r\n        throw new TypeError(\r\n          'ttl must be a positive integer if specified'\r\n        )\r\n      }\r\n      this.initializeTTLTracking()\r\n    }\r\n\r\n    // do not allow completely unbounded caches\r\n    if (this.max === 0 && this.ttl === 0 && this.maxSize === 0) {\r\n      throw new TypeError(\r\n        'At least one of max, maxSize, or ttl is required'\r\n      )\r\n    }\r\n    if (!this.ttlAutopurge && !this.max && !this.maxSize) {\r\n      const code = 'LRU_CACHE_UNBOUNDED'\r\n      if (shouldWarn(code)) {\r\n        warned.add(code)\r\n        const msg =\r\n          'TTL caching without ttlAutopurge, max, or maxSize can ' +\r\n          'result in unbounded memory consumption.'\r\n        emitWarning(msg, 'UnboundedCacheWarning', code, LRUCache)\r\n      }\r\n    }\r\n\r\n    if (stale) {\r\n      deprecatedOption('stale', 'allowStale')\r\n    }\r\n    if (maxAge) {\r\n      deprecatedOption('maxAge', 'ttl')\r\n    }\r\n    if (length) {\r\n      deprecatedOption('length', 'sizeCalculation')\r\n    }\r\n  }\r\n\r\n  getRemainingTTL(key) {\r\n    return this.has(key, { updateAgeOnHas: false }) ? Infinity : 0\r\n  }\r\n\r\n  initializeTTLTracking() {\r\n    this.ttls = new ZeroArray(this.max)\r\n    this.starts = new ZeroArray(this.max)\r\n\r\n    this.setItemTTL = (index, ttl, start = perf.now()) => {\r\n      this.starts[index] = ttl !== 0 ? start : 0\r\n      this.ttls[index] = ttl\r\n      if (ttl !== 0 && this.ttlAutopurge) {\r\n        const t = setTimeout(() => {\r\n          if (this.isStale(index)) {\r\n            this.delete(this.keyList[index])\r\n          }\r\n        }, ttl + 1)\r\n        /* istanbul ignore else - unref() not supported on all platforms */\r\n        if (t.unref) {\r\n          t.unref()\r\n        }\r\n      }\r\n    }\r\n\r\n    this.updateItemAge = index => {\r\n      this.starts[index] = this.ttls[index] !== 0 ? perf.now() : 0\r\n    }\r\n\r\n    this.statusTTL = (status, index) => {\r\n      if (status) {\r\n        status.ttl = this.ttls[index]\r\n        status.start = this.starts[index]\r\n        status.now = cachedNow || getNow()\r\n        status.remainingTTL = status.now + status.ttl - status.start\r\n      }\r\n    }\r\n\r\n    // debounce calls to perf.now() to 1s so we're not hitting\r\n    // that costly call repeatedly.\r\n    let cachedNow = 0\r\n    const getNow = () => {\r\n      const n = perf.now()\r\n      if (this.ttlResolution > 0) {\r\n        cachedNow = n\r\n        const t = setTimeout(\r\n          () => (cachedNow = 0),\r\n          this.ttlResolution\r\n        )\r\n        /* istanbul ignore else - not available on all platforms */\r\n        if (t.unref) {\r\n          t.unref()\r\n        }\r\n      }\r\n      return n\r\n    }\r\n\r\n    this.getRemainingTTL = key => {\r\n      const index = this.keyMap.get(key)\r\n      if (index === undefined) {\r\n        return 0\r\n      }\r\n      return this.ttls[index] === 0 || this.starts[index] === 0\r\n        ? Infinity\r\n        : this.starts[index] +\r\n            this.ttls[index] -\r\n            (cachedNow || getNow())\r\n    }\r\n\r\n    this.isStale = index => {\r\n      return (\r\n        this.ttls[index] !== 0 &&\r\n        this.starts[index] !== 0 &&\r\n        (cachedNow || getNow()) - this.starts[index] >\r\n          this.ttls[index]\r\n      )\r\n    }\r\n  }\r\n  updateItemAge(_index) {}\r\n  statusTTL(_status, _index) {}\r\n  setItemTTL(_index, _ttl, _start) {}\r\n  isStale(_index) {\r\n    return false\r\n  }\r\n\r\n  initializeSizeTracking() {\r\n    this.calculatedSize = 0\r\n    this.sizes = new ZeroArray(this.max)\r\n    this.removeItemSize = index => {\r\n      this.calculatedSize -= this.sizes[index]\r\n      this.sizes[index] = 0\r\n    }\r\n    this.requireSize = (k, v, size, sizeCalculation) => {\r\n      // provisionally accept background fetches.\r\n      // actual value size will be checked when they return.\r\n      if (this.isBackgroundFetch(v)) {\r\n        return 0\r\n      }\r\n      if (!isPosInt(size)) {\r\n        if (sizeCalculation) {\r\n          if (typeof sizeCalculation !== 'function') {\r\n            throw new TypeError('sizeCalculation must be a function')\r\n          }\r\n          size = sizeCalculation(v, k)\r\n          if (!isPosInt(size)) {\r\n            throw new TypeError(\r\n              'sizeCalculation return invalid (expect positive integer)'\r\n            )\r\n          }\r\n        } else {\r\n          throw new TypeError(\r\n            'invalid size value (must be positive integer). ' +\r\n              'When maxSize or maxEntrySize is used, sizeCalculation or size ' +\r\n              'must be set.'\r\n          )\r\n        }\r\n      }\r\n      return size\r\n    }\r\n    this.addItemSize = (index, size, status) => {\r\n      this.sizes[index] = size\r\n      if (this.maxSize) {\r\n        const maxSize = this.maxSize - this.sizes[index]\r\n        while (this.calculatedSize > maxSize) {\r\n          this.evict(true)\r\n        }\r\n      }\r\n      this.calculatedSize += this.sizes[index]\r\n      if (status) {\r\n        status.entrySize = size\r\n        status.totalCalculatedSize = this.calculatedSize\r\n      }\r\n    }\r\n  }\r\n  removeItemSize(_index) {}\r\n  addItemSize(_index, _size) {}\r\n  requireSize(_k, _v, size, sizeCalculation) {\r\n    if (size || sizeCalculation) {\r\n      throw new TypeError(\r\n        'cannot set size without setting maxSize or maxEntrySize on cache'\r\n      )\r\n    }\r\n  }\r\n\r\n  *indexes({ allowStale = this.allowStale } = {}) {\r\n    if (this.size) {\r\n      for (let i = this.tail; true; ) {\r\n        if (!this.isValidIndex(i)) {\r\n          break\r\n        }\r\n        if (allowStale || !this.isStale(i)) {\r\n          yield i\r\n        }\r\n        if (i === this.head) {\r\n          break\r\n        } else {\r\n          i = this.prev[i]\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  *rindexes({ allowStale = this.allowStale } = {}) {\r\n    if (this.size) {\r\n      for (let i = this.head; true; ) {\r\n        if (!this.isValidIndex(i)) {\r\n          break\r\n        }\r\n        if (allowStale || !this.isStale(i)) {\r\n          yield i\r\n        }\r\n        if (i === this.tail) {\r\n          break\r\n        } else {\r\n          i = this.next[i]\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  isValidIndex(index) {\r\n    return (\r\n      index !== undefined &&\r\n      this.keyMap.get(this.keyList[index]) === index\r\n    )\r\n  }\r\n\r\n  *entries() {\r\n    for (const i of this.indexes()) {\r\n      if (\r\n        this.valList[i] !== undefined &&\r\n        this.keyList[i] !== undefined &&\r\n        !this.isBackgroundFetch(this.valList[i])\r\n      ) {\r\n        yield [this.keyList[i], this.valList[i]]\r\n      }\r\n    }\r\n  }\r\n  *rentries() {\r\n    for (const i of this.rindexes()) {\r\n      if (\r\n        this.valList[i] !== undefined &&\r\n        this.keyList[i] !== undefined &&\r\n        !this.isBackgroundFetch(this.valList[i])\r\n      ) {\r\n        yield [this.keyList[i], this.valList[i]]\r\n      }\r\n    }\r\n  }\r\n\r\n  *keys() {\r\n    for (const i of this.indexes()) {\r\n      if (\r\n        this.keyList[i] !== undefined &&\r\n        !this.isBackgroundFetch(this.valList[i])\r\n      ) {\r\n        yield this.keyList[i]\r\n      }\r\n    }\r\n  }\r\n  *rkeys() {\r\n    for (const i of this.rindexes()) {\r\n      if (\r\n        this.keyList[i] !== undefined &&\r\n        !this.isBackgroundFetch(this.valList[i])\r\n      ) {\r\n        yield this.keyList[i]\r\n      }\r\n    }\r\n  }\r\n\r\n  *values() {\r\n    for (const i of this.indexes()) {\r\n      if (\r\n        this.valList[i] !== undefined &&\r\n        !this.isBackgroundFetch(this.valList[i])\r\n      ) {\r\n        yield this.valList[i]\r\n      }\r\n    }\r\n  }\r\n  *rvalues() {\r\n    for (const i of this.rindexes()) {\r\n      if (\r\n        this.valList[i] !== undefined &&\r\n        !this.isBackgroundFetch(this.valList[i])\r\n      ) {\r\n        yield this.valList[i]\r\n      }\r\n    }\r\n  }\r\n\r\n  [Symbol.iterator]() {\r\n    return this.entries()\r\n  }\r\n\r\n  find(fn, getOptions) {\r\n    for (const i of this.indexes()) {\r\n      const v = this.valList[i]\r\n      const value = this.isBackgroundFetch(v)\r\n        ? v.__staleWhileFetching\r\n        : v\r\n      if (value === undefined) continue\r\n      if (fn(value, this.keyList[i], this)) {\r\n        return this.get(this.keyList[i], getOptions)\r\n      }\r\n    }\r\n  }\r\n\r\n  forEach(fn, thisp = this) {\r\n    for (const i of this.indexes()) {\r\n      const v = this.valList[i]\r\n      const value = this.isBackgroundFetch(v)\r\n        ? v.__staleWhileFetching\r\n        : v\r\n      if (value === undefined) continue\r\n      fn.call(thisp, value, this.keyList[i], this)\r\n    }\r\n  }\r\n\r\n  rforEach(fn, thisp = this) {\r\n    for (const i of this.rindexes()) {\r\n      const v = this.valList[i]\r\n      const value = this.isBackgroundFetch(v)\r\n        ? v.__staleWhileFetching\r\n        : v\r\n      if (value === undefined) continue\r\n      fn.call(thisp, value, this.keyList[i], this)\r\n    }\r\n  }\r\n\r\n  get prune() {\r\n    deprecatedMethod('prune', 'purgeStale')\r\n    return this.purgeStale\r\n  }\r\n\r\n  purgeStale() {\r\n    let deleted = false\r\n    for (const i of this.rindexes({ allowStale: true })) {\r\n      if (this.isStale(i)) {\r\n        this.delete(this.keyList[i])\r\n        deleted = true\r\n      }\r\n    }\r\n    return deleted\r\n  }\r\n\r\n  dump() {\r\n    const arr = []\r\n    for (const i of this.indexes({ allowStale: true })) {\r\n      const key = this.keyList[i]\r\n      const v = this.valList[i]\r\n      const value = this.isBackgroundFetch(v)\r\n        ? v.__staleWhileFetching\r\n        : v\r\n      if (value === undefined) continue\r\n      const entry = { value }\r\n      if (this.ttls) {\r\n        entry.ttl = this.ttls[i]\r\n        // always dump the start relative to a portable timestamp\r\n        // it's ok for this to be a bit slow, it's a rare operation.\r\n        const age = perf.now() - this.starts[i]\r\n        entry.start = Math.floor(Date.now() - age)\r\n      }\r\n      if (this.sizes) {\r\n        entry.size = this.sizes[i]\r\n      }\r\n      arr.unshift([key, entry])\r\n    }\r\n    return arr\r\n  }\r\n\r\n  load(arr) {\r\n    this.clear()\r\n    for (const [key, entry] of arr) {\r\n      if (entry.start) {\r\n        // entry.start is a portable timestamp, but we may be using\r\n        // node's performance.now(), so calculate the offset.\r\n        // it's ok for this to be a bit slow, it's a rare operation.\r\n        const age = Date.now() - entry.start\r\n        entry.start = perf.now() - age\r\n      }\r\n      this.set(key, entry.value, entry)\r\n    }\r\n  }\r\n\r\n  dispose(_v, _k, _reason) {}\r\n\r\n  set(\r\n    k,\r\n    v,\r\n    {\r\n      ttl = this.ttl,\r\n      start,\r\n      noDisposeOnSet = this.noDisposeOnSet,\r\n      size = 0,\r\n      sizeCalculation = this.sizeCalculation,\r\n      noUpdateTTL = this.noUpdateTTL,\r\n      status,\r\n    } = {}\r\n  ) {\r\n    size = this.requireSize(k, v, size, sizeCalculation)\r\n    // if the item doesn't fit, don't do anything\r\n    // NB: maxEntrySize set to maxSize by default\r\n    if (this.maxEntrySize && size > this.maxEntrySize) {\r\n      if (status) {\r\n        status.set = 'miss'\r\n        status.maxEntrySizeExceeded = true\r\n      }\r\n      // have to delete, in case a background fetch is there already.\r\n      // in non-async cases, this is a no-op\r\n      this.delete(k)\r\n      return this\r\n    }\r\n    let index = this.size === 0 ? undefined : this.keyMap.get(k)\r\n    if (index === undefined) {\r\n      // addition\r\n      index = this.newIndex()\r\n      this.keyList[index] = k\r\n      this.valList[index] = v\r\n      this.keyMap.set(k, index)\r\n      this.next[this.tail] = index\r\n      this.prev[index] = this.tail\r\n      this.tail = index\r\n      this.size++\r\n      this.addItemSize(index, size, status)\r\n      if (status) {\r\n        status.set = 'add'\r\n      }\r\n      noUpdateTTL = false\r\n    } else {\r\n      // update\r\n      this.moveToTail(index)\r\n      const oldVal = this.valList[index]\r\n      if (v !== oldVal) {\r\n        if (this.isBackgroundFetch(oldVal)) {\r\n          oldVal.__abortController.abort(new Error('replaced'))\r\n        } else {\r\n          if (!noDisposeOnSet) {\r\n            this.dispose(oldVal, k, 'set')\r\n            if (this.disposeAfter) {\r\n              this.disposed.push([oldVal, k, 'set'])\r\n            }\r\n          }\r\n        }\r\n        this.removeItemSize(index)\r\n        this.valList[index] = v\r\n        this.addItemSize(index, size, status)\r\n        if (status) {\r\n          status.set = 'replace'\r\n          const oldValue =\r\n            oldVal && this.isBackgroundFetch(oldVal)\r\n              ? oldVal.__staleWhileFetching\r\n              : oldVal\r\n          if (oldValue !== undefined) status.oldValue = oldValue\r\n        }\r\n      } else if (status) {\r\n        status.set = 'update'\r\n      }\r\n    }\r\n    if (ttl !== 0 && this.ttl === 0 && !this.ttls) {\r\n      this.initializeTTLTracking()\r\n    }\r\n    if (!noUpdateTTL) {\r\n      this.setItemTTL(index, ttl, start)\r\n    }\r\n    this.statusTTL(status, index)\r\n    if (this.disposeAfter) {\r\n      while (this.disposed.length) {\r\n        this.disposeAfter(...this.disposed.shift())\r\n      }\r\n    }\r\n    return this\r\n  }\r\n\r\n  newIndex() {\r\n    if (this.size === 0) {\r\n      return this.tail\r\n    }\r\n    if (this.size === this.max && this.max !== 0) {\r\n      return this.evict(false)\r\n    }\r\n    if (this.free.length !== 0) {\r\n      return this.free.pop()\r\n    }\r\n    // initial fill, just keep writing down the list\r\n    return this.initialFill++\r\n  }\r\n\r\n  pop() {\r\n    if (this.size) {\r\n      const val = this.valList[this.head]\r\n      this.evict(true)\r\n      return val\r\n    }\r\n  }\r\n\r\n  evict(free) {\r\n    const head = this.head\r\n    const k = this.keyList[head]\r\n    const v = this.valList[head]\r\n    if (this.isBackgroundFetch(v)) {\r\n      v.__abortController.abort(new Error('evicted'))\r\n    } else {\r\n      this.dispose(v, k, 'evict')\r\n      if (this.disposeAfter) {\r\n        this.disposed.push([v, k, 'evict'])\r\n      }\r\n    }\r\n    this.removeItemSize(head)\r\n    // if we aren't about to use the index, then null these out\r\n    if (free) {\r\n      this.keyList[head] = null\r\n      this.valList[head] = null\r\n      this.free.push(head)\r\n    }\r\n    this.head = this.next[head]\r\n    this.keyMap.delete(k)\r\n    this.size--\r\n    return head\r\n  }\r\n\r\n  has(k, { updateAgeOnHas = this.updateAgeOnHas, status } = {}) {\r\n    const index = this.keyMap.get(k)\r\n    if (index !== undefined) {\r\n      if (!this.isStale(index)) {\r\n        if (updateAgeOnHas) {\r\n          this.updateItemAge(index)\r\n        }\r\n        if (status) status.has = 'hit'\r\n        this.statusTTL(status, index)\r\n        return true\r\n      } else if (status) {\r\n        status.has = 'stale'\r\n        this.statusTTL(status, index)\r\n      }\r\n    } else if (status) {\r\n      status.has = 'miss'\r\n    }\r\n    return false\r\n  }\r\n\r\n  // like get(), but without any LRU updating or TTL expiration\r\n  peek(k, { allowStale = this.allowStale } = {}) {\r\n    const index = this.keyMap.get(k)\r\n    if (index !== undefined && (allowStale || !this.isStale(index))) {\r\n      const v = this.valList[index]\r\n      // either stale and allowed, or forcing a refresh of non-stale value\r\n      return this.isBackgroundFetch(v) ? v.__staleWhileFetching : v\r\n    }\r\n  }\r\n\r\n  backgroundFetch(k, index, options, context) {\r\n    const v = index === undefined ? undefined : this.valList[index]\r\n    if (this.isBackgroundFetch(v)) {\r\n      return v\r\n    }\r\n    const ac = new AC()\r\n    if (options.signal) {\r\n      options.signal.addEventListener('abort', () =>\r\n        ac.abort(options.signal.reason)\r\n      )\r\n    }\r\n    const fetchOpts = {\r\n      signal: ac.signal,\r\n      options,\r\n      context,\r\n    }\r\n    const cb = (v, updateCache = false) => {\r\n      const { aborted } = ac.signal\r\n      const ignoreAbort = options.ignoreFetchAbort && v !== undefined\r\n      if (options.status) {\r\n        if (aborted && !updateCache) {\r\n          options.status.fetchAborted = true\r\n          options.status.fetchError = ac.signal.reason\r\n          if (ignoreAbort) options.status.fetchAbortIgnored = true\r\n        } else {\r\n          options.status.fetchResolved = true\r\n        }\r\n      }\r\n      if (aborted && !ignoreAbort && !updateCache) {\r\n        return fetchFail(ac.signal.reason)\r\n      }\r\n      // either we didn't abort, and are still here, or we did, and ignored\r\n      if (this.valList[index] === p) {\r\n        if (v === undefined) {\r\n          if (p.__staleWhileFetching) {\r\n            this.valList[index] = p.__staleWhileFetching\r\n          } else {\r\n            this.delete(k)\r\n          }\r\n        } else {\r\n          if (options.status) options.status.fetchUpdated = true\r\n          this.set(k, v, fetchOpts.options)\r\n        }\r\n      }\r\n      return v\r\n    }\r\n    const eb = er => {\r\n      if (options.status) {\r\n        options.status.fetchRejected = true\r\n        options.status.fetchError = er\r\n      }\r\n      return fetchFail(er)\r\n    }\r\n    const fetchFail = er => {\r\n      const { aborted } = ac.signal\r\n      const allowStaleAborted =\r\n        aborted && options.allowStaleOnFetchAbort\r\n      const allowStale =\r\n        allowStaleAborted || options.allowStaleOnFetchRejection\r\n      const noDelete = allowStale || options.noDeleteOnFetchRejection\r\n      if (this.valList[index] === p) {\r\n        // if we allow stale on fetch rejections, then we need to ensure that\r\n        // the stale value is not removed from the cache when the fetch fails.\r\n        const del = !noDelete || p.__staleWhileFetching === undefined\r\n        if (del) {\r\n          this.delete(k)\r\n        } else if (!allowStaleAborted) {\r\n          // still replace the *promise* with the stale value,\r\n          // since we are done with the promise at this point.\r\n          // leave it untouched if we're still waiting for an\r\n          // aborted background fetch that hasn't yet returned.\r\n          this.valList[index] = p.__staleWhileFetching\r\n        }\r\n      }\r\n      if (allowStale) {\r\n        if (options.status && p.__staleWhileFetching !== undefined) {\r\n          options.status.returnedStale = true\r\n        }\r\n        return p.__staleWhileFetching\r\n      } else if (p.__returned === p) {\r\n        throw er\r\n      }\r\n    }\r\n    const pcall = (res, rej) => {\r\n      this.fetchMethod(k, v, fetchOpts).then(v => res(v), rej)\r\n      // ignored, we go until we finish, regardless.\r\n      // defer check until we are actually aborting,\r\n      // so fetchMethod can override.\r\n      ac.signal.addEventListener('abort', () => {\r\n        if (\r\n          !options.ignoreFetchAbort ||\r\n          options.allowStaleOnFetchAbort\r\n        ) {\r\n          res()\r\n          // when it eventually resolves, update the cache.\r\n          if (options.allowStaleOnFetchAbort) {\r\n            res = v => cb(v, true)\r\n          }\r\n        }\r\n      })\r\n    }\r\n    if (options.status) options.status.fetchDispatched = true\r\n    const p = new Promise(pcall).then(cb, eb)\r\n    p.__abortController = ac\r\n    p.__staleWhileFetching = v\r\n    p.__returned = null\r\n    if (index === undefined) {\r\n      // internal, don't expose status.\r\n      this.set(k, p, { ...fetchOpts.options, status: undefined })\r\n      index = this.keyMap.get(k)\r\n    } else {\r\n      this.valList[index] = p\r\n    }\r\n    return p\r\n  }\r\n\r\n  isBackgroundFetch(p) {\r\n    return (\r\n      p &&\r\n      typeof p === 'object' &&\r\n      typeof p.then === 'function' &&\r\n      Object.prototype.hasOwnProperty.call(\r\n        p,\r\n        '__staleWhileFetching'\r\n      ) &&\r\n      Object.prototype.hasOwnProperty.call(p, '__returned') &&\r\n      (p.__returned === p || p.__returned === null)\r\n    )\r\n  }\r\n\r\n  // this takes the union of get() and set() opts, because it does both\r\n  async fetch(\r\n    k,\r\n    {\r\n      // get options\r\n      allowStale = this.allowStale,\r\n      updateAgeOnGet = this.updateAgeOnGet,\r\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\r\n      // set options\r\n      ttl = this.ttl,\r\n      noDisposeOnSet = this.noDisposeOnSet,\r\n      size = 0,\r\n      sizeCalculation = this.sizeCalculation,\r\n      noUpdateTTL = this.noUpdateTTL,\r\n      // fetch exclusive options\r\n      noDeleteOnFetchRejection = this.noDeleteOnFetchRejection,\r\n      allowStaleOnFetchRejection = this.allowStaleOnFetchRejection,\r\n      ignoreFetchAbort = this.ignoreFetchAbort,\r\n      allowStaleOnFetchAbort = this.allowStaleOnFetchAbort,\r\n      fetchContext = this.fetchContext,\r\n      forceRefresh = false,\r\n      status,\r\n      signal,\r\n    } = {}\r\n  ) {\r\n    if (!this.fetchMethod) {\r\n      if (status) status.fetch = 'get'\r\n      return this.get(k, {\r\n        allowStale,\r\n        updateAgeOnGet,\r\n        noDeleteOnStaleGet,\r\n        status,\r\n      })\r\n    }\r\n\r\n    const options = {\r\n      allowStale,\r\n      updateAgeOnGet,\r\n      noDeleteOnStaleGet,\r\n      ttl,\r\n      noDisposeOnSet,\r\n      size,\r\n      sizeCalculation,\r\n      noUpdateTTL,\r\n      noDeleteOnFetchRejection,\r\n      allowStaleOnFetchRejection,\r\n      allowStaleOnFetchAbort,\r\n      ignoreFetchAbort,\r\n      status,\r\n      signal,\r\n    }\r\n\r\n    let index = this.keyMap.get(k)\r\n    if (index === undefined) {\r\n      if (status) status.fetch = 'miss'\r\n      const p = this.backgroundFetch(k, index, options, fetchContext)\r\n      return (p.__returned = p)\r\n    } else {\r\n      // in cache, maybe already fetching\r\n      const v = this.valList[index]\r\n      if (this.isBackgroundFetch(v)) {\r\n        const stale =\r\n          allowStale && v.__staleWhileFetching !== undefined\r\n        if (status) {\r\n          status.fetch = 'inflight'\r\n          if (stale) status.returnedStale = true\r\n        }\r\n        return stale ? v.__staleWhileFetching : (v.__returned = v)\r\n      }\r\n\r\n      // if we force a refresh, that means do NOT serve the cached value,\r\n      // unless we are already in the process of refreshing the cache.\r\n      const isStale = this.isStale(index)\r\n      if (!forceRefresh && !isStale) {\r\n        if (status) status.fetch = 'hit'\r\n        this.moveToTail(index)\r\n        if (updateAgeOnGet) {\r\n          this.updateItemAge(index)\r\n        }\r\n        this.statusTTL(status, index)\r\n        return v\r\n      }\r\n\r\n      // ok, it is stale or a forced refresh, and not already fetching.\r\n      // refresh the cache.\r\n      const p = this.backgroundFetch(k, index, options, fetchContext)\r\n      const hasStale = p.__staleWhileFetching !== undefined\r\n      const staleVal = hasStale && allowStale\r\n      if (status) {\r\n        status.fetch = hasStale && isStale ? 'stale' : 'refresh'\r\n        if (staleVal && isStale) status.returnedStale = true\r\n      }\r\n      return staleVal ? p.__staleWhileFetching : (p.__returned = p)\r\n    }\r\n  }\r\n\r\n  get(\r\n    k,\r\n    {\r\n      allowStale = this.allowStale,\r\n      updateAgeOnGet = this.updateAgeOnGet,\r\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\r\n      status,\r\n    } = {}\r\n  ) {\r\n    const index = this.keyMap.get(k)\r\n    if (index !== undefined) {\r\n      const value = this.valList[index]\r\n      const fetching = this.isBackgroundFetch(value)\r\n      this.statusTTL(status, index)\r\n      if (this.isStale(index)) {\r\n        if (status) status.get = 'stale'\r\n        // delete only if not an in-flight background fetch\r\n        if (!fetching) {\r\n          if (!noDeleteOnStaleGet) {\r\n            this.delete(k)\r\n          }\r\n          if (status) status.returnedStale = allowStale\r\n          return allowStale ? value : undefined\r\n        } else {\r\n          if (status) {\r\n            status.returnedStale =\r\n              allowStale && value.__staleWhileFetching !== undefined\r\n          }\r\n          return allowStale ? value.__staleWhileFetching : undefined\r\n        }\r\n      } else {\r\n        if (status) status.get = 'hit'\r\n        // if we're currently fetching it, we don't actually have it yet\r\n        // it's not stale, which means this isn't a staleWhileRefetching.\r\n        // If it's not stale, and fetching, AND has a __staleWhileFetching\r\n        // value, then that means the user fetched with {forceRefresh:true},\r\n        // so it's safe to return that value.\r\n        if (fetching) {\r\n          return value.__staleWhileFetching\r\n        }\r\n        this.moveToTail(index)\r\n        if (updateAgeOnGet) {\r\n          this.updateItemAge(index)\r\n        }\r\n        return value\r\n      }\r\n    } else if (status) {\r\n      status.get = 'miss'\r\n    }\r\n  }\r\n\r\n  connect(p, n) {\r\n    this.prev[n] = p\r\n    this.next[p] = n\r\n  }\r\n\r\n  moveToTail(index) {\r\n    // if tail already, nothing to do\r\n    // if head, move head to next[index]\r\n    // else\r\n    //   move next[prev[index]] to next[index] (head has no prev)\r\n    //   move prev[next[index]] to prev[index]\r\n    // prev[index] = tail\r\n    // next[tail] = index\r\n    // tail = index\r\n    if (index !== this.tail) {\r\n      if (index === this.head) {\r\n        this.head = this.next[index]\r\n      } else {\r\n        this.connect(this.prev[index], this.next[index])\r\n      }\r\n      this.connect(this.tail, index)\r\n      this.tail = index\r\n    }\r\n  }\r\n\r\n  get del() {\r\n    deprecatedMethod('del', 'delete')\r\n    return this.delete\r\n  }\r\n\r\n  delete(k) {\r\n    let deleted = false\r\n    if (this.size !== 0) {\r\n      const index = this.keyMap.get(k)\r\n      if (index !== undefined) {\r\n        deleted = true\r\n        if (this.size === 1) {\r\n          this.clear()\r\n        } else {\r\n          this.removeItemSize(index)\r\n          const v = this.valList[index]\r\n          if (this.isBackgroundFetch(v)) {\r\n            v.__abortController.abort(new Error('deleted'))\r\n          } else {\r\n            this.dispose(v, k, 'delete')\r\n            if (this.disposeAfter) {\r\n              this.disposed.push([v, k, 'delete'])\r\n            }\r\n          }\r\n          this.keyMap.delete(k)\r\n          this.keyList[index] = null\r\n          this.valList[index] = null\r\n          if (index === this.tail) {\r\n            this.tail = this.prev[index]\r\n          } else if (index === this.head) {\r\n            this.head = this.next[index]\r\n          } else {\r\n            this.next[this.prev[index]] = this.next[index]\r\n            this.prev[this.next[index]] = this.prev[index]\r\n          }\r\n          this.size--\r\n          this.free.push(index)\r\n        }\r\n      }\r\n    }\r\n    if (this.disposed) {\r\n      while (this.disposed.length) {\r\n        this.disposeAfter(...this.disposed.shift())\r\n      }\r\n    }\r\n    return deleted\r\n  }\r\n\r\n  clear() {\r\n    for (const index of this.rindexes({ allowStale: true })) {\r\n      const v = this.valList[index]\r\n      if (this.isBackgroundFetch(v)) {\r\n        v.__abortController.abort(new Error('deleted'))\r\n      } else {\r\n        const k = this.keyList[index]\r\n        this.dispose(v, k, 'delete')\r\n        if (this.disposeAfter) {\r\n          this.disposed.push([v, k, 'delete'])\r\n        }\r\n      }\r\n    }\r\n\r\n    this.keyMap.clear()\r\n    this.valList.fill(null)\r\n    this.keyList.fill(null)\r\n    if (this.ttls) {\r\n      this.ttls.fill(0)\r\n      this.starts.fill(0)\r\n    }\r\n    if (this.sizes) {\r\n      this.sizes.fill(0)\r\n    }\r\n    this.head = 0\r\n    this.tail = 0\r\n    this.initialFill = 1\r\n    this.free.length = 0\r\n    this.calculatedSize = 0\r\n    this.size = 0\r\n    if (this.disposed) {\r\n      while (this.disposed.length) {\r\n        this.disposeAfter(...this.disposed.shift())\r\n      }\r\n    }\r\n  }\r\n\r\n  get reset() {\r\n    deprecatedMethod('reset', 'clear')\r\n    return this.clear\r\n  }\r\n\r\n  get length() {\r\n    deprecatedProperty('length', 'size')\r\n    return this.size\r\n  }\r\n\r\n  static get AbortController() {\r\n    return AC\r\n  }\r\n  static get AbortSignal() {\r\n    return AS\r\n  }\r\n}\r\n\r\nmodule.exports = LRUCache\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/lru-cache/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/auth_41.js":
/*!********************************************!*\
  !*** ./node_modules/mysql2/lib/auth_41.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\n\r\n\r\n/*\r\n4.1 authentication: (http://bazaar.launchpad.net/~mysql/mysql-server/5.5/view/head:/sql/password.c)\r\n\r\n  SERVER:  public_seed=create_random_string()\r\n           send(public_seed)\r\n\r\n  CLIENT:  recv(public_seed)\r\n           hash_stage1=sha1(\"password\")\r\n           hash_stage2=sha1(hash_stage1)\r\n           reply=xor(hash_stage1, sha1(public_seed,hash_stage2)\r\n\r\n           // this three steps are done in scramble()\r\n\r\n           send(reply)\r\n\r\n\r\n  SERVER:  recv(reply)\r\n           hash_stage1=xor(reply, sha1(public_seed,hash_stage2))\r\n           candidate_hash2=sha1(hash_stage1)\r\n           check(candidate_hash2==hash_stage2)\r\n\r\nserver stores sha1(sha1(password)) ( hash_stag2)\r\n*/\r\n\r\nconst crypto = __webpack_require__(/*! crypto */ \"crypto\");\r\n\r\nfunction sha1(msg, msg1, msg2) {\r\n  const hash = crypto.createHash('sha1');\r\n  hash.update(msg);\r\n  if (msg1) {\r\n    hash.update(msg1);\r\n  }\r\n\r\n  if (msg2) {\r\n    hash.update(msg2);\r\n  }\r\n\r\n  return hash.digest();\r\n}\r\n\r\nfunction xor(a, b) {\r\n  const result = Buffer.allocUnsafe(a.length);\r\n  for (let i = 0; i < a.length; i++) {\r\n    result[i] = a[i] ^ b[i];\r\n  }\r\n  return result;\r\n}\r\n\r\nexports.xor = xor;\r\n\r\nfunction token(password, scramble1, scramble2) {\r\n  if (!password) {\r\n    return Buffer.alloc(0);\r\n  }\r\n  const stage1 = sha1(password);\r\n  return exports.calculateTokenFromPasswordSha(stage1, scramble1, scramble2);\r\n}\r\n\r\nexports.calculateTokenFromPasswordSha = function (\r\n  passwordSha,\r\n  scramble1,\r\n  scramble2\r\n) {\r\n  // we use AUTH 41 here, and we need only the bytes we just need.\r\n  const authPluginData1 = scramble1.slice(0, 8);\r\n  const authPluginData2 = scramble2.slice(0, 12);\r\n  const stage2 = sha1(passwordSha);\r\n  const stage3 = sha1(authPluginData1, authPluginData2, stage2);\r\n  return xor(stage3, passwordSha);\r\n};\r\n\r\nexports.calculateToken = token;\r\n\r\nexports.verifyToken = function (publicSeed1, publicSeed2, token, doubleSha) {\r\n  const hashStage1 = xor(token, sha1(publicSeed1, publicSeed2, doubleSha));\r\n  const candidateHash2 = sha1(hashStage1);\r\n  return candidateHash2.compare(doubleSha) === 0;\r\n};\r\n\r\nexports.doubleSha1 = function (password) {\r\n  return sha1(sha1(password));\r\n};\r\n\r\nfunction xorRotating(a, seed) {\r\n  const result = Buffer.allocUnsafe(a.length);\r\n  const seedLen = seed.length;\r\n\r\n  for (let i = 0; i < a.length; i++) {\r\n    result[i] = a[i] ^ seed[i % seedLen];\r\n  }\r\n  return result;\r\n}\r\nexports.xorRotating = xorRotating;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvYXV0aF80MS5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxzQkFBUTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixNQUFNO0FBQ3ZCLGtCQUFrQixjQUFjO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0EsV0FBVyxNQUFNO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsTUFBTTtBQUN2QjtBQUNBO0FBQ0Esa0JBQWtCLGNBQWM7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvYXV0aF80MS5qcz80NDI4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuXHJcbi8qXHJcbjQuMSBhdXRoZW50aWNhdGlvbjogKGh0dHA6Ly9iYXphYXIubGF1bmNocGFkLm5ldC9+bXlzcWwvbXlzcWwtc2VydmVyLzUuNS92aWV3L2hlYWQ6L3NxbC9wYXNzd29yZC5jKVxyXG5cclxuICBTRVJWRVI6ICBwdWJsaWNfc2VlZD1jcmVhdGVfcmFuZG9tX3N0cmluZygpXHJcbiAgICAgICAgICAgc2VuZChwdWJsaWNfc2VlZClcclxuXHJcbiAgQ0xJRU5UOiAgcmVjdihwdWJsaWNfc2VlZClcclxuICAgICAgICAgICBoYXNoX3N0YWdlMT1zaGExKFwicGFzc3dvcmRcIilcclxuICAgICAgICAgICBoYXNoX3N0YWdlMj1zaGExKGhhc2hfc3RhZ2UxKVxyXG4gICAgICAgICAgIHJlcGx5PXhvcihoYXNoX3N0YWdlMSwgc2hhMShwdWJsaWNfc2VlZCxoYXNoX3N0YWdlMilcclxuXHJcbiAgICAgICAgICAgLy8gdGhpcyB0aHJlZSBzdGVwcyBhcmUgZG9uZSBpbiBzY3JhbWJsZSgpXHJcblxyXG4gICAgICAgICAgIHNlbmQocmVwbHkpXHJcblxyXG5cclxuICBTRVJWRVI6ICByZWN2KHJlcGx5KVxyXG4gICAgICAgICAgIGhhc2hfc3RhZ2UxPXhvcihyZXBseSwgc2hhMShwdWJsaWNfc2VlZCxoYXNoX3N0YWdlMikpXHJcbiAgICAgICAgICAgY2FuZGlkYXRlX2hhc2gyPXNoYTEoaGFzaF9zdGFnZTEpXHJcbiAgICAgICAgICAgY2hlY2soY2FuZGlkYXRlX2hhc2gyPT1oYXNoX3N0YWdlMilcclxuXHJcbnNlcnZlciBzdG9yZXMgc2hhMShzaGExKHBhc3N3b3JkKSkgKCBoYXNoX3N0YWcyKVxyXG4qL1xyXG5cclxuY29uc3QgY3J5cHRvID0gcmVxdWlyZSgnY3J5cHRvJyk7XHJcblxyXG5mdW5jdGlvbiBzaGExKG1zZywgbXNnMSwgbXNnMikge1xyXG4gIGNvbnN0IGhhc2ggPSBjcnlwdG8uY3JlYXRlSGFzaCgnc2hhMScpO1xyXG4gIGhhc2gudXBkYXRlKG1zZyk7XHJcbiAgaWYgKG1zZzEpIHtcclxuICAgIGhhc2gudXBkYXRlKG1zZzEpO1xyXG4gIH1cclxuXHJcbiAgaWYgKG1zZzIpIHtcclxuICAgIGhhc2gudXBkYXRlKG1zZzIpO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIGhhc2guZGlnZXN0KCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHhvcihhLCBiKSB7XHJcbiAgY29uc3QgcmVzdWx0ID0gQnVmZmVyLmFsbG9jVW5zYWZlKGEubGVuZ3RoKTtcclxuICBmb3IgKGxldCBpID0gMDsgaSA8IGEubGVuZ3RoOyBpKyspIHtcclxuICAgIHJlc3VsdFtpXSA9IGFbaV0gXiBiW2ldO1xyXG4gIH1cclxuICByZXR1cm4gcmVzdWx0O1xyXG59XHJcblxyXG5leHBvcnRzLnhvciA9IHhvcjtcclxuXHJcbmZ1bmN0aW9uIHRva2VuKHBhc3N3b3JkLCBzY3JhbWJsZTEsIHNjcmFtYmxlMikge1xyXG4gIGlmICghcGFzc3dvcmQpIHtcclxuICAgIHJldHVybiBCdWZmZXIuYWxsb2MoMCk7XHJcbiAgfVxyXG4gIGNvbnN0IHN0YWdlMSA9IHNoYTEocGFzc3dvcmQpO1xyXG4gIHJldHVybiBleHBvcnRzLmNhbGN1bGF0ZVRva2VuRnJvbVBhc3N3b3JkU2hhKHN0YWdlMSwgc2NyYW1ibGUxLCBzY3JhbWJsZTIpO1xyXG59XHJcblxyXG5leHBvcnRzLmNhbGN1bGF0ZVRva2VuRnJvbVBhc3N3b3JkU2hhID0gZnVuY3Rpb24gKFxyXG4gIHBhc3N3b3JkU2hhLFxyXG4gIHNjcmFtYmxlMSxcclxuICBzY3JhbWJsZTJcclxuKSB7XHJcbiAgLy8gd2UgdXNlIEFVVEggNDEgaGVyZSwgYW5kIHdlIG5lZWQgb25seSB0aGUgYnl0ZXMgd2UganVzdCBuZWVkLlxyXG4gIGNvbnN0IGF1dGhQbHVnaW5EYXRhMSA9IHNjcmFtYmxlMS5zbGljZSgwLCA4KTtcclxuICBjb25zdCBhdXRoUGx1Z2luRGF0YTIgPSBzY3JhbWJsZTIuc2xpY2UoMCwgMTIpO1xyXG4gIGNvbnN0IHN0YWdlMiA9IHNoYTEocGFzc3dvcmRTaGEpO1xyXG4gIGNvbnN0IHN0YWdlMyA9IHNoYTEoYXV0aFBsdWdpbkRhdGExLCBhdXRoUGx1Z2luRGF0YTIsIHN0YWdlMik7XHJcbiAgcmV0dXJuIHhvcihzdGFnZTMsIHBhc3N3b3JkU2hhKTtcclxufTtcclxuXHJcbmV4cG9ydHMuY2FsY3VsYXRlVG9rZW4gPSB0b2tlbjtcclxuXHJcbmV4cG9ydHMudmVyaWZ5VG9rZW4gPSBmdW5jdGlvbiAocHVibGljU2VlZDEsIHB1YmxpY1NlZWQyLCB0b2tlbiwgZG91YmxlU2hhKSB7XHJcbiAgY29uc3QgaGFzaFN0YWdlMSA9IHhvcih0b2tlbiwgc2hhMShwdWJsaWNTZWVkMSwgcHVibGljU2VlZDIsIGRvdWJsZVNoYSkpO1xyXG4gIGNvbnN0IGNhbmRpZGF0ZUhhc2gyID0gc2hhMShoYXNoU3RhZ2UxKTtcclxuICByZXR1cm4gY2FuZGlkYXRlSGFzaDIuY29tcGFyZShkb3VibGVTaGEpID09PSAwO1xyXG59O1xyXG5cclxuZXhwb3J0cy5kb3VibGVTaGExID0gZnVuY3Rpb24gKHBhc3N3b3JkKSB7XHJcbiAgcmV0dXJuIHNoYTEoc2hhMShwYXNzd29yZCkpO1xyXG59O1xyXG5cclxuZnVuY3Rpb24geG9yUm90YXRpbmcoYSwgc2VlZCkge1xyXG4gIGNvbnN0IHJlc3VsdCA9IEJ1ZmZlci5hbGxvY1Vuc2FmZShhLmxlbmd0aCk7XHJcbiAgY29uc3Qgc2VlZExlbiA9IHNlZWQubGVuZ3RoO1xyXG5cclxuICBmb3IgKGxldCBpID0gMDsgaSA8IGEubGVuZ3RoOyBpKyspIHtcclxuICAgIHJlc3VsdFtpXSA9IGFbaV0gXiBzZWVkW2kgJSBzZWVkTGVuXTtcclxuICB9XHJcbiAgcmV0dXJuIHJlc3VsdDtcclxufVxyXG5leHBvcnRzLnhvclJvdGF0aW5nID0geG9yUm90YXRpbmc7XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/auth_41.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/auth_plugins/caching_sha2_password.js":
/*!***********************************************************************!*\
  !*** ./node_modules/mysql2/lib/auth_plugins/caching_sha2_password.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\n\r\n\r\n// https://mysqlserverteam.com/mysql-8-0-4-new-default-authentication-plugin-caching_sha2_password/\r\n\r\nconst PLUGIN_NAME = 'caching_sha2_password';\r\nconst crypto = __webpack_require__(/*! crypto */ \"crypto\");\r\nconst { xor, xorRotating } = __webpack_require__(/*! ../auth_41 */ \"(middleware)/./node_modules/mysql2/lib/auth_41.js\");\r\n\r\nconst REQUEST_SERVER_KEY_PACKET = Buffer.from([2]);\r\nconst FAST_AUTH_SUCCESS_PACKET = Buffer.from([3]);\r\nconst PERFORM_FULL_AUTHENTICATION_PACKET = Buffer.from([4]);\r\n\r\nconst STATE_INITIAL = 0;\r\nconst STATE_TOKEN_SENT = 1;\r\nconst STATE_WAIT_SERVER_KEY = 2;\r\nconst STATE_FINAL = -1;\r\n\r\nfunction sha256(msg) {\r\n  const hash = crypto.createHash('sha256');\r\n  hash.update(msg);\r\n  return hash.digest();\r\n}\r\n\r\nfunction calculateToken(password, scramble) {\r\n  if (!password) {\r\n    return Buffer.alloc(0);\r\n  }\r\n  const stage1 = sha256(Buffer.from(password));\r\n  const stage2 = sha256(stage1);\r\n  const stage3 = sha256(Buffer.concat([stage2, scramble]));\r\n  return xor(stage1, stage3);\r\n}\r\n\r\nfunction encrypt(password, scramble, key) {\r\n  const stage1 = xorRotating(Buffer.from(`${password}\\0`, 'utf8'), scramble);\r\n  return crypto.publicEncrypt(\r\n    {\r\n      key,\r\n      padding: crypto.constants.RSA_PKCS1_OAEP_PADDING,\r\n    },\r\n    stage1\r\n  );\r\n}\r\n\r\nmodule.exports =\r\n  (pluginOptions = {}) =>\r\n  ({ connection }) => {\r\n    let state = 0;\r\n    let scramble = null;\r\n\r\n    const password = connection.config.password;\r\n\r\n    const authWithKey = (serverKey) => {\r\n      const _password = encrypt(password, scramble, serverKey);\r\n      state = STATE_FINAL;\r\n      return _password;\r\n    };\r\n\r\n    return (data) => {\r\n      switch (state) {\r\n        case STATE_INITIAL:\r\n          scramble = data.slice(0, 20);\r\n          state = STATE_TOKEN_SENT;\r\n          return calculateToken(password, scramble);\r\n\r\n        case STATE_TOKEN_SENT:\r\n          if (FAST_AUTH_SUCCESS_PACKET.equals(data)) {\r\n            state = STATE_FINAL;\r\n            return null;\r\n          }\r\n\r\n          if (PERFORM_FULL_AUTHENTICATION_PACKET.equals(data)) {\r\n            const isSecureConnection =\r\n              typeof pluginOptions.overrideIsSecure === 'undefined'\r\n                ? connection.config.ssl || connection.config.socketPath\r\n                : pluginOptions.overrideIsSecure;\r\n            if (isSecureConnection) {\r\n              state = STATE_FINAL;\r\n              return Buffer.from(`${password}\\0`, 'utf8');\r\n            }\r\n\r\n            // if client provides key we can save one extra roundrip on first connection\r\n            if (pluginOptions.serverPublicKey) {\r\n              return authWithKey(pluginOptions.serverPublicKey);\r\n            }\r\n\r\n            state = STATE_WAIT_SERVER_KEY;\r\n            return REQUEST_SERVER_KEY_PACKET;\r\n          }\r\n          throw new Error(\r\n            `Invalid AuthMoreData packet received by ${PLUGIN_NAME} plugin in STATE_TOKEN_SENT state.`\r\n          );\r\n        case STATE_WAIT_SERVER_KEY:\r\n          if (pluginOptions.onServerPublicKey) {\r\n            pluginOptions.onServerPublicKey(data);\r\n          }\r\n          return authWithKey(data);\r\n        case STATE_FINAL:\r\n          throw new Error(\r\n            `Unexpected data in AuthMoreData packet received by ${PLUGIN_NAME} plugin in STATE_FINAL state.`\r\n          );\r\n      }\r\n\r\n      throw new Error(\r\n        `Unexpected data in AuthMoreData packet received by ${PLUGIN_NAME} plugin in state ${state}`\r\n      );\r\n    };\r\n  };\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvYXV0aF9wbHVnaW5zL2NhY2hpbmdfc2hhMl9wYXNzd29yZC5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxzQkFBUTtBQUMvQixRQUFRLG1CQUFtQixFQUFFLG1CQUFPLENBQUMscUVBQVk7QUFDakQ7QUFDQSxrQ0FBa0MsTUFBTTtBQUN4QyxpQ0FBaUMsTUFBTTtBQUN2QywyQ0FBMkMsTUFBTTtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxNQUFNO0FBQ2pCO0FBQ0Esd0JBQXdCLE1BQU07QUFDOUI7QUFDQSx3QkFBd0IsTUFBTTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixNQUFNLFNBQVMsU0FBUztBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCLEtBQUssWUFBWTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixNQUFNLFNBQVMsU0FBUztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQXVELGFBQWE7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtFQUFrRSxhQUFhO0FBQy9FO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOERBQThELGFBQWEsa0JBQWtCLE1BQU07QUFDbkc7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL2F1dGhfcGx1Z2lucy9jYWNoaW5nX3NoYTJfcGFzc3dvcmQuanM/MzkzMCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG4vLyBodHRwczovL215c3Fsc2VydmVydGVhbS5jb20vbXlzcWwtOC0wLTQtbmV3LWRlZmF1bHQtYXV0aGVudGljYXRpb24tcGx1Z2luLWNhY2hpbmdfc2hhMl9wYXNzd29yZC9cclxuXHJcbmNvbnN0IFBMVUdJTl9OQU1FID0gJ2NhY2hpbmdfc2hhMl9wYXNzd29yZCc7XHJcbmNvbnN0IGNyeXB0byA9IHJlcXVpcmUoJ2NyeXB0bycpO1xyXG5jb25zdCB7IHhvciwgeG9yUm90YXRpbmcgfSA9IHJlcXVpcmUoJy4uL2F1dGhfNDEnKTtcclxuXHJcbmNvbnN0IFJFUVVFU1RfU0VSVkVSX0tFWV9QQUNLRVQgPSBCdWZmZXIuZnJvbShbMl0pO1xyXG5jb25zdCBGQVNUX0FVVEhfU1VDQ0VTU19QQUNLRVQgPSBCdWZmZXIuZnJvbShbM10pO1xyXG5jb25zdCBQRVJGT1JNX0ZVTExfQVVUSEVOVElDQVRJT05fUEFDS0VUID0gQnVmZmVyLmZyb20oWzRdKTtcclxuXHJcbmNvbnN0IFNUQVRFX0lOSVRJQUwgPSAwO1xyXG5jb25zdCBTVEFURV9UT0tFTl9TRU5UID0gMTtcclxuY29uc3QgU1RBVEVfV0FJVF9TRVJWRVJfS0VZID0gMjtcclxuY29uc3QgU1RBVEVfRklOQUwgPSAtMTtcclxuXHJcbmZ1bmN0aW9uIHNoYTI1Nihtc2cpIHtcclxuICBjb25zdCBoYXNoID0gY3J5cHRvLmNyZWF0ZUhhc2goJ3NoYTI1NicpO1xyXG4gIGhhc2gudXBkYXRlKG1zZyk7XHJcbiAgcmV0dXJuIGhhc2guZGlnZXN0KCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGNhbGN1bGF0ZVRva2VuKHBhc3N3b3JkLCBzY3JhbWJsZSkge1xyXG4gIGlmICghcGFzc3dvcmQpIHtcclxuICAgIHJldHVybiBCdWZmZXIuYWxsb2MoMCk7XHJcbiAgfVxyXG4gIGNvbnN0IHN0YWdlMSA9IHNoYTI1NihCdWZmZXIuZnJvbShwYXNzd29yZCkpO1xyXG4gIGNvbnN0IHN0YWdlMiA9IHNoYTI1NihzdGFnZTEpO1xyXG4gIGNvbnN0IHN0YWdlMyA9IHNoYTI1NihCdWZmZXIuY29uY2F0KFtzdGFnZTIsIHNjcmFtYmxlXSkpO1xyXG4gIHJldHVybiB4b3Ioc3RhZ2UxLCBzdGFnZTMpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBlbmNyeXB0KHBhc3N3b3JkLCBzY3JhbWJsZSwga2V5KSB7XHJcbiAgY29uc3Qgc3RhZ2UxID0geG9yUm90YXRpbmcoQnVmZmVyLmZyb20oYCR7cGFzc3dvcmR9XFwwYCwgJ3V0ZjgnKSwgc2NyYW1ibGUpO1xyXG4gIHJldHVybiBjcnlwdG8ucHVibGljRW5jcnlwdChcclxuICAgIHtcclxuICAgICAga2V5LFxyXG4gICAgICBwYWRkaW5nOiBjcnlwdG8uY29uc3RhbnRzLlJTQV9QS0NTMV9PQUVQX1BBRERJTkcsXHJcbiAgICB9LFxyXG4gICAgc3RhZ2UxXHJcbiAgKTtcclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPVxyXG4gIChwbHVnaW5PcHRpb25zID0ge30pID0+XHJcbiAgKHsgY29ubmVjdGlvbiB9KSA9PiB7XHJcbiAgICBsZXQgc3RhdGUgPSAwO1xyXG4gICAgbGV0IHNjcmFtYmxlID0gbnVsbDtcclxuXHJcbiAgICBjb25zdCBwYXNzd29yZCA9IGNvbm5lY3Rpb24uY29uZmlnLnBhc3N3b3JkO1xyXG5cclxuICAgIGNvbnN0IGF1dGhXaXRoS2V5ID0gKHNlcnZlcktleSkgPT4ge1xyXG4gICAgICBjb25zdCBfcGFzc3dvcmQgPSBlbmNyeXB0KHBhc3N3b3JkLCBzY3JhbWJsZSwgc2VydmVyS2V5KTtcclxuICAgICAgc3RhdGUgPSBTVEFURV9GSU5BTDtcclxuICAgICAgcmV0dXJuIF9wYXNzd29yZDtcclxuICAgIH07XHJcblxyXG4gICAgcmV0dXJuIChkYXRhKSA9PiB7XHJcbiAgICAgIHN3aXRjaCAoc3RhdGUpIHtcclxuICAgICAgICBjYXNlIFNUQVRFX0lOSVRJQUw6XHJcbiAgICAgICAgICBzY3JhbWJsZSA9IGRhdGEuc2xpY2UoMCwgMjApO1xyXG4gICAgICAgICAgc3RhdGUgPSBTVEFURV9UT0tFTl9TRU5UO1xyXG4gICAgICAgICAgcmV0dXJuIGNhbGN1bGF0ZVRva2VuKHBhc3N3b3JkLCBzY3JhbWJsZSk7XHJcblxyXG4gICAgICAgIGNhc2UgU1RBVEVfVE9LRU5fU0VOVDpcclxuICAgICAgICAgIGlmIChGQVNUX0FVVEhfU1VDQ0VTU19QQUNLRVQuZXF1YWxzKGRhdGEpKSB7XHJcbiAgICAgICAgICAgIHN0YXRlID0gU1RBVEVfRklOQUw7XHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIGlmIChQRVJGT1JNX0ZVTExfQVVUSEVOVElDQVRJT05fUEFDS0VULmVxdWFscyhkYXRhKSkge1xyXG4gICAgICAgICAgICBjb25zdCBpc1NlY3VyZUNvbm5lY3Rpb24gPVxyXG4gICAgICAgICAgICAgIHR5cGVvZiBwbHVnaW5PcHRpb25zLm92ZXJyaWRlSXNTZWN1cmUgPT09ICd1bmRlZmluZWQnXHJcbiAgICAgICAgICAgICAgICA/IGNvbm5lY3Rpb24uY29uZmlnLnNzbCB8fCBjb25uZWN0aW9uLmNvbmZpZy5zb2NrZXRQYXRoXHJcbiAgICAgICAgICAgICAgICA6IHBsdWdpbk9wdGlvbnMub3ZlcnJpZGVJc1NlY3VyZTtcclxuICAgICAgICAgICAgaWYgKGlzU2VjdXJlQ29ubmVjdGlvbikge1xyXG4gICAgICAgICAgICAgIHN0YXRlID0gU1RBVEVfRklOQUw7XHJcbiAgICAgICAgICAgICAgcmV0dXJuIEJ1ZmZlci5mcm9tKGAke3Bhc3N3b3JkfVxcMGAsICd1dGY4Jyk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC8vIGlmIGNsaWVudCBwcm92aWRlcyBrZXkgd2UgY2FuIHNhdmUgb25lIGV4dHJhIHJvdW5kcmlwIG9uIGZpcnN0IGNvbm5lY3Rpb25cclxuICAgICAgICAgICAgaWYgKHBsdWdpbk9wdGlvbnMuc2VydmVyUHVibGljS2V5KSB7XHJcbiAgICAgICAgICAgICAgcmV0dXJuIGF1dGhXaXRoS2V5KHBsdWdpbk9wdGlvbnMuc2VydmVyUHVibGljS2V5KTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgc3RhdGUgPSBTVEFURV9XQUlUX1NFUlZFUl9LRVk7XHJcbiAgICAgICAgICAgIHJldHVybiBSRVFVRVNUX1NFUlZFUl9LRVlfUEFDS0VUO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFxyXG4gICAgICAgICAgICBgSW52YWxpZCBBdXRoTW9yZURhdGEgcGFja2V0IHJlY2VpdmVkIGJ5ICR7UExVR0lOX05BTUV9IHBsdWdpbiBpbiBTVEFURV9UT0tFTl9TRU5UIHN0YXRlLmBcclxuICAgICAgICAgICk7XHJcbiAgICAgICAgY2FzZSBTVEFURV9XQUlUX1NFUlZFUl9LRVk6XHJcbiAgICAgICAgICBpZiAocGx1Z2luT3B0aW9ucy5vblNlcnZlclB1YmxpY0tleSkge1xyXG4gICAgICAgICAgICBwbHVnaW5PcHRpb25zLm9uU2VydmVyUHVibGljS2V5KGRhdGEpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgcmV0dXJuIGF1dGhXaXRoS2V5KGRhdGEpO1xyXG4gICAgICAgIGNhc2UgU1RBVEVfRklOQUw6XHJcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXHJcbiAgICAgICAgICAgIGBVbmV4cGVjdGVkIGRhdGEgaW4gQXV0aE1vcmVEYXRhIHBhY2tldCByZWNlaXZlZCBieSAke1BMVUdJTl9OQU1FfSBwbHVnaW4gaW4gU1RBVEVfRklOQUwgc3RhdGUuYFxyXG4gICAgICAgICAgKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgdGhyb3cgbmV3IEVycm9yKFxyXG4gICAgICAgIGBVbmV4cGVjdGVkIGRhdGEgaW4gQXV0aE1vcmVEYXRhIHBhY2tldCByZWNlaXZlZCBieSAke1BMVUdJTl9OQU1FfSBwbHVnaW4gaW4gc3RhdGUgJHtzdGF0ZX1gXHJcbiAgICAgICk7XHJcbiAgICB9O1xyXG4gIH07XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/auth_plugins/caching_sha2_password.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/auth_plugins/mysql_clear_password.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mysql2/lib/auth_plugins/mysql_clear_password.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\n\r\n\r\nfunction bufferFromStr(str) {\r\n  return Buffer.from(`${str}\\0`);\r\n}\r\n\r\nconst create_mysql_clear_password_plugin = (pluginOptions) =>\r\n  function mysql_clear_password_plugin({ connection, command }) {\r\n    const password =\r\n      command.password || pluginOptions.password || connection.config.password;\r\n\r\n    return function (/* pluginData */) {\r\n      return bufferFromStr(password);\r\n    };\r\n  };\r\n\r\nmodule.exports = create_mysql_clear_password_plugin;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvYXV0aF9wbHVnaW5zL215c3FsX2NsZWFyX3Bhc3N3b3JkLmpzIiwibWFwcGluZ3MiOiI7QUFBYTtBQUNiO0FBQ0E7QUFDQSxTQUFTLE1BQU0sU0FBUyxJQUFJO0FBQzVCO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QyxxQkFBcUI7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL2F1dGhfcGx1Z2lucy9teXNxbF9jbGVhcl9wYXNzd29yZC5qcz8zYjBjIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuXHJcbmZ1bmN0aW9uIGJ1ZmZlckZyb21TdHIoc3RyKSB7XHJcbiAgcmV0dXJuIEJ1ZmZlci5mcm9tKGAke3N0cn1cXDBgKTtcclxufVxyXG5cclxuY29uc3QgY3JlYXRlX215c3FsX2NsZWFyX3Bhc3N3b3JkX3BsdWdpbiA9IChwbHVnaW5PcHRpb25zKSA9PlxyXG4gIGZ1bmN0aW9uIG15c3FsX2NsZWFyX3Bhc3N3b3JkX3BsdWdpbih7IGNvbm5lY3Rpb24sIGNvbW1hbmQgfSkge1xyXG4gICAgY29uc3QgcGFzc3dvcmQgPVxyXG4gICAgICBjb21tYW5kLnBhc3N3b3JkIHx8IHBsdWdpbk9wdGlvbnMucGFzc3dvcmQgfHwgY29ubmVjdGlvbi5jb25maWcucGFzc3dvcmQ7XHJcblxyXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgvKiBwbHVnaW5EYXRhICovKSB7XHJcbiAgICAgIHJldHVybiBidWZmZXJGcm9tU3RyKHBhc3N3b3JkKTtcclxuICAgIH07XHJcbiAgfTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gY3JlYXRlX215c3FsX2NsZWFyX3Bhc3N3b3JkX3BsdWdpbjtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/auth_plugins/mysql_clear_password.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/auth_plugins/mysql_native_password.js":
/*!***********************************************************************!*\
  !*** ./node_modules/mysql2/lib/auth_plugins/mysql_native_password.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\n//const PLUGIN_NAME = 'mysql_native_password';\r\nconst auth41 = __webpack_require__(/*! ../auth_41.js */ \"(middleware)/./node_modules/mysql2/lib/auth_41.js\");\r\n\r\nmodule.exports =\r\n  (pluginOptions) =>\r\n  ({ connection, command }) => {\r\n    const password =\r\n      command.password || pluginOptions.password || connection.config.password;\r\n    const passwordSha1 =\r\n      command.passwordSha1 ||\r\n      pluginOptions.passwordSha1 ||\r\n      connection.config.passwordSha1;\r\n    return (data) => {\r\n      const authPluginData1 = data.slice(0, 8);\r\n      const authPluginData2 = data.slice(8, 20);\r\n      let authToken;\r\n      if (passwordSha1) {\r\n        authToken = auth41.calculateTokenFromPasswordSha(\r\n          passwordSha1,\r\n          authPluginData1,\r\n          authPluginData2\r\n        );\r\n      } else {\r\n        authToken = auth41.calculateToken(\r\n          password,\r\n          authPluginData1,\r\n          authPluginData2\r\n        );\r\n      }\r\n      return authToken;\r\n    };\r\n  };\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvYXV0aF9wbHVnaW5zL215c3FsX25hdGl2ZV9wYXNzd29yZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSxlQUFlLG1CQUFPLENBQUMsd0VBQWU7QUFDdEM7QUFDQTtBQUNBO0FBQ0EsS0FBSyxxQkFBcUI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL2F1dGhfcGx1Z2lucy9teXNxbF9uYXRpdmVfcGFzc3dvcmQuanM/M2U3YiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG4vL2NvbnN0IFBMVUdJTl9OQU1FID0gJ215c3FsX25hdGl2ZV9wYXNzd29yZCc7XHJcbmNvbnN0IGF1dGg0MSA9IHJlcXVpcmUoJy4uL2F1dGhfNDEuanMnKTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID1cclxuICAocGx1Z2luT3B0aW9ucykgPT5cclxuICAoeyBjb25uZWN0aW9uLCBjb21tYW5kIH0pID0+IHtcclxuICAgIGNvbnN0IHBhc3N3b3JkID1cclxuICAgICAgY29tbWFuZC5wYXNzd29yZCB8fCBwbHVnaW5PcHRpb25zLnBhc3N3b3JkIHx8IGNvbm5lY3Rpb24uY29uZmlnLnBhc3N3b3JkO1xyXG4gICAgY29uc3QgcGFzc3dvcmRTaGExID1cclxuICAgICAgY29tbWFuZC5wYXNzd29yZFNoYTEgfHxcclxuICAgICAgcGx1Z2luT3B0aW9ucy5wYXNzd29yZFNoYTEgfHxcclxuICAgICAgY29ubmVjdGlvbi5jb25maWcucGFzc3dvcmRTaGExO1xyXG4gICAgcmV0dXJuIChkYXRhKSA9PiB7XHJcbiAgICAgIGNvbnN0IGF1dGhQbHVnaW5EYXRhMSA9IGRhdGEuc2xpY2UoMCwgOCk7XHJcbiAgICAgIGNvbnN0IGF1dGhQbHVnaW5EYXRhMiA9IGRhdGEuc2xpY2UoOCwgMjApO1xyXG4gICAgICBsZXQgYXV0aFRva2VuO1xyXG4gICAgICBpZiAocGFzc3dvcmRTaGExKSB7XHJcbiAgICAgICAgYXV0aFRva2VuID0gYXV0aDQxLmNhbGN1bGF0ZVRva2VuRnJvbVBhc3N3b3JkU2hhKFxyXG4gICAgICAgICAgcGFzc3dvcmRTaGExLFxyXG4gICAgICAgICAgYXV0aFBsdWdpbkRhdGExLFxyXG4gICAgICAgICAgYXV0aFBsdWdpbkRhdGEyXHJcbiAgICAgICAgKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBhdXRoVG9rZW4gPSBhdXRoNDEuY2FsY3VsYXRlVG9rZW4oXHJcbiAgICAgICAgICBwYXNzd29yZCxcclxuICAgICAgICAgIGF1dGhQbHVnaW5EYXRhMSxcclxuICAgICAgICAgIGF1dGhQbHVnaW5EYXRhMlxyXG4gICAgICAgICk7XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIGF1dGhUb2tlbjtcclxuICAgIH07XHJcbiAgfTtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/auth_plugins/mysql_native_password.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/auth_plugins/sha256_password.js":
/*!*****************************************************************!*\
  !*** ./node_modules/mysql2/lib/auth_plugins/sha256_password.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\n\r\n\r\nconst PLUGIN_NAME = 'sha256_password';\r\nconst crypto = __webpack_require__(/*! crypto */ \"crypto\");\r\nconst { xorRotating } = __webpack_require__(/*! ../auth_41 */ \"(middleware)/./node_modules/mysql2/lib/auth_41.js\");\r\n\r\nconst REQUEST_SERVER_KEY_PACKET = Buffer.from([1]);\r\n\r\nconst STATE_INITIAL = 0;\r\nconst STATE_WAIT_SERVER_KEY = 1;\r\nconst STATE_FINAL = -1;\r\n\r\nfunction encrypt(password, scramble, key) {\r\n  const stage1 = xorRotating(Buffer.from(`${password}\\0`, 'utf8'), scramble);\r\n  return crypto.publicEncrypt(key, stage1);\r\n}\r\n\r\nmodule.exports =\r\n  (pluginOptions = {}) =>\r\n  ({ connection }) => {\r\n    let state = 0;\r\n    let scramble = null;\r\n\r\n    const password = connection.config.password;\r\n\r\n    const authWithKey = (serverKey) => {\r\n      const _password = encrypt(password, scramble, serverKey);\r\n      state = STATE_FINAL;\r\n      return _password;\r\n    };\r\n\r\n    return (data) => {\r\n      switch (state) {\r\n        case STATE_INITIAL:\r\n          scramble = data.slice(0, 20);\r\n          // if client provides key we can save one extra roundrip on first connection\r\n          if (pluginOptions.serverPublicKey) {\r\n            return authWithKey(pluginOptions.serverPublicKey);\r\n          }\r\n\r\n          state = STATE_WAIT_SERVER_KEY;\r\n          return REQUEST_SERVER_KEY_PACKET;\r\n\r\n        case STATE_WAIT_SERVER_KEY:\r\n          if (pluginOptions.onServerPublicKey) {\r\n            pluginOptions.onServerPublicKey(data);\r\n          }\r\n          return authWithKey(data);\r\n        case STATE_FINAL:\r\n          throw new Error(\r\n            `Unexpected data in AuthMoreData packet received by ${PLUGIN_NAME} plugin in STATE_FINAL state.`\r\n          );\r\n      }\r\n\r\n      throw new Error(\r\n        `Unexpected data in AuthMoreData packet received by ${PLUGIN_NAME} plugin in state ${state}`\r\n      );\r\n    };\r\n  };\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvYXV0aF9wbHVnaW5zL3NoYTI1Nl9wYXNzd29yZC5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7QUFDYjtBQUNBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLHNCQUFRO0FBQy9CLFFBQVEsY0FBYyxFQUFFLG1CQUFPLENBQUMscUVBQVk7QUFDNUM7QUFDQSxrQ0FBa0MsTUFBTTtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsTUFBTSxTQUFTLFNBQVM7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsS0FBSyxZQUFZO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtFQUFrRSxhQUFhO0FBQy9FO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOERBQThELGFBQWEsa0JBQWtCLE1BQU07QUFDbkc7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL2F1dGhfcGx1Z2lucy9zaGEyNTZfcGFzc3dvcmQuanM/MTQ5OCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG5jb25zdCBQTFVHSU5fTkFNRSA9ICdzaGEyNTZfcGFzc3dvcmQnO1xyXG5jb25zdCBjcnlwdG8gPSByZXF1aXJlKCdjcnlwdG8nKTtcclxuY29uc3QgeyB4b3JSb3RhdGluZyB9ID0gcmVxdWlyZSgnLi4vYXV0aF80MScpO1xyXG5cclxuY29uc3QgUkVRVUVTVF9TRVJWRVJfS0VZX1BBQ0tFVCA9IEJ1ZmZlci5mcm9tKFsxXSk7XHJcblxyXG5jb25zdCBTVEFURV9JTklUSUFMID0gMDtcclxuY29uc3QgU1RBVEVfV0FJVF9TRVJWRVJfS0VZID0gMTtcclxuY29uc3QgU1RBVEVfRklOQUwgPSAtMTtcclxuXHJcbmZ1bmN0aW9uIGVuY3J5cHQocGFzc3dvcmQsIHNjcmFtYmxlLCBrZXkpIHtcclxuICBjb25zdCBzdGFnZTEgPSB4b3JSb3RhdGluZyhCdWZmZXIuZnJvbShgJHtwYXNzd29yZH1cXDBgLCAndXRmOCcpLCBzY3JhbWJsZSk7XHJcbiAgcmV0dXJuIGNyeXB0by5wdWJsaWNFbmNyeXB0KGtleSwgc3RhZ2UxKTtcclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPVxyXG4gIChwbHVnaW5PcHRpb25zID0ge30pID0+XHJcbiAgKHsgY29ubmVjdGlvbiB9KSA9PiB7XHJcbiAgICBsZXQgc3RhdGUgPSAwO1xyXG4gICAgbGV0IHNjcmFtYmxlID0gbnVsbDtcclxuXHJcbiAgICBjb25zdCBwYXNzd29yZCA9IGNvbm5lY3Rpb24uY29uZmlnLnBhc3N3b3JkO1xyXG5cclxuICAgIGNvbnN0IGF1dGhXaXRoS2V5ID0gKHNlcnZlcktleSkgPT4ge1xyXG4gICAgICBjb25zdCBfcGFzc3dvcmQgPSBlbmNyeXB0KHBhc3N3b3JkLCBzY3JhbWJsZSwgc2VydmVyS2V5KTtcclxuICAgICAgc3RhdGUgPSBTVEFURV9GSU5BTDtcclxuICAgICAgcmV0dXJuIF9wYXNzd29yZDtcclxuICAgIH07XHJcblxyXG4gICAgcmV0dXJuIChkYXRhKSA9PiB7XHJcbiAgICAgIHN3aXRjaCAoc3RhdGUpIHtcclxuICAgICAgICBjYXNlIFNUQVRFX0lOSVRJQUw6XHJcbiAgICAgICAgICBzY3JhbWJsZSA9IGRhdGEuc2xpY2UoMCwgMjApO1xyXG4gICAgICAgICAgLy8gaWYgY2xpZW50IHByb3ZpZGVzIGtleSB3ZSBjYW4gc2F2ZSBvbmUgZXh0cmEgcm91bmRyaXAgb24gZmlyc3QgY29ubmVjdGlvblxyXG4gICAgICAgICAgaWYgKHBsdWdpbk9wdGlvbnMuc2VydmVyUHVibGljS2V5KSB7XHJcbiAgICAgICAgICAgIHJldHVybiBhdXRoV2l0aEtleShwbHVnaW5PcHRpb25zLnNlcnZlclB1YmxpY0tleSk7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgc3RhdGUgPSBTVEFURV9XQUlUX1NFUlZFUl9LRVk7XHJcbiAgICAgICAgICByZXR1cm4gUkVRVUVTVF9TRVJWRVJfS0VZX1BBQ0tFVDtcclxuXHJcbiAgICAgICAgY2FzZSBTVEFURV9XQUlUX1NFUlZFUl9LRVk6XHJcbiAgICAgICAgICBpZiAocGx1Z2luT3B0aW9ucy5vblNlcnZlclB1YmxpY0tleSkge1xyXG4gICAgICAgICAgICBwbHVnaW5PcHRpb25zLm9uU2VydmVyUHVibGljS2V5KGRhdGEpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgcmV0dXJuIGF1dGhXaXRoS2V5KGRhdGEpO1xyXG4gICAgICAgIGNhc2UgU1RBVEVfRklOQUw6XHJcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXHJcbiAgICAgICAgICAgIGBVbmV4cGVjdGVkIGRhdGEgaW4gQXV0aE1vcmVEYXRhIHBhY2tldCByZWNlaXZlZCBieSAke1BMVUdJTl9OQU1FfSBwbHVnaW4gaW4gU1RBVEVfRklOQUwgc3RhdGUuYFxyXG4gICAgICAgICAgKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgdGhyb3cgbmV3IEVycm9yKFxyXG4gICAgICAgIGBVbmV4cGVjdGVkIGRhdGEgaW4gQXV0aE1vcmVEYXRhIHBhY2tldCByZWNlaXZlZCBieSAke1BMVUdJTl9OQU1FfSBwbHVnaW4gaW4gc3RhdGUgJHtzdGF0ZX1gXHJcbiAgICAgICk7XHJcbiAgICB9O1xyXG4gIH07XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/auth_plugins/sha256_password.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/base/connection.js":
/*!****************************************************!*\
  !*** ./node_modules/mysql2/lib/base/connection.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\n// This file was modified by Oracle on June 1, 2021.\r\n// The changes involve new logic to handle an additional ERR Packet sent by\r\n// the MySQL server when the connection is closed unexpectedly.\r\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\r\n\r\n// This file was modified by Oracle on June 17, 2021.\r\n// The changes involve logic to ensure the socket connection is closed when\r\n// there is a fatal error.\r\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\r\n\r\n// This file was modified by Oracle on September 21, 2021.\r\n// The changes involve passing additional authentication factor passwords\r\n// to the ChangeUser Command instance.\r\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\r\n\r\n\r\n\r\nconst Net = __webpack_require__(/*! net */ \"net\");\r\nconst Tls = __webpack_require__(/*! tls */ \"tls\");\r\nconst Timers = __webpack_require__(/*! timers */ \"timers\");\r\nconst EventEmitter = (__webpack_require__(/*! events */ \"events\").EventEmitter);\r\nconst Readable = (__webpack_require__(/*! stream */ \"stream\").Readable);\r\nconst Queue = __webpack_require__(/*! denque */ \"(middleware)/./node_modules/denque/index.js\");\r\nconst SqlString = __webpack_require__(/*! sqlstring */ \"(middleware)/./node_modules/sqlstring/index.js\");\r\nconst { createLRU } = __webpack_require__(/*! lru.min */ \"(middleware)/./node_modules/lru.min/lib/index.js\");\r\nconst PacketParser = __webpack_require__(/*! ../packet_parser.js */ \"(middleware)/./node_modules/mysql2/lib/packet_parser.js\");\r\nconst Packets = __webpack_require__(/*! ../packets/index.js */ \"(middleware)/./node_modules/mysql2/lib/packets/index.js\");\r\nconst Commands = __webpack_require__(/*! ../commands/index.js */ \"(middleware)/./node_modules/mysql2/lib/commands/index.js\");\r\nconst ConnectionConfig = __webpack_require__(/*! ../connection_config.js */ \"(middleware)/./node_modules/mysql2/lib/connection_config.js\");\r\nconst CharsetToEncoding = __webpack_require__(/*! ../constants/charset_encodings.js */ \"(middleware)/./node_modules/mysql2/lib/constants/charset_encodings.js\");\r\n\r\nlet _connectionId = 0;\r\n\r\nlet convertNamedPlaceholders = null;\r\n\r\nclass BaseConnection extends EventEmitter {\r\n  constructor(opts) {\r\n    super();\r\n    this.config = opts.config;\r\n    // TODO: fill defaults\r\n    // if no params, connect to /var/lib/mysql/mysql.sock ( /tmp/mysql.sock on OSX )\r\n    // if host is given, connect to host:3306\r\n    // TODO: use `/usr/local/mysql/bin/mysql_config --socket` output? as default socketPath\r\n    // if there is no host/port and no socketPath parameters?\r\n    if (!opts.config.stream) {\r\n      if (opts.config.socketPath) {\r\n        this.stream = Net.connect(opts.config.socketPath);\r\n      } else {\r\n        this.stream = Net.connect(opts.config.port, opts.config.host);\r\n\r\n        // Optionally enable keep-alive on the socket.\r\n        if (this.config.enableKeepAlive) {\r\n          this.stream.on('connect', () => {\r\n            this.stream.setKeepAlive(true, this.config.keepAliveInitialDelay);\r\n          });\r\n        }\r\n\r\n        // Enable TCP_NODELAY flag. This is needed so that the network packets\r\n        // are sent immediately to the server\r\n        this.stream.setNoDelay(true);\r\n      }\r\n      // if stream is a function, treat it as \"stream agent / factory\"\r\n    } else if (typeof opts.config.stream === 'function') {\r\n      this.stream = opts.config.stream(opts);\r\n    } else {\r\n      this.stream = opts.config.stream;\r\n    }\r\n\r\n    this._internalId = _connectionId++;\r\n    this._commands = new Queue();\r\n    this._command = null;\r\n    this._paused = false;\r\n    this._paused_packets = new Queue();\r\n    this._statements = createLRU({\r\n      max: this.config.maxPreparedStatements,\r\n      onEviction: function (_, statement) {\r\n        statement.close();\r\n      },\r\n    });\r\n    this.serverCapabilityFlags = 0;\r\n    this.authorized = false;\r\n    this.sequenceId = 0;\r\n    this.compressedSequenceId = 0;\r\n    this.threadId = null;\r\n    this._handshakePacket = null;\r\n    this._fatalError = null;\r\n    this._protocolError = null;\r\n    this._outOfOrderPackets = [];\r\n    this.clientEncoding = CharsetToEncoding[this.config.charsetNumber];\r\n    this.stream.on('error', this._handleNetworkError.bind(this));\r\n    // see https://gist.github.com/khoomeister/4985691#use-that-instead-of-bind\r\n    this.packetParser = new PacketParser((p) => {\r\n      this.handlePacket(p);\r\n    });\r\n    this.stream.on('data', (data) => {\r\n      if (this.connectTimeout) {\r\n        Timers.clearTimeout(this.connectTimeout);\r\n        this.connectTimeout = null;\r\n      }\r\n      this.packetParser.execute(data);\r\n    });\r\n    this.stream.on('end', () => {\r\n      // emit the end event so that the pooled connection can close the connection\r\n      this.emit('end');\r\n    });\r\n    this.stream.on('close', () => {\r\n      // we need to set this flag everywhere where we want connection to close\r\n      if (this._closing) {\r\n        return;\r\n      }\r\n      if (!this._protocolError) {\r\n        // no particular error message before disconnect\r\n        this._protocolError = new Error(\r\n          'Connection lost: The server closed the connection.'\r\n        );\r\n        this._protocolError.fatal = true;\r\n        this._protocolError.code = 'PROTOCOL_CONNECTION_LOST';\r\n      }\r\n      this._notifyError(this._protocolError);\r\n    });\r\n    let handshakeCommand;\r\n    if (!this.config.isServer) {\r\n      handshakeCommand = new Commands.ClientHandshake(this.config.clientFlags);\r\n      handshakeCommand.on('end', () => {\r\n        // this happens when handshake finishes early either because there was\r\n        // some fatal error or the server sent an error packet instead of\r\n        // an hello packet (for example, 'Too many connections' error)\r\n        if (\r\n          !handshakeCommand.handshake ||\r\n          this._fatalError ||\r\n          this._protocolError\r\n        ) {\r\n          return;\r\n        }\r\n        this._handshakePacket = handshakeCommand.handshake;\r\n        this.threadId = handshakeCommand.handshake.connectionId;\r\n        this.emit('connect', handshakeCommand.handshake);\r\n      });\r\n      handshakeCommand.on('error', (err) => {\r\n        this._closing = true;\r\n        this._notifyError(err);\r\n      });\r\n      this.addCommand(handshakeCommand);\r\n    }\r\n    // in case there was no initial handshake but we need to read sting, assume it utf-8\r\n    // most common example: \"Too many connections\" error ( packet is sent immediately on connection attempt, we don't know server encoding yet)\r\n    // will be overwritten with actual encoding value as soon as server handshake packet is received\r\n    this.serverEncoding = 'utf8';\r\n    if (this.config.connectTimeout) {\r\n      const timeoutHandler = this._handleTimeoutError.bind(this);\r\n      this.connectTimeout = Timers.setTimeout(\r\n        timeoutHandler,\r\n        this.config.connectTimeout\r\n      );\r\n    }\r\n  }\r\n\r\n  _addCommandClosedState(cmd) {\r\n    const err = new Error(\r\n      \"Can't add new command when connection is in closed state\"\r\n    );\r\n    err.fatal = true;\r\n    if (cmd.onResult) {\r\n      cmd.onResult(err);\r\n    } else {\r\n      this.emit('error', err);\r\n    }\r\n  }\r\n\r\n  _handleFatalError(err) {\r\n    err.fatal = true;\r\n    // stop receiving packets\r\n    this.stream.removeAllListeners('data');\r\n    this.addCommand = this._addCommandClosedState;\r\n    this.write = () => {\r\n      this.emit('error', new Error(\"Can't write in closed state\"));\r\n    };\r\n    this._notifyError(err);\r\n    this._fatalError = err;\r\n  }\r\n\r\n  _handleNetworkError(err) {\r\n    if (this.connectTimeout) {\r\n      Timers.clearTimeout(this.connectTimeout);\r\n      this.connectTimeout = null;\r\n    }\r\n    // Do not throw an error when a connection ends with a RST,ACK packet\r\n    if (err.code === 'ECONNRESET' && this._closing) {\r\n      return;\r\n    }\r\n    this._handleFatalError(err);\r\n  }\r\n\r\n  _handleTimeoutError() {\r\n    if (this.connectTimeout) {\r\n      Timers.clearTimeout(this.connectTimeout);\r\n      this.connectTimeout = null;\r\n    }\r\n    this.stream.destroy && this.stream.destroy();\r\n    const err = new Error('connect ETIMEDOUT');\r\n    err.errorno = 'ETIMEDOUT';\r\n    err.code = 'ETIMEDOUT';\r\n    err.syscall = 'connect';\r\n    this._handleNetworkError(err);\r\n  }\r\n\r\n  // notify all commands in the queue and bubble error as connection \"error\"\r\n  // called on stream error or unexpected termination\r\n  _notifyError(err) {\r\n    if (this.connectTimeout) {\r\n      Timers.clearTimeout(this.connectTimeout);\r\n      this.connectTimeout = null;\r\n    }\r\n    // prevent from emitting 'PROTOCOL_CONNECTION_LOST' after EPIPE or ECONNRESET\r\n    if (this._fatalError) {\r\n      return;\r\n    }\r\n    let command;\r\n    // if there is no active command, notify connection\r\n    // if there are commands and all of them have callbacks, pass error via callback\r\n    let bubbleErrorToConnection = !this._command;\r\n    if (this._command && this._command.onResult) {\r\n      this._command.onResult(err);\r\n      this._command = null;\r\n      // connection handshake is special because we allow it to be implicit\r\n      // if error happened during handshake, but there are others commands in queue\r\n      // then bubble error to other commands and not to connection\r\n    } else if (\r\n      !(\r\n        this._command &&\r\n        this._command.constructor === Commands.ClientHandshake &&\r\n        this._commands.length > 0\r\n      )\r\n    ) {\r\n      bubbleErrorToConnection = true;\r\n    }\r\n    while ((command = this._commands.shift())) {\r\n      if (command.onResult) {\r\n        command.onResult(err);\r\n      } else {\r\n        bubbleErrorToConnection = true;\r\n      }\r\n    }\r\n    // notify connection if some comands in the queue did not have callbacks\r\n    // or if this is pool connection ( so it can be removed from pool )\r\n    if (bubbleErrorToConnection || this._pool) {\r\n      this.emit('error', err);\r\n    }\r\n    // close connection after emitting the event in case of a fatal error\r\n    if (err.fatal) {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  write(buffer) {\r\n    const result = this.stream.write(buffer, (err) => {\r\n      if (err) {\r\n        this._handleNetworkError(err);\r\n      }\r\n    });\r\n\r\n    if (!result) {\r\n      this.stream.emit('pause');\r\n    }\r\n  }\r\n\r\n  // http://dev.mysql.com/doc/internals/en/sequence-id.html\r\n  //\r\n  // The sequence-id is incremented with each packet and may wrap around.\r\n  // It starts at 0 and is reset to 0 when a new command\r\n  // begins in the Command Phase.\r\n  // http://dev.mysql.com/doc/internals/en/example-several-mysql-packets.html\r\n  _resetSequenceId() {\r\n    this.sequenceId = 0;\r\n    this.compressedSequenceId = 0;\r\n  }\r\n\r\n  _bumpCompressedSequenceId(numPackets) {\r\n    this.compressedSequenceId += numPackets;\r\n    this.compressedSequenceId %= 256;\r\n  }\r\n\r\n  _bumpSequenceId(numPackets) {\r\n    this.sequenceId += numPackets;\r\n    this.sequenceId %= 256;\r\n  }\r\n\r\n  writePacket(packet) {\r\n    const MAX_PACKET_LENGTH = 16777215;\r\n    const length = packet.length();\r\n    let chunk, offset, header;\r\n    if (length < MAX_PACKET_LENGTH) {\r\n      packet.writeHeader(this.sequenceId);\r\n      if (this.config.debug) {\r\n        console.log(\r\n          `${this._internalId} ${this.connectionId} <== ${this._command._commandName}#${this._command.stateName()}(${[this.sequenceId, packet._name, packet.length()].join(',')})`\r\n        );\r\n        console.log(\r\n          `${this._internalId} ${this.connectionId} <== ${packet.buffer.toString('hex')}`\r\n        );\r\n      }\r\n      this._bumpSequenceId(1);\r\n      this.write(packet.buffer);\r\n    } else {\r\n      if (this.config.debug) {\r\n        console.log(\r\n          `${this._internalId} ${this.connectionId} <== Writing large packet, raw content not written:`\r\n        );\r\n        console.log(\r\n          `${this._internalId} ${this.connectionId} <== ${this._command._commandName}#${this._command.stateName()}(${[this.sequenceId, packet._name, packet.length()].join(',')})`\r\n        );\r\n      }\r\n      for (offset = 4; offset < 4 + length; offset += MAX_PACKET_LENGTH) {\r\n        chunk = packet.buffer.slice(offset, offset + MAX_PACKET_LENGTH);\r\n        if (chunk.length === MAX_PACKET_LENGTH) {\r\n          header = Buffer.from([0xff, 0xff, 0xff, this.sequenceId]);\r\n        } else {\r\n          header = Buffer.from([\r\n            chunk.length & 0xff,\r\n            (chunk.length >> 8) & 0xff,\r\n            (chunk.length >> 16) & 0xff,\r\n            this.sequenceId,\r\n          ]);\r\n        }\r\n        this._bumpSequenceId(1);\r\n        this.write(header);\r\n        this.write(chunk);\r\n      }\r\n    }\r\n  }\r\n\r\n  // 0.11+ environment\r\n  startTLS(onSecure) {\r\n    if (this.config.debug) {\r\n      console.log('Upgrading connection to TLS');\r\n    }\r\n    const secureContext = Tls.createSecureContext({\r\n      ca: this.config.ssl.ca,\r\n      cert: this.config.ssl.cert,\r\n      ciphers: this.config.ssl.ciphers,\r\n      key: this.config.ssl.key,\r\n      passphrase: this.config.ssl.passphrase,\r\n      minVersion: this.config.ssl.minVersion,\r\n      maxVersion: this.config.ssl.maxVersion,\r\n    });\r\n    const rejectUnauthorized = this.config.ssl.rejectUnauthorized;\r\n    const verifyIdentity = this.config.ssl.verifyIdentity;\r\n    const servername = this.config.host;\r\n\r\n    let secureEstablished = false;\r\n    this.stream.removeAllListeners('data');\r\n    const secureSocket = Tls.connect(\r\n      {\r\n        rejectUnauthorized,\r\n        requestCert: rejectUnauthorized,\r\n        checkServerIdentity: verifyIdentity\r\n          ? Tls.checkServerIdentity\r\n          : function () {\r\n              return undefined;\r\n            },\r\n        secureContext,\r\n        isServer: false,\r\n        socket: this.stream,\r\n        servername,\r\n      },\r\n      () => {\r\n        secureEstablished = true;\r\n        if (rejectUnauthorized) {\r\n          if (typeof servername === 'string' && verifyIdentity) {\r\n            const cert = secureSocket.getPeerCertificate(true);\r\n            const serverIdentityCheckError = Tls.checkServerIdentity(\r\n              servername,\r\n              cert\r\n            );\r\n            if (serverIdentityCheckError) {\r\n              onSecure(serverIdentityCheckError);\r\n              return;\r\n            }\r\n          }\r\n        }\r\n        onSecure();\r\n      }\r\n    );\r\n    // error handler for secure socket\r\n    secureSocket.on('error', (err) => {\r\n      if (secureEstablished) {\r\n        this._handleNetworkError(err);\r\n      } else {\r\n        onSecure(err);\r\n      }\r\n    });\r\n    secureSocket.on('data', (data) => {\r\n      this.packetParser.execute(data);\r\n    });\r\n    this.write = (buffer) => secureSocket.write(buffer);\r\n  }\r\n\r\n  protocolError(message, code) {\r\n    // Starting with MySQL 8.0.24, if the client closes the connection\r\n    // unexpectedly, the server will send a last ERR Packet, which we can\r\n    // safely ignore.\r\n    // https://dev.mysql.com/worklog/task/?id=12999\r\n    if (this._closing) {\r\n      return;\r\n    }\r\n\r\n    const err = new Error(message);\r\n    err.fatal = true;\r\n    err.code = code || 'PROTOCOL_ERROR';\r\n    this.emit('error', err);\r\n  }\r\n\r\n  get fatalError() {\r\n    return this._fatalError;\r\n  }\r\n\r\n  handlePacket(packet) {\r\n    if (this._paused) {\r\n      this._paused_packets.push(packet);\r\n      return;\r\n    }\r\n    if (this.config.debug) {\r\n      if (packet) {\r\n        console.log(\r\n          ` raw: ${packet.buffer\r\n            .slice(packet.offset, packet.offset + packet.length())\r\n            .toString('hex')}`\r\n        );\r\n        console.trace();\r\n        const commandName = this._command\r\n          ? this._command._commandName\r\n          : '(no command)';\r\n        const stateName = this._command\r\n          ? this._command.stateName()\r\n          : '(no command)';\r\n        console.log(\r\n          `${this._internalId} ${this.connectionId} ==> ${commandName}#${stateName}(${[packet.sequenceId, packet.type(), packet.length()].join(',')})`\r\n        );\r\n      }\r\n    }\r\n    if (!this._command) {\r\n      const marker = packet.peekByte();\r\n      // If it's an Err Packet, we should use it.\r\n      if (marker === 0xff) {\r\n        const error = Packets.Error.fromPacket(packet);\r\n        this.protocolError(error.message, error.code);\r\n      } else {\r\n        // Otherwise, it means it's some other unexpected packet.\r\n        this.protocolError(\r\n          'Unexpected packet while no commands in the queue',\r\n          'PROTOCOL_UNEXPECTED_PACKET'\r\n        );\r\n      }\r\n      this.close();\r\n      return;\r\n    }\r\n    if (packet) {\r\n      // Note: when server closes connection due to inactivity, Err packet ER_CLIENT_INTERACTION_TIMEOUT from MySQL 8.0.24, sequenceId will be 0\r\n      if (this.sequenceId !== packet.sequenceId) {\r\n        const err = new Error(\r\n          `Warning: got packets out of order. Expected ${this.sequenceId} but received ${packet.sequenceId}`\r\n        );\r\n        err.expected = this.sequenceId;\r\n        err.received = packet.sequenceId;\r\n        this.emit('warn', err); // REVIEW\r\n        console.error(err.message);\r\n      }\r\n      this._bumpSequenceId(packet.numPackets);\r\n    }\r\n    try {\r\n      if (this._fatalError) {\r\n        // skip remaining packets after client is in the error state\r\n        return;\r\n      }\r\n      const done = this._command.execute(packet, this);\r\n      if (done) {\r\n        this._command = this._commands.shift();\r\n        if (this._command) {\r\n          this.sequenceId = 0;\r\n          this.compressedSequenceId = 0;\r\n          this.handlePacket();\r\n        }\r\n      }\r\n    } catch (err) {\r\n      this._handleFatalError(err);\r\n      this.stream.destroy();\r\n    }\r\n  }\r\n\r\n  addCommand(cmd) {\r\n    // this.compressedSequenceId = 0;\r\n    // this.sequenceId = 0;\r\n    if (this.config.debug) {\r\n      const commandName = cmd.constructor.name;\r\n      console.log(`Add command: ${commandName}`);\r\n      cmd._commandName = commandName;\r\n    }\r\n    if (!this._command) {\r\n      this._command = cmd;\r\n      this.handlePacket();\r\n    } else {\r\n      this._commands.push(cmd);\r\n    }\r\n    return cmd;\r\n  }\r\n\r\n  format(sql, values) {\r\n    if (typeof this.config.queryFormat === 'function') {\r\n      return this.config.queryFormat.call(\r\n        this,\r\n        sql,\r\n        values,\r\n        this.config.timezone\r\n      );\r\n    }\r\n    const opts = {\r\n      sql: sql,\r\n      values: values,\r\n    };\r\n    this._resolveNamedPlaceholders(opts);\r\n    return SqlString.format(\r\n      opts.sql,\r\n      opts.values,\r\n      this.config.stringifyObjects,\r\n      this.config.timezone\r\n    );\r\n  }\r\n\r\n  escape(value) {\r\n    return SqlString.escape(value, false, this.config.timezone);\r\n  }\r\n\r\n  escapeId(value) {\r\n    return SqlString.escapeId(value, false);\r\n  }\r\n\r\n  raw(sql) {\r\n    return SqlString.raw(sql);\r\n  }\r\n\r\n  _resolveNamedPlaceholders(options) {\r\n    let unnamed;\r\n    if (this.config.namedPlaceholders || options.namedPlaceholders) {\r\n      if (Array.isArray(options.values)) {\r\n        // if an array is provided as the values, assume the conversion is not necessary.\r\n        // this allows the usage of unnamed placeholders even if the namedPlaceholders flag is enabled.\r\n        return;\r\n      }\r\n      if (convertNamedPlaceholders === null) {\r\n        convertNamedPlaceholders = __webpack_require__(/*! named-placeholders */ \"(middleware)/./node_modules/named-placeholders/index.js\")();\r\n      }\r\n      unnamed = convertNamedPlaceholders(options.sql, options.values);\r\n      options.sql = unnamed[0];\r\n      options.values = unnamed[1];\r\n    }\r\n  }\r\n\r\n  query(sql, values, cb) {\r\n    let cmdQuery;\r\n    if (sql.constructor === Commands.Query) {\r\n      cmdQuery = sql;\r\n    } else {\r\n      cmdQuery = BaseConnection.createQuery(sql, values, cb, this.config);\r\n    }\r\n    this._resolveNamedPlaceholders(cmdQuery);\r\n    const rawSql = this.format(\r\n      cmdQuery.sql,\r\n      cmdQuery.values !== undefined ? cmdQuery.values : []\r\n    );\r\n    cmdQuery.sql = rawSql;\r\n    return this.addCommand(cmdQuery);\r\n  }\r\n\r\n  pause() {\r\n    this._paused = true;\r\n    this.stream.pause();\r\n  }\r\n\r\n  resume() {\r\n    let packet;\r\n    this._paused = false;\r\n    while ((packet = this._paused_packets.shift())) {\r\n      this.handlePacket(packet);\r\n      // don't resume if packet handler paused connection\r\n      if (this._paused) {\r\n        return;\r\n      }\r\n    }\r\n    this.stream.resume();\r\n  }\r\n\r\n  // TODO: named placeholders support\r\n  prepare(options, cb) {\r\n    if (typeof options === 'string') {\r\n      options = { sql: options };\r\n    }\r\n    return this.addCommand(new Commands.Prepare(options, cb));\r\n  }\r\n\r\n  unprepare(sql) {\r\n    let options = {};\r\n    if (typeof sql === 'object') {\r\n      options = sql;\r\n    } else {\r\n      options.sql = sql;\r\n    }\r\n    const key = BaseConnection.statementKey(options);\r\n    const stmt = this._statements.get(key);\r\n    if (stmt) {\r\n      this._statements.delete(key);\r\n      stmt.close();\r\n    }\r\n    return stmt;\r\n  }\r\n\r\n  execute(sql, values, cb) {\r\n    let options = {\r\n      infileStreamFactory: this.config.infileStreamFactory,\r\n    };\r\n    if (typeof sql === 'object') {\r\n      // execute(options, cb)\r\n      options = {\r\n        ...options,\r\n        ...sql,\r\n        sql: sql.sql,\r\n        values: sql.values,\r\n      };\r\n      if (typeof values === 'function') {\r\n        cb = values;\r\n      } else {\r\n        options.values = options.values || values;\r\n      }\r\n    } else if (typeof values === 'function') {\r\n      // execute(sql, cb)\r\n      cb = values;\r\n      options.sql = sql;\r\n      options.values = undefined;\r\n    } else {\r\n      // execute(sql, values, cb)\r\n      options.sql = sql;\r\n      options.values = values;\r\n    }\r\n    this._resolveNamedPlaceholders(options);\r\n    // check for values containing undefined\r\n    if (options.values) {\r\n      //If namedPlaceholder is not enabled and object is passed as bind parameters\r\n      if (!Array.isArray(options.values)) {\r\n        throw new TypeError(\r\n          'Bind parameters must be array if namedPlaceholders parameter is not enabled'\r\n        );\r\n      }\r\n      options.values.forEach((val) => {\r\n        //If namedPlaceholder is not enabled and object is passed as bind parameters\r\n        if (!Array.isArray(options.values)) {\r\n          throw new TypeError(\r\n            'Bind parameters must be array if namedPlaceholders parameter is not enabled'\r\n          );\r\n        }\r\n        if (val === undefined) {\r\n          throw new TypeError(\r\n            'Bind parameters must not contain undefined. To pass SQL NULL specify JS null'\r\n          );\r\n        }\r\n        if (typeof val === 'function') {\r\n          throw new TypeError(\r\n            'Bind parameters must not contain function(s). To pass the body of a function as a string call .toString() first'\r\n          );\r\n        }\r\n      });\r\n    }\r\n    const executeCommand = new Commands.Execute(options, cb);\r\n    const prepareCommand = new Commands.Prepare(options, (err, stmt) => {\r\n      if (err) {\r\n        // skip execute command if prepare failed, we have main\r\n        // combined callback here\r\n        executeCommand.start = function () {\r\n          return null;\r\n        };\r\n        if (cb) {\r\n          cb(err);\r\n        } else {\r\n          executeCommand.emit('error', err);\r\n        }\r\n        executeCommand.emit('end');\r\n        return;\r\n      }\r\n      executeCommand.statement = stmt;\r\n    });\r\n    this.addCommand(prepareCommand);\r\n    this.addCommand(executeCommand);\r\n    return executeCommand;\r\n  }\r\n\r\n  changeUser(options, callback) {\r\n    if (!callback && typeof options === 'function') {\r\n      callback = options;\r\n      options = {};\r\n    }\r\n    const charsetNumber = options.charset\r\n      ? ConnectionConfig.getCharsetNumber(options.charset)\r\n      : this.config.charsetNumber;\r\n    return this.addCommand(\r\n      new Commands.ChangeUser(\r\n        {\r\n          user: options.user || this.config.user,\r\n          // for the purpose of multi-factor authentication, or not, the main\r\n          // password (used for the 1st authentication factor) can also be\r\n          // provided via the \"password1\" option\r\n          password:\r\n            options.password ||\r\n            options.password1 ||\r\n            this.config.password ||\r\n            this.config.password1,\r\n          password2: options.password2 || this.config.password2,\r\n          password3: options.password3 || this.config.password3,\r\n          passwordSha1: options.passwordSha1 || this.config.passwordSha1,\r\n          database: options.database || this.config.database,\r\n          timeout: options.timeout,\r\n          charsetNumber: charsetNumber,\r\n          currentConfig: this.config,\r\n        },\r\n        (err) => {\r\n          if (err) {\r\n            err.fatal = true;\r\n          }\r\n          if (callback) {\r\n            callback(err);\r\n          }\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  // transaction helpers\r\n  beginTransaction(cb) {\r\n    return this.query('START TRANSACTION', cb);\r\n  }\r\n\r\n  commit(cb) {\r\n    return this.query('COMMIT', cb);\r\n  }\r\n\r\n  rollback(cb) {\r\n    return this.query('ROLLBACK', cb);\r\n  }\r\n\r\n  ping(cb) {\r\n    return this.addCommand(new Commands.Ping(cb));\r\n  }\r\n\r\n  _registerSlave(opts, cb) {\r\n    return this.addCommand(new Commands.RegisterSlave(opts, cb));\r\n  }\r\n\r\n  _binlogDump(opts, cb) {\r\n    return this.addCommand(new Commands.BinlogDump(opts, cb));\r\n  }\r\n\r\n  // currently just alias to close\r\n  destroy() {\r\n    this.close();\r\n  }\r\n\r\n  close() {\r\n    if (this.connectTimeout) {\r\n      Timers.clearTimeout(this.connectTimeout);\r\n      this.connectTimeout = null;\r\n    }\r\n    this._closing = true;\r\n    this.stream.end();\r\n    this.addCommand = this._addCommandClosedState;\r\n  }\r\n\r\n  createBinlogStream(opts) {\r\n    // TODO: create proper stream class\r\n    // TODO: use through2\r\n    let test = 1;\r\n    const stream = new Readable({ objectMode: true });\r\n    stream._read = function () {\r\n      return {\r\n        data: test++,\r\n      };\r\n    };\r\n    this._registerSlave(opts, () => {\r\n      const dumpCmd = this._binlogDump(opts);\r\n      dumpCmd.on('event', (ev) => {\r\n        stream.push(ev);\r\n      });\r\n      dumpCmd.on('eof', () => {\r\n        stream.push(null);\r\n        // if non-blocking, then close stream to prevent errors\r\n        if (opts.flags && opts.flags & 0x01) {\r\n          this.close();\r\n        }\r\n      });\r\n      // TODO: pipe errors as well\r\n    });\r\n    return stream;\r\n  }\r\n\r\n  connect(cb) {\r\n    if (!cb) {\r\n      return;\r\n    }\r\n    if (this._fatalError || this._protocolError) {\r\n      return cb(this._fatalError || this._protocolError);\r\n    }\r\n    if (this._handshakePacket) {\r\n      return cb(null, this);\r\n    }\r\n    let connectCalled = 0;\r\n    function callbackOnce(isErrorHandler) {\r\n      return function (param) {\r\n        if (!connectCalled) {\r\n          if (isErrorHandler) {\r\n            cb(param);\r\n          } else {\r\n            cb(null, param);\r\n          }\r\n        }\r\n        connectCalled = 1;\r\n      };\r\n    }\r\n    this.once('error', callbackOnce(true));\r\n    this.once('connect', callbackOnce(false));\r\n  }\r\n\r\n  // ===================================\r\n  // outgoing server connection methods\r\n  // ===================================\r\n  writeColumns(columns) {\r\n    this.writePacket(Packets.ResultSetHeader.toPacket(columns.length));\r\n    columns.forEach((column) => {\r\n      this.writePacket(\r\n        Packets.ColumnDefinition.toPacket(column, this.serverConfig.encoding)\r\n      );\r\n    });\r\n    this.writeEof();\r\n  }\r\n\r\n  // row is array of columns, not hash\r\n  writeTextRow(column) {\r\n    this.writePacket(\r\n      Packets.TextRow.toPacket(column, this.serverConfig.encoding)\r\n    );\r\n  }\r\n\r\n  writeBinaryRow(column) {\r\n    this.writePacket(\r\n      Packets.BinaryRow.toPacket(column, this.serverConfig.encoding)\r\n    );\r\n  }\r\n\r\n  writeTextResult(rows, columns, binary = false) {\r\n    this.writeColumns(columns);\r\n    rows.forEach((row) => {\r\n      const arrayRow = new Array(columns.length);\r\n      columns.forEach((column) => {\r\n        arrayRow.push(row[column.name]);\r\n      });\r\n      if (binary) {\r\n        this.writeBinaryRow(arrayRow);\r\n      } else this.writeTextRow(arrayRow);\r\n    });\r\n    this.writeEof();\r\n  }\r\n\r\n  writeEof(warnings, statusFlags) {\r\n    this.writePacket(Packets.EOF.toPacket(warnings, statusFlags));\r\n  }\r\n\r\n  writeOk(args) {\r\n    if (!args) {\r\n      args = { affectedRows: 0 };\r\n    }\r\n    this.writePacket(Packets.OK.toPacket(args, this.serverConfig.encoding));\r\n  }\r\n\r\n  writeError(args) {\r\n    // if we want to send error before initial hello was sent, use default encoding\r\n    const encoding = this.serverConfig ? this.serverConfig.encoding : 'cesu8';\r\n    this.writePacket(Packets.Error.toPacket(args, encoding));\r\n  }\r\n\r\n  serverHandshake(args) {\r\n    this.serverConfig = args;\r\n    this.serverConfig.encoding =\r\n      CharsetToEncoding[this.serverConfig.characterSet];\r\n    return this.addCommand(new Commands.ServerHandshake(args));\r\n  }\r\n\r\n  // ===============================================================\r\n  end(callback) {\r\n    if (this.config.isServer) {\r\n      this._closing = true;\r\n      const quitCmd = new EventEmitter();\r\n      setImmediate(() => {\r\n        this.stream.end();\r\n        quitCmd.emit('end');\r\n      });\r\n      return quitCmd;\r\n    }\r\n    // trigger error if more commands enqueued after end command\r\n    const quitCmd = this.addCommand(new Commands.Quit(callback));\r\n    this.addCommand = this._addCommandClosedState;\r\n    return quitCmd;\r\n  }\r\n\r\n  static createQuery(sql, values, cb, config) {\r\n    let options = {\r\n      rowsAsArray: config.rowsAsArray,\r\n      infileStreamFactory: config.infileStreamFactory,\r\n    };\r\n    if (typeof sql === 'object') {\r\n      // query(options, cb)\r\n      options = {\r\n        ...options,\r\n        ...sql,\r\n        sql: sql.sql,\r\n        values: sql.values,\r\n      };\r\n      if (typeof values === 'function') {\r\n        cb = values;\r\n      } else if (values !== undefined) {\r\n        options.values = values;\r\n      }\r\n    } else if (typeof values === 'function') {\r\n      // query(sql, cb)\r\n      cb = values;\r\n      options.sql = sql;\r\n      options.values = undefined;\r\n    } else {\r\n      // query(sql, values, cb)\r\n      options.sql = sql;\r\n      options.values = values;\r\n    }\r\n    return new Commands.Query(options, cb);\r\n  }\r\n\r\n  static statementKey(options) {\r\n    return `${typeof options.nestTables}/${options.nestTables}/${options.rowsAsArray}${options.sql}`;\r\n  }\r\n}\r\n\r\nmodule.exports = BaseConnection;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/base/connection.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/base/pool.js":
/*!**********************************************!*\
  !*** ./node_modules/mysql2/lib/base/pool.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\nconst process = __webpack_require__(/*! process */ \"(middleware)/../../node_modules/process/browser.js\");\r\nconst SqlString = __webpack_require__(/*! sqlstring */ \"(middleware)/./node_modules/sqlstring/index.js\");\r\nconst EventEmitter = (__webpack_require__(/*! events */ \"events\").EventEmitter);\r\nconst PoolConnection = __webpack_require__(/*! ../pool_connection.js */ \"(middleware)/./node_modules/mysql2/lib/pool_connection.js\");\r\nconst Queue = __webpack_require__(/*! denque */ \"(middleware)/./node_modules/denque/index.js\");\r\nconst BaseConnection = __webpack_require__(/*! ./connection.js */ \"(middleware)/./node_modules/mysql2/lib/base/connection.js\");\r\n\r\nfunction spliceConnection(queue, connection) {\r\n  const len = queue.length;\r\n  for (let i = 0; i < len; i++) {\r\n    if (queue.get(i) === connection) {\r\n      queue.removeOne(i);\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nclass BasePool extends EventEmitter {\r\n  constructor(options) {\r\n    super();\r\n    this.config = options.config;\r\n    this.config.connectionConfig.pool = this;\r\n    this._allConnections = new Queue();\r\n    this._freeConnections = new Queue();\r\n    this._connectionQueue = new Queue();\r\n    this._closed = false;\r\n    if (this.config.maxIdle < this.config.connectionLimit) {\r\n      // create idle connection timeout automatically release job\r\n      this._removeIdleTimeoutConnections();\r\n    }\r\n  }\r\n\r\n  getConnection(cb) {\r\n    if (this._closed) {\r\n      return process.nextTick(() => cb(new Error('Pool is closed.')));\r\n    }\r\n    let connection;\r\n    if (this._freeConnections.length > 0) {\r\n      connection = this._freeConnections.pop();\r\n      this.emit('acquire', connection);\r\n      return process.nextTick(() => cb(null, connection));\r\n    }\r\n    if (\r\n      this.config.connectionLimit === 0 ||\r\n      this._allConnections.length < this.config.connectionLimit\r\n    ) {\r\n      connection = new PoolConnection(this, {\r\n        config: this.config.connectionConfig,\r\n      });\r\n      this._allConnections.push(connection);\r\n      return connection.connect((err) => {\r\n        if (this._closed) {\r\n          return cb(new Error('Pool is closed.'));\r\n        }\r\n        if (err) {\r\n          return cb(err);\r\n        }\r\n        this.emit('connection', connection);\r\n        this.emit('acquire', connection);\r\n        return cb(null, connection);\r\n      });\r\n    }\r\n    if (!this.config.waitForConnections) {\r\n      return process.nextTick(() => cb(new Error('No connections available.')));\r\n    }\r\n    if (\r\n      this.config.queueLimit &&\r\n      this._connectionQueue.length >= this.config.queueLimit\r\n    ) {\r\n      return cb(new Error('Queue limit reached.'));\r\n    }\r\n    this.emit('enqueue');\r\n    return this._connectionQueue.push(cb);\r\n  }\r\n\r\n  releaseConnection(connection) {\r\n    let cb;\r\n    if (!connection._pool) {\r\n      // The connection has been removed from the pool and is no longer good.\r\n      if (this._connectionQueue.length) {\r\n        cb = this._connectionQueue.shift();\r\n        process.nextTick(this.getConnection.bind(this, cb));\r\n      }\r\n    } else if (this._connectionQueue.length) {\r\n      cb = this._connectionQueue.shift();\r\n      process.nextTick(cb.bind(null, null, connection));\r\n    } else {\r\n      this._freeConnections.push(connection);\r\n      this.emit('release', connection);\r\n    }\r\n  }\r\n\r\n  end(cb) {\r\n    this._closed = true;\r\n    clearTimeout(this._removeIdleTimeoutConnectionsTimer);\r\n    if (typeof cb !== 'function') {\r\n      cb = function (err) {\r\n        if (err) {\r\n          throw err;\r\n        }\r\n      };\r\n    }\r\n    let calledBack = false;\r\n    let closedConnections = 0;\r\n    let connection;\r\n    const endCB = function (err) {\r\n      if (calledBack) {\r\n        return;\r\n      }\r\n      if (err || ++closedConnections >= this._allConnections.length) {\r\n        calledBack = true;\r\n        cb(err);\r\n        return;\r\n      }\r\n    }.bind(this);\r\n    if (this._allConnections.length === 0) {\r\n      endCB();\r\n      return;\r\n    }\r\n    for (let i = 0; i < this._allConnections.length; i++) {\r\n      connection = this._allConnections.get(i);\r\n      connection._realEnd(endCB);\r\n    }\r\n  }\r\n\r\n  query(sql, values, cb) {\r\n    const cmdQuery = BaseConnection.createQuery(\r\n      sql,\r\n      values,\r\n      cb,\r\n      this.config.connectionConfig\r\n    );\r\n    if (typeof cmdQuery.namedPlaceholders === 'undefined') {\r\n      cmdQuery.namedPlaceholders =\r\n        this.config.connectionConfig.namedPlaceholders;\r\n    }\r\n    this.getConnection((err, conn) => {\r\n      if (err) {\r\n        if (typeof cmdQuery.onResult === 'function') {\r\n          cmdQuery.onResult(err);\r\n        } else {\r\n          cmdQuery.emit('error', err);\r\n        }\r\n        return;\r\n      }\r\n      try {\r\n        conn.query(cmdQuery).once('end', () => {\r\n          conn.release();\r\n        });\r\n      } catch (e) {\r\n        conn.release();\r\n        throw e;\r\n      }\r\n    });\r\n    return cmdQuery;\r\n  }\r\n\r\n  execute(sql, values, cb) {\r\n    // TODO construct execute command first here and pass it to connection.execute\r\n    // so that polymorphic arguments logic is there in one place\r\n    if (typeof values === 'function') {\r\n      cb = values;\r\n      values = [];\r\n    }\r\n    this.getConnection((err, conn) => {\r\n      if (err) {\r\n        return cb(err);\r\n      }\r\n      try {\r\n        conn.execute(sql, values, cb).once('end', () => {\r\n          conn.release();\r\n        });\r\n      } catch (e) {\r\n        conn.release();\r\n        return cb(e);\r\n      }\r\n    });\r\n  }\r\n\r\n  _removeConnection(connection) {\r\n    // Remove connection from all connections\r\n    spliceConnection(this._allConnections, connection);\r\n    // Remove connection from free connections\r\n    spliceConnection(this._freeConnections, connection);\r\n    this.releaseConnection(connection);\r\n  }\r\n\r\n  _removeIdleTimeoutConnections() {\r\n    if (this._removeIdleTimeoutConnectionsTimer) {\r\n      clearTimeout(this._removeIdleTimeoutConnectionsTimer);\r\n    }\r\n\r\n    this._removeIdleTimeoutConnectionsTimer = setTimeout(() => {\r\n      try {\r\n        while (\r\n          this._freeConnections.length > this.config.maxIdle ||\r\n          (this._freeConnections.length > 0 &&\r\n            Date.now() - this._freeConnections.get(0).lastActiveTime >\r\n              this.config.idleTimeout)\r\n        ) {\r\n          this._freeConnections.get(0).destroy();\r\n        }\r\n      } finally {\r\n        this._removeIdleTimeoutConnections();\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  format(sql, values) {\r\n    return SqlString.format(\r\n      sql,\r\n      values,\r\n      this.config.connectionConfig.stringifyObjects,\r\n      this.config.connectionConfig.timezone\r\n    );\r\n  }\r\n\r\n  escape(value) {\r\n    return SqlString.escape(\r\n      value,\r\n      this.config.connectionConfig.stringifyObjects,\r\n      this.config.connectionConfig.timezone\r\n    );\r\n  }\r\n\r\n  escapeId(value) {\r\n    return SqlString.escapeId(value, false);\r\n  }\r\n}\r\n\r\nmodule.exports = BasePool;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/base/pool.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/base/pool_connection.js":
/*!*********************************************************!*\
  !*** ./node_modules/mysql2/lib/base/pool_connection.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\nconst BaseConnection = __webpack_require__(/*! ./connection.js */ \"(middleware)/./node_modules/mysql2/lib/base/connection.js\");\r\n\r\nclass BasePoolConnection extends BaseConnection {\r\n  constructor(pool, options) {\r\n    super(options);\r\n    this._pool = pool;\r\n    // The last active time of this connection\r\n    this.lastActiveTime = Date.now();\r\n    // When a fatal error occurs the connection's protocol ends, which will cause\r\n    // the connection to end as well, thus we only need to watch for the end event\r\n    // and we will be notified of disconnects.\r\n    // REVIEW: Moved to `once`\r\n    this.once('end', () => {\r\n      this._removeFromPool();\r\n    });\r\n    this.once('error', () => {\r\n      this._removeFromPool();\r\n    });\r\n  }\r\n\r\n  release() {\r\n    if (!this._pool || this._pool._closed) {\r\n      return;\r\n    }\r\n    // update last active time\r\n    this.lastActiveTime = Date.now();\r\n    this._pool.releaseConnection(this);\r\n  }\r\n\r\n  end() {\r\n    const err = new Error(\r\n      'Calling conn.end() to release a pooled connection is ' +\r\n        'deprecated. In next version calling conn.end() will be ' +\r\n        'restored to default conn.end() behavior. Use ' +\r\n        'conn.release() instead.'\r\n    );\r\n    this.emit('warn', err);\r\n    console.warn(err.message);\r\n    this.release();\r\n  }\r\n\r\n  destroy() {\r\n    this._removeFromPool();\r\n    super.destroy();\r\n  }\r\n\r\n  _removeFromPool() {\r\n    if (!this._pool || this._pool._closed) {\r\n      return;\r\n    }\r\n    const pool = this._pool;\r\n    this._pool = null;\r\n    pool._removeConnection(this);\r\n  }\r\n}\r\n\r\nBasePoolConnection.statementKey = BaseConnection.statementKey;\r\nmodule.exports = BasePoolConnection;\r\n\r\n// TODO: Remove this when we are removing PoolConnection#end\r\nBasePoolConnection.prototype._realEnd = BaseConnection.prototype.end;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvYmFzZS9wb29sX2Nvbm5lY3Rpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLHVCQUF1QixtQkFBTyxDQUFDLGtGQUFpQjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL2Jhc2UvcG9vbF9jb25uZWN0aW9uLmpzPzdlOTUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxuY29uc3QgQmFzZUNvbm5lY3Rpb24gPSByZXF1aXJlKCcuL2Nvbm5lY3Rpb24uanMnKTtcclxuXHJcbmNsYXNzIEJhc2VQb29sQ29ubmVjdGlvbiBleHRlbmRzIEJhc2VDb25uZWN0aW9uIHtcclxuICBjb25zdHJ1Y3Rvcihwb29sLCBvcHRpb25zKSB7XHJcbiAgICBzdXBlcihvcHRpb25zKTtcclxuICAgIHRoaXMuX3Bvb2wgPSBwb29sO1xyXG4gICAgLy8gVGhlIGxhc3QgYWN0aXZlIHRpbWUgb2YgdGhpcyBjb25uZWN0aW9uXHJcbiAgICB0aGlzLmxhc3RBY3RpdmVUaW1lID0gRGF0ZS5ub3coKTtcclxuICAgIC8vIFdoZW4gYSBmYXRhbCBlcnJvciBvY2N1cnMgdGhlIGNvbm5lY3Rpb24ncyBwcm90b2NvbCBlbmRzLCB3aGljaCB3aWxsIGNhdXNlXHJcbiAgICAvLyB0aGUgY29ubmVjdGlvbiB0byBlbmQgYXMgd2VsbCwgdGh1cyB3ZSBvbmx5IG5lZWQgdG8gd2F0Y2ggZm9yIHRoZSBlbmQgZXZlbnRcclxuICAgIC8vIGFuZCB3ZSB3aWxsIGJlIG5vdGlmaWVkIG9mIGRpc2Nvbm5lY3RzLlxyXG4gICAgLy8gUkVWSUVXOiBNb3ZlZCB0byBgb25jZWBcclxuICAgIHRoaXMub25jZSgnZW5kJywgKCkgPT4ge1xyXG4gICAgICB0aGlzLl9yZW1vdmVGcm9tUG9vbCgpO1xyXG4gICAgfSk7XHJcbiAgICB0aGlzLm9uY2UoJ2Vycm9yJywgKCkgPT4ge1xyXG4gICAgICB0aGlzLl9yZW1vdmVGcm9tUG9vbCgpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICByZWxlYXNlKCkge1xyXG4gICAgaWYgKCF0aGlzLl9wb29sIHx8IHRoaXMuX3Bvb2wuX2Nsb3NlZCkge1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICAvLyB1cGRhdGUgbGFzdCBhY3RpdmUgdGltZVxyXG4gICAgdGhpcy5sYXN0QWN0aXZlVGltZSA9IERhdGUubm93KCk7XHJcbiAgICB0aGlzLl9wb29sLnJlbGVhc2VDb25uZWN0aW9uKHRoaXMpO1xyXG4gIH1cclxuXHJcbiAgZW5kKCkge1xyXG4gICAgY29uc3QgZXJyID0gbmV3IEVycm9yKFxyXG4gICAgICAnQ2FsbGluZyBjb25uLmVuZCgpIHRvIHJlbGVhc2UgYSBwb29sZWQgY29ubmVjdGlvbiBpcyAnICtcclxuICAgICAgICAnZGVwcmVjYXRlZC4gSW4gbmV4dCB2ZXJzaW9uIGNhbGxpbmcgY29ubi5lbmQoKSB3aWxsIGJlICcgK1xyXG4gICAgICAgICdyZXN0b3JlZCB0byBkZWZhdWx0IGNvbm4uZW5kKCkgYmVoYXZpb3IuIFVzZSAnICtcclxuICAgICAgICAnY29ubi5yZWxlYXNlKCkgaW5zdGVhZC4nXHJcbiAgICApO1xyXG4gICAgdGhpcy5lbWl0KCd3YXJuJywgZXJyKTtcclxuICAgIGNvbnNvbGUud2FybihlcnIubWVzc2FnZSk7XHJcbiAgICB0aGlzLnJlbGVhc2UoKTtcclxuICB9XHJcblxyXG4gIGRlc3Ryb3koKSB7XHJcbiAgICB0aGlzLl9yZW1vdmVGcm9tUG9vbCgpO1xyXG4gICAgc3VwZXIuZGVzdHJveSgpO1xyXG4gIH1cclxuXHJcbiAgX3JlbW92ZUZyb21Qb29sKCkge1xyXG4gICAgaWYgKCF0aGlzLl9wb29sIHx8IHRoaXMuX3Bvb2wuX2Nsb3NlZCkge1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBjb25zdCBwb29sID0gdGhpcy5fcG9vbDtcclxuICAgIHRoaXMuX3Bvb2wgPSBudWxsO1xyXG4gICAgcG9vbC5fcmVtb3ZlQ29ubmVjdGlvbih0aGlzKTtcclxuICB9XHJcbn1cclxuXHJcbkJhc2VQb29sQ29ubmVjdGlvbi5zdGF0ZW1lbnRLZXkgPSBCYXNlQ29ubmVjdGlvbi5zdGF0ZW1lbnRLZXk7XHJcbm1vZHVsZS5leHBvcnRzID0gQmFzZVBvb2xDb25uZWN0aW9uO1xyXG5cclxuLy8gVE9ETzogUmVtb3ZlIHRoaXMgd2hlbiB3ZSBhcmUgcmVtb3ZpbmcgUG9vbENvbm5lY3Rpb24jZW5kXHJcbkJhc2VQb29sQ29ubmVjdGlvbi5wcm90b3R5cGUuX3JlYWxFbmQgPSBCYXNlQ29ubmVjdGlvbi5wcm90b3R5cGUuZW5kO1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/base/pool_connection.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/commands/auth_switch.js":
/*!*********************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/auth_switch.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("// This file was modified by Oracle on July 5, 2021.\r\n// Errors generated by asynchronous authentication plugins are now being\r\n// handled and subsequently emitted at the command level.\r\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\r\n\r\n\r\n\r\nconst Packets = __webpack_require__(/*! ../packets/index.js */ \"(middleware)/./node_modules/mysql2/lib/packets/index.js\");\r\nconst sha256_password = __webpack_require__(/*! ../auth_plugins/sha256_password */ \"(middleware)/./node_modules/mysql2/lib/auth_plugins/sha256_password.js\");\r\nconst caching_sha2_password = __webpack_require__(/*! ../auth_plugins/caching_sha2_password.js */ \"(middleware)/./node_modules/mysql2/lib/auth_plugins/caching_sha2_password.js\");\r\nconst mysql_native_password = __webpack_require__(/*! ../auth_plugins/mysql_native_password.js */ \"(middleware)/./node_modules/mysql2/lib/auth_plugins/mysql_native_password.js\");\r\nconst mysql_clear_password = __webpack_require__(/*! ../auth_plugins/mysql_clear_password.js */ \"(middleware)/./node_modules/mysql2/lib/auth_plugins/mysql_clear_password.js\");\r\n\r\nconst standardAuthPlugins = {\r\n  sha256_password: sha256_password({}),\r\n  caching_sha2_password: caching_sha2_password({}),\r\n  mysql_native_password: mysql_native_password({}),\r\n  mysql_clear_password: mysql_clear_password({}),\r\n};\r\n\r\nfunction warnLegacyAuthSwitch() {\r\n  console.warn(\r\n    'WARNING! authSwitchHandler api is deprecated, please use new authPlugins api'\r\n  );\r\n}\r\n\r\nfunction authSwitchPluginError(error, command) {\r\n  // Authentication errors are fatal\r\n  error.code = 'AUTH_SWITCH_PLUGIN_ERROR';\r\n  error.fatal = true;\r\n\r\n  command.emit('error', error);\r\n}\r\n\r\nfunction authSwitchRequest(packet, connection, command) {\r\n  const { pluginName, pluginData } =\r\n    Packets.AuthSwitchRequest.fromPacket(packet);\r\n  let authPlugin =\r\n    connection.config.authPlugins && connection.config.authPlugins[pluginName];\r\n\r\n  // legacy plugin api don't allow to override mysql_native_password\r\n  // if pluginName is mysql_native_password it's using standard auth4.1 auth\r\n  if (\r\n    connection.config.authSwitchHandler &&\r\n    pluginName !== 'mysql_native_password'\r\n  ) {\r\n    const legacySwitchHandler = connection.config.authSwitchHandler;\r\n    warnLegacyAuthSwitch();\r\n    legacySwitchHandler({ pluginName, pluginData }, (err, data) => {\r\n      if (err) {\r\n        return authSwitchPluginError(err, command);\r\n      }\r\n      connection.writePacket(new Packets.AuthSwitchResponse(data).toPacket());\r\n    });\r\n    return;\r\n  }\r\n  if (!authPlugin) {\r\n    authPlugin = standardAuthPlugins[pluginName];\r\n  }\r\n  if (!authPlugin) {\r\n    throw new Error(\r\n      `Server requests authentication using unknown plugin ${pluginName}. See ${'TODO: add plugins doco here'} on how to configure or author authentication plugins.`\r\n    );\r\n  }\r\n  connection._authPlugin = authPlugin({ connection, command });\r\n  Promise.resolve(connection._authPlugin(pluginData))\r\n    .then((data) => {\r\n      if (data) {\r\n        connection.writePacket(new Packets.AuthSwitchResponse(data).toPacket());\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      authSwitchPluginError(err, command);\r\n    });\r\n}\r\n\r\nfunction authSwitchRequestMoreData(packet, connection, command) {\r\n  const { data } = Packets.AuthSwitchRequestMoreData.fromPacket(packet);\r\n\r\n  if (connection.config.authSwitchHandler) {\r\n    const legacySwitchHandler = connection.config.authSwitchHandler;\r\n    warnLegacyAuthSwitch();\r\n    legacySwitchHandler({ pluginData: data }, (err, data) => {\r\n      if (err) {\r\n        return authSwitchPluginError(err, command);\r\n      }\r\n      connection.writePacket(new Packets.AuthSwitchResponse(data).toPacket());\r\n    });\r\n    return;\r\n  }\r\n\r\n  if (!connection._authPlugin) {\r\n    throw new Error(\r\n      'AuthPluginMoreData received but no auth plugin instance found'\r\n    );\r\n  }\r\n  Promise.resolve(connection._authPlugin(data))\r\n    .then((data) => {\r\n      if (data) {\r\n        connection.writePacket(new Packets.AuthSwitchResponse(data).toPacket());\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      authSwitchPluginError(err, command);\r\n    });\r\n}\r\n\r\nmodule.exports = {\r\n  authSwitchRequest,\r\n  authSwitchRequestMoreData,\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29tbWFuZHMvYXV0aF9zd2l0Y2guanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNhO0FBQ2I7QUFDQSxnQkFBZ0IsbUJBQU8sQ0FBQyxvRkFBcUI7QUFDN0Msd0JBQXdCLG1CQUFPLENBQUMsK0dBQWlDO0FBQ2pFLDhCQUE4QixtQkFBTyxDQUFDLDhIQUEwQztBQUNoRiw4QkFBOEIsbUJBQU8sQ0FBQyw4SEFBMEM7QUFDaEYsNkJBQTZCLG1CQUFPLENBQUMsNEhBQXlDO0FBQzlFO0FBQ0E7QUFDQSxxQ0FBcUM7QUFDckMsaURBQWlEO0FBQ2pELGlEQUFpRDtBQUNqRCwrQ0FBK0M7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUseUJBQXlCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQix3QkFBd0I7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2REFBNkQsV0FBVyxRQUFRLCtCQUErQjtBQUMvRztBQUNBO0FBQ0Esd0NBQXdDLHFCQUFxQjtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsVUFBVSxPQUFPO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLGtCQUFrQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb21tYW5kcy9hdXRoX3N3aXRjaC5qcz9iNjcxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRoaXMgZmlsZSB3YXMgbW9kaWZpZWQgYnkgT3JhY2xlIG9uIEp1bHkgNSwgMjAyMS5cclxuLy8gRXJyb3JzIGdlbmVyYXRlZCBieSBhc3luY2hyb25vdXMgYXV0aGVudGljYXRpb24gcGx1Z2lucyBhcmUgbm93IGJlaW5nXHJcbi8vIGhhbmRsZWQgYW5kIHN1YnNlcXVlbnRseSBlbWl0dGVkIGF0IHRoZSBjb21tYW5kIGxldmVsLlxyXG4vLyBNb2RpZmljYXRpb25zIGNvcHlyaWdodCAoYykgMjAyMSwgT3JhY2xlIGFuZC9vciBpdHMgYWZmaWxpYXRlcy5cclxuXHJcbid1c2Ugc3RyaWN0JztcclxuXHJcbmNvbnN0IFBhY2tldHMgPSByZXF1aXJlKCcuLi9wYWNrZXRzL2luZGV4LmpzJyk7XHJcbmNvbnN0IHNoYTI1Nl9wYXNzd29yZCA9IHJlcXVpcmUoJy4uL2F1dGhfcGx1Z2lucy9zaGEyNTZfcGFzc3dvcmQnKTtcclxuY29uc3QgY2FjaGluZ19zaGEyX3Bhc3N3b3JkID0gcmVxdWlyZSgnLi4vYXV0aF9wbHVnaW5zL2NhY2hpbmdfc2hhMl9wYXNzd29yZC5qcycpO1xyXG5jb25zdCBteXNxbF9uYXRpdmVfcGFzc3dvcmQgPSByZXF1aXJlKCcuLi9hdXRoX3BsdWdpbnMvbXlzcWxfbmF0aXZlX3Bhc3N3b3JkLmpzJyk7XHJcbmNvbnN0IG15c3FsX2NsZWFyX3Bhc3N3b3JkID0gcmVxdWlyZSgnLi4vYXV0aF9wbHVnaW5zL215c3FsX2NsZWFyX3Bhc3N3b3JkLmpzJyk7XHJcblxyXG5jb25zdCBzdGFuZGFyZEF1dGhQbHVnaW5zID0ge1xyXG4gIHNoYTI1Nl9wYXNzd29yZDogc2hhMjU2X3Bhc3N3b3JkKHt9KSxcclxuICBjYWNoaW5nX3NoYTJfcGFzc3dvcmQ6IGNhY2hpbmdfc2hhMl9wYXNzd29yZCh7fSksXHJcbiAgbXlzcWxfbmF0aXZlX3Bhc3N3b3JkOiBteXNxbF9uYXRpdmVfcGFzc3dvcmQoe30pLFxyXG4gIG15c3FsX2NsZWFyX3Bhc3N3b3JkOiBteXNxbF9jbGVhcl9wYXNzd29yZCh7fSksXHJcbn07XHJcblxyXG5mdW5jdGlvbiB3YXJuTGVnYWN5QXV0aFN3aXRjaCgpIHtcclxuICBjb25zb2xlLndhcm4oXHJcbiAgICAnV0FSTklORyEgYXV0aFN3aXRjaEhhbmRsZXIgYXBpIGlzIGRlcHJlY2F0ZWQsIHBsZWFzZSB1c2UgbmV3IGF1dGhQbHVnaW5zIGFwaSdcclxuICApO1xyXG59XHJcblxyXG5mdW5jdGlvbiBhdXRoU3dpdGNoUGx1Z2luRXJyb3IoZXJyb3IsIGNvbW1hbmQpIHtcclxuICAvLyBBdXRoZW50aWNhdGlvbiBlcnJvcnMgYXJlIGZhdGFsXHJcbiAgZXJyb3IuY29kZSA9ICdBVVRIX1NXSVRDSF9QTFVHSU5fRVJST1InO1xyXG4gIGVycm9yLmZhdGFsID0gdHJ1ZTtcclxuXHJcbiAgY29tbWFuZC5lbWl0KCdlcnJvcicsIGVycm9yKTtcclxufVxyXG5cclxuZnVuY3Rpb24gYXV0aFN3aXRjaFJlcXVlc3QocGFja2V0LCBjb25uZWN0aW9uLCBjb21tYW5kKSB7XHJcbiAgY29uc3QgeyBwbHVnaW5OYW1lLCBwbHVnaW5EYXRhIH0gPVxyXG4gICAgUGFja2V0cy5BdXRoU3dpdGNoUmVxdWVzdC5mcm9tUGFja2V0KHBhY2tldCk7XHJcbiAgbGV0IGF1dGhQbHVnaW4gPVxyXG4gICAgY29ubmVjdGlvbi5jb25maWcuYXV0aFBsdWdpbnMgJiYgY29ubmVjdGlvbi5jb25maWcuYXV0aFBsdWdpbnNbcGx1Z2luTmFtZV07XHJcblxyXG4gIC8vIGxlZ2FjeSBwbHVnaW4gYXBpIGRvbid0IGFsbG93IHRvIG92ZXJyaWRlIG15c3FsX25hdGl2ZV9wYXNzd29yZFxyXG4gIC8vIGlmIHBsdWdpbk5hbWUgaXMgbXlzcWxfbmF0aXZlX3Bhc3N3b3JkIGl0J3MgdXNpbmcgc3RhbmRhcmQgYXV0aDQuMSBhdXRoXHJcbiAgaWYgKFxyXG4gICAgY29ubmVjdGlvbi5jb25maWcuYXV0aFN3aXRjaEhhbmRsZXIgJiZcclxuICAgIHBsdWdpbk5hbWUgIT09ICdteXNxbF9uYXRpdmVfcGFzc3dvcmQnXHJcbiAgKSB7XHJcbiAgICBjb25zdCBsZWdhY3lTd2l0Y2hIYW5kbGVyID0gY29ubmVjdGlvbi5jb25maWcuYXV0aFN3aXRjaEhhbmRsZXI7XHJcbiAgICB3YXJuTGVnYWN5QXV0aFN3aXRjaCgpO1xyXG4gICAgbGVnYWN5U3dpdGNoSGFuZGxlcih7IHBsdWdpbk5hbWUsIHBsdWdpbkRhdGEgfSwgKGVyciwgZGF0YSkgPT4ge1xyXG4gICAgICBpZiAoZXJyKSB7XHJcbiAgICAgICAgcmV0dXJuIGF1dGhTd2l0Y2hQbHVnaW5FcnJvcihlcnIsIGNvbW1hbmQpO1xyXG4gICAgICB9XHJcbiAgICAgIGNvbm5lY3Rpb24ud3JpdGVQYWNrZXQobmV3IFBhY2tldHMuQXV0aFN3aXRjaFJlc3BvbnNlKGRhdGEpLnRvUGFja2V0KCkpO1xyXG4gICAgfSk7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG4gIGlmICghYXV0aFBsdWdpbikge1xyXG4gICAgYXV0aFBsdWdpbiA9IHN0YW5kYXJkQXV0aFBsdWdpbnNbcGx1Z2luTmFtZV07XHJcbiAgfVxyXG4gIGlmICghYXV0aFBsdWdpbikge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKFxyXG4gICAgICBgU2VydmVyIHJlcXVlc3RzIGF1dGhlbnRpY2F0aW9uIHVzaW5nIHVua25vd24gcGx1Z2luICR7cGx1Z2luTmFtZX0uIFNlZSAkeydUT0RPOiBhZGQgcGx1Z2lucyBkb2NvIGhlcmUnfSBvbiBob3cgdG8gY29uZmlndXJlIG9yIGF1dGhvciBhdXRoZW50aWNhdGlvbiBwbHVnaW5zLmBcclxuICAgICk7XHJcbiAgfVxyXG4gIGNvbm5lY3Rpb24uX2F1dGhQbHVnaW4gPSBhdXRoUGx1Z2luKHsgY29ubmVjdGlvbiwgY29tbWFuZCB9KTtcclxuICBQcm9taXNlLnJlc29sdmUoY29ubmVjdGlvbi5fYXV0aFBsdWdpbihwbHVnaW5EYXRhKSlcclxuICAgIC50aGVuKChkYXRhKSA9PiB7XHJcbiAgICAgIGlmIChkYXRhKSB7XHJcbiAgICAgICAgY29ubmVjdGlvbi53cml0ZVBhY2tldChuZXcgUGFja2V0cy5BdXRoU3dpdGNoUmVzcG9uc2UoZGF0YSkudG9QYWNrZXQoKSk7XHJcbiAgICAgIH1cclxuICAgIH0pXHJcbiAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICBhdXRoU3dpdGNoUGx1Z2luRXJyb3IoZXJyLCBjb21tYW5kKTtcclxuICAgIH0pO1xyXG59XHJcblxyXG5mdW5jdGlvbiBhdXRoU3dpdGNoUmVxdWVzdE1vcmVEYXRhKHBhY2tldCwgY29ubmVjdGlvbiwgY29tbWFuZCkge1xyXG4gIGNvbnN0IHsgZGF0YSB9ID0gUGFja2V0cy5BdXRoU3dpdGNoUmVxdWVzdE1vcmVEYXRhLmZyb21QYWNrZXQocGFja2V0KTtcclxuXHJcbiAgaWYgKGNvbm5lY3Rpb24uY29uZmlnLmF1dGhTd2l0Y2hIYW5kbGVyKSB7XHJcbiAgICBjb25zdCBsZWdhY3lTd2l0Y2hIYW5kbGVyID0gY29ubmVjdGlvbi5jb25maWcuYXV0aFN3aXRjaEhhbmRsZXI7XHJcbiAgICB3YXJuTGVnYWN5QXV0aFN3aXRjaCgpO1xyXG4gICAgbGVnYWN5U3dpdGNoSGFuZGxlcih7IHBsdWdpbkRhdGE6IGRhdGEgfSwgKGVyciwgZGF0YSkgPT4ge1xyXG4gICAgICBpZiAoZXJyKSB7XHJcbiAgICAgICAgcmV0dXJuIGF1dGhTd2l0Y2hQbHVnaW5FcnJvcihlcnIsIGNvbW1hbmQpO1xyXG4gICAgICB9XHJcbiAgICAgIGNvbm5lY3Rpb24ud3JpdGVQYWNrZXQobmV3IFBhY2tldHMuQXV0aFN3aXRjaFJlc3BvbnNlKGRhdGEpLnRvUGFja2V0KCkpO1xyXG4gICAgfSk7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBpZiAoIWNvbm5lY3Rpb24uX2F1dGhQbHVnaW4pIHtcclxuICAgIHRocm93IG5ldyBFcnJvcihcclxuICAgICAgJ0F1dGhQbHVnaW5Nb3JlRGF0YSByZWNlaXZlZCBidXQgbm8gYXV0aCBwbHVnaW4gaW5zdGFuY2UgZm91bmQnXHJcbiAgICApO1xyXG4gIH1cclxuICBQcm9taXNlLnJlc29sdmUoY29ubmVjdGlvbi5fYXV0aFBsdWdpbihkYXRhKSlcclxuICAgIC50aGVuKChkYXRhKSA9PiB7XHJcbiAgICAgIGlmIChkYXRhKSB7XHJcbiAgICAgICAgY29ubmVjdGlvbi53cml0ZVBhY2tldChuZXcgUGFja2V0cy5BdXRoU3dpdGNoUmVzcG9uc2UoZGF0YSkudG9QYWNrZXQoKSk7XHJcbiAgICAgIH1cclxuICAgIH0pXHJcbiAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICBhdXRoU3dpdGNoUGx1Z2luRXJyb3IoZXJyLCBjb21tYW5kKTtcclxuICAgIH0pO1xyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuICBhdXRoU3dpdGNoUmVxdWVzdCxcclxuICBhdXRoU3dpdGNoUmVxdWVzdE1vcmVEYXRhLFxyXG59O1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/commands/auth_switch.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/commands/binlog_dump.js":
/*!*********************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/binlog_dump.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\nconst Command = __webpack_require__(/*! ./command */ \"(middleware)/./node_modules/mysql2/lib/commands/command.js\");\r\nconst Packets = __webpack_require__(/*! ../packets */ \"(middleware)/./node_modules/mysql2/lib/packets/index.js\");\r\n\r\nconst eventParsers = [];\r\n\r\nclass BinlogEventHeader {\r\n  constructor(packet) {\r\n    this.timestamp = packet.readInt32();\r\n    this.eventType = packet.readInt8();\r\n    this.serverId = packet.readInt32();\r\n    this.eventSize = packet.readInt32();\r\n    this.logPos = packet.readInt32();\r\n    this.flags = packet.readInt16();\r\n  }\r\n}\r\n\r\nclass BinlogDump extends Command {\r\n  constructor(opts) {\r\n    super();\r\n    // this.onResult = callback;\r\n    this.opts = opts;\r\n  }\r\n\r\n  start(packet, connection) {\r\n    const newPacket = new Packets.BinlogDump(this.opts);\r\n    connection.writePacket(newPacket.toPacket(1));\r\n    return BinlogDump.prototype.binlogData;\r\n  }\r\n\r\n  binlogData(packet) {\r\n    // ok - continue consuming events\r\n    // error - error\r\n    // eof - end of binlog\r\n    if (packet.isEOF()) {\r\n      this.emit('eof');\r\n      return null;\r\n    }\r\n    // binlog event header\r\n    packet.readInt8();\r\n    const header = new BinlogEventHeader(packet);\r\n    const EventParser = eventParsers[header.eventType];\r\n    let event;\r\n    if (EventParser) {\r\n      event = new EventParser(packet);\r\n    } else {\r\n      event = {\r\n        name: 'UNKNOWN',\r\n      };\r\n    }\r\n    event.header = header;\r\n    this.emit('event', event);\r\n    return BinlogDump.prototype.binlogData;\r\n  }\r\n}\r\n\r\nclass RotateEvent {\r\n  constructor(packet) {\r\n    this.pposition = packet.readInt32();\r\n    // TODO: read uint64 here\r\n    packet.readInt32(); // positionDword2\r\n    this.nextBinlog = packet.readString();\r\n    this.name = 'RotateEvent';\r\n  }\r\n}\r\n\r\nclass FormatDescriptionEvent {\r\n  constructor(packet) {\r\n    this.binlogVersion = packet.readInt16();\r\n    this.serverVersion = packet.readString(50).replace(/\\u0000.*/, ''); // eslint-disable-line no-control-regex\r\n    this.createTimestamp = packet.readInt32();\r\n    this.eventHeaderLength = packet.readInt8(); // should be 19\r\n    this.eventsLength = packet.readBuffer();\r\n    this.name = 'FormatDescriptionEvent';\r\n  }\r\n}\r\n\r\nclass QueryEvent {\r\n  constructor(packet) {\r\n    const parseStatusVars = __webpack_require__(/*! ../packets/binlog_query_statusvars.js */ \"(middleware)/./node_modules/mysql2/lib/packets/binlog_query_statusvars.js\");\r\n    this.slaveProxyId = packet.readInt32();\r\n    this.executionTime = packet.readInt32();\r\n    const schemaLength = packet.readInt8();\r\n    this.errorCode = packet.readInt16();\r\n    const statusVarsLength = packet.readInt16();\r\n    const statusVars = packet.readBuffer(statusVarsLength);\r\n    this.schema = packet.readString(schemaLength);\r\n    packet.readInt8(); // should be zero\r\n    this.statusVars = parseStatusVars(statusVars);\r\n    this.query = packet.readString();\r\n    this.name = 'QueryEvent';\r\n  }\r\n}\r\n\r\nclass XidEvent {\r\n  constructor(packet) {\r\n    this.binlogVersion = packet.readInt16();\r\n    this.xid = packet.readInt64();\r\n    this.name = 'XidEvent';\r\n  }\r\n}\r\n\r\neventParsers[2] = QueryEvent;\r\neventParsers[4] = RotateEvent;\r\neventParsers[15] = FormatDescriptionEvent;\r\neventParsers[16] = XidEvent;\r\n\r\nmodule.exports = BinlogDump;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29tbWFuZHMvYmlubG9nX2R1bXAuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLGdCQUFnQixtQkFBTyxDQUFDLDZFQUFXO0FBQ25DLGdCQUFnQixtQkFBTyxDQUFDLDJFQUFZO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3RUFBd0U7QUFDeEU7QUFDQSxnREFBZ0Q7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsbUJBQU8sQ0FBQyx3SEFBdUM7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb21tYW5kcy9iaW5sb2dfZHVtcC5qcz9jNDUxIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuXHJcbmNvbnN0IENvbW1hbmQgPSByZXF1aXJlKCcuL2NvbW1hbmQnKTtcclxuY29uc3QgUGFja2V0cyA9IHJlcXVpcmUoJy4uL3BhY2tldHMnKTtcclxuXHJcbmNvbnN0IGV2ZW50UGFyc2VycyA9IFtdO1xyXG5cclxuY2xhc3MgQmlubG9nRXZlbnRIZWFkZXIge1xyXG4gIGNvbnN0cnVjdG9yKHBhY2tldCkge1xyXG4gICAgdGhpcy50aW1lc3RhbXAgPSBwYWNrZXQucmVhZEludDMyKCk7XHJcbiAgICB0aGlzLmV2ZW50VHlwZSA9IHBhY2tldC5yZWFkSW50OCgpO1xyXG4gICAgdGhpcy5zZXJ2ZXJJZCA9IHBhY2tldC5yZWFkSW50MzIoKTtcclxuICAgIHRoaXMuZXZlbnRTaXplID0gcGFja2V0LnJlYWRJbnQzMigpO1xyXG4gICAgdGhpcy5sb2dQb3MgPSBwYWNrZXQucmVhZEludDMyKCk7XHJcbiAgICB0aGlzLmZsYWdzID0gcGFja2V0LnJlYWRJbnQxNigpO1xyXG4gIH1cclxufVxyXG5cclxuY2xhc3MgQmlubG9nRHVtcCBleHRlbmRzIENvbW1hbmQge1xyXG4gIGNvbnN0cnVjdG9yKG9wdHMpIHtcclxuICAgIHN1cGVyKCk7XHJcbiAgICAvLyB0aGlzLm9uUmVzdWx0ID0gY2FsbGJhY2s7XHJcbiAgICB0aGlzLm9wdHMgPSBvcHRzO1xyXG4gIH1cclxuXHJcbiAgc3RhcnQocGFja2V0LCBjb25uZWN0aW9uKSB7XHJcbiAgICBjb25zdCBuZXdQYWNrZXQgPSBuZXcgUGFja2V0cy5CaW5sb2dEdW1wKHRoaXMub3B0cyk7XHJcbiAgICBjb25uZWN0aW9uLndyaXRlUGFja2V0KG5ld1BhY2tldC50b1BhY2tldCgxKSk7XHJcbiAgICByZXR1cm4gQmlubG9nRHVtcC5wcm90b3R5cGUuYmlubG9nRGF0YTtcclxuICB9XHJcblxyXG4gIGJpbmxvZ0RhdGEocGFja2V0KSB7XHJcbiAgICAvLyBvayAtIGNvbnRpbnVlIGNvbnN1bWluZyBldmVudHNcclxuICAgIC8vIGVycm9yIC0gZXJyb3JcclxuICAgIC8vIGVvZiAtIGVuZCBvZiBiaW5sb2dcclxuICAgIGlmIChwYWNrZXQuaXNFT0YoKSkge1xyXG4gICAgICB0aGlzLmVtaXQoJ2VvZicpO1xyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuICAgIC8vIGJpbmxvZyBldmVudCBoZWFkZXJcclxuICAgIHBhY2tldC5yZWFkSW50OCgpO1xyXG4gICAgY29uc3QgaGVhZGVyID0gbmV3IEJpbmxvZ0V2ZW50SGVhZGVyKHBhY2tldCk7XHJcbiAgICBjb25zdCBFdmVudFBhcnNlciA9IGV2ZW50UGFyc2Vyc1toZWFkZXIuZXZlbnRUeXBlXTtcclxuICAgIGxldCBldmVudDtcclxuICAgIGlmIChFdmVudFBhcnNlcikge1xyXG4gICAgICBldmVudCA9IG5ldyBFdmVudFBhcnNlcihwYWNrZXQpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgZXZlbnQgPSB7XHJcbiAgICAgICAgbmFtZTogJ1VOS05PV04nLFxyXG4gICAgICB9O1xyXG4gICAgfVxyXG4gICAgZXZlbnQuaGVhZGVyID0gaGVhZGVyO1xyXG4gICAgdGhpcy5lbWl0KCdldmVudCcsIGV2ZW50KTtcclxuICAgIHJldHVybiBCaW5sb2dEdW1wLnByb3RvdHlwZS5iaW5sb2dEYXRhO1xyXG4gIH1cclxufVxyXG5cclxuY2xhc3MgUm90YXRlRXZlbnQge1xyXG4gIGNvbnN0cnVjdG9yKHBhY2tldCkge1xyXG4gICAgdGhpcy5wcG9zaXRpb24gPSBwYWNrZXQucmVhZEludDMyKCk7XHJcbiAgICAvLyBUT0RPOiByZWFkIHVpbnQ2NCBoZXJlXHJcbiAgICBwYWNrZXQucmVhZEludDMyKCk7IC8vIHBvc2l0aW9uRHdvcmQyXHJcbiAgICB0aGlzLm5leHRCaW5sb2cgPSBwYWNrZXQucmVhZFN0cmluZygpO1xyXG4gICAgdGhpcy5uYW1lID0gJ1JvdGF0ZUV2ZW50JztcclxuICB9XHJcbn1cclxuXHJcbmNsYXNzIEZvcm1hdERlc2NyaXB0aW9uRXZlbnQge1xyXG4gIGNvbnN0cnVjdG9yKHBhY2tldCkge1xyXG4gICAgdGhpcy5iaW5sb2dWZXJzaW9uID0gcGFja2V0LnJlYWRJbnQxNigpO1xyXG4gICAgdGhpcy5zZXJ2ZXJWZXJzaW9uID0gcGFja2V0LnJlYWRTdHJpbmcoNTApLnJlcGxhY2UoL1xcdTAwMDAuKi8sICcnKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1jb250cm9sLXJlZ2V4XHJcbiAgICB0aGlzLmNyZWF0ZVRpbWVzdGFtcCA9IHBhY2tldC5yZWFkSW50MzIoKTtcclxuICAgIHRoaXMuZXZlbnRIZWFkZXJMZW5ndGggPSBwYWNrZXQucmVhZEludDgoKTsgLy8gc2hvdWxkIGJlIDE5XHJcbiAgICB0aGlzLmV2ZW50c0xlbmd0aCA9IHBhY2tldC5yZWFkQnVmZmVyKCk7XHJcbiAgICB0aGlzLm5hbWUgPSAnRm9ybWF0RGVzY3JpcHRpb25FdmVudCc7XHJcbiAgfVxyXG59XHJcblxyXG5jbGFzcyBRdWVyeUV2ZW50IHtcclxuICBjb25zdHJ1Y3RvcihwYWNrZXQpIHtcclxuICAgIGNvbnN0IHBhcnNlU3RhdHVzVmFycyA9IHJlcXVpcmUoJy4uL3BhY2tldHMvYmlubG9nX3F1ZXJ5X3N0YXR1c3ZhcnMuanMnKTtcclxuICAgIHRoaXMuc2xhdmVQcm94eUlkID0gcGFja2V0LnJlYWRJbnQzMigpO1xyXG4gICAgdGhpcy5leGVjdXRpb25UaW1lID0gcGFja2V0LnJlYWRJbnQzMigpO1xyXG4gICAgY29uc3Qgc2NoZW1hTGVuZ3RoID0gcGFja2V0LnJlYWRJbnQ4KCk7XHJcbiAgICB0aGlzLmVycm9yQ29kZSA9IHBhY2tldC5yZWFkSW50MTYoKTtcclxuICAgIGNvbnN0IHN0YXR1c1ZhcnNMZW5ndGggPSBwYWNrZXQucmVhZEludDE2KCk7XHJcbiAgICBjb25zdCBzdGF0dXNWYXJzID0gcGFja2V0LnJlYWRCdWZmZXIoc3RhdHVzVmFyc0xlbmd0aCk7XHJcbiAgICB0aGlzLnNjaGVtYSA9IHBhY2tldC5yZWFkU3RyaW5nKHNjaGVtYUxlbmd0aCk7XHJcbiAgICBwYWNrZXQucmVhZEludDgoKTsgLy8gc2hvdWxkIGJlIHplcm9cclxuICAgIHRoaXMuc3RhdHVzVmFycyA9IHBhcnNlU3RhdHVzVmFycyhzdGF0dXNWYXJzKTtcclxuICAgIHRoaXMucXVlcnkgPSBwYWNrZXQucmVhZFN0cmluZygpO1xyXG4gICAgdGhpcy5uYW1lID0gJ1F1ZXJ5RXZlbnQnO1xyXG4gIH1cclxufVxyXG5cclxuY2xhc3MgWGlkRXZlbnQge1xyXG4gIGNvbnN0cnVjdG9yKHBhY2tldCkge1xyXG4gICAgdGhpcy5iaW5sb2dWZXJzaW9uID0gcGFja2V0LnJlYWRJbnQxNigpO1xyXG4gICAgdGhpcy54aWQgPSBwYWNrZXQucmVhZEludDY0KCk7XHJcbiAgICB0aGlzLm5hbWUgPSAnWGlkRXZlbnQnO1xyXG4gIH1cclxufVxyXG5cclxuZXZlbnRQYXJzZXJzWzJdID0gUXVlcnlFdmVudDtcclxuZXZlbnRQYXJzZXJzWzRdID0gUm90YXRlRXZlbnQ7XHJcbmV2ZW50UGFyc2Vyc1sxNV0gPSBGb3JtYXREZXNjcmlwdGlvbkV2ZW50O1xyXG5ldmVudFBhcnNlcnNbMTZdID0gWGlkRXZlbnQ7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IEJpbmxvZ0R1bXA7XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/commands/binlog_dump.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/commands/change_user.js":
/*!*********************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/change_user.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("// This file was modified by Oracle on September 21, 2021.\r\n// The changes involve saving additional authentication factor passwords\r\n// in the command scope and enabling multi-factor authentication in the\r\n// client-side when the server supports it.\r\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\r\n\r\n\r\n\r\nconst Command = __webpack_require__(/*! ./command.js */ \"(middleware)/./node_modules/mysql2/lib/commands/command.js\");\r\nconst Packets = __webpack_require__(/*! ../packets/index.js */ \"(middleware)/./node_modules/mysql2/lib/packets/index.js\");\r\nconst ClientConstants = __webpack_require__(/*! ../constants/client */ \"(middleware)/./node_modules/mysql2/lib/constants/client.js\");\r\nconst ClientHandshake = __webpack_require__(/*! ./client_handshake.js */ \"(middleware)/./node_modules/mysql2/lib/commands/client_handshake.js\");\r\nconst CharsetToEncoding = __webpack_require__(/*! ../constants/charset_encodings.js */ \"(middleware)/./node_modules/mysql2/lib/constants/charset_encodings.js\");\r\n\r\nclass ChangeUser extends Command {\r\n  constructor(options, callback) {\r\n    super();\r\n    this.onResult = callback;\r\n    this.user = options.user;\r\n    this.password = options.password;\r\n    // \"password1\" is an alias of \"password\"\r\n    this.password1 = options.password;\r\n    this.password2 = options.password2;\r\n    this.password3 = options.password3;\r\n    this.database = options.database;\r\n    this.passwordSha1 = options.passwordSha1;\r\n    this.charsetNumber = options.charsetNumber;\r\n    this.currentConfig = options.currentConfig;\r\n    this.authenticationFactor = 0;\r\n  }\r\n  start(packet, connection) {\r\n    const newPacket = new Packets.ChangeUser({\r\n      flags: connection.config.clientFlags,\r\n      user: this.user,\r\n      database: this.database,\r\n      charsetNumber: this.charsetNumber,\r\n      password: this.password,\r\n      passwordSha1: this.passwordSha1,\r\n      authPluginData1: connection._handshakePacket.authPluginData1,\r\n      authPluginData2: connection._handshakePacket.authPluginData2,\r\n    });\r\n    this.currentConfig.user = this.user;\r\n    this.currentConfig.password = this.password;\r\n    this.currentConfig.database = this.database;\r\n    this.currentConfig.charsetNumber = this.charsetNumber;\r\n    connection.clientEncoding = CharsetToEncoding[this.charsetNumber];\r\n    // clear prepared statements cache as all statements become invalid after changeUser\r\n    connection._statements.clear();\r\n    connection.writePacket(newPacket.toPacket());\r\n    // check if the server supports multi-factor authentication\r\n    const multiFactorAuthentication =\r\n      connection.serverCapabilityFlags &\r\n      ClientConstants.MULTI_FACTOR_AUTHENTICATION;\r\n    if (multiFactorAuthentication) {\r\n      // if the server supports multi-factor authentication, we enable it in\r\n      // the client\r\n      this.authenticationFactor = 1;\r\n    }\r\n    return ChangeUser.prototype.handshakeResult;\r\n  }\r\n}\r\n\r\nChangeUser.prototype.handshakeResult =\r\n  ClientHandshake.prototype.handshakeResult;\r\nChangeUser.prototype.calculateNativePasswordAuthToken =\r\n  ClientHandshake.prototype.calculateNativePasswordAuthToken;\r\n\r\nmodule.exports = ChangeUser;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29tbWFuZHMvY2hhbmdlX3VzZXIuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2E7QUFDYjtBQUNBLGdCQUFnQixtQkFBTyxDQUFDLGdGQUFjO0FBQ3RDLGdCQUFnQixtQkFBTyxDQUFDLG9GQUFxQjtBQUM3Qyx3QkFBd0IsbUJBQU8sQ0FBQyx1RkFBcUI7QUFDckQsd0JBQXdCLG1CQUFPLENBQUMsa0dBQXVCO0FBQ3ZELDBCQUEwQixtQkFBTyxDQUFDLGdIQUFtQztBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL2NvbW1hbmRzL2NoYW5nZV91c2VyLmpzPzA1YzIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhpcyBmaWxlIHdhcyBtb2RpZmllZCBieSBPcmFjbGUgb24gU2VwdGVtYmVyIDIxLCAyMDIxLlxyXG4vLyBUaGUgY2hhbmdlcyBpbnZvbHZlIHNhdmluZyBhZGRpdGlvbmFsIGF1dGhlbnRpY2F0aW9uIGZhY3RvciBwYXNzd29yZHNcclxuLy8gaW4gdGhlIGNvbW1hbmQgc2NvcGUgYW5kIGVuYWJsaW5nIG11bHRpLWZhY3RvciBhdXRoZW50aWNhdGlvbiBpbiB0aGVcclxuLy8gY2xpZW50LXNpZGUgd2hlbiB0aGUgc2VydmVyIHN1cHBvcnRzIGl0LlxyXG4vLyBNb2RpZmljYXRpb25zIGNvcHlyaWdodCAoYykgMjAyMSwgT3JhY2xlIGFuZC9vciBpdHMgYWZmaWxpYXRlcy5cclxuXHJcbid1c2Ugc3RyaWN0JztcclxuXHJcbmNvbnN0IENvbW1hbmQgPSByZXF1aXJlKCcuL2NvbW1hbmQuanMnKTtcclxuY29uc3QgUGFja2V0cyA9IHJlcXVpcmUoJy4uL3BhY2tldHMvaW5kZXguanMnKTtcclxuY29uc3QgQ2xpZW50Q29uc3RhbnRzID0gcmVxdWlyZSgnLi4vY29uc3RhbnRzL2NsaWVudCcpO1xyXG5jb25zdCBDbGllbnRIYW5kc2hha2UgPSByZXF1aXJlKCcuL2NsaWVudF9oYW5kc2hha2UuanMnKTtcclxuY29uc3QgQ2hhcnNldFRvRW5jb2RpbmcgPSByZXF1aXJlKCcuLi9jb25zdGFudHMvY2hhcnNldF9lbmNvZGluZ3MuanMnKTtcclxuXHJcbmNsYXNzIENoYW5nZVVzZXIgZXh0ZW5kcyBDb21tYW5kIHtcclxuICBjb25zdHJ1Y3RvcihvcHRpb25zLCBjYWxsYmFjaykge1xyXG4gICAgc3VwZXIoKTtcclxuICAgIHRoaXMub25SZXN1bHQgPSBjYWxsYmFjaztcclxuICAgIHRoaXMudXNlciA9IG9wdGlvbnMudXNlcjtcclxuICAgIHRoaXMucGFzc3dvcmQgPSBvcHRpb25zLnBhc3N3b3JkO1xyXG4gICAgLy8gXCJwYXNzd29yZDFcIiBpcyBhbiBhbGlhcyBvZiBcInBhc3N3b3JkXCJcclxuICAgIHRoaXMucGFzc3dvcmQxID0gb3B0aW9ucy5wYXNzd29yZDtcclxuICAgIHRoaXMucGFzc3dvcmQyID0gb3B0aW9ucy5wYXNzd29yZDI7XHJcbiAgICB0aGlzLnBhc3N3b3JkMyA9IG9wdGlvbnMucGFzc3dvcmQzO1xyXG4gICAgdGhpcy5kYXRhYmFzZSA9IG9wdGlvbnMuZGF0YWJhc2U7XHJcbiAgICB0aGlzLnBhc3N3b3JkU2hhMSA9IG9wdGlvbnMucGFzc3dvcmRTaGExO1xyXG4gICAgdGhpcy5jaGFyc2V0TnVtYmVyID0gb3B0aW9ucy5jaGFyc2V0TnVtYmVyO1xyXG4gICAgdGhpcy5jdXJyZW50Q29uZmlnID0gb3B0aW9ucy5jdXJyZW50Q29uZmlnO1xyXG4gICAgdGhpcy5hdXRoZW50aWNhdGlvbkZhY3RvciA9IDA7XHJcbiAgfVxyXG4gIHN0YXJ0KHBhY2tldCwgY29ubmVjdGlvbikge1xyXG4gICAgY29uc3QgbmV3UGFja2V0ID0gbmV3IFBhY2tldHMuQ2hhbmdlVXNlcih7XHJcbiAgICAgIGZsYWdzOiBjb25uZWN0aW9uLmNvbmZpZy5jbGllbnRGbGFncyxcclxuICAgICAgdXNlcjogdGhpcy51c2VyLFxyXG4gICAgICBkYXRhYmFzZTogdGhpcy5kYXRhYmFzZSxcclxuICAgICAgY2hhcnNldE51bWJlcjogdGhpcy5jaGFyc2V0TnVtYmVyLFxyXG4gICAgICBwYXNzd29yZDogdGhpcy5wYXNzd29yZCxcclxuICAgICAgcGFzc3dvcmRTaGExOiB0aGlzLnBhc3N3b3JkU2hhMSxcclxuICAgICAgYXV0aFBsdWdpbkRhdGExOiBjb25uZWN0aW9uLl9oYW5kc2hha2VQYWNrZXQuYXV0aFBsdWdpbkRhdGExLFxyXG4gICAgICBhdXRoUGx1Z2luRGF0YTI6IGNvbm5lY3Rpb24uX2hhbmRzaGFrZVBhY2tldC5hdXRoUGx1Z2luRGF0YTIsXHJcbiAgICB9KTtcclxuICAgIHRoaXMuY3VycmVudENvbmZpZy51c2VyID0gdGhpcy51c2VyO1xyXG4gICAgdGhpcy5jdXJyZW50Q29uZmlnLnBhc3N3b3JkID0gdGhpcy5wYXNzd29yZDtcclxuICAgIHRoaXMuY3VycmVudENvbmZpZy5kYXRhYmFzZSA9IHRoaXMuZGF0YWJhc2U7XHJcbiAgICB0aGlzLmN1cnJlbnRDb25maWcuY2hhcnNldE51bWJlciA9IHRoaXMuY2hhcnNldE51bWJlcjtcclxuICAgIGNvbm5lY3Rpb24uY2xpZW50RW5jb2RpbmcgPSBDaGFyc2V0VG9FbmNvZGluZ1t0aGlzLmNoYXJzZXROdW1iZXJdO1xyXG4gICAgLy8gY2xlYXIgcHJlcGFyZWQgc3RhdGVtZW50cyBjYWNoZSBhcyBhbGwgc3RhdGVtZW50cyBiZWNvbWUgaW52YWxpZCBhZnRlciBjaGFuZ2VVc2VyXHJcbiAgICBjb25uZWN0aW9uLl9zdGF0ZW1lbnRzLmNsZWFyKCk7XHJcbiAgICBjb25uZWN0aW9uLndyaXRlUGFja2V0KG5ld1BhY2tldC50b1BhY2tldCgpKTtcclxuICAgIC8vIGNoZWNrIGlmIHRoZSBzZXJ2ZXIgc3VwcG9ydHMgbXVsdGktZmFjdG9yIGF1dGhlbnRpY2F0aW9uXHJcbiAgICBjb25zdCBtdWx0aUZhY3RvckF1dGhlbnRpY2F0aW9uID1cclxuICAgICAgY29ubmVjdGlvbi5zZXJ2ZXJDYXBhYmlsaXR5RmxhZ3MgJlxyXG4gICAgICBDbGllbnRDb25zdGFudHMuTVVMVElfRkFDVE9SX0FVVEhFTlRJQ0FUSU9OO1xyXG4gICAgaWYgKG11bHRpRmFjdG9yQXV0aGVudGljYXRpb24pIHtcclxuICAgICAgLy8gaWYgdGhlIHNlcnZlciBzdXBwb3J0cyBtdWx0aS1mYWN0b3IgYXV0aGVudGljYXRpb24sIHdlIGVuYWJsZSBpdCBpblxyXG4gICAgICAvLyB0aGUgY2xpZW50XHJcbiAgICAgIHRoaXMuYXV0aGVudGljYXRpb25GYWN0b3IgPSAxO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIENoYW5nZVVzZXIucHJvdG90eXBlLmhhbmRzaGFrZVJlc3VsdDtcclxuICB9XHJcbn1cclxuXHJcbkNoYW5nZVVzZXIucHJvdG90eXBlLmhhbmRzaGFrZVJlc3VsdCA9XHJcbiAgQ2xpZW50SGFuZHNoYWtlLnByb3RvdHlwZS5oYW5kc2hha2VSZXN1bHQ7XHJcbkNoYW5nZVVzZXIucHJvdG90eXBlLmNhbGN1bGF0ZU5hdGl2ZVBhc3N3b3JkQXV0aFRva2VuID1cclxuICBDbGllbnRIYW5kc2hha2UucHJvdG90eXBlLmNhbGN1bGF0ZU5hdGl2ZVBhc3N3b3JkQXV0aFRva2VuO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBDaGFuZ2VVc2VyO1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/commands/change_user.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/commands/client_handshake.js":
/*!**************************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/client_handshake.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("// This file was modified by Oracle on June 17, 2021.\r\n// Handshake errors are now maked as fatal and the corresponding events are\r\n// emitted in the command instance itself.\r\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\r\n\r\n// This file was modified by Oracle on September 21, 2021.\r\n// Handshake workflow now supports additional authentication factors requested\r\n// by the server.\r\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\r\n\r\n\r\n\r\nconst Command = __webpack_require__(/*! ./command.js */ \"(middleware)/./node_modules/mysql2/lib/commands/command.js\");\r\nconst Packets = __webpack_require__(/*! ../packets/index.js */ \"(middleware)/./node_modules/mysql2/lib/packets/index.js\");\r\nconst ClientConstants = __webpack_require__(/*! ../constants/client.js */ \"(middleware)/./node_modules/mysql2/lib/constants/client.js\");\r\nconst CharsetToEncoding = __webpack_require__(/*! ../constants/charset_encodings.js */ \"(middleware)/./node_modules/mysql2/lib/constants/charset_encodings.js\");\r\nconst auth41 = __webpack_require__(/*! ../auth_41.js */ \"(middleware)/./node_modules/mysql2/lib/auth_41.js\");\r\n\r\nfunction flagNames(flags) {\r\n  const res = [];\r\n  for (const c in ClientConstants) {\r\n    if (flags & ClientConstants[c]) {\r\n      res.push(c.replace(/_/g, ' ').toLowerCase());\r\n    }\r\n  }\r\n  return res;\r\n}\r\n\r\nclass ClientHandshake extends Command {\r\n  constructor(clientFlags) {\r\n    super();\r\n    this.handshake = null;\r\n    this.clientFlags = clientFlags;\r\n    this.authenticationFactor = 0;\r\n  }\r\n\r\n  start() {\r\n    return ClientHandshake.prototype.handshakeInit;\r\n  }\r\n\r\n  sendSSLRequest(connection) {\r\n    const sslRequest = new Packets.SSLRequest(\r\n      this.clientFlags,\r\n      connection.config.charsetNumber\r\n    );\r\n    connection.writePacket(sslRequest.toPacket());\r\n  }\r\n\r\n  sendCredentials(connection) {\r\n    if (connection.config.debug) {\r\n      // eslint-disable-next-line\r\n      console.log(\r\n        'Sending handshake packet: flags:%d=(%s)',\r\n        this.clientFlags,\r\n        flagNames(this.clientFlags).join(', ')\r\n      );\r\n    }\r\n    this.user = connection.config.user;\r\n    this.password = connection.config.password;\r\n    // \"password1\" is an alias to the original \"password\" value\r\n    // to make it easier to integrate multi-factor authentication\r\n    this.password1 = connection.config.password;\r\n    // \"password2\" and \"password3\" are the 2nd and 3rd factor authentication\r\n    // passwords, which can be undefined depending on the authentication\r\n    // plugin being used\r\n    this.password2 = connection.config.password2;\r\n    this.password3 = connection.config.password3;\r\n    this.passwordSha1 = connection.config.passwordSha1;\r\n    this.database = connection.config.database;\r\n    this.authPluginName = this.handshake.authPluginName;\r\n    const handshakeResponse = new Packets.HandshakeResponse({\r\n      flags: this.clientFlags,\r\n      user: this.user,\r\n      database: this.database,\r\n      password: this.password,\r\n      passwordSha1: this.passwordSha1,\r\n      charsetNumber: connection.config.charsetNumber,\r\n      authPluginData1: this.handshake.authPluginData1,\r\n      authPluginData2: this.handshake.authPluginData2,\r\n      compress: connection.config.compress,\r\n      connectAttributes: connection.config.connectAttributes,\r\n    });\r\n    connection.writePacket(handshakeResponse.toPacket());\r\n  }\r\n\r\n  calculateNativePasswordAuthToken(authPluginData) {\r\n    // TODO: dont split into authPluginData1 and authPluginData2, instead join when 1 & 2 received\r\n    const authPluginData1 = authPluginData.slice(0, 8);\r\n    const authPluginData2 = authPluginData.slice(8, 20);\r\n    let authToken;\r\n    if (this.passwordSha1) {\r\n      authToken = auth41.calculateTokenFromPasswordSha(\r\n        this.passwordSha1,\r\n        authPluginData1,\r\n        authPluginData2\r\n      );\r\n    } else {\r\n      authToken = auth41.calculateToken(\r\n        this.password,\r\n        authPluginData1,\r\n        authPluginData2\r\n      );\r\n    }\r\n    return authToken;\r\n  }\r\n\r\n  handshakeInit(helloPacket, connection) {\r\n    this.on('error', (e) => {\r\n      connection._fatalError = e;\r\n      connection._protocolError = e;\r\n    });\r\n    this.handshake = Packets.Handshake.fromPacket(helloPacket);\r\n    if (connection.config.debug) {\r\n      // eslint-disable-next-line\r\n      console.log(\r\n        'Server hello packet: capability flags:%d=(%s)',\r\n        this.handshake.capabilityFlags,\r\n        flagNames(this.handshake.capabilityFlags).join(', ')\r\n      );\r\n    }\r\n    connection.serverCapabilityFlags = this.handshake.capabilityFlags;\r\n    connection.serverEncoding = CharsetToEncoding[this.handshake.characterSet];\r\n    connection.connectionId = this.handshake.connectionId;\r\n    const serverSSLSupport =\r\n      this.handshake.capabilityFlags & ClientConstants.SSL;\r\n    // multi factor authentication is enabled with the\r\n    // \"MULTI_FACTOR_AUTHENTICATION\" capability and should only be used if it\r\n    // is supported by the server\r\n    const multiFactorAuthentication =\r\n      this.handshake.capabilityFlags &\r\n      ClientConstants.MULTI_FACTOR_AUTHENTICATION;\r\n    this.clientFlags = this.clientFlags | multiFactorAuthentication;\r\n    // use compression only if requested by client and supported by server\r\n    connection.config.compress =\r\n      connection.config.compress &&\r\n      this.handshake.capabilityFlags & ClientConstants.COMPRESS;\r\n    this.clientFlags = this.clientFlags | connection.config.compress;\r\n    if (connection.config.ssl) {\r\n      // client requires SSL but server does not support it\r\n      if (!serverSSLSupport) {\r\n        const err = new Error('Server does not support secure connection');\r\n        err.code = 'HANDSHAKE_NO_SSL_SUPPORT';\r\n        err.fatal = true;\r\n        this.emit('error', err);\r\n        return false;\r\n      }\r\n      // send ssl upgrade request and immediately upgrade connection to secure\r\n      this.clientFlags |= ClientConstants.SSL;\r\n      this.sendSSLRequest(connection);\r\n      connection.startTLS((err) => {\r\n        // after connection is secure\r\n        if (err) {\r\n          // SSL negotiation error are fatal\r\n          err.code = 'HANDSHAKE_SSL_ERROR';\r\n          err.fatal = true;\r\n          this.emit('error', err);\r\n          return;\r\n        }\r\n        // rest of communication is encrypted\r\n        this.sendCredentials(connection);\r\n      });\r\n    } else {\r\n      this.sendCredentials(connection);\r\n    }\r\n    if (multiFactorAuthentication) {\r\n      // if the server supports multi-factor authentication, we enable it in\r\n      // the client\r\n      this.authenticationFactor = 1;\r\n    }\r\n    return ClientHandshake.prototype.handshakeResult;\r\n  }\r\n\r\n  handshakeResult(packet, connection) {\r\n    const marker = packet.peekByte();\r\n    // packet can be OK_Packet, ERR_Packet, AuthSwitchRequest, AuthNextFactor\r\n    // or AuthMoreData\r\n    if (marker === 0xfe || marker === 1 || marker === 0x02) {\r\n      const authSwitch = __webpack_require__(/*! ./auth_switch */ \"(middleware)/./node_modules/mysql2/lib/commands/auth_switch.js\");\r\n      try {\r\n        if (marker === 1) {\r\n          authSwitch.authSwitchRequestMoreData(packet, connection, this);\r\n        } else {\r\n          // if authenticationFactor === 0, it means the server does not support\r\n          // the multi-factor authentication capability\r\n          if (this.authenticationFactor !== 0) {\r\n            // if we are past the first authentication factor, we should use the\r\n            // corresponding password (if there is one)\r\n            connection.config.password =\r\n              this[`password${this.authenticationFactor}`];\r\n            // update the current authentication factor\r\n            this.authenticationFactor += 1;\r\n          }\r\n          // if marker === 0x02, it means it is an AuthNextFactor packet,\r\n          // which is similar in structure to an AuthSwitchRequest packet,\r\n          // so, we can use it directly\r\n          authSwitch.authSwitchRequest(packet, connection, this);\r\n        }\r\n        return ClientHandshake.prototype.handshakeResult;\r\n      } catch (err) {\r\n        // Authentication errors are fatal\r\n        err.code = 'AUTH_SWITCH_PLUGIN_ERROR';\r\n        err.fatal = true;\r\n\r\n        if (this.onResult) {\r\n          this.onResult(err);\r\n        } else {\r\n          this.emit('error', err);\r\n        }\r\n        return null;\r\n      }\r\n    }\r\n    if (marker !== 0) {\r\n      const err = new Error('Unexpected packet during handshake phase');\r\n      // Unknown handshake errors are fatal\r\n      err.code = 'HANDSHAKE_UNKNOWN_ERROR';\r\n      err.fatal = true;\r\n\r\n      if (this.onResult) {\r\n        this.onResult(err);\r\n      } else {\r\n        this.emit('error', err);\r\n      }\r\n      return null;\r\n    }\r\n    // this should be called from ClientHandshake command only\r\n    // and skipped when called from ChangeUser command\r\n    if (!connection.authorized) {\r\n      connection.authorized = true;\r\n      if (connection.config.compress) {\r\n        const enableCompression =\r\n          (__webpack_require__(/*! ../compressed_protocol.js */ \"(middleware)/./node_modules/mysql2/lib/compressed_protocol.js\").enableCompression);\r\n        enableCompression(connection);\r\n      }\r\n    }\r\n    if (this.onResult) {\r\n      this.onResult(null);\r\n    }\r\n    return null;\r\n  }\r\n}\r\nmodule.exports = ClientHandshake;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29tbWFuZHMvY2xpZW50X2hhbmRzaGFrZS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNhO0FBQ2I7QUFDQSxnQkFBZ0IsbUJBQU8sQ0FBQyxnRkFBYztBQUN0QyxnQkFBZ0IsbUJBQU8sQ0FBQyxvRkFBcUI7QUFDN0Msd0JBQXdCLG1CQUFPLENBQUMsMEZBQXdCO0FBQ3hELDBCQUEwQixtQkFBTyxDQUFDLGdIQUFtQztBQUNyRSxlQUFlLG1CQUFPLENBQUMsd0VBQWU7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLG1CQUFPLENBQUMscUZBQWU7QUFDaEQ7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QiwwQkFBMEI7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUseUlBQXNEO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL2NvbW1hbmRzL2NsaWVudF9oYW5kc2hha2UuanM/YzA3NCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGlzIGZpbGUgd2FzIG1vZGlmaWVkIGJ5IE9yYWNsZSBvbiBKdW5lIDE3LCAyMDIxLlxyXG4vLyBIYW5kc2hha2UgZXJyb3JzIGFyZSBub3cgbWFrZWQgYXMgZmF0YWwgYW5kIHRoZSBjb3JyZXNwb25kaW5nIGV2ZW50cyBhcmVcclxuLy8gZW1pdHRlZCBpbiB0aGUgY29tbWFuZCBpbnN0YW5jZSBpdHNlbGYuXHJcbi8vIE1vZGlmaWNhdGlvbnMgY29weXJpZ2h0IChjKSAyMDIxLCBPcmFjbGUgYW5kL29yIGl0cyBhZmZpbGlhdGVzLlxyXG5cclxuLy8gVGhpcyBmaWxlIHdhcyBtb2RpZmllZCBieSBPcmFjbGUgb24gU2VwdGVtYmVyIDIxLCAyMDIxLlxyXG4vLyBIYW5kc2hha2Ugd29ya2Zsb3cgbm93IHN1cHBvcnRzIGFkZGl0aW9uYWwgYXV0aGVudGljYXRpb24gZmFjdG9ycyByZXF1ZXN0ZWRcclxuLy8gYnkgdGhlIHNlcnZlci5cclxuLy8gTW9kaWZpY2F0aW9ucyBjb3B5cmlnaHQgKGMpIDIwMjEsIE9yYWNsZSBhbmQvb3IgaXRzIGFmZmlsaWF0ZXMuXHJcblxyXG4ndXNlIHN0cmljdCc7XHJcblxyXG5jb25zdCBDb21tYW5kID0gcmVxdWlyZSgnLi9jb21tYW5kLmpzJyk7XHJcbmNvbnN0IFBhY2tldHMgPSByZXF1aXJlKCcuLi9wYWNrZXRzL2luZGV4LmpzJyk7XHJcbmNvbnN0IENsaWVudENvbnN0YW50cyA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cy9jbGllbnQuanMnKTtcclxuY29uc3QgQ2hhcnNldFRvRW5jb2RpbmcgPSByZXF1aXJlKCcuLi9jb25zdGFudHMvY2hhcnNldF9lbmNvZGluZ3MuanMnKTtcclxuY29uc3QgYXV0aDQxID0gcmVxdWlyZSgnLi4vYXV0aF80MS5qcycpO1xyXG5cclxuZnVuY3Rpb24gZmxhZ05hbWVzKGZsYWdzKSB7XHJcbiAgY29uc3QgcmVzID0gW107XHJcbiAgZm9yIChjb25zdCBjIGluIENsaWVudENvbnN0YW50cykge1xyXG4gICAgaWYgKGZsYWdzICYgQ2xpZW50Q29uc3RhbnRzW2NdKSB7XHJcbiAgICAgIHJlcy5wdXNoKGMucmVwbGFjZSgvXy9nLCAnICcpLnRvTG93ZXJDYXNlKCkpO1xyXG4gICAgfVxyXG4gIH1cclxuICByZXR1cm4gcmVzO1xyXG59XHJcblxyXG5jbGFzcyBDbGllbnRIYW5kc2hha2UgZXh0ZW5kcyBDb21tYW5kIHtcclxuICBjb25zdHJ1Y3RvcihjbGllbnRGbGFncykge1xyXG4gICAgc3VwZXIoKTtcclxuICAgIHRoaXMuaGFuZHNoYWtlID0gbnVsbDtcclxuICAgIHRoaXMuY2xpZW50RmxhZ3MgPSBjbGllbnRGbGFncztcclxuICAgIHRoaXMuYXV0aGVudGljYXRpb25GYWN0b3IgPSAwO1xyXG4gIH1cclxuXHJcbiAgc3RhcnQoKSB7XHJcbiAgICByZXR1cm4gQ2xpZW50SGFuZHNoYWtlLnByb3RvdHlwZS5oYW5kc2hha2VJbml0O1xyXG4gIH1cclxuXHJcbiAgc2VuZFNTTFJlcXVlc3QoY29ubmVjdGlvbikge1xyXG4gICAgY29uc3Qgc3NsUmVxdWVzdCA9IG5ldyBQYWNrZXRzLlNTTFJlcXVlc3QoXHJcbiAgICAgIHRoaXMuY2xpZW50RmxhZ3MsXHJcbiAgICAgIGNvbm5lY3Rpb24uY29uZmlnLmNoYXJzZXROdW1iZXJcclxuICAgICk7XHJcbiAgICBjb25uZWN0aW9uLndyaXRlUGFja2V0KHNzbFJlcXVlc3QudG9QYWNrZXQoKSk7XHJcbiAgfVxyXG5cclxuICBzZW5kQ3JlZGVudGlhbHMoY29ubmVjdGlvbikge1xyXG4gICAgaWYgKGNvbm5lY3Rpb24uY29uZmlnLmRlYnVnKSB7XHJcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxyXG4gICAgICBjb25zb2xlLmxvZyhcclxuICAgICAgICAnU2VuZGluZyBoYW5kc2hha2UgcGFja2V0OiBmbGFnczolZD0oJXMpJyxcclxuICAgICAgICB0aGlzLmNsaWVudEZsYWdzLFxyXG4gICAgICAgIGZsYWdOYW1lcyh0aGlzLmNsaWVudEZsYWdzKS5qb2luKCcsICcpXHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgICB0aGlzLnVzZXIgPSBjb25uZWN0aW9uLmNvbmZpZy51c2VyO1xyXG4gICAgdGhpcy5wYXNzd29yZCA9IGNvbm5lY3Rpb24uY29uZmlnLnBhc3N3b3JkO1xyXG4gICAgLy8gXCJwYXNzd29yZDFcIiBpcyBhbiBhbGlhcyB0byB0aGUgb3JpZ2luYWwgXCJwYXNzd29yZFwiIHZhbHVlXHJcbiAgICAvLyB0byBtYWtlIGl0IGVhc2llciB0byBpbnRlZ3JhdGUgbXVsdGktZmFjdG9yIGF1dGhlbnRpY2F0aW9uXHJcbiAgICB0aGlzLnBhc3N3b3JkMSA9IGNvbm5lY3Rpb24uY29uZmlnLnBhc3N3b3JkO1xyXG4gICAgLy8gXCJwYXNzd29yZDJcIiBhbmQgXCJwYXNzd29yZDNcIiBhcmUgdGhlIDJuZCBhbmQgM3JkIGZhY3RvciBhdXRoZW50aWNhdGlvblxyXG4gICAgLy8gcGFzc3dvcmRzLCB3aGljaCBjYW4gYmUgdW5kZWZpbmVkIGRlcGVuZGluZyBvbiB0aGUgYXV0aGVudGljYXRpb25cclxuICAgIC8vIHBsdWdpbiBiZWluZyB1c2VkXHJcbiAgICB0aGlzLnBhc3N3b3JkMiA9IGNvbm5lY3Rpb24uY29uZmlnLnBhc3N3b3JkMjtcclxuICAgIHRoaXMucGFzc3dvcmQzID0gY29ubmVjdGlvbi5jb25maWcucGFzc3dvcmQzO1xyXG4gICAgdGhpcy5wYXNzd29yZFNoYTEgPSBjb25uZWN0aW9uLmNvbmZpZy5wYXNzd29yZFNoYTE7XHJcbiAgICB0aGlzLmRhdGFiYXNlID0gY29ubmVjdGlvbi5jb25maWcuZGF0YWJhc2U7XHJcbiAgICB0aGlzLmF1dGhQbHVnaW5OYW1lID0gdGhpcy5oYW5kc2hha2UuYXV0aFBsdWdpbk5hbWU7XHJcbiAgICBjb25zdCBoYW5kc2hha2VSZXNwb25zZSA9IG5ldyBQYWNrZXRzLkhhbmRzaGFrZVJlc3BvbnNlKHtcclxuICAgICAgZmxhZ3M6IHRoaXMuY2xpZW50RmxhZ3MsXHJcbiAgICAgIHVzZXI6IHRoaXMudXNlcixcclxuICAgICAgZGF0YWJhc2U6IHRoaXMuZGF0YWJhc2UsXHJcbiAgICAgIHBhc3N3b3JkOiB0aGlzLnBhc3N3b3JkLFxyXG4gICAgICBwYXNzd29yZFNoYTE6IHRoaXMucGFzc3dvcmRTaGExLFxyXG4gICAgICBjaGFyc2V0TnVtYmVyOiBjb25uZWN0aW9uLmNvbmZpZy5jaGFyc2V0TnVtYmVyLFxyXG4gICAgICBhdXRoUGx1Z2luRGF0YTE6IHRoaXMuaGFuZHNoYWtlLmF1dGhQbHVnaW5EYXRhMSxcclxuICAgICAgYXV0aFBsdWdpbkRhdGEyOiB0aGlzLmhhbmRzaGFrZS5hdXRoUGx1Z2luRGF0YTIsXHJcbiAgICAgIGNvbXByZXNzOiBjb25uZWN0aW9uLmNvbmZpZy5jb21wcmVzcyxcclxuICAgICAgY29ubmVjdEF0dHJpYnV0ZXM6IGNvbm5lY3Rpb24uY29uZmlnLmNvbm5lY3RBdHRyaWJ1dGVzLFxyXG4gICAgfSk7XHJcbiAgICBjb25uZWN0aW9uLndyaXRlUGFja2V0KGhhbmRzaGFrZVJlc3BvbnNlLnRvUGFja2V0KCkpO1xyXG4gIH1cclxuXHJcbiAgY2FsY3VsYXRlTmF0aXZlUGFzc3dvcmRBdXRoVG9rZW4oYXV0aFBsdWdpbkRhdGEpIHtcclxuICAgIC8vIFRPRE86IGRvbnQgc3BsaXQgaW50byBhdXRoUGx1Z2luRGF0YTEgYW5kIGF1dGhQbHVnaW5EYXRhMiwgaW5zdGVhZCBqb2luIHdoZW4gMSAmIDIgcmVjZWl2ZWRcclxuICAgIGNvbnN0IGF1dGhQbHVnaW5EYXRhMSA9IGF1dGhQbHVnaW5EYXRhLnNsaWNlKDAsIDgpO1xyXG4gICAgY29uc3QgYXV0aFBsdWdpbkRhdGEyID0gYXV0aFBsdWdpbkRhdGEuc2xpY2UoOCwgMjApO1xyXG4gICAgbGV0IGF1dGhUb2tlbjtcclxuICAgIGlmICh0aGlzLnBhc3N3b3JkU2hhMSkge1xyXG4gICAgICBhdXRoVG9rZW4gPSBhdXRoNDEuY2FsY3VsYXRlVG9rZW5Gcm9tUGFzc3dvcmRTaGEoXHJcbiAgICAgICAgdGhpcy5wYXNzd29yZFNoYTEsXHJcbiAgICAgICAgYXV0aFBsdWdpbkRhdGExLFxyXG4gICAgICAgIGF1dGhQbHVnaW5EYXRhMlxyXG4gICAgICApO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgYXV0aFRva2VuID0gYXV0aDQxLmNhbGN1bGF0ZVRva2VuKFxyXG4gICAgICAgIHRoaXMucGFzc3dvcmQsXHJcbiAgICAgICAgYXV0aFBsdWdpbkRhdGExLFxyXG4gICAgICAgIGF1dGhQbHVnaW5EYXRhMlxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGF1dGhUb2tlbjtcclxuICB9XHJcblxyXG4gIGhhbmRzaGFrZUluaXQoaGVsbG9QYWNrZXQsIGNvbm5lY3Rpb24pIHtcclxuICAgIHRoaXMub24oJ2Vycm9yJywgKGUpID0+IHtcclxuICAgICAgY29ubmVjdGlvbi5fZmF0YWxFcnJvciA9IGU7XHJcbiAgICAgIGNvbm5lY3Rpb24uX3Byb3RvY29sRXJyb3IgPSBlO1xyXG4gICAgfSk7XHJcbiAgICB0aGlzLmhhbmRzaGFrZSA9IFBhY2tldHMuSGFuZHNoYWtlLmZyb21QYWNrZXQoaGVsbG9QYWNrZXQpO1xyXG4gICAgaWYgKGNvbm5lY3Rpb24uY29uZmlnLmRlYnVnKSB7XHJcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxyXG4gICAgICBjb25zb2xlLmxvZyhcclxuICAgICAgICAnU2VydmVyIGhlbGxvIHBhY2tldDogY2FwYWJpbGl0eSBmbGFnczolZD0oJXMpJyxcclxuICAgICAgICB0aGlzLmhhbmRzaGFrZS5jYXBhYmlsaXR5RmxhZ3MsXHJcbiAgICAgICAgZmxhZ05hbWVzKHRoaXMuaGFuZHNoYWtlLmNhcGFiaWxpdHlGbGFncykuam9pbignLCAnKVxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gICAgY29ubmVjdGlvbi5zZXJ2ZXJDYXBhYmlsaXR5RmxhZ3MgPSB0aGlzLmhhbmRzaGFrZS5jYXBhYmlsaXR5RmxhZ3M7XHJcbiAgICBjb25uZWN0aW9uLnNlcnZlckVuY29kaW5nID0gQ2hhcnNldFRvRW5jb2RpbmdbdGhpcy5oYW5kc2hha2UuY2hhcmFjdGVyU2V0XTtcclxuICAgIGNvbm5lY3Rpb24uY29ubmVjdGlvbklkID0gdGhpcy5oYW5kc2hha2UuY29ubmVjdGlvbklkO1xyXG4gICAgY29uc3Qgc2VydmVyU1NMU3VwcG9ydCA9XHJcbiAgICAgIHRoaXMuaGFuZHNoYWtlLmNhcGFiaWxpdHlGbGFncyAmIENsaWVudENvbnN0YW50cy5TU0w7XHJcbiAgICAvLyBtdWx0aSBmYWN0b3IgYXV0aGVudGljYXRpb24gaXMgZW5hYmxlZCB3aXRoIHRoZVxyXG4gICAgLy8gXCJNVUxUSV9GQUNUT1JfQVVUSEVOVElDQVRJT05cIiBjYXBhYmlsaXR5IGFuZCBzaG91bGQgb25seSBiZSB1c2VkIGlmIGl0XHJcbiAgICAvLyBpcyBzdXBwb3J0ZWQgYnkgdGhlIHNlcnZlclxyXG4gICAgY29uc3QgbXVsdGlGYWN0b3JBdXRoZW50aWNhdGlvbiA9XHJcbiAgICAgIHRoaXMuaGFuZHNoYWtlLmNhcGFiaWxpdHlGbGFncyAmXHJcbiAgICAgIENsaWVudENvbnN0YW50cy5NVUxUSV9GQUNUT1JfQVVUSEVOVElDQVRJT047XHJcbiAgICB0aGlzLmNsaWVudEZsYWdzID0gdGhpcy5jbGllbnRGbGFncyB8IG11bHRpRmFjdG9yQXV0aGVudGljYXRpb247XHJcbiAgICAvLyB1c2UgY29tcHJlc3Npb24gb25seSBpZiByZXF1ZXN0ZWQgYnkgY2xpZW50IGFuZCBzdXBwb3J0ZWQgYnkgc2VydmVyXHJcbiAgICBjb25uZWN0aW9uLmNvbmZpZy5jb21wcmVzcyA9XHJcbiAgICAgIGNvbm5lY3Rpb24uY29uZmlnLmNvbXByZXNzICYmXHJcbiAgICAgIHRoaXMuaGFuZHNoYWtlLmNhcGFiaWxpdHlGbGFncyAmIENsaWVudENvbnN0YW50cy5DT01QUkVTUztcclxuICAgIHRoaXMuY2xpZW50RmxhZ3MgPSB0aGlzLmNsaWVudEZsYWdzIHwgY29ubmVjdGlvbi5jb25maWcuY29tcHJlc3M7XHJcbiAgICBpZiAoY29ubmVjdGlvbi5jb25maWcuc3NsKSB7XHJcbiAgICAgIC8vIGNsaWVudCByZXF1aXJlcyBTU0wgYnV0IHNlcnZlciBkb2VzIG5vdCBzdXBwb3J0IGl0XHJcbiAgICAgIGlmICghc2VydmVyU1NMU3VwcG9ydCkge1xyXG4gICAgICAgIGNvbnN0IGVyciA9IG5ldyBFcnJvcignU2VydmVyIGRvZXMgbm90IHN1cHBvcnQgc2VjdXJlIGNvbm5lY3Rpb24nKTtcclxuICAgICAgICBlcnIuY29kZSA9ICdIQU5EU0hBS0VfTk9fU1NMX1NVUFBPUlQnO1xyXG4gICAgICAgIGVyci5mYXRhbCA9IHRydWU7XHJcbiAgICAgICAgdGhpcy5lbWl0KCdlcnJvcicsIGVycik7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICB9XHJcbiAgICAgIC8vIHNlbmQgc3NsIHVwZ3JhZGUgcmVxdWVzdCBhbmQgaW1tZWRpYXRlbHkgdXBncmFkZSBjb25uZWN0aW9uIHRvIHNlY3VyZVxyXG4gICAgICB0aGlzLmNsaWVudEZsYWdzIHw9IENsaWVudENvbnN0YW50cy5TU0w7XHJcbiAgICAgIHRoaXMuc2VuZFNTTFJlcXVlc3QoY29ubmVjdGlvbik7XHJcbiAgICAgIGNvbm5lY3Rpb24uc3RhcnRUTFMoKGVycikgPT4ge1xyXG4gICAgICAgIC8vIGFmdGVyIGNvbm5lY3Rpb24gaXMgc2VjdXJlXHJcbiAgICAgICAgaWYgKGVycikge1xyXG4gICAgICAgICAgLy8gU1NMIG5lZ290aWF0aW9uIGVycm9yIGFyZSBmYXRhbFxyXG4gICAgICAgICAgZXJyLmNvZGUgPSAnSEFORFNIQUtFX1NTTF9FUlJPUic7XHJcbiAgICAgICAgICBlcnIuZmF0YWwgPSB0cnVlO1xyXG4gICAgICAgICAgdGhpcy5lbWl0KCdlcnJvcicsIGVycik7XHJcbiAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIHJlc3Qgb2YgY29tbXVuaWNhdGlvbiBpcyBlbmNyeXB0ZWRcclxuICAgICAgICB0aGlzLnNlbmRDcmVkZW50aWFscyhjb25uZWN0aW9uKTtcclxuICAgICAgfSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLnNlbmRDcmVkZW50aWFscyhjb25uZWN0aW9uKTtcclxuICAgIH1cclxuICAgIGlmIChtdWx0aUZhY3RvckF1dGhlbnRpY2F0aW9uKSB7XHJcbiAgICAgIC8vIGlmIHRoZSBzZXJ2ZXIgc3VwcG9ydHMgbXVsdGktZmFjdG9yIGF1dGhlbnRpY2F0aW9uLCB3ZSBlbmFibGUgaXQgaW5cclxuICAgICAgLy8gdGhlIGNsaWVudFxyXG4gICAgICB0aGlzLmF1dGhlbnRpY2F0aW9uRmFjdG9yID0gMTtcclxuICAgIH1cclxuICAgIHJldHVybiBDbGllbnRIYW5kc2hha2UucHJvdG90eXBlLmhhbmRzaGFrZVJlc3VsdDtcclxuICB9XHJcblxyXG4gIGhhbmRzaGFrZVJlc3VsdChwYWNrZXQsIGNvbm5lY3Rpb24pIHtcclxuICAgIGNvbnN0IG1hcmtlciA9IHBhY2tldC5wZWVrQnl0ZSgpO1xyXG4gICAgLy8gcGFja2V0IGNhbiBiZSBPS19QYWNrZXQsIEVSUl9QYWNrZXQsIEF1dGhTd2l0Y2hSZXF1ZXN0LCBBdXRoTmV4dEZhY3RvclxyXG4gICAgLy8gb3IgQXV0aE1vcmVEYXRhXHJcbiAgICBpZiAobWFya2VyID09PSAweGZlIHx8IG1hcmtlciA9PT0gMSB8fCBtYXJrZXIgPT09IDB4MDIpIHtcclxuICAgICAgY29uc3QgYXV0aFN3aXRjaCA9IHJlcXVpcmUoJy4vYXV0aF9zd2l0Y2gnKTtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBpZiAobWFya2VyID09PSAxKSB7XHJcbiAgICAgICAgICBhdXRoU3dpdGNoLmF1dGhTd2l0Y2hSZXF1ZXN0TW9yZURhdGEocGFja2V0LCBjb25uZWN0aW9uLCB0aGlzKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgLy8gaWYgYXV0aGVudGljYXRpb25GYWN0b3IgPT09IDAsIGl0IG1lYW5zIHRoZSBzZXJ2ZXIgZG9lcyBub3Qgc3VwcG9ydFxyXG4gICAgICAgICAgLy8gdGhlIG11bHRpLWZhY3RvciBhdXRoZW50aWNhdGlvbiBjYXBhYmlsaXR5XHJcbiAgICAgICAgICBpZiAodGhpcy5hdXRoZW50aWNhdGlvbkZhY3RvciAhPT0gMCkge1xyXG4gICAgICAgICAgICAvLyBpZiB3ZSBhcmUgcGFzdCB0aGUgZmlyc3QgYXV0aGVudGljYXRpb24gZmFjdG9yLCB3ZSBzaG91bGQgdXNlIHRoZVxyXG4gICAgICAgICAgICAvLyBjb3JyZXNwb25kaW5nIHBhc3N3b3JkIChpZiB0aGVyZSBpcyBvbmUpXHJcbiAgICAgICAgICAgIGNvbm5lY3Rpb24uY29uZmlnLnBhc3N3b3JkID1cclxuICAgICAgICAgICAgICB0aGlzW2BwYXNzd29yZCR7dGhpcy5hdXRoZW50aWNhdGlvbkZhY3Rvcn1gXTtcclxuICAgICAgICAgICAgLy8gdXBkYXRlIHRoZSBjdXJyZW50IGF1dGhlbnRpY2F0aW9uIGZhY3RvclxyXG4gICAgICAgICAgICB0aGlzLmF1dGhlbnRpY2F0aW9uRmFjdG9yICs9IDE7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICAvLyBpZiBtYXJrZXIgPT09IDB4MDIsIGl0IG1lYW5zIGl0IGlzIGFuIEF1dGhOZXh0RmFjdG9yIHBhY2tldCxcclxuICAgICAgICAgIC8vIHdoaWNoIGlzIHNpbWlsYXIgaW4gc3RydWN0dXJlIHRvIGFuIEF1dGhTd2l0Y2hSZXF1ZXN0IHBhY2tldCxcclxuICAgICAgICAgIC8vIHNvLCB3ZSBjYW4gdXNlIGl0IGRpcmVjdGx5XHJcbiAgICAgICAgICBhdXRoU3dpdGNoLmF1dGhTd2l0Y2hSZXF1ZXN0KHBhY2tldCwgY29ubmVjdGlvbiwgdGhpcyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBDbGllbnRIYW5kc2hha2UucHJvdG90eXBlLmhhbmRzaGFrZVJlc3VsdDtcclxuICAgICAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICAgICAgLy8gQXV0aGVudGljYXRpb24gZXJyb3JzIGFyZSBmYXRhbFxyXG4gICAgICAgIGVyci5jb2RlID0gJ0FVVEhfU1dJVENIX1BMVUdJTl9FUlJPUic7XHJcbiAgICAgICAgZXJyLmZhdGFsID0gdHJ1ZTtcclxuXHJcbiAgICAgICAgaWYgKHRoaXMub25SZXN1bHQpIHtcclxuICAgICAgICAgIHRoaXMub25SZXN1bHQoZXJyKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgdGhpcy5lbWl0KCdlcnJvcicsIGVycik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBpZiAobWFya2VyICE9PSAwKSB7XHJcbiAgICAgIGNvbnN0IGVyciA9IG5ldyBFcnJvcignVW5leHBlY3RlZCBwYWNrZXQgZHVyaW5nIGhhbmRzaGFrZSBwaGFzZScpO1xyXG4gICAgICAvLyBVbmtub3duIGhhbmRzaGFrZSBlcnJvcnMgYXJlIGZhdGFsXHJcbiAgICAgIGVyci5jb2RlID0gJ0hBTkRTSEFLRV9VTktOT1dOX0VSUk9SJztcclxuICAgICAgZXJyLmZhdGFsID0gdHJ1ZTtcclxuXHJcbiAgICAgIGlmICh0aGlzLm9uUmVzdWx0KSB7XHJcbiAgICAgICAgdGhpcy5vblJlc3VsdChlcnIpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHRoaXMuZW1pdCgnZXJyb3InLCBlcnIpO1xyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG4gICAgLy8gdGhpcyBzaG91bGQgYmUgY2FsbGVkIGZyb20gQ2xpZW50SGFuZHNoYWtlIGNvbW1hbmQgb25seVxyXG4gICAgLy8gYW5kIHNraXBwZWQgd2hlbiBjYWxsZWQgZnJvbSBDaGFuZ2VVc2VyIGNvbW1hbmRcclxuICAgIGlmICghY29ubmVjdGlvbi5hdXRob3JpemVkKSB7XHJcbiAgICAgIGNvbm5lY3Rpb24uYXV0aG9yaXplZCA9IHRydWU7XHJcbiAgICAgIGlmIChjb25uZWN0aW9uLmNvbmZpZy5jb21wcmVzcykge1xyXG4gICAgICAgIGNvbnN0IGVuYWJsZUNvbXByZXNzaW9uID1cclxuICAgICAgICAgIHJlcXVpcmUoJy4uL2NvbXByZXNzZWRfcHJvdG9jb2wuanMnKS5lbmFibGVDb21wcmVzc2lvbjtcclxuICAgICAgICBlbmFibGVDb21wcmVzc2lvbihjb25uZWN0aW9uKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgaWYgKHRoaXMub25SZXN1bHQpIHtcclxuICAgICAgdGhpcy5vblJlc3VsdChudWxsKTtcclxuICAgIH1cclxuICAgIHJldHVybiBudWxsO1xyXG4gIH1cclxufVxyXG5tb2R1bGUuZXhwb3J0cyA9IENsaWVudEhhbmRzaGFrZTtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/commands/client_handshake.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/commands/close_statement.js":
/*!*************************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/close_statement.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\nconst Command = __webpack_require__(/*! ./command */ \"(middleware)/./node_modules/mysql2/lib/commands/command.js\");\r\nconst Packets = __webpack_require__(/*! ../packets/index.js */ \"(middleware)/./node_modules/mysql2/lib/packets/index.js\");\r\n\r\nclass CloseStatement extends Command {\r\n  constructor(id) {\r\n    super();\r\n    this.id = id;\r\n  }\r\n\r\n  start(packet, connection) {\r\n    connection.writePacket(new Packets.CloseStatement(this.id).toPacket(1));\r\n    return null;\r\n  }\r\n}\r\n\r\nmodule.exports = CloseStatement;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29tbWFuZHMvY2xvc2Vfc3RhdGVtZW50LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSxnQkFBZ0IsbUJBQU8sQ0FBQyw2RUFBVztBQUNuQyxnQkFBZ0IsbUJBQU8sQ0FBQyxvRkFBcUI7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb21tYW5kcy9jbG9zZV9zdGF0ZW1lbnQuanM/MjI2MiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG5jb25zdCBDb21tYW5kID0gcmVxdWlyZSgnLi9jb21tYW5kJyk7XHJcbmNvbnN0IFBhY2tldHMgPSByZXF1aXJlKCcuLi9wYWNrZXRzL2luZGV4LmpzJyk7XHJcblxyXG5jbGFzcyBDbG9zZVN0YXRlbWVudCBleHRlbmRzIENvbW1hbmQge1xyXG4gIGNvbnN0cnVjdG9yKGlkKSB7XHJcbiAgICBzdXBlcigpO1xyXG4gICAgdGhpcy5pZCA9IGlkO1xyXG4gIH1cclxuXHJcbiAgc3RhcnQocGFja2V0LCBjb25uZWN0aW9uKSB7XHJcbiAgICBjb25uZWN0aW9uLndyaXRlUGFja2V0KG5ldyBQYWNrZXRzLkNsb3NlU3RhdGVtZW50KHRoaXMuaWQpLnRvUGFja2V0KDEpKTtcclxuICAgIHJldHVybiBudWxsO1xyXG4gIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBDbG9zZVN0YXRlbWVudDtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/commands/close_statement.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/commands/command.js":
/*!*****************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/command.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\nconst EventEmitter = (__webpack_require__(/*! events */ \"events\").EventEmitter);\r\nconst Timers = __webpack_require__(/*! timers */ \"timers\");\r\n\r\nclass Command extends EventEmitter {\r\n  constructor() {\r\n    super();\r\n    this.next = null;\r\n  }\r\n\r\n  // slow. debug only\r\n  stateName() {\r\n    const state = this.next;\r\n    for (const i in this) {\r\n      if (this[i] === state && i !== 'next') {\r\n        return i;\r\n      }\r\n    }\r\n    return 'unknown name';\r\n  }\r\n\r\n  execute(packet, connection) {\r\n    if (!this.next) {\r\n      this.next = this.start;\r\n      connection._resetSequenceId();\r\n    }\r\n    if (packet && packet.isError()) {\r\n      const err = packet.asError(connection.clientEncoding);\r\n      err.sql = this.sql || this.query;\r\n      if (this.queryTimeout) {\r\n        Timers.clearTimeout(this.queryTimeout);\r\n        this.queryTimeout = null;\r\n      }\r\n      if (this.onResult) {\r\n        this.onResult(err);\r\n        this.emit('end');\r\n      } else {\r\n        this.emit('error', err);\r\n        this.emit('end');\r\n      }\r\n      return true;\r\n    }\r\n    // TODO: don't return anything from execute, it's ugly and error-prone. Listen for 'end' event in connection\r\n    this.next = this.next(packet, connection);\r\n    if (this.next) {\r\n      return false;\r\n    }\r\n    this.emit('end');\r\n    return true;\r\n  }\r\n}\r\n\r\nmodule.exports = Command;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29tbWFuZHMvY29tbWFuZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EscUJBQXFCLDBEQUE4QjtBQUNuRCxlQUFlLG1CQUFPLENBQUMsc0JBQVE7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL2NvbW1hbmRzL2NvbW1hbmQuanM/NzlmZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG5jb25zdCBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXI7XHJcbmNvbnN0IFRpbWVycyA9IHJlcXVpcmUoJ3RpbWVycycpO1xyXG5cclxuY2xhc3MgQ29tbWFuZCBleHRlbmRzIEV2ZW50RW1pdHRlciB7XHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICBzdXBlcigpO1xyXG4gICAgdGhpcy5uZXh0ID0gbnVsbDtcclxuICB9XHJcblxyXG4gIC8vIHNsb3cuIGRlYnVnIG9ubHlcclxuICBzdGF0ZU5hbWUoKSB7XHJcbiAgICBjb25zdCBzdGF0ZSA9IHRoaXMubmV4dDtcclxuICAgIGZvciAoY29uc3QgaSBpbiB0aGlzKSB7XHJcbiAgICAgIGlmICh0aGlzW2ldID09PSBzdGF0ZSAmJiBpICE9PSAnbmV4dCcpIHtcclxuICAgICAgICByZXR1cm4gaTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuICd1bmtub3duIG5hbWUnO1xyXG4gIH1cclxuXHJcbiAgZXhlY3V0ZShwYWNrZXQsIGNvbm5lY3Rpb24pIHtcclxuICAgIGlmICghdGhpcy5uZXh0KSB7XHJcbiAgICAgIHRoaXMubmV4dCA9IHRoaXMuc3RhcnQ7XHJcbiAgICAgIGNvbm5lY3Rpb24uX3Jlc2V0U2VxdWVuY2VJZCgpO1xyXG4gICAgfVxyXG4gICAgaWYgKHBhY2tldCAmJiBwYWNrZXQuaXNFcnJvcigpKSB7XHJcbiAgICAgIGNvbnN0IGVyciA9IHBhY2tldC5hc0Vycm9yKGNvbm5lY3Rpb24uY2xpZW50RW5jb2RpbmcpO1xyXG4gICAgICBlcnIuc3FsID0gdGhpcy5zcWwgfHwgdGhpcy5xdWVyeTtcclxuICAgICAgaWYgKHRoaXMucXVlcnlUaW1lb3V0KSB7XHJcbiAgICAgICAgVGltZXJzLmNsZWFyVGltZW91dCh0aGlzLnF1ZXJ5VGltZW91dCk7XHJcbiAgICAgICAgdGhpcy5xdWVyeVRpbWVvdXQgPSBudWxsO1xyXG4gICAgICB9XHJcbiAgICAgIGlmICh0aGlzLm9uUmVzdWx0KSB7XHJcbiAgICAgICAgdGhpcy5vblJlc3VsdChlcnIpO1xyXG4gICAgICAgIHRoaXMuZW1pdCgnZW5kJyk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGhpcy5lbWl0KCdlcnJvcicsIGVycik7XHJcbiAgICAgICAgdGhpcy5lbWl0KCdlbmQnKTtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuICAgIC8vIFRPRE86IGRvbid0IHJldHVybiBhbnl0aGluZyBmcm9tIGV4ZWN1dGUsIGl0J3MgdWdseSBhbmQgZXJyb3ItcHJvbmUuIExpc3RlbiBmb3IgJ2VuZCcgZXZlbnQgaW4gY29ubmVjdGlvblxyXG4gICAgdGhpcy5uZXh0ID0gdGhpcy5uZXh0KHBhY2tldCwgY29ubmVjdGlvbik7XHJcbiAgICBpZiAodGhpcy5uZXh0KSB7XHJcbiAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuICAgIHRoaXMuZW1pdCgnZW5kJyk7XHJcbiAgICByZXR1cm4gdHJ1ZTtcclxuICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gQ29tbWFuZDtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/commands/command.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/commands/execute.js":
/*!*****************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/execute.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\nconst Command = __webpack_require__(/*! ./command.js */ \"(middleware)/./node_modules/mysql2/lib/commands/command.js\");\r\nconst Query = __webpack_require__(/*! ./query.js */ \"(middleware)/./node_modules/mysql2/lib/commands/query.js\");\r\nconst Packets = __webpack_require__(/*! ../packets/index.js */ \"(middleware)/./node_modules/mysql2/lib/packets/index.js\");\r\n\r\nconst getBinaryParser = __webpack_require__(/*! ../parsers/binary_parser.js */ \"(middleware)/./node_modules/mysql2/lib/parsers/binary_parser.js\");\r\nconst getStaticBinaryParser = __webpack_require__(/*! ../parsers/static_binary_parser.js */ \"(middleware)/./node_modules/mysql2/lib/parsers/static_binary_parser.js\");\r\n\r\nclass Execute extends Command {\r\n  constructor(options, callback) {\r\n    super();\r\n    this.statement = options.statement;\r\n    this.sql = options.sql;\r\n    this.values = options.values;\r\n    this.onResult = callback;\r\n    this.parameters = options.values;\r\n    this.insertId = 0;\r\n    this.timeout = options.timeout;\r\n    this.queryTimeout = null;\r\n    this._rows = [];\r\n    this._fields = [];\r\n    this._result = [];\r\n    this._fieldCount = 0;\r\n    this._rowParser = null;\r\n    this._executeOptions = options;\r\n    this._resultIndex = 0;\r\n    this._localStream = null;\r\n    this._unpipeStream = function () {};\r\n    this._streamFactory = options.infileStreamFactory;\r\n    this._connection = null;\r\n  }\r\n\r\n  buildParserFromFields(fields, connection) {\r\n    if (this.options.disableEval) {\r\n      return getStaticBinaryParser(fields, this.options, connection.config);\r\n    }\r\n\r\n    return getBinaryParser(fields, this.options, connection.config);\r\n  }\r\n\r\n  start(packet, connection) {\r\n    this._connection = connection;\r\n    this.options = Object.assign({}, connection.config, this._executeOptions);\r\n    this._setTimeout();\r\n    const executePacket = new Packets.Execute(\r\n      this.statement.id,\r\n      this.parameters,\r\n      connection.config.charsetNumber,\r\n      connection.config.timezone\r\n    );\r\n    //For reasons why this try-catch is here, please see\r\n    // https://github.com/sidorares/node-mysql2/pull/689\r\n    //For additional discussion, see\r\n    // 1. https://github.com/sidorares/node-mysql2/issues/493\r\n    // 2. https://github.com/sidorares/node-mysql2/issues/187\r\n    // 3. https://github.com/sidorares/node-mysql2/issues/480\r\n    try {\r\n      connection.writePacket(executePacket.toPacket(1));\r\n    } catch (error) {\r\n      this.onResult(error);\r\n    }\r\n    return Execute.prototype.resultsetHeader;\r\n  }\r\n\r\n  readField(packet, connection) {\r\n    let fields;\r\n    // disabling for now, but would be great to find reliable way to parse fields only once\r\n    // fields reported by prepare can be empty at all or just incorrect - see #169\r\n    //\r\n    // perfomance optimisation: if we already have this field parsed in statement header, use one from header\r\n    // const field = this.statement.columns.length == this._fieldCount ?\r\n    //  this.statement.columns[this._receivedFieldsCount] : new Packets.ColumnDefinition(packet);\r\n    const field = new Packets.ColumnDefinition(\r\n      packet,\r\n      connection.clientEncoding\r\n    );\r\n    this._receivedFieldsCount++;\r\n    this._fields[this._resultIndex].push(field);\r\n    if (this._receivedFieldsCount === this._fieldCount) {\r\n      fields = this._fields[this._resultIndex];\r\n      this.emit('fields', fields, this._resultIndex);\r\n      return Execute.prototype.fieldsEOF;\r\n    }\r\n    return Execute.prototype.readField;\r\n  }\r\n\r\n  fieldsEOF(packet, connection) {\r\n    // check EOF\r\n    if (!packet.isEOF()) {\r\n      return connection.protocolError('Expected EOF packet');\r\n    }\r\n    this._rowParser = new (this.buildParserFromFields(\r\n      this._fields[this._resultIndex],\r\n      connection\r\n    ))();\r\n    return Execute.prototype.row;\r\n  }\r\n}\r\n\r\nExecute.prototype.done = Query.prototype.done;\r\nExecute.prototype.doneInsert = Query.prototype.doneInsert;\r\nExecute.prototype.resultsetHeader = Query.prototype.resultsetHeader;\r\nExecute.prototype._findOrCreateReadStream =\r\n  Query.prototype._findOrCreateReadStream;\r\nExecute.prototype._streamLocalInfile = Query.prototype._streamLocalInfile;\r\nExecute.prototype._setTimeout = Query.prototype._setTimeout;\r\nExecute.prototype._handleTimeoutError = Query.prototype._handleTimeoutError;\r\nExecute.prototype.row = Query.prototype.row;\r\nExecute.prototype.stream = Query.prototype.stream;\r\n\r\nmodule.exports = Execute;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29tbWFuZHMvZXhlY3V0ZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsZ0JBQWdCLG1CQUFPLENBQUMsZ0ZBQWM7QUFDdEMsY0FBYyxtQkFBTyxDQUFDLDRFQUFZO0FBQ2xDLGdCQUFnQixtQkFBTyxDQUFDLG9GQUFxQjtBQUM3QztBQUNBLHdCQUF3QixtQkFBTyxDQUFDLG9HQUE2QjtBQUM3RCw4QkFBOEIsbUJBQU8sQ0FBQyxrSEFBb0M7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29tbWFuZHMvZXhlY3V0ZS5qcz8wZTE5Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuXHJcbmNvbnN0IENvbW1hbmQgPSByZXF1aXJlKCcuL2NvbW1hbmQuanMnKTtcclxuY29uc3QgUXVlcnkgPSByZXF1aXJlKCcuL3F1ZXJ5LmpzJyk7XHJcbmNvbnN0IFBhY2tldHMgPSByZXF1aXJlKCcuLi9wYWNrZXRzL2luZGV4LmpzJyk7XHJcblxyXG5jb25zdCBnZXRCaW5hcnlQYXJzZXIgPSByZXF1aXJlKCcuLi9wYXJzZXJzL2JpbmFyeV9wYXJzZXIuanMnKTtcclxuY29uc3QgZ2V0U3RhdGljQmluYXJ5UGFyc2VyID0gcmVxdWlyZSgnLi4vcGFyc2Vycy9zdGF0aWNfYmluYXJ5X3BhcnNlci5qcycpO1xyXG5cclxuY2xhc3MgRXhlY3V0ZSBleHRlbmRzIENvbW1hbmQge1xyXG4gIGNvbnN0cnVjdG9yKG9wdGlvbnMsIGNhbGxiYWNrKSB7XHJcbiAgICBzdXBlcigpO1xyXG4gICAgdGhpcy5zdGF0ZW1lbnQgPSBvcHRpb25zLnN0YXRlbWVudDtcclxuICAgIHRoaXMuc3FsID0gb3B0aW9ucy5zcWw7XHJcbiAgICB0aGlzLnZhbHVlcyA9IG9wdGlvbnMudmFsdWVzO1xyXG4gICAgdGhpcy5vblJlc3VsdCA9IGNhbGxiYWNrO1xyXG4gICAgdGhpcy5wYXJhbWV0ZXJzID0gb3B0aW9ucy52YWx1ZXM7XHJcbiAgICB0aGlzLmluc2VydElkID0gMDtcclxuICAgIHRoaXMudGltZW91dCA9IG9wdGlvbnMudGltZW91dDtcclxuICAgIHRoaXMucXVlcnlUaW1lb3V0ID0gbnVsbDtcclxuICAgIHRoaXMuX3Jvd3MgPSBbXTtcclxuICAgIHRoaXMuX2ZpZWxkcyA9IFtdO1xyXG4gICAgdGhpcy5fcmVzdWx0ID0gW107XHJcbiAgICB0aGlzLl9maWVsZENvdW50ID0gMDtcclxuICAgIHRoaXMuX3Jvd1BhcnNlciA9IG51bGw7XHJcbiAgICB0aGlzLl9leGVjdXRlT3B0aW9ucyA9IG9wdGlvbnM7XHJcbiAgICB0aGlzLl9yZXN1bHRJbmRleCA9IDA7XHJcbiAgICB0aGlzLl9sb2NhbFN0cmVhbSA9IG51bGw7XHJcbiAgICB0aGlzLl91bnBpcGVTdHJlYW0gPSBmdW5jdGlvbiAoKSB7fTtcclxuICAgIHRoaXMuX3N0cmVhbUZhY3RvcnkgPSBvcHRpb25zLmluZmlsZVN0cmVhbUZhY3Rvcnk7XHJcbiAgICB0aGlzLl9jb25uZWN0aW9uID0gbnVsbDtcclxuICB9XHJcblxyXG4gIGJ1aWxkUGFyc2VyRnJvbUZpZWxkcyhmaWVsZHMsIGNvbm5lY3Rpb24pIHtcclxuICAgIGlmICh0aGlzLm9wdGlvbnMuZGlzYWJsZUV2YWwpIHtcclxuICAgICAgcmV0dXJuIGdldFN0YXRpY0JpbmFyeVBhcnNlcihmaWVsZHMsIHRoaXMub3B0aW9ucywgY29ubmVjdGlvbi5jb25maWcpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBnZXRCaW5hcnlQYXJzZXIoZmllbGRzLCB0aGlzLm9wdGlvbnMsIGNvbm5lY3Rpb24uY29uZmlnKTtcclxuICB9XHJcblxyXG4gIHN0YXJ0KHBhY2tldCwgY29ubmVjdGlvbikge1xyXG4gICAgdGhpcy5fY29ubmVjdGlvbiA9IGNvbm5lY3Rpb247XHJcbiAgICB0aGlzLm9wdGlvbnMgPSBPYmplY3QuYXNzaWduKHt9LCBjb25uZWN0aW9uLmNvbmZpZywgdGhpcy5fZXhlY3V0ZU9wdGlvbnMpO1xyXG4gICAgdGhpcy5fc2V0VGltZW91dCgpO1xyXG4gICAgY29uc3QgZXhlY3V0ZVBhY2tldCA9IG5ldyBQYWNrZXRzLkV4ZWN1dGUoXHJcbiAgICAgIHRoaXMuc3RhdGVtZW50LmlkLFxyXG4gICAgICB0aGlzLnBhcmFtZXRlcnMsXHJcbiAgICAgIGNvbm5lY3Rpb24uY29uZmlnLmNoYXJzZXROdW1iZXIsXHJcbiAgICAgIGNvbm5lY3Rpb24uY29uZmlnLnRpbWV6b25lXHJcbiAgICApO1xyXG4gICAgLy9Gb3IgcmVhc29ucyB3aHkgdGhpcyB0cnktY2F0Y2ggaXMgaGVyZSwgcGxlYXNlIHNlZVxyXG4gICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL3NpZG9yYXJlcy9ub2RlLW15c3FsMi9wdWxsLzY4OVxyXG4gICAgLy9Gb3IgYWRkaXRpb25hbCBkaXNjdXNzaW9uLCBzZWVcclxuICAgIC8vIDEuIGh0dHBzOi8vZ2l0aHViLmNvbS9zaWRvcmFyZXMvbm9kZS1teXNxbDIvaXNzdWVzLzQ5M1xyXG4gICAgLy8gMi4gaHR0cHM6Ly9naXRodWIuY29tL3NpZG9yYXJlcy9ub2RlLW15c3FsMi9pc3N1ZXMvMTg3XHJcbiAgICAvLyAzLiBodHRwczovL2dpdGh1Yi5jb20vc2lkb3JhcmVzL25vZGUtbXlzcWwyL2lzc3Vlcy80ODBcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbm5lY3Rpb24ud3JpdGVQYWNrZXQoZXhlY3V0ZVBhY2tldC50b1BhY2tldCgxKSk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aGlzLm9uUmVzdWx0KGVycm9yKTtcclxuICAgIH1cclxuICAgIHJldHVybiBFeGVjdXRlLnByb3RvdHlwZS5yZXN1bHRzZXRIZWFkZXI7XHJcbiAgfVxyXG5cclxuICByZWFkRmllbGQocGFja2V0LCBjb25uZWN0aW9uKSB7XHJcbiAgICBsZXQgZmllbGRzO1xyXG4gICAgLy8gZGlzYWJsaW5nIGZvciBub3csIGJ1dCB3b3VsZCBiZSBncmVhdCB0byBmaW5kIHJlbGlhYmxlIHdheSB0byBwYXJzZSBmaWVsZHMgb25seSBvbmNlXHJcbiAgICAvLyBmaWVsZHMgcmVwb3J0ZWQgYnkgcHJlcGFyZSBjYW4gYmUgZW1wdHkgYXQgYWxsIG9yIGp1c3QgaW5jb3JyZWN0IC0gc2VlICMxNjlcclxuICAgIC8vXHJcbiAgICAvLyBwZXJmb21hbmNlIG9wdGltaXNhdGlvbjogaWYgd2UgYWxyZWFkeSBoYXZlIHRoaXMgZmllbGQgcGFyc2VkIGluIHN0YXRlbWVudCBoZWFkZXIsIHVzZSBvbmUgZnJvbSBoZWFkZXJcclxuICAgIC8vIGNvbnN0IGZpZWxkID0gdGhpcy5zdGF0ZW1lbnQuY29sdW1ucy5sZW5ndGggPT0gdGhpcy5fZmllbGRDb3VudCA/XHJcbiAgICAvLyAgdGhpcy5zdGF0ZW1lbnQuY29sdW1uc1t0aGlzLl9yZWNlaXZlZEZpZWxkc0NvdW50XSA6IG5ldyBQYWNrZXRzLkNvbHVtbkRlZmluaXRpb24ocGFja2V0KTtcclxuICAgIGNvbnN0IGZpZWxkID0gbmV3IFBhY2tldHMuQ29sdW1uRGVmaW5pdGlvbihcclxuICAgICAgcGFja2V0LFxyXG4gICAgICBjb25uZWN0aW9uLmNsaWVudEVuY29kaW5nXHJcbiAgICApO1xyXG4gICAgdGhpcy5fcmVjZWl2ZWRGaWVsZHNDb3VudCsrO1xyXG4gICAgdGhpcy5fZmllbGRzW3RoaXMuX3Jlc3VsdEluZGV4XS5wdXNoKGZpZWxkKTtcclxuICAgIGlmICh0aGlzLl9yZWNlaXZlZEZpZWxkc0NvdW50ID09PSB0aGlzLl9maWVsZENvdW50KSB7XHJcbiAgICAgIGZpZWxkcyA9IHRoaXMuX2ZpZWxkc1t0aGlzLl9yZXN1bHRJbmRleF07XHJcbiAgICAgIHRoaXMuZW1pdCgnZmllbGRzJywgZmllbGRzLCB0aGlzLl9yZXN1bHRJbmRleCk7XHJcbiAgICAgIHJldHVybiBFeGVjdXRlLnByb3RvdHlwZS5maWVsZHNFT0Y7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gRXhlY3V0ZS5wcm90b3R5cGUucmVhZEZpZWxkO1xyXG4gIH1cclxuXHJcbiAgZmllbGRzRU9GKHBhY2tldCwgY29ubmVjdGlvbikge1xyXG4gICAgLy8gY2hlY2sgRU9GXHJcbiAgICBpZiAoIXBhY2tldC5pc0VPRigpKSB7XHJcbiAgICAgIHJldHVybiBjb25uZWN0aW9uLnByb3RvY29sRXJyb3IoJ0V4cGVjdGVkIEVPRiBwYWNrZXQnKTtcclxuICAgIH1cclxuICAgIHRoaXMuX3Jvd1BhcnNlciA9IG5ldyAodGhpcy5idWlsZFBhcnNlckZyb21GaWVsZHMoXHJcbiAgICAgIHRoaXMuX2ZpZWxkc1t0aGlzLl9yZXN1bHRJbmRleF0sXHJcbiAgICAgIGNvbm5lY3Rpb25cclxuICAgICkpKCk7XHJcbiAgICByZXR1cm4gRXhlY3V0ZS5wcm90b3R5cGUucm93O1xyXG4gIH1cclxufVxyXG5cclxuRXhlY3V0ZS5wcm90b3R5cGUuZG9uZSA9IFF1ZXJ5LnByb3RvdHlwZS5kb25lO1xyXG5FeGVjdXRlLnByb3RvdHlwZS5kb25lSW5zZXJ0ID0gUXVlcnkucHJvdG90eXBlLmRvbmVJbnNlcnQ7XHJcbkV4ZWN1dGUucHJvdG90eXBlLnJlc3VsdHNldEhlYWRlciA9IFF1ZXJ5LnByb3RvdHlwZS5yZXN1bHRzZXRIZWFkZXI7XHJcbkV4ZWN1dGUucHJvdG90eXBlLl9maW5kT3JDcmVhdGVSZWFkU3RyZWFtID1cclxuICBRdWVyeS5wcm90b3R5cGUuX2ZpbmRPckNyZWF0ZVJlYWRTdHJlYW07XHJcbkV4ZWN1dGUucHJvdG90eXBlLl9zdHJlYW1Mb2NhbEluZmlsZSA9IFF1ZXJ5LnByb3RvdHlwZS5fc3RyZWFtTG9jYWxJbmZpbGU7XHJcbkV4ZWN1dGUucHJvdG90eXBlLl9zZXRUaW1lb3V0ID0gUXVlcnkucHJvdG90eXBlLl9zZXRUaW1lb3V0O1xyXG5FeGVjdXRlLnByb3RvdHlwZS5faGFuZGxlVGltZW91dEVycm9yID0gUXVlcnkucHJvdG90eXBlLl9oYW5kbGVUaW1lb3V0RXJyb3I7XHJcbkV4ZWN1dGUucHJvdG90eXBlLnJvdyA9IFF1ZXJ5LnByb3RvdHlwZS5yb3c7XHJcbkV4ZWN1dGUucHJvdG90eXBlLnN0cmVhbSA9IFF1ZXJ5LnByb3RvdHlwZS5zdHJlYW07XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IEV4ZWN1dGU7XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/commands/execute.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/commands/index.js":
/*!***************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/index.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\nconst ClientHandshake = __webpack_require__(/*! ./client_handshake.js */ \"(middleware)/./node_modules/mysql2/lib/commands/client_handshake.js\");\r\nconst ServerHandshake = __webpack_require__(/*! ./server_handshake.js */ \"(middleware)/./node_modules/mysql2/lib/commands/server_handshake.js\");\r\nconst Query = __webpack_require__(/*! ./query.js */ \"(middleware)/./node_modules/mysql2/lib/commands/query.js\");\r\nconst Prepare = __webpack_require__(/*! ./prepare.js */ \"(middleware)/./node_modules/mysql2/lib/commands/prepare.js\");\r\nconst CloseStatement = __webpack_require__(/*! ./close_statement.js */ \"(middleware)/./node_modules/mysql2/lib/commands/close_statement.js\");\r\nconst Execute = __webpack_require__(/*! ./execute.js */ \"(middleware)/./node_modules/mysql2/lib/commands/execute.js\");\r\nconst Ping = __webpack_require__(/*! ./ping.js */ \"(middleware)/./node_modules/mysql2/lib/commands/ping.js\");\r\nconst RegisterSlave = __webpack_require__(/*! ./register_slave.js */ \"(middleware)/./node_modules/mysql2/lib/commands/register_slave.js\");\r\nconst BinlogDump = __webpack_require__(/*! ./binlog_dump.js */ \"(middleware)/./node_modules/mysql2/lib/commands/binlog_dump.js\");\r\nconst ChangeUser = __webpack_require__(/*! ./change_user.js */ \"(middleware)/./node_modules/mysql2/lib/commands/change_user.js\");\r\nconst Quit = __webpack_require__(/*! ./quit.js */ \"(middleware)/./node_modules/mysql2/lib/commands/quit.js\");\r\n\r\nmodule.exports = {\r\n  ClientHandshake,\r\n  ServerHandshake,\r\n  Query,\r\n  Prepare,\r\n  CloseStatement,\r\n  Execute,\r\n  Ping,\r\n  RegisterSlave,\r\n  BinlogDump,\r\n  ChangeUser,\r\n  Quit,\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29tbWFuZHMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLHdCQUF3QixtQkFBTyxDQUFDLGtHQUF1QjtBQUN2RCx3QkFBd0IsbUJBQU8sQ0FBQyxrR0FBdUI7QUFDdkQsY0FBYyxtQkFBTyxDQUFDLDRFQUFZO0FBQ2xDLGdCQUFnQixtQkFBTyxDQUFDLGdGQUFjO0FBQ3RDLHVCQUF1QixtQkFBTyxDQUFDLGdHQUFzQjtBQUNyRCxnQkFBZ0IsbUJBQU8sQ0FBQyxnRkFBYztBQUN0QyxhQUFhLG1CQUFPLENBQUMsMEVBQVc7QUFDaEMsc0JBQXNCLG1CQUFPLENBQUMsOEZBQXFCO0FBQ25ELG1CQUFtQixtQkFBTyxDQUFDLHdGQUFrQjtBQUM3QyxtQkFBbUIsbUJBQU8sQ0FBQyx3RkFBa0I7QUFDN0MsYUFBYSxtQkFBTyxDQUFDLDBFQUFXO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29tbWFuZHMvaW5kZXguanM/OTUwNiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG5jb25zdCBDbGllbnRIYW5kc2hha2UgPSByZXF1aXJlKCcuL2NsaWVudF9oYW5kc2hha2UuanMnKTtcclxuY29uc3QgU2VydmVySGFuZHNoYWtlID0gcmVxdWlyZSgnLi9zZXJ2ZXJfaGFuZHNoYWtlLmpzJyk7XHJcbmNvbnN0IFF1ZXJ5ID0gcmVxdWlyZSgnLi9xdWVyeS5qcycpO1xyXG5jb25zdCBQcmVwYXJlID0gcmVxdWlyZSgnLi9wcmVwYXJlLmpzJyk7XHJcbmNvbnN0IENsb3NlU3RhdGVtZW50ID0gcmVxdWlyZSgnLi9jbG9zZV9zdGF0ZW1lbnQuanMnKTtcclxuY29uc3QgRXhlY3V0ZSA9IHJlcXVpcmUoJy4vZXhlY3V0ZS5qcycpO1xyXG5jb25zdCBQaW5nID0gcmVxdWlyZSgnLi9waW5nLmpzJyk7XHJcbmNvbnN0IFJlZ2lzdGVyU2xhdmUgPSByZXF1aXJlKCcuL3JlZ2lzdGVyX3NsYXZlLmpzJyk7XHJcbmNvbnN0IEJpbmxvZ0R1bXAgPSByZXF1aXJlKCcuL2JpbmxvZ19kdW1wLmpzJyk7XHJcbmNvbnN0IENoYW5nZVVzZXIgPSByZXF1aXJlKCcuL2NoYW5nZV91c2VyLmpzJyk7XHJcbmNvbnN0IFF1aXQgPSByZXF1aXJlKCcuL3F1aXQuanMnKTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG4gIENsaWVudEhhbmRzaGFrZSxcclxuICBTZXJ2ZXJIYW5kc2hha2UsXHJcbiAgUXVlcnksXHJcbiAgUHJlcGFyZSxcclxuICBDbG9zZVN0YXRlbWVudCxcclxuICBFeGVjdXRlLFxyXG4gIFBpbmcsXHJcbiAgUmVnaXN0ZXJTbGF2ZSxcclxuICBCaW5sb2dEdW1wLFxyXG4gIENoYW5nZVVzZXIsXHJcbiAgUXVpdCxcclxufTtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/commands/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/commands/ping.js":
/*!**************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/ping.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\n\r\n\r\nconst Command = __webpack_require__(/*! ./command */ \"(middleware)/./node_modules/mysql2/lib/commands/command.js\");\r\nconst CommandCode = __webpack_require__(/*! ../constants/commands */ \"(middleware)/./node_modules/mysql2/lib/constants/commands.js\");\r\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(middleware)/./node_modules/mysql2/lib/packets/packet.js\");\r\n\r\n// TODO: time statistics?\r\n// usefull for queue size and network latency monitoring\r\n// store created,sent,reply timestamps\r\nclass Ping extends Command {\r\n  constructor(callback) {\r\n    super();\r\n    this.onResult = callback;\r\n  }\r\n\r\n  start(packet, connection) {\r\n    const ping = new Packet(\r\n      0,\r\n      Buffer.from([1, 0, 0, 0, CommandCode.PING]),\r\n      0,\r\n      5\r\n    );\r\n    connection.writePacket(ping);\r\n    return Ping.prototype.pingResponse;\r\n  }\r\n\r\n  pingResponse() {\r\n    // TODO: check it's OK packet. error check already done in caller\r\n    if (this.onResult) {\r\n      process.nextTick(this.onResult.bind(this));\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nmodule.exports = Ping;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29tbWFuZHMvcGluZy5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7QUFDYjtBQUNBLGdCQUFnQixtQkFBTyxDQUFDLDZFQUFXO0FBQ25DLG9CQUFvQixtQkFBTyxDQUFDLDJGQUF1QjtBQUNuRCxlQUFlLG1CQUFPLENBQUMsbUZBQW1CO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSxNQUFNO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb21tYW5kcy9waW5nLmpzPzcxOWEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxuY29uc3QgQ29tbWFuZCA9IHJlcXVpcmUoJy4vY29tbWFuZCcpO1xyXG5jb25zdCBDb21tYW5kQ29kZSA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cy9jb21tYW5kcycpO1xyXG5jb25zdCBQYWNrZXQgPSByZXF1aXJlKCcuLi9wYWNrZXRzL3BhY2tldCcpO1xyXG5cclxuLy8gVE9ETzogdGltZSBzdGF0aXN0aWNzP1xyXG4vLyB1c2VmdWxsIGZvciBxdWV1ZSBzaXplIGFuZCBuZXR3b3JrIGxhdGVuY3kgbW9uaXRvcmluZ1xyXG4vLyBzdG9yZSBjcmVhdGVkLHNlbnQscmVwbHkgdGltZXN0YW1wc1xyXG5jbGFzcyBQaW5nIGV4dGVuZHMgQ29tbWFuZCB7XHJcbiAgY29uc3RydWN0b3IoY2FsbGJhY2spIHtcclxuICAgIHN1cGVyKCk7XHJcbiAgICB0aGlzLm9uUmVzdWx0ID0gY2FsbGJhY2s7XHJcbiAgfVxyXG5cclxuICBzdGFydChwYWNrZXQsIGNvbm5lY3Rpb24pIHtcclxuICAgIGNvbnN0IHBpbmcgPSBuZXcgUGFja2V0KFxyXG4gICAgICAwLFxyXG4gICAgICBCdWZmZXIuZnJvbShbMSwgMCwgMCwgMCwgQ29tbWFuZENvZGUuUElOR10pLFxyXG4gICAgICAwLFxyXG4gICAgICA1XHJcbiAgICApO1xyXG4gICAgY29ubmVjdGlvbi53cml0ZVBhY2tldChwaW5nKTtcclxuICAgIHJldHVybiBQaW5nLnByb3RvdHlwZS5waW5nUmVzcG9uc2U7XHJcbiAgfVxyXG5cclxuICBwaW5nUmVzcG9uc2UoKSB7XHJcbiAgICAvLyBUT0RPOiBjaGVjayBpdCdzIE9LIHBhY2tldC4gZXJyb3IgY2hlY2sgYWxyZWFkeSBkb25lIGluIGNhbGxlclxyXG4gICAgaWYgKHRoaXMub25SZXN1bHQpIHtcclxuICAgICAgcHJvY2Vzcy5uZXh0VGljayh0aGlzLm9uUmVzdWx0LmJpbmQodGhpcykpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIG51bGw7XHJcbiAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IFBpbmc7XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/commands/ping.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/commands/prepare.js":
/*!*****************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/prepare.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\nconst Packets = __webpack_require__(/*! ../packets/index.js */ \"(middleware)/./node_modules/mysql2/lib/packets/index.js\");\r\nconst Command = __webpack_require__(/*! ./command.js */ \"(middleware)/./node_modules/mysql2/lib/commands/command.js\");\r\nconst CloseStatement = __webpack_require__(/*! ./close_statement.js */ \"(middleware)/./node_modules/mysql2/lib/commands/close_statement.js\");\r\nconst Execute = __webpack_require__(/*! ./execute.js */ \"(middleware)/./node_modules/mysql2/lib/commands/execute.js\");\r\n\r\nclass PreparedStatementInfo {\r\n  constructor(query, id, columns, parameters, connection) {\r\n    this.query = query;\r\n    this.id = id;\r\n    this.columns = columns;\r\n    this.parameters = parameters;\r\n    this.rowParser = null;\r\n    this._connection = connection;\r\n  }\r\n\r\n  close() {\r\n    return this._connection.addCommand(new CloseStatement(this.id));\r\n  }\r\n\r\n  execute(parameters, callback) {\r\n    if (typeof parameters === 'function') {\r\n      callback = parameters;\r\n      parameters = [];\r\n    }\r\n    return this._connection.addCommand(\r\n      new Execute({ statement: this, values: parameters }, callback)\r\n    );\r\n  }\r\n}\r\n\r\nclass Prepare extends Command {\r\n  constructor(options, callback) {\r\n    super();\r\n    this.query = options.sql;\r\n    this.onResult = callback;\r\n    this.id = 0;\r\n    this.fieldCount = 0;\r\n    this.parameterCount = 0;\r\n    this.fields = [];\r\n    this.parameterDefinitions = [];\r\n    this.options = options;\r\n  }\r\n\r\n  start(packet, connection) {\r\n    const Connection = connection.constructor;\r\n    this.key = Connection.statementKey(this.options);\r\n    const statement = connection._statements.get(this.key);\r\n    if (statement) {\r\n      if (this.onResult) {\r\n        this.onResult(null, statement);\r\n      }\r\n      return null;\r\n    }\r\n    const cmdPacket = new Packets.PrepareStatement(\r\n      this.query,\r\n      connection.config.charsetNumber,\r\n      this.options.values\r\n    );\r\n    connection.writePacket(cmdPacket.toPacket(1));\r\n    return Prepare.prototype.prepareHeader;\r\n  }\r\n\r\n  prepareHeader(packet, connection) {\r\n    const header = new Packets.PreparedStatementHeader(packet);\r\n    this.id = header.id;\r\n    this.fieldCount = header.fieldCount;\r\n    this.parameterCount = header.parameterCount;\r\n    if (this.parameterCount > 0) {\r\n      return Prepare.prototype.readParameter;\r\n    }\r\n    if (this.fieldCount > 0) {\r\n      return Prepare.prototype.readField;\r\n    }\r\n    return this.prepareDone(connection);\r\n  }\r\n\r\n  readParameter(packet, connection) {\r\n    // there might be scenarios when mysql server reports more parameters than\r\n    // are actually present in the array of parameter definitions.\r\n    // if EOF packet is received we switch to \"read fields\" state if there are\r\n    // any fields reported by the server, otherwise we finish the command.\r\n    if (packet.isEOF()) {\r\n      if (this.fieldCount > 0) {\r\n        return Prepare.prototype.readField;\r\n      }\r\n      return this.prepareDone(connection);\r\n    }\r\n    const def = new Packets.ColumnDefinition(packet, connection.clientEncoding);\r\n    this.parameterDefinitions.push(def);\r\n    if (this.parameterDefinitions.length === this.parameterCount) {\r\n      return Prepare.prototype.parametersEOF;\r\n    }\r\n    return this.readParameter;\r\n  }\r\n\r\n  readField(packet, connection) {\r\n    if (packet.isEOF()) {\r\n      return this.prepareDone(connection);\r\n    }\r\n    const def = new Packets.ColumnDefinition(packet, connection.clientEncoding);\r\n    this.fields.push(def);\r\n    if (this.fields.length === this.fieldCount) {\r\n      return Prepare.prototype.fieldsEOF;\r\n    }\r\n    return Prepare.prototype.readField;\r\n  }\r\n\r\n  parametersEOF(packet, connection) {\r\n    if (!packet.isEOF()) {\r\n      return connection.protocolError('Expected EOF packet after parameters');\r\n    }\r\n    if (this.fieldCount > 0) {\r\n      return Prepare.prototype.readField;\r\n    }\r\n    return this.prepareDone(connection);\r\n  }\r\n\r\n  fieldsEOF(packet, connection) {\r\n    if (!packet.isEOF()) {\r\n      return connection.protocolError('Expected EOF packet after fields');\r\n    }\r\n    return this.prepareDone(connection);\r\n  }\r\n\r\n  prepareDone(connection) {\r\n    const statement = new PreparedStatementInfo(\r\n      this.query,\r\n      this.id,\r\n      this.fields,\r\n      this.parameterDefinitions,\r\n      connection\r\n    );\r\n    connection._statements.set(this.key, statement);\r\n    if (this.onResult) {\r\n      this.onResult(null, statement);\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nmodule.exports = Prepare;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29tbWFuZHMvcHJlcGFyZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsZ0JBQWdCLG1CQUFPLENBQUMsb0ZBQXFCO0FBQzdDLGdCQUFnQixtQkFBTyxDQUFDLGdGQUFjO0FBQ3RDLHVCQUF1QixtQkFBTyxDQUFDLGdHQUFzQjtBQUNyRCxnQkFBZ0IsbUJBQU8sQ0FBQyxnRkFBYztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IscUNBQXFDO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL2NvbW1hbmRzL3ByZXBhcmUuanM/Mjc5OCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG5jb25zdCBQYWNrZXRzID0gcmVxdWlyZSgnLi4vcGFja2V0cy9pbmRleC5qcycpO1xyXG5jb25zdCBDb21tYW5kID0gcmVxdWlyZSgnLi9jb21tYW5kLmpzJyk7XHJcbmNvbnN0IENsb3NlU3RhdGVtZW50ID0gcmVxdWlyZSgnLi9jbG9zZV9zdGF0ZW1lbnQuanMnKTtcclxuY29uc3QgRXhlY3V0ZSA9IHJlcXVpcmUoJy4vZXhlY3V0ZS5qcycpO1xyXG5cclxuY2xhc3MgUHJlcGFyZWRTdGF0ZW1lbnRJbmZvIHtcclxuICBjb25zdHJ1Y3RvcihxdWVyeSwgaWQsIGNvbHVtbnMsIHBhcmFtZXRlcnMsIGNvbm5lY3Rpb24pIHtcclxuICAgIHRoaXMucXVlcnkgPSBxdWVyeTtcclxuICAgIHRoaXMuaWQgPSBpZDtcclxuICAgIHRoaXMuY29sdW1ucyA9IGNvbHVtbnM7XHJcbiAgICB0aGlzLnBhcmFtZXRlcnMgPSBwYXJhbWV0ZXJzO1xyXG4gICAgdGhpcy5yb3dQYXJzZXIgPSBudWxsO1xyXG4gICAgdGhpcy5fY29ubmVjdGlvbiA9IGNvbm5lY3Rpb247XHJcbiAgfVxyXG5cclxuICBjbG9zZSgpIHtcclxuICAgIHJldHVybiB0aGlzLl9jb25uZWN0aW9uLmFkZENvbW1hbmQobmV3IENsb3NlU3RhdGVtZW50KHRoaXMuaWQpKTtcclxuICB9XHJcblxyXG4gIGV4ZWN1dGUocGFyYW1ldGVycywgY2FsbGJhY2spIHtcclxuICAgIGlmICh0eXBlb2YgcGFyYW1ldGVycyA9PT0gJ2Z1bmN0aW9uJykge1xyXG4gICAgICBjYWxsYmFjayA9IHBhcmFtZXRlcnM7XHJcbiAgICAgIHBhcmFtZXRlcnMgPSBbXTtcclxuICAgIH1cclxuICAgIHJldHVybiB0aGlzLl9jb25uZWN0aW9uLmFkZENvbW1hbmQoXHJcbiAgICAgIG5ldyBFeGVjdXRlKHsgc3RhdGVtZW50OiB0aGlzLCB2YWx1ZXM6IHBhcmFtZXRlcnMgfSwgY2FsbGJhY2spXHJcbiAgICApO1xyXG4gIH1cclxufVxyXG5cclxuY2xhc3MgUHJlcGFyZSBleHRlbmRzIENvbW1hbmQge1xyXG4gIGNvbnN0cnVjdG9yKG9wdGlvbnMsIGNhbGxiYWNrKSB7XHJcbiAgICBzdXBlcigpO1xyXG4gICAgdGhpcy5xdWVyeSA9IG9wdGlvbnMuc3FsO1xyXG4gICAgdGhpcy5vblJlc3VsdCA9IGNhbGxiYWNrO1xyXG4gICAgdGhpcy5pZCA9IDA7XHJcbiAgICB0aGlzLmZpZWxkQ291bnQgPSAwO1xyXG4gICAgdGhpcy5wYXJhbWV0ZXJDb3VudCA9IDA7XHJcbiAgICB0aGlzLmZpZWxkcyA9IFtdO1xyXG4gICAgdGhpcy5wYXJhbWV0ZXJEZWZpbml0aW9ucyA9IFtdO1xyXG4gICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcclxuICB9XHJcblxyXG4gIHN0YXJ0KHBhY2tldCwgY29ubmVjdGlvbikge1xyXG4gICAgY29uc3QgQ29ubmVjdGlvbiA9IGNvbm5lY3Rpb24uY29uc3RydWN0b3I7XHJcbiAgICB0aGlzLmtleSA9IENvbm5lY3Rpb24uc3RhdGVtZW50S2V5KHRoaXMub3B0aW9ucyk7XHJcbiAgICBjb25zdCBzdGF0ZW1lbnQgPSBjb25uZWN0aW9uLl9zdGF0ZW1lbnRzLmdldCh0aGlzLmtleSk7XHJcbiAgICBpZiAoc3RhdGVtZW50KSB7XHJcbiAgICAgIGlmICh0aGlzLm9uUmVzdWx0KSB7XHJcbiAgICAgICAgdGhpcy5vblJlc3VsdChudWxsLCBzdGF0ZW1lbnQpO1xyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG4gICAgY29uc3QgY21kUGFja2V0ID0gbmV3IFBhY2tldHMuUHJlcGFyZVN0YXRlbWVudChcclxuICAgICAgdGhpcy5xdWVyeSxcclxuICAgICAgY29ubmVjdGlvbi5jb25maWcuY2hhcnNldE51bWJlcixcclxuICAgICAgdGhpcy5vcHRpb25zLnZhbHVlc1xyXG4gICAgKTtcclxuICAgIGNvbm5lY3Rpb24ud3JpdGVQYWNrZXQoY21kUGFja2V0LnRvUGFja2V0KDEpKTtcclxuICAgIHJldHVybiBQcmVwYXJlLnByb3RvdHlwZS5wcmVwYXJlSGVhZGVyO1xyXG4gIH1cclxuXHJcbiAgcHJlcGFyZUhlYWRlcihwYWNrZXQsIGNvbm5lY3Rpb24pIHtcclxuICAgIGNvbnN0IGhlYWRlciA9IG5ldyBQYWNrZXRzLlByZXBhcmVkU3RhdGVtZW50SGVhZGVyKHBhY2tldCk7XHJcbiAgICB0aGlzLmlkID0gaGVhZGVyLmlkO1xyXG4gICAgdGhpcy5maWVsZENvdW50ID0gaGVhZGVyLmZpZWxkQ291bnQ7XHJcbiAgICB0aGlzLnBhcmFtZXRlckNvdW50ID0gaGVhZGVyLnBhcmFtZXRlckNvdW50O1xyXG4gICAgaWYgKHRoaXMucGFyYW1ldGVyQ291bnQgPiAwKSB7XHJcbiAgICAgIHJldHVybiBQcmVwYXJlLnByb3RvdHlwZS5yZWFkUGFyYW1ldGVyO1xyXG4gICAgfVxyXG4gICAgaWYgKHRoaXMuZmllbGRDb3VudCA+IDApIHtcclxuICAgICAgcmV0dXJuIFByZXBhcmUucHJvdG90eXBlLnJlYWRGaWVsZDtcclxuICAgIH1cclxuICAgIHJldHVybiB0aGlzLnByZXBhcmVEb25lKGNvbm5lY3Rpb24pO1xyXG4gIH1cclxuXHJcbiAgcmVhZFBhcmFtZXRlcihwYWNrZXQsIGNvbm5lY3Rpb24pIHtcclxuICAgIC8vIHRoZXJlIG1pZ2h0IGJlIHNjZW5hcmlvcyB3aGVuIG15c3FsIHNlcnZlciByZXBvcnRzIG1vcmUgcGFyYW1ldGVycyB0aGFuXHJcbiAgICAvLyBhcmUgYWN0dWFsbHkgcHJlc2VudCBpbiB0aGUgYXJyYXkgb2YgcGFyYW1ldGVyIGRlZmluaXRpb25zLlxyXG4gICAgLy8gaWYgRU9GIHBhY2tldCBpcyByZWNlaXZlZCB3ZSBzd2l0Y2ggdG8gXCJyZWFkIGZpZWxkc1wiIHN0YXRlIGlmIHRoZXJlIGFyZVxyXG4gICAgLy8gYW55IGZpZWxkcyByZXBvcnRlZCBieSB0aGUgc2VydmVyLCBvdGhlcndpc2Ugd2UgZmluaXNoIHRoZSBjb21tYW5kLlxyXG4gICAgaWYgKHBhY2tldC5pc0VPRigpKSB7XHJcbiAgICAgIGlmICh0aGlzLmZpZWxkQ291bnQgPiAwKSB7XHJcbiAgICAgICAgcmV0dXJuIFByZXBhcmUucHJvdG90eXBlLnJlYWRGaWVsZDtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gdGhpcy5wcmVwYXJlRG9uZShjb25uZWN0aW9uKTtcclxuICAgIH1cclxuICAgIGNvbnN0IGRlZiA9IG5ldyBQYWNrZXRzLkNvbHVtbkRlZmluaXRpb24ocGFja2V0LCBjb25uZWN0aW9uLmNsaWVudEVuY29kaW5nKTtcclxuICAgIHRoaXMucGFyYW1ldGVyRGVmaW5pdGlvbnMucHVzaChkZWYpO1xyXG4gICAgaWYgKHRoaXMucGFyYW1ldGVyRGVmaW5pdGlvbnMubGVuZ3RoID09PSB0aGlzLnBhcmFtZXRlckNvdW50KSB7XHJcbiAgICAgIHJldHVybiBQcmVwYXJlLnByb3RvdHlwZS5wYXJhbWV0ZXJzRU9GO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRoaXMucmVhZFBhcmFtZXRlcjtcclxuICB9XHJcblxyXG4gIHJlYWRGaWVsZChwYWNrZXQsIGNvbm5lY3Rpb24pIHtcclxuICAgIGlmIChwYWNrZXQuaXNFT0YoKSkge1xyXG4gICAgICByZXR1cm4gdGhpcy5wcmVwYXJlRG9uZShjb25uZWN0aW9uKTtcclxuICAgIH1cclxuICAgIGNvbnN0IGRlZiA9IG5ldyBQYWNrZXRzLkNvbHVtbkRlZmluaXRpb24ocGFja2V0LCBjb25uZWN0aW9uLmNsaWVudEVuY29kaW5nKTtcclxuICAgIHRoaXMuZmllbGRzLnB1c2goZGVmKTtcclxuICAgIGlmICh0aGlzLmZpZWxkcy5sZW5ndGggPT09IHRoaXMuZmllbGRDb3VudCkge1xyXG4gICAgICByZXR1cm4gUHJlcGFyZS5wcm90b3R5cGUuZmllbGRzRU9GO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIFByZXBhcmUucHJvdG90eXBlLnJlYWRGaWVsZDtcclxuICB9XHJcblxyXG4gIHBhcmFtZXRlcnNFT0YocGFja2V0LCBjb25uZWN0aW9uKSB7XHJcbiAgICBpZiAoIXBhY2tldC5pc0VPRigpKSB7XHJcbiAgICAgIHJldHVybiBjb25uZWN0aW9uLnByb3RvY29sRXJyb3IoJ0V4cGVjdGVkIEVPRiBwYWNrZXQgYWZ0ZXIgcGFyYW1ldGVycycpO1xyXG4gICAgfVxyXG4gICAgaWYgKHRoaXMuZmllbGRDb3VudCA+IDApIHtcclxuICAgICAgcmV0dXJuIFByZXBhcmUucHJvdG90eXBlLnJlYWRGaWVsZDtcclxuICAgIH1cclxuICAgIHJldHVybiB0aGlzLnByZXBhcmVEb25lKGNvbm5lY3Rpb24pO1xyXG4gIH1cclxuXHJcbiAgZmllbGRzRU9GKHBhY2tldCwgY29ubmVjdGlvbikge1xyXG4gICAgaWYgKCFwYWNrZXQuaXNFT0YoKSkge1xyXG4gICAgICByZXR1cm4gY29ubmVjdGlvbi5wcm90b2NvbEVycm9yKCdFeHBlY3RlZCBFT0YgcGFja2V0IGFmdGVyIGZpZWxkcycpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRoaXMucHJlcGFyZURvbmUoY29ubmVjdGlvbik7XHJcbiAgfVxyXG5cclxuICBwcmVwYXJlRG9uZShjb25uZWN0aW9uKSB7XHJcbiAgICBjb25zdCBzdGF0ZW1lbnQgPSBuZXcgUHJlcGFyZWRTdGF0ZW1lbnRJbmZvKFxyXG4gICAgICB0aGlzLnF1ZXJ5LFxyXG4gICAgICB0aGlzLmlkLFxyXG4gICAgICB0aGlzLmZpZWxkcyxcclxuICAgICAgdGhpcy5wYXJhbWV0ZXJEZWZpbml0aW9ucyxcclxuICAgICAgY29ubmVjdGlvblxyXG4gICAgKTtcclxuICAgIGNvbm5lY3Rpb24uX3N0YXRlbWVudHMuc2V0KHRoaXMua2V5LCBzdGF0ZW1lbnQpO1xyXG4gICAgaWYgKHRoaXMub25SZXN1bHQpIHtcclxuICAgICAgdGhpcy5vblJlc3VsdChudWxsLCBzdGF0ZW1lbnQpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIG51bGw7XHJcbiAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IFByZXBhcmU7XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/commands/prepare.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/commands/query.js":
/*!***************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/query.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\n\r\n\r\nconst process = __webpack_require__(/*! process */ \"(middleware)/../../node_modules/process/browser.js\");\r\nconst Timers = __webpack_require__(/*! timers */ \"timers\");\r\n\r\nconst Readable = (__webpack_require__(/*! stream */ \"stream\").Readable);\r\n\r\nconst Command = __webpack_require__(/*! ./command.js */ \"(middleware)/./node_modules/mysql2/lib/commands/command.js\");\r\nconst Packets = __webpack_require__(/*! ../packets/index.js */ \"(middleware)/./node_modules/mysql2/lib/packets/index.js\");\r\nconst getTextParser = __webpack_require__(/*! ../parsers/text_parser.js */ \"(middleware)/./node_modules/mysql2/lib/parsers/text_parser.js\");\r\nconst staticParser = __webpack_require__(/*! ../parsers/static_text_parser.js */ \"(middleware)/./node_modules/mysql2/lib/parsers/static_text_parser.js\");\r\nconst ServerStatus = __webpack_require__(/*! ../constants/server_status.js */ \"(middleware)/./node_modules/mysql2/lib/constants/server_status.js\");\r\n\r\nconst EmptyPacket = new Packets.Packet(0, Buffer.allocUnsafe(4), 0, 4);\r\n\r\n// http://dev.mysql.com/doc/internals/en/com-query.html\r\nclass Query extends Command {\r\n  constructor(options, callback) {\r\n    super();\r\n    this.sql = options.sql;\r\n    this.values = options.values;\r\n    this._queryOptions = options;\r\n    this.namedPlaceholders = options.namedPlaceholders || false;\r\n    this.onResult = callback;\r\n    this.timeout = options.timeout;\r\n    this.queryTimeout = null;\r\n    this._fieldCount = 0;\r\n    this._rowParser = null;\r\n    this._fields = [];\r\n    this._rows = [];\r\n    this._receivedFieldsCount = 0;\r\n    this._resultIndex = 0;\r\n    this._localStream = null;\r\n    this._unpipeStream = function () {};\r\n    this._streamFactory = options.infileStreamFactory;\r\n    this._connection = null;\r\n  }\r\n\r\n  then() {\r\n    const err =\r\n      \"You have tried to call .then(), .catch(), or invoked await on the result of query that is not a promise, which is a programming error. Try calling con.promise().query(), or require('mysql2/promise') instead of 'mysql2' for a promise-compatible version of the query interface. To learn how to use async/await or Promises check out documentation at https://sidorares.github.io/node-mysql2/docs#using-promise-wrapper, or the mysql2 documentation at https://sidorares.github.io/node-mysql2/docs/documentation/promise-wrapper\";\r\n    // eslint-disable-next-line\r\n    console.log(err);\r\n    throw new Error(err);\r\n  }\r\n\r\n  /* eslint no-unused-vars: [\"error\", { \"argsIgnorePattern\": \"^_\" }] */\r\n  start(_packet, connection) {\r\n    if (connection.config.debug) {\r\n      // eslint-disable-next-line\r\n      console.log('        Sending query command: %s', this.sql);\r\n    }\r\n    this._connection = connection;\r\n    this.options = Object.assign({}, connection.config, this._queryOptions);\r\n    this._setTimeout();\r\n\r\n    const cmdPacket = new Packets.Query(\r\n      this.sql,\r\n      connection.config.charsetNumber\r\n    );\r\n    connection.writePacket(cmdPacket.toPacket(1));\r\n    return Query.prototype.resultsetHeader;\r\n  }\r\n\r\n  done() {\r\n    this._unpipeStream();\r\n    // if all ready timeout, return null directly\r\n    if (this.timeout && !this.queryTimeout) {\r\n      return null;\r\n    }\r\n    // else clear timer\r\n    if (this.queryTimeout) {\r\n      Timers.clearTimeout(this.queryTimeout);\r\n      this.queryTimeout = null;\r\n    }\r\n    if (this.onResult) {\r\n      let rows, fields;\r\n      if (this._resultIndex === 0) {\r\n        rows = this._rows[0];\r\n        fields = this._fields[0];\r\n      } else {\r\n        rows = this._rows;\r\n        fields = this._fields;\r\n      }\r\n      if (fields) {\r\n        process.nextTick(() => {\r\n          this.onResult(null, rows, fields);\r\n        });\r\n      } else {\r\n        process.nextTick(() => {\r\n          this.onResult(null, rows);\r\n        });\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  doneInsert(rs) {\r\n    if (this._localStreamError) {\r\n      if (this.onResult) {\r\n        this.onResult(this._localStreamError, rs);\r\n      } else {\r\n        this.emit('error', this._localStreamError);\r\n      }\r\n      return null;\r\n    }\r\n    this._rows.push(rs);\r\n    this._fields.push(void 0);\r\n    this.emit('fields', void 0);\r\n    this.emit('result', rs);\r\n    if (rs.serverStatus & ServerStatus.SERVER_MORE_RESULTS_EXISTS) {\r\n      this._resultIndex++;\r\n      return this.resultsetHeader;\r\n    }\r\n    return this.done();\r\n  }\r\n\r\n  resultsetHeader(packet, connection) {\r\n    const rs = new Packets.ResultSetHeader(packet, connection);\r\n    this._fieldCount = rs.fieldCount;\r\n    if (connection.config.debug) {\r\n      // eslint-disable-next-line\r\n      console.log(\r\n        `        Resultset header received, expecting ${rs.fieldCount} column definition packets`\r\n      );\r\n    }\r\n    if (this._fieldCount === 0) {\r\n      return this.doneInsert(rs);\r\n    }\r\n    if (this._fieldCount === null) {\r\n      return this._streamLocalInfile(connection, rs.infileName);\r\n    }\r\n    this._receivedFieldsCount = 0;\r\n    this._rows.push([]);\r\n    this._fields.push([]);\r\n    return this.readField;\r\n  }\r\n\r\n  _streamLocalInfile(connection, path) {\r\n    if (this._streamFactory) {\r\n      this._localStream = this._streamFactory(path);\r\n    } else {\r\n      this._localStreamError = new Error(\r\n        `As a result of LOCAL INFILE command server wants to read ${path} file, but as of v2.0 you must provide streamFactory option returning ReadStream.`\r\n      );\r\n      connection.writePacket(EmptyPacket);\r\n      return this.infileOk;\r\n    }\r\n\r\n    const onConnectionError = () => {\r\n      this._unpipeStream();\r\n    };\r\n    const onDrain = () => {\r\n      this._localStream.resume();\r\n    };\r\n    const onPause = () => {\r\n      this._localStream.pause();\r\n    };\r\n    const onData = function (data) {\r\n      const dataWithHeader = Buffer.allocUnsafe(data.length + 4);\r\n      data.copy(dataWithHeader, 4);\r\n      connection.writePacket(\r\n        new Packets.Packet(0, dataWithHeader, 0, dataWithHeader.length)\r\n      );\r\n    };\r\n    const onEnd = () => {\r\n      connection.removeListener('error', onConnectionError);\r\n      connection.writePacket(EmptyPacket);\r\n    };\r\n    const onError = (err) => {\r\n      this._localStreamError = err;\r\n      connection.removeListener('error', onConnectionError);\r\n      connection.writePacket(EmptyPacket);\r\n    };\r\n    this._unpipeStream = () => {\r\n      connection.stream.removeListener('pause', onPause);\r\n      connection.stream.removeListener('drain', onDrain);\r\n      this._localStream.removeListener('data', onData);\r\n      this._localStream.removeListener('end', onEnd);\r\n      this._localStream.removeListener('error', onError);\r\n    };\r\n    connection.stream.on('pause', onPause);\r\n    connection.stream.on('drain', onDrain);\r\n    this._localStream.on('data', onData);\r\n    this._localStream.on('end', onEnd);\r\n    this._localStream.on('error', onError);\r\n    connection.once('error', onConnectionError);\r\n    return this.infileOk;\r\n  }\r\n\r\n  readField(packet, connection) {\r\n    this._receivedFieldsCount++;\r\n    // Often there is much more data in the column definition than in the row itself\r\n    // If you set manually _fields[0] to array of ColumnDefinition's (from previous call)\r\n    // you can 'cache' result of parsing. Field packets still received, but ignored in that case\r\n    // this is the reason _receivedFieldsCount exist (otherwise we could just use current length of fields array)\r\n    if (this._fields[this._resultIndex].length !== this._fieldCount) {\r\n      const field = new Packets.ColumnDefinition(\r\n        packet,\r\n        connection.clientEncoding\r\n      );\r\n      this._fields[this._resultIndex].push(field);\r\n      if (connection.config.debug) {\r\n        /* eslint-disable no-console */\r\n        console.log('        Column definition:');\r\n        console.log(`          name: ${field.name}`);\r\n        console.log(`          type: ${field.columnType}`);\r\n        console.log(`         flags: ${field.flags}`);\r\n        /* eslint-enable no-console */\r\n      }\r\n    }\r\n    // last field received\r\n    if (this._receivedFieldsCount === this._fieldCount) {\r\n      const fields = this._fields[this._resultIndex];\r\n      this.emit('fields', fields);\r\n      if (this.options.disableEval) {\r\n        this._rowParser = staticParser(fields, this.options, connection.config);\r\n      } else {\r\n        this._rowParser = new (getTextParser(\r\n          fields,\r\n          this.options,\r\n          connection.config\r\n        ))(fields);\r\n      }\r\n      return Query.prototype.fieldsEOF;\r\n    }\r\n    return Query.prototype.readField;\r\n  }\r\n\r\n  fieldsEOF(packet, connection) {\r\n    // check EOF\r\n    if (!packet.isEOF()) {\r\n      return connection.protocolError('Expected EOF packet');\r\n    }\r\n    return this.row;\r\n  }\r\n\r\n  /* eslint no-unused-vars: [\"error\", { \"argsIgnorePattern\": \"^_\" }] */\r\n  row(packet, _connection) {\r\n    if (packet.isEOF()) {\r\n      const status = packet.eofStatusFlags();\r\n      const moreResults = status & ServerStatus.SERVER_MORE_RESULTS_EXISTS;\r\n      if (moreResults) {\r\n        this._resultIndex++;\r\n        return Query.prototype.resultsetHeader;\r\n      }\r\n      return this.done();\r\n    }\r\n    let row;\r\n    try {\r\n      row = this._rowParser.next(\r\n        packet,\r\n        this._fields[this._resultIndex],\r\n        this.options\r\n      );\r\n    } catch (err) {\r\n      this._localStreamError = err;\r\n      return this.doneInsert(null);\r\n    }\r\n    if (this.onResult) {\r\n      this._rows[this._resultIndex].push(row);\r\n    } else {\r\n      this.emit('result', row, this._resultIndex);\r\n    }\r\n    return Query.prototype.row;\r\n  }\r\n\r\n  infileOk(packet, connection) {\r\n    const rs = new Packets.ResultSetHeader(packet, connection);\r\n    return this.doneInsert(rs);\r\n  }\r\n\r\n  stream(options) {\r\n    options = options || {};\r\n    options.objectMode = true;\r\n    const stream = new Readable(options);\r\n    stream._read = () => {\r\n      this._connection && this._connection.resume();\r\n    };\r\n    this.on('result', (row, resultSetIndex) => {\r\n      if (!stream.push(row)) {\r\n        this._connection.pause();\r\n      }\r\n      stream.emit('result', row, resultSetIndex); // replicate old emitter\r\n    });\r\n    this.on('error', (err) => {\r\n      stream.emit('error', err); // Pass on any errors\r\n    });\r\n    this.on('end', () => {\r\n      stream.push(null); // pushing null, indicating EOF\r\n    });\r\n    this.on('fields', (fields) => {\r\n      stream.emit('fields', fields); // replicate old emitter\r\n    });\r\n    stream.on('end', () => {\r\n      stream.emit('close');\r\n    });\r\n    return stream;\r\n  }\r\n\r\n  _setTimeout() {\r\n    if (this.timeout) {\r\n      const timeoutHandler = this._handleTimeoutError.bind(this);\r\n      this.queryTimeout = Timers.setTimeout(timeoutHandler, this.timeout);\r\n    }\r\n  }\r\n\r\n  _handleTimeoutError() {\r\n    if (this.queryTimeout) {\r\n      Timers.clearTimeout(this.queryTimeout);\r\n      this.queryTimeout = null;\r\n    }\r\n\r\n    const err = new Error('Query inactivity timeout');\r\n    err.errorno = 'PROTOCOL_SEQUENCE_TIMEOUT';\r\n    err.code = 'PROTOCOL_SEQUENCE_TIMEOUT';\r\n    err.syscall = 'query';\r\n\r\n    if (this.onResult) {\r\n      this.onResult(err);\r\n    } else {\r\n      this.emit('error', err);\r\n    }\r\n  }\r\n}\r\n\r\nQuery.prototype.catch = Query.prototype.then;\r\n\r\nmodule.exports = Query;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/commands/query.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/commands/quit.js":
/*!**************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/quit.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\n\r\n\r\nconst Command = __webpack_require__(/*! ./command.js */ \"(middleware)/./node_modules/mysql2/lib/commands/command.js\");\r\nconst CommandCode = __webpack_require__(/*! ../constants/commands.js */ \"(middleware)/./node_modules/mysql2/lib/constants/commands.js\");\r\nconst Packet = __webpack_require__(/*! ../packets/packet.js */ \"(middleware)/./node_modules/mysql2/lib/packets/packet.js\");\r\n\r\nclass Quit extends Command {\r\n  constructor(callback) {\r\n    super();\r\n    this.onResult = callback;\r\n  }\r\n\r\n  start(packet, connection) {\r\n    connection._closing = true;\r\n    const quit = new Packet(\r\n      0,\r\n      Buffer.from([1, 0, 0, 0, CommandCode.QUIT]),\r\n      0,\r\n      5\r\n    );\r\n    if (this.onResult) {\r\n      this.onResult();\r\n    }\r\n    connection.writePacket(quit);\r\n    return null;\r\n  }\r\n}\r\n\r\nmodule.exports = Quit;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29tbWFuZHMvcXVpdC5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7QUFDYjtBQUNBLGdCQUFnQixtQkFBTyxDQUFDLGdGQUFjO0FBQ3RDLG9CQUFvQixtQkFBTyxDQUFDLDhGQUEwQjtBQUN0RCxlQUFlLG1CQUFPLENBQUMsc0ZBQXNCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLE1BQU07QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29tbWFuZHMvcXVpdC5qcz8yYzk2Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuXHJcbmNvbnN0IENvbW1hbmQgPSByZXF1aXJlKCcuL2NvbW1hbmQuanMnKTtcclxuY29uc3QgQ29tbWFuZENvZGUgPSByZXF1aXJlKCcuLi9jb25zdGFudHMvY29tbWFuZHMuanMnKTtcclxuY29uc3QgUGFja2V0ID0gcmVxdWlyZSgnLi4vcGFja2V0cy9wYWNrZXQuanMnKTtcclxuXHJcbmNsYXNzIFF1aXQgZXh0ZW5kcyBDb21tYW5kIHtcclxuICBjb25zdHJ1Y3RvcihjYWxsYmFjaykge1xyXG4gICAgc3VwZXIoKTtcclxuICAgIHRoaXMub25SZXN1bHQgPSBjYWxsYmFjaztcclxuICB9XHJcblxyXG4gIHN0YXJ0KHBhY2tldCwgY29ubmVjdGlvbikge1xyXG4gICAgY29ubmVjdGlvbi5fY2xvc2luZyA9IHRydWU7XHJcbiAgICBjb25zdCBxdWl0ID0gbmV3IFBhY2tldChcclxuICAgICAgMCxcclxuICAgICAgQnVmZmVyLmZyb20oWzEsIDAsIDAsIDAsIENvbW1hbmRDb2RlLlFVSVRdKSxcclxuICAgICAgMCxcclxuICAgICAgNVxyXG4gICAgKTtcclxuICAgIGlmICh0aGlzLm9uUmVzdWx0KSB7XHJcbiAgICAgIHRoaXMub25SZXN1bHQoKTtcclxuICAgIH1cclxuICAgIGNvbm5lY3Rpb24ud3JpdGVQYWNrZXQocXVpdCk7XHJcbiAgICByZXR1cm4gbnVsbDtcclxuICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gUXVpdDtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/commands/quit.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/commands/register_slave.js":
/*!************************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/register_slave.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\nconst Command = __webpack_require__(/*! ./command */ \"(middleware)/./node_modules/mysql2/lib/commands/command.js\");\r\nconst Packets = __webpack_require__(/*! ../packets */ \"(middleware)/./node_modules/mysql2/lib/packets/index.js\");\r\n\r\nclass RegisterSlave extends Command {\r\n  constructor(opts, callback) {\r\n    super();\r\n    this.onResult = callback;\r\n    this.opts = opts;\r\n  }\r\n\r\n  start(packet, connection) {\r\n    const newPacket = new Packets.RegisterSlave(this.opts);\r\n    connection.writePacket(newPacket.toPacket(1));\r\n    return RegisterSlave.prototype.registerResponse;\r\n  }\r\n\r\n  registerResponse() {\r\n    if (this.onResult) {\r\n      process.nextTick(this.onResult.bind(this));\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nmodule.exports = RegisterSlave;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29tbWFuZHMvcmVnaXN0ZXJfc2xhdmUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLGdCQUFnQixtQkFBTyxDQUFDLDZFQUFXO0FBQ25DLGdCQUFnQixtQkFBTyxDQUFDLDJFQUFZO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29tbWFuZHMvcmVnaXN0ZXJfc2xhdmUuanM/YzhlMiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG5jb25zdCBDb21tYW5kID0gcmVxdWlyZSgnLi9jb21tYW5kJyk7XHJcbmNvbnN0IFBhY2tldHMgPSByZXF1aXJlKCcuLi9wYWNrZXRzJyk7XHJcblxyXG5jbGFzcyBSZWdpc3RlclNsYXZlIGV4dGVuZHMgQ29tbWFuZCB7XHJcbiAgY29uc3RydWN0b3Iob3B0cywgY2FsbGJhY2spIHtcclxuICAgIHN1cGVyKCk7XHJcbiAgICB0aGlzLm9uUmVzdWx0ID0gY2FsbGJhY2s7XHJcbiAgICB0aGlzLm9wdHMgPSBvcHRzO1xyXG4gIH1cclxuXHJcbiAgc3RhcnQocGFja2V0LCBjb25uZWN0aW9uKSB7XHJcbiAgICBjb25zdCBuZXdQYWNrZXQgPSBuZXcgUGFja2V0cy5SZWdpc3RlclNsYXZlKHRoaXMub3B0cyk7XHJcbiAgICBjb25uZWN0aW9uLndyaXRlUGFja2V0KG5ld1BhY2tldC50b1BhY2tldCgxKSk7XHJcbiAgICByZXR1cm4gUmVnaXN0ZXJTbGF2ZS5wcm90b3R5cGUucmVnaXN0ZXJSZXNwb25zZTtcclxuICB9XHJcblxyXG4gIHJlZ2lzdGVyUmVzcG9uc2UoKSB7XHJcbiAgICBpZiAodGhpcy5vblJlc3VsdCkge1xyXG4gICAgICBwcm9jZXNzLm5leHRUaWNrKHRoaXMub25SZXN1bHQuYmluZCh0aGlzKSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gbnVsbDtcclxuICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gUmVnaXN0ZXJTbGF2ZTtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/commands/register_slave.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/commands/server_handshake.js":
/*!**************************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/server_handshake.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\nconst CommandCode = __webpack_require__(/*! ../constants/commands.js */ \"(middleware)/./node_modules/mysql2/lib/constants/commands.js\");\r\nconst Errors = __webpack_require__(/*! ../constants/errors.js */ \"(middleware)/./node_modules/mysql2/lib/constants/errors.js\");\r\n\r\nconst Command = __webpack_require__(/*! ./command.js */ \"(middleware)/./node_modules/mysql2/lib/commands/command.js\");\r\nconst Packets = __webpack_require__(/*! ../packets/index.js */ \"(middleware)/./node_modules/mysql2/lib/packets/index.js\");\r\n\r\nclass ServerHandshake extends Command {\r\n  constructor(args) {\r\n    super();\r\n    this.args = args;\r\n    /*\r\n    this.protocolVersion = args.protocolVersion || 10;\r\n    this.serverVersion   = args.serverVersion;\r\n    this.connectionId    = args.connectionId,\r\n    this.statusFlags     = args.statusFlags,\r\n    this.characterSet    = args.characterSet,\r\n    this.capabilityFlags = args.capabilityFlags || 512;\r\n    */\r\n  }\r\n\r\n  start(packet, connection) {\r\n    const serverHelloPacket = new Packets.Handshake(this.args);\r\n    this.serverHello = serverHelloPacket;\r\n    serverHelloPacket.setScrambleData((err) => {\r\n      if (err) {\r\n        connection.emit('error', new Error('Error generating random bytes'));\r\n        return;\r\n      }\r\n      connection.writePacket(serverHelloPacket.toPacket(0));\r\n    });\r\n    return ServerHandshake.prototype.readClientReply;\r\n  }\r\n\r\n  readClientReply(packet, connection) {\r\n    // check auth here\r\n    const clientHelloReply = Packets.HandshakeResponse.fromPacket(packet);\r\n    // TODO check we don't have something similar already\r\n    connection.clientHelloReply = clientHelloReply;\r\n    if (this.args.authCallback) {\r\n      this.args.authCallback(\r\n        {\r\n          user: clientHelloReply.user,\r\n          database: clientHelloReply.database,\r\n          address: connection.stream.remoteAddress,\r\n          authPluginData1: this.serverHello.authPluginData1,\r\n          authPluginData2: this.serverHello.authPluginData2,\r\n          authToken: clientHelloReply.authToken,\r\n        },\r\n        (err, mysqlError) => {\r\n          // if (err)\r\n          if (!mysqlError) {\r\n            connection.writeOk();\r\n          } else {\r\n            // TODO create constants / errorToCode\r\n            // 1045 = ER_ACCESS_DENIED_ERROR\r\n            connection.writeError({\r\n              message: mysqlError.message || '',\r\n              code: mysqlError.code || 1045,\r\n            });\r\n            connection.close();\r\n          }\r\n        }\r\n      );\r\n    } else {\r\n      connection.writeOk();\r\n    }\r\n    return ServerHandshake.prototype.dispatchCommands;\r\n  }\r\n\r\n  _isStatement(query, name) {\r\n    const firstWord = query.split(' ')[0].toUpperCase();\r\n    return firstWord === name;\r\n  }\r\n\r\n  dispatchCommands(packet, connection) {\r\n    // command from client to server\r\n    let knownCommand = true;\r\n    const encoding = connection.clientHelloReply.encoding;\r\n    const commandCode = packet.readInt8();\r\n    switch (commandCode) {\r\n      case CommandCode.STMT_PREPARE:\r\n        if (connection.listeners('stmt_prepare').length) {\r\n          const query = packet.readString(undefined, encoding);\r\n          connection.emit('stmt_prepare', query);\r\n        } else {\r\n          connection.writeError({\r\n            code: Errors.HA_ERR_INTERNAL_ERROR,\r\n            message: 'No query handler for prepared statements.',\r\n          });\r\n        }\r\n        break;\r\n      case CommandCode.STMT_EXECUTE:\r\n        if (connection.listeners('stmt_execute').length) {\r\n          const { stmtId, flags, iterationCount, values } =\r\n            Packets.Execute.fromPacket(packet, encoding);\r\n          connection.emit(\r\n            'stmt_execute',\r\n            stmtId,\r\n            flags,\r\n            iterationCount,\r\n            values\r\n          );\r\n        } else {\r\n          connection.writeError({\r\n            code: Errors.HA_ERR_INTERNAL_ERROR,\r\n            message: 'No query handler for execute statements.',\r\n          });\r\n        }\r\n        break;\r\n      case CommandCode.QUIT:\r\n        if (connection.listeners('quit').length) {\r\n          connection.emit('quit');\r\n        } else {\r\n          connection.stream.end();\r\n        }\r\n        break;\r\n      case CommandCode.INIT_DB:\r\n        if (connection.listeners('init_db').length) {\r\n          const schemaName = packet.readString(undefined, encoding);\r\n          connection.emit('init_db', schemaName);\r\n        } else {\r\n          connection.writeOk();\r\n        }\r\n        break;\r\n      case CommandCode.QUERY:\r\n        if (connection.listeners('query').length) {\r\n          const query = packet.readString(undefined, encoding);\r\n          if (\r\n            this._isStatement(query, 'PREPARE') ||\r\n            this._isStatement(query, 'SET')\r\n          ) {\r\n            connection.emit('stmt_prepare', query);\r\n          } else if (this._isStatement(query, 'EXECUTE')) {\r\n            connection.emit('stmt_execute', null, null, null, null, query);\r\n          } else connection.emit('query', query);\r\n        } else {\r\n          connection.writeError({\r\n            code: Errors.HA_ERR_INTERNAL_ERROR,\r\n            message: 'No query handler',\r\n          });\r\n        }\r\n        break;\r\n      case CommandCode.FIELD_LIST:\r\n        if (connection.listeners('field_list').length) {\r\n          const table = packet.readNullTerminatedString(encoding);\r\n          const fields = packet.readString(undefined, encoding);\r\n          connection.emit('field_list', table, fields);\r\n        } else {\r\n          connection.writeError({\r\n            code: Errors.ER_WARN_DEPRECATED_SYNTAX,\r\n            message:\r\n              'As of MySQL 5.7.11, COM_FIELD_LIST is deprecated and will be removed in a future version of MySQL.',\r\n          });\r\n        }\r\n        break;\r\n      case CommandCode.PING:\r\n        if (connection.listeners('ping').length) {\r\n          connection.emit('ping');\r\n        } else {\r\n          connection.writeOk();\r\n        }\r\n        break;\r\n      default:\r\n        knownCommand = false;\r\n    }\r\n    if (connection.listeners('packet').length) {\r\n      connection.emit('packet', packet.clone(), knownCommand, commandCode);\r\n    } else if (!knownCommand) {\r\n      // eslint-disable-next-line no-console\r\n      console.log('Unknown command:', commandCode);\r\n    }\r\n    return ServerHandshake.prototype.dispatchCommands;\r\n  }\r\n}\r\n\r\nmodule.exports = ServerHandshake;\r\n\r\n// TODO: implement server-side 4.1 authentication\r\n/*\r\n4.1 authentication: (http://bazaar.launchpad.net/~mysql/mysql-server/5.5/view/head:/sql/password.c)\r\n\r\n  SERVER:  public_seed=create_random_string()\r\n           send(public_seed)\r\n\r\n  CLIENT:  recv(public_seed)\r\n           hash_stage1=sha1(\"password\")\r\n           hash_stage2=sha1(hash_stage1)\r\n           reply=xor(hash_stage1, sha1(public_seed,hash_stage2)\r\n\r\n           // this three steps are done in scramble()\r\n\r\n           send(reply)\r\n\r\n\r\n  SERVER:  recv(reply)\r\n           hash_stage1=xor(reply, sha1(public_seed,hash_stage2))\r\n           candidate_hash2=sha1(hash_stage1)\r\n           check(candidate_hash2==hash_stage2)\r\n\r\nserver stores sha1(sha1(password)) ( hash_stag2)\r\n*/\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/commands/server_handshake.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/compressed_protocol.js":
/*!********************************************************!*\
  !*** ./node_modules/mysql2/lib/compressed_protocol.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\n\r\n\r\n// connection mixins\r\n// implementation of http://dev.mysql.com/doc/internals/en/compression.html\r\n\r\nconst zlib = __webpack_require__(/*! zlib */ \"zlib\");\r\nconst PacketParser = __webpack_require__(/*! ./packet_parser.js */ \"(middleware)/./node_modules/mysql2/lib/packet_parser.js\");\r\n\r\nfunction handleCompressedPacket(packet) {\r\n  // eslint-disable-next-line consistent-this, no-invalid-this\r\n  const connection = this;\r\n  const deflatedLength = packet.readInt24();\r\n  const body = packet.readBuffer();\r\n\r\n  if (deflatedLength !== 0) {\r\n    connection.inflateQueue.push((task) => {\r\n      zlib.inflate(body, (err, data) => {\r\n        if (err) {\r\n          connection._handleNetworkError(err);\r\n          return;\r\n        }\r\n        connection._bumpCompressedSequenceId(packet.numPackets);\r\n        connection._inflatedPacketsParser.execute(data);\r\n        task.done();\r\n      });\r\n    });\r\n  } else {\r\n    connection.inflateQueue.push((task) => {\r\n      connection._bumpCompressedSequenceId(packet.numPackets);\r\n      connection._inflatedPacketsParser.execute(body);\r\n      task.done();\r\n    });\r\n  }\r\n}\r\n\r\nfunction writeCompressed(buffer) {\r\n  // http://dev.mysql.com/doc/internals/en/example-several-mysql-packets.html\r\n  // note: sending a MySQL Packet of the size 2^24−5 to 2^24−1 via compression\r\n  // leads to at least one extra compressed packet.\r\n  // (this is because \"length of the packet before compression\" need to fit\r\n  // into 3 byte unsigned int. \"length of the packet before compression\" includes\r\n  // 4 byte packet header, hence 2^24−5)\r\n  const MAX_COMPRESSED_LENGTH = 16777210;\r\n  let start;\r\n  if (buffer.length > MAX_COMPRESSED_LENGTH) {\r\n    for (start = 0; start < buffer.length; start += MAX_COMPRESSED_LENGTH) {\r\n      writeCompressed.call(\r\n        // eslint-disable-next-line no-invalid-this\r\n        this,\r\n        buffer.slice(start, start + MAX_COMPRESSED_LENGTH)\r\n      );\r\n    }\r\n    return;\r\n  }\r\n\r\n  // eslint-disable-next-line no-invalid-this, consistent-this\r\n  const connection = this;\r\n\r\n  let packetLen = buffer.length;\r\n  const compressHeader = Buffer.allocUnsafe(7);\r\n\r\n  // seqqueue is used here because zlib async execution is routed via thread pool\r\n  // internally and when we have multiple compressed packets arriving we need\r\n  // to assemble uncompressed result sequentially\r\n  (function (seqId) {\r\n    connection.deflateQueue.push((task) => {\r\n      zlib.deflate(buffer, (err, compressed) => {\r\n        if (err) {\r\n          connection._handleFatalError(err);\r\n          return;\r\n        }\r\n        let compressedLength = compressed.length;\r\n\r\n        if (compressedLength < packetLen) {\r\n          compressHeader.writeUInt8(compressedLength & 0xff, 0);\r\n          compressHeader.writeUInt16LE(compressedLength >> 8, 1);\r\n          compressHeader.writeUInt8(seqId, 3);\r\n          compressHeader.writeUInt8(packetLen & 0xff, 4);\r\n          compressHeader.writeUInt16LE(packetLen >> 8, 5);\r\n          connection.writeUncompressed(compressHeader);\r\n          connection.writeUncompressed(compressed);\r\n        } else {\r\n          // http://dev.mysql.com/doc/internals/en/uncompressed-payload.html\r\n          // To send an uncompressed payload:\r\n          //   - set length of payload before compression to 0\r\n          //   - the compressed payload contains the uncompressed payload instead.\r\n          compressedLength = packetLen;\r\n          packetLen = 0;\r\n          compressHeader.writeUInt8(compressedLength & 0xff, 0);\r\n          compressHeader.writeUInt16LE(compressedLength >> 8, 1);\r\n          compressHeader.writeUInt8(seqId, 3);\r\n          compressHeader.writeUInt8(packetLen & 0xff, 4);\r\n          compressHeader.writeUInt16LE(packetLen >> 8, 5);\r\n          connection.writeUncompressed(compressHeader);\r\n          connection.writeUncompressed(buffer);\r\n        }\r\n        task.done();\r\n      });\r\n    });\r\n  })(connection.compressedSequenceId);\r\n  connection._bumpCompressedSequenceId(1);\r\n}\r\n\r\nfunction enableCompression(connection) {\r\n  connection._lastWrittenPacketId = 0;\r\n  connection._lastReceivedPacketId = 0;\r\n\r\n  connection._handleCompressedPacket = handleCompressedPacket;\r\n  connection._inflatedPacketsParser = new PacketParser((p) => {\r\n    connection.handlePacket(p);\r\n  }, 4);\r\n  connection._inflatedPacketsParser._lastPacket = 0;\r\n  connection.packetParser = new PacketParser((packet) => {\r\n    connection._handleCompressedPacket(packet);\r\n  }, 7);\r\n\r\n  connection.writeUncompressed = connection.write;\r\n  connection.write = writeCompressed;\r\n\r\n  const seqqueue = __webpack_require__(/*! seq-queue */ \"(middleware)/./node_modules/seq-queue/index.js\");\r\n  connection.inflateQueue = seqqueue.createQueue();\r\n  connection.deflateQueue = seqqueue.createQueue();\r\n}\r\n\r\nmodule.exports = {\r\n  enableCompression: enableCompression,\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29tcHJlc3NlZF9wcm90b2NvbC5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsbUJBQU8sQ0FBQyxrQkFBTTtBQUMzQixxQkFBcUIsbUJBQU8sQ0FBQyxtRkFBb0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0wsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHVCQUF1QjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixNQUFNO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsbUJBQU8sQ0FBQyxpRUFBVztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb21wcmVzc2VkX3Byb3RvY29sLmpzPzlkOTkiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxuLy8gY29ubmVjdGlvbiBtaXhpbnNcclxuLy8gaW1wbGVtZW50YXRpb24gb2YgaHR0cDovL2Rldi5teXNxbC5jb20vZG9jL2ludGVybmFscy9lbi9jb21wcmVzc2lvbi5odG1sXHJcblxyXG5jb25zdCB6bGliID0gcmVxdWlyZSgnemxpYicpO1xyXG5jb25zdCBQYWNrZXRQYXJzZXIgPSByZXF1aXJlKCcuL3BhY2tldF9wYXJzZXIuanMnKTtcclxuXHJcbmZ1bmN0aW9uIGhhbmRsZUNvbXByZXNzZWRQYWNrZXQocGFja2V0KSB7XHJcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNvbnNpc3RlbnQtdGhpcywgbm8taW52YWxpZC10aGlzXHJcbiAgY29uc3QgY29ubmVjdGlvbiA9IHRoaXM7XHJcbiAgY29uc3QgZGVmbGF0ZWRMZW5ndGggPSBwYWNrZXQucmVhZEludDI0KCk7XHJcbiAgY29uc3QgYm9keSA9IHBhY2tldC5yZWFkQnVmZmVyKCk7XHJcblxyXG4gIGlmIChkZWZsYXRlZExlbmd0aCAhPT0gMCkge1xyXG4gICAgY29ubmVjdGlvbi5pbmZsYXRlUXVldWUucHVzaCgodGFzaykgPT4ge1xyXG4gICAgICB6bGliLmluZmxhdGUoYm9keSwgKGVyciwgZGF0YSkgPT4ge1xyXG4gICAgICAgIGlmIChlcnIpIHtcclxuICAgICAgICAgIGNvbm5lY3Rpb24uX2hhbmRsZU5ldHdvcmtFcnJvcihlcnIpO1xyXG4gICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25uZWN0aW9uLl9idW1wQ29tcHJlc3NlZFNlcXVlbmNlSWQocGFja2V0Lm51bVBhY2tldHMpO1xyXG4gICAgICAgIGNvbm5lY3Rpb24uX2luZmxhdGVkUGFja2V0c1BhcnNlci5leGVjdXRlKGRhdGEpO1xyXG4gICAgICAgIHRhc2suZG9uZSgpO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBjb25uZWN0aW9uLmluZmxhdGVRdWV1ZS5wdXNoKCh0YXNrKSA9PiB7XHJcbiAgICAgIGNvbm5lY3Rpb24uX2J1bXBDb21wcmVzc2VkU2VxdWVuY2VJZChwYWNrZXQubnVtUGFja2V0cyk7XHJcbiAgICAgIGNvbm5lY3Rpb24uX2luZmxhdGVkUGFja2V0c1BhcnNlci5leGVjdXRlKGJvZHkpO1xyXG4gICAgICB0YXNrLmRvbmUoKTtcclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG5cclxuZnVuY3Rpb24gd3JpdGVDb21wcmVzc2VkKGJ1ZmZlcikge1xyXG4gIC8vIGh0dHA6Ly9kZXYubXlzcWwuY29tL2RvYy9pbnRlcm5hbHMvZW4vZXhhbXBsZS1zZXZlcmFsLW15c3FsLXBhY2tldHMuaHRtbFxyXG4gIC8vIG5vdGU6IHNlbmRpbmcgYSBNeVNRTCBQYWNrZXQgb2YgdGhlIHNpemUgMl4yNOKIkjUgdG8gMl4yNOKIkjEgdmlhIGNvbXByZXNzaW9uXHJcbiAgLy8gbGVhZHMgdG8gYXQgbGVhc3Qgb25lIGV4dHJhIGNvbXByZXNzZWQgcGFja2V0LlxyXG4gIC8vICh0aGlzIGlzIGJlY2F1c2UgXCJsZW5ndGggb2YgdGhlIHBhY2tldCBiZWZvcmUgY29tcHJlc3Npb25cIiBuZWVkIHRvIGZpdFxyXG4gIC8vIGludG8gMyBieXRlIHVuc2lnbmVkIGludC4gXCJsZW5ndGggb2YgdGhlIHBhY2tldCBiZWZvcmUgY29tcHJlc3Npb25cIiBpbmNsdWRlc1xyXG4gIC8vIDQgYnl0ZSBwYWNrZXQgaGVhZGVyLCBoZW5jZSAyXjI04oiSNSlcclxuICBjb25zdCBNQVhfQ09NUFJFU1NFRF9MRU5HVEggPSAxNjc3NzIxMDtcclxuICBsZXQgc3RhcnQ7XHJcbiAgaWYgKGJ1ZmZlci5sZW5ndGggPiBNQVhfQ09NUFJFU1NFRF9MRU5HVEgpIHtcclxuICAgIGZvciAoc3RhcnQgPSAwOyBzdGFydCA8IGJ1ZmZlci5sZW5ndGg7IHN0YXJ0ICs9IE1BWF9DT01QUkVTU0VEX0xFTkdUSCkge1xyXG4gICAgICB3cml0ZUNvbXByZXNzZWQuY2FsbChcclxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8taW52YWxpZC10aGlzXHJcbiAgICAgICAgdGhpcyxcclxuICAgICAgICBidWZmZXIuc2xpY2Uoc3RhcnQsIHN0YXJ0ICsgTUFYX0NPTVBSRVNTRURfTEVOR1RIKVxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWludmFsaWQtdGhpcywgY29uc2lzdGVudC10aGlzXHJcbiAgY29uc3QgY29ubmVjdGlvbiA9IHRoaXM7XHJcblxyXG4gIGxldCBwYWNrZXRMZW4gPSBidWZmZXIubGVuZ3RoO1xyXG4gIGNvbnN0IGNvbXByZXNzSGVhZGVyID0gQnVmZmVyLmFsbG9jVW5zYWZlKDcpO1xyXG5cclxuICAvLyBzZXFxdWV1ZSBpcyB1c2VkIGhlcmUgYmVjYXVzZSB6bGliIGFzeW5jIGV4ZWN1dGlvbiBpcyByb3V0ZWQgdmlhIHRocmVhZCBwb29sXHJcbiAgLy8gaW50ZXJuYWxseSBhbmQgd2hlbiB3ZSBoYXZlIG11bHRpcGxlIGNvbXByZXNzZWQgcGFja2V0cyBhcnJpdmluZyB3ZSBuZWVkXHJcbiAgLy8gdG8gYXNzZW1ibGUgdW5jb21wcmVzc2VkIHJlc3VsdCBzZXF1ZW50aWFsbHlcclxuICAoZnVuY3Rpb24gKHNlcUlkKSB7XHJcbiAgICBjb25uZWN0aW9uLmRlZmxhdGVRdWV1ZS5wdXNoKCh0YXNrKSA9PiB7XHJcbiAgICAgIHpsaWIuZGVmbGF0ZShidWZmZXIsIChlcnIsIGNvbXByZXNzZWQpID0+IHtcclxuICAgICAgICBpZiAoZXJyKSB7XHJcbiAgICAgICAgICBjb25uZWN0aW9uLl9oYW5kbGVGYXRhbEVycm9yKGVycik7XHJcbiAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCBjb21wcmVzc2VkTGVuZ3RoID0gY29tcHJlc3NlZC5sZW5ndGg7XHJcblxyXG4gICAgICAgIGlmIChjb21wcmVzc2VkTGVuZ3RoIDwgcGFja2V0TGVuKSB7XHJcbiAgICAgICAgICBjb21wcmVzc0hlYWRlci53cml0ZVVJbnQ4KGNvbXByZXNzZWRMZW5ndGggJiAweGZmLCAwKTtcclxuICAgICAgICAgIGNvbXByZXNzSGVhZGVyLndyaXRlVUludDE2TEUoY29tcHJlc3NlZExlbmd0aCA+PiA4LCAxKTtcclxuICAgICAgICAgIGNvbXByZXNzSGVhZGVyLndyaXRlVUludDgoc2VxSWQsIDMpO1xyXG4gICAgICAgICAgY29tcHJlc3NIZWFkZXIud3JpdGVVSW50OChwYWNrZXRMZW4gJiAweGZmLCA0KTtcclxuICAgICAgICAgIGNvbXByZXNzSGVhZGVyLndyaXRlVUludDE2TEUocGFja2V0TGVuID4+IDgsIDUpO1xyXG4gICAgICAgICAgY29ubmVjdGlvbi53cml0ZVVuY29tcHJlc3NlZChjb21wcmVzc0hlYWRlcik7XHJcbiAgICAgICAgICBjb25uZWN0aW9uLndyaXRlVW5jb21wcmVzc2VkKGNvbXByZXNzZWQpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAvLyBodHRwOi8vZGV2Lm15c3FsLmNvbS9kb2MvaW50ZXJuYWxzL2VuL3VuY29tcHJlc3NlZC1wYXlsb2FkLmh0bWxcclxuICAgICAgICAgIC8vIFRvIHNlbmQgYW4gdW5jb21wcmVzc2VkIHBheWxvYWQ6XHJcbiAgICAgICAgICAvLyAgIC0gc2V0IGxlbmd0aCBvZiBwYXlsb2FkIGJlZm9yZSBjb21wcmVzc2lvbiB0byAwXHJcbiAgICAgICAgICAvLyAgIC0gdGhlIGNvbXByZXNzZWQgcGF5bG9hZCBjb250YWlucyB0aGUgdW5jb21wcmVzc2VkIHBheWxvYWQgaW5zdGVhZC5cclxuICAgICAgICAgIGNvbXByZXNzZWRMZW5ndGggPSBwYWNrZXRMZW47XHJcbiAgICAgICAgICBwYWNrZXRMZW4gPSAwO1xyXG4gICAgICAgICAgY29tcHJlc3NIZWFkZXIud3JpdGVVSW50OChjb21wcmVzc2VkTGVuZ3RoICYgMHhmZiwgMCk7XHJcbiAgICAgICAgICBjb21wcmVzc0hlYWRlci53cml0ZVVJbnQxNkxFKGNvbXByZXNzZWRMZW5ndGggPj4gOCwgMSk7XHJcbiAgICAgICAgICBjb21wcmVzc0hlYWRlci53cml0ZVVJbnQ4KHNlcUlkLCAzKTtcclxuICAgICAgICAgIGNvbXByZXNzSGVhZGVyLndyaXRlVUludDgocGFja2V0TGVuICYgMHhmZiwgNCk7XHJcbiAgICAgICAgICBjb21wcmVzc0hlYWRlci53cml0ZVVJbnQxNkxFKHBhY2tldExlbiA+PiA4LCA1KTtcclxuICAgICAgICAgIGNvbm5lY3Rpb24ud3JpdGVVbmNvbXByZXNzZWQoY29tcHJlc3NIZWFkZXIpO1xyXG4gICAgICAgICAgY29ubmVjdGlvbi53cml0ZVVuY29tcHJlc3NlZChidWZmZXIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0YXNrLmRvbmUoKTtcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9KShjb25uZWN0aW9uLmNvbXByZXNzZWRTZXF1ZW5jZUlkKTtcclxuICBjb25uZWN0aW9uLl9idW1wQ29tcHJlc3NlZFNlcXVlbmNlSWQoMSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGVuYWJsZUNvbXByZXNzaW9uKGNvbm5lY3Rpb24pIHtcclxuICBjb25uZWN0aW9uLl9sYXN0V3JpdHRlblBhY2tldElkID0gMDtcclxuICBjb25uZWN0aW9uLl9sYXN0UmVjZWl2ZWRQYWNrZXRJZCA9IDA7XHJcblxyXG4gIGNvbm5lY3Rpb24uX2hhbmRsZUNvbXByZXNzZWRQYWNrZXQgPSBoYW5kbGVDb21wcmVzc2VkUGFja2V0O1xyXG4gIGNvbm5lY3Rpb24uX2luZmxhdGVkUGFja2V0c1BhcnNlciA9IG5ldyBQYWNrZXRQYXJzZXIoKHApID0+IHtcclxuICAgIGNvbm5lY3Rpb24uaGFuZGxlUGFja2V0KHApO1xyXG4gIH0sIDQpO1xyXG4gIGNvbm5lY3Rpb24uX2luZmxhdGVkUGFja2V0c1BhcnNlci5fbGFzdFBhY2tldCA9IDA7XHJcbiAgY29ubmVjdGlvbi5wYWNrZXRQYXJzZXIgPSBuZXcgUGFja2V0UGFyc2VyKChwYWNrZXQpID0+IHtcclxuICAgIGNvbm5lY3Rpb24uX2hhbmRsZUNvbXByZXNzZWRQYWNrZXQocGFja2V0KTtcclxuICB9LCA3KTtcclxuXHJcbiAgY29ubmVjdGlvbi53cml0ZVVuY29tcHJlc3NlZCA9IGNvbm5lY3Rpb24ud3JpdGU7XHJcbiAgY29ubmVjdGlvbi53cml0ZSA9IHdyaXRlQ29tcHJlc3NlZDtcclxuXHJcbiAgY29uc3Qgc2VxcXVldWUgPSByZXF1aXJlKCdzZXEtcXVldWUnKTtcclxuICBjb25uZWN0aW9uLmluZmxhdGVRdWV1ZSA9IHNlcXF1ZXVlLmNyZWF0ZVF1ZXVlKCk7XHJcbiAgY29ubmVjdGlvbi5kZWZsYXRlUXVldWUgPSBzZXFxdWV1ZS5jcmVhdGVRdWV1ZSgpO1xyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuICBlbmFibGVDb21wcmVzc2lvbjogZW5hYmxlQ29tcHJlc3Npb24sXHJcbn07XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/compressed_protocol.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/connection.js":
/*!***********************************************!*\
  !*** ./node_modules/mysql2/lib/connection.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\nconst BaseConnection = __webpack_require__(/*! ./base/connection.js */ \"(middleware)/./node_modules/mysql2/lib/base/connection.js\");\r\n\r\nclass Connection extends BaseConnection {\r\n  promise(promiseImpl) {\r\n    const PromiseConnection = __webpack_require__(/*! ./promise/connection.js */ \"(middleware)/./node_modules/mysql2/lib/promise/connection.js\");\r\n    return new PromiseConnection(this, promiseImpl);\r\n  }\r\n}\r\n\r\nmodule.exports = Connection;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29ubmVjdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsdUJBQXVCLG1CQUFPLENBQUMsdUZBQXNCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixtQkFBTyxDQUFDLDZGQUF5QjtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL2Nvbm5lY3Rpb24uanM/NWI2NSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG5jb25zdCBCYXNlQ29ubmVjdGlvbiA9IHJlcXVpcmUoJy4vYmFzZS9jb25uZWN0aW9uLmpzJyk7XHJcblxyXG5jbGFzcyBDb25uZWN0aW9uIGV4dGVuZHMgQmFzZUNvbm5lY3Rpb24ge1xyXG4gIHByb21pc2UocHJvbWlzZUltcGwpIHtcclxuICAgIGNvbnN0IFByb21pc2VDb25uZWN0aW9uID0gcmVxdWlyZSgnLi9wcm9taXNlL2Nvbm5lY3Rpb24uanMnKTtcclxuICAgIHJldHVybiBuZXcgUHJvbWlzZUNvbm5lY3Rpb24odGhpcywgcHJvbWlzZUltcGwpO1xyXG4gIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBDb25uZWN0aW9uO1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/connection.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/connection_config.js":
/*!******************************************************!*\
  !*** ./node_modules/mysql2/lib/connection_config.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("// This file was modified by Oracle on September 21, 2021.\r\n// New connection options for additional authentication factors were\r\n// introduced.\r\n// Multi-factor authentication capability is now enabled if one of these\r\n// options is used.\r\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\r\n\r\n\r\n\r\nconst { URL } = __webpack_require__(/*! url */ \"(middleware)/./node_modules/next/dist/compiled/native-url/index.js\");\r\nconst ClientConstants = __webpack_require__(/*! ./constants/client */ \"(middleware)/./node_modules/mysql2/lib/constants/client.js\");\r\nconst Charsets = __webpack_require__(/*! ./constants/charsets */ \"(middleware)/./node_modules/mysql2/lib/constants/charsets.js\");\r\nconst { version } = __webpack_require__(/*! ../package.json */ \"(middleware)/./node_modules/mysql2/package.json\");\r\nlet SSLProfiles = null;\r\n\r\nconst validOptions = {\r\n  authPlugins: 1,\r\n  authSwitchHandler: 1,\r\n  bigNumberStrings: 1,\r\n  charset: 1,\r\n  charsetNumber: 1,\r\n  compress: 1,\r\n  connectAttributes: 1,\r\n  connectTimeout: 1,\r\n  database: 1,\r\n  dateStrings: 1,\r\n  debug: 1,\r\n  decimalNumbers: 1,\r\n  enableKeepAlive: 1,\r\n  flags: 1,\r\n  host: 1,\r\n  insecureAuth: 1,\r\n  infileStreamFactory: 1,\r\n  isServer: 1,\r\n  keepAliveInitialDelay: 1,\r\n  localAddress: 1,\r\n  maxPreparedStatements: 1,\r\n  multipleStatements: 1,\r\n  namedPlaceholders: 1,\r\n  nestTables: 1,\r\n  password: 1,\r\n  // with multi-factor authentication, the main password (used for the first\r\n  // authentication factor) can be provided via password1\r\n  password1: 1,\r\n  password2: 1,\r\n  password3: 1,\r\n  passwordSha1: 1,\r\n  pool: 1,\r\n  port: 1,\r\n  queryFormat: 1,\r\n  rowsAsArray: 1,\r\n  socketPath: 1,\r\n  ssl: 1,\r\n  stream: 1,\r\n  stringifyObjects: 1,\r\n  supportBigNumbers: 1,\r\n  timezone: 1,\r\n  trace: 1,\r\n  typeCast: 1,\r\n  uri: 1,\r\n  user: 1,\r\n  disableEval: 1,\r\n  // These options are used for Pool\r\n  connectionLimit: 1,\r\n  maxIdle: 1,\r\n  idleTimeout: 1,\r\n  Promise: 1,\r\n  queueLimit: 1,\r\n  waitForConnections: 1,\r\n  jsonStrings: 1,\r\n};\r\n\r\nclass ConnectionConfig {\r\n  constructor(options) {\r\n    if (typeof options === 'string') {\r\n      options = ConnectionConfig.parseUrl(options);\r\n    } else if (options && options.uri) {\r\n      const uriOptions = ConnectionConfig.parseUrl(options.uri);\r\n      for (const key in uriOptions) {\r\n        if (!Object.prototype.hasOwnProperty.call(uriOptions, key)) continue;\r\n        if (options[key]) continue;\r\n        options[key] = uriOptions[key];\r\n      }\r\n    }\r\n    for (const key in options) {\r\n      if (!Object.prototype.hasOwnProperty.call(options, key)) continue;\r\n      if (validOptions[key] !== 1) {\r\n        // REVIEW: Should this be emitted somehow?\r\n        // eslint-disable-next-line no-console\r\n        console.error(\r\n          `Ignoring invalid configuration option passed to Connection: ${key}. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection`\r\n        );\r\n      }\r\n    }\r\n    this.isServer = options.isServer;\r\n    this.stream = options.stream;\r\n    this.host = options.host || 'localhost';\r\n    this.port =\r\n      (typeof options.port === 'string'\r\n        ? parseInt(options.port, 10)\r\n        : options.port) || 3306;\r\n    this.localAddress = options.localAddress;\r\n    this.socketPath = options.socketPath;\r\n    this.user = options.user || undefined;\r\n    // for the purpose of multi-factor authentication, or not, the main\r\n    // password (used for the 1st authentication factor) can also be\r\n    // provided via the \"password1\" option\r\n    this.password = options.password || options.password1 || undefined;\r\n    this.password2 = options.password2 || undefined;\r\n    this.password3 = options.password3 || undefined;\r\n    this.passwordSha1 = options.passwordSha1 || undefined;\r\n    this.database = options.database;\r\n    this.connectTimeout = isNaN(options.connectTimeout)\r\n      ? 10 * 1000\r\n      : options.connectTimeout;\r\n    this.insecureAuth = options.insecureAuth || false;\r\n    this.infileStreamFactory = options.infileStreamFactory || undefined;\r\n    this.supportBigNumbers = options.supportBigNumbers || false;\r\n    this.bigNumberStrings = options.bigNumberStrings || false;\r\n    this.decimalNumbers = options.decimalNumbers || false;\r\n    this.dateStrings = options.dateStrings || false;\r\n    this.debug = options.debug;\r\n    this.trace = options.trace !== false;\r\n    this.stringifyObjects = options.stringifyObjects || false;\r\n    this.enableKeepAlive = options.enableKeepAlive !== false;\r\n    this.keepAliveInitialDelay = options.keepAliveInitialDelay;\r\n    if (\r\n      options.timezone &&\r\n      !/^(?:local|Z|[ +-]\\d\\d:\\d\\d)$/.test(options.timezone)\r\n    ) {\r\n      // strictly supports timezones specified by mysqljs/mysql:\r\n      // https://github.com/mysqljs/mysql#user-content-connection-options\r\n      // eslint-disable-next-line no-console\r\n      console.error(\r\n        `Ignoring invalid timezone passed to Connection: ${options.timezone}. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection`\r\n      );\r\n      // SqlStrings falls back to UTC on invalid timezone\r\n      this.timezone = 'Z';\r\n    } else {\r\n      this.timezone = options.timezone || 'local';\r\n    }\r\n    this.queryFormat = options.queryFormat;\r\n    this.pool = options.pool || undefined;\r\n    this.ssl =\r\n      typeof options.ssl === 'string'\r\n        ? ConnectionConfig.getSSLProfile(options.ssl)\r\n        : options.ssl || false;\r\n    this.multipleStatements = options.multipleStatements || false;\r\n    this.rowsAsArray = options.rowsAsArray || false;\r\n    this.namedPlaceholders = options.namedPlaceholders || false;\r\n    this.nestTables =\r\n      options.nestTables === undefined ? undefined : options.nestTables;\r\n    this.typeCast = options.typeCast === undefined ? true : options.typeCast;\r\n    this.disableEval = Boolean(options.disableEval);\r\n    if (this.timezone[0] === ' ') {\r\n      // \"+\" is a url encoded char for space so it\r\n      // gets translated to space when giving a\r\n      // connection string..\r\n      this.timezone = `+${this.timezone.slice(1)}`;\r\n    }\r\n    if (this.ssl) {\r\n      if (typeof this.ssl !== 'object') {\r\n        throw new TypeError(\r\n          `SSL profile must be an object, instead it's a ${typeof this.ssl}`\r\n        );\r\n      }\r\n      // Default rejectUnauthorized to true\r\n      this.ssl.rejectUnauthorized = this.ssl.rejectUnauthorized !== false;\r\n    }\r\n    this.maxPacketSize = 0;\r\n    this.charsetNumber = options.charset\r\n      ? ConnectionConfig.getCharsetNumber(options.charset)\r\n      : options.charsetNumber || Charsets.UTF8MB4_UNICODE_CI;\r\n    this.compress = options.compress || false;\r\n    this.authPlugins = options.authPlugins;\r\n    this.authSwitchHandler = options.authSwitchHandler;\r\n    this.clientFlags = ConnectionConfig.mergeFlags(\r\n      ConnectionConfig.getDefaultFlags(options),\r\n      options.flags || ''\r\n    );\r\n    // Default connection attributes\r\n    // https://dev.mysql.com/doc/refman/8.0/en/performance-schema-connection-attribute-tables.html\r\n    const defaultConnectAttributes = {\r\n      _client_name: 'Node-MySQL-2',\r\n      _client_version: version,\r\n    };\r\n    this.connectAttributes = {\r\n      ...defaultConnectAttributes,\r\n      ...(options.connectAttributes || {}),\r\n    };\r\n    this.maxPreparedStatements = options.maxPreparedStatements || 16000;\r\n    this.jsonStrings = options.jsonStrings || false;\r\n  }\r\n\r\n  static mergeFlags(default_flags, user_flags) {\r\n    let flags = 0x0,\r\n      i;\r\n    if (!Array.isArray(user_flags)) {\r\n      user_flags = String(user_flags || '')\r\n        .toUpperCase()\r\n        .split(/\\s*,+\\s*/);\r\n    }\r\n    // add default flags unless \"blacklisted\"\r\n    for (i in default_flags) {\r\n      if (user_flags.indexOf(`-${default_flags[i]}`) >= 0) {\r\n        continue;\r\n      }\r\n      flags |= ClientConstants[default_flags[i]] || 0x0;\r\n    }\r\n    // add user flags unless already already added\r\n    for (i in user_flags) {\r\n      if (user_flags[i][0] === '-') {\r\n        continue;\r\n      }\r\n      if (default_flags.indexOf(user_flags[i]) >= 0) {\r\n        continue;\r\n      }\r\n      flags |= ClientConstants[user_flags[i]] || 0x0;\r\n    }\r\n    return flags;\r\n  }\r\n\r\n  static getDefaultFlags(options) {\r\n    const defaultFlags = [\r\n      'LONG_PASSWORD',\r\n      'FOUND_ROWS',\r\n      'LONG_FLAG',\r\n      'CONNECT_WITH_DB',\r\n      'ODBC',\r\n      'LOCAL_FILES',\r\n      'IGNORE_SPACE',\r\n      'PROTOCOL_41',\r\n      'IGNORE_SIGPIPE',\r\n      'TRANSACTIONS',\r\n      'RESERVED',\r\n      'SECURE_CONNECTION',\r\n      'MULTI_RESULTS',\r\n      'TRANSACTIONS',\r\n      'SESSION_TRACK',\r\n      'CONNECT_ATTRS',\r\n    ];\r\n    if (options && options.multipleStatements) {\r\n      defaultFlags.push('MULTI_STATEMENTS');\r\n    }\r\n    defaultFlags.push('PLUGIN_AUTH');\r\n    defaultFlags.push('PLUGIN_AUTH_LENENC_CLIENT_DATA');\r\n\r\n    return defaultFlags;\r\n  }\r\n\r\n  static getCharsetNumber(charset) {\r\n    const num = Charsets[charset.toUpperCase()];\r\n    if (num === undefined) {\r\n      throw new TypeError(`Unknown charset '${charset}'`);\r\n    }\r\n    return num;\r\n  }\r\n\r\n  static getSSLProfile(name) {\r\n    if (!SSLProfiles) {\r\n      SSLProfiles = __webpack_require__(/*! ./constants/ssl_profiles.js */ \"(middleware)/./node_modules/mysql2/lib/constants/ssl_profiles.js\");\r\n    }\r\n    const ssl = SSLProfiles[name];\r\n    if (ssl === undefined) {\r\n      throw new TypeError(`Unknown SSL profile '${name}'`);\r\n    }\r\n    return ssl;\r\n  }\r\n\r\n  static parseUrl(url) {\r\n    const parsedUrl = new URL(url);\r\n    const options = {\r\n      host: decodeURIComponent(parsedUrl.hostname),\r\n      port: parseInt(parsedUrl.port, 10),\r\n      database: decodeURIComponent(parsedUrl.pathname.slice(1)),\r\n      user: decodeURIComponent(parsedUrl.username),\r\n      password: decodeURIComponent(parsedUrl.password),\r\n    };\r\n    parsedUrl.searchParams.forEach((value, key) => {\r\n      try {\r\n        // Try to parse this as a JSON expression first\r\n        options[key] = JSON.parse(value);\r\n      } catch (err) {\r\n        // Otherwise assume it is a plain string\r\n        options[key] = value;\r\n      }\r\n    });\r\n    return options;\r\n  }\r\n}\r\n\r\nmodule.exports = ConnectionConfig;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29ubmVjdGlvbl9jb25maWcuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDYTtBQUNiO0FBQ0EsUUFBUSxNQUFNLEVBQUUsbUJBQU8sQ0FBQywrRUFBSztBQUM3Qix3QkFBd0IsbUJBQU8sQ0FBQyxzRkFBb0I7QUFDcEQsaUJBQWlCLG1CQUFPLENBQUMsMEZBQXNCO0FBQy9DLFFBQVEsVUFBVSxFQUFFLG1CQUFPLENBQUMsd0VBQWlCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlFQUF5RSxJQUFJO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJELGlCQUFpQjtBQUM1RTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsdUJBQXVCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJELGdCQUFnQjtBQUMzRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUM7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLGlCQUFpQjtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsUUFBUTtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsbUJBQU8sQ0FBQyxxR0FBNkI7QUFDekQ7QUFDQTtBQUNBO0FBQ0Esa0RBQWtELEtBQUs7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb25uZWN0aW9uX2NvbmZpZy5qcz9iNzI1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRoaXMgZmlsZSB3YXMgbW9kaWZpZWQgYnkgT3JhY2xlIG9uIFNlcHRlbWJlciAyMSwgMjAyMS5cclxuLy8gTmV3IGNvbm5lY3Rpb24gb3B0aW9ucyBmb3IgYWRkaXRpb25hbCBhdXRoZW50aWNhdGlvbiBmYWN0b3JzIHdlcmVcclxuLy8gaW50cm9kdWNlZC5cclxuLy8gTXVsdGktZmFjdG9yIGF1dGhlbnRpY2F0aW9uIGNhcGFiaWxpdHkgaXMgbm93IGVuYWJsZWQgaWYgb25lIG9mIHRoZXNlXHJcbi8vIG9wdGlvbnMgaXMgdXNlZC5cclxuLy8gTW9kaWZpY2F0aW9ucyBjb3B5cmlnaHQgKGMpIDIwMjEsIE9yYWNsZSBhbmQvb3IgaXRzIGFmZmlsaWF0ZXMuXHJcblxyXG4ndXNlIHN0cmljdCc7XHJcblxyXG5jb25zdCB7IFVSTCB9ID0gcmVxdWlyZSgndXJsJyk7XHJcbmNvbnN0IENsaWVudENvbnN0YW50cyA9IHJlcXVpcmUoJy4vY29uc3RhbnRzL2NsaWVudCcpO1xyXG5jb25zdCBDaGFyc2V0cyA9IHJlcXVpcmUoJy4vY29uc3RhbnRzL2NoYXJzZXRzJyk7XHJcbmNvbnN0IHsgdmVyc2lvbiB9ID0gcmVxdWlyZSgnLi4vcGFja2FnZS5qc29uJyk7XHJcbmxldCBTU0xQcm9maWxlcyA9IG51bGw7XHJcblxyXG5jb25zdCB2YWxpZE9wdGlvbnMgPSB7XHJcbiAgYXV0aFBsdWdpbnM6IDEsXHJcbiAgYXV0aFN3aXRjaEhhbmRsZXI6IDEsXHJcbiAgYmlnTnVtYmVyU3RyaW5nczogMSxcclxuICBjaGFyc2V0OiAxLFxyXG4gIGNoYXJzZXROdW1iZXI6IDEsXHJcbiAgY29tcHJlc3M6IDEsXHJcbiAgY29ubmVjdEF0dHJpYnV0ZXM6IDEsXHJcbiAgY29ubmVjdFRpbWVvdXQ6IDEsXHJcbiAgZGF0YWJhc2U6IDEsXHJcbiAgZGF0ZVN0cmluZ3M6IDEsXHJcbiAgZGVidWc6IDEsXHJcbiAgZGVjaW1hbE51bWJlcnM6IDEsXHJcbiAgZW5hYmxlS2VlcEFsaXZlOiAxLFxyXG4gIGZsYWdzOiAxLFxyXG4gIGhvc3Q6IDEsXHJcbiAgaW5zZWN1cmVBdXRoOiAxLFxyXG4gIGluZmlsZVN0cmVhbUZhY3Rvcnk6IDEsXHJcbiAgaXNTZXJ2ZXI6IDEsXHJcbiAga2VlcEFsaXZlSW5pdGlhbERlbGF5OiAxLFxyXG4gIGxvY2FsQWRkcmVzczogMSxcclxuICBtYXhQcmVwYXJlZFN0YXRlbWVudHM6IDEsXHJcbiAgbXVsdGlwbGVTdGF0ZW1lbnRzOiAxLFxyXG4gIG5hbWVkUGxhY2Vob2xkZXJzOiAxLFxyXG4gIG5lc3RUYWJsZXM6IDEsXHJcbiAgcGFzc3dvcmQ6IDEsXHJcbiAgLy8gd2l0aCBtdWx0aS1mYWN0b3IgYXV0aGVudGljYXRpb24sIHRoZSBtYWluIHBhc3N3b3JkICh1c2VkIGZvciB0aGUgZmlyc3RcclxuICAvLyBhdXRoZW50aWNhdGlvbiBmYWN0b3IpIGNhbiBiZSBwcm92aWRlZCB2aWEgcGFzc3dvcmQxXHJcbiAgcGFzc3dvcmQxOiAxLFxyXG4gIHBhc3N3b3JkMjogMSxcclxuICBwYXNzd29yZDM6IDEsXHJcbiAgcGFzc3dvcmRTaGExOiAxLFxyXG4gIHBvb2w6IDEsXHJcbiAgcG9ydDogMSxcclxuICBxdWVyeUZvcm1hdDogMSxcclxuICByb3dzQXNBcnJheTogMSxcclxuICBzb2NrZXRQYXRoOiAxLFxyXG4gIHNzbDogMSxcclxuICBzdHJlYW06IDEsXHJcbiAgc3RyaW5naWZ5T2JqZWN0czogMSxcclxuICBzdXBwb3J0QmlnTnVtYmVyczogMSxcclxuICB0aW1lem9uZTogMSxcclxuICB0cmFjZTogMSxcclxuICB0eXBlQ2FzdDogMSxcclxuICB1cmk6IDEsXHJcbiAgdXNlcjogMSxcclxuICBkaXNhYmxlRXZhbDogMSxcclxuICAvLyBUaGVzZSBvcHRpb25zIGFyZSB1c2VkIGZvciBQb29sXHJcbiAgY29ubmVjdGlvbkxpbWl0OiAxLFxyXG4gIG1heElkbGU6IDEsXHJcbiAgaWRsZVRpbWVvdXQ6IDEsXHJcbiAgUHJvbWlzZTogMSxcclxuICBxdWV1ZUxpbWl0OiAxLFxyXG4gIHdhaXRGb3JDb25uZWN0aW9uczogMSxcclxuICBqc29uU3RyaW5nczogMSxcclxufTtcclxuXHJcbmNsYXNzIENvbm5lY3Rpb25Db25maWcge1xyXG4gIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcclxuICAgIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ3N0cmluZycpIHtcclxuICAgICAgb3B0aW9ucyA9IENvbm5lY3Rpb25Db25maWcucGFyc2VVcmwob3B0aW9ucyk7XHJcbiAgICB9IGVsc2UgaWYgKG9wdGlvbnMgJiYgb3B0aW9ucy51cmkpIHtcclxuICAgICAgY29uc3QgdXJpT3B0aW9ucyA9IENvbm5lY3Rpb25Db25maWcucGFyc2VVcmwob3B0aW9ucy51cmkpO1xyXG4gICAgICBmb3IgKGNvbnN0IGtleSBpbiB1cmlPcHRpb25zKSB7XHJcbiAgICAgICAgaWYgKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodXJpT3B0aW9ucywga2V5KSkgY29udGludWU7XHJcbiAgICAgICAgaWYgKG9wdGlvbnNba2V5XSkgY29udGludWU7XHJcbiAgICAgICAgb3B0aW9uc1trZXldID0gdXJpT3B0aW9uc1trZXldO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBmb3IgKGNvbnN0IGtleSBpbiBvcHRpb25zKSB7XHJcbiAgICAgIGlmICghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9wdGlvbnMsIGtleSkpIGNvbnRpbnVlO1xyXG4gICAgICBpZiAodmFsaWRPcHRpb25zW2tleV0gIT09IDEpIHtcclxuICAgICAgICAvLyBSRVZJRVc6IFNob3VsZCB0aGlzIGJlIGVtaXR0ZWQgc29tZWhvdz9cclxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXHJcbiAgICAgICAgICBgSWdub3JpbmcgaW52YWxpZCBjb25maWd1cmF0aW9uIG9wdGlvbiBwYXNzZWQgdG8gQ29ubmVjdGlvbjogJHtrZXl9LiBUaGlzIGlzIGN1cnJlbnRseSBhIHdhcm5pbmcsIGJ1dCBpbiBmdXR1cmUgdmVyc2lvbnMgb2YgTXlTUUwyLCBhbiBlcnJvciB3aWxsIGJlIHRocm93biBpZiB5b3UgcGFzcyBhbiBpbnZhbGlkIGNvbmZpZ3VyYXRpb24gb3B0aW9uIHRvIGEgQ29ubmVjdGlvbmBcclxuICAgICAgICApO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICB0aGlzLmlzU2VydmVyID0gb3B0aW9ucy5pc1NlcnZlcjtcclxuICAgIHRoaXMuc3RyZWFtID0gb3B0aW9ucy5zdHJlYW07XHJcbiAgICB0aGlzLmhvc3QgPSBvcHRpb25zLmhvc3QgfHwgJ2xvY2FsaG9zdCc7XHJcbiAgICB0aGlzLnBvcnQgPVxyXG4gICAgICAodHlwZW9mIG9wdGlvbnMucG9ydCA9PT0gJ3N0cmluZydcclxuICAgICAgICA/IHBhcnNlSW50KG9wdGlvbnMucG9ydCwgMTApXHJcbiAgICAgICAgOiBvcHRpb25zLnBvcnQpIHx8IDMzMDY7XHJcbiAgICB0aGlzLmxvY2FsQWRkcmVzcyA9IG9wdGlvbnMubG9jYWxBZGRyZXNzO1xyXG4gICAgdGhpcy5zb2NrZXRQYXRoID0gb3B0aW9ucy5zb2NrZXRQYXRoO1xyXG4gICAgdGhpcy51c2VyID0gb3B0aW9ucy51c2VyIHx8IHVuZGVmaW5lZDtcclxuICAgIC8vIGZvciB0aGUgcHVycG9zZSBvZiBtdWx0aS1mYWN0b3IgYXV0aGVudGljYXRpb24sIG9yIG5vdCwgdGhlIG1haW5cclxuICAgIC8vIHBhc3N3b3JkICh1c2VkIGZvciB0aGUgMXN0IGF1dGhlbnRpY2F0aW9uIGZhY3RvcikgY2FuIGFsc28gYmVcclxuICAgIC8vIHByb3ZpZGVkIHZpYSB0aGUgXCJwYXNzd29yZDFcIiBvcHRpb25cclxuICAgIHRoaXMucGFzc3dvcmQgPSBvcHRpb25zLnBhc3N3b3JkIHx8IG9wdGlvbnMucGFzc3dvcmQxIHx8IHVuZGVmaW5lZDtcclxuICAgIHRoaXMucGFzc3dvcmQyID0gb3B0aW9ucy5wYXNzd29yZDIgfHwgdW5kZWZpbmVkO1xyXG4gICAgdGhpcy5wYXNzd29yZDMgPSBvcHRpb25zLnBhc3N3b3JkMyB8fCB1bmRlZmluZWQ7XHJcbiAgICB0aGlzLnBhc3N3b3JkU2hhMSA9IG9wdGlvbnMucGFzc3dvcmRTaGExIHx8IHVuZGVmaW5lZDtcclxuICAgIHRoaXMuZGF0YWJhc2UgPSBvcHRpb25zLmRhdGFiYXNlO1xyXG4gICAgdGhpcy5jb25uZWN0VGltZW91dCA9IGlzTmFOKG9wdGlvbnMuY29ubmVjdFRpbWVvdXQpXHJcbiAgICAgID8gMTAgKiAxMDAwXHJcbiAgICAgIDogb3B0aW9ucy5jb25uZWN0VGltZW91dDtcclxuICAgIHRoaXMuaW5zZWN1cmVBdXRoID0gb3B0aW9ucy5pbnNlY3VyZUF1dGggfHwgZmFsc2U7XHJcbiAgICB0aGlzLmluZmlsZVN0cmVhbUZhY3RvcnkgPSBvcHRpb25zLmluZmlsZVN0cmVhbUZhY3RvcnkgfHwgdW5kZWZpbmVkO1xyXG4gICAgdGhpcy5zdXBwb3J0QmlnTnVtYmVycyA9IG9wdGlvbnMuc3VwcG9ydEJpZ051bWJlcnMgfHwgZmFsc2U7XHJcbiAgICB0aGlzLmJpZ051bWJlclN0cmluZ3MgPSBvcHRpb25zLmJpZ051bWJlclN0cmluZ3MgfHwgZmFsc2U7XHJcbiAgICB0aGlzLmRlY2ltYWxOdW1iZXJzID0gb3B0aW9ucy5kZWNpbWFsTnVtYmVycyB8fCBmYWxzZTtcclxuICAgIHRoaXMuZGF0ZVN0cmluZ3MgPSBvcHRpb25zLmRhdGVTdHJpbmdzIHx8IGZhbHNlO1xyXG4gICAgdGhpcy5kZWJ1ZyA9IG9wdGlvbnMuZGVidWc7XHJcbiAgICB0aGlzLnRyYWNlID0gb3B0aW9ucy50cmFjZSAhPT0gZmFsc2U7XHJcbiAgICB0aGlzLnN0cmluZ2lmeU9iamVjdHMgPSBvcHRpb25zLnN0cmluZ2lmeU9iamVjdHMgfHwgZmFsc2U7XHJcbiAgICB0aGlzLmVuYWJsZUtlZXBBbGl2ZSA9IG9wdGlvbnMuZW5hYmxlS2VlcEFsaXZlICE9PSBmYWxzZTtcclxuICAgIHRoaXMua2VlcEFsaXZlSW5pdGlhbERlbGF5ID0gb3B0aW9ucy5rZWVwQWxpdmVJbml0aWFsRGVsYXk7XHJcbiAgICBpZiAoXHJcbiAgICAgIG9wdGlvbnMudGltZXpvbmUgJiZcclxuICAgICAgIS9eKD86bG9jYWx8WnxbICstXVxcZFxcZDpcXGRcXGQpJC8udGVzdChvcHRpb25zLnRpbWV6b25lKVxyXG4gICAgKSB7XHJcbiAgICAgIC8vIHN0cmljdGx5IHN1cHBvcnRzIHRpbWV6b25lcyBzcGVjaWZpZWQgYnkgbXlzcWxqcy9teXNxbDpcclxuICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL215c3FsanMvbXlzcWwjdXNlci1jb250ZW50LWNvbm5lY3Rpb24tb3B0aW9uc1xyXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxyXG4gICAgICBjb25zb2xlLmVycm9yKFxyXG4gICAgICAgIGBJZ25vcmluZyBpbnZhbGlkIHRpbWV6b25lIHBhc3NlZCB0byBDb25uZWN0aW9uOiAke29wdGlvbnMudGltZXpvbmV9LiBUaGlzIGlzIGN1cnJlbnRseSBhIHdhcm5pbmcsIGJ1dCBpbiBmdXR1cmUgdmVyc2lvbnMgb2YgTXlTUUwyLCBhbiBlcnJvciB3aWxsIGJlIHRocm93biBpZiB5b3UgcGFzcyBhbiBpbnZhbGlkIGNvbmZpZ3VyYXRpb24gb3B0aW9uIHRvIGEgQ29ubmVjdGlvbmBcclxuICAgICAgKTtcclxuICAgICAgLy8gU3FsU3RyaW5ncyBmYWxscyBiYWNrIHRvIFVUQyBvbiBpbnZhbGlkIHRpbWV6b25lXHJcbiAgICAgIHRoaXMudGltZXpvbmUgPSAnWic7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLnRpbWV6b25lID0gb3B0aW9ucy50aW1lem9uZSB8fCAnbG9jYWwnO1xyXG4gICAgfVxyXG4gICAgdGhpcy5xdWVyeUZvcm1hdCA9IG9wdGlvbnMucXVlcnlGb3JtYXQ7XHJcbiAgICB0aGlzLnBvb2wgPSBvcHRpb25zLnBvb2wgfHwgdW5kZWZpbmVkO1xyXG4gICAgdGhpcy5zc2wgPVxyXG4gICAgICB0eXBlb2Ygb3B0aW9ucy5zc2wgPT09ICdzdHJpbmcnXHJcbiAgICAgICAgPyBDb25uZWN0aW9uQ29uZmlnLmdldFNTTFByb2ZpbGUob3B0aW9ucy5zc2wpXHJcbiAgICAgICAgOiBvcHRpb25zLnNzbCB8fCBmYWxzZTtcclxuICAgIHRoaXMubXVsdGlwbGVTdGF0ZW1lbnRzID0gb3B0aW9ucy5tdWx0aXBsZVN0YXRlbWVudHMgfHwgZmFsc2U7XHJcbiAgICB0aGlzLnJvd3NBc0FycmF5ID0gb3B0aW9ucy5yb3dzQXNBcnJheSB8fCBmYWxzZTtcclxuICAgIHRoaXMubmFtZWRQbGFjZWhvbGRlcnMgPSBvcHRpb25zLm5hbWVkUGxhY2Vob2xkZXJzIHx8IGZhbHNlO1xyXG4gICAgdGhpcy5uZXN0VGFibGVzID1cclxuICAgICAgb3B0aW9ucy5uZXN0VGFibGVzID09PSB1bmRlZmluZWQgPyB1bmRlZmluZWQgOiBvcHRpb25zLm5lc3RUYWJsZXM7XHJcbiAgICB0aGlzLnR5cGVDYXN0ID0gb3B0aW9ucy50eXBlQ2FzdCA9PT0gdW5kZWZpbmVkID8gdHJ1ZSA6IG9wdGlvbnMudHlwZUNhc3Q7XHJcbiAgICB0aGlzLmRpc2FibGVFdmFsID0gQm9vbGVhbihvcHRpb25zLmRpc2FibGVFdmFsKTtcclxuICAgIGlmICh0aGlzLnRpbWV6b25lWzBdID09PSAnICcpIHtcclxuICAgICAgLy8gXCIrXCIgaXMgYSB1cmwgZW5jb2RlZCBjaGFyIGZvciBzcGFjZSBzbyBpdFxyXG4gICAgICAvLyBnZXRzIHRyYW5zbGF0ZWQgdG8gc3BhY2Ugd2hlbiBnaXZpbmcgYVxyXG4gICAgICAvLyBjb25uZWN0aW9uIHN0cmluZy4uXHJcbiAgICAgIHRoaXMudGltZXpvbmUgPSBgKyR7dGhpcy50aW1lem9uZS5zbGljZSgxKX1gO1xyXG4gICAgfVxyXG4gICAgaWYgKHRoaXMuc3NsKSB7XHJcbiAgICAgIGlmICh0eXBlb2YgdGhpcy5zc2wgIT09ICdvYmplY3QnKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcclxuICAgICAgICAgIGBTU0wgcHJvZmlsZSBtdXN0IGJlIGFuIG9iamVjdCwgaW5zdGVhZCBpdCdzIGEgJHt0eXBlb2YgdGhpcy5zc2x9YFxyXG4gICAgICAgICk7XHJcbiAgICAgIH1cclxuICAgICAgLy8gRGVmYXVsdCByZWplY3RVbmF1dGhvcml6ZWQgdG8gdHJ1ZVxyXG4gICAgICB0aGlzLnNzbC5yZWplY3RVbmF1dGhvcml6ZWQgPSB0aGlzLnNzbC5yZWplY3RVbmF1dGhvcml6ZWQgIT09IGZhbHNlO1xyXG4gICAgfVxyXG4gICAgdGhpcy5tYXhQYWNrZXRTaXplID0gMDtcclxuICAgIHRoaXMuY2hhcnNldE51bWJlciA9IG9wdGlvbnMuY2hhcnNldFxyXG4gICAgICA/IENvbm5lY3Rpb25Db25maWcuZ2V0Q2hhcnNldE51bWJlcihvcHRpb25zLmNoYXJzZXQpXHJcbiAgICAgIDogb3B0aW9ucy5jaGFyc2V0TnVtYmVyIHx8IENoYXJzZXRzLlVURjhNQjRfVU5JQ09ERV9DSTtcclxuICAgIHRoaXMuY29tcHJlc3MgPSBvcHRpb25zLmNvbXByZXNzIHx8IGZhbHNlO1xyXG4gICAgdGhpcy5hdXRoUGx1Z2lucyA9IG9wdGlvbnMuYXV0aFBsdWdpbnM7XHJcbiAgICB0aGlzLmF1dGhTd2l0Y2hIYW5kbGVyID0gb3B0aW9ucy5hdXRoU3dpdGNoSGFuZGxlcjtcclxuICAgIHRoaXMuY2xpZW50RmxhZ3MgPSBDb25uZWN0aW9uQ29uZmlnLm1lcmdlRmxhZ3MoXHJcbiAgICAgIENvbm5lY3Rpb25Db25maWcuZ2V0RGVmYXVsdEZsYWdzKG9wdGlvbnMpLFxyXG4gICAgICBvcHRpb25zLmZsYWdzIHx8ICcnXHJcbiAgICApO1xyXG4gICAgLy8gRGVmYXVsdCBjb25uZWN0aW9uIGF0dHJpYnV0ZXNcclxuICAgIC8vIGh0dHBzOi8vZGV2Lm15c3FsLmNvbS9kb2MvcmVmbWFuLzguMC9lbi9wZXJmb3JtYW5jZS1zY2hlbWEtY29ubmVjdGlvbi1hdHRyaWJ1dGUtdGFibGVzLmh0bWxcclxuICAgIGNvbnN0IGRlZmF1bHRDb25uZWN0QXR0cmlidXRlcyA9IHtcclxuICAgICAgX2NsaWVudF9uYW1lOiAnTm9kZS1NeVNRTC0yJyxcclxuICAgICAgX2NsaWVudF92ZXJzaW9uOiB2ZXJzaW9uLFxyXG4gICAgfTtcclxuICAgIHRoaXMuY29ubmVjdEF0dHJpYnV0ZXMgPSB7XHJcbiAgICAgIC4uLmRlZmF1bHRDb25uZWN0QXR0cmlidXRlcyxcclxuICAgICAgLi4uKG9wdGlvbnMuY29ubmVjdEF0dHJpYnV0ZXMgfHwge30pLFxyXG4gICAgfTtcclxuICAgIHRoaXMubWF4UHJlcGFyZWRTdGF0ZW1lbnRzID0gb3B0aW9ucy5tYXhQcmVwYXJlZFN0YXRlbWVudHMgfHwgMTYwMDA7XHJcbiAgICB0aGlzLmpzb25TdHJpbmdzID0gb3B0aW9ucy5qc29uU3RyaW5ncyB8fCBmYWxzZTtcclxuICB9XHJcblxyXG4gIHN0YXRpYyBtZXJnZUZsYWdzKGRlZmF1bHRfZmxhZ3MsIHVzZXJfZmxhZ3MpIHtcclxuICAgIGxldCBmbGFncyA9IDB4MCxcclxuICAgICAgaTtcclxuICAgIGlmICghQXJyYXkuaXNBcnJheSh1c2VyX2ZsYWdzKSkge1xyXG4gICAgICB1c2VyX2ZsYWdzID0gU3RyaW5nKHVzZXJfZmxhZ3MgfHwgJycpXHJcbiAgICAgICAgLnRvVXBwZXJDYXNlKClcclxuICAgICAgICAuc3BsaXQoL1xccyosK1xccyovKTtcclxuICAgIH1cclxuICAgIC8vIGFkZCBkZWZhdWx0IGZsYWdzIHVubGVzcyBcImJsYWNrbGlzdGVkXCJcclxuICAgIGZvciAoaSBpbiBkZWZhdWx0X2ZsYWdzKSB7XHJcbiAgICAgIGlmICh1c2VyX2ZsYWdzLmluZGV4T2YoYC0ke2RlZmF1bHRfZmxhZ3NbaV19YCkgPj0gMCkge1xyXG4gICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICB9XHJcbiAgICAgIGZsYWdzIHw9IENsaWVudENvbnN0YW50c1tkZWZhdWx0X2ZsYWdzW2ldXSB8fCAweDA7XHJcbiAgICB9XHJcbiAgICAvLyBhZGQgdXNlciBmbGFncyB1bmxlc3MgYWxyZWFkeSBhbHJlYWR5IGFkZGVkXHJcbiAgICBmb3IgKGkgaW4gdXNlcl9mbGFncykge1xyXG4gICAgICBpZiAodXNlcl9mbGFnc1tpXVswXSA9PT0gJy0nKSB7XHJcbiAgICAgICAgY29udGludWU7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKGRlZmF1bHRfZmxhZ3MuaW5kZXhPZih1c2VyX2ZsYWdzW2ldKSA+PSAwKSB7XHJcbiAgICAgICAgY29udGludWU7XHJcbiAgICAgIH1cclxuICAgICAgZmxhZ3MgfD0gQ2xpZW50Q29uc3RhbnRzW3VzZXJfZmxhZ3NbaV1dIHx8IDB4MDtcclxuICAgIH1cclxuICAgIHJldHVybiBmbGFncztcclxuICB9XHJcblxyXG4gIHN0YXRpYyBnZXREZWZhdWx0RmxhZ3Mob3B0aW9ucykge1xyXG4gICAgY29uc3QgZGVmYXVsdEZsYWdzID0gW1xyXG4gICAgICAnTE9OR19QQVNTV09SRCcsXHJcbiAgICAgICdGT1VORF9ST1dTJyxcclxuICAgICAgJ0xPTkdfRkxBRycsXHJcbiAgICAgICdDT05ORUNUX1dJVEhfREInLFxyXG4gICAgICAnT0RCQycsXHJcbiAgICAgICdMT0NBTF9GSUxFUycsXHJcbiAgICAgICdJR05PUkVfU1BBQ0UnLFxyXG4gICAgICAnUFJPVE9DT0xfNDEnLFxyXG4gICAgICAnSUdOT1JFX1NJR1BJUEUnLFxyXG4gICAgICAnVFJBTlNBQ1RJT05TJyxcclxuICAgICAgJ1JFU0VSVkVEJyxcclxuICAgICAgJ1NFQ1VSRV9DT05ORUNUSU9OJyxcclxuICAgICAgJ01VTFRJX1JFU1VMVFMnLFxyXG4gICAgICAnVFJBTlNBQ1RJT05TJyxcclxuICAgICAgJ1NFU1NJT05fVFJBQ0snLFxyXG4gICAgICAnQ09OTkVDVF9BVFRSUycsXHJcbiAgICBdO1xyXG4gICAgaWYgKG9wdGlvbnMgJiYgb3B0aW9ucy5tdWx0aXBsZVN0YXRlbWVudHMpIHtcclxuICAgICAgZGVmYXVsdEZsYWdzLnB1c2goJ01VTFRJX1NUQVRFTUVOVFMnKTtcclxuICAgIH1cclxuICAgIGRlZmF1bHRGbGFncy5wdXNoKCdQTFVHSU5fQVVUSCcpO1xyXG4gICAgZGVmYXVsdEZsYWdzLnB1c2goJ1BMVUdJTl9BVVRIX0xFTkVOQ19DTElFTlRfREFUQScpO1xyXG5cclxuICAgIHJldHVybiBkZWZhdWx0RmxhZ3M7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgZ2V0Q2hhcnNldE51bWJlcihjaGFyc2V0KSB7XHJcbiAgICBjb25zdCBudW0gPSBDaGFyc2V0c1tjaGFyc2V0LnRvVXBwZXJDYXNlKCldO1xyXG4gICAgaWYgKG51bSA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYFVua25vd24gY2hhcnNldCAnJHtjaGFyc2V0fSdgKTtcclxuICAgIH1cclxuICAgIHJldHVybiBudW07XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgZ2V0U1NMUHJvZmlsZShuYW1lKSB7XHJcbiAgICBpZiAoIVNTTFByb2ZpbGVzKSB7XHJcbiAgICAgIFNTTFByb2ZpbGVzID0gcmVxdWlyZSgnLi9jb25zdGFudHMvc3NsX3Byb2ZpbGVzLmpzJyk7XHJcbiAgICB9XHJcbiAgICBjb25zdCBzc2wgPSBTU0xQcm9maWxlc1tuYW1lXTtcclxuICAgIGlmIChzc2wgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGBVbmtub3duIFNTTCBwcm9maWxlICcke25hbWV9J2ApO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHNzbDtcclxuICB9XHJcblxyXG4gIHN0YXRpYyBwYXJzZVVybCh1cmwpIHtcclxuICAgIGNvbnN0IHBhcnNlZFVybCA9IG5ldyBVUkwodXJsKTtcclxuICAgIGNvbnN0IG9wdGlvbnMgPSB7XHJcbiAgICAgIGhvc3Q6IGRlY29kZVVSSUNvbXBvbmVudChwYXJzZWRVcmwuaG9zdG5hbWUpLFxyXG4gICAgICBwb3J0OiBwYXJzZUludChwYXJzZWRVcmwucG9ydCwgMTApLFxyXG4gICAgICBkYXRhYmFzZTogZGVjb2RlVVJJQ29tcG9uZW50KHBhcnNlZFVybC5wYXRobmFtZS5zbGljZSgxKSksXHJcbiAgICAgIHVzZXI6IGRlY29kZVVSSUNvbXBvbmVudChwYXJzZWRVcmwudXNlcm5hbWUpLFxyXG4gICAgICBwYXNzd29yZDogZGVjb2RlVVJJQ29tcG9uZW50KHBhcnNlZFVybC5wYXNzd29yZCksXHJcbiAgICB9O1xyXG4gICAgcGFyc2VkVXJsLnNlYXJjaFBhcmFtcy5mb3JFYWNoKCh2YWx1ZSwga2V5KSA9PiB7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgLy8gVHJ5IHRvIHBhcnNlIHRoaXMgYXMgYSBKU09OIGV4cHJlc3Npb24gZmlyc3RcclxuICAgICAgICBvcHRpb25zW2tleV0gPSBKU09OLnBhcnNlKHZhbHVlKTtcclxuICAgICAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICAgICAgLy8gT3RoZXJ3aXNlIGFzc3VtZSBpdCBpcyBhIHBsYWluIHN0cmluZ1xyXG4gICAgICAgIG9wdGlvbnNba2V5XSA9IHZhbHVlO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICAgIHJldHVybiBvcHRpb25zO1xyXG4gIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBDb25uZWN0aW9uQ29uZmlnO1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/connection_config.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/constants/charset_encodings.js":
/*!****************************************************************!*\
  !*** ./node_modules/mysql2/lib/constants/charset_encodings.js ***!
  \****************************************************************/
/***/ ((module) => {

"use strict";
eval("\r\n\r\n// see tools/generate-charset-mapping.js\r\n// basicalliy result of \"SHOW COLLATION\" query\r\n\r\nmodule.exports = [\r\n  'utf8',\r\n  'big5',\r\n  'latin2',\r\n  'dec8',\r\n  'cp850',\r\n  'latin1',\r\n  'hp8',\r\n  'koi8r',\r\n  'latin1',\r\n  'latin2',\r\n  'swe7',\r\n  'ascii',\r\n  'eucjp',\r\n  'sjis',\r\n  'cp1251',\r\n  'latin1',\r\n  'hebrew',\r\n  'utf8',\r\n  'tis620',\r\n  'euckr',\r\n  'latin7',\r\n  'latin2',\r\n  'koi8u',\r\n  'cp1251',\r\n  'gb2312',\r\n  'greek',\r\n  'cp1250',\r\n  'latin2',\r\n  'gbk',\r\n  'cp1257',\r\n  'latin5',\r\n  'latin1',\r\n  'armscii8',\r\n  'cesu8',\r\n  'cp1250',\r\n  'ucs2',\r\n  'cp866',\r\n  'keybcs2',\r\n  'macintosh',\r\n  'macroman',\r\n  'cp852',\r\n  'latin7',\r\n  'latin7',\r\n  'macintosh',\r\n  'cp1250',\r\n  'utf8',\r\n  'utf8',\r\n  'latin1',\r\n  'latin1',\r\n  'latin1',\r\n  'cp1251',\r\n  'cp1251',\r\n  'cp1251',\r\n  'macroman',\r\n  'utf16',\r\n  'utf16',\r\n  'utf16-le',\r\n  'cp1256',\r\n  'cp1257',\r\n  'cp1257',\r\n  'utf32',\r\n  'utf32',\r\n  'utf16-le',\r\n  'binary',\r\n  'armscii8',\r\n  'ascii',\r\n  'cp1250',\r\n  'cp1256',\r\n  'cp866',\r\n  'dec8',\r\n  'greek',\r\n  'hebrew',\r\n  'hp8',\r\n  'keybcs2',\r\n  'koi8r',\r\n  'koi8u',\r\n  'cesu8',\r\n  'latin2',\r\n  'latin5',\r\n  'latin7',\r\n  'cp850',\r\n  'cp852',\r\n  'swe7',\r\n  'cesu8',\r\n  'big5',\r\n  'euckr',\r\n  'gb2312',\r\n  'gbk',\r\n  'sjis',\r\n  'tis620',\r\n  'ucs2',\r\n  'eucjp',\r\n  'geostd8',\r\n  'geostd8',\r\n  'latin1',\r\n  'cp932',\r\n  'cp932',\r\n  'eucjpms',\r\n  'eucjpms',\r\n  'cp1250',\r\n  'utf16',\r\n  'utf16',\r\n  'utf16',\r\n  'utf16',\r\n  'utf16',\r\n  'utf16',\r\n  'utf16',\r\n  'utf16',\r\n  'utf16',\r\n  'utf16',\r\n  'utf16',\r\n  'utf16',\r\n  'utf16',\r\n  'utf16',\r\n  'utf16',\r\n  'utf16',\r\n  'utf16',\r\n  'utf16',\r\n  'utf16',\r\n  'utf16',\r\n  'utf16',\r\n  'utf16',\r\n  'utf16',\r\n  'utf16',\r\n  'utf16',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'ucs2',\r\n  'ucs2',\r\n  'ucs2',\r\n  'ucs2',\r\n  'ucs2',\r\n  'ucs2',\r\n  'ucs2',\r\n  'ucs2',\r\n  'ucs2',\r\n  'ucs2',\r\n  'ucs2',\r\n  'ucs2',\r\n  'ucs2',\r\n  'ucs2',\r\n  'ucs2',\r\n  'ucs2',\r\n  'ucs2',\r\n  'ucs2',\r\n  'ucs2',\r\n  'ucs2',\r\n  'ucs2',\r\n  'ucs2',\r\n  'ucs2',\r\n  'ucs2',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'ucs2',\r\n  'utf32',\r\n  'utf32',\r\n  'utf32',\r\n  'utf32',\r\n  'utf32',\r\n  'utf32',\r\n  'utf32',\r\n  'utf32',\r\n  'utf32',\r\n  'utf32',\r\n  'utf32',\r\n  'utf32',\r\n  'utf32',\r\n  'utf32',\r\n  'utf32',\r\n  'utf32',\r\n  'utf32',\r\n  'utf32',\r\n  'utf32',\r\n  'utf32',\r\n  'utf32',\r\n  'utf32',\r\n  'utf32',\r\n  'utf32',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'cesu8',\r\n  'cesu8',\r\n  'cesu8',\r\n  'cesu8',\r\n  'cesu8',\r\n  'cesu8',\r\n  'cesu8',\r\n  'cesu8',\r\n  'cesu8',\r\n  'cesu8',\r\n  'cesu8',\r\n  'cesu8',\r\n  'cesu8',\r\n  'cesu8',\r\n  'cesu8',\r\n  'cesu8',\r\n  'cesu8',\r\n  'cesu8',\r\n  'cesu8',\r\n  'cesu8',\r\n  'cesu8',\r\n  'cesu8',\r\n  'cesu8',\r\n  'cesu8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'cesu8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'gb18030',\r\n  'gb18030',\r\n  'gb18030',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n  'utf8',\r\n];\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/constants/charset_encodings.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/constants/charsets.js":
/*!*******************************************************!*\
  !*** ./node_modules/mysql2/lib/constants/charsets.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\n\r\nexports.BIG5_CHINESE_CI = 1;\r\nexports.LATIN2_CZECH_CS = 2;\r\nexports.DEC8_SWEDISH_CI = 3;\r\nexports.CP850_GENERAL_CI = 4;\r\nexports.LATIN1_GERMAN1_CI = 5;\r\nexports.HP8_ENGLISH_CI = 6;\r\nexports.KOI8R_GENERAL_CI = 7;\r\nexports.LATIN1_SWEDISH_CI = 8;\r\nexports.LATIN2_GENERAL_CI = 9;\r\nexports.SWE7_SWEDISH_CI = 10;\r\nexports.ASCII_GENERAL_CI = 11;\r\nexports.UJIS_JAPANESE_CI = 12;\r\nexports.SJIS_JAPANESE_CI = 13;\r\nexports.CP1251_BULGARIAN_CI = 14;\r\nexports.LATIN1_DANISH_CI = 15;\r\nexports.HEBREW_GENERAL_CI = 16;\r\nexports.TIS620_THAI_CI = 18;\r\nexports.EUCKR_KOREAN_CI = 19;\r\nexports.LATIN7_ESTONIAN_CS = 20;\r\nexports.LATIN2_HUNGARIAN_CI = 21;\r\nexports.KOI8U_GENERAL_CI = 22;\r\nexports.CP1251_UKRAINIAN_CI = 23;\r\nexports.GB2312_CHINESE_CI = 24;\r\nexports.GREEK_GENERAL_CI = 25;\r\nexports.CP1250_GENERAL_CI = 26;\r\nexports.LATIN2_CROATIAN_CI = 27;\r\nexports.GBK_CHINESE_CI = 28;\r\nexports.CP1257_LITHUANIAN_CI = 29;\r\nexports.LATIN5_TURKISH_CI = 30;\r\nexports.LATIN1_GERMAN2_CI = 31;\r\nexports.ARMSCII8_GENERAL_CI = 32;\r\nexports.UTF8_GENERAL_CI = 33;\r\nexports.CP1250_CZECH_CS = 34;\r\nexports.UCS2_GENERAL_CI = 35;\r\nexports.CP866_GENERAL_CI = 36;\r\nexports.KEYBCS2_GENERAL_CI = 37;\r\nexports.MACCE_GENERAL_CI = 38;\r\nexports.MACROMAN_GENERAL_CI = 39;\r\nexports.CP852_GENERAL_CI = 40;\r\nexports.LATIN7_GENERAL_CI = 41;\r\nexports.LATIN7_GENERAL_CS = 42;\r\nexports.MACCE_BIN = 43;\r\nexports.CP1250_CROATIAN_CI = 44;\r\nexports.UTF8MB4_GENERAL_CI = 45;\r\nexports.UTF8MB4_BIN = 46;\r\nexports.LATIN1_BIN = 47;\r\nexports.LATIN1_GENERAL_CI = 48;\r\nexports.LATIN1_GENERAL_CS = 49;\r\nexports.CP1251_BIN = 50;\r\nexports.CP1251_GENERAL_CI = 51;\r\nexports.CP1251_GENERAL_CS = 52;\r\nexports.MACROMAN_BIN = 53;\r\nexports.UTF16_GENERAL_CI = 54;\r\nexports.UTF16_BIN = 55;\r\nexports.UTF16LE_GENERAL_CI = 56;\r\nexports.CP1256_GENERAL_CI = 57;\r\nexports.CP1257_BIN = 58;\r\nexports.CP1257_GENERAL_CI = 59;\r\nexports.UTF32_GENERAL_CI = 60;\r\nexports.UTF32_BIN = 61;\r\nexports.UTF16LE_BIN = 62;\r\nexports.BINARY = 63;\r\nexports.ARMSCII8_BIN = 64;\r\nexports.ASCII_BIN = 65;\r\nexports.CP1250_BIN = 66;\r\nexports.CP1256_BIN = 67;\r\nexports.CP866_BIN = 68;\r\nexports.DEC8_BIN = 69;\r\nexports.GREEK_BIN = 70;\r\nexports.HEBREW_BIN = 71;\r\nexports.HP8_BIN = 72;\r\nexports.KEYBCS2_BIN = 73;\r\nexports.KOI8R_BIN = 74;\r\nexports.KOI8U_BIN = 75;\r\nexports.UTF8_TOLOWER_CI = 76;\r\nexports.LATIN2_BIN = 77;\r\nexports.LATIN5_BIN = 78;\r\nexports.LATIN7_BIN = 79;\r\nexports.CP850_BIN = 80;\r\nexports.CP852_BIN = 81;\r\nexports.SWE7_BIN = 82;\r\nexports.UTF8_BIN = 83;\r\nexports.BIG5_BIN = 84;\r\nexports.EUCKR_BIN = 85;\r\nexports.GB2312_BIN = 86;\r\nexports.GBK_BIN = 87;\r\nexports.SJIS_BIN = 88;\r\nexports.TIS620_BIN = 89;\r\nexports.UCS2_BIN = 90;\r\nexports.UJIS_BIN = 91;\r\nexports.GEOSTD8_GENERAL_CI = 92;\r\nexports.GEOSTD8_BIN = 93;\r\nexports.LATIN1_SPANISH_CI = 94;\r\nexports.CP932_JAPANESE_CI = 95;\r\nexports.CP932_BIN = 96;\r\nexports.EUCJPMS_JAPANESE_CI = 97;\r\nexports.EUCJPMS_BIN = 98;\r\nexports.CP1250_POLISH_CI = 99;\r\nexports.UTF16_UNICODE_CI = 101;\r\nexports.UTF16_ICELANDIC_CI = 102;\r\nexports.UTF16_LATVIAN_CI = 103;\r\nexports.UTF16_ROMANIAN_CI = 104;\r\nexports.UTF16_SLOVENIAN_CI = 105;\r\nexports.UTF16_POLISH_CI = 106;\r\nexports.UTF16_ESTONIAN_CI = 107;\r\nexports.UTF16_SPANISH_CI = 108;\r\nexports.UTF16_SWEDISH_CI = 109;\r\nexports.UTF16_TURKISH_CI = 110;\r\nexports.UTF16_CZECH_CI = 111;\r\nexports.UTF16_DANISH_CI = 112;\r\nexports.UTF16_LITHUANIAN_CI = 113;\r\nexports.UTF16_SLOVAK_CI = 114;\r\nexports.UTF16_SPANISH2_CI = 115;\r\nexports.UTF16_ROMAN_CI = 116;\r\nexports.UTF16_PERSIAN_CI = 117;\r\nexports.UTF16_ESPERANTO_CI = 118;\r\nexports.UTF16_HUNGARIAN_CI = 119;\r\nexports.UTF16_SINHALA_CI = 120;\r\nexports.UTF16_GERMAN2_CI = 121;\r\nexports.UTF16_CROATIAN_CI = 122;\r\nexports.UTF16_UNICODE_520_CI = 123;\r\nexports.UTF16_VIETNAMESE_CI = 124;\r\nexports.UCS2_UNICODE_CI = 128;\r\nexports.UCS2_ICELANDIC_CI = 129;\r\nexports.UCS2_LATVIAN_CI = 130;\r\nexports.UCS2_ROMANIAN_CI = 131;\r\nexports.UCS2_SLOVENIAN_CI = 132;\r\nexports.UCS2_POLISH_CI = 133;\r\nexports.UCS2_ESTONIAN_CI = 134;\r\nexports.UCS2_SPANISH_CI = 135;\r\nexports.UCS2_SWEDISH_CI = 136;\r\nexports.UCS2_TURKISH_CI = 137;\r\nexports.UCS2_CZECH_CI = 138;\r\nexports.UCS2_DANISH_CI = 139;\r\nexports.UCS2_LITHUANIAN_CI = 140;\r\nexports.UCS2_SLOVAK_CI = 141;\r\nexports.UCS2_SPANISH2_CI = 142;\r\nexports.UCS2_ROMAN_CI = 143;\r\nexports.UCS2_PERSIAN_CI = 144;\r\nexports.UCS2_ESPERANTO_CI = 145;\r\nexports.UCS2_HUNGARIAN_CI = 146;\r\nexports.UCS2_SINHALA_CI = 147;\r\nexports.UCS2_GERMAN2_CI = 148;\r\nexports.UCS2_CROATIAN_CI = 149;\r\nexports.UCS2_UNICODE_520_CI = 150;\r\nexports.UCS2_VIETNAMESE_CI = 151;\r\nexports.UCS2_GENERAL_MYSQL500_CI = 159;\r\nexports.UTF32_UNICODE_CI = 160;\r\nexports.UTF32_ICELANDIC_CI = 161;\r\nexports.UTF32_LATVIAN_CI = 162;\r\nexports.UTF32_ROMANIAN_CI = 163;\r\nexports.UTF32_SLOVENIAN_CI = 164;\r\nexports.UTF32_POLISH_CI = 165;\r\nexports.UTF32_ESTONIAN_CI = 166;\r\nexports.UTF32_SPANISH_CI = 167;\r\nexports.UTF32_SWEDISH_CI = 168;\r\nexports.UTF32_TURKISH_CI = 169;\r\nexports.UTF32_CZECH_CI = 170;\r\nexports.UTF32_DANISH_CI = 171;\r\nexports.UTF32_LITHUANIAN_CI = 172;\r\nexports.UTF32_SLOVAK_CI = 173;\r\nexports.UTF32_SPANISH2_CI = 174;\r\nexports.UTF32_ROMAN_CI = 175;\r\nexports.UTF32_PERSIAN_CI = 176;\r\nexports.UTF32_ESPERANTO_CI = 177;\r\nexports.UTF32_HUNGARIAN_CI = 178;\r\nexports.UTF32_SINHALA_CI = 179;\r\nexports.UTF32_GERMAN2_CI = 180;\r\nexports.UTF32_CROATIAN_CI = 181;\r\nexports.UTF32_UNICODE_520_CI = 182;\r\nexports.UTF32_VIETNAMESE_CI = 183;\r\nexports.UTF8_UNICODE_CI = 192;\r\nexports.UTF8_ICELANDIC_CI = 193;\r\nexports.UTF8_LATVIAN_CI = 194;\r\nexports.UTF8_ROMANIAN_CI = 195;\r\nexports.UTF8_SLOVENIAN_CI = 196;\r\nexports.UTF8_POLISH_CI = 197;\r\nexports.UTF8_ESTONIAN_CI = 198;\r\nexports.UTF8_SPANISH_CI = 199;\r\nexports.UTF8_SWEDISH_CI = 200;\r\nexports.UTF8_TURKISH_CI = 201;\r\nexports.UTF8_CZECH_CI = 202;\r\nexports.UTF8_DANISH_CI = 203;\r\nexports.UTF8_LITHUANIAN_CI = 204;\r\nexports.UTF8_SLOVAK_CI = 205;\r\nexports.UTF8_SPANISH2_CI = 206;\r\nexports.UTF8_ROMAN_CI = 207;\r\nexports.UTF8_PERSIAN_CI = 208;\r\nexports.UTF8_ESPERANTO_CI = 209;\r\nexports.UTF8_HUNGARIAN_CI = 210;\r\nexports.UTF8_SINHALA_CI = 211;\r\nexports.UTF8_GERMAN2_CI = 212;\r\nexports.UTF8_CROATIAN_CI = 213;\r\nexports.UTF8_UNICODE_520_CI = 214;\r\nexports.UTF8_VIETNAMESE_CI = 215;\r\nexports.UTF8_GENERAL_MYSQL500_CI = 223;\r\nexports.UTF8MB4_UNICODE_CI = 224;\r\nexports.UTF8MB4_ICELANDIC_CI = 225;\r\nexports.UTF8MB4_LATVIAN_CI = 226;\r\nexports.UTF8MB4_ROMANIAN_CI = 227;\r\nexports.UTF8MB4_SLOVENIAN_CI = 228;\r\nexports.UTF8MB4_POLISH_CI = 229;\r\nexports.UTF8MB4_ESTONIAN_CI = 230;\r\nexports.UTF8MB4_SPANISH_CI = 231;\r\nexports.UTF8MB4_SWEDISH_CI = 232;\r\nexports.UTF8MB4_TURKISH_CI = 233;\r\nexports.UTF8MB4_CZECH_CI = 234;\r\nexports.UTF8MB4_DANISH_CI = 235;\r\nexports.UTF8MB4_LITHUANIAN_CI = 236;\r\nexports.UTF8MB4_SLOVAK_CI = 237;\r\nexports.UTF8MB4_SPANISH2_CI = 238;\r\nexports.UTF8MB4_ROMAN_CI = 239;\r\nexports.UTF8MB4_PERSIAN_CI = 240;\r\nexports.UTF8MB4_ESPERANTO_CI = 241;\r\nexports.UTF8MB4_HUNGARIAN_CI = 242;\r\nexports.UTF8MB4_SINHALA_CI = 243;\r\nexports.UTF8MB4_GERMAN2_CI = 244;\r\nexports.UTF8MB4_CROATIAN_CI = 245;\r\nexports.UTF8MB4_UNICODE_520_CI = 246;\r\nexports.UTF8MB4_VIETNAMESE_CI = 247;\r\nexports.GB18030_CHINESE_CI = 248;\r\nexports.GB18030_BIN = 249;\r\nexports.GB18030_UNICODE_520_CI = 250;\r\nexports.UTF8_GENERAL50_CI = 253; // deprecated\r\nexports.UTF8MB4_0900_AI_CI = 255;\r\nexports.UTF8MB4_DE_PB_0900_AI_CI = 256;\r\nexports.UTF8MB4_IS_0900_AI_CI = 257;\r\nexports.UTF8MB4_LV_0900_AI_CI = 258;\r\nexports.UTF8MB4_RO_0900_AI_CI = 259;\r\nexports.UTF8MB4_SL_0900_AI_CI = 260;\r\nexports.UTF8MB4_PL_0900_AI_CI = 261;\r\nexports.UTF8MB4_ET_0900_AI_CI = 262;\r\nexports.UTF8MB4_ES_0900_AI_CI = 263;\r\nexports.UTF8MB4_SV_0900_AI_CI = 264;\r\nexports.UTF8MB4_TR_0900_AI_CI = 265;\r\nexports.UTF8MB4_CS_0900_AI_CI = 266;\r\nexports.UTF8MB4_DA_0900_AI_CI = 267;\r\nexports.UTF8MB4_LT_0900_AI_CI = 268;\r\nexports.UTF8MB4_SK_0900_AI_CI = 269;\r\nexports.UTF8MB4_ES_TRAD_0900_AI_CI = 270;\r\nexports.UTF8MB4_LA_0900_AI_CI = 271;\r\nexports.UTF8MB4_EO_0900_AI_CI = 273;\r\nexports.UTF8MB4_HU_0900_AI_CI = 274;\r\nexports.UTF8MB4_HR_0900_AI_CI = 275;\r\nexports.UTF8MB4_VI_0900_AI_CI = 277;\r\nexports.UTF8MB4_0900_AS_CS = 278;\r\nexports.UTF8MB4_DE_PB_0900_AS_CS = 279;\r\nexports.UTF8MB4_IS_0900_AS_CS = 280;\r\nexports.UTF8MB4_LV_0900_AS_CS = 281;\r\nexports.UTF8MB4_RO_0900_AS_CS = 282;\r\nexports.UTF8MB4_SL_0900_AS_CS = 283;\r\nexports.UTF8MB4_PL_0900_AS_CS = 284;\r\nexports.UTF8MB4_ET_0900_AS_CS = 285;\r\nexports.UTF8MB4_ES_0900_AS_CS = 286;\r\nexports.UTF8MB4_SV_0900_AS_CS = 287;\r\nexports.UTF8MB4_TR_0900_AS_CS = 288;\r\nexports.UTF8MB4_CS_0900_AS_CS = 289;\r\nexports.UTF8MB4_DA_0900_AS_CS = 290;\r\nexports.UTF8MB4_LT_0900_AS_CS = 291;\r\nexports.UTF8MB4_SK_0900_AS_CS = 292;\r\nexports.UTF8MB4_ES_TRAD_0900_AS_CS = 293;\r\nexports.UTF8MB4_LA_0900_AS_CS = 294;\r\nexports.UTF8MB4_EO_0900_AS_CS = 296;\r\nexports.UTF8MB4_HU_0900_AS_CS = 297;\r\nexports.UTF8MB4_HR_0900_AS_CS = 298;\r\nexports.UTF8MB4_VI_0900_AS_CS = 300;\r\nexports.UTF8MB4_JA_0900_AS_CS = 303;\r\nexports.UTF8MB4_JA_0900_AS_CS_KS = 304;\r\nexports.UTF8MB4_0900_AS_CI = 305;\r\nexports.UTF8MB4_RU_0900_AI_CI = 306;\r\nexports.UTF8MB4_RU_0900_AS_CS = 307;\r\nexports.UTF8MB4_ZH_0900_AS_CS = 308;\r\nexports.UTF8MB4_0900_BIN = 309;\r\n\r\n// short aliases\r\nexports.BIG5 = exports.BIG5_CHINESE_CI;\r\nexports.DEC8 = exports.DEC8_SWEDISH_CI;\r\nexports.CP850 = exports.CP850_GENERAL_CI;\r\nexports.HP8 = exports.HP8_ENGLISH_CI;\r\nexports.KOI8R = exports.KOI8R_GENERAL_CI;\r\nexports.LATIN1 = exports.LATIN1_SWEDISH_CI;\r\nexports.LATIN2 = exports.LATIN2_GENERAL_CI;\r\nexports.SWE7 = exports.SWE7_SWEDISH_CI;\r\nexports.ASCII = exports.ASCII_GENERAL_CI;\r\nexports.UJIS = exports.UJIS_JAPANESE_CI;\r\nexports.SJIS = exports.SJIS_JAPANESE_CI;\r\nexports.HEBREW = exports.HEBREW_GENERAL_CI;\r\nexports.TIS620 = exports.TIS620_THAI_CI;\r\nexports.EUCKR = exports.EUCKR_KOREAN_CI;\r\nexports.KOI8U = exports.KOI8U_GENERAL_CI;\r\nexports.GB2312 = exports.GB2312_CHINESE_CI;\r\nexports.GREEK = exports.GREEK_GENERAL_CI;\r\nexports.CP1250 = exports.CP1250_GENERAL_CI;\r\nexports.GBK = exports.GBK_CHINESE_CI;\r\nexports.LATIN5 = exports.LATIN5_TURKISH_CI;\r\nexports.ARMSCII8 = exports.ARMSCII8_GENERAL_CI;\r\nexports.UTF8 = exports.UTF8_GENERAL_CI;\r\nexports.UCS2 = exports.UCS2_GENERAL_CI;\r\nexports.CP866 = exports.CP866_GENERAL_CI;\r\nexports.KEYBCS2 = exports.KEYBCS2_GENERAL_CI;\r\nexports.MACCE = exports.MACCE_GENERAL_CI;\r\nexports.MACROMAN = exports.MACROMAN_GENERAL_CI;\r\nexports.CP852 = exports.CP852_GENERAL_CI;\r\nexports.LATIN7 = exports.LATIN7_GENERAL_CI;\r\nexports.UTF8MB4 = exports.UTF8MB4_GENERAL_CI;\r\nexports.CP1251 = exports.CP1251_GENERAL_CI;\r\nexports.UTF16 = exports.UTF16_GENERAL_CI;\r\nexports.UTF16LE = exports.UTF16LE_GENERAL_CI;\r\nexports.CP1256 = exports.CP1256_GENERAL_CI;\r\nexports.CP1257 = exports.CP1257_GENERAL_CI;\r\nexports.UTF32 = exports.UTF32_GENERAL_CI;\r\nexports.CP932 = exports.CP932_JAPANESE_CI;\r\nexports.EUCJPMS = exports.EUCJPMS_JAPANESE_CI;\r\nexports.GB18030 = exports.GB18030_CHINESE_CI;\r\nexports.GEOSTD8 = exports.GEOSTD8_GENERAL_CI;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/constants/charsets.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/constants/client.js":
/*!*****************************************************!*\
  !*** ./node_modules/mysql2/lib/constants/client.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("// This file was modified by Oracle on September 21, 2021.\r\n// New capability for multi-factor authentication based on mandatory session\r\n// trackers, that are signaled with an extra single-byte prefix on new\r\n// versions of the MySQL server.\r\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\r\n\r\n\r\n\r\n// Manually extracted from mysql-5.5.23/include/mysql_com.h\r\nexports.LONG_PASSWORD = 0x00000001; /* new more secure passwords */\r\nexports.FOUND_ROWS = 0x00000002; /* found instead of affected rows */\r\nexports.LONG_FLAG = 0x00000004; /* get all column flags */\r\nexports.CONNECT_WITH_DB = 0x00000008; /* one can specify db on connect */\r\nexports.NO_SCHEMA = 0x00000010; /* don't allow database.table.column */\r\nexports.COMPRESS = 0x00000020; /* can use compression protocol */\r\nexports.ODBC = 0x00000040; /* odbc client */\r\nexports.LOCAL_FILES = 0x00000080; /* can use LOAD DATA LOCAL */\r\nexports.IGNORE_SPACE = 0x00000100; /* ignore spaces before '' */\r\nexports.PROTOCOL_41 = 0x00000200; /* new 4.1 protocol */\r\nexports.INTERACTIVE = 0x00000400; /* this is an interactive client */\r\nexports.SSL = 0x00000800; /* switch to ssl after handshake */\r\nexports.IGNORE_SIGPIPE = 0x00001000; /* IGNORE sigpipes */\r\nexports.TRANSACTIONS = 0x00002000; /* client knows about transactions */\r\nexports.RESERVED = 0x00004000; /* old flag for 4.1 protocol  */\r\nexports.SECURE_CONNECTION = 0x00008000; /* new 4.1 authentication */\r\nexports.MULTI_STATEMENTS = 0x00010000; /* enable/disable multi-stmt support */\r\nexports.MULTI_RESULTS = 0x00020000; /* enable/disable multi-results */\r\nexports.PS_MULTI_RESULTS = 0x00040000; /* multi-results in ps-protocol */\r\nexports.PLUGIN_AUTH = 0x00080000; /* client supports plugin authentication */\r\nexports.CONNECT_ATTRS = 0x00100000; /* permits connection attributes */\r\nexports.PLUGIN_AUTH_LENENC_CLIENT_DATA = 0x00200000; /* Understands length-encoded integer for auth response data in Protocol::HandshakeResponse41. */\r\nexports.CAN_HANDLE_EXPIRED_PASSWORDS = 0x00400000; /* Announces support for expired password extension. */\r\nexports.SESSION_TRACK = 0x00800000; /* Can set SERVER_SESSION_STATE_CHANGED in the Status Flags and send session-state change data after a OK packet. */\r\nexports.DEPRECATE_EOF = 0x01000000; /* Can send OK after a Text Resultset. */\r\n\r\nexports.SSL_VERIFY_SERVER_CERT = 0x40000000;\r\nexports.REMEMBER_OPTIONS = 0x80000000;\r\n\r\nexports.MULTI_FACTOR_AUTHENTICATION = 0x10000000; /* multi-factor authentication */\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29uc3RhbnRzL2NsaWVudC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDYTtBQUNiO0FBQ0E7QUFDQSxxQkFBcUIsZUFBZTtBQUNwQyxrQkFBa0IsZUFBZTtBQUNqQyxpQkFBaUIsZUFBZTtBQUNoQyx1QkFBdUIsZUFBZTtBQUN0QyxpQkFBaUIsZUFBZTtBQUNoQyxnQkFBZ0IsZUFBZTtBQUMvQixZQUFZLGVBQWU7QUFDM0IsbUJBQW1CLGVBQWU7QUFDbEMsb0JBQW9CLGVBQWU7QUFDbkMsbUJBQW1CLGVBQWU7QUFDbEMsbUJBQW1CLGVBQWU7QUFDbEMsV0FBVyxlQUFlO0FBQzFCLHNCQUFzQixlQUFlO0FBQ3JDLG9CQUFvQixlQUFlO0FBQ25DLGdCQUFnQixlQUFlO0FBQy9CLHlCQUF5QixlQUFlO0FBQ3hDLHdCQUF3QixlQUFlO0FBQ3ZDLHFCQUFxQixlQUFlO0FBQ3BDLHdCQUF3QixlQUFlO0FBQ3ZDLG1CQUFtQixlQUFlO0FBQ2xDLHFCQUFxQixlQUFlO0FBQ3BDLHNDQUFzQyxlQUFlO0FBQ3JELG9DQUFvQyxlQUFlO0FBQ25ELHFCQUFxQixlQUFlO0FBQ3BDLHFCQUFxQixlQUFlO0FBQ3BDO0FBQ0EsOEJBQThCO0FBQzlCLHdCQUF3QjtBQUN4QjtBQUNBLG1DQUFtQyxlQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL2NvbnN0YW50cy9jbGllbnQuanM/NjI2ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGlzIGZpbGUgd2FzIG1vZGlmaWVkIGJ5IE9yYWNsZSBvbiBTZXB0ZW1iZXIgMjEsIDIwMjEuXHJcbi8vIE5ldyBjYXBhYmlsaXR5IGZvciBtdWx0aS1mYWN0b3IgYXV0aGVudGljYXRpb24gYmFzZWQgb24gbWFuZGF0b3J5IHNlc3Npb25cclxuLy8gdHJhY2tlcnMsIHRoYXQgYXJlIHNpZ25hbGVkIHdpdGggYW4gZXh0cmEgc2luZ2xlLWJ5dGUgcHJlZml4IG9uIG5ld1xyXG4vLyB2ZXJzaW9ucyBvZiB0aGUgTXlTUUwgc2VydmVyLlxyXG4vLyBNb2RpZmljYXRpb25zIGNvcHlyaWdodCAoYykgMjAyMSwgT3JhY2xlIGFuZC9vciBpdHMgYWZmaWxpYXRlcy5cclxuXHJcbid1c2Ugc3RyaWN0JztcclxuXHJcbi8vIE1hbnVhbGx5IGV4dHJhY3RlZCBmcm9tIG15c3FsLTUuNS4yMy9pbmNsdWRlL215c3FsX2NvbS5oXHJcbmV4cG9ydHMuTE9OR19QQVNTV09SRCA9IDB4MDAwMDAwMDE7IC8qIG5ldyBtb3JlIHNlY3VyZSBwYXNzd29yZHMgKi9cclxuZXhwb3J0cy5GT1VORF9ST1dTID0gMHgwMDAwMDAwMjsgLyogZm91bmQgaW5zdGVhZCBvZiBhZmZlY3RlZCByb3dzICovXHJcbmV4cG9ydHMuTE9OR19GTEFHID0gMHgwMDAwMDAwNDsgLyogZ2V0IGFsbCBjb2x1bW4gZmxhZ3MgKi9cclxuZXhwb3J0cy5DT05ORUNUX1dJVEhfREIgPSAweDAwMDAwMDA4OyAvKiBvbmUgY2FuIHNwZWNpZnkgZGIgb24gY29ubmVjdCAqL1xyXG5leHBvcnRzLk5PX1NDSEVNQSA9IDB4MDAwMDAwMTA7IC8qIGRvbid0IGFsbG93IGRhdGFiYXNlLnRhYmxlLmNvbHVtbiAqL1xyXG5leHBvcnRzLkNPTVBSRVNTID0gMHgwMDAwMDAyMDsgLyogY2FuIHVzZSBjb21wcmVzc2lvbiBwcm90b2NvbCAqL1xyXG5leHBvcnRzLk9EQkMgPSAweDAwMDAwMDQwOyAvKiBvZGJjIGNsaWVudCAqL1xyXG5leHBvcnRzLkxPQ0FMX0ZJTEVTID0gMHgwMDAwMDA4MDsgLyogY2FuIHVzZSBMT0FEIERBVEEgTE9DQUwgKi9cclxuZXhwb3J0cy5JR05PUkVfU1BBQ0UgPSAweDAwMDAwMTAwOyAvKiBpZ25vcmUgc3BhY2VzIGJlZm9yZSAnJyAqL1xyXG5leHBvcnRzLlBST1RPQ09MXzQxID0gMHgwMDAwMDIwMDsgLyogbmV3IDQuMSBwcm90b2NvbCAqL1xyXG5leHBvcnRzLklOVEVSQUNUSVZFID0gMHgwMDAwMDQwMDsgLyogdGhpcyBpcyBhbiBpbnRlcmFjdGl2ZSBjbGllbnQgKi9cclxuZXhwb3J0cy5TU0wgPSAweDAwMDAwODAwOyAvKiBzd2l0Y2ggdG8gc3NsIGFmdGVyIGhhbmRzaGFrZSAqL1xyXG5leHBvcnRzLklHTk9SRV9TSUdQSVBFID0gMHgwMDAwMTAwMDsgLyogSUdOT1JFIHNpZ3BpcGVzICovXHJcbmV4cG9ydHMuVFJBTlNBQ1RJT05TID0gMHgwMDAwMjAwMDsgLyogY2xpZW50IGtub3dzIGFib3V0IHRyYW5zYWN0aW9ucyAqL1xyXG5leHBvcnRzLlJFU0VSVkVEID0gMHgwMDAwNDAwMDsgLyogb2xkIGZsYWcgZm9yIDQuMSBwcm90b2NvbCAgKi9cclxuZXhwb3J0cy5TRUNVUkVfQ09OTkVDVElPTiA9IDB4MDAwMDgwMDA7IC8qIG5ldyA0LjEgYXV0aGVudGljYXRpb24gKi9cclxuZXhwb3J0cy5NVUxUSV9TVEFURU1FTlRTID0gMHgwMDAxMDAwMDsgLyogZW5hYmxlL2Rpc2FibGUgbXVsdGktc3RtdCBzdXBwb3J0ICovXHJcbmV4cG9ydHMuTVVMVElfUkVTVUxUUyA9IDB4MDAwMjAwMDA7IC8qIGVuYWJsZS9kaXNhYmxlIG11bHRpLXJlc3VsdHMgKi9cclxuZXhwb3J0cy5QU19NVUxUSV9SRVNVTFRTID0gMHgwMDA0MDAwMDsgLyogbXVsdGktcmVzdWx0cyBpbiBwcy1wcm90b2NvbCAqL1xyXG5leHBvcnRzLlBMVUdJTl9BVVRIID0gMHgwMDA4MDAwMDsgLyogY2xpZW50IHN1cHBvcnRzIHBsdWdpbiBhdXRoZW50aWNhdGlvbiAqL1xyXG5leHBvcnRzLkNPTk5FQ1RfQVRUUlMgPSAweDAwMTAwMDAwOyAvKiBwZXJtaXRzIGNvbm5lY3Rpb24gYXR0cmlidXRlcyAqL1xyXG5leHBvcnRzLlBMVUdJTl9BVVRIX0xFTkVOQ19DTElFTlRfREFUQSA9IDB4MDAyMDAwMDA7IC8qIFVuZGVyc3RhbmRzIGxlbmd0aC1lbmNvZGVkIGludGVnZXIgZm9yIGF1dGggcmVzcG9uc2UgZGF0YSBpbiBQcm90b2NvbDo6SGFuZHNoYWtlUmVzcG9uc2U0MS4gKi9cclxuZXhwb3J0cy5DQU5fSEFORExFX0VYUElSRURfUEFTU1dPUkRTID0gMHgwMDQwMDAwMDsgLyogQW5ub3VuY2VzIHN1cHBvcnQgZm9yIGV4cGlyZWQgcGFzc3dvcmQgZXh0ZW5zaW9uLiAqL1xyXG5leHBvcnRzLlNFU1NJT05fVFJBQ0sgPSAweDAwODAwMDAwOyAvKiBDYW4gc2V0IFNFUlZFUl9TRVNTSU9OX1NUQVRFX0NIQU5HRUQgaW4gdGhlIFN0YXR1cyBGbGFncyBhbmQgc2VuZCBzZXNzaW9uLXN0YXRlIGNoYW5nZSBkYXRhIGFmdGVyIGEgT0sgcGFja2V0LiAqL1xyXG5leHBvcnRzLkRFUFJFQ0FURV9FT0YgPSAweDAxMDAwMDAwOyAvKiBDYW4gc2VuZCBPSyBhZnRlciBhIFRleHQgUmVzdWx0c2V0LiAqL1xyXG5cclxuZXhwb3J0cy5TU0xfVkVSSUZZX1NFUlZFUl9DRVJUID0gMHg0MDAwMDAwMDtcclxuZXhwb3J0cy5SRU1FTUJFUl9PUFRJT05TID0gMHg4MDAwMDAwMDtcclxuXHJcbmV4cG9ydHMuTVVMVElfRkFDVE9SX0FVVEhFTlRJQ0FUSU9OID0gMHgxMDAwMDAwMDsgLyogbXVsdGktZmFjdG9yIGF1dGhlbnRpY2F0aW9uICovXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/constants/client.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/constants/commands.js":
/*!*******************************************************!*\
  !*** ./node_modules/mysql2/lib/constants/commands.js ***!
  \*******************************************************/
/***/ ((module) => {

"use strict";
eval("\r\n\r\nmodule.exports = {\r\n  SLEEP: 0x00, // deprecated\r\n  QUIT: 0x01,\r\n  INIT_DB: 0x02,\r\n  QUERY: 0x03,\r\n  FIELD_LIST: 0x04,\r\n  CREATE_DB: 0x05,\r\n  DROP_DB: 0x06,\r\n  REFRESH: 0x07,\r\n  SHUTDOWN: 0x08,\r\n  STATISTICS: 0x09,\r\n  PROCESS_INFO: 0x0a, // deprecated\r\n  CONNECT: 0x0b, // deprecated\r\n  PROCESS_KILL: 0x0c,\r\n  DEBUG: 0x0d,\r\n  PING: 0x0e,\r\n  TIME: 0x0f, // deprecated\r\n  DELAYED_INSERT: 0x10, // deprecated\r\n  CHANGE_USER: 0x11,\r\n  BINLOG_DUMP: 0x12,\r\n  TABLE_DUMP: 0x13,\r\n  CONNECT_OUT: 0x14,\r\n  REGISTER_SLAVE: 0x15,\r\n  STMT_PREPARE: 0x16,\r\n  STMT_EXECUTE: 0x17,\r\n  STMT_SEND_LONG_DATA: 0x18,\r\n  STMT_CLOSE: 0x19,\r\n  STMT_RESET: 0x1a,\r\n  SET_OPTION: 0x1b,\r\n  STMT_FETCH: 0x1c,\r\n  DAEMON: 0x1d, // deprecated\r\n  BINLOG_DUMP_GTID: 0x1e,\r\n  UNKNOWN: 0xff, // bad!\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29uc3RhbnRzL2NvbW1hbmRzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb25zdGFudHMvY29tbWFuZHMuanM/MTVjMSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuICBTTEVFUDogMHgwMCwgLy8gZGVwcmVjYXRlZFxyXG4gIFFVSVQ6IDB4MDEsXHJcbiAgSU5JVF9EQjogMHgwMixcclxuICBRVUVSWTogMHgwMyxcclxuICBGSUVMRF9MSVNUOiAweDA0LFxyXG4gIENSRUFURV9EQjogMHgwNSxcclxuICBEUk9QX0RCOiAweDA2LFxyXG4gIFJFRlJFU0g6IDB4MDcsXHJcbiAgU0hVVERPV046IDB4MDgsXHJcbiAgU1RBVElTVElDUzogMHgwOSxcclxuICBQUk9DRVNTX0lORk86IDB4MGEsIC8vIGRlcHJlY2F0ZWRcclxuICBDT05ORUNUOiAweDBiLCAvLyBkZXByZWNhdGVkXHJcbiAgUFJPQ0VTU19LSUxMOiAweDBjLFxyXG4gIERFQlVHOiAweDBkLFxyXG4gIFBJTkc6IDB4MGUsXHJcbiAgVElNRTogMHgwZiwgLy8gZGVwcmVjYXRlZFxyXG4gIERFTEFZRURfSU5TRVJUOiAweDEwLCAvLyBkZXByZWNhdGVkXHJcbiAgQ0hBTkdFX1VTRVI6IDB4MTEsXHJcbiAgQklOTE9HX0RVTVA6IDB4MTIsXHJcbiAgVEFCTEVfRFVNUDogMHgxMyxcclxuICBDT05ORUNUX09VVDogMHgxNCxcclxuICBSRUdJU1RFUl9TTEFWRTogMHgxNSxcclxuICBTVE1UX1BSRVBBUkU6IDB4MTYsXHJcbiAgU1RNVF9FWEVDVVRFOiAweDE3LFxyXG4gIFNUTVRfU0VORF9MT05HX0RBVEE6IDB4MTgsXHJcbiAgU1RNVF9DTE9TRTogMHgxOSxcclxuICBTVE1UX1JFU0VUOiAweDFhLFxyXG4gIFNFVF9PUFRJT046IDB4MWIsXHJcbiAgU1RNVF9GRVRDSDogMHgxYyxcclxuICBEQUVNT046IDB4MWQsIC8vIGRlcHJlY2F0ZWRcclxuICBCSU5MT0dfRFVNUF9HVElEOiAweDFlLFxyXG4gIFVOS05PV046IDB4ZmYsIC8vIGJhZCFcclxufTtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/constants/commands.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/constants/cursor.js":
/*!*****************************************************!*\
  !*** ./node_modules/mysql2/lib/constants/cursor.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\r\n\r\nmodule.exports = {\r\n  NO_CURSOR: 0,\r\n  READ_ONLY: 1,\r\n  FOR_UPDATE: 2,\r\n  SCROLLABLE: 3,\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29uc3RhbnRzL2N1cnNvci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL2NvbnN0YW50cy9jdXJzb3IuanM/MjdlMyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuICBOT19DVVJTT1I6IDAsXHJcbiAgUkVBRF9PTkxZOiAxLFxyXG4gIEZPUl9VUERBVEU6IDIsXHJcbiAgU0NST0xMQUJMRTogMyxcclxufTtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/constants/cursor.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/constants/encoding_charset.js":
/*!***************************************************************!*\
  !*** ./node_modules/mysql2/lib/constants/encoding_charset.js ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
eval("\r\n\r\n// inverse of charset_encodings\r\n// given encoding, get matching mysql charset number\r\n\r\nmodule.exports = {\r\n  big5: 1,\r\n  latin2: 2,\r\n  dec8: 3,\r\n  cp850: 4,\r\n  latin1: 5,\r\n  hp8: 6,\r\n  koi8r: 7,\r\n  swe7: 10,\r\n  ascii: 11,\r\n  eucjp: 12,\r\n  sjis: 13,\r\n  cp1251: 14,\r\n  hebrew: 16,\r\n  tis620: 18,\r\n  euckr: 19,\r\n  latin7: 20,\r\n  koi8u: 22,\r\n  gb2312: 24,\r\n  greek: 25,\r\n  cp1250: 26,\r\n  gbk: 28,\r\n  cp1257: 29,\r\n  latin5: 30,\r\n  armscii8: 32,\r\n  cesu8: 33,\r\n  ucs2: 35,\r\n  cp866: 36,\r\n  keybcs2: 37,\r\n  macintosh: 38,\r\n  macroman: 39,\r\n  cp852: 40,\r\n  utf8: 45,\r\n  utf8mb4: 45,\r\n  utf16: 54,\r\n  utf16le: 56,\r\n  cp1256: 57,\r\n  utf32: 60,\r\n  binary: 63,\r\n  geostd8: 92,\r\n  cp932: 95,\r\n  eucjpms: 97,\r\n  gb18030: 248,\r\n  utf8mb3: 192,\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29uc3RhbnRzL2VuY29kaW5nX2NoYXJzZXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb25zdGFudHMvZW5jb2RpbmdfY2hhcnNldC5qcz9kZjdhIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuXHJcbi8vIGludmVyc2Ugb2YgY2hhcnNldF9lbmNvZGluZ3NcclxuLy8gZ2l2ZW4gZW5jb2RpbmcsIGdldCBtYXRjaGluZyBteXNxbCBjaGFyc2V0IG51bWJlclxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgYmlnNTogMSxcclxuICBsYXRpbjI6IDIsXHJcbiAgZGVjODogMyxcclxuICBjcDg1MDogNCxcclxuICBsYXRpbjE6IDUsXHJcbiAgaHA4OiA2LFxyXG4gIGtvaThyOiA3LFxyXG4gIHN3ZTc6IDEwLFxyXG4gIGFzY2lpOiAxMSxcclxuICBldWNqcDogMTIsXHJcbiAgc2ppczogMTMsXHJcbiAgY3AxMjUxOiAxNCxcclxuICBoZWJyZXc6IDE2LFxyXG4gIHRpczYyMDogMTgsXHJcbiAgZXVja3I6IDE5LFxyXG4gIGxhdGluNzogMjAsXHJcbiAga29pOHU6IDIyLFxyXG4gIGdiMjMxMjogMjQsXHJcbiAgZ3JlZWs6IDI1LFxyXG4gIGNwMTI1MDogMjYsXHJcbiAgZ2JrOiAyOCxcclxuICBjcDEyNTc6IDI5LFxyXG4gIGxhdGluNTogMzAsXHJcbiAgYXJtc2NpaTg6IDMyLFxyXG4gIGNlc3U4OiAzMyxcclxuICB1Y3MyOiAzNSxcclxuICBjcDg2NjogMzYsXHJcbiAga2V5YmNzMjogMzcsXHJcbiAgbWFjaW50b3NoOiAzOCxcclxuICBtYWNyb21hbjogMzksXHJcbiAgY3A4NTI6IDQwLFxyXG4gIHV0Zjg6IDQ1LFxyXG4gIHV0ZjhtYjQ6IDQ1LFxyXG4gIHV0ZjE2OiA1NCxcclxuICB1dGYxNmxlOiA1NixcclxuICBjcDEyNTY6IDU3LFxyXG4gIHV0ZjMyOiA2MCxcclxuICBiaW5hcnk6IDYzLFxyXG4gIGdlb3N0ZDg6IDkyLFxyXG4gIGNwOTMyOiA5NSxcclxuICBldWNqcG1zOiA5NyxcclxuICBnYjE4MDMwOiAyNDgsXHJcbiAgdXRmOG1iMzogMTkyLFxyXG59O1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/constants/encoding_charset.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/constants/errors.js":
/*!*****************************************************!*\
  !*** ./node_modules/mysql2/lib/constants/errors.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("// This file was modified by Oracle on June 1, 2021.\r\n// An entry was created for a new error reported by the MySQL server due to\r\n// client inactivity.\r\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\r\n\r\n\r\n\r\n// originally copied from https://raw.githubusercontent.com/mysqljs/mysql/7770ee5bb13260c56a160b91fe480d9165dbeeba/lib/protocol/constants/errors.js\r\n// (c) node-mysql authors\r\n\r\n// updated to contain error codes as is contained in MySQL 8.0\r\n// by adapting node-mysql: /.../generate-error-constants.js\r\n\r\n/**\r\n * MySQL error constants\r\n *\r\n * Extracted from version 8.0.33\r\n *\r\n * !! Generated by generate-error-constants.js, do not modify by hand !!\r\n */\r\n\r\nexports.EE_CANTCREATEFILE = 1;\r\nexports.EE_READ = 2;\r\nexports.EE_WRITE = 3;\r\nexports.EE_BADCLOSE = 4;\r\nexports.EE_OUTOFMEMORY = 5;\r\nexports.EE_DELETE = 6;\r\nexports.EE_LINK = 7;\r\nexports.EE_EOFERR = 9;\r\nexports.EE_CANTLOCK = 10;\r\nexports.EE_CANTUNLOCK = 11;\r\nexports.EE_DIR = 12;\r\nexports.EE_STAT = 13;\r\nexports.EE_CANT_CHSIZE = 14;\r\nexports.EE_CANT_OPEN_STREAM = 15;\r\nexports.EE_GETWD = 16;\r\nexports.EE_SETWD = 17;\r\nexports.EE_LINK_WARNING = 18;\r\nexports.EE_OPEN_WARNING = 19;\r\nexports.EE_DISK_FULL = 20;\r\nexports.EE_CANT_MKDIR = 21;\r\nexports.EE_UNKNOWN_CHARSET = 22;\r\nexports.EE_OUT_OF_FILERESOURCES = 23;\r\nexports.EE_CANT_READLINK = 24;\r\nexports.EE_CANT_SYMLINK = 25;\r\nexports.EE_REALPATH = 26;\r\nexports.EE_SYNC = 27;\r\nexports.EE_UNKNOWN_COLLATION = 28;\r\nexports.EE_FILENOTFOUND = 29;\r\nexports.EE_FILE_NOT_CLOSED = 30;\r\nexports.EE_CHANGE_OWNERSHIP = 31;\r\nexports.EE_CHANGE_PERMISSIONS = 32;\r\nexports.EE_CANT_SEEK = 33;\r\nexports.EE_CAPACITY_EXCEEDED = 34;\r\nexports.EE_DISK_FULL_WITH_RETRY_MSG = 35;\r\nexports.EE_FAILED_TO_CREATE_TIMER = 36;\r\nexports.EE_FAILED_TO_DELETE_TIMER = 37;\r\nexports.EE_FAILED_TO_CREATE_TIMER_QUEUE = 38;\r\nexports.EE_FAILED_TO_START_TIMER_NOTIFY_THREAD = 39;\r\nexports.EE_FAILED_TO_CREATE_TIMER_NOTIFY_THREAD_INTERRUPT_EVENT = 40;\r\nexports.EE_EXITING_TIMER_NOTIFY_THREAD = 41;\r\nexports.EE_WIN_LIBRARY_LOAD_FAILED = 42;\r\nexports.EE_WIN_RUN_TIME_ERROR_CHECK = 43;\r\nexports.EE_FAILED_TO_DETERMINE_LARGE_PAGE_SIZE = 44;\r\nexports.EE_FAILED_TO_KILL_ALL_THREADS = 45;\r\nexports.EE_FAILED_TO_CREATE_IO_COMPLETION_PORT = 46;\r\nexports.EE_FAILED_TO_OPEN_DEFAULTS_FILE = 47;\r\nexports.EE_FAILED_TO_HANDLE_DEFAULTS_FILE = 48;\r\nexports.EE_WRONG_DIRECTIVE_IN_CONFIG_FILE = 49;\r\nexports.EE_SKIPPING_DIRECTIVE_DUE_TO_MAX_INCLUDE_RECURSION = 50;\r\nexports.EE_INCORRECT_GRP_DEFINITION_IN_CONFIG_FILE = 51;\r\nexports.EE_OPTION_WITHOUT_GRP_IN_CONFIG_FILE = 52;\r\nexports.EE_CONFIG_FILE_PERMISSION_ERROR = 53;\r\nexports.EE_IGNORE_WORLD_WRITABLE_CONFIG_FILE = 54;\r\nexports.EE_USING_DISABLED_OPTION = 55;\r\nexports.EE_USING_DISABLED_SHORT_OPTION = 56;\r\nexports.EE_USING_PASSWORD_ON_CLI_IS_INSECURE = 57;\r\nexports.EE_UNKNOWN_SUFFIX_FOR_VARIABLE = 58;\r\nexports.EE_SSL_ERROR_FROM_FILE = 59;\r\nexports.EE_SSL_ERROR = 60;\r\nexports.EE_NET_SEND_ERROR_IN_BOOTSTRAP = 61;\r\nexports.EE_PACKETS_OUT_OF_ORDER = 62;\r\nexports.EE_UNKNOWN_PROTOCOL_OPTION = 63;\r\nexports.EE_FAILED_TO_LOCATE_SERVER_PUBLIC_KEY = 64;\r\nexports.EE_PUBLIC_KEY_NOT_IN_PEM_FORMAT = 65;\r\nexports.EE_DEBUG_INFO = 66;\r\nexports.EE_UNKNOWN_VARIABLE = 67;\r\nexports.EE_UNKNOWN_OPTION = 68;\r\nexports.EE_UNKNOWN_SHORT_OPTION = 69;\r\nexports.EE_OPTION_WITHOUT_ARGUMENT = 70;\r\nexports.EE_OPTION_REQUIRES_ARGUMENT = 71;\r\nexports.EE_SHORT_OPTION_REQUIRES_ARGUMENT = 72;\r\nexports.EE_OPTION_IGNORED_DUE_TO_INVALID_VALUE = 73;\r\nexports.EE_OPTION_WITH_EMPTY_VALUE = 74;\r\nexports.EE_FAILED_TO_ASSIGN_MAX_VALUE_TO_OPTION = 75;\r\nexports.EE_INCORRECT_BOOLEAN_VALUE_FOR_OPTION = 76;\r\nexports.EE_FAILED_TO_SET_OPTION_VALUE = 77;\r\nexports.EE_INCORRECT_INT_VALUE_FOR_OPTION = 78;\r\nexports.EE_INCORRECT_UINT_VALUE_FOR_OPTION = 79;\r\nexports.EE_ADJUSTED_SIGNED_VALUE_FOR_OPTION = 80;\r\nexports.EE_ADJUSTED_UNSIGNED_VALUE_FOR_OPTION = 81;\r\nexports.EE_ADJUSTED_ULONGLONG_VALUE_FOR_OPTION = 82;\r\nexports.EE_ADJUSTED_DOUBLE_VALUE_FOR_OPTION = 83;\r\nexports.EE_INVALID_DECIMAL_VALUE_FOR_OPTION = 84;\r\nexports.EE_COLLATION_PARSER_ERROR = 85;\r\nexports.EE_FAILED_TO_RESET_BEFORE_PRIMARY_IGNORABLE_CHAR = 86;\r\nexports.EE_FAILED_TO_RESET_BEFORE_TERTIARY_IGNORABLE_CHAR = 87;\r\nexports.EE_SHIFT_CHAR_OUT_OF_RANGE = 88;\r\nexports.EE_RESET_CHAR_OUT_OF_RANGE = 89;\r\nexports.EE_UNKNOWN_LDML_TAG = 90;\r\nexports.EE_FAILED_TO_RESET_BEFORE_SECONDARY_IGNORABLE_CHAR = 91;\r\nexports.EE_FAILED_PROCESSING_DIRECTIVE = 92;\r\nexports.EE_PTHREAD_KILL_FAILED = 93;\r\nexports.HA_ERR_KEY_NOT_FOUND = 120;\r\nexports.HA_ERR_FOUND_DUPP_KEY = 121;\r\nexports.HA_ERR_INTERNAL_ERROR = 122;\r\nexports.HA_ERR_RECORD_CHANGED = 123;\r\nexports.HA_ERR_WRONG_INDEX = 124;\r\nexports.HA_ERR_ROLLED_BACK = 125;\r\nexports.HA_ERR_CRASHED = 126;\r\nexports.HA_ERR_WRONG_IN_RECORD = 127;\r\nexports.HA_ERR_OUT_OF_MEM = 128;\r\nexports.HA_ERR_NOT_A_TABLE = 130;\r\nexports.HA_ERR_WRONG_COMMAND = 131;\r\nexports.HA_ERR_OLD_FILE = 132;\r\nexports.HA_ERR_NO_ACTIVE_RECORD = 133;\r\nexports.HA_ERR_RECORD_DELETED = 134;\r\nexports.HA_ERR_RECORD_FILE_FULL = 135;\r\nexports.HA_ERR_INDEX_FILE_FULL = 136;\r\nexports.HA_ERR_END_OF_FILE = 137;\r\nexports.HA_ERR_UNSUPPORTED = 138;\r\nexports.HA_ERR_TOO_BIG_ROW = 139;\r\nexports.HA_WRONG_CREATE_OPTION = 140;\r\nexports.HA_ERR_FOUND_DUPP_UNIQUE = 141;\r\nexports.HA_ERR_UNKNOWN_CHARSET = 142;\r\nexports.HA_ERR_WRONG_MRG_TABLE_DEF = 143;\r\nexports.HA_ERR_CRASHED_ON_REPAIR = 144;\r\nexports.HA_ERR_CRASHED_ON_USAGE = 145;\r\nexports.HA_ERR_LOCK_WAIT_TIMEOUT = 146;\r\nexports.HA_ERR_LOCK_TABLE_FULL = 147;\r\nexports.HA_ERR_READ_ONLY_TRANSACTION = 148;\r\nexports.HA_ERR_LOCK_DEADLOCK = 149;\r\nexports.HA_ERR_CANNOT_ADD_FOREIGN = 150;\r\nexports.HA_ERR_NO_REFERENCED_ROW = 151;\r\nexports.HA_ERR_ROW_IS_REFERENCED = 152;\r\nexports.HA_ERR_NO_SAVEPOINT = 153;\r\nexports.HA_ERR_NON_UNIQUE_BLOCK_SIZE = 154;\r\nexports.HA_ERR_NO_SUCH_TABLE = 155;\r\nexports.HA_ERR_TABLE_EXIST = 156;\r\nexports.HA_ERR_NO_CONNECTION = 157;\r\nexports.HA_ERR_NULL_IN_SPATIAL = 158;\r\nexports.HA_ERR_TABLE_DEF_CHANGED = 159;\r\nexports.HA_ERR_NO_PARTITION_FOUND = 160;\r\nexports.HA_ERR_RBR_LOGGING_FAILED = 161;\r\nexports.HA_ERR_DROP_INDEX_FK = 162;\r\nexports.HA_ERR_FOREIGN_DUPLICATE_KEY = 163;\r\nexports.HA_ERR_TABLE_NEEDS_UPGRADE = 164;\r\nexports.HA_ERR_TABLE_READONLY = 165;\r\nexports.HA_ERR_AUTOINC_READ_FAILED = 166;\r\nexports.HA_ERR_AUTOINC_ERANGE = 167;\r\nexports.HA_ERR_GENERIC = 168;\r\nexports.HA_ERR_RECORD_IS_THE_SAME = 169;\r\nexports.HA_ERR_LOGGING_IMPOSSIBLE = 170;\r\nexports.HA_ERR_CORRUPT_EVENT = 171;\r\nexports.HA_ERR_NEW_FILE = 172;\r\nexports.HA_ERR_ROWS_EVENT_APPLY = 173;\r\nexports.HA_ERR_INITIALIZATION = 174;\r\nexports.HA_ERR_FILE_TOO_SHORT = 175;\r\nexports.HA_ERR_WRONG_CRC = 176;\r\nexports.HA_ERR_TOO_MANY_CONCURRENT_TRXS = 177;\r\nexports.HA_ERR_NOT_IN_LOCK_PARTITIONS = 178;\r\nexports.HA_ERR_INDEX_COL_TOO_LONG = 179;\r\nexports.HA_ERR_INDEX_CORRUPT = 180;\r\nexports.HA_ERR_UNDO_REC_TOO_BIG = 181;\r\nexports.HA_FTS_INVALID_DOCID = 182;\r\nexports.HA_ERR_TABLE_IN_FK_CHECK = 183;\r\nexports.HA_ERR_TABLESPACE_EXISTS = 184;\r\nexports.HA_ERR_TOO_MANY_FIELDS = 185;\r\nexports.HA_ERR_ROW_IN_WRONG_PARTITION = 186;\r\nexports.HA_ERR_INNODB_READ_ONLY = 187;\r\nexports.HA_ERR_FTS_EXCEED_RESULT_CACHE_LIMIT = 188;\r\nexports.HA_ERR_TEMP_FILE_WRITE_FAILURE = 189;\r\nexports.HA_ERR_INNODB_FORCED_RECOVERY = 190;\r\nexports.HA_ERR_FTS_TOO_MANY_WORDS_IN_PHRASE = 191;\r\nexports.HA_ERR_FK_DEPTH_EXCEEDED = 192;\r\nexports.HA_MISSING_CREATE_OPTION = 193;\r\nexports.HA_ERR_SE_OUT_OF_MEMORY = 194;\r\nexports.HA_ERR_TABLE_CORRUPT = 195;\r\nexports.HA_ERR_QUERY_INTERRUPTED = 196;\r\nexports.HA_ERR_TABLESPACE_MISSING = 197;\r\nexports.HA_ERR_TABLESPACE_IS_NOT_EMPTY = 198;\r\nexports.HA_ERR_WRONG_FILE_NAME = 199;\r\nexports.HA_ERR_NOT_ALLOWED_COMMAND = 200;\r\nexports.HA_ERR_COMPUTE_FAILED = 201;\r\nexports.HA_ERR_ROW_FORMAT_CHANGED = 202;\r\nexports.HA_ERR_NO_WAIT_LOCK = 203;\r\nexports.HA_ERR_DISK_FULL_NOWAIT = 204;\r\nexports.HA_ERR_NO_SESSION_TEMP = 205;\r\nexports.HA_ERR_WRONG_TABLE_NAME = 206;\r\nexports.HA_ERR_TOO_LONG_PATH = 207;\r\nexports.HA_ERR_SAMPLING_INIT_FAILED = 208;\r\nexports.HA_ERR_FTS_TOO_MANY_NESTED_EXP = 209;\r\nexports.ER_HASHCHK = 1000;\r\nexports.ER_NISAMCHK = 1001;\r\nexports.ER_NO = 1002;\r\nexports.ER_YES = 1003;\r\nexports.ER_CANT_CREATE_FILE = 1004;\r\nexports.ER_CANT_CREATE_TABLE = 1005;\r\nexports.ER_CANT_CREATE_DB = 1006;\r\nexports.ER_DB_CREATE_EXISTS = 1007;\r\nexports.ER_DB_DROP_EXISTS = 1008;\r\nexports.ER_DB_DROP_DELETE = 1009;\r\nexports.ER_DB_DROP_RMDIR = 1010;\r\nexports.ER_CANT_DELETE_FILE = 1011;\r\nexports.ER_CANT_FIND_SYSTEM_REC = 1012;\r\nexports.ER_CANT_GET_STAT = 1013;\r\nexports.ER_CANT_GET_WD = 1014;\r\nexports.ER_CANT_LOCK = 1015;\r\nexports.ER_CANT_OPEN_FILE = 1016;\r\nexports.ER_FILE_NOT_FOUND = 1017;\r\nexports.ER_CANT_READ_DIR = 1018;\r\nexports.ER_CANT_SET_WD = 1019;\r\nexports.ER_CHECKREAD = 1020;\r\nexports.ER_DISK_FULL = 1021;\r\nexports.ER_DUP_KEY = 1022;\r\nexports.ER_ERROR_ON_CLOSE = 1023;\r\nexports.ER_ERROR_ON_READ = 1024;\r\nexports.ER_ERROR_ON_RENAME = 1025;\r\nexports.ER_ERROR_ON_WRITE = 1026;\r\nexports.ER_FILE_USED = 1027;\r\nexports.ER_FILSORT_ABORT = 1028;\r\nexports.ER_FORM_NOT_FOUND = 1029;\r\nexports.ER_GET_ERRNO = 1030;\r\nexports.ER_ILLEGAL_HA = 1031;\r\nexports.ER_KEY_NOT_FOUND = 1032;\r\nexports.ER_NOT_FORM_FILE = 1033;\r\nexports.ER_NOT_KEYFILE = 1034;\r\nexports.ER_OLD_KEYFILE = 1035;\r\nexports.ER_OPEN_AS_READONLY = 1036;\r\nexports.ER_OUTOFMEMORY = 1037;\r\nexports.ER_OUT_OF_SORTMEMORY = 1038;\r\nexports.ER_UNEXPECTED_EOF = 1039;\r\nexports.ER_CON_COUNT_ERROR = 1040;\r\nexports.ER_OUT_OF_RESOURCES = 1041;\r\nexports.ER_BAD_HOST_ERROR = 1042;\r\nexports.ER_HANDSHAKE_ERROR = 1043;\r\nexports.ER_DBACCESS_DENIED_ERROR = 1044;\r\nexports.ER_ACCESS_DENIED_ERROR = 1045;\r\nexports.ER_NO_DB_ERROR = 1046;\r\nexports.ER_UNKNOWN_COM_ERROR = 1047;\r\nexports.ER_BAD_NULL_ERROR = 1048;\r\nexports.ER_BAD_DB_ERROR = 1049;\r\nexports.ER_TABLE_EXISTS_ERROR = 1050;\r\nexports.ER_BAD_TABLE_ERROR = 1051;\r\nexports.ER_NON_UNIQ_ERROR = 1052;\r\nexports.ER_SERVER_SHUTDOWN = 1053;\r\nexports.ER_BAD_FIELD_ERROR = 1054;\r\nexports.ER_WRONG_FIELD_WITH_GROUP = 1055;\r\nexports.ER_WRONG_GROUP_FIELD = 1056;\r\nexports.ER_WRONG_SUM_SELECT = 1057;\r\nexports.ER_WRONG_VALUE_COUNT = 1058;\r\nexports.ER_TOO_LONG_IDENT = 1059;\r\nexports.ER_DUP_FIELDNAME = 1060;\r\nexports.ER_DUP_KEYNAME = 1061;\r\nexports.ER_DUP_ENTRY = 1062;\r\nexports.ER_WRONG_FIELD_SPEC = 1063;\r\nexports.ER_PARSE_ERROR = 1064;\r\nexports.ER_EMPTY_QUERY = 1065;\r\nexports.ER_NONUNIQ_TABLE = 1066;\r\nexports.ER_INVALID_DEFAULT = 1067;\r\nexports.ER_MULTIPLE_PRI_KEY = 1068;\r\nexports.ER_TOO_MANY_KEYS = 1069;\r\nexports.ER_TOO_MANY_KEY_PARTS = 1070;\r\nexports.ER_TOO_LONG_KEY = 1071;\r\nexports.ER_KEY_COLUMN_DOES_NOT_EXITS = 1072;\r\nexports.ER_BLOB_USED_AS_KEY = 1073;\r\nexports.ER_TOO_BIG_FIELDLENGTH = 1074;\r\nexports.ER_WRONG_AUTO_KEY = 1075;\r\nexports.ER_READY = 1076;\r\nexports.ER_NORMAL_SHUTDOWN = 1077;\r\nexports.ER_GOT_SIGNAL = 1078;\r\nexports.ER_SHUTDOWN_COMPLETE = 1079;\r\nexports.ER_FORCING_CLOSE = 1080;\r\nexports.ER_IPSOCK_ERROR = 1081;\r\nexports.ER_NO_SUCH_INDEX = 1082;\r\nexports.ER_WRONG_FIELD_TERMINATORS = 1083;\r\nexports.ER_BLOBS_AND_NO_TERMINATED = 1084;\r\nexports.ER_TEXTFILE_NOT_READABLE = 1085;\r\nexports.ER_FILE_EXISTS_ERROR = 1086;\r\nexports.ER_LOAD_INFO = 1087;\r\nexports.ER_ALTER_INFO = 1088;\r\nexports.ER_WRONG_SUB_KEY = 1089;\r\nexports.ER_CANT_REMOVE_ALL_FIELDS = 1090;\r\nexports.ER_CANT_DROP_FIELD_OR_KEY = 1091;\r\nexports.ER_INSERT_INFO = 1092;\r\nexports.ER_UPDATE_TABLE_USED = 1093;\r\nexports.ER_NO_SUCH_THREAD = 1094;\r\nexports.ER_KILL_DENIED_ERROR = 1095;\r\nexports.ER_NO_TABLES_USED = 1096;\r\nexports.ER_TOO_BIG_SET = 1097;\r\nexports.ER_NO_UNIQUE_LOGFILE = 1098;\r\nexports.ER_TABLE_NOT_LOCKED_FOR_WRITE = 1099;\r\nexports.ER_TABLE_NOT_LOCKED = 1100;\r\nexports.ER_BLOB_CANT_HAVE_DEFAULT = 1101;\r\nexports.ER_WRONG_DB_NAME = 1102;\r\nexports.ER_WRONG_TABLE_NAME = 1103;\r\nexports.ER_TOO_BIG_SELECT = 1104;\r\nexports.ER_UNKNOWN_ERROR = 1105;\r\nexports.ER_UNKNOWN_PROCEDURE = 1106;\r\nexports.ER_WRONG_PARAMCOUNT_TO_PROCEDURE = 1107;\r\nexports.ER_WRONG_PARAMETERS_TO_PROCEDURE = 1108;\r\nexports.ER_UNKNOWN_TABLE = 1109;\r\nexports.ER_FIELD_SPECIFIED_TWICE = 1110;\r\nexports.ER_INVALID_GROUP_FUNC_USE = 1111;\r\nexports.ER_UNSUPPORTED_EXTENSION = 1112;\r\nexports.ER_TABLE_MUST_HAVE_COLUMNS = 1113;\r\nexports.ER_RECORD_FILE_FULL = 1114;\r\nexports.ER_UNKNOWN_CHARACTER_SET = 1115;\r\nexports.ER_TOO_MANY_TABLES = 1116;\r\nexports.ER_TOO_MANY_FIELDS = 1117;\r\nexports.ER_TOO_BIG_ROWSIZE = 1118;\r\nexports.ER_STACK_OVERRUN = 1119;\r\nexports.ER_WRONG_OUTER_JOIN = 1120;\r\nexports.ER_NULL_COLUMN_IN_INDEX = 1121;\r\nexports.ER_CANT_FIND_UDF = 1122;\r\nexports.ER_CANT_INITIALIZE_UDF = 1123;\r\nexports.ER_UDF_NO_PATHS = 1124;\r\nexports.ER_UDF_EXISTS = 1125;\r\nexports.ER_CANT_OPEN_LIBRARY = 1126;\r\nexports.ER_CANT_FIND_DL_ENTRY = 1127;\r\nexports.ER_FUNCTION_NOT_DEFINED = 1128;\r\nexports.ER_HOST_IS_BLOCKED = 1129;\r\nexports.ER_HOST_NOT_PRIVILEGED = 1130;\r\nexports.ER_PASSWORD_ANONYMOUS_USER = 1131;\r\nexports.ER_PASSWORD_NOT_ALLOWED = 1132;\r\nexports.ER_PASSWORD_NO_MATCH = 1133;\r\nexports.ER_UPDATE_INFO = 1134;\r\nexports.ER_CANT_CREATE_THREAD = 1135;\r\nexports.ER_WRONG_VALUE_COUNT_ON_ROW = 1136;\r\nexports.ER_CANT_REOPEN_TABLE = 1137;\r\nexports.ER_INVALID_USE_OF_NULL = 1138;\r\nexports.ER_REGEXP_ERROR = 1139;\r\nexports.ER_MIX_OF_GROUP_FUNC_AND_FIELDS = 1140;\r\nexports.ER_NONEXISTING_GRANT = 1141;\r\nexports.ER_TABLEACCESS_DENIED_ERROR = 1142;\r\nexports.ER_COLUMNACCESS_DENIED_ERROR = 1143;\r\nexports.ER_ILLEGAL_GRANT_FOR_TABLE = 1144;\r\nexports.ER_GRANT_WRONG_HOST_OR_USER = 1145;\r\nexports.ER_NO_SUCH_TABLE = 1146;\r\nexports.ER_NONEXISTING_TABLE_GRANT = 1147;\r\nexports.ER_NOT_ALLOWED_COMMAND = 1148;\r\nexports.ER_SYNTAX_ERROR = 1149;\r\nexports.ER_UNUSED1 = 1150;\r\nexports.ER_UNUSED2 = 1151;\r\nexports.ER_ABORTING_CONNECTION = 1152;\r\nexports.ER_NET_PACKET_TOO_LARGE = 1153;\r\nexports.ER_NET_READ_ERROR_FROM_PIPE = 1154;\r\nexports.ER_NET_FCNTL_ERROR = 1155;\r\nexports.ER_NET_PACKETS_OUT_OF_ORDER = 1156;\r\nexports.ER_NET_UNCOMPRESS_ERROR = 1157;\r\nexports.ER_NET_READ_ERROR = 1158;\r\nexports.ER_NET_READ_INTERRUPTED = 1159;\r\nexports.ER_NET_ERROR_ON_WRITE = 1160;\r\nexports.ER_NET_WRITE_INTERRUPTED = 1161;\r\nexports.ER_TOO_LONG_STRING = 1162;\r\nexports.ER_TABLE_CANT_HANDLE_BLOB = 1163;\r\nexports.ER_TABLE_CANT_HANDLE_AUTO_INCREMENT = 1164;\r\nexports.ER_UNUSED3 = 1165;\r\nexports.ER_WRONG_COLUMN_NAME = 1166;\r\nexports.ER_WRONG_KEY_COLUMN = 1167;\r\nexports.ER_WRONG_MRG_TABLE = 1168;\r\nexports.ER_DUP_UNIQUE = 1169;\r\nexports.ER_BLOB_KEY_WITHOUT_LENGTH = 1170;\r\nexports.ER_PRIMARY_CANT_HAVE_NULL = 1171;\r\nexports.ER_TOO_MANY_ROWS = 1172;\r\nexports.ER_REQUIRES_PRIMARY_KEY = 1173;\r\nexports.ER_NO_RAID_COMPILED = 1174;\r\nexports.ER_UPDATE_WITHOUT_KEY_IN_SAFE_MODE = 1175;\r\nexports.ER_KEY_DOES_NOT_EXITS = 1176;\r\nexports.ER_CHECK_NO_SUCH_TABLE = 1177;\r\nexports.ER_CHECK_NOT_IMPLEMENTED = 1178;\r\nexports.ER_CANT_DO_THIS_DURING_AN_TRANSACTION = 1179;\r\nexports.ER_ERROR_DURING_COMMIT = 1180;\r\nexports.ER_ERROR_DURING_ROLLBACK = 1181;\r\nexports.ER_ERROR_DURING_FLUSH_LOGS = 1182;\r\nexports.ER_ERROR_DURING_CHECKPOINT = 1183;\r\nexports.ER_NEW_ABORTING_CONNECTION = 1184;\r\nexports.ER_DUMP_NOT_IMPLEMENTED = 1185;\r\nexports.ER_FLUSH_MASTER_BINLOG_CLOSED = 1186;\r\nexports.ER_INDEX_REBUILD = 1187;\r\nexports.ER_SOURCE = 1188;\r\nexports.ER_SOURCE_NET_READ = 1189;\r\nexports.ER_SOURCE_NET_WRITE = 1190;\r\nexports.ER_FT_MATCHING_KEY_NOT_FOUND = 1191;\r\nexports.ER_LOCK_OR_ACTIVE_TRANSACTION = 1192;\r\nexports.ER_UNKNOWN_SYSTEM_VARIABLE = 1193;\r\nexports.ER_CRASHED_ON_USAGE = 1194;\r\nexports.ER_CRASHED_ON_REPAIR = 1195;\r\nexports.ER_WARNING_NOT_COMPLETE_ROLLBACK = 1196;\r\nexports.ER_TRANS_CACHE_FULL = 1197;\r\nexports.ER_SLAVE_MUST_STOP = 1198;\r\nexports.ER_REPLICA_NOT_RUNNING = 1199;\r\nexports.ER_BAD_REPLICA = 1200;\r\nexports.ER_CONNECTION_METADATA = 1201;\r\nexports.ER_REPLICA_THREAD = 1202;\r\nexports.ER_TOO_MANY_USER_CONNECTIONS = 1203;\r\nexports.ER_SET_CONSTANTS_ONLY = 1204;\r\nexports.ER_LOCK_WAIT_TIMEOUT = 1205;\r\nexports.ER_LOCK_TABLE_FULL = 1206;\r\nexports.ER_READ_ONLY_TRANSACTION = 1207;\r\nexports.ER_DROP_DB_WITH_READ_LOCK = 1208;\r\nexports.ER_CREATE_DB_WITH_READ_LOCK = 1209;\r\nexports.ER_WRONG_ARGUMENTS = 1210;\r\nexports.ER_NO_PERMISSION_TO_CREATE_USER = 1211;\r\nexports.ER_UNION_TABLES_IN_DIFFERENT_DIR = 1212;\r\nexports.ER_LOCK_DEADLOCK = 1213;\r\nexports.ER_TABLE_CANT_HANDLE_FT = 1214;\r\nexports.ER_CANNOT_ADD_FOREIGN = 1215;\r\nexports.ER_NO_REFERENCED_ROW = 1216;\r\nexports.ER_ROW_IS_REFERENCED = 1217;\r\nexports.ER_CONNECT_TO_SOURCE = 1218;\r\nexports.ER_QUERY_ON_MASTER = 1219;\r\nexports.ER_ERROR_WHEN_EXECUTING_COMMAND = 1220;\r\nexports.ER_WRONG_USAGE = 1221;\r\nexports.ER_WRONG_NUMBER_OF_COLUMNS_IN_SELECT = 1222;\r\nexports.ER_CANT_UPDATE_WITH_READLOCK = 1223;\r\nexports.ER_MIXING_NOT_ALLOWED = 1224;\r\nexports.ER_DUP_ARGUMENT = 1225;\r\nexports.ER_USER_LIMIT_REACHED = 1226;\r\nexports.ER_SPECIFIC_ACCESS_DENIED_ERROR = 1227;\r\nexports.ER_LOCAL_VARIABLE = 1228;\r\nexports.ER_GLOBAL_VARIABLE = 1229;\r\nexports.ER_NO_DEFAULT = 1230;\r\nexports.ER_WRONG_VALUE_FOR_VAR = 1231;\r\nexports.ER_WRONG_TYPE_FOR_VAR = 1232;\r\nexports.ER_VAR_CANT_BE_READ = 1233;\r\nexports.ER_CANT_USE_OPTION_HERE = 1234;\r\nexports.ER_NOT_SUPPORTED_YET = 1235;\r\nexports.ER_SOURCE_FATAL_ERROR_READING_BINLOG = 1236;\r\nexports.ER_REPLICA_IGNORED_TABLE = 1237;\r\nexports.ER_INCORRECT_GLOBAL_LOCAL_VAR = 1238;\r\nexports.ER_WRONG_FK_DEF = 1239;\r\nexports.ER_KEY_REF_DO_NOT_MATCH_TABLE_REF = 1240;\r\nexports.ER_OPERAND_COLUMNS = 1241;\r\nexports.ER_SUBQUERY_NO_1_ROW = 1242;\r\nexports.ER_UNKNOWN_STMT_HANDLER = 1243;\r\nexports.ER_CORRUPT_HELP_DB = 1244;\r\nexports.ER_CYCLIC_REFERENCE = 1245;\r\nexports.ER_AUTO_CONVERT = 1246;\r\nexports.ER_ILLEGAL_REFERENCE = 1247;\r\nexports.ER_DERIVED_MUST_HAVE_ALIAS = 1248;\r\nexports.ER_SELECT_REDUCED = 1249;\r\nexports.ER_TABLENAME_NOT_ALLOWED_HERE = 1250;\r\nexports.ER_NOT_SUPPORTED_AUTH_MODE = 1251;\r\nexports.ER_SPATIAL_CANT_HAVE_NULL = 1252;\r\nexports.ER_COLLATION_CHARSET_MISMATCH = 1253;\r\nexports.ER_SLAVE_WAS_RUNNING = 1254;\r\nexports.ER_SLAVE_WAS_NOT_RUNNING = 1255;\r\nexports.ER_TOO_BIG_FOR_UNCOMPRESS = 1256;\r\nexports.ER_ZLIB_Z_MEM_ERROR = 1257;\r\nexports.ER_ZLIB_Z_BUF_ERROR = 1258;\r\nexports.ER_ZLIB_Z_DATA_ERROR = 1259;\r\nexports.ER_CUT_VALUE_GROUP_CONCAT = 1260;\r\nexports.ER_WARN_TOO_FEW_RECORDS = 1261;\r\nexports.ER_WARN_TOO_MANY_RECORDS = 1262;\r\nexports.ER_WARN_NULL_TO_NOTNULL = 1263;\r\nexports.ER_WARN_DATA_OUT_OF_RANGE = 1264;\r\nexports.WARN_DATA_TRUNCATED = 1265;\r\nexports.ER_WARN_USING_OTHER_HANDLER = 1266;\r\nexports.ER_CANT_AGGREGATE_2COLLATIONS = 1267;\r\nexports.ER_DROP_USER = 1268;\r\nexports.ER_REVOKE_GRANTS = 1269;\r\nexports.ER_CANT_AGGREGATE_3COLLATIONS = 1270;\r\nexports.ER_CANT_AGGREGATE_NCOLLATIONS = 1271;\r\nexports.ER_VARIABLE_IS_NOT_STRUCT = 1272;\r\nexports.ER_UNKNOWN_COLLATION = 1273;\r\nexports.ER_REPLICA_IGNORED_SSL_PARAMS = 1274;\r\nexports.ER_SERVER_IS_IN_SECURE_AUTH_MODE = 1275;\r\nexports.ER_WARN_FIELD_RESOLVED = 1276;\r\nexports.ER_BAD_REPLICA_UNTIL_COND = 1277;\r\nexports.ER_MISSING_SKIP_REPLICA = 1278;\r\nexports.ER_UNTIL_COND_IGNORED = 1279;\r\nexports.ER_WRONG_NAME_FOR_INDEX = 1280;\r\nexports.ER_WRONG_NAME_FOR_CATALOG = 1281;\r\nexports.ER_WARN_QC_RESIZE = 1282;\r\nexports.ER_BAD_FT_COLUMN = 1283;\r\nexports.ER_UNKNOWN_KEY_CACHE = 1284;\r\nexports.ER_WARN_HOSTNAME_WONT_WORK = 1285;\r\nexports.ER_UNKNOWN_STORAGE_ENGINE = 1286;\r\nexports.ER_WARN_DEPRECATED_SYNTAX = 1287;\r\nexports.ER_NON_UPDATABLE_TABLE = 1288;\r\nexports.ER_FEATURE_DISABLED = 1289;\r\nexports.ER_OPTION_PREVENTS_STATEMENT = 1290;\r\nexports.ER_DUPLICATED_VALUE_IN_TYPE = 1291;\r\nexports.ER_TRUNCATED_WRONG_VALUE = 1292;\r\nexports.ER_TOO_MUCH_AUTO_TIMESTAMP_COLS = 1293;\r\nexports.ER_INVALID_ON_UPDATE = 1294;\r\nexports.ER_UNSUPPORTED_PS = 1295;\r\nexports.ER_GET_ERRMSG = 1296;\r\nexports.ER_GET_TEMPORARY_ERRMSG = 1297;\r\nexports.ER_UNKNOWN_TIME_ZONE = 1298;\r\nexports.ER_WARN_INVALID_TIMESTAMP = 1299;\r\nexports.ER_INVALID_CHARACTER_STRING = 1300;\r\nexports.ER_WARN_ALLOWED_PACKET_OVERFLOWED = 1301;\r\nexports.ER_CONFLICTING_DECLARATIONS = 1302;\r\nexports.ER_SP_NO_RECURSIVE_CREATE = 1303;\r\nexports.ER_SP_ALREADY_EXISTS = 1304;\r\nexports.ER_SP_DOES_NOT_EXIST = 1305;\r\nexports.ER_SP_DROP_FAILED = 1306;\r\nexports.ER_SP_STORE_FAILED = 1307;\r\nexports.ER_SP_LILABEL_MISMATCH = 1308;\r\nexports.ER_SP_LABEL_REDEFINE = 1309;\r\nexports.ER_SP_LABEL_MISMATCH = 1310;\r\nexports.ER_SP_UNINIT_VAR = 1311;\r\nexports.ER_SP_BADSELECT = 1312;\r\nexports.ER_SP_BADRETURN = 1313;\r\nexports.ER_SP_BADSTATEMENT = 1314;\r\nexports.ER_UPDATE_LOG_DEPRECATED_IGNORED = 1315;\r\nexports.ER_UPDATE_LOG_DEPRECATED_TRANSLATED = 1316;\r\nexports.ER_QUERY_INTERRUPTED = 1317;\r\nexports.ER_SP_WRONG_NO_OF_ARGS = 1318;\r\nexports.ER_SP_COND_MISMATCH = 1319;\r\nexports.ER_SP_NORETURN = 1320;\r\nexports.ER_SP_NORETURNEND = 1321;\r\nexports.ER_SP_BAD_CURSOR_QUERY = 1322;\r\nexports.ER_SP_BAD_CURSOR_SELECT = 1323;\r\nexports.ER_SP_CURSOR_MISMATCH = 1324;\r\nexports.ER_SP_CURSOR_ALREADY_OPEN = 1325;\r\nexports.ER_SP_CURSOR_NOT_OPEN = 1326;\r\nexports.ER_SP_UNDECLARED_VAR = 1327;\r\nexports.ER_SP_WRONG_NO_OF_FETCH_ARGS = 1328;\r\nexports.ER_SP_FETCH_NO_DATA = 1329;\r\nexports.ER_SP_DUP_PARAM = 1330;\r\nexports.ER_SP_DUP_VAR = 1331;\r\nexports.ER_SP_DUP_COND = 1332;\r\nexports.ER_SP_DUP_CURS = 1333;\r\nexports.ER_SP_CANT_ALTER = 1334;\r\nexports.ER_SP_SUBSELECT_NYI = 1335;\r\nexports.ER_STMT_NOT_ALLOWED_IN_SF_OR_TRG = 1336;\r\nexports.ER_SP_VARCOND_AFTER_CURSHNDLR = 1337;\r\nexports.ER_SP_CURSOR_AFTER_HANDLER = 1338;\r\nexports.ER_SP_CASE_NOT_FOUND = 1339;\r\nexports.ER_FPARSER_TOO_BIG_FILE = 1340;\r\nexports.ER_FPARSER_BAD_HEADER = 1341;\r\nexports.ER_FPARSER_EOF_IN_COMMENT = 1342;\r\nexports.ER_FPARSER_ERROR_IN_PARAMETER = 1343;\r\nexports.ER_FPARSER_EOF_IN_UNKNOWN_PARAMETER = 1344;\r\nexports.ER_VIEW_NO_EXPLAIN = 1345;\r\nexports.ER_FRM_UNKNOWN_TYPE = 1346;\r\nexports.ER_WRONG_OBJECT = 1347;\r\nexports.ER_NONUPDATEABLE_COLUMN = 1348;\r\nexports.ER_VIEW_SELECT_DERIVED = 1349;\r\nexports.ER_VIEW_SELECT_CLAUSE = 1350;\r\nexports.ER_VIEW_SELECT_VARIABLE = 1351;\r\nexports.ER_VIEW_SELECT_TMPTABLE = 1352;\r\nexports.ER_VIEW_WRONG_LIST = 1353;\r\nexports.ER_WARN_VIEW_MERGE = 1354;\r\nexports.ER_WARN_VIEW_WITHOUT_KEY = 1355;\r\nexports.ER_VIEW_INVALID = 1356;\r\nexports.ER_SP_NO_DROP_SP = 1357;\r\nexports.ER_SP_GOTO_IN_HNDLR = 1358;\r\nexports.ER_TRG_ALREADY_EXISTS = 1359;\r\nexports.ER_TRG_DOES_NOT_EXIST = 1360;\r\nexports.ER_TRG_ON_VIEW_OR_TEMP_TABLE = 1361;\r\nexports.ER_TRG_CANT_CHANGE_ROW = 1362;\r\nexports.ER_TRG_NO_SUCH_ROW_IN_TRG = 1363;\r\nexports.ER_NO_DEFAULT_FOR_FIELD = 1364;\r\nexports.ER_DIVISION_BY_ZERO = 1365;\r\nexports.ER_TRUNCATED_WRONG_VALUE_FOR_FIELD = 1366;\r\nexports.ER_ILLEGAL_VALUE_FOR_TYPE = 1367;\r\nexports.ER_VIEW_NONUPD_CHECK = 1368;\r\nexports.ER_VIEW_CHECK_FAILED = 1369;\r\nexports.ER_PROCACCESS_DENIED_ERROR = 1370;\r\nexports.ER_RELAY_LOG_FAIL = 1371;\r\nexports.ER_PASSWD_LENGTH = 1372;\r\nexports.ER_UNKNOWN_TARGET_BINLOG = 1373;\r\nexports.ER_IO_ERR_LOG_INDEX_READ = 1374;\r\nexports.ER_BINLOG_PURGE_PROHIBITED = 1375;\r\nexports.ER_FSEEK_FAIL = 1376;\r\nexports.ER_BINLOG_PURGE_FATAL_ERR = 1377;\r\nexports.ER_LOG_IN_USE = 1378;\r\nexports.ER_LOG_PURGE_UNKNOWN_ERR = 1379;\r\nexports.ER_RELAY_LOG_INIT = 1380;\r\nexports.ER_NO_BINARY_LOGGING = 1381;\r\nexports.ER_RESERVED_SYNTAX = 1382;\r\nexports.ER_WSAS_FAILED = 1383;\r\nexports.ER_DIFF_GROUPS_PROC = 1384;\r\nexports.ER_NO_GROUP_FOR_PROC = 1385;\r\nexports.ER_ORDER_WITH_PROC = 1386;\r\nexports.ER_LOGGING_PROHIBIT_CHANGING_OF = 1387;\r\nexports.ER_NO_FILE_MAPPING = 1388;\r\nexports.ER_WRONG_MAGIC = 1389;\r\nexports.ER_PS_MANY_PARAM = 1390;\r\nexports.ER_KEY_PART_0 = 1391;\r\nexports.ER_VIEW_CHECKSUM = 1392;\r\nexports.ER_VIEW_MULTIUPDATE = 1393;\r\nexports.ER_VIEW_NO_INSERT_FIELD_LIST = 1394;\r\nexports.ER_VIEW_DELETE_MERGE_VIEW = 1395;\r\nexports.ER_CANNOT_USER = 1396;\r\nexports.ER_XAER_NOTA = 1397;\r\nexports.ER_XAER_INVAL = 1398;\r\nexports.ER_XAER_RMFAIL = 1399;\r\nexports.ER_XAER_OUTSIDE = 1400;\r\nexports.ER_XAER_RMERR = 1401;\r\nexports.ER_XA_RBROLLBACK = 1402;\r\nexports.ER_NONEXISTING_PROC_GRANT = 1403;\r\nexports.ER_PROC_AUTO_GRANT_FAIL = 1404;\r\nexports.ER_PROC_AUTO_REVOKE_FAIL = 1405;\r\nexports.ER_DATA_TOO_LONG = 1406;\r\nexports.ER_SP_BAD_SQLSTATE = 1407;\r\nexports.ER_STARTUP = 1408;\r\nexports.ER_LOAD_FROM_FIXED_SIZE_ROWS_TO_VAR = 1409;\r\nexports.ER_CANT_CREATE_USER_WITH_GRANT = 1410;\r\nexports.ER_WRONG_VALUE_FOR_TYPE = 1411;\r\nexports.ER_TABLE_DEF_CHANGED = 1412;\r\nexports.ER_SP_DUP_HANDLER = 1413;\r\nexports.ER_SP_NOT_VAR_ARG = 1414;\r\nexports.ER_SP_NO_RETSET = 1415;\r\nexports.ER_CANT_CREATE_GEOMETRY_OBJECT = 1416;\r\nexports.ER_FAILED_ROUTINE_BREAK_BINLOG = 1417;\r\nexports.ER_BINLOG_UNSAFE_ROUTINE = 1418;\r\nexports.ER_BINLOG_CREATE_ROUTINE_NEED_SUPER = 1419;\r\nexports.ER_EXEC_STMT_WITH_OPEN_CURSOR = 1420;\r\nexports.ER_STMT_HAS_NO_OPEN_CURSOR = 1421;\r\nexports.ER_COMMIT_NOT_ALLOWED_IN_SF_OR_TRG = 1422;\r\nexports.ER_NO_DEFAULT_FOR_VIEW_FIELD = 1423;\r\nexports.ER_SP_NO_RECURSION = 1424;\r\nexports.ER_TOO_BIG_SCALE = 1425;\r\nexports.ER_TOO_BIG_PRECISION = 1426;\r\nexports.ER_M_BIGGER_THAN_D = 1427;\r\nexports.ER_WRONG_LOCK_OF_SYSTEM_TABLE = 1428;\r\nexports.ER_CONNECT_TO_FOREIGN_DATA_SOURCE = 1429;\r\nexports.ER_QUERY_ON_FOREIGN_DATA_SOURCE = 1430;\r\nexports.ER_FOREIGN_DATA_SOURCE_DOESNT_EXIST = 1431;\r\nexports.ER_FOREIGN_DATA_STRING_INVALID_CANT_CREATE = 1432;\r\nexports.ER_FOREIGN_DATA_STRING_INVALID = 1433;\r\nexports.ER_CANT_CREATE_FEDERATED_TABLE = 1434;\r\nexports.ER_TRG_IN_WRONG_SCHEMA = 1435;\r\nexports.ER_STACK_OVERRUN_NEED_MORE = 1436;\r\nexports.ER_TOO_LONG_BODY = 1437;\r\nexports.ER_WARN_CANT_DROP_DEFAULT_KEYCACHE = 1438;\r\nexports.ER_TOO_BIG_DISPLAYWIDTH = 1439;\r\nexports.ER_XAER_DUPID = 1440;\r\nexports.ER_DATETIME_FUNCTION_OVERFLOW = 1441;\r\nexports.ER_CANT_UPDATE_USED_TABLE_IN_SF_OR_TRG = 1442;\r\nexports.ER_VIEW_PREVENT_UPDATE = 1443;\r\nexports.ER_PS_NO_RECURSION = 1444;\r\nexports.ER_SP_CANT_SET_AUTOCOMMIT = 1445;\r\nexports.ER_MALFORMED_DEFINER = 1446;\r\nexports.ER_VIEW_FRM_NO_USER = 1447;\r\nexports.ER_VIEW_OTHER_USER = 1448;\r\nexports.ER_NO_SUCH_USER = 1449;\r\nexports.ER_FORBID_SCHEMA_CHANGE = 1450;\r\nexports.ER_ROW_IS_REFERENCED_2 = 1451;\r\nexports.ER_NO_REFERENCED_ROW_2 = 1452;\r\nexports.ER_SP_BAD_VAR_SHADOW = 1453;\r\nexports.ER_TRG_NO_DEFINER = 1454;\r\nexports.ER_OLD_FILE_FORMAT = 1455;\r\nexports.ER_SP_RECURSION_LIMIT = 1456;\r\nexports.ER_SP_PROC_TABLE_CORRUPT = 1457;\r\nexports.ER_SP_WRONG_NAME = 1458;\r\nexports.ER_TABLE_NEEDS_UPGRADE = 1459;\r\nexports.ER_SP_NO_AGGREGATE = 1460;\r\nexports.ER_MAX_PREPARED_STMT_COUNT_REACHED = 1461;\r\nexports.ER_VIEW_RECURSIVE = 1462;\r\nexports.ER_NON_GROUPING_FIELD_USED = 1463;\r\nexports.ER_TABLE_CANT_HANDLE_SPKEYS = 1464;\r\nexports.ER_NO_TRIGGERS_ON_SYSTEM_SCHEMA = 1465;\r\nexports.ER_REMOVED_SPACES = 1466;\r\nexports.ER_AUTOINC_READ_FAILED = 1467;\r\nexports.ER_USERNAME = 1468;\r\nexports.ER_HOSTNAME = 1469;\r\nexports.ER_WRONG_STRING_LENGTH = 1470;\r\nexports.ER_NON_INSERTABLE_TABLE = 1471;\r\nexports.ER_ADMIN_WRONG_MRG_TABLE = 1472;\r\nexports.ER_TOO_HIGH_LEVEL_OF_NESTING_FOR_SELECT = 1473;\r\nexports.ER_NAME_BECOMES_EMPTY = 1474;\r\nexports.ER_AMBIGUOUS_FIELD_TERM = 1475;\r\nexports.ER_FOREIGN_SERVER_EXISTS = 1476;\r\nexports.ER_FOREIGN_SERVER_DOESNT_EXIST = 1477;\r\nexports.ER_ILLEGAL_HA_CREATE_OPTION = 1478;\r\nexports.ER_PARTITION_REQUIRES_VALUES_ERROR = 1479;\r\nexports.ER_PARTITION_WRONG_VALUES_ERROR = 1480;\r\nexports.ER_PARTITION_MAXVALUE_ERROR = 1481;\r\nexports.ER_PARTITION_SUBPARTITION_ERROR = 1482;\r\nexports.ER_PARTITION_SUBPART_MIX_ERROR = 1483;\r\nexports.ER_PARTITION_WRONG_NO_PART_ERROR = 1484;\r\nexports.ER_PARTITION_WRONG_NO_SUBPART_ERROR = 1485;\r\nexports.ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR = 1486;\r\nexports.ER_NO_CONST_EXPR_IN_RANGE_OR_LIST_ERROR = 1487;\r\nexports.ER_FIELD_NOT_FOUND_PART_ERROR = 1488;\r\nexports.ER_LIST_OF_FIELDS_ONLY_IN_HASH_ERROR = 1489;\r\nexports.ER_INCONSISTENT_PARTITION_INFO_ERROR = 1490;\r\nexports.ER_PARTITION_FUNC_NOT_ALLOWED_ERROR = 1491;\r\nexports.ER_PARTITIONS_MUST_BE_DEFINED_ERROR = 1492;\r\nexports.ER_RANGE_NOT_INCREASING_ERROR = 1493;\r\nexports.ER_INCONSISTENT_TYPE_OF_FUNCTIONS_ERROR = 1494;\r\nexports.ER_MULTIPLE_DEF_CONST_IN_LIST_PART_ERROR = 1495;\r\nexports.ER_PARTITION_ENTRY_ERROR = 1496;\r\nexports.ER_MIX_HANDLER_ERROR = 1497;\r\nexports.ER_PARTITION_NOT_DEFINED_ERROR = 1498;\r\nexports.ER_TOO_MANY_PARTITIONS_ERROR = 1499;\r\nexports.ER_SUBPARTITION_ERROR = 1500;\r\nexports.ER_CANT_CREATE_HANDLER_FILE = 1501;\r\nexports.ER_BLOB_FIELD_IN_PART_FUNC_ERROR = 1502;\r\nexports.ER_UNIQUE_KEY_NEED_ALL_FIELDS_IN_PF = 1503;\r\nexports.ER_NO_PARTS_ERROR = 1504;\r\nexports.ER_PARTITION_MGMT_ON_NONPARTITIONED = 1505;\r\nexports.ER_FOREIGN_KEY_ON_PARTITIONED = 1506;\r\nexports.ER_DROP_PARTITION_NON_EXISTENT = 1507;\r\nexports.ER_DROP_LAST_PARTITION = 1508;\r\nexports.ER_COALESCE_ONLY_ON_HASH_PARTITION = 1509;\r\nexports.ER_REORG_HASH_ONLY_ON_SAME_NO = 1510;\r\nexports.ER_REORG_NO_PARAM_ERROR = 1511;\r\nexports.ER_ONLY_ON_RANGE_LIST_PARTITION = 1512;\r\nexports.ER_ADD_PARTITION_SUBPART_ERROR = 1513;\r\nexports.ER_ADD_PARTITION_NO_NEW_PARTITION = 1514;\r\nexports.ER_COALESCE_PARTITION_NO_PARTITION = 1515;\r\nexports.ER_REORG_PARTITION_NOT_EXIST = 1516;\r\nexports.ER_SAME_NAME_PARTITION = 1517;\r\nexports.ER_NO_BINLOG_ERROR = 1518;\r\nexports.ER_CONSECUTIVE_REORG_PARTITIONS = 1519;\r\nexports.ER_REORG_OUTSIDE_RANGE = 1520;\r\nexports.ER_PARTITION_FUNCTION_FAILURE = 1521;\r\nexports.ER_PART_STATE_ERROR = 1522;\r\nexports.ER_LIMITED_PART_RANGE = 1523;\r\nexports.ER_PLUGIN_IS_NOT_LOADED = 1524;\r\nexports.ER_WRONG_VALUE = 1525;\r\nexports.ER_NO_PARTITION_FOR_GIVEN_VALUE = 1526;\r\nexports.ER_FILEGROUP_OPTION_ONLY_ONCE = 1527;\r\nexports.ER_CREATE_FILEGROUP_FAILED = 1528;\r\nexports.ER_DROP_FILEGROUP_FAILED = 1529;\r\nexports.ER_TABLESPACE_AUTO_EXTEND_ERROR = 1530;\r\nexports.ER_WRONG_SIZE_NUMBER = 1531;\r\nexports.ER_SIZE_OVERFLOW_ERROR = 1532;\r\nexports.ER_ALTER_FILEGROUP_FAILED = 1533;\r\nexports.ER_BINLOG_ROW_LOGGING_FAILED = 1534;\r\nexports.ER_BINLOG_ROW_WRONG_TABLE_DEF = 1535;\r\nexports.ER_BINLOG_ROW_RBR_TO_SBR = 1536;\r\nexports.ER_EVENT_ALREADY_EXISTS = 1537;\r\nexports.ER_EVENT_STORE_FAILED = 1538;\r\nexports.ER_EVENT_DOES_NOT_EXIST = 1539;\r\nexports.ER_EVENT_CANT_ALTER = 1540;\r\nexports.ER_EVENT_DROP_FAILED = 1541;\r\nexports.ER_EVENT_INTERVAL_NOT_POSITIVE_OR_TOO_BIG = 1542;\r\nexports.ER_EVENT_ENDS_BEFORE_STARTS = 1543;\r\nexports.ER_EVENT_EXEC_TIME_IN_THE_PAST = 1544;\r\nexports.ER_EVENT_OPEN_TABLE_FAILED = 1545;\r\nexports.ER_EVENT_NEITHER_M_EXPR_NOR_M_AT = 1546;\r\nexports.ER_COL_COUNT_DOESNT_MATCH_CORRUPTED = 1547;\r\nexports.ER_CANNOT_LOAD_FROM_TABLE = 1548;\r\nexports.ER_EVENT_CANNOT_DELETE = 1549;\r\nexports.ER_EVENT_COMPILE_ERROR = 1550;\r\nexports.ER_EVENT_SAME_NAME = 1551;\r\nexports.ER_EVENT_DATA_TOO_LONG = 1552;\r\nexports.ER_DROP_INDEX_FK = 1553;\r\nexports.ER_WARN_DEPRECATED_SYNTAX_WITH_VER = 1554;\r\nexports.ER_CANT_WRITE_LOCK_LOG_TABLE = 1555;\r\nexports.ER_CANT_LOCK_LOG_TABLE = 1556;\r\nexports.ER_FOREIGN_DUPLICATE_KEY = 1557;\r\nexports.ER_COL_COUNT_DOESNT_MATCH_PLEASE_UPDATE = 1558;\r\nexports.ER_TEMP_TABLE_PREVENTS_SWITCH_OUT_OF_RBR = 1559;\r\nexports.ER_STORED_FUNCTION_PREVENTS_SWITCH_BINLOG_FORMAT = 1560;\r\nexports.ER_NDB_CANT_SWITCH_BINLOG_FORMAT = 1561;\r\nexports.ER_PARTITION_NO_TEMPORARY = 1562;\r\nexports.ER_PARTITION_CONST_DOMAIN_ERROR = 1563;\r\nexports.ER_PARTITION_FUNCTION_IS_NOT_ALLOWED = 1564;\r\nexports.ER_DDL_LOG_ERROR = 1565;\r\nexports.ER_NULL_IN_VALUES_LESS_THAN = 1566;\r\nexports.ER_WRONG_PARTITION_NAME = 1567;\r\nexports.ER_CANT_CHANGE_TX_CHARACTERISTICS = 1568;\r\nexports.ER_DUP_ENTRY_AUTOINCREMENT_CASE = 1569;\r\nexports.ER_EVENT_MODIFY_QUEUE_ERROR = 1570;\r\nexports.ER_EVENT_SET_VAR_ERROR = 1571;\r\nexports.ER_PARTITION_MERGE_ERROR = 1572;\r\nexports.ER_CANT_ACTIVATE_LOG = 1573;\r\nexports.ER_RBR_NOT_AVAILABLE = 1574;\r\nexports.ER_BASE64_DECODE_ERROR = 1575;\r\nexports.ER_EVENT_RECURSION_FORBIDDEN = 1576;\r\nexports.ER_EVENTS_DB_ERROR = 1577;\r\nexports.ER_ONLY_INTEGERS_ALLOWED = 1578;\r\nexports.ER_UNSUPORTED_LOG_ENGINE = 1579;\r\nexports.ER_BAD_LOG_STATEMENT = 1580;\r\nexports.ER_CANT_RENAME_LOG_TABLE = 1581;\r\nexports.ER_WRONG_PARAMCOUNT_TO_NATIVE_FCT = 1582;\r\nexports.ER_WRONG_PARAMETERS_TO_NATIVE_FCT = 1583;\r\nexports.ER_WRONG_PARAMETERS_TO_STORED_FCT = 1584;\r\nexports.ER_NATIVE_FCT_NAME_COLLISION = 1585;\r\nexports.ER_DUP_ENTRY_WITH_KEY_NAME = 1586;\r\nexports.ER_BINLOG_PURGE_EMFILE = 1587;\r\nexports.ER_EVENT_CANNOT_CREATE_IN_THE_PAST = 1588;\r\nexports.ER_EVENT_CANNOT_ALTER_IN_THE_PAST = 1589;\r\nexports.ER_SLAVE_INCIDENT = 1590;\r\nexports.ER_NO_PARTITION_FOR_GIVEN_VALUE_SILENT = 1591;\r\nexports.ER_BINLOG_UNSAFE_STATEMENT = 1592;\r\nexports.ER_BINLOG_FATAL_ERROR = 1593;\r\nexports.ER_SLAVE_RELAY_LOG_READ_FAILURE = 1594;\r\nexports.ER_SLAVE_RELAY_LOG_WRITE_FAILURE = 1595;\r\nexports.ER_SLAVE_CREATE_EVENT_FAILURE = 1596;\r\nexports.ER_SLAVE_MASTER_COM_FAILURE = 1597;\r\nexports.ER_BINLOG_LOGGING_IMPOSSIBLE = 1598;\r\nexports.ER_VIEW_NO_CREATION_CTX = 1599;\r\nexports.ER_VIEW_INVALID_CREATION_CTX = 1600;\r\nexports.ER_SR_INVALID_CREATION_CTX = 1601;\r\nexports.ER_TRG_CORRUPTED_FILE = 1602;\r\nexports.ER_TRG_NO_CREATION_CTX = 1603;\r\nexports.ER_TRG_INVALID_CREATION_CTX = 1604;\r\nexports.ER_EVENT_INVALID_CREATION_CTX = 1605;\r\nexports.ER_TRG_CANT_OPEN_TABLE = 1606;\r\nexports.ER_CANT_CREATE_SROUTINE = 1607;\r\nexports.ER_NEVER_USED = 1608;\r\nexports.ER_NO_FORMAT_DESCRIPTION_EVENT_BEFORE_BINLOG_STATEMENT = 1609;\r\nexports.ER_REPLICA_CORRUPT_EVENT = 1610;\r\nexports.ER_LOAD_DATA_INVALID_COLUMN = 1611;\r\nexports.ER_LOG_PURGE_NO_FILE = 1612;\r\nexports.ER_XA_RBTIMEOUT = 1613;\r\nexports.ER_XA_RBDEADLOCK = 1614;\r\nexports.ER_NEED_REPREPARE = 1615;\r\nexports.ER_DELAYED_NOT_SUPPORTED = 1616;\r\nexports.WARN_NO_CONNECTION_METADATA = 1617;\r\nexports.WARN_OPTION_IGNORED = 1618;\r\nexports.ER_PLUGIN_DELETE_BUILTIN = 1619;\r\nexports.WARN_PLUGIN_BUSY = 1620;\r\nexports.ER_VARIABLE_IS_READONLY = 1621;\r\nexports.ER_WARN_ENGINE_TRANSACTION_ROLLBACK = 1622;\r\nexports.ER_SLAVE_HEARTBEAT_FAILURE = 1623;\r\nexports.ER_REPLICA_HEARTBEAT_VALUE_OUT_OF_RANGE = 1624;\r\nexports.ER_NDB_REPLICATION_SCHEMA_ERROR = 1625;\r\nexports.ER_CONFLICT_FN_PARSE_ERROR = 1626;\r\nexports.ER_EXCEPTIONS_WRITE_ERROR = 1627;\r\nexports.ER_TOO_LONG_TABLE_COMMENT = 1628;\r\nexports.ER_TOO_LONG_FIELD_COMMENT = 1629;\r\nexports.ER_FUNC_INEXISTENT_NAME_COLLISION = 1630;\r\nexports.ER_DATABASE_NAME = 1631;\r\nexports.ER_TABLE_NAME = 1632;\r\nexports.ER_PARTITION_NAME = 1633;\r\nexports.ER_SUBPARTITION_NAME = 1634;\r\nexports.ER_TEMPORARY_NAME = 1635;\r\nexports.ER_RENAMED_NAME = 1636;\r\nexports.ER_TOO_MANY_CONCURRENT_TRXS = 1637;\r\nexports.WARN_NON_ASCII_SEPARATOR_NOT_IMPLEMENTED = 1638;\r\nexports.ER_DEBUG_SYNC_TIMEOUT = 1639;\r\nexports.ER_DEBUG_SYNC_HIT_LIMIT = 1640;\r\nexports.ER_DUP_SIGNAL_SET = 1641;\r\nexports.ER_SIGNAL_WARN = 1642;\r\nexports.ER_SIGNAL_NOT_FOUND = 1643;\r\nexports.ER_SIGNAL_EXCEPTION = 1644;\r\nexports.ER_RESIGNAL_WITHOUT_ACTIVE_HANDLER = 1645;\r\nexports.ER_SIGNAL_BAD_CONDITION_TYPE = 1646;\r\nexports.WARN_COND_ITEM_TRUNCATED = 1647;\r\nexports.ER_COND_ITEM_TOO_LONG = 1648;\r\nexports.ER_UNKNOWN_LOCALE = 1649;\r\nexports.ER_REPLICA_IGNORE_SERVER_IDS = 1650;\r\nexports.ER_QUERY_CACHE_DISABLED = 1651;\r\nexports.ER_SAME_NAME_PARTITION_FIELD = 1652;\r\nexports.ER_PARTITION_COLUMN_LIST_ERROR = 1653;\r\nexports.ER_WRONG_TYPE_COLUMN_VALUE_ERROR = 1654;\r\nexports.ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR = 1655;\r\nexports.ER_MAXVALUE_IN_VALUES_IN = 1656;\r\nexports.ER_TOO_MANY_VALUES_ERROR = 1657;\r\nexports.ER_ROW_SINGLE_PARTITION_FIELD_ERROR = 1658;\r\nexports.ER_FIELD_TYPE_NOT_ALLOWED_AS_PARTITION_FIELD = 1659;\r\nexports.ER_PARTITION_FIELDS_TOO_LONG = 1660;\r\nexports.ER_BINLOG_ROW_ENGINE_AND_STMT_ENGINE = 1661;\r\nexports.ER_BINLOG_ROW_MODE_AND_STMT_ENGINE = 1662;\r\nexports.ER_BINLOG_UNSAFE_AND_STMT_ENGINE = 1663;\r\nexports.ER_BINLOG_ROW_INJECTION_AND_STMT_ENGINE = 1664;\r\nexports.ER_BINLOG_STMT_MODE_AND_ROW_ENGINE = 1665;\r\nexports.ER_BINLOG_ROW_INJECTION_AND_STMT_MODE = 1666;\r\nexports.ER_BINLOG_MULTIPLE_ENGINES_AND_SELF_LOGGING_ENGINE = 1667;\r\nexports.ER_BINLOG_UNSAFE_LIMIT = 1668;\r\nexports.ER_UNUSED4 = 1669;\r\nexports.ER_BINLOG_UNSAFE_SYSTEM_TABLE = 1670;\r\nexports.ER_BINLOG_UNSAFE_AUTOINC_COLUMNS = 1671;\r\nexports.ER_BINLOG_UNSAFE_UDF = 1672;\r\nexports.ER_BINLOG_UNSAFE_SYSTEM_VARIABLE = 1673;\r\nexports.ER_BINLOG_UNSAFE_SYSTEM_FUNCTION = 1674;\r\nexports.ER_BINLOG_UNSAFE_NONTRANS_AFTER_TRANS = 1675;\r\nexports.ER_MESSAGE_AND_STATEMENT = 1676;\r\nexports.ER_SLAVE_CONVERSION_FAILED = 1677;\r\nexports.ER_REPLICA_CANT_CREATE_CONVERSION = 1678;\r\nexports.ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_BINLOG_FORMAT = 1679;\r\nexports.ER_PATH_LENGTH = 1680;\r\nexports.ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT = 1681;\r\nexports.ER_WRONG_NATIVE_TABLE_STRUCTURE = 1682;\r\nexports.ER_WRONG_PERFSCHEMA_USAGE = 1683;\r\nexports.ER_WARN_I_S_SKIPPED_TABLE = 1684;\r\nexports.ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_BINLOG_DIRECT = 1685;\r\nexports.ER_STORED_FUNCTION_PREVENTS_SWITCH_BINLOG_DIRECT = 1686;\r\nexports.ER_SPATIAL_MUST_HAVE_GEOM_COL = 1687;\r\nexports.ER_TOO_LONG_INDEX_COMMENT = 1688;\r\nexports.ER_LOCK_ABORTED = 1689;\r\nexports.ER_DATA_OUT_OF_RANGE = 1690;\r\nexports.ER_WRONG_SPVAR_TYPE_IN_LIMIT = 1691;\r\nexports.ER_BINLOG_UNSAFE_MULTIPLE_ENGINES_AND_SELF_LOGGING_ENGINE = 1692;\r\nexports.ER_BINLOG_UNSAFE_MIXED_STATEMENT = 1693;\r\nexports.ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_SQL_LOG_BIN = 1694;\r\nexports.ER_STORED_FUNCTION_PREVENTS_SWITCH_SQL_LOG_BIN = 1695;\r\nexports.ER_FAILED_READ_FROM_PAR_FILE = 1696;\r\nexports.ER_VALUES_IS_NOT_INT_TYPE_ERROR = 1697;\r\nexports.ER_ACCESS_DENIED_NO_PASSWORD_ERROR = 1698;\r\nexports.ER_SET_PASSWORD_AUTH_PLUGIN = 1699;\r\nexports.ER_GRANT_PLUGIN_USER_EXISTS = 1700;\r\nexports.ER_TRUNCATE_ILLEGAL_FK = 1701;\r\nexports.ER_PLUGIN_IS_PERMANENT = 1702;\r\nexports.ER_REPLICA_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN = 1703;\r\nexports.ER_REPLICA_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX = 1704;\r\nexports.ER_STMT_CACHE_FULL = 1705;\r\nexports.ER_MULTI_UPDATE_KEY_CONFLICT = 1706;\r\nexports.ER_TABLE_NEEDS_REBUILD = 1707;\r\nexports.WARN_OPTION_BELOW_LIMIT = 1708;\r\nexports.ER_INDEX_COLUMN_TOO_LONG = 1709;\r\nexports.ER_ERROR_IN_TRIGGER_BODY = 1710;\r\nexports.ER_ERROR_IN_UNKNOWN_TRIGGER_BODY = 1711;\r\nexports.ER_INDEX_CORRUPT = 1712;\r\nexports.ER_UNDO_RECORD_TOO_BIG = 1713;\r\nexports.ER_BINLOG_UNSAFE_INSERT_IGNORE_SELECT = 1714;\r\nexports.ER_BINLOG_UNSAFE_INSERT_SELECT_UPDATE = 1715;\r\nexports.ER_BINLOG_UNSAFE_REPLACE_SELECT = 1716;\r\nexports.ER_BINLOG_UNSAFE_CREATE_IGNORE_SELECT = 1717;\r\nexports.ER_BINLOG_UNSAFE_CREATE_REPLACE_SELECT = 1718;\r\nexports.ER_BINLOG_UNSAFE_UPDATE_IGNORE = 1719;\r\nexports.ER_PLUGIN_NO_UNINSTALL = 1720;\r\nexports.ER_PLUGIN_NO_INSTALL = 1721;\r\nexports.ER_BINLOG_UNSAFE_WRITE_AUTOINC_SELECT = 1722;\r\nexports.ER_BINLOG_UNSAFE_CREATE_SELECT_AUTOINC = 1723;\r\nexports.ER_BINLOG_UNSAFE_INSERT_TWO_KEYS = 1724;\r\nexports.ER_TABLE_IN_FK_CHECK = 1725;\r\nexports.ER_UNSUPPORTED_ENGINE = 1726;\r\nexports.ER_BINLOG_UNSAFE_AUTOINC_NOT_FIRST = 1727;\r\nexports.ER_CANNOT_LOAD_FROM_TABLE_V2 = 1728;\r\nexports.ER_SOURCE_DELAY_VALUE_OUT_OF_RANGE = 1729;\r\nexports.ER_ONLY_FD_AND_RBR_EVENTS_ALLOWED_IN_BINLOG_STATEMENT = 1730;\r\nexports.ER_PARTITION_EXCHANGE_DIFFERENT_OPTION = 1731;\r\nexports.ER_PARTITION_EXCHANGE_PART_TABLE = 1732;\r\nexports.ER_PARTITION_EXCHANGE_TEMP_TABLE = 1733;\r\nexports.ER_PARTITION_INSTEAD_OF_SUBPARTITION = 1734;\r\nexports.ER_UNKNOWN_PARTITION = 1735;\r\nexports.ER_TABLES_DIFFERENT_METADATA = 1736;\r\nexports.ER_ROW_DOES_NOT_MATCH_PARTITION = 1737;\r\nexports.ER_BINLOG_CACHE_SIZE_GREATER_THAN_MAX = 1738;\r\nexports.ER_WARN_INDEX_NOT_APPLICABLE = 1739;\r\nexports.ER_PARTITION_EXCHANGE_FOREIGN_KEY = 1740;\r\nexports.ER_NO_SUCH_KEY_VALUE = 1741;\r\nexports.ER_RPL_INFO_DATA_TOO_LONG = 1742;\r\nexports.ER_NETWORK_READ_EVENT_CHECKSUM_FAILURE = 1743;\r\nexports.ER_BINLOG_READ_EVENT_CHECKSUM_FAILURE = 1744;\r\nexports.ER_BINLOG_STMT_CACHE_SIZE_GREATER_THAN_MAX = 1745;\r\nexports.ER_CANT_UPDATE_TABLE_IN_CREATE_TABLE_SELECT = 1746;\r\nexports.ER_PARTITION_CLAUSE_ON_NONPARTITIONED = 1747;\r\nexports.ER_ROW_DOES_NOT_MATCH_GIVEN_PARTITION_SET = 1748;\r\nexports.ER_NO_SUCH_PARTITION = 1749;\r\nexports.ER_CHANGE_RPL_INFO_REPOSITORY_FAILURE = 1750;\r\nexports.ER_WARNING_NOT_COMPLETE_ROLLBACK_WITH_CREATED_TEMP_TABLE = 1751;\r\nexports.ER_WARNING_NOT_COMPLETE_ROLLBACK_WITH_DROPPED_TEMP_TABLE = 1752;\r\nexports.ER_MTA_FEATURE_IS_NOT_SUPPORTED = 1753;\r\nexports.ER_MTA_UPDATED_DBS_GREATER_MAX = 1754;\r\nexports.ER_MTA_CANT_PARALLEL = 1755;\r\nexports.ER_MTA_INCONSISTENT_DATA = 1756;\r\nexports.ER_FULLTEXT_NOT_SUPPORTED_WITH_PARTITIONING = 1757;\r\nexports.ER_DA_INVALID_CONDITION_NUMBER = 1758;\r\nexports.ER_INSECURE_PLAIN_TEXT = 1759;\r\nexports.ER_INSECURE_CHANGE_SOURCE = 1760;\r\nexports.ER_FOREIGN_DUPLICATE_KEY_WITH_CHILD_INFO = 1761;\r\nexports.ER_FOREIGN_DUPLICATE_KEY_WITHOUT_CHILD_INFO = 1762;\r\nexports.ER_SQLTHREAD_WITH_SECURE_REPLICA = 1763;\r\nexports.ER_TABLE_HAS_NO_FT = 1764;\r\nexports.ER_VARIABLE_NOT_SETTABLE_IN_SF_OR_TRIGGER = 1765;\r\nexports.ER_VARIABLE_NOT_SETTABLE_IN_TRANSACTION = 1766;\r\nexports.ER_GTID_NEXT_IS_NOT_IN_GTID_NEXT_LIST = 1767;\r\nexports.ER_CANT_CHANGE_GTID_NEXT_IN_TRANSACTION = 1768;\r\nexports.ER_SET_STATEMENT_CANNOT_INVOKE_FUNCTION = 1769;\r\nexports.ER_GTID_NEXT_CANT_BE_AUTOMATIC_IF_GTID_NEXT_LIST_IS_NON_NULL = 1770;\r\nexports.ER_SKIPPING_LOGGED_TRANSACTION = 1771;\r\nexports.ER_MALFORMED_GTID_SET_SPECIFICATION = 1772;\r\nexports.ER_MALFORMED_GTID_SET_ENCODING = 1773;\r\nexports.ER_MALFORMED_GTID_SPECIFICATION = 1774;\r\nexports.ER_GNO_EXHAUSTED = 1775;\r\nexports.ER_BAD_REPLICA_AUTO_POSITION = 1776;\r\nexports.ER_AUTO_POSITION_REQUIRES_GTID_MODE_NOT_OFF = 1777;\r\nexports.ER_CANT_DO_IMPLICIT_COMMIT_IN_TRX_WHEN_GTID_NEXT_IS_SET = 1778;\r\nexports.ER_GTID_MODE_ON_REQUIRES_ENFORCE_GTID_CONSISTENCY_ON = 1779;\r\nexports.ER_GTID_MODE_REQUIRES_BINLOG = 1780;\r\nexports.ER_CANT_SET_GTID_NEXT_TO_GTID_WHEN_GTID_MODE_IS_OFF = 1781;\r\nexports.ER_CANT_SET_GTID_NEXT_TO_ANONYMOUS_WHEN_GTID_MODE_IS_ON = 1782;\r\nexports.ER_CANT_SET_GTID_NEXT_LIST_TO_NON_NULL_WHEN_GTID_MODE_IS_OFF = 1783;\r\nexports.ER_FOUND_GTID_EVENT_WHEN_GTID_MODE_IS_OFF = 1784;\r\nexports.ER_GTID_UNSAFE_NON_TRANSACTIONAL_TABLE = 1785;\r\nexports.ER_GTID_UNSAFE_CREATE_SELECT = 1786;\r\nexports.ER_GTID_UNSAFE_CREATE_DROP_TEMP_TABLE_IN_TRANSACTION = 1787;\r\nexports.ER_GTID_MODE_CAN_ONLY_CHANGE_ONE_STEP_AT_A_TIME = 1788;\r\nexports.ER_SOURCE_HAS_PURGED_REQUIRED_GTIDS = 1789;\r\nexports.ER_CANT_SET_GTID_NEXT_WHEN_OWNING_GTID = 1790;\r\nexports.ER_UNKNOWN_EXPLAIN_FORMAT = 1791;\r\nexports.ER_CANT_EXECUTE_IN_READ_ONLY_TRANSACTION = 1792;\r\nexports.ER_TOO_LONG_TABLE_PARTITION_COMMENT = 1793;\r\nexports.ER_REPLICA_CONFIGURATION = 1794;\r\nexports.ER_INNODB_FT_LIMIT = 1795;\r\nexports.ER_INNODB_NO_FT_TEMP_TABLE = 1796;\r\nexports.ER_INNODB_FT_WRONG_DOCID_COLUMN = 1797;\r\nexports.ER_INNODB_FT_WRONG_DOCID_INDEX = 1798;\r\nexports.ER_INNODB_ONLINE_LOG_TOO_BIG = 1799;\r\nexports.ER_UNKNOWN_ALTER_ALGORITHM = 1800;\r\nexports.ER_UNKNOWN_ALTER_LOCK = 1801;\r\nexports.ER_MTA_CHANGE_SOURCE_CANT_RUN_WITH_GAPS = 1802;\r\nexports.ER_MTA_RECOVERY_FAILURE = 1803;\r\nexports.ER_MTA_RESET_WORKERS = 1804;\r\nexports.ER_COL_COUNT_DOESNT_MATCH_CORRUPTED_V2 = 1805;\r\nexports.ER_REPLICA_SILENT_RETRY_TRANSACTION = 1806;\r\nexports.ER_DISCARD_FK_CHECKS_RUNNING = 1807;\r\nexports.ER_TABLE_SCHEMA_MISMATCH = 1808;\r\nexports.ER_TABLE_IN_SYSTEM_TABLESPACE = 1809;\r\nexports.ER_IO_READ_ERROR = 1810;\r\nexports.ER_IO_WRITE_ERROR = 1811;\r\nexports.ER_TABLESPACE_MISSING = 1812;\r\nexports.ER_TABLESPACE_EXISTS = 1813;\r\nexports.ER_TABLESPACE_DISCARDED = 1814;\r\nexports.ER_INTERNAL_ERROR = 1815;\r\nexports.ER_INNODB_IMPORT_ERROR = 1816;\r\nexports.ER_INNODB_INDEX_CORRUPT = 1817;\r\nexports.ER_INVALID_YEAR_COLUMN_LENGTH = 1818;\r\nexports.ER_NOT_VALID_PASSWORD = 1819;\r\nexports.ER_MUST_CHANGE_PASSWORD = 1820;\r\nexports.ER_FK_NO_INDEX_CHILD = 1821;\r\nexports.ER_FK_NO_INDEX_PARENT = 1822;\r\nexports.ER_FK_FAIL_ADD_SYSTEM = 1823;\r\nexports.ER_FK_CANNOT_OPEN_PARENT = 1824;\r\nexports.ER_FK_INCORRECT_OPTION = 1825;\r\nexports.ER_FK_DUP_NAME = 1826;\r\nexports.ER_PASSWORD_FORMAT = 1827;\r\nexports.ER_FK_COLUMN_CANNOT_DROP = 1828;\r\nexports.ER_FK_COLUMN_CANNOT_DROP_CHILD = 1829;\r\nexports.ER_FK_COLUMN_NOT_NULL = 1830;\r\nexports.ER_DUP_INDEX = 1831;\r\nexports.ER_FK_COLUMN_CANNOT_CHANGE = 1832;\r\nexports.ER_FK_COLUMN_CANNOT_CHANGE_CHILD = 1833;\r\nexports.ER_UNUSED5 = 1834;\r\nexports.ER_MALFORMED_PACKET = 1835;\r\nexports.ER_READ_ONLY_MODE = 1836;\r\nexports.ER_GTID_NEXT_TYPE_UNDEFINED_GTID = 1837;\r\nexports.ER_VARIABLE_NOT_SETTABLE_IN_SP = 1838;\r\nexports.ER_CANT_SET_GTID_PURGED_WHEN_GTID_MODE_IS_OFF = 1839;\r\nexports.ER_CANT_SET_GTID_PURGED_WHEN_GTID_EXECUTED_IS_NOT_EMPTY = 1840;\r\nexports.ER_CANT_SET_GTID_PURGED_WHEN_OWNED_GTIDS_IS_NOT_EMPTY = 1841;\r\nexports.ER_GTID_PURGED_WAS_CHANGED = 1842;\r\nexports.ER_GTID_EXECUTED_WAS_CHANGED = 1843;\r\nexports.ER_BINLOG_STMT_MODE_AND_NO_REPL_TABLES = 1844;\r\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED = 1845;\r\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON = 1846;\r\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_COPY = 1847;\r\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_PARTITION = 1848;\r\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FK_RENAME = 1849;\r\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_COLUMN_TYPE = 1850;\r\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FK_CHECK = 1851;\r\nexports.ER_UNUSED6 = 1852;\r\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_NOPK = 1853;\r\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_AUTOINC = 1854;\r\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_HIDDEN_FTS = 1855;\r\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_CHANGE_FTS = 1856;\r\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FTS = 1857;\r\nexports.ER_SQL_REPLICA_SKIP_COUNTER_NOT_SETTABLE_IN_GTID_MODE = 1858;\r\nexports.ER_DUP_UNKNOWN_IN_INDEX = 1859;\r\nexports.ER_IDENT_CAUSES_TOO_LONG_PATH = 1860;\r\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_NOT_NULL = 1861;\r\nexports.ER_MUST_CHANGE_PASSWORD_LOGIN = 1862;\r\nexports.ER_ROW_IN_WRONG_PARTITION = 1863;\r\nexports.ER_MTA_EVENT_BIGGER_PENDING_JOBS_SIZE_MAX = 1864;\r\nexports.ER_INNODB_NO_FT_USES_PARSER = 1865;\r\nexports.ER_BINLOG_LOGICAL_CORRUPTION = 1866;\r\nexports.ER_WARN_PURGE_LOG_IN_USE = 1867;\r\nexports.ER_WARN_PURGE_LOG_IS_ACTIVE = 1868;\r\nexports.ER_AUTO_INCREMENT_CONFLICT = 1869;\r\nexports.WARN_ON_BLOCKHOLE_IN_RBR = 1870;\r\nexports.ER_REPLICA_CM_INIT_REPOSITORY = 1871;\r\nexports.ER_REPLICA_AM_INIT_REPOSITORY = 1872;\r\nexports.ER_ACCESS_DENIED_CHANGE_USER_ERROR = 1873;\r\nexports.ER_INNODB_READ_ONLY = 1874;\r\nexports.ER_STOP_REPLICA_SQL_THREAD_TIMEOUT = 1875;\r\nexports.ER_STOP_REPLICA_IO_THREAD_TIMEOUT = 1876;\r\nexports.ER_TABLE_CORRUPT = 1877;\r\nexports.ER_TEMP_FILE_WRITE_FAILURE = 1878;\r\nexports.ER_INNODB_FT_AUX_NOT_HEX_ID = 1879;\r\nexports.ER_OLD_TEMPORALS_UPGRADED = 1880;\r\nexports.ER_INNODB_FORCED_RECOVERY = 1881;\r\nexports.ER_AES_INVALID_IV = 1882;\r\nexports.ER_PLUGIN_CANNOT_BE_UNINSTALLED = 1883;\r\nexports.ER_GTID_UNSAFE_BINLOG_SPLITTABLE_STATEMENT_AND_ASSIGNED_GTID = 1884;\r\nexports.ER_REPLICA_HAS_MORE_GTIDS_THAN_SOURCE = 1885;\r\nexports.ER_MISSING_KEY = 1886;\r\nexports.WARN_NAMED_PIPE_ACCESS_EVERYONE = 1887;\r\nexports.ER_FILE_CORRUPT = 3000;\r\nexports.ER_ERROR_ON_SOURCE = 3001;\r\nexports.ER_INCONSISTENT_ERROR = 3002;\r\nexports.ER_STORAGE_ENGINE_NOT_LOADED = 3003;\r\nexports.ER_GET_STACKED_DA_WITHOUT_ACTIVE_HANDLER = 3004;\r\nexports.ER_WARN_LEGACY_SYNTAX_CONVERTED = 3005;\r\nexports.ER_BINLOG_UNSAFE_FULLTEXT_PLUGIN = 3006;\r\nexports.ER_CANNOT_DISCARD_TEMPORARY_TABLE = 3007;\r\nexports.ER_FK_DEPTH_EXCEEDED = 3008;\r\nexports.ER_COL_COUNT_DOESNT_MATCH_PLEASE_UPDATE_V2 = 3009;\r\nexports.ER_WARN_TRIGGER_DOESNT_HAVE_CREATED = 3010;\r\nexports.ER_REFERENCED_TRG_DOES_NOT_EXIST = 3011;\r\nexports.ER_EXPLAIN_NOT_SUPPORTED = 3012;\r\nexports.ER_INVALID_FIELD_SIZE = 3013;\r\nexports.ER_MISSING_HA_CREATE_OPTION = 3014;\r\nexports.ER_ENGINE_OUT_OF_MEMORY = 3015;\r\nexports.ER_PASSWORD_EXPIRE_ANONYMOUS_USER = 3016;\r\nexports.ER_REPLICA_SQL_THREAD_MUST_STOP = 3017;\r\nexports.ER_NO_FT_MATERIALIZED_SUBQUERY = 3018;\r\nexports.ER_INNODB_UNDO_LOG_FULL = 3019;\r\nexports.ER_INVALID_ARGUMENT_FOR_LOGARITHM = 3020;\r\nexports.ER_REPLICA_CHANNEL_IO_THREAD_MUST_STOP = 3021;\r\nexports.ER_WARN_OPEN_TEMP_TABLES_MUST_BE_ZERO = 3022;\r\nexports.ER_WARN_ONLY_SOURCE_LOG_FILE_NO_POS = 3023;\r\nexports.ER_QUERY_TIMEOUT = 3024;\r\nexports.ER_NON_RO_SELECT_DISABLE_TIMER = 3025;\r\nexports.ER_DUP_LIST_ENTRY = 3026;\r\nexports.ER_SQL_MODE_NO_EFFECT = 3027;\r\nexports.ER_AGGREGATE_ORDER_FOR_UNION = 3028;\r\nexports.ER_AGGREGATE_ORDER_NON_AGG_QUERY = 3029;\r\nexports.ER_REPLICA_WORKER_STOPPED_PREVIOUS_THD_ERROR = 3030;\r\nexports.ER_DONT_SUPPORT_REPLICA_PRESERVE_COMMIT_ORDER = 3031;\r\nexports.ER_SERVER_OFFLINE_MODE = 3032;\r\nexports.ER_GIS_DIFFERENT_SRIDS = 3033;\r\nexports.ER_GIS_UNSUPPORTED_ARGUMENT = 3034;\r\nexports.ER_GIS_UNKNOWN_ERROR = 3035;\r\nexports.ER_GIS_UNKNOWN_EXCEPTION = 3036;\r\nexports.ER_GIS_INVALID_DATA = 3037;\r\nexports.ER_BOOST_GEOMETRY_EMPTY_INPUT_EXCEPTION = 3038;\r\nexports.ER_BOOST_GEOMETRY_CENTROID_EXCEPTION = 3039;\r\nexports.ER_BOOST_GEOMETRY_OVERLAY_INVALID_INPUT_EXCEPTION = 3040;\r\nexports.ER_BOOST_GEOMETRY_TURN_INFO_EXCEPTION = 3041;\r\nexports.ER_BOOST_GEOMETRY_SELF_INTERSECTION_POINT_EXCEPTION = 3042;\r\nexports.ER_BOOST_GEOMETRY_UNKNOWN_EXCEPTION = 3043;\r\nexports.ER_STD_BAD_ALLOC_ERROR = 3044;\r\nexports.ER_STD_DOMAIN_ERROR = 3045;\r\nexports.ER_STD_LENGTH_ERROR = 3046;\r\nexports.ER_STD_INVALID_ARGUMENT = 3047;\r\nexports.ER_STD_OUT_OF_RANGE_ERROR = 3048;\r\nexports.ER_STD_OVERFLOW_ERROR = 3049;\r\nexports.ER_STD_RANGE_ERROR = 3050;\r\nexports.ER_STD_UNDERFLOW_ERROR = 3051;\r\nexports.ER_STD_LOGIC_ERROR = 3052;\r\nexports.ER_STD_RUNTIME_ERROR = 3053;\r\nexports.ER_STD_UNKNOWN_EXCEPTION = 3054;\r\nexports.ER_GIS_DATA_WRONG_ENDIANESS = 3055;\r\nexports.ER_CHANGE_SOURCE_PASSWORD_LENGTH = 3056;\r\nexports.ER_USER_LOCK_WRONG_NAME = 3057;\r\nexports.ER_USER_LOCK_DEADLOCK = 3058;\r\nexports.ER_REPLACE_INACCESSIBLE_ROWS = 3059;\r\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_GIS = 3060;\r\nexports.ER_ILLEGAL_USER_VAR = 3061;\r\nexports.ER_GTID_MODE_OFF = 3062;\r\nexports.ER_UNSUPPORTED_BY_REPLICATION_THREAD = 3063;\r\nexports.ER_INCORRECT_TYPE = 3064;\r\nexports.ER_FIELD_IN_ORDER_NOT_SELECT = 3065;\r\nexports.ER_AGGREGATE_IN_ORDER_NOT_SELECT = 3066;\r\nexports.ER_INVALID_RPL_WILD_TABLE_FILTER_PATTERN = 3067;\r\nexports.ER_NET_OK_PACKET_TOO_LARGE = 3068;\r\nexports.ER_INVALID_JSON_DATA = 3069;\r\nexports.ER_INVALID_GEOJSON_MISSING_MEMBER = 3070;\r\nexports.ER_INVALID_GEOJSON_WRONG_TYPE = 3071;\r\nexports.ER_INVALID_GEOJSON_UNSPECIFIED = 3072;\r\nexports.ER_DIMENSION_UNSUPPORTED = 3073;\r\nexports.ER_REPLICA_CHANNEL_DOES_NOT_EXIST = 3074;\r\nexports.ER_SLAVE_MULTIPLE_CHANNELS_HOST_PORT = 3075;\r\nexports.ER_REPLICA_CHANNEL_NAME_INVALID_OR_TOO_LONG = 3076;\r\nexports.ER_REPLICA_NEW_CHANNEL_WRONG_REPOSITORY = 3077;\r\nexports.ER_SLAVE_CHANNEL_DELETE = 3078;\r\nexports.ER_REPLICA_MULTIPLE_CHANNELS_CMD = 3079;\r\nexports.ER_REPLICA_MAX_CHANNELS_EXCEEDED = 3080;\r\nexports.ER_REPLICA_CHANNEL_MUST_STOP = 3081;\r\nexports.ER_REPLICA_CHANNEL_NOT_RUNNING = 3082;\r\nexports.ER_REPLICA_CHANNEL_WAS_RUNNING = 3083;\r\nexports.ER_REPLICA_CHANNEL_WAS_NOT_RUNNING = 3084;\r\nexports.ER_REPLICA_CHANNEL_SQL_THREAD_MUST_STOP = 3085;\r\nexports.ER_REPLICA_CHANNEL_SQL_SKIP_COUNTER = 3086;\r\nexports.ER_WRONG_FIELD_WITH_GROUP_V2 = 3087;\r\nexports.ER_MIX_OF_GROUP_FUNC_AND_FIELDS_V2 = 3088;\r\nexports.ER_WARN_DEPRECATED_SYSVAR_UPDATE = 3089;\r\nexports.ER_WARN_DEPRECATED_SQLMODE = 3090;\r\nexports.ER_CANNOT_LOG_PARTIAL_DROP_DATABASE_WITH_GTID = 3091;\r\nexports.ER_GROUP_REPLICATION_CONFIGURATION = 3092;\r\nexports.ER_GROUP_REPLICATION_RUNNING = 3093;\r\nexports.ER_GROUP_REPLICATION_APPLIER_INIT_ERROR = 3094;\r\nexports.ER_GROUP_REPLICATION_STOP_APPLIER_THREAD_TIMEOUT = 3095;\r\nexports.ER_GROUP_REPLICATION_COMMUNICATION_LAYER_SESSION_ERROR = 3096;\r\nexports.ER_GROUP_REPLICATION_COMMUNICATION_LAYER_JOIN_ERROR = 3097;\r\nexports.ER_BEFORE_DML_VALIDATION_ERROR = 3098;\r\nexports.ER_PREVENTS_VARIABLE_WITHOUT_RBR = 3099;\r\nexports.ER_RUN_HOOK_ERROR = 3100;\r\nexports.ER_TRANSACTION_ROLLBACK_DURING_COMMIT = 3101;\r\nexports.ER_GENERATED_COLUMN_FUNCTION_IS_NOT_ALLOWED = 3102;\r\nexports.ER_UNSUPPORTED_ALTER_INPLACE_ON_VIRTUAL_COLUMN = 3103;\r\nexports.ER_WRONG_FK_OPTION_FOR_GENERATED_COLUMN = 3104;\r\nexports.ER_NON_DEFAULT_VALUE_FOR_GENERATED_COLUMN = 3105;\r\nexports.ER_UNSUPPORTED_ACTION_ON_GENERATED_COLUMN = 3106;\r\nexports.ER_GENERATED_COLUMN_NON_PRIOR = 3107;\r\nexports.ER_DEPENDENT_BY_GENERATED_COLUMN = 3108;\r\nexports.ER_GENERATED_COLUMN_REF_AUTO_INC = 3109;\r\nexports.ER_FEATURE_NOT_AVAILABLE = 3110;\r\nexports.ER_CANT_SET_GTID_MODE = 3111;\r\nexports.ER_CANT_USE_AUTO_POSITION_WITH_GTID_MODE_OFF = 3112;\r\nexports.ER_CANT_REPLICATE_ANONYMOUS_WITH_AUTO_POSITION = 3113;\r\nexports.ER_CANT_REPLICATE_ANONYMOUS_WITH_GTID_MODE_ON = 3114;\r\nexports.ER_CANT_REPLICATE_GTID_WITH_GTID_MODE_OFF = 3115;\r\nexports.ER_CANT_ENFORCE_GTID_CONSISTENCY_WITH_ONGOING_GTID_VIOLATING_TX = 3116;\r\nexports.ER_ENFORCE_GTID_CONSISTENCY_WARN_WITH_ONGOING_GTID_VIOLATING_TX = 3117;\r\nexports.ER_ACCOUNT_HAS_BEEN_LOCKED = 3118;\r\nexports.ER_WRONG_TABLESPACE_NAME = 3119;\r\nexports.ER_TABLESPACE_IS_NOT_EMPTY = 3120;\r\nexports.ER_WRONG_FILE_NAME = 3121;\r\nexports.ER_BOOST_GEOMETRY_INCONSISTENT_TURNS_EXCEPTION = 3122;\r\nexports.ER_WARN_OPTIMIZER_HINT_SYNTAX_ERROR = 3123;\r\nexports.ER_WARN_BAD_MAX_EXECUTION_TIME = 3124;\r\nexports.ER_WARN_UNSUPPORTED_MAX_EXECUTION_TIME = 3125;\r\nexports.ER_WARN_CONFLICTING_HINT = 3126;\r\nexports.ER_WARN_UNKNOWN_QB_NAME = 3127;\r\nexports.ER_UNRESOLVED_HINT_NAME = 3128;\r\nexports.ER_WARN_ON_MODIFYING_GTID_EXECUTED_TABLE = 3129;\r\nexports.ER_PLUGGABLE_PROTOCOL_COMMAND_NOT_SUPPORTED = 3130;\r\nexports.ER_LOCKING_SERVICE_WRONG_NAME = 3131;\r\nexports.ER_LOCKING_SERVICE_DEADLOCK = 3132;\r\nexports.ER_LOCKING_SERVICE_TIMEOUT = 3133;\r\nexports.ER_GIS_MAX_POINTS_IN_GEOMETRY_OVERFLOWED = 3134;\r\nexports.ER_SQL_MODE_MERGED = 3135;\r\nexports.ER_VTOKEN_PLUGIN_TOKEN_MISMATCH = 3136;\r\nexports.ER_VTOKEN_PLUGIN_TOKEN_NOT_FOUND = 3137;\r\nexports.ER_CANT_SET_VARIABLE_WHEN_OWNING_GTID = 3138;\r\nexports.ER_REPLICA_CHANNEL_OPERATION_NOT_ALLOWED = 3139;\r\nexports.ER_INVALID_JSON_TEXT = 3140;\r\nexports.ER_INVALID_JSON_TEXT_IN_PARAM = 3141;\r\nexports.ER_INVALID_JSON_BINARY_DATA = 3142;\r\nexports.ER_INVALID_JSON_PATH = 3143;\r\nexports.ER_INVALID_JSON_CHARSET = 3144;\r\nexports.ER_INVALID_JSON_CHARSET_IN_FUNCTION = 3145;\r\nexports.ER_INVALID_TYPE_FOR_JSON = 3146;\r\nexports.ER_INVALID_CAST_TO_JSON = 3147;\r\nexports.ER_INVALID_JSON_PATH_CHARSET = 3148;\r\nexports.ER_INVALID_JSON_PATH_WILDCARD = 3149;\r\nexports.ER_JSON_VALUE_TOO_BIG = 3150;\r\nexports.ER_JSON_KEY_TOO_BIG = 3151;\r\nexports.ER_JSON_USED_AS_KEY = 3152;\r\nexports.ER_JSON_VACUOUS_PATH = 3153;\r\nexports.ER_JSON_BAD_ONE_OR_ALL_ARG = 3154;\r\nexports.ER_NUMERIC_JSON_VALUE_OUT_OF_RANGE = 3155;\r\nexports.ER_INVALID_JSON_VALUE_FOR_CAST = 3156;\r\nexports.ER_JSON_DOCUMENT_TOO_DEEP = 3157;\r\nexports.ER_JSON_DOCUMENT_NULL_KEY = 3158;\r\nexports.ER_SECURE_TRANSPORT_REQUIRED = 3159;\r\nexports.ER_NO_SECURE_TRANSPORTS_CONFIGURED = 3160;\r\nexports.ER_DISABLED_STORAGE_ENGINE = 3161;\r\nexports.ER_USER_DOES_NOT_EXIST = 3162;\r\nexports.ER_USER_ALREADY_EXISTS = 3163;\r\nexports.ER_AUDIT_API_ABORT = 3164;\r\nexports.ER_INVALID_JSON_PATH_ARRAY_CELL = 3165;\r\nexports.ER_BUFPOOL_RESIZE_INPROGRESS = 3166;\r\nexports.ER_FEATURE_DISABLED_SEE_DOC = 3167;\r\nexports.ER_SERVER_ISNT_AVAILABLE = 3168;\r\nexports.ER_SESSION_WAS_KILLED = 3169;\r\nexports.ER_CAPACITY_EXCEEDED = 3170;\r\nexports.ER_CAPACITY_EXCEEDED_IN_RANGE_OPTIMIZER = 3171;\r\nexports.ER_TABLE_NEEDS_UPG_PART = 3172;\r\nexports.ER_CANT_WAIT_FOR_EXECUTED_GTID_SET_WHILE_OWNING_A_GTID = 3173;\r\nexports.ER_CANNOT_ADD_FOREIGN_BASE_COL_VIRTUAL = 3174;\r\nexports.ER_CANNOT_CREATE_VIRTUAL_INDEX_CONSTRAINT = 3175;\r\nexports.ER_ERROR_ON_MODIFYING_GTID_EXECUTED_TABLE = 3176;\r\nexports.ER_LOCK_REFUSED_BY_ENGINE = 3177;\r\nexports.ER_UNSUPPORTED_ALTER_ONLINE_ON_VIRTUAL_COLUMN = 3178;\r\nexports.ER_MASTER_KEY_ROTATION_NOT_SUPPORTED_BY_SE = 3179;\r\nexports.ER_MASTER_KEY_ROTATION_ERROR_BY_SE = 3180;\r\nexports.ER_MASTER_KEY_ROTATION_BINLOG_FAILED = 3181;\r\nexports.ER_MASTER_KEY_ROTATION_SE_UNAVAILABLE = 3182;\r\nexports.ER_TABLESPACE_CANNOT_ENCRYPT = 3183;\r\nexports.ER_INVALID_ENCRYPTION_OPTION = 3184;\r\nexports.ER_CANNOT_FIND_KEY_IN_KEYRING = 3185;\r\nexports.ER_CAPACITY_EXCEEDED_IN_PARSER = 3186;\r\nexports.ER_UNSUPPORTED_ALTER_ENCRYPTION_INPLACE = 3187;\r\nexports.ER_KEYRING_UDF_KEYRING_SERVICE_ERROR = 3188;\r\nexports.ER_USER_COLUMN_OLD_LENGTH = 3189;\r\nexports.ER_CANT_RESET_SOURCE = 3190;\r\nexports.ER_GROUP_REPLICATION_MAX_GROUP_SIZE = 3191;\r\nexports.ER_CANNOT_ADD_FOREIGN_BASE_COL_STORED = 3192;\r\nexports.ER_TABLE_REFERENCED = 3193;\r\nexports.ER_PARTITION_ENGINE_DEPRECATED_FOR_TABLE = 3194;\r\nexports.ER_WARN_USING_GEOMFROMWKB_TO_SET_SRID_ZERO = 3195;\r\nexports.ER_WARN_USING_GEOMFROMWKB_TO_SET_SRID = 3196;\r\nexports.ER_XA_RETRY = 3197;\r\nexports.ER_KEYRING_AWS_UDF_AWS_KMS_ERROR = 3198;\r\nexports.ER_BINLOG_UNSAFE_XA = 3199;\r\nexports.ER_UDF_ERROR = 3200;\r\nexports.ER_KEYRING_MIGRATION_FAILURE = 3201;\r\nexports.ER_KEYRING_ACCESS_DENIED_ERROR = 3202;\r\nexports.ER_KEYRING_MIGRATION_STATUS = 3203;\r\nexports.ER_PLUGIN_FAILED_TO_OPEN_TABLES = 3204;\r\nexports.ER_PLUGIN_FAILED_TO_OPEN_TABLE = 3205;\r\nexports.ER_AUDIT_LOG_NO_KEYRING_PLUGIN_INSTALLED = 3206;\r\nexports.ER_AUDIT_LOG_ENCRYPTION_PASSWORD_HAS_NOT_BEEN_SET = 3207;\r\nexports.ER_AUDIT_LOG_COULD_NOT_CREATE_AES_KEY = 3208;\r\nexports.ER_AUDIT_LOG_ENCRYPTION_PASSWORD_CANNOT_BE_FETCHED = 3209;\r\nexports.ER_AUDIT_LOG_JSON_FILTERING_NOT_ENABLED = 3210;\r\nexports.ER_AUDIT_LOG_UDF_INSUFFICIENT_PRIVILEGE = 3211;\r\nexports.ER_AUDIT_LOG_SUPER_PRIVILEGE_REQUIRED = 3212;\r\nexports.ER_COULD_NOT_REINITIALIZE_AUDIT_LOG_FILTERS = 3213;\r\nexports.ER_AUDIT_LOG_UDF_INVALID_ARGUMENT_TYPE = 3214;\r\nexports.ER_AUDIT_LOG_UDF_INVALID_ARGUMENT_COUNT = 3215;\r\nexports.ER_AUDIT_LOG_HAS_NOT_BEEN_INSTALLED = 3216;\r\nexports.ER_AUDIT_LOG_UDF_READ_INVALID_MAX_ARRAY_LENGTH_ARG_TYPE = 3217;\r\nexports.ER_AUDIT_LOG_UDF_READ_INVALID_MAX_ARRAY_LENGTH_ARG_VALUE = 3218;\r\nexports.ER_AUDIT_LOG_JSON_FILTER_PARSING_ERROR = 3219;\r\nexports.ER_AUDIT_LOG_JSON_FILTER_NAME_CANNOT_BE_EMPTY = 3220;\r\nexports.ER_AUDIT_LOG_JSON_USER_NAME_CANNOT_BE_EMPTY = 3221;\r\nexports.ER_AUDIT_LOG_JSON_FILTER_DOES_NOT_EXISTS = 3222;\r\nexports.ER_AUDIT_LOG_USER_FIRST_CHARACTER_MUST_BE_ALPHANUMERIC = 3223;\r\nexports.ER_AUDIT_LOG_USER_NAME_INVALID_CHARACTER = 3224;\r\nexports.ER_AUDIT_LOG_HOST_NAME_INVALID_CHARACTER = 3225;\r\nexports.WARN_DEPRECATED_MAXDB_SQL_MODE_FOR_TIMESTAMP = 3226;\r\nexports.ER_XA_REPLICATION_FILTERS = 3227;\r\nexports.ER_CANT_OPEN_ERROR_LOG = 3228;\r\nexports.ER_GROUPING_ON_TIMESTAMP_IN_DST = 3229;\r\nexports.ER_CANT_START_SERVER_NAMED_PIPE = 3230;\r\nexports.ER_WRITE_SET_EXCEEDS_LIMIT = 3231;\r\nexports.ER_DEPRECATED_TLS_VERSION_SESSION_57 = 3232;\r\nexports.ER_WARN_DEPRECATED_TLS_VERSION_57 = 3233;\r\nexports.ER_WARN_WRONG_NATIVE_TABLE_STRUCTURE = 3234;\r\nexports.ER_AES_INVALID_KDF_NAME = 3235;\r\nexports.ER_AES_INVALID_KDF_ITERATIONS = 3236;\r\nexports.WARN_AES_KEY_SIZE = 3237;\r\nexports.ER_AES_INVALID_KDF_OPTION_SIZE = 3238;\r\nexports.ER_UNSUPPORT_COMPRESSED_TEMPORARY_TABLE = 3500;\r\nexports.ER_ACL_OPERATION_FAILED = 3501;\r\nexports.ER_UNSUPPORTED_INDEX_ALGORITHM = 3502;\r\nexports.ER_NO_SUCH_DB = 3503;\r\nexports.ER_TOO_BIG_ENUM = 3504;\r\nexports.ER_TOO_LONG_SET_ENUM_VALUE = 3505;\r\nexports.ER_INVALID_DD_OBJECT = 3506;\r\nexports.ER_UPDATING_DD_TABLE = 3507;\r\nexports.ER_INVALID_DD_OBJECT_ID = 3508;\r\nexports.ER_INVALID_DD_OBJECT_NAME = 3509;\r\nexports.ER_TABLESPACE_MISSING_WITH_NAME = 3510;\r\nexports.ER_TOO_LONG_ROUTINE_COMMENT = 3511;\r\nexports.ER_SP_LOAD_FAILED = 3512;\r\nexports.ER_INVALID_BITWISE_OPERANDS_SIZE = 3513;\r\nexports.ER_INVALID_BITWISE_AGGREGATE_OPERANDS_SIZE = 3514;\r\nexports.ER_WARN_UNSUPPORTED_HINT = 3515;\r\nexports.ER_UNEXPECTED_GEOMETRY_TYPE = 3516;\r\nexports.ER_SRS_PARSE_ERROR = 3517;\r\nexports.ER_SRS_PROJ_PARAMETER_MISSING = 3518;\r\nexports.ER_WARN_SRS_NOT_FOUND = 3519;\r\nexports.ER_SRS_NOT_CARTESIAN = 3520;\r\nexports.ER_SRS_NOT_CARTESIAN_UNDEFINED = 3521;\r\nexports.ER_PK_INDEX_CANT_BE_INVISIBLE = 3522;\r\nexports.ER_UNKNOWN_AUTHID = 3523;\r\nexports.ER_FAILED_ROLE_GRANT = 3524;\r\nexports.ER_OPEN_ROLE_TABLES = 3525;\r\nexports.ER_FAILED_DEFAULT_ROLES = 3526;\r\nexports.ER_COMPONENTS_NO_SCHEME = 3527;\r\nexports.ER_COMPONENTS_NO_SCHEME_SERVICE = 3528;\r\nexports.ER_COMPONENTS_CANT_LOAD = 3529;\r\nexports.ER_ROLE_NOT_GRANTED = 3530;\r\nexports.ER_FAILED_REVOKE_ROLE = 3531;\r\nexports.ER_RENAME_ROLE = 3532;\r\nexports.ER_COMPONENTS_CANT_ACQUIRE_SERVICE_IMPLEMENTATION = 3533;\r\nexports.ER_COMPONENTS_CANT_SATISFY_DEPENDENCY = 3534;\r\nexports.ER_COMPONENTS_LOAD_CANT_REGISTER_SERVICE_IMPLEMENTATION = 3535;\r\nexports.ER_COMPONENTS_LOAD_CANT_INITIALIZE = 3536;\r\nexports.ER_COMPONENTS_UNLOAD_NOT_LOADED = 3537;\r\nexports.ER_COMPONENTS_UNLOAD_CANT_DEINITIALIZE = 3538;\r\nexports.ER_COMPONENTS_CANT_RELEASE_SERVICE = 3539;\r\nexports.ER_COMPONENTS_UNLOAD_CANT_UNREGISTER_SERVICE = 3540;\r\nexports.ER_COMPONENTS_CANT_UNLOAD = 3541;\r\nexports.ER_WARN_UNLOAD_THE_NOT_PERSISTED = 3542;\r\nexports.ER_COMPONENT_TABLE_INCORRECT = 3543;\r\nexports.ER_COMPONENT_MANIPULATE_ROW_FAILED = 3544;\r\nexports.ER_COMPONENTS_UNLOAD_DUPLICATE_IN_GROUP = 3545;\r\nexports.ER_CANT_SET_GTID_PURGED_DUE_SETS_CONSTRAINTS = 3546;\r\nexports.ER_CANNOT_LOCK_USER_MANAGEMENT_CACHES = 3547;\r\nexports.ER_SRS_NOT_FOUND = 3548;\r\nexports.ER_VARIABLE_NOT_PERSISTED = 3549;\r\nexports.ER_IS_QUERY_INVALID_CLAUSE = 3550;\r\nexports.ER_UNABLE_TO_STORE_STATISTICS = 3551;\r\nexports.ER_NO_SYSTEM_SCHEMA_ACCESS = 3552;\r\nexports.ER_NO_SYSTEM_TABLESPACE_ACCESS = 3553;\r\nexports.ER_NO_SYSTEM_TABLE_ACCESS = 3554;\r\nexports.ER_NO_SYSTEM_TABLE_ACCESS_FOR_DICTIONARY_TABLE = 3555;\r\nexports.ER_NO_SYSTEM_TABLE_ACCESS_FOR_SYSTEM_TABLE = 3556;\r\nexports.ER_NO_SYSTEM_TABLE_ACCESS_FOR_TABLE = 3557;\r\nexports.ER_INVALID_OPTION_KEY = 3558;\r\nexports.ER_INVALID_OPTION_VALUE = 3559;\r\nexports.ER_INVALID_OPTION_KEY_VALUE_PAIR = 3560;\r\nexports.ER_INVALID_OPTION_START_CHARACTER = 3561;\r\nexports.ER_INVALID_OPTION_END_CHARACTER = 3562;\r\nexports.ER_INVALID_OPTION_CHARACTERS = 3563;\r\nexports.ER_DUPLICATE_OPTION_KEY = 3564;\r\nexports.ER_WARN_SRS_NOT_FOUND_AXIS_ORDER = 3565;\r\nexports.ER_NO_ACCESS_TO_NATIVE_FCT = 3566;\r\nexports.ER_RESET_SOURCE_TO_VALUE_OUT_OF_RANGE = 3567;\r\nexports.ER_UNRESOLVED_TABLE_LOCK = 3568;\r\nexports.ER_DUPLICATE_TABLE_LOCK = 3569;\r\nexports.ER_BINLOG_UNSAFE_SKIP_LOCKED = 3570;\r\nexports.ER_BINLOG_UNSAFE_NOWAIT = 3571;\r\nexports.ER_LOCK_NOWAIT = 3572;\r\nexports.ER_CTE_RECURSIVE_REQUIRES_UNION = 3573;\r\nexports.ER_CTE_RECURSIVE_REQUIRES_NONRECURSIVE_FIRST = 3574;\r\nexports.ER_CTE_RECURSIVE_FORBIDS_AGGREGATION = 3575;\r\nexports.ER_CTE_RECURSIVE_FORBIDDEN_JOIN_ORDER = 3576;\r\nexports.ER_CTE_RECURSIVE_REQUIRES_SINGLE_REFERENCE = 3577;\r\nexports.ER_SWITCH_TMP_ENGINE = 3578;\r\nexports.ER_WINDOW_NO_SUCH_WINDOW = 3579;\r\nexports.ER_WINDOW_CIRCULARITY_IN_WINDOW_GRAPH = 3580;\r\nexports.ER_WINDOW_NO_CHILD_PARTITIONING = 3581;\r\nexports.ER_WINDOW_NO_INHERIT_FRAME = 3582;\r\nexports.ER_WINDOW_NO_REDEFINE_ORDER_BY = 3583;\r\nexports.ER_WINDOW_FRAME_START_ILLEGAL = 3584;\r\nexports.ER_WINDOW_FRAME_END_ILLEGAL = 3585;\r\nexports.ER_WINDOW_FRAME_ILLEGAL = 3586;\r\nexports.ER_WINDOW_RANGE_FRAME_ORDER_TYPE = 3587;\r\nexports.ER_WINDOW_RANGE_FRAME_TEMPORAL_TYPE = 3588;\r\nexports.ER_WINDOW_RANGE_FRAME_NUMERIC_TYPE = 3589;\r\nexports.ER_WINDOW_RANGE_BOUND_NOT_CONSTANT = 3590;\r\nexports.ER_WINDOW_DUPLICATE_NAME = 3591;\r\nexports.ER_WINDOW_ILLEGAL_ORDER_BY = 3592;\r\nexports.ER_WINDOW_INVALID_WINDOW_FUNC_USE = 3593;\r\nexports.ER_WINDOW_INVALID_WINDOW_FUNC_ALIAS_USE = 3594;\r\nexports.ER_WINDOW_NESTED_WINDOW_FUNC_USE_IN_WINDOW_SPEC = 3595;\r\nexports.ER_WINDOW_ROWS_INTERVAL_USE = 3596;\r\nexports.ER_WINDOW_NO_GROUP_ORDER = 3597;\r\nexports.ER_WINDOW_EXPLAIN_JSON = 3598;\r\nexports.ER_WINDOW_FUNCTION_IGNORES_FRAME = 3599;\r\nexports.ER_WL9236_NOW = 3600;\r\nexports.ER_INVALID_NO_OF_ARGS = 3601;\r\nexports.ER_FIELD_IN_GROUPING_NOT_GROUP_BY = 3602;\r\nexports.ER_TOO_LONG_TABLESPACE_COMMENT = 3603;\r\nexports.ER_ENGINE_CANT_DROP_TABLE = 3604;\r\nexports.ER_ENGINE_CANT_DROP_MISSING_TABLE = 3605;\r\nexports.ER_TABLESPACE_DUP_FILENAME = 3606;\r\nexports.ER_DB_DROP_RMDIR2 = 3607;\r\nexports.ER_IMP_NO_FILES_MATCHED = 3608;\r\nexports.ER_IMP_SCHEMA_DOES_NOT_EXIST = 3609;\r\nexports.ER_IMP_TABLE_ALREADY_EXISTS = 3610;\r\nexports.ER_IMP_INCOMPATIBLE_MYSQLD_VERSION = 3611;\r\nexports.ER_IMP_INCOMPATIBLE_DD_VERSION = 3612;\r\nexports.ER_IMP_INCOMPATIBLE_SDI_VERSION = 3613;\r\nexports.ER_WARN_INVALID_HINT = 3614;\r\nexports.ER_VAR_DOES_NOT_EXIST = 3615;\r\nexports.ER_LONGITUDE_OUT_OF_RANGE = 3616;\r\nexports.ER_LATITUDE_OUT_OF_RANGE = 3617;\r\nexports.ER_NOT_IMPLEMENTED_FOR_GEOGRAPHIC_SRS = 3618;\r\nexports.ER_ILLEGAL_PRIVILEGE_LEVEL = 3619;\r\nexports.ER_NO_SYSTEM_VIEW_ACCESS = 3620;\r\nexports.ER_COMPONENT_FILTER_FLABBERGASTED = 3621;\r\nexports.ER_PART_EXPR_TOO_LONG = 3622;\r\nexports.ER_UDF_DROP_DYNAMICALLY_REGISTERED = 3623;\r\nexports.ER_UNABLE_TO_STORE_COLUMN_STATISTICS = 3624;\r\nexports.ER_UNABLE_TO_UPDATE_COLUMN_STATISTICS = 3625;\r\nexports.ER_UNABLE_TO_DROP_COLUMN_STATISTICS = 3626;\r\nexports.ER_UNABLE_TO_BUILD_HISTOGRAM = 3627;\r\nexports.ER_MANDATORY_ROLE = 3628;\r\nexports.ER_MISSING_TABLESPACE_FILE = 3629;\r\nexports.ER_PERSIST_ONLY_ACCESS_DENIED_ERROR = 3630;\r\nexports.ER_CMD_NEED_SUPER = 3631;\r\nexports.ER_PATH_IN_DATADIR = 3632;\r\nexports.ER_CLONE_DDL_IN_PROGRESS = 3633;\r\nexports.ER_CLONE_TOO_MANY_CONCURRENT_CLONES = 3634;\r\nexports.ER_APPLIER_LOG_EVENT_VALIDATION_ERROR = 3635;\r\nexports.ER_CTE_MAX_RECURSION_DEPTH = 3636;\r\nexports.ER_NOT_HINT_UPDATABLE_VARIABLE = 3637;\r\nexports.ER_CREDENTIALS_CONTRADICT_TO_HISTORY = 3638;\r\nexports.ER_WARNING_PASSWORD_HISTORY_CLAUSES_VOID = 3639;\r\nexports.ER_CLIENT_DOES_NOT_SUPPORT = 3640;\r\nexports.ER_I_S_SKIPPED_TABLESPACE = 3641;\r\nexports.ER_TABLESPACE_ENGINE_MISMATCH = 3642;\r\nexports.ER_WRONG_SRID_FOR_COLUMN = 3643;\r\nexports.ER_CANNOT_ALTER_SRID_DUE_TO_INDEX = 3644;\r\nexports.ER_WARN_BINLOG_PARTIAL_UPDATES_DISABLED = 3645;\r\nexports.ER_WARN_BINLOG_V1_ROW_EVENTS_DISABLED = 3646;\r\nexports.ER_WARN_BINLOG_PARTIAL_UPDATES_SUGGESTS_PARTIAL_IMAGES = 3647;\r\nexports.ER_COULD_NOT_APPLY_JSON_DIFF = 3648;\r\nexports.ER_CORRUPTED_JSON_DIFF = 3649;\r\nexports.ER_RESOURCE_GROUP_EXISTS = 3650;\r\nexports.ER_RESOURCE_GROUP_NOT_EXISTS = 3651;\r\nexports.ER_INVALID_VCPU_ID = 3652;\r\nexports.ER_INVALID_VCPU_RANGE = 3653;\r\nexports.ER_INVALID_THREAD_PRIORITY = 3654;\r\nexports.ER_DISALLOWED_OPERATION = 3655;\r\nexports.ER_RESOURCE_GROUP_BUSY = 3656;\r\nexports.ER_RESOURCE_GROUP_DISABLED = 3657;\r\nexports.ER_FEATURE_UNSUPPORTED = 3658;\r\nexports.ER_ATTRIBUTE_IGNORED = 3659;\r\nexports.ER_INVALID_THREAD_ID = 3660;\r\nexports.ER_RESOURCE_GROUP_BIND_FAILED = 3661;\r\nexports.ER_INVALID_USE_OF_FORCE_OPTION = 3662;\r\nexports.ER_GROUP_REPLICATION_COMMAND_FAILURE = 3663;\r\nexports.ER_SDI_OPERATION_FAILED = 3664;\r\nexports.ER_MISSING_JSON_TABLE_VALUE = 3665;\r\nexports.ER_WRONG_JSON_TABLE_VALUE = 3666;\r\nexports.ER_TF_MUST_HAVE_ALIAS = 3667;\r\nexports.ER_TF_FORBIDDEN_JOIN_TYPE = 3668;\r\nexports.ER_JT_VALUE_OUT_OF_RANGE = 3669;\r\nexports.ER_JT_MAX_NESTED_PATH = 3670;\r\nexports.ER_PASSWORD_EXPIRATION_NOT_SUPPORTED_BY_AUTH_METHOD = 3671;\r\nexports.ER_INVALID_GEOJSON_CRS_NOT_TOP_LEVEL = 3672;\r\nexports.ER_BAD_NULL_ERROR_NOT_IGNORED = 3673;\r\nexports.WARN_USELESS_SPATIAL_INDEX = 3674;\r\nexports.ER_DISK_FULL_NOWAIT = 3675;\r\nexports.ER_PARSE_ERROR_IN_DIGEST_FN = 3676;\r\nexports.ER_UNDISCLOSED_PARSE_ERROR_IN_DIGEST_FN = 3677;\r\nexports.ER_SCHEMA_DIR_EXISTS = 3678;\r\nexports.ER_SCHEMA_DIR_MISSING = 3679;\r\nexports.ER_SCHEMA_DIR_CREATE_FAILED = 3680;\r\nexports.ER_SCHEMA_DIR_UNKNOWN = 3681;\r\nexports.ER_ONLY_IMPLEMENTED_FOR_SRID_0_AND_4326 = 3682;\r\nexports.ER_BINLOG_EXPIRE_LOG_DAYS_AND_SECS_USED_TOGETHER = 3683;\r\nexports.ER_REGEXP_BUFFER_OVERFLOW = 3684;\r\nexports.ER_REGEXP_ILLEGAL_ARGUMENT = 3685;\r\nexports.ER_REGEXP_INDEX_OUTOFBOUNDS_ERROR = 3686;\r\nexports.ER_REGEXP_INTERNAL_ERROR = 3687;\r\nexports.ER_REGEXP_RULE_SYNTAX = 3688;\r\nexports.ER_REGEXP_BAD_ESCAPE_SEQUENCE = 3689;\r\nexports.ER_REGEXP_UNIMPLEMENTED = 3690;\r\nexports.ER_REGEXP_MISMATCHED_PAREN = 3691;\r\nexports.ER_REGEXP_BAD_INTERVAL = 3692;\r\nexports.ER_REGEXP_MAX_LT_MIN = 3693;\r\nexports.ER_REGEXP_INVALID_BACK_REF = 3694;\r\nexports.ER_REGEXP_LOOK_BEHIND_LIMIT = 3695;\r\nexports.ER_REGEXP_MISSING_CLOSE_BRACKET = 3696;\r\nexports.ER_REGEXP_INVALID_RANGE = 3697;\r\nexports.ER_REGEXP_STACK_OVERFLOW = 3698;\r\nexports.ER_REGEXP_TIME_OUT = 3699;\r\nexports.ER_REGEXP_PATTERN_TOO_BIG = 3700;\r\nexports.ER_CANT_SET_ERROR_LOG_SERVICE = 3701;\r\nexports.ER_EMPTY_PIPELINE_FOR_ERROR_LOG_SERVICE = 3702;\r\nexports.ER_COMPONENT_FILTER_DIAGNOSTICS = 3703;\r\nexports.ER_NOT_IMPLEMENTED_FOR_CARTESIAN_SRS = 3704;\r\nexports.ER_NOT_IMPLEMENTED_FOR_PROJECTED_SRS = 3705;\r\nexports.ER_NONPOSITIVE_RADIUS = 3706;\r\nexports.ER_RESTART_SERVER_FAILED = 3707;\r\nexports.ER_SRS_MISSING_MANDATORY_ATTRIBUTE = 3708;\r\nexports.ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS = 3709;\r\nexports.ER_SRS_NAME_CANT_BE_EMPTY_OR_WHITESPACE = 3710;\r\nexports.ER_SRS_ORGANIZATION_CANT_BE_EMPTY_OR_WHITESPACE = 3711;\r\nexports.ER_SRS_ID_ALREADY_EXISTS = 3712;\r\nexports.ER_WARN_SRS_ID_ALREADY_EXISTS = 3713;\r\nexports.ER_CANT_MODIFY_SRID_0 = 3714;\r\nexports.ER_WARN_RESERVED_SRID_RANGE = 3715;\r\nexports.ER_CANT_MODIFY_SRS_USED_BY_COLUMN = 3716;\r\nexports.ER_SRS_INVALID_CHARACTER_IN_ATTRIBUTE = 3717;\r\nexports.ER_SRS_ATTRIBUTE_STRING_TOO_LONG = 3718;\r\nexports.ER_DEPRECATED_UTF8_ALIAS = 3719;\r\nexports.ER_DEPRECATED_NATIONAL = 3720;\r\nexports.ER_INVALID_DEFAULT_UTF8MB4_COLLATION = 3721;\r\nexports.ER_UNABLE_TO_COLLECT_LOG_STATUS = 3722;\r\nexports.ER_RESERVED_TABLESPACE_NAME = 3723;\r\nexports.ER_UNABLE_TO_SET_OPTION = 3724;\r\nexports.ER_REPLICA_POSSIBLY_DIVERGED_AFTER_DDL = 3725;\r\nexports.ER_SRS_NOT_GEOGRAPHIC = 3726;\r\nexports.ER_POLYGON_TOO_LARGE = 3727;\r\nexports.ER_SPATIAL_UNIQUE_INDEX = 3728;\r\nexports.ER_INDEX_TYPE_NOT_SUPPORTED_FOR_SPATIAL_INDEX = 3729;\r\nexports.ER_FK_CANNOT_DROP_PARENT = 3730;\r\nexports.ER_GEOMETRY_PARAM_LONGITUDE_OUT_OF_RANGE = 3731;\r\nexports.ER_GEOMETRY_PARAM_LATITUDE_OUT_OF_RANGE = 3732;\r\nexports.ER_FK_CANNOT_USE_VIRTUAL_COLUMN = 3733;\r\nexports.ER_FK_NO_COLUMN_PARENT = 3734;\r\nexports.ER_CANT_SET_ERROR_SUPPRESSION_LIST = 3735;\r\nexports.ER_SRS_GEOGCS_INVALID_AXES = 3736;\r\nexports.ER_SRS_INVALID_SEMI_MAJOR_AXIS = 3737;\r\nexports.ER_SRS_INVALID_INVERSE_FLATTENING = 3738;\r\nexports.ER_SRS_INVALID_ANGULAR_UNIT = 3739;\r\nexports.ER_SRS_INVALID_PRIME_MERIDIAN = 3740;\r\nexports.ER_TRANSFORM_SOURCE_SRS_NOT_SUPPORTED = 3741;\r\nexports.ER_TRANSFORM_TARGET_SRS_NOT_SUPPORTED = 3742;\r\nexports.ER_TRANSFORM_SOURCE_SRS_MISSING_TOWGS84 = 3743;\r\nexports.ER_TRANSFORM_TARGET_SRS_MISSING_TOWGS84 = 3744;\r\nexports.ER_TEMP_TABLE_PREVENTS_SWITCH_SESSION_BINLOG_FORMAT = 3745;\r\nexports.ER_TEMP_TABLE_PREVENTS_SWITCH_GLOBAL_BINLOG_FORMAT = 3746;\r\nexports.ER_RUNNING_APPLIER_PREVENTS_SWITCH_GLOBAL_BINLOG_FORMAT = 3747;\r\nexports.ER_CLIENT_GTID_UNSAFE_CREATE_DROP_TEMP_TABLE_IN_TRX_IN_SBR = 3748;\r\nexports.ER_XA_CANT_CREATE_MDL_BACKUP = 3749;\r\nexports.ER_TABLE_WITHOUT_PK = 3750;\r\nexports.ER_WARN_DATA_TRUNCATED_FUNCTIONAL_INDEX = 3751;\r\nexports.ER_WARN_DATA_OUT_OF_RANGE_FUNCTIONAL_INDEX = 3752;\r\nexports.ER_FUNCTIONAL_INDEX_ON_JSON_OR_GEOMETRY_FUNCTION = 3753;\r\nexports.ER_FUNCTIONAL_INDEX_REF_AUTO_INCREMENT = 3754;\r\nexports.ER_CANNOT_DROP_COLUMN_FUNCTIONAL_INDEX = 3755;\r\nexports.ER_FUNCTIONAL_INDEX_PRIMARY_KEY = 3756;\r\nexports.ER_FUNCTIONAL_INDEX_ON_LOB = 3757;\r\nexports.ER_FUNCTIONAL_INDEX_FUNCTION_IS_NOT_ALLOWED = 3758;\r\nexports.ER_FULLTEXT_FUNCTIONAL_INDEX = 3759;\r\nexports.ER_SPATIAL_FUNCTIONAL_INDEX = 3760;\r\nexports.ER_WRONG_KEY_COLUMN_FUNCTIONAL_INDEX = 3761;\r\nexports.ER_FUNCTIONAL_INDEX_ON_FIELD = 3762;\r\nexports.ER_GENERATED_COLUMN_NAMED_FUNCTION_IS_NOT_ALLOWED = 3763;\r\nexports.ER_GENERATED_COLUMN_ROW_VALUE = 3764;\r\nexports.ER_GENERATED_COLUMN_VARIABLES = 3765;\r\nexports.ER_DEPENDENT_BY_DEFAULT_GENERATED_VALUE = 3766;\r\nexports.ER_DEFAULT_VAL_GENERATED_NON_PRIOR = 3767;\r\nexports.ER_DEFAULT_VAL_GENERATED_REF_AUTO_INC = 3768;\r\nexports.ER_DEFAULT_VAL_GENERATED_FUNCTION_IS_NOT_ALLOWED = 3769;\r\nexports.ER_DEFAULT_VAL_GENERATED_NAMED_FUNCTION_IS_NOT_ALLOWED = 3770;\r\nexports.ER_DEFAULT_VAL_GENERATED_ROW_VALUE = 3771;\r\nexports.ER_DEFAULT_VAL_GENERATED_VARIABLES = 3772;\r\nexports.ER_DEFAULT_AS_VAL_GENERATED = 3773;\r\nexports.ER_UNSUPPORTED_ACTION_ON_DEFAULT_VAL_GENERATED = 3774;\r\nexports.ER_GTID_UNSAFE_ALTER_ADD_COL_WITH_DEFAULT_EXPRESSION = 3775;\r\nexports.ER_FK_CANNOT_CHANGE_ENGINE = 3776;\r\nexports.ER_WARN_DEPRECATED_USER_SET_EXPR = 3777;\r\nexports.ER_WARN_DEPRECATED_UTF8MB3_COLLATION = 3778;\r\nexports.ER_WARN_DEPRECATED_NESTED_COMMENT_SYNTAX = 3779;\r\nexports.ER_FK_INCOMPATIBLE_COLUMNS = 3780;\r\nexports.ER_GR_HOLD_WAIT_TIMEOUT = 3781;\r\nexports.ER_GR_HOLD_KILLED = 3782;\r\nexports.ER_GR_HOLD_MEMBER_STATUS_ERROR = 3783;\r\nexports.ER_RPL_ENCRYPTION_FAILED_TO_FETCH_KEY = 3784;\r\nexports.ER_RPL_ENCRYPTION_KEY_NOT_FOUND = 3785;\r\nexports.ER_RPL_ENCRYPTION_KEYRING_INVALID_KEY = 3786;\r\nexports.ER_RPL_ENCRYPTION_HEADER_ERROR = 3787;\r\nexports.ER_RPL_ENCRYPTION_FAILED_TO_ROTATE_LOGS = 3788;\r\nexports.ER_RPL_ENCRYPTION_KEY_EXISTS_UNEXPECTED = 3789;\r\nexports.ER_RPL_ENCRYPTION_FAILED_TO_GENERATE_KEY = 3790;\r\nexports.ER_RPL_ENCRYPTION_FAILED_TO_STORE_KEY = 3791;\r\nexports.ER_RPL_ENCRYPTION_FAILED_TO_REMOVE_KEY = 3792;\r\nexports.ER_RPL_ENCRYPTION_UNABLE_TO_CHANGE_OPTION = 3793;\r\nexports.ER_RPL_ENCRYPTION_MASTER_KEY_RECOVERY_FAILED = 3794;\r\nexports.ER_SLOW_LOG_MODE_IGNORED_WHEN_NOT_LOGGING_TO_FILE = 3795;\r\nexports.ER_GRP_TRX_CONSISTENCY_NOT_ALLOWED = 3796;\r\nexports.ER_GRP_TRX_CONSISTENCY_BEFORE = 3797;\r\nexports.ER_GRP_TRX_CONSISTENCY_AFTER_ON_TRX_BEGIN = 3798;\r\nexports.ER_GRP_TRX_CONSISTENCY_BEGIN_NOT_ALLOWED = 3799;\r\nexports.ER_FUNCTIONAL_INDEX_ROW_VALUE_IS_NOT_ALLOWED = 3800;\r\nexports.ER_RPL_ENCRYPTION_FAILED_TO_ENCRYPT = 3801;\r\nexports.ER_PAGE_TRACKING_NOT_STARTED = 3802;\r\nexports.ER_PAGE_TRACKING_RANGE_NOT_TRACKED = 3803;\r\nexports.ER_PAGE_TRACKING_CANNOT_PURGE = 3804;\r\nexports.ER_RPL_ENCRYPTION_CANNOT_ROTATE_BINLOG_MASTER_KEY = 3805;\r\nexports.ER_BINLOG_MASTER_KEY_RECOVERY_OUT_OF_COMBINATION = 3806;\r\nexports.ER_BINLOG_MASTER_KEY_ROTATION_FAIL_TO_OPERATE_KEY = 3807;\r\nexports.ER_BINLOG_MASTER_KEY_ROTATION_FAIL_TO_ROTATE_LOGS = 3808;\r\nexports.ER_BINLOG_MASTER_KEY_ROTATION_FAIL_TO_REENCRYPT_LOG = 3809;\r\nexports.ER_BINLOG_MASTER_KEY_ROTATION_FAIL_TO_CLEANUP_UNUSED_KEYS = 3810;\r\nexports.ER_BINLOG_MASTER_KEY_ROTATION_FAIL_TO_CLEANUP_AUX_KEY = 3811;\r\nexports.ER_NON_BOOLEAN_EXPR_FOR_CHECK_CONSTRAINT = 3812;\r\nexports.ER_COLUMN_CHECK_CONSTRAINT_REFERENCES_OTHER_COLUMN = 3813;\r\nexports.ER_CHECK_CONSTRAINT_NAMED_FUNCTION_IS_NOT_ALLOWED = 3814;\r\nexports.ER_CHECK_CONSTRAINT_FUNCTION_IS_NOT_ALLOWED = 3815;\r\nexports.ER_CHECK_CONSTRAINT_VARIABLES = 3816;\r\nexports.ER_CHECK_CONSTRAINT_ROW_VALUE = 3817;\r\nexports.ER_CHECK_CONSTRAINT_REFERS_AUTO_INCREMENT_COLUMN = 3818;\r\nexports.ER_CHECK_CONSTRAINT_VIOLATED = 3819;\r\nexports.ER_CHECK_CONSTRAINT_REFERS_UNKNOWN_COLUMN = 3820;\r\nexports.ER_CHECK_CONSTRAINT_NOT_FOUND = 3821;\r\nexports.ER_CHECK_CONSTRAINT_DUP_NAME = 3822;\r\nexports.ER_CHECK_CONSTRAINT_CLAUSE_USING_FK_REFER_ACTION_COLUMN = 3823;\r\nexports.WARN_UNENCRYPTED_TABLE_IN_ENCRYPTED_DB = 3824;\r\nexports.ER_INVALID_ENCRYPTION_REQUEST = 3825;\r\nexports.ER_CANNOT_SET_TABLE_ENCRYPTION = 3826;\r\nexports.ER_CANNOT_SET_DATABASE_ENCRYPTION = 3827;\r\nexports.ER_CANNOT_SET_TABLESPACE_ENCRYPTION = 3828;\r\nexports.ER_TABLESPACE_CANNOT_BE_ENCRYPTED = 3829;\r\nexports.ER_TABLESPACE_CANNOT_BE_DECRYPTED = 3830;\r\nexports.ER_TABLESPACE_TYPE_UNKNOWN = 3831;\r\nexports.ER_TARGET_TABLESPACE_UNENCRYPTED = 3832;\r\nexports.ER_CANNOT_USE_ENCRYPTION_CLAUSE = 3833;\r\nexports.ER_INVALID_MULTIPLE_CLAUSES = 3834;\r\nexports.ER_UNSUPPORTED_USE_OF_GRANT_AS = 3835;\r\nexports.ER_UKNOWN_AUTH_ID_OR_ACCESS_DENIED_FOR_GRANT_AS = 3836;\r\nexports.ER_DEPENDENT_BY_FUNCTIONAL_INDEX = 3837;\r\nexports.ER_PLUGIN_NOT_EARLY = 3838;\r\nexports.ER_INNODB_REDO_LOG_ARCHIVE_START_SUBDIR_PATH = 3839;\r\nexports.ER_INNODB_REDO_LOG_ARCHIVE_START_TIMEOUT = 3840;\r\nexports.ER_INNODB_REDO_LOG_ARCHIVE_DIRS_INVALID = 3841;\r\nexports.ER_INNODB_REDO_LOG_ARCHIVE_LABEL_NOT_FOUND = 3842;\r\nexports.ER_INNODB_REDO_LOG_ARCHIVE_DIR_EMPTY = 3843;\r\nexports.ER_INNODB_REDO_LOG_ARCHIVE_NO_SUCH_DIR = 3844;\r\nexports.ER_INNODB_REDO_LOG_ARCHIVE_DIR_CLASH = 3845;\r\nexports.ER_INNODB_REDO_LOG_ARCHIVE_DIR_PERMISSIONS = 3846;\r\nexports.ER_INNODB_REDO_LOG_ARCHIVE_FILE_CREATE = 3847;\r\nexports.ER_INNODB_REDO_LOG_ARCHIVE_ACTIVE = 3848;\r\nexports.ER_INNODB_REDO_LOG_ARCHIVE_INACTIVE = 3849;\r\nexports.ER_INNODB_REDO_LOG_ARCHIVE_FAILED = 3850;\r\nexports.ER_INNODB_REDO_LOG_ARCHIVE_SESSION = 3851;\r\nexports.ER_STD_REGEX_ERROR = 3852;\r\nexports.ER_INVALID_JSON_TYPE = 3853;\r\nexports.ER_CANNOT_CONVERT_STRING = 3854;\r\nexports.ER_DEPENDENT_BY_PARTITION_FUNC = 3855;\r\nexports.ER_WARN_DEPRECATED_FLOAT_AUTO_INCREMENT = 3856;\r\nexports.ER_RPL_CANT_STOP_REPLICA_WHILE_LOCKED_BACKUP = 3857;\r\nexports.ER_WARN_DEPRECATED_FLOAT_DIGITS = 3858;\r\nexports.ER_WARN_DEPRECATED_FLOAT_UNSIGNED = 3859;\r\nexports.ER_WARN_DEPRECATED_INTEGER_DISPLAY_WIDTH = 3860;\r\nexports.ER_WARN_DEPRECATED_ZEROFILL = 3861;\r\nexports.ER_CLONE_DONOR = 3862;\r\nexports.ER_CLONE_PROTOCOL = 3863;\r\nexports.ER_CLONE_DONOR_VERSION = 3864;\r\nexports.ER_CLONE_OS = 3865;\r\nexports.ER_CLONE_PLATFORM = 3866;\r\nexports.ER_CLONE_CHARSET = 3867;\r\nexports.ER_CLONE_CONFIG = 3868;\r\nexports.ER_CLONE_SYS_CONFIG = 3869;\r\nexports.ER_CLONE_PLUGIN_MATCH = 3870;\r\nexports.ER_CLONE_LOOPBACK = 3871;\r\nexports.ER_CLONE_ENCRYPTION = 3872;\r\nexports.ER_CLONE_DISK_SPACE = 3873;\r\nexports.ER_CLONE_IN_PROGRESS = 3874;\r\nexports.ER_CLONE_DISALLOWED = 3875;\r\nexports.ER_CANNOT_GRANT_ROLES_TO_ANONYMOUS_USER = 3876;\r\nexports.ER_SECONDARY_ENGINE_PLUGIN = 3877;\r\nexports.ER_SECOND_PASSWORD_CANNOT_BE_EMPTY = 3878;\r\nexports.ER_DB_ACCESS_DENIED = 3879;\r\nexports.ER_DA_AUTH_ID_WITH_SYSTEM_USER_PRIV_IN_MANDATORY_ROLES = 3880;\r\nexports.ER_DA_RPL_GTID_TABLE_CANNOT_OPEN = 3881;\r\nexports.ER_GEOMETRY_IN_UNKNOWN_LENGTH_UNIT = 3882;\r\nexports.ER_DA_PLUGIN_INSTALL_ERROR = 3883;\r\nexports.ER_NO_SESSION_TEMP = 3884;\r\nexports.ER_DA_UNKNOWN_ERROR_NUMBER = 3885;\r\nexports.ER_COLUMN_CHANGE_SIZE = 3886;\r\nexports.ER_REGEXP_INVALID_CAPTURE_GROUP_NAME = 3887;\r\nexports.ER_DA_SSL_LIBRARY_ERROR = 3888;\r\nexports.ER_SECONDARY_ENGINE = 3889;\r\nexports.ER_SECONDARY_ENGINE_DDL = 3890;\r\nexports.ER_INCORRECT_CURRENT_PASSWORD = 3891;\r\nexports.ER_MISSING_CURRENT_PASSWORD = 3892;\r\nexports.ER_CURRENT_PASSWORD_NOT_REQUIRED = 3893;\r\nexports.ER_PASSWORD_CANNOT_BE_RETAINED_ON_PLUGIN_CHANGE = 3894;\r\nexports.ER_CURRENT_PASSWORD_CANNOT_BE_RETAINED = 3895;\r\nexports.ER_PARTIAL_REVOKES_EXIST = 3896;\r\nexports.ER_CANNOT_GRANT_SYSTEM_PRIV_TO_MANDATORY_ROLE = 3897;\r\nexports.ER_XA_REPLICATION_FILTERS = 3898;\r\nexports.ER_UNSUPPORTED_SQL_MODE = 3899;\r\nexports.ER_REGEXP_INVALID_FLAG = 3900;\r\nexports.ER_PARTIAL_REVOKE_AND_DB_GRANT_BOTH_EXISTS = 3901;\r\nexports.ER_UNIT_NOT_FOUND = 3902;\r\nexports.ER_INVALID_JSON_VALUE_FOR_FUNC_INDEX = 3903;\r\nexports.ER_JSON_VALUE_OUT_OF_RANGE_FOR_FUNC_INDEX = 3904;\r\nexports.ER_EXCEEDED_MV_KEYS_NUM = 3905;\r\nexports.ER_EXCEEDED_MV_KEYS_SPACE = 3906;\r\nexports.ER_FUNCTIONAL_INDEX_DATA_IS_TOO_LONG = 3907;\r\nexports.ER_WRONG_MVI_VALUE = 3908;\r\nexports.ER_WARN_FUNC_INDEX_NOT_APPLICABLE = 3909;\r\nexports.ER_GRP_RPL_UDF_ERROR = 3910;\r\nexports.ER_UPDATE_GTID_PURGED_WITH_GR = 3911;\r\nexports.ER_GROUPING_ON_TIMESTAMP_IN_DST = 3912;\r\nexports.ER_TABLE_NAME_CAUSES_TOO_LONG_PATH = 3913;\r\nexports.ER_AUDIT_LOG_INSUFFICIENT_PRIVILEGE = 3914;\r\nexports.ER_AUDIT_LOG_PASSWORD_HAS_BEEN_COPIED = 3915;\r\nexports.ER_DA_GRP_RPL_STARTED_AUTO_REJOIN = 3916;\r\nexports.ER_SYSVAR_CHANGE_DURING_QUERY = 3917;\r\nexports.ER_GLOBSTAT_CHANGE_DURING_QUERY = 3918;\r\nexports.ER_GRP_RPL_MESSAGE_SERVICE_INIT_FAILURE = 3919;\r\nexports.ER_CHANGE_SOURCE_WRONG_COMPRESSION_ALGORITHM_CLIENT = 3920;\r\nexports.ER_CHANGE_SOURCE_WRONG_COMPRESSION_LEVEL_CLIENT = 3921;\r\nexports.ER_WRONG_COMPRESSION_ALGORITHM_CLIENT = 3922;\r\nexports.ER_WRONG_COMPRESSION_LEVEL_CLIENT = 3923;\r\nexports.ER_CHANGE_SOURCE_WRONG_COMPRESSION_ALGORITHM_LIST_CLIENT = 3924;\r\nexports.ER_CLIENT_PRIVILEGE_CHECKS_USER_CANNOT_BE_ANONYMOUS = 3925;\r\nexports.ER_CLIENT_PRIVILEGE_CHECKS_USER_DOES_NOT_EXIST = 3926;\r\nexports.ER_CLIENT_PRIVILEGE_CHECKS_USER_CORRUPT = 3927;\r\nexports.ER_CLIENT_PRIVILEGE_CHECKS_USER_NEEDS_RPL_APPLIER_PRIV = 3928;\r\nexports.ER_WARN_DA_PRIVILEGE_NOT_REGISTERED = 3929;\r\nexports.ER_CLIENT_KEYRING_UDF_KEY_INVALID = 3930;\r\nexports.ER_CLIENT_KEYRING_UDF_KEY_TYPE_INVALID = 3931;\r\nexports.ER_CLIENT_KEYRING_UDF_KEY_TOO_LONG = 3932;\r\nexports.ER_CLIENT_KEYRING_UDF_KEY_TYPE_TOO_LONG = 3933;\r\nexports.ER_JSON_SCHEMA_VALIDATION_ERROR_WITH_DETAILED_REPORT = 3934;\r\nexports.ER_DA_UDF_INVALID_CHARSET_SPECIFIED = 3935;\r\nexports.ER_DA_UDF_INVALID_CHARSET = 3936;\r\nexports.ER_DA_UDF_INVALID_COLLATION = 3937;\r\nexports.ER_DA_UDF_INVALID_EXTENSION_ARGUMENT_TYPE = 3938;\r\nexports.ER_MULTIPLE_CONSTRAINTS_WITH_SAME_NAME = 3939;\r\nexports.ER_CONSTRAINT_NOT_FOUND = 3940;\r\nexports.ER_ALTER_CONSTRAINT_ENFORCEMENT_NOT_SUPPORTED = 3941;\r\nexports.ER_TABLE_VALUE_CONSTRUCTOR_MUST_HAVE_COLUMNS = 3942;\r\nexports.ER_TABLE_VALUE_CONSTRUCTOR_CANNOT_HAVE_DEFAULT = 3943;\r\nexports.ER_CLIENT_QUERY_FAILURE_INVALID_NON_ROW_FORMAT = 3944;\r\nexports.ER_REQUIRE_ROW_FORMAT_INVALID_VALUE = 3945;\r\nexports.ER_FAILED_TO_DETERMINE_IF_ROLE_IS_MANDATORY = 3946;\r\nexports.ER_FAILED_TO_FETCH_MANDATORY_ROLE_LIST = 3947;\r\nexports.ER_CLIENT_LOCAL_FILES_DISABLED = 3948;\r\nexports.ER_IMP_INCOMPATIBLE_CFG_VERSION = 3949;\r\nexports.ER_DA_OOM = 3950;\r\nexports.ER_DA_UDF_INVALID_ARGUMENT_TO_SET_CHARSET = 3951;\r\nexports.ER_DA_UDF_INVALID_RETURN_TYPE_TO_SET_CHARSET = 3952;\r\nexports.ER_MULTIPLE_INTO_CLAUSES = 3953;\r\nexports.ER_MISPLACED_INTO = 3954;\r\nexports.ER_USER_ACCESS_DENIED_FOR_USER_ACCOUNT_BLOCKED_BY_PASSWORD_LOCK = 3955;\r\nexports.ER_WARN_DEPRECATED_YEAR_UNSIGNED = 3956;\r\nexports.ER_CLONE_NETWORK_PACKET = 3957;\r\nexports.ER_SDI_OPERATION_FAILED_MISSING_RECORD = 3958;\r\nexports.ER_DEPENDENT_BY_CHECK_CONSTRAINT = 3959;\r\nexports.ER_GRP_OPERATION_NOT_ALLOWED_GR_MUST_STOP = 3960;\r\nexports.ER_WARN_DEPRECATED_JSON_TABLE_ON_ERROR_ON_EMPTY = 3961;\r\nexports.ER_WARN_DEPRECATED_INNER_INTO = 3962;\r\nexports.ER_WARN_DEPRECATED_VALUES_FUNCTION_ALWAYS_NULL = 3963;\r\nexports.ER_WARN_DEPRECATED_SQL_CALC_FOUND_ROWS = 3964;\r\nexports.ER_WARN_DEPRECATED_FOUND_ROWS = 3965;\r\nexports.ER_MISSING_JSON_VALUE = 3966;\r\nexports.ER_MULTIPLE_JSON_VALUES = 3967;\r\nexports.ER_HOSTNAME_TOO_LONG = 3968;\r\nexports.ER_WARN_CLIENT_DEPRECATED_PARTITION_PREFIX_KEY = 3969;\r\nexports.ER_GROUP_REPLICATION_USER_EMPTY_MSG = 3970;\r\nexports.ER_GROUP_REPLICATION_USER_MANDATORY_MSG = 3971;\r\nexports.ER_GROUP_REPLICATION_PASSWORD_LENGTH = 3972;\r\nexports.ER_SUBQUERY_TRANSFORM_REJECTED = 3973;\r\nexports.ER_DA_GRP_RPL_RECOVERY_ENDPOINT_FORMAT = 3974;\r\nexports.ER_DA_GRP_RPL_RECOVERY_ENDPOINT_INVALID = 3975;\r\nexports.ER_WRONG_VALUE_FOR_VAR_PLUS_ACTIONABLE_PART = 3976;\r\nexports.ER_STATEMENT_NOT_ALLOWED_AFTER_START_TRANSACTION = 3977;\r\nexports.ER_FOREIGN_KEY_WITH_ATOMIC_CREATE_SELECT = 3978;\r\nexports.ER_NOT_ALLOWED_WITH_START_TRANSACTION = 3979;\r\nexports.ER_INVALID_JSON_ATTRIBUTE = 3980;\r\nexports.ER_ENGINE_ATTRIBUTE_NOT_SUPPORTED = 3981;\r\nexports.ER_INVALID_USER_ATTRIBUTE_JSON = 3982;\r\nexports.ER_INNODB_REDO_DISABLED = 3983;\r\nexports.ER_INNODB_REDO_ARCHIVING_ENABLED = 3984;\r\nexports.ER_MDL_OUT_OF_RESOURCES = 3985;\r\nexports.ER_IMPLICIT_COMPARISON_FOR_JSON = 3986;\r\nexports.ER_FUNCTION_DOES_NOT_SUPPORT_CHARACTER_SET = 3987;\r\nexports.ER_IMPOSSIBLE_STRING_CONVERSION = 3988;\r\nexports.ER_SCHEMA_READ_ONLY = 3989;\r\nexports.ER_RPL_ASYNC_RECONNECT_GTID_MODE_OFF = 3990;\r\nexports.ER_RPL_ASYNC_RECONNECT_AUTO_POSITION_OFF = 3991;\r\nexports.ER_DISABLE_GTID_MODE_REQUIRES_ASYNC_RECONNECT_OFF = 3992;\r\nexports.ER_DISABLE_AUTO_POSITION_REQUIRES_ASYNC_RECONNECT_OFF = 3993;\r\nexports.ER_INVALID_PARAMETER_USE = 3994;\r\nexports.ER_CHARACTER_SET_MISMATCH = 3995;\r\nexports.ER_WARN_VAR_VALUE_CHANGE_NOT_SUPPORTED = 3996;\r\nexports.ER_INVALID_TIME_ZONE_INTERVAL = 3997;\r\nexports.ER_INVALID_CAST = 3998;\r\nexports.ER_HYPERGRAPH_NOT_SUPPORTED_YET = 3999;\r\nexports.ER_WARN_HYPERGRAPH_EXPERIMENTAL = 4000;\r\nexports.ER_DA_NO_ERROR_LOG_PARSER_CONFIGURED = 4001;\r\nexports.ER_DA_ERROR_LOG_TABLE_DISABLED = 4002;\r\nexports.ER_DA_ERROR_LOG_MULTIPLE_FILTERS = 4003;\r\nexports.ER_DA_CANT_OPEN_ERROR_LOG = 4004;\r\nexports.ER_USER_REFERENCED_AS_DEFINER = 4005;\r\nexports.ER_CANNOT_USER_REFERENCED_AS_DEFINER = 4006;\r\nexports.ER_REGEX_NUMBER_TOO_BIG = 4007;\r\nexports.ER_SPVAR_NONINTEGER_TYPE = 4008;\r\nexports.WARN_UNSUPPORTED_ACL_TABLES_READ = 4009;\r\nexports.ER_BINLOG_UNSAFE_ACL_TABLE_READ_IN_DML_DDL = 4010;\r\nexports.ER_STOP_REPLICA_MONITOR_IO_THREAD_TIMEOUT = 4011;\r\nexports.ER_STARTING_REPLICA_MONITOR_IO_THREAD = 4012;\r\nexports.ER_CANT_USE_ANONYMOUS_TO_GTID_WITH_GTID_MODE_NOT_ON = 4013;\r\nexports.ER_CANT_COMBINE_ANONYMOUS_TO_GTID_AND_AUTOPOSITION = 4014;\r\nexports.ER_ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_REQUIRES_GTID_MODE_ON = 4015;\r\nexports.ER_SQL_REPLICA_SKIP_COUNTER_USED_WITH_GTID_MODE_ON = 4016;\r\nexports.ER_USING_ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_AS_LOCAL_OR_UUID = 4017;\r\nexports.ER_CANT_SET_ANONYMOUS_TO_GTID_AND_WAIT_UNTIL_SQL_THD_AFTER_GTIDS = 4018;\r\nexports.ER_CANT_SET_SQL_AFTER_OR_BEFORE_GTIDS_WITH_ANONYMOUS_TO_GTID = 4019;\r\nexports.ER_ANONYMOUS_TO_GTID_UUID_SAME_AS_GROUP_NAME = 4020;\r\nexports.ER_CANT_USE_SAME_UUID_AS_GROUP_NAME = 4021;\r\nexports.ER_GRP_RPL_RECOVERY_CHANNEL_STILL_RUNNING = 4022;\r\nexports.ER_INNODB_INVALID_AUTOEXTEND_SIZE_VALUE = 4023;\r\nexports.ER_INNODB_INCOMPATIBLE_WITH_TABLESPACE = 4024;\r\nexports.ER_INNODB_AUTOEXTEND_SIZE_OUT_OF_RANGE = 4025;\r\nexports.ER_CANNOT_USE_AUTOEXTEND_SIZE_CLAUSE = 4026;\r\nexports.ER_ROLE_GRANTED_TO_ITSELF = 4027;\r\nexports.ER_TABLE_MUST_HAVE_A_VISIBLE_COLUMN = 4028;\r\nexports.ER_INNODB_COMPRESSION_FAILURE = 4029;\r\nexports.ER_WARN_ASYNC_CONN_FAILOVER_NETWORK_NAMESPACE = 4030;\r\nexports.ER_CLIENT_INTERACTION_TIMEOUT = 4031;\r\nexports.ER_INVALID_CAST_TO_GEOMETRY = 4032;\r\nexports.ER_INVALID_CAST_POLYGON_RING_DIRECTION = 4033;\r\nexports.ER_GIS_DIFFERENT_SRIDS_AGGREGATION = 4034;\r\nexports.ER_RELOAD_KEYRING_FAILURE = 4035;\r\nexports.ER_SDI_GET_KEYS_INVALID_TABLESPACE = 4036;\r\nexports.ER_CHANGE_RPL_SRC_WRONG_COMPRESSION_ALGORITHM_SIZE = 4037;\r\nexports.ER_WARN_DEPRECATED_TLS_VERSION_FOR_CHANNEL_CLI = 4038;\r\nexports.ER_CANT_USE_SAME_UUID_AS_VIEW_CHANGE_UUID = 4039;\r\nexports.ER_ANONYMOUS_TO_GTID_UUID_SAME_AS_VIEW_CHANGE_UUID = 4040;\r\nexports.ER_GRP_RPL_VIEW_CHANGE_UUID_FAIL_GET_VARIABLE = 4041;\r\nexports.ER_WARN_ADUIT_LOG_MAX_SIZE_AND_PRUNE_SECONDS = 4042;\r\nexports.ER_WARN_ADUIT_LOG_MAX_SIZE_CLOSE_TO_ROTATE_ON_SIZE = 4043;\r\nexports.ER_KERBEROS_CREATE_USER = 4044;\r\nexports.ER_INSTALL_PLUGIN_CONFLICT_CLIENT = 4045;\r\nexports.ER_DA_ERROR_LOG_COMPONENT_FLUSH_FAILED = 4046;\r\nexports.ER_WARN_SQL_AFTER_MTS_GAPS_GAP_NOT_CALCULATED = 4047;\r\nexports.ER_INVALID_ASSIGNMENT_TARGET = 4048;\r\nexports.ER_OPERATION_NOT_ALLOWED_ON_GR_SECONDARY = 4049;\r\nexports.ER_GRP_RPL_FAILOVER_CHANNEL_STATUS_PROPAGATION = 4050;\r\nexports.ER_WARN_AUDIT_LOG_FORMAT_UNIX_TIMESTAMP_ONLY_WHEN_JSON = 4051;\r\nexports.ER_INVALID_MFA_PLUGIN_SPECIFIED = 4052;\r\nexports.ER_IDENTIFIED_BY_UNSUPPORTED = 4053;\r\nexports.ER_INVALID_PLUGIN_FOR_REGISTRATION = 4054;\r\nexports.ER_PLUGIN_REQUIRES_REGISTRATION = 4055;\r\nexports.ER_MFA_METHOD_EXISTS = 4056;\r\nexports.ER_MFA_METHOD_NOT_EXISTS = 4057;\r\nexports.ER_AUTHENTICATION_POLICY_MISMATCH = 4058;\r\nexports.ER_PLUGIN_REGISTRATION_DONE = 4059;\r\nexports.ER_INVALID_USER_FOR_REGISTRATION = 4060;\r\nexports.ER_USER_REGISTRATION_FAILED = 4061;\r\nexports.ER_MFA_METHODS_INVALID_ORDER = 4062;\r\nexports.ER_MFA_METHODS_IDENTICAL = 4063;\r\nexports.ER_INVALID_MFA_OPERATIONS_FOR_PASSWORDLESS_USER = 4064;\r\nexports.ER_CHANGE_REPLICATION_SOURCE_NO_OPTIONS_FOR_GTID_ONLY = 4065;\r\nexports.ER_CHANGE_REP_SOURCE_CANT_DISABLE_REQ_ROW_FORMAT_WITH_GTID_ONLY = 4066;\r\nexports.ER_CHANGE_REP_SOURCE_CANT_DISABLE_AUTO_POSITION_WITH_GTID_ONLY = 4067;\r\nexports.ER_CHANGE_REP_SOURCE_CANT_DISABLE_GTID_ONLY_WITHOUT_POSITIONS = 4068;\r\nexports.ER_CHANGE_REP_SOURCE_CANT_DISABLE_AUTO_POS_WITHOUT_POSITIONS = 4069;\r\nexports.ER_CHANGE_REP_SOURCE_GR_CHANNEL_WITH_GTID_MODE_NOT_ON = 4070;\r\nexports.ER_CANT_USE_GTID_ONLY_WITH_GTID_MODE_NOT_ON = 4071;\r\nexports.ER_WARN_C_DISABLE_GTID_ONLY_WITH_SOURCE_AUTO_POS_INVALID_POS = 4072;\r\nexports.ER_DA_SSL_FIPS_MODE_ERROR = 4073;\r\nexports.ER_VALUE_OUT_OF_RANGE = 4074;\r\nexports.ER_FULLTEXT_WITH_ROLLUP = 4075;\r\nexports.ER_REGEXP_MISSING_RESOURCE = 4076;\r\nexports.ER_WARN_REGEXP_USING_DEFAULT = 4077;\r\nexports.ER_REGEXP_MISSING_FILE = 4078;\r\nexports.ER_WARN_DEPRECATED_COLLATION = 4079;\r\nexports.ER_CONCURRENT_PROCEDURE_USAGE = 4080;\r\nexports.ER_DA_GLOBAL_CONN_LIMIT = 4081;\r\nexports.ER_DA_CONN_LIMIT = 4082;\r\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_COLUMN_TYPE_INSTANT = 4083;\r\nexports.ER_WARN_SF_UDF_NAME_COLLISION = 4084;\r\nexports.ER_CANNOT_PURGE_BINLOG_WITH_BACKUP_LOCK = 4085;\r\nexports.ER_TOO_MANY_WINDOWS = 4086;\r\nexports.ER_MYSQLBACKUP_CLIENT_MSG = 4087;\r\nexports.ER_COMMENT_CONTAINS_INVALID_STRING = 4088;\r\nexports.ER_DEFINITION_CONTAINS_INVALID_STRING = 4089;\r\nexports.ER_CANT_EXECUTE_COMMAND_WITH_ASSIGNED_GTID_NEXT = 4090;\r\nexports.ER_XA_TEMP_TABLE = 4091;\r\nexports.ER_INNODB_MAX_ROW_VERSION = 4092;\r\nexports.ER_INNODB_INSTANT_ADD_NOT_SUPPORTED_MAX_SIZE = 4093;\r\nexports.ER_OPERATION_NOT_ALLOWED_WHILE_PRIMARY_CHANGE_IS_RUNNING = 4094;\r\nexports.ER_WARN_DEPRECATED_DATETIME_DELIMITER = 4095;\r\nexports.ER_WARN_DEPRECATED_SUPERFLUOUS_DELIMITER = 4096;\r\nexports.ER_CANNOT_PERSIST_SENSITIVE_VARIABLES = 4097;\r\nexports.ER_WARN_CANNOT_SECURELY_PERSIST_SENSITIVE_VARIABLES = 4098;\r\nexports.ER_WARN_TRG_ALREADY_EXISTS = 4099;\r\nexports.ER_IF_NOT_EXISTS_UNSUPPORTED_TRG_EXISTS_ON_DIFFERENT_TABLE = 4100;\r\nexports.ER_IF_NOT_EXISTS_UNSUPPORTED_UDF_NATIVE_FCT_NAME_COLLISION = 4101;\r\nexports.ER_SET_PASSWORD_AUTH_PLUGIN_ERROR = 4102;\r\nexports.ER_REDUCED_DBLWR_FILE_CORRUPTED = 4103;\r\nexports.ER_REDUCED_DBLWR_PAGE_FOUND = 4104;\r\nexports.ER_SRS_INVALID_LATITUDE_OF_ORIGIN = 4105;\r\nexports.ER_SRS_INVALID_LONGITUDE_OF_ORIGIN = 4106;\r\nexports.ER_SRS_UNUSED_PROJ_PARAMETER_PRESENT = 4107;\r\nexports.ER_GIPK_COLUMN_EXISTS = 4108;\r\nexports.ER_GIPK_FAILED_AUTOINC_COLUMN_EXISTS = 4109;\r\nexports.ER_GIPK_COLUMN_ALTER_NOT_ALLOWED = 4110;\r\nexports.ER_DROP_PK_COLUMN_TO_DROP_GIPK = 4111;\r\nexports.ER_CREATE_SELECT_WITH_GIPK_DISALLOWED_IN_SBR = 4112;\r\nexports.ER_DA_EXPIRE_LOGS_DAYS_IGNORED = 4113;\r\nexports.ER_CTE_RECURSIVE_NOT_UNION = 4114;\r\nexports.ER_COMMAND_BACKEND_FAILED_TO_FETCH_SECURITY_CTX = 4115;\r\nexports.ER_COMMAND_SERVICE_BACKEND_FAILED = 4116;\r\nexports.ER_CLIENT_FILE_PRIVILEGE_FOR_REPLICATION_CHECKS = 4117;\r\nexports.ER_GROUP_REPLICATION_FORCE_MEMBERS_COMMAND_FAILURE = 4118;\r\nexports.ER_WARN_DEPRECATED_IDENT = 4119;\r\nexports.ER_INTERSECT_ALL_MAX_DUPLICATES_EXCEEDED = 4120;\r\nexports.ER_TP_QUERY_THRS_PER_GRP_EXCEEDS_TXN_THR_LIMIT = 4121;\r\nexports.ER_BAD_TIMESTAMP_FORMAT = 4122;\r\nexports.ER_SHAPE_PRIDICTION_UDF = 4123;\r\nexports.ER_SRS_INVALID_HEIGHT = 4124;\r\nexports.ER_SRS_INVALID_SCALING = 4125;\r\nexports.ER_SRS_INVALID_ZONE_WIDTH = 4126;\r\nexports.ER_SRS_INVALID_LATITUDE_POLAR_STERE_VAR_A = 4127;\r\nexports.ER_WARN_DEPRECATED_CLIENT_NO_SCHEMA_OPTION = 4128;\r\nexports.ER_TABLE_NOT_EMPTY = 4129;\r\nexports.ER_TABLE_NO_PRIMARY_KEY = 4130;\r\nexports.ER_TABLE_IN_SHARED_TABLESPACE = 4131;\r\nexports.ER_INDEX_OTHER_THAN_PK = 4132;\r\nexports.ER_LOAD_BULK_DATA_UNSORTED = 4133;\r\nexports.ER_BULK_EXECUTOR_ERROR = 4134;\r\nexports.ER_BULK_READER_LIBCURL_INIT_FAILED = 4135;\r\nexports.ER_BULK_READER_LIBCURL_ERROR = 4136;\r\nexports.ER_BULK_READER_SERVER_ERROR = 4137;\r\nexports.ER_BULK_READER_COMMUNICATION_ERROR = 4138;\r\nexports.ER_BULK_LOAD_DATA_FAILED = 4139;\r\nexports.ER_BULK_LOADER_COLUMN_TOO_BIG_FOR_LEFTOVER_BUFFER = 4140;\r\nexports.ER_BULK_LOADER_COMPONENT_ERROR = 4141;\r\nexports.ER_BULK_LOADER_FILE_CONTAINS_LESS_LINES_THAN_IGNORE_CLAUSE = 4142;\r\nexports.ER_BULK_PARSER_MISSING_ENCLOSED_BY = 4143;\r\nexports.ER_BULK_PARSER_ROW_BUFFER_MAX_TOTAL_COLS_EXCEEDED = 4144;\r\nexports.ER_BULK_PARSER_COPY_BUFFER_SIZE_EXCEEDED = 4145;\r\nexports.ER_BULK_PARSER_UNEXPECTED_END_OF_INPUT = 4146;\r\nexports.ER_BULK_PARSER_UNEXPECTED_ROW_TERMINATOR = 4147;\r\nexports.ER_BULK_PARSER_UNEXPECTED_CHAR_AFTER_ENDING_ENCLOSED_BY = 4148;\r\nexports.ER_BULK_PARSER_UNEXPECTED_CHAR_AFTER_NULL_ESCAPE = 4149;\r\nexports.ER_BULK_PARSER_UNEXPECTED_CHAR_AFTER_COLUMN_TERMINATOR = 4150;\r\nexports.ER_BULK_PARSER_INCOMPLETE_ESCAPE_SEQUENCE = 4151;\r\nexports.ER_LOAD_BULK_DATA_FAILED = 4152;\r\nexports.ER_LOAD_BULK_DATA_WRONG_VALUE_FOR_FIELD = 4153;\r\nexports.ER_LOAD_BULK_DATA_WARN_NULL_TO_NOTNULL = 4154;\r\nexports.ER_REQUIRE_TABLE_PRIMARY_KEY_CHECK_GENERATE_WITH_GR = 4155;\r\nexports.ER_CANT_CHANGE_SYS_VAR_IN_READ_ONLY_MODE = 4156;\r\nexports.ER_INNODB_INSTANT_ADD_DROP_NOT_SUPPORTED_MAX_SIZE = 4157;\r\nexports.ER_INNODB_INSTANT_ADD_NOT_SUPPORTED_MAX_FIELDS = 4158;\r\nexports.ER_CANT_SET_PERSISTED = 4159;\r\nexports.ER_INSTALL_COMPONENT_SET_NULL_VALUE = 4160;\r\nexports.ER_INSTALL_COMPONENT_SET_UNUSED_VALUE = 4161;\r\nexports.ER_WARN_DEPRECATED_USER_DEFINED_COLLATIONS = 4162;\r\n\r\n// Lookup-by-number table\r\nexports[1] = 'EE_CANTCREATEFILE';\r\nexports[2] = 'EE_READ';\r\nexports[3] = 'EE_WRITE';\r\nexports[4] = 'EE_BADCLOSE';\r\nexports[5] = 'EE_OUTOFMEMORY';\r\nexports[6] = 'EE_DELETE';\r\nexports[7] = 'EE_LINK';\r\nexports[9] = 'EE_EOFERR';\r\nexports[10] = 'EE_CANTLOCK';\r\nexports[11] = 'EE_CANTUNLOCK';\r\nexports[12] = 'EE_DIR';\r\nexports[13] = 'EE_STAT';\r\nexports[14] = 'EE_CANT_CHSIZE';\r\nexports[15] = 'EE_CANT_OPEN_STREAM';\r\nexports[16] = 'EE_GETWD';\r\nexports[17] = 'EE_SETWD';\r\nexports[18] = 'EE_LINK_WARNING';\r\nexports[19] = 'EE_OPEN_WARNING';\r\nexports[20] = 'EE_DISK_FULL';\r\nexports[21] = 'EE_CANT_MKDIR';\r\nexports[22] = 'EE_UNKNOWN_CHARSET';\r\nexports[23] = 'EE_OUT_OF_FILERESOURCES';\r\nexports[24] = 'EE_CANT_READLINK';\r\nexports[25] = 'EE_CANT_SYMLINK';\r\nexports[26] = 'EE_REALPATH';\r\nexports[27] = 'EE_SYNC';\r\nexports[28] = 'EE_UNKNOWN_COLLATION';\r\nexports[29] = 'EE_FILENOTFOUND';\r\nexports[30] = 'EE_FILE_NOT_CLOSED';\r\nexports[31] = 'EE_CHANGE_OWNERSHIP';\r\nexports[32] = 'EE_CHANGE_PERMISSIONS';\r\nexports[33] = 'EE_CANT_SEEK';\r\nexports[34] = 'EE_CAPACITY_EXCEEDED';\r\nexports[35] = 'EE_DISK_FULL_WITH_RETRY_MSG';\r\nexports[36] = 'EE_FAILED_TO_CREATE_TIMER';\r\nexports[37] = 'EE_FAILED_TO_DELETE_TIMER';\r\nexports[38] = 'EE_FAILED_TO_CREATE_TIMER_QUEUE';\r\nexports[39] = 'EE_FAILED_TO_START_TIMER_NOTIFY_THREAD';\r\nexports[40] = 'EE_FAILED_TO_CREATE_TIMER_NOTIFY_THREAD_INTERRUPT_EVENT';\r\nexports[41] = 'EE_EXITING_TIMER_NOTIFY_THREAD';\r\nexports[42] = 'EE_WIN_LIBRARY_LOAD_FAILED';\r\nexports[43] = 'EE_WIN_RUN_TIME_ERROR_CHECK';\r\nexports[44] = 'EE_FAILED_TO_DETERMINE_LARGE_PAGE_SIZE';\r\nexports[45] = 'EE_FAILED_TO_KILL_ALL_THREADS';\r\nexports[46] = 'EE_FAILED_TO_CREATE_IO_COMPLETION_PORT';\r\nexports[47] = 'EE_FAILED_TO_OPEN_DEFAULTS_FILE';\r\nexports[48] = 'EE_FAILED_TO_HANDLE_DEFAULTS_FILE';\r\nexports[49] = 'EE_WRONG_DIRECTIVE_IN_CONFIG_FILE';\r\nexports[50] = 'EE_SKIPPING_DIRECTIVE_DUE_TO_MAX_INCLUDE_RECURSION';\r\nexports[51] = 'EE_INCORRECT_GRP_DEFINITION_IN_CONFIG_FILE';\r\nexports[52] = 'EE_OPTION_WITHOUT_GRP_IN_CONFIG_FILE';\r\nexports[53] = 'EE_CONFIG_FILE_PERMISSION_ERROR';\r\nexports[54] = 'EE_IGNORE_WORLD_WRITABLE_CONFIG_FILE';\r\nexports[55] = 'EE_USING_DISABLED_OPTION';\r\nexports[56] = 'EE_USING_DISABLED_SHORT_OPTION';\r\nexports[57] = 'EE_USING_PASSWORD_ON_CLI_IS_INSECURE';\r\nexports[58] = 'EE_UNKNOWN_SUFFIX_FOR_VARIABLE';\r\nexports[59] = 'EE_SSL_ERROR_FROM_FILE';\r\nexports[60] = 'EE_SSL_ERROR';\r\nexports[61] = 'EE_NET_SEND_ERROR_IN_BOOTSTRAP';\r\nexports[62] = 'EE_PACKETS_OUT_OF_ORDER';\r\nexports[63] = 'EE_UNKNOWN_PROTOCOL_OPTION';\r\nexports[64] = 'EE_FAILED_TO_LOCATE_SERVER_PUBLIC_KEY';\r\nexports[65] = 'EE_PUBLIC_KEY_NOT_IN_PEM_FORMAT';\r\nexports[66] = 'EE_DEBUG_INFO';\r\nexports[67] = 'EE_UNKNOWN_VARIABLE';\r\nexports[68] = 'EE_UNKNOWN_OPTION';\r\nexports[69] = 'EE_UNKNOWN_SHORT_OPTION';\r\nexports[70] = 'EE_OPTION_WITHOUT_ARGUMENT';\r\nexports[71] = 'EE_OPTION_REQUIRES_ARGUMENT';\r\nexports[72] = 'EE_SHORT_OPTION_REQUIRES_ARGUMENT';\r\nexports[73] = 'EE_OPTION_IGNORED_DUE_TO_INVALID_VALUE';\r\nexports[74] = 'EE_OPTION_WITH_EMPTY_VALUE';\r\nexports[75] = 'EE_FAILED_TO_ASSIGN_MAX_VALUE_TO_OPTION';\r\nexports[76] = 'EE_INCORRECT_BOOLEAN_VALUE_FOR_OPTION';\r\nexports[77] = 'EE_FAILED_TO_SET_OPTION_VALUE';\r\nexports[78] = 'EE_INCORRECT_INT_VALUE_FOR_OPTION';\r\nexports[79] = 'EE_INCORRECT_UINT_VALUE_FOR_OPTION';\r\nexports[80] = 'EE_ADJUSTED_SIGNED_VALUE_FOR_OPTION';\r\nexports[81] = 'EE_ADJUSTED_UNSIGNED_VALUE_FOR_OPTION';\r\nexports[82] = 'EE_ADJUSTED_ULONGLONG_VALUE_FOR_OPTION';\r\nexports[83] = 'EE_ADJUSTED_DOUBLE_VALUE_FOR_OPTION';\r\nexports[84] = 'EE_INVALID_DECIMAL_VALUE_FOR_OPTION';\r\nexports[85] = 'EE_COLLATION_PARSER_ERROR';\r\nexports[86] = 'EE_FAILED_TO_RESET_BEFORE_PRIMARY_IGNORABLE_CHAR';\r\nexports[87] = 'EE_FAILED_TO_RESET_BEFORE_TERTIARY_IGNORABLE_CHAR';\r\nexports[88] = 'EE_SHIFT_CHAR_OUT_OF_RANGE';\r\nexports[89] = 'EE_RESET_CHAR_OUT_OF_RANGE';\r\nexports[90] = 'EE_UNKNOWN_LDML_TAG';\r\nexports[91] = 'EE_FAILED_TO_RESET_BEFORE_SECONDARY_IGNORABLE_CHAR';\r\nexports[92] = 'EE_FAILED_PROCESSING_DIRECTIVE';\r\nexports[93] = 'EE_PTHREAD_KILL_FAILED';\r\nexports[120] = 'HA_ERR_KEY_NOT_FOUND';\r\nexports[121] = 'HA_ERR_FOUND_DUPP_KEY';\r\nexports[122] = 'HA_ERR_INTERNAL_ERROR';\r\nexports[123] = 'HA_ERR_RECORD_CHANGED';\r\nexports[124] = 'HA_ERR_WRONG_INDEX';\r\nexports[125] = 'HA_ERR_ROLLED_BACK';\r\nexports[126] = 'HA_ERR_CRASHED';\r\nexports[127] = 'HA_ERR_WRONG_IN_RECORD';\r\nexports[128] = 'HA_ERR_OUT_OF_MEM';\r\nexports[130] = 'HA_ERR_NOT_A_TABLE';\r\nexports[131] = 'HA_ERR_WRONG_COMMAND';\r\nexports[132] = 'HA_ERR_OLD_FILE';\r\nexports[133] = 'HA_ERR_NO_ACTIVE_RECORD';\r\nexports[134] = 'HA_ERR_RECORD_DELETED';\r\nexports[135] = 'HA_ERR_RECORD_FILE_FULL';\r\nexports[136] = 'HA_ERR_INDEX_FILE_FULL';\r\nexports[137] = 'HA_ERR_END_OF_FILE';\r\nexports[138] = 'HA_ERR_UNSUPPORTED';\r\nexports[139] = 'HA_ERR_TOO_BIG_ROW';\r\nexports[140] = 'HA_WRONG_CREATE_OPTION';\r\nexports[141] = 'HA_ERR_FOUND_DUPP_UNIQUE';\r\nexports[142] = 'HA_ERR_UNKNOWN_CHARSET';\r\nexports[143] = 'HA_ERR_WRONG_MRG_TABLE_DEF';\r\nexports[144] = 'HA_ERR_CRASHED_ON_REPAIR';\r\nexports[145] = 'HA_ERR_CRASHED_ON_USAGE';\r\nexports[146] = 'HA_ERR_LOCK_WAIT_TIMEOUT';\r\nexports[147] = 'HA_ERR_LOCK_TABLE_FULL';\r\nexports[148] = 'HA_ERR_READ_ONLY_TRANSACTION';\r\nexports[149] = 'HA_ERR_LOCK_DEADLOCK';\r\nexports[150] = 'HA_ERR_CANNOT_ADD_FOREIGN';\r\nexports[151] = 'HA_ERR_NO_REFERENCED_ROW';\r\nexports[152] = 'HA_ERR_ROW_IS_REFERENCED';\r\nexports[153] = 'HA_ERR_NO_SAVEPOINT';\r\nexports[154] = 'HA_ERR_NON_UNIQUE_BLOCK_SIZE';\r\nexports[155] = 'HA_ERR_NO_SUCH_TABLE';\r\nexports[156] = 'HA_ERR_TABLE_EXIST';\r\nexports[157] = 'HA_ERR_NO_CONNECTION';\r\nexports[158] = 'HA_ERR_NULL_IN_SPATIAL';\r\nexports[159] = 'HA_ERR_TABLE_DEF_CHANGED';\r\nexports[160] = 'HA_ERR_NO_PARTITION_FOUND';\r\nexports[161] = 'HA_ERR_RBR_LOGGING_FAILED';\r\nexports[162] = 'HA_ERR_DROP_INDEX_FK';\r\nexports[163] = 'HA_ERR_FOREIGN_DUPLICATE_KEY';\r\nexports[164] = 'HA_ERR_TABLE_NEEDS_UPGRADE';\r\nexports[165] = 'HA_ERR_TABLE_READONLY';\r\nexports[166] = 'HA_ERR_AUTOINC_READ_FAILED';\r\nexports[167] = 'HA_ERR_AUTOINC_ERANGE';\r\nexports[168] = 'HA_ERR_GENERIC';\r\nexports[169] = 'HA_ERR_RECORD_IS_THE_SAME';\r\nexports[170] = 'HA_ERR_LOGGING_IMPOSSIBLE';\r\nexports[171] = 'HA_ERR_CORRUPT_EVENT';\r\nexports[172] = 'HA_ERR_NEW_FILE';\r\nexports[173] = 'HA_ERR_ROWS_EVENT_APPLY';\r\nexports[174] = 'HA_ERR_INITIALIZATION';\r\nexports[175] = 'HA_ERR_FILE_TOO_SHORT';\r\nexports[176] = 'HA_ERR_WRONG_CRC';\r\nexports[177] = 'HA_ERR_TOO_MANY_CONCURRENT_TRXS';\r\nexports[178] = 'HA_ERR_NOT_IN_LOCK_PARTITIONS';\r\nexports[179] = 'HA_ERR_INDEX_COL_TOO_LONG';\r\nexports[180] = 'HA_ERR_INDEX_CORRUPT';\r\nexports[181] = 'HA_ERR_UNDO_REC_TOO_BIG';\r\nexports[182] = 'HA_FTS_INVALID_DOCID';\r\nexports[183] = 'HA_ERR_TABLE_IN_FK_CHECK';\r\nexports[184] = 'HA_ERR_TABLESPACE_EXISTS';\r\nexports[185] = 'HA_ERR_TOO_MANY_FIELDS';\r\nexports[186] = 'HA_ERR_ROW_IN_WRONG_PARTITION';\r\nexports[187] = 'HA_ERR_INNODB_READ_ONLY';\r\nexports[188] = 'HA_ERR_FTS_EXCEED_RESULT_CACHE_LIMIT';\r\nexports[189] = 'HA_ERR_TEMP_FILE_WRITE_FAILURE';\r\nexports[190] = 'HA_ERR_INNODB_FORCED_RECOVERY';\r\nexports[191] = 'HA_ERR_FTS_TOO_MANY_WORDS_IN_PHRASE';\r\nexports[192] = 'HA_ERR_FK_DEPTH_EXCEEDED';\r\nexports[193] = 'HA_MISSING_CREATE_OPTION';\r\nexports[194] = 'HA_ERR_SE_OUT_OF_MEMORY';\r\nexports[195] = 'HA_ERR_TABLE_CORRUPT';\r\nexports[196] = 'HA_ERR_QUERY_INTERRUPTED';\r\nexports[197] = 'HA_ERR_TABLESPACE_MISSING';\r\nexports[198] = 'HA_ERR_TABLESPACE_IS_NOT_EMPTY';\r\nexports[199] = 'HA_ERR_WRONG_FILE_NAME';\r\nexports[200] = 'HA_ERR_NOT_ALLOWED_COMMAND';\r\nexports[201] = 'HA_ERR_COMPUTE_FAILED';\r\nexports[202] = 'HA_ERR_ROW_FORMAT_CHANGED';\r\nexports[203] = 'HA_ERR_NO_WAIT_LOCK';\r\nexports[204] = 'HA_ERR_DISK_FULL_NOWAIT';\r\nexports[205] = 'HA_ERR_NO_SESSION_TEMP';\r\nexports[206] = 'HA_ERR_WRONG_TABLE_NAME';\r\nexports[207] = 'HA_ERR_TOO_LONG_PATH';\r\nexports[208] = 'HA_ERR_SAMPLING_INIT_FAILED';\r\nexports[209] = 'HA_ERR_FTS_TOO_MANY_NESTED_EXP';\r\nexports[1000] = 'ER_HASHCHK';\r\nexports[1001] = 'ER_NISAMCHK';\r\nexports[1002] = 'ER_NO';\r\nexports[1003] = 'ER_YES';\r\nexports[1004] = 'ER_CANT_CREATE_FILE';\r\nexports[1005] = 'ER_CANT_CREATE_TABLE';\r\nexports[1006] = 'ER_CANT_CREATE_DB';\r\nexports[1007] = 'ER_DB_CREATE_EXISTS';\r\nexports[1008] = 'ER_DB_DROP_EXISTS';\r\nexports[1009] = 'ER_DB_DROP_DELETE';\r\nexports[1010] = 'ER_DB_DROP_RMDIR';\r\nexports[1011] = 'ER_CANT_DELETE_FILE';\r\nexports[1012] = 'ER_CANT_FIND_SYSTEM_REC';\r\nexports[1013] = 'ER_CANT_GET_STAT';\r\nexports[1014] = 'ER_CANT_GET_WD';\r\nexports[1015] = 'ER_CANT_LOCK';\r\nexports[1016] = 'ER_CANT_OPEN_FILE';\r\nexports[1017] = 'ER_FILE_NOT_FOUND';\r\nexports[1018] = 'ER_CANT_READ_DIR';\r\nexports[1019] = 'ER_CANT_SET_WD';\r\nexports[1020] = 'ER_CHECKREAD';\r\nexports[1021] = 'ER_DISK_FULL';\r\nexports[1022] = 'ER_DUP_KEY';\r\nexports[1023] = 'ER_ERROR_ON_CLOSE';\r\nexports[1024] = 'ER_ERROR_ON_READ';\r\nexports[1025] = 'ER_ERROR_ON_RENAME';\r\nexports[1026] = 'ER_ERROR_ON_WRITE';\r\nexports[1027] = 'ER_FILE_USED';\r\nexports[1028] = 'ER_FILSORT_ABORT';\r\nexports[1029] = 'ER_FORM_NOT_FOUND';\r\nexports[1030] = 'ER_GET_ERRNO';\r\nexports[1031] = 'ER_ILLEGAL_HA';\r\nexports[1032] = 'ER_KEY_NOT_FOUND';\r\nexports[1033] = 'ER_NOT_FORM_FILE';\r\nexports[1034] = 'ER_NOT_KEYFILE';\r\nexports[1035] = 'ER_OLD_KEYFILE';\r\nexports[1036] = 'ER_OPEN_AS_READONLY';\r\nexports[1037] = 'ER_OUTOFMEMORY';\r\nexports[1038] = 'ER_OUT_OF_SORTMEMORY';\r\nexports[1039] = 'ER_UNEXPECTED_EOF';\r\nexports[1040] = 'ER_CON_COUNT_ERROR';\r\nexports[1041] = 'ER_OUT_OF_RESOURCES';\r\nexports[1042] = 'ER_BAD_HOST_ERROR';\r\nexports[1043] = 'ER_HANDSHAKE_ERROR';\r\nexports[1044] = 'ER_DBACCESS_DENIED_ERROR';\r\nexports[1045] = 'ER_ACCESS_DENIED_ERROR';\r\nexports[1046] = 'ER_NO_DB_ERROR';\r\nexports[1047] = 'ER_UNKNOWN_COM_ERROR';\r\nexports[1048] = 'ER_BAD_NULL_ERROR';\r\nexports[1049] = 'ER_BAD_DB_ERROR';\r\nexports[1050] = 'ER_TABLE_EXISTS_ERROR';\r\nexports[1051] = 'ER_BAD_TABLE_ERROR';\r\nexports[1052] = 'ER_NON_UNIQ_ERROR';\r\nexports[1053] = 'ER_SERVER_SHUTDOWN';\r\nexports[1054] = 'ER_BAD_FIELD_ERROR';\r\nexports[1055] = 'ER_WRONG_FIELD_WITH_GROUP';\r\nexports[1056] = 'ER_WRONG_GROUP_FIELD';\r\nexports[1057] = 'ER_WRONG_SUM_SELECT';\r\nexports[1058] = 'ER_WRONG_VALUE_COUNT';\r\nexports[1059] = 'ER_TOO_LONG_IDENT';\r\nexports[1060] = 'ER_DUP_FIELDNAME';\r\nexports[1061] = 'ER_DUP_KEYNAME';\r\nexports[1062] = 'ER_DUP_ENTRY';\r\nexports[1063] = 'ER_WRONG_FIELD_SPEC';\r\nexports[1064] = 'ER_PARSE_ERROR';\r\nexports[1065] = 'ER_EMPTY_QUERY';\r\nexports[1066] = 'ER_NONUNIQ_TABLE';\r\nexports[1067] = 'ER_INVALID_DEFAULT';\r\nexports[1068] = 'ER_MULTIPLE_PRI_KEY';\r\nexports[1069] = 'ER_TOO_MANY_KEYS';\r\nexports[1070] = 'ER_TOO_MANY_KEY_PARTS';\r\nexports[1071] = 'ER_TOO_LONG_KEY';\r\nexports[1072] = 'ER_KEY_COLUMN_DOES_NOT_EXITS';\r\nexports[1073] = 'ER_BLOB_USED_AS_KEY';\r\nexports[1074] = 'ER_TOO_BIG_FIELDLENGTH';\r\nexports[1075] = 'ER_WRONG_AUTO_KEY';\r\nexports[1076] = 'ER_READY';\r\nexports[1077] = 'ER_NORMAL_SHUTDOWN';\r\nexports[1078] = 'ER_GOT_SIGNAL';\r\nexports[1079] = 'ER_SHUTDOWN_COMPLETE';\r\nexports[1080] = 'ER_FORCING_CLOSE';\r\nexports[1081] = 'ER_IPSOCK_ERROR';\r\nexports[1082] = 'ER_NO_SUCH_INDEX';\r\nexports[1083] = 'ER_WRONG_FIELD_TERMINATORS';\r\nexports[1084] = 'ER_BLOBS_AND_NO_TERMINATED';\r\nexports[1085] = 'ER_TEXTFILE_NOT_READABLE';\r\nexports[1086] = 'ER_FILE_EXISTS_ERROR';\r\nexports[1087] = 'ER_LOAD_INFO';\r\nexports[1088] = 'ER_ALTER_INFO';\r\nexports[1089] = 'ER_WRONG_SUB_KEY';\r\nexports[1090] = 'ER_CANT_REMOVE_ALL_FIELDS';\r\nexports[1091] = 'ER_CANT_DROP_FIELD_OR_KEY';\r\nexports[1092] = 'ER_INSERT_INFO';\r\nexports[1093] = 'ER_UPDATE_TABLE_USED';\r\nexports[1094] = 'ER_NO_SUCH_THREAD';\r\nexports[1095] = 'ER_KILL_DENIED_ERROR';\r\nexports[1096] = 'ER_NO_TABLES_USED';\r\nexports[1097] = 'ER_TOO_BIG_SET';\r\nexports[1098] = 'ER_NO_UNIQUE_LOGFILE';\r\nexports[1099] = 'ER_TABLE_NOT_LOCKED_FOR_WRITE';\r\nexports[1100] = 'ER_TABLE_NOT_LOCKED';\r\nexports[1101] = 'ER_BLOB_CANT_HAVE_DEFAULT';\r\nexports[1102] = 'ER_WRONG_DB_NAME';\r\nexports[1103] = 'ER_WRONG_TABLE_NAME';\r\nexports[1104] = 'ER_TOO_BIG_SELECT';\r\nexports[1105] = 'ER_UNKNOWN_ERROR';\r\nexports[1106] = 'ER_UNKNOWN_PROCEDURE';\r\nexports[1107] = 'ER_WRONG_PARAMCOUNT_TO_PROCEDURE';\r\nexports[1108] = 'ER_WRONG_PARAMETERS_TO_PROCEDURE';\r\nexports[1109] = 'ER_UNKNOWN_TABLE';\r\nexports[1110] = 'ER_FIELD_SPECIFIED_TWICE';\r\nexports[1111] = 'ER_INVALID_GROUP_FUNC_USE';\r\nexports[1112] = 'ER_UNSUPPORTED_EXTENSION';\r\nexports[1113] = 'ER_TABLE_MUST_HAVE_COLUMNS';\r\nexports[1114] = 'ER_RECORD_FILE_FULL';\r\nexports[1115] = 'ER_UNKNOWN_CHARACTER_SET';\r\nexports[1116] = 'ER_TOO_MANY_TABLES';\r\nexports[1117] = 'ER_TOO_MANY_FIELDS';\r\nexports[1118] = 'ER_TOO_BIG_ROWSIZE';\r\nexports[1119] = 'ER_STACK_OVERRUN';\r\nexports[1120] = 'ER_WRONG_OUTER_JOIN';\r\nexports[1121] = 'ER_NULL_COLUMN_IN_INDEX';\r\nexports[1122] = 'ER_CANT_FIND_UDF';\r\nexports[1123] = 'ER_CANT_INITIALIZE_UDF';\r\nexports[1124] = 'ER_UDF_NO_PATHS';\r\nexports[1125] = 'ER_UDF_EXISTS';\r\nexports[1126] = 'ER_CANT_OPEN_LIBRARY';\r\nexports[1127] = 'ER_CANT_FIND_DL_ENTRY';\r\nexports[1128] = 'ER_FUNCTION_NOT_DEFINED';\r\nexports[1129] = 'ER_HOST_IS_BLOCKED';\r\nexports[1130] = 'ER_HOST_NOT_PRIVILEGED';\r\nexports[1131] = 'ER_PASSWORD_ANONYMOUS_USER';\r\nexports[1132] = 'ER_PASSWORD_NOT_ALLOWED';\r\nexports[1133] = 'ER_PASSWORD_NO_MATCH';\r\nexports[1134] = 'ER_UPDATE_INFO';\r\nexports[1135] = 'ER_CANT_CREATE_THREAD';\r\nexports[1136] = 'ER_WRONG_VALUE_COUNT_ON_ROW';\r\nexports[1137] = 'ER_CANT_REOPEN_TABLE';\r\nexports[1138] = 'ER_INVALID_USE_OF_NULL';\r\nexports[1139] = 'ER_REGEXP_ERROR';\r\nexports[1140] = 'ER_MIX_OF_GROUP_FUNC_AND_FIELDS';\r\nexports[1141] = 'ER_NONEXISTING_GRANT';\r\nexports[1142] = 'ER_TABLEACCESS_DENIED_ERROR';\r\nexports[1143] = 'ER_COLUMNACCESS_DENIED_ERROR';\r\nexports[1144] = 'ER_ILLEGAL_GRANT_FOR_TABLE';\r\nexports[1145] = 'ER_GRANT_WRONG_HOST_OR_USER';\r\nexports[1146] = 'ER_NO_SUCH_TABLE';\r\nexports[1147] = 'ER_NONEXISTING_TABLE_GRANT';\r\nexports[1148] = 'ER_NOT_ALLOWED_COMMAND';\r\nexports[1149] = 'ER_SYNTAX_ERROR';\r\nexports[1150] = 'ER_UNUSED1';\r\nexports[1151] = 'ER_UNUSED2';\r\nexports[1152] = 'ER_ABORTING_CONNECTION';\r\nexports[1153] = 'ER_NET_PACKET_TOO_LARGE';\r\nexports[1154] = 'ER_NET_READ_ERROR_FROM_PIPE';\r\nexports[1155] = 'ER_NET_FCNTL_ERROR';\r\nexports[1156] = 'ER_NET_PACKETS_OUT_OF_ORDER';\r\nexports[1157] = 'ER_NET_UNCOMPRESS_ERROR';\r\nexports[1158] = 'ER_NET_READ_ERROR';\r\nexports[1159] = 'ER_NET_READ_INTERRUPTED';\r\nexports[1160] = 'ER_NET_ERROR_ON_WRITE';\r\nexports[1161] = 'ER_NET_WRITE_INTERRUPTED';\r\nexports[1162] = 'ER_TOO_LONG_STRING';\r\nexports[1163] = 'ER_TABLE_CANT_HANDLE_BLOB';\r\nexports[1164] = 'ER_TABLE_CANT_HANDLE_AUTO_INCREMENT';\r\nexports[1165] = 'ER_UNUSED3';\r\nexports[1166] = 'ER_WRONG_COLUMN_NAME';\r\nexports[1167] = 'ER_WRONG_KEY_COLUMN';\r\nexports[1168] = 'ER_WRONG_MRG_TABLE';\r\nexports[1169] = 'ER_DUP_UNIQUE';\r\nexports[1170] = 'ER_BLOB_KEY_WITHOUT_LENGTH';\r\nexports[1171] = 'ER_PRIMARY_CANT_HAVE_NULL';\r\nexports[1172] = 'ER_TOO_MANY_ROWS';\r\nexports[1173] = 'ER_REQUIRES_PRIMARY_KEY';\r\nexports[1174] = 'ER_NO_RAID_COMPILED';\r\nexports[1175] = 'ER_UPDATE_WITHOUT_KEY_IN_SAFE_MODE';\r\nexports[1176] = 'ER_KEY_DOES_NOT_EXITS';\r\nexports[1177] = 'ER_CHECK_NO_SUCH_TABLE';\r\nexports[1178] = 'ER_CHECK_NOT_IMPLEMENTED';\r\nexports[1179] = 'ER_CANT_DO_THIS_DURING_AN_TRANSACTION';\r\nexports[1180] = 'ER_ERROR_DURING_COMMIT';\r\nexports[1181] = 'ER_ERROR_DURING_ROLLBACK';\r\nexports[1182] = 'ER_ERROR_DURING_FLUSH_LOGS';\r\nexports[1183] = 'ER_ERROR_DURING_CHECKPOINT';\r\nexports[1184] = 'ER_NEW_ABORTING_CONNECTION';\r\nexports[1185] = 'ER_DUMP_NOT_IMPLEMENTED';\r\nexports[1186] = 'ER_FLUSH_MASTER_BINLOG_CLOSED';\r\nexports[1187] = 'ER_INDEX_REBUILD';\r\nexports[1188] = 'ER_SOURCE';\r\nexports[1189] = 'ER_SOURCE_NET_READ';\r\nexports[1190] = 'ER_SOURCE_NET_WRITE';\r\nexports[1191] = 'ER_FT_MATCHING_KEY_NOT_FOUND';\r\nexports[1192] = 'ER_LOCK_OR_ACTIVE_TRANSACTION';\r\nexports[1193] = 'ER_UNKNOWN_SYSTEM_VARIABLE';\r\nexports[1194] = 'ER_CRASHED_ON_USAGE';\r\nexports[1195] = 'ER_CRASHED_ON_REPAIR';\r\nexports[1196] = 'ER_WARNING_NOT_COMPLETE_ROLLBACK';\r\nexports[1197] = 'ER_TRANS_CACHE_FULL';\r\nexports[1198] = 'ER_SLAVE_MUST_STOP';\r\nexports[1199] = 'ER_REPLICA_NOT_RUNNING';\r\nexports[1200] = 'ER_BAD_REPLICA';\r\nexports[1201] = 'ER_CONNECTION_METADATA';\r\nexports[1202] = 'ER_REPLICA_THREAD';\r\nexports[1203] = 'ER_TOO_MANY_USER_CONNECTIONS';\r\nexports[1204] = 'ER_SET_CONSTANTS_ONLY';\r\nexports[1205] = 'ER_LOCK_WAIT_TIMEOUT';\r\nexports[1206] = 'ER_LOCK_TABLE_FULL';\r\nexports[1207] = 'ER_READ_ONLY_TRANSACTION';\r\nexports[1208] = 'ER_DROP_DB_WITH_READ_LOCK';\r\nexports[1209] = 'ER_CREATE_DB_WITH_READ_LOCK';\r\nexports[1210] = 'ER_WRONG_ARGUMENTS';\r\nexports[1211] = 'ER_NO_PERMISSION_TO_CREATE_USER';\r\nexports[1212] = 'ER_UNION_TABLES_IN_DIFFERENT_DIR';\r\nexports[1213] = 'ER_LOCK_DEADLOCK';\r\nexports[1214] = 'ER_TABLE_CANT_HANDLE_FT';\r\nexports[1215] = 'ER_CANNOT_ADD_FOREIGN';\r\nexports[1216] = 'ER_NO_REFERENCED_ROW';\r\nexports[1217] = 'ER_ROW_IS_REFERENCED';\r\nexports[1218] = 'ER_CONNECT_TO_SOURCE';\r\nexports[1219] = 'ER_QUERY_ON_MASTER';\r\nexports[1220] = 'ER_ERROR_WHEN_EXECUTING_COMMAND';\r\nexports[1221] = 'ER_WRONG_USAGE';\r\nexports[1222] = 'ER_WRONG_NUMBER_OF_COLUMNS_IN_SELECT';\r\nexports[1223] = 'ER_CANT_UPDATE_WITH_READLOCK';\r\nexports[1224] = 'ER_MIXING_NOT_ALLOWED';\r\nexports[1225] = 'ER_DUP_ARGUMENT';\r\nexports[1226] = 'ER_USER_LIMIT_REACHED';\r\nexports[1227] = 'ER_SPECIFIC_ACCESS_DENIED_ERROR';\r\nexports[1228] = 'ER_LOCAL_VARIABLE';\r\nexports[1229] = 'ER_GLOBAL_VARIABLE';\r\nexports[1230] = 'ER_NO_DEFAULT';\r\nexports[1231] = 'ER_WRONG_VALUE_FOR_VAR';\r\nexports[1232] = 'ER_WRONG_TYPE_FOR_VAR';\r\nexports[1233] = 'ER_VAR_CANT_BE_READ';\r\nexports[1234] = 'ER_CANT_USE_OPTION_HERE';\r\nexports[1235] = 'ER_NOT_SUPPORTED_YET';\r\nexports[1236] = 'ER_SOURCE_FATAL_ERROR_READING_BINLOG';\r\nexports[1237] = 'ER_REPLICA_IGNORED_TABLE';\r\nexports[1238] = 'ER_INCORRECT_GLOBAL_LOCAL_VAR';\r\nexports[1239] = 'ER_WRONG_FK_DEF';\r\nexports[1240] = 'ER_KEY_REF_DO_NOT_MATCH_TABLE_REF';\r\nexports[1241] = 'ER_OPERAND_COLUMNS';\r\nexports[1242] = 'ER_SUBQUERY_NO_1_ROW';\r\nexports[1243] = 'ER_UNKNOWN_STMT_HANDLER';\r\nexports[1244] = 'ER_CORRUPT_HELP_DB';\r\nexports[1245] = 'ER_CYCLIC_REFERENCE';\r\nexports[1246] = 'ER_AUTO_CONVERT';\r\nexports[1247] = 'ER_ILLEGAL_REFERENCE';\r\nexports[1248] = 'ER_DERIVED_MUST_HAVE_ALIAS';\r\nexports[1249] = 'ER_SELECT_REDUCED';\r\nexports[1250] = 'ER_TABLENAME_NOT_ALLOWED_HERE';\r\nexports[1251] = 'ER_NOT_SUPPORTED_AUTH_MODE';\r\nexports[1252] = 'ER_SPATIAL_CANT_HAVE_NULL';\r\nexports[1253] = 'ER_COLLATION_CHARSET_MISMATCH';\r\nexports[1254] = 'ER_SLAVE_WAS_RUNNING';\r\nexports[1255] = 'ER_SLAVE_WAS_NOT_RUNNING';\r\nexports[1256] = 'ER_TOO_BIG_FOR_UNCOMPRESS';\r\nexports[1257] = 'ER_ZLIB_Z_MEM_ERROR';\r\nexports[1258] = 'ER_ZLIB_Z_BUF_ERROR';\r\nexports[1259] = 'ER_ZLIB_Z_DATA_ERROR';\r\nexports[1260] = 'ER_CUT_VALUE_GROUP_CONCAT';\r\nexports[1261] = 'ER_WARN_TOO_FEW_RECORDS';\r\nexports[1262] = 'ER_WARN_TOO_MANY_RECORDS';\r\nexports[1263] = 'ER_WARN_NULL_TO_NOTNULL';\r\nexports[1264] = 'ER_WARN_DATA_OUT_OF_RANGE';\r\nexports[1265] = 'WARN_DATA_TRUNCATED';\r\nexports[1266] = 'ER_WARN_USING_OTHER_HANDLER';\r\nexports[1267] = 'ER_CANT_AGGREGATE_2COLLATIONS';\r\nexports[1268] = 'ER_DROP_USER';\r\nexports[1269] = 'ER_REVOKE_GRANTS';\r\nexports[1270] = 'ER_CANT_AGGREGATE_3COLLATIONS';\r\nexports[1271] = 'ER_CANT_AGGREGATE_NCOLLATIONS';\r\nexports[1272] = 'ER_VARIABLE_IS_NOT_STRUCT';\r\nexports[1273] = 'ER_UNKNOWN_COLLATION';\r\nexports[1274] = 'ER_REPLICA_IGNORED_SSL_PARAMS';\r\nexports[1275] = 'ER_SERVER_IS_IN_SECURE_AUTH_MODE';\r\nexports[1276] = 'ER_WARN_FIELD_RESOLVED';\r\nexports[1277] = 'ER_BAD_REPLICA_UNTIL_COND';\r\nexports[1278] = 'ER_MISSING_SKIP_REPLICA';\r\nexports[1279] = 'ER_UNTIL_COND_IGNORED';\r\nexports[1280] = 'ER_WRONG_NAME_FOR_INDEX';\r\nexports[1281] = 'ER_WRONG_NAME_FOR_CATALOG';\r\nexports[1282] = 'ER_WARN_QC_RESIZE';\r\nexports[1283] = 'ER_BAD_FT_COLUMN';\r\nexports[1284] = 'ER_UNKNOWN_KEY_CACHE';\r\nexports[1285] = 'ER_WARN_HOSTNAME_WONT_WORK';\r\nexports[1286] = 'ER_UNKNOWN_STORAGE_ENGINE';\r\nexports[1287] = 'ER_WARN_DEPRECATED_SYNTAX';\r\nexports[1288] = 'ER_NON_UPDATABLE_TABLE';\r\nexports[1289] = 'ER_FEATURE_DISABLED';\r\nexports[1290] = 'ER_OPTION_PREVENTS_STATEMENT';\r\nexports[1291] = 'ER_DUPLICATED_VALUE_IN_TYPE';\r\nexports[1292] = 'ER_TRUNCATED_WRONG_VALUE';\r\nexports[1293] = 'ER_TOO_MUCH_AUTO_TIMESTAMP_COLS';\r\nexports[1294] = 'ER_INVALID_ON_UPDATE';\r\nexports[1295] = 'ER_UNSUPPORTED_PS';\r\nexports[1296] = 'ER_GET_ERRMSG';\r\nexports[1297] = 'ER_GET_TEMPORARY_ERRMSG';\r\nexports[1298] = 'ER_UNKNOWN_TIME_ZONE';\r\nexports[1299] = 'ER_WARN_INVALID_TIMESTAMP';\r\nexports[1300] = 'ER_INVALID_CHARACTER_STRING';\r\nexports[1301] = 'ER_WARN_ALLOWED_PACKET_OVERFLOWED';\r\nexports[1302] = 'ER_CONFLICTING_DECLARATIONS';\r\nexports[1303] = 'ER_SP_NO_RECURSIVE_CREATE';\r\nexports[1304] = 'ER_SP_ALREADY_EXISTS';\r\nexports[1305] = 'ER_SP_DOES_NOT_EXIST';\r\nexports[1306] = 'ER_SP_DROP_FAILED';\r\nexports[1307] = 'ER_SP_STORE_FAILED';\r\nexports[1308] = 'ER_SP_LILABEL_MISMATCH';\r\nexports[1309] = 'ER_SP_LABEL_REDEFINE';\r\nexports[1310] = 'ER_SP_LABEL_MISMATCH';\r\nexports[1311] = 'ER_SP_UNINIT_VAR';\r\nexports[1312] = 'ER_SP_BADSELECT';\r\nexports[1313] = 'ER_SP_BADRETURN';\r\nexports[1314] = 'ER_SP_BADSTATEMENT';\r\nexports[1315] = 'ER_UPDATE_LOG_DEPRECATED_IGNORED';\r\nexports[1316] = 'ER_UPDATE_LOG_DEPRECATED_TRANSLATED';\r\nexports[1317] = 'ER_QUERY_INTERRUPTED';\r\nexports[1318] = 'ER_SP_WRONG_NO_OF_ARGS';\r\nexports[1319] = 'ER_SP_COND_MISMATCH';\r\nexports[1320] = 'ER_SP_NORETURN';\r\nexports[1321] = 'ER_SP_NORETURNEND';\r\nexports[1322] = 'ER_SP_BAD_CURSOR_QUERY';\r\nexports[1323] = 'ER_SP_BAD_CURSOR_SELECT';\r\nexports[1324] = 'ER_SP_CURSOR_MISMATCH';\r\nexports[1325] = 'ER_SP_CURSOR_ALREADY_OPEN';\r\nexports[1326] = 'ER_SP_CURSOR_NOT_OPEN';\r\nexports[1327] = 'ER_SP_UNDECLARED_VAR';\r\nexports[1328] = 'ER_SP_WRONG_NO_OF_FETCH_ARGS';\r\nexports[1329] = 'ER_SP_FETCH_NO_DATA';\r\nexports[1330] = 'ER_SP_DUP_PARAM';\r\nexports[1331] = 'ER_SP_DUP_VAR';\r\nexports[1332] = 'ER_SP_DUP_COND';\r\nexports[1333] = 'ER_SP_DUP_CURS';\r\nexports[1334] = 'ER_SP_CANT_ALTER';\r\nexports[1335] = 'ER_SP_SUBSELECT_NYI';\r\nexports[1336] = 'ER_STMT_NOT_ALLOWED_IN_SF_OR_TRG';\r\nexports[1337] = 'ER_SP_VARCOND_AFTER_CURSHNDLR';\r\nexports[1338] = 'ER_SP_CURSOR_AFTER_HANDLER';\r\nexports[1339] = 'ER_SP_CASE_NOT_FOUND';\r\nexports[1340] = 'ER_FPARSER_TOO_BIG_FILE';\r\nexports[1341] = 'ER_FPARSER_BAD_HEADER';\r\nexports[1342] = 'ER_FPARSER_EOF_IN_COMMENT';\r\nexports[1343] = 'ER_FPARSER_ERROR_IN_PARAMETER';\r\nexports[1344] = 'ER_FPARSER_EOF_IN_UNKNOWN_PARAMETER';\r\nexports[1345] = 'ER_VIEW_NO_EXPLAIN';\r\nexports[1346] = 'ER_FRM_UNKNOWN_TYPE';\r\nexports[1347] = 'ER_WRONG_OBJECT';\r\nexports[1348] = 'ER_NONUPDATEABLE_COLUMN';\r\nexports[1349] = 'ER_VIEW_SELECT_DERIVED';\r\nexports[1350] = 'ER_VIEW_SELECT_CLAUSE';\r\nexports[1351] = 'ER_VIEW_SELECT_VARIABLE';\r\nexports[1352] = 'ER_VIEW_SELECT_TMPTABLE';\r\nexports[1353] = 'ER_VIEW_WRONG_LIST';\r\nexports[1354] = 'ER_WARN_VIEW_MERGE';\r\nexports[1355] = 'ER_WARN_VIEW_WITHOUT_KEY';\r\nexports[1356] = 'ER_VIEW_INVALID';\r\nexports[1357] = 'ER_SP_NO_DROP_SP';\r\nexports[1358] = 'ER_SP_GOTO_IN_HNDLR';\r\nexports[1359] = 'ER_TRG_ALREADY_EXISTS';\r\nexports[1360] = 'ER_TRG_DOES_NOT_EXIST';\r\nexports[1361] = 'ER_TRG_ON_VIEW_OR_TEMP_TABLE';\r\nexports[1362] = 'ER_TRG_CANT_CHANGE_ROW';\r\nexports[1363] = 'ER_TRG_NO_SUCH_ROW_IN_TRG';\r\nexports[1364] = 'ER_NO_DEFAULT_FOR_FIELD';\r\nexports[1365] = 'ER_DIVISION_BY_ZERO';\r\nexports[1366] = 'ER_TRUNCATED_WRONG_VALUE_FOR_FIELD';\r\nexports[1367] = 'ER_ILLEGAL_VALUE_FOR_TYPE';\r\nexports[1368] = 'ER_VIEW_NONUPD_CHECK';\r\nexports[1369] = 'ER_VIEW_CHECK_FAILED';\r\nexports[1370] = 'ER_PROCACCESS_DENIED_ERROR';\r\nexports[1371] = 'ER_RELAY_LOG_FAIL';\r\nexports[1372] = 'ER_PASSWD_LENGTH';\r\nexports[1373] = 'ER_UNKNOWN_TARGET_BINLOG';\r\nexports[1374] = 'ER_IO_ERR_LOG_INDEX_READ';\r\nexports[1375] = 'ER_BINLOG_PURGE_PROHIBITED';\r\nexports[1376] = 'ER_FSEEK_FAIL';\r\nexports[1377] = 'ER_BINLOG_PURGE_FATAL_ERR';\r\nexports[1378] = 'ER_LOG_IN_USE';\r\nexports[1379] = 'ER_LOG_PURGE_UNKNOWN_ERR';\r\nexports[1380] = 'ER_RELAY_LOG_INIT';\r\nexports[1381] = 'ER_NO_BINARY_LOGGING';\r\nexports[1382] = 'ER_RESERVED_SYNTAX';\r\nexports[1383] = 'ER_WSAS_FAILED';\r\nexports[1384] = 'ER_DIFF_GROUPS_PROC';\r\nexports[1385] = 'ER_NO_GROUP_FOR_PROC';\r\nexports[1386] = 'ER_ORDER_WITH_PROC';\r\nexports[1387] = 'ER_LOGGING_PROHIBIT_CHANGING_OF';\r\nexports[1388] = 'ER_NO_FILE_MAPPING';\r\nexports[1389] = 'ER_WRONG_MAGIC';\r\nexports[1390] = 'ER_PS_MANY_PARAM';\r\nexports[1391] = 'ER_KEY_PART_0';\r\nexports[1392] = 'ER_VIEW_CHECKSUM';\r\nexports[1393] = 'ER_VIEW_MULTIUPDATE';\r\nexports[1394] = 'ER_VIEW_NO_INSERT_FIELD_LIST';\r\nexports[1395] = 'ER_VIEW_DELETE_MERGE_VIEW';\r\nexports[1396] = 'ER_CANNOT_USER';\r\nexports[1397] = 'ER_XAER_NOTA';\r\nexports[1398] = 'ER_XAER_INVAL';\r\nexports[1399] = 'ER_XAER_RMFAIL';\r\nexports[1400] = 'ER_XAER_OUTSIDE';\r\nexports[1401] = 'ER_XAER_RMERR';\r\nexports[1402] = 'ER_XA_RBROLLBACK';\r\nexports[1403] = 'ER_NONEXISTING_PROC_GRANT';\r\nexports[1404] = 'ER_PROC_AUTO_GRANT_FAIL';\r\nexports[1405] = 'ER_PROC_AUTO_REVOKE_FAIL';\r\nexports[1406] = 'ER_DATA_TOO_LONG';\r\nexports[1407] = 'ER_SP_BAD_SQLSTATE';\r\nexports[1408] = 'ER_STARTUP';\r\nexports[1409] = 'ER_LOAD_FROM_FIXED_SIZE_ROWS_TO_VAR';\r\nexports[1410] = 'ER_CANT_CREATE_USER_WITH_GRANT';\r\nexports[1411] = 'ER_WRONG_VALUE_FOR_TYPE';\r\nexports[1412] = 'ER_TABLE_DEF_CHANGED';\r\nexports[1413] = 'ER_SP_DUP_HANDLER';\r\nexports[1414] = 'ER_SP_NOT_VAR_ARG';\r\nexports[1415] = 'ER_SP_NO_RETSET';\r\nexports[1416] = 'ER_CANT_CREATE_GEOMETRY_OBJECT';\r\nexports[1417] = 'ER_FAILED_ROUTINE_BREAK_BINLOG';\r\nexports[1418] = 'ER_BINLOG_UNSAFE_ROUTINE';\r\nexports[1419] = 'ER_BINLOG_CREATE_ROUTINE_NEED_SUPER';\r\nexports[1420] = 'ER_EXEC_STMT_WITH_OPEN_CURSOR';\r\nexports[1421] = 'ER_STMT_HAS_NO_OPEN_CURSOR';\r\nexports[1422] = 'ER_COMMIT_NOT_ALLOWED_IN_SF_OR_TRG';\r\nexports[1423] = 'ER_NO_DEFAULT_FOR_VIEW_FIELD';\r\nexports[1424] = 'ER_SP_NO_RECURSION';\r\nexports[1425] = 'ER_TOO_BIG_SCALE';\r\nexports[1426] = 'ER_TOO_BIG_PRECISION';\r\nexports[1427] = 'ER_M_BIGGER_THAN_D';\r\nexports[1428] = 'ER_WRONG_LOCK_OF_SYSTEM_TABLE';\r\nexports[1429] = 'ER_CONNECT_TO_FOREIGN_DATA_SOURCE';\r\nexports[1430] = 'ER_QUERY_ON_FOREIGN_DATA_SOURCE';\r\nexports[1431] = 'ER_FOREIGN_DATA_SOURCE_DOESNT_EXIST';\r\nexports[1432] = 'ER_FOREIGN_DATA_STRING_INVALID_CANT_CREATE';\r\nexports[1433] = 'ER_FOREIGN_DATA_STRING_INVALID';\r\nexports[1434] = 'ER_CANT_CREATE_FEDERATED_TABLE';\r\nexports[1435] = 'ER_TRG_IN_WRONG_SCHEMA';\r\nexports[1436] = 'ER_STACK_OVERRUN_NEED_MORE';\r\nexports[1437] = 'ER_TOO_LONG_BODY';\r\nexports[1438] = 'ER_WARN_CANT_DROP_DEFAULT_KEYCACHE';\r\nexports[1439] = 'ER_TOO_BIG_DISPLAYWIDTH';\r\nexports[1440] = 'ER_XAER_DUPID';\r\nexports[1441] = 'ER_DATETIME_FUNCTION_OVERFLOW';\r\nexports[1442] = 'ER_CANT_UPDATE_USED_TABLE_IN_SF_OR_TRG';\r\nexports[1443] = 'ER_VIEW_PREVENT_UPDATE';\r\nexports[1444] = 'ER_PS_NO_RECURSION';\r\nexports[1445] = 'ER_SP_CANT_SET_AUTOCOMMIT';\r\nexports[1446] = 'ER_MALFORMED_DEFINER';\r\nexports[1447] = 'ER_VIEW_FRM_NO_USER';\r\nexports[1448] = 'ER_VIEW_OTHER_USER';\r\nexports[1449] = 'ER_NO_SUCH_USER';\r\nexports[1450] = 'ER_FORBID_SCHEMA_CHANGE';\r\nexports[1451] = 'ER_ROW_IS_REFERENCED_2';\r\nexports[1452] = 'ER_NO_REFERENCED_ROW_2';\r\nexports[1453] = 'ER_SP_BAD_VAR_SHADOW';\r\nexports[1454] = 'ER_TRG_NO_DEFINER';\r\nexports[1455] = 'ER_OLD_FILE_FORMAT';\r\nexports[1456] = 'ER_SP_RECURSION_LIMIT';\r\nexports[1457] = 'ER_SP_PROC_TABLE_CORRUPT';\r\nexports[1458] = 'ER_SP_WRONG_NAME';\r\nexports[1459] = 'ER_TABLE_NEEDS_UPGRADE';\r\nexports[1460] = 'ER_SP_NO_AGGREGATE';\r\nexports[1461] = 'ER_MAX_PREPARED_STMT_COUNT_REACHED';\r\nexports[1462] = 'ER_VIEW_RECURSIVE';\r\nexports[1463] = 'ER_NON_GROUPING_FIELD_USED';\r\nexports[1464] = 'ER_TABLE_CANT_HANDLE_SPKEYS';\r\nexports[1465] = 'ER_NO_TRIGGERS_ON_SYSTEM_SCHEMA';\r\nexports[1466] = 'ER_REMOVED_SPACES';\r\nexports[1467] = 'ER_AUTOINC_READ_FAILED';\r\nexports[1468] = 'ER_USERNAME';\r\nexports[1469] = 'ER_HOSTNAME';\r\nexports[1470] = 'ER_WRONG_STRING_LENGTH';\r\nexports[1471] = 'ER_NON_INSERTABLE_TABLE';\r\nexports[1472] = 'ER_ADMIN_WRONG_MRG_TABLE';\r\nexports[1473] = 'ER_TOO_HIGH_LEVEL_OF_NESTING_FOR_SELECT';\r\nexports[1474] = 'ER_NAME_BECOMES_EMPTY';\r\nexports[1475] = 'ER_AMBIGUOUS_FIELD_TERM';\r\nexports[1476] = 'ER_FOREIGN_SERVER_EXISTS';\r\nexports[1477] = 'ER_FOREIGN_SERVER_DOESNT_EXIST';\r\nexports[1478] = 'ER_ILLEGAL_HA_CREATE_OPTION';\r\nexports[1479] = 'ER_PARTITION_REQUIRES_VALUES_ERROR';\r\nexports[1480] = 'ER_PARTITION_WRONG_VALUES_ERROR';\r\nexports[1481] = 'ER_PARTITION_MAXVALUE_ERROR';\r\nexports[1482] = 'ER_PARTITION_SUBPARTITION_ERROR';\r\nexports[1483] = 'ER_PARTITION_SUBPART_MIX_ERROR';\r\nexports[1484] = 'ER_PARTITION_WRONG_NO_PART_ERROR';\r\nexports[1485] = 'ER_PARTITION_WRONG_NO_SUBPART_ERROR';\r\nexports[1486] = 'ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR';\r\nexports[1487] = 'ER_NO_CONST_EXPR_IN_RANGE_OR_LIST_ERROR';\r\nexports[1488] = 'ER_FIELD_NOT_FOUND_PART_ERROR';\r\nexports[1489] = 'ER_LIST_OF_FIELDS_ONLY_IN_HASH_ERROR';\r\nexports[1490] = 'ER_INCONSISTENT_PARTITION_INFO_ERROR';\r\nexports[1491] = 'ER_PARTITION_FUNC_NOT_ALLOWED_ERROR';\r\nexports[1492] = 'ER_PARTITIONS_MUST_BE_DEFINED_ERROR';\r\nexports[1493] = 'ER_RANGE_NOT_INCREASING_ERROR';\r\nexports[1494] = 'ER_INCONSISTENT_TYPE_OF_FUNCTIONS_ERROR';\r\nexports[1495] = 'ER_MULTIPLE_DEF_CONST_IN_LIST_PART_ERROR';\r\nexports[1496] = 'ER_PARTITION_ENTRY_ERROR';\r\nexports[1497] = 'ER_MIX_HANDLER_ERROR';\r\nexports[1498] = 'ER_PARTITION_NOT_DEFINED_ERROR';\r\nexports[1499] = 'ER_TOO_MANY_PARTITIONS_ERROR';\r\nexports[1500] = 'ER_SUBPARTITION_ERROR';\r\nexports[1501] = 'ER_CANT_CREATE_HANDLER_FILE';\r\nexports[1502] = 'ER_BLOB_FIELD_IN_PART_FUNC_ERROR';\r\nexports[1503] = 'ER_UNIQUE_KEY_NEED_ALL_FIELDS_IN_PF';\r\nexports[1504] = 'ER_NO_PARTS_ERROR';\r\nexports[1505] = 'ER_PARTITION_MGMT_ON_NONPARTITIONED';\r\nexports[1506] = 'ER_FOREIGN_KEY_ON_PARTITIONED';\r\nexports[1507] = 'ER_DROP_PARTITION_NON_EXISTENT';\r\nexports[1508] = 'ER_DROP_LAST_PARTITION';\r\nexports[1509] = 'ER_COALESCE_ONLY_ON_HASH_PARTITION';\r\nexports[1510] = 'ER_REORG_HASH_ONLY_ON_SAME_NO';\r\nexports[1511] = 'ER_REORG_NO_PARAM_ERROR';\r\nexports[1512] = 'ER_ONLY_ON_RANGE_LIST_PARTITION';\r\nexports[1513] = 'ER_ADD_PARTITION_SUBPART_ERROR';\r\nexports[1514] = 'ER_ADD_PARTITION_NO_NEW_PARTITION';\r\nexports[1515] = 'ER_COALESCE_PARTITION_NO_PARTITION';\r\nexports[1516] = 'ER_REORG_PARTITION_NOT_EXIST';\r\nexports[1517] = 'ER_SAME_NAME_PARTITION';\r\nexports[1518] = 'ER_NO_BINLOG_ERROR';\r\nexports[1519] = 'ER_CONSECUTIVE_REORG_PARTITIONS';\r\nexports[1520] = 'ER_REORG_OUTSIDE_RANGE';\r\nexports[1521] = 'ER_PARTITION_FUNCTION_FAILURE';\r\nexports[1522] = 'ER_PART_STATE_ERROR';\r\nexports[1523] = 'ER_LIMITED_PART_RANGE';\r\nexports[1524] = 'ER_PLUGIN_IS_NOT_LOADED';\r\nexports[1525] = 'ER_WRONG_VALUE';\r\nexports[1526] = 'ER_NO_PARTITION_FOR_GIVEN_VALUE';\r\nexports[1527] = 'ER_FILEGROUP_OPTION_ONLY_ONCE';\r\nexports[1528] = 'ER_CREATE_FILEGROUP_FAILED';\r\nexports[1529] = 'ER_DROP_FILEGROUP_FAILED';\r\nexports[1530] = 'ER_TABLESPACE_AUTO_EXTEND_ERROR';\r\nexports[1531] = 'ER_WRONG_SIZE_NUMBER';\r\nexports[1532] = 'ER_SIZE_OVERFLOW_ERROR';\r\nexports[1533] = 'ER_ALTER_FILEGROUP_FAILED';\r\nexports[1534] = 'ER_BINLOG_ROW_LOGGING_FAILED';\r\nexports[1535] = 'ER_BINLOG_ROW_WRONG_TABLE_DEF';\r\nexports[1536] = 'ER_BINLOG_ROW_RBR_TO_SBR';\r\nexports[1537] = 'ER_EVENT_ALREADY_EXISTS';\r\nexports[1538] = 'ER_EVENT_STORE_FAILED';\r\nexports[1539] = 'ER_EVENT_DOES_NOT_EXIST';\r\nexports[1540] = 'ER_EVENT_CANT_ALTER';\r\nexports[1541] = 'ER_EVENT_DROP_FAILED';\r\nexports[1542] = 'ER_EVENT_INTERVAL_NOT_POSITIVE_OR_TOO_BIG';\r\nexports[1543] = 'ER_EVENT_ENDS_BEFORE_STARTS';\r\nexports[1544] = 'ER_EVENT_EXEC_TIME_IN_THE_PAST';\r\nexports[1545] = 'ER_EVENT_OPEN_TABLE_FAILED';\r\nexports[1546] = 'ER_EVENT_NEITHER_M_EXPR_NOR_M_AT';\r\nexports[1547] = 'ER_COL_COUNT_DOESNT_MATCH_CORRUPTED';\r\nexports[1548] = 'ER_CANNOT_LOAD_FROM_TABLE';\r\nexports[1549] = 'ER_EVENT_CANNOT_DELETE';\r\nexports[1550] = 'ER_EVENT_COMPILE_ERROR';\r\nexports[1551] = 'ER_EVENT_SAME_NAME';\r\nexports[1552] = 'ER_EVENT_DATA_TOO_LONG';\r\nexports[1553] = 'ER_DROP_INDEX_FK';\r\nexports[1554] = 'ER_WARN_DEPRECATED_SYNTAX_WITH_VER';\r\nexports[1555] = 'ER_CANT_WRITE_LOCK_LOG_TABLE';\r\nexports[1556] = 'ER_CANT_LOCK_LOG_TABLE';\r\nexports[1557] = 'ER_FOREIGN_DUPLICATE_KEY';\r\nexports[1558] = 'ER_COL_COUNT_DOESNT_MATCH_PLEASE_UPDATE';\r\nexports[1559] = 'ER_TEMP_TABLE_PREVENTS_SWITCH_OUT_OF_RBR';\r\nexports[1560] = 'ER_STORED_FUNCTION_PREVENTS_SWITCH_BINLOG_FORMAT';\r\nexports[1561] = 'ER_NDB_CANT_SWITCH_BINLOG_FORMAT';\r\nexports[1562] = 'ER_PARTITION_NO_TEMPORARY';\r\nexports[1563] = 'ER_PARTITION_CONST_DOMAIN_ERROR';\r\nexports[1564] = 'ER_PARTITION_FUNCTION_IS_NOT_ALLOWED';\r\nexports[1565] = 'ER_DDL_LOG_ERROR';\r\nexports[1566] = 'ER_NULL_IN_VALUES_LESS_THAN';\r\nexports[1567] = 'ER_WRONG_PARTITION_NAME';\r\nexports[1568] = 'ER_CANT_CHANGE_TX_CHARACTERISTICS';\r\nexports[1569] = 'ER_DUP_ENTRY_AUTOINCREMENT_CASE';\r\nexports[1570] = 'ER_EVENT_MODIFY_QUEUE_ERROR';\r\nexports[1571] = 'ER_EVENT_SET_VAR_ERROR';\r\nexports[1572] = 'ER_PARTITION_MERGE_ERROR';\r\nexports[1573] = 'ER_CANT_ACTIVATE_LOG';\r\nexports[1574] = 'ER_RBR_NOT_AVAILABLE';\r\nexports[1575] = 'ER_BASE64_DECODE_ERROR';\r\nexports[1576] = 'ER_EVENT_RECURSION_FORBIDDEN';\r\nexports[1577] = 'ER_EVENTS_DB_ERROR';\r\nexports[1578] = 'ER_ONLY_INTEGERS_ALLOWED';\r\nexports[1579] = 'ER_UNSUPORTED_LOG_ENGINE';\r\nexports[1580] = 'ER_BAD_LOG_STATEMENT';\r\nexports[1581] = 'ER_CANT_RENAME_LOG_TABLE';\r\nexports[1582] = 'ER_WRONG_PARAMCOUNT_TO_NATIVE_FCT';\r\nexports[1583] = 'ER_WRONG_PARAMETERS_TO_NATIVE_FCT';\r\nexports[1584] = 'ER_WRONG_PARAMETERS_TO_STORED_FCT';\r\nexports[1585] = 'ER_NATIVE_FCT_NAME_COLLISION';\r\nexports[1586] = 'ER_DUP_ENTRY_WITH_KEY_NAME';\r\nexports[1587] = 'ER_BINLOG_PURGE_EMFILE';\r\nexports[1588] = 'ER_EVENT_CANNOT_CREATE_IN_THE_PAST';\r\nexports[1589] = 'ER_EVENT_CANNOT_ALTER_IN_THE_PAST';\r\nexports[1590] = 'ER_SLAVE_INCIDENT';\r\nexports[1591] = 'ER_NO_PARTITION_FOR_GIVEN_VALUE_SILENT';\r\nexports[1592] = 'ER_BINLOG_UNSAFE_STATEMENT';\r\nexports[1593] = 'ER_BINLOG_FATAL_ERROR';\r\nexports[1594] = 'ER_SLAVE_RELAY_LOG_READ_FAILURE';\r\nexports[1595] = 'ER_SLAVE_RELAY_LOG_WRITE_FAILURE';\r\nexports[1596] = 'ER_SLAVE_CREATE_EVENT_FAILURE';\r\nexports[1597] = 'ER_SLAVE_MASTER_COM_FAILURE';\r\nexports[1598] = 'ER_BINLOG_LOGGING_IMPOSSIBLE';\r\nexports[1599] = 'ER_VIEW_NO_CREATION_CTX';\r\nexports[1600] = 'ER_VIEW_INVALID_CREATION_CTX';\r\nexports[1601] = 'ER_SR_INVALID_CREATION_CTX';\r\nexports[1602] = 'ER_TRG_CORRUPTED_FILE';\r\nexports[1603] = 'ER_TRG_NO_CREATION_CTX';\r\nexports[1604] = 'ER_TRG_INVALID_CREATION_CTX';\r\nexports[1605] = 'ER_EVENT_INVALID_CREATION_CTX';\r\nexports[1606] = 'ER_TRG_CANT_OPEN_TABLE';\r\nexports[1607] = 'ER_CANT_CREATE_SROUTINE';\r\nexports[1608] = 'ER_NEVER_USED';\r\nexports[1609] = 'ER_NO_FORMAT_DESCRIPTION_EVENT_BEFORE_BINLOG_STATEMENT';\r\nexports[1610] = 'ER_REPLICA_CORRUPT_EVENT';\r\nexports[1611] = 'ER_LOAD_DATA_INVALID_COLUMN';\r\nexports[1612] = 'ER_LOG_PURGE_NO_FILE';\r\nexports[1613] = 'ER_XA_RBTIMEOUT';\r\nexports[1614] = 'ER_XA_RBDEADLOCK';\r\nexports[1615] = 'ER_NEED_REPREPARE';\r\nexports[1616] = 'ER_DELAYED_NOT_SUPPORTED';\r\nexports[1617] = 'WARN_NO_CONNECTION_METADATA';\r\nexports[1618] = 'WARN_OPTION_IGNORED';\r\nexports[1619] = 'ER_PLUGIN_DELETE_BUILTIN';\r\nexports[1620] = 'WARN_PLUGIN_BUSY';\r\nexports[1621] = 'ER_VARIABLE_IS_READONLY';\r\nexports[1622] = 'ER_WARN_ENGINE_TRANSACTION_ROLLBACK';\r\nexports[1623] = 'ER_SLAVE_HEARTBEAT_FAILURE';\r\nexports[1624] = 'ER_REPLICA_HEARTBEAT_VALUE_OUT_OF_RANGE';\r\nexports[1625] = 'ER_NDB_REPLICATION_SCHEMA_ERROR';\r\nexports[1626] = 'ER_CONFLICT_FN_PARSE_ERROR';\r\nexports[1627] = 'ER_EXCEPTIONS_WRITE_ERROR';\r\nexports[1628] = 'ER_TOO_LONG_TABLE_COMMENT';\r\nexports[1629] = 'ER_TOO_LONG_FIELD_COMMENT';\r\nexports[1630] = 'ER_FUNC_INEXISTENT_NAME_COLLISION';\r\nexports[1631] = 'ER_DATABASE_NAME';\r\nexports[1632] = 'ER_TABLE_NAME';\r\nexports[1633] = 'ER_PARTITION_NAME';\r\nexports[1634] = 'ER_SUBPARTITION_NAME';\r\nexports[1635] = 'ER_TEMPORARY_NAME';\r\nexports[1636] = 'ER_RENAMED_NAME';\r\nexports[1637] = 'ER_TOO_MANY_CONCURRENT_TRXS';\r\nexports[1638] = 'WARN_NON_ASCII_SEPARATOR_NOT_IMPLEMENTED';\r\nexports[1639] = 'ER_DEBUG_SYNC_TIMEOUT';\r\nexports[1640] = 'ER_DEBUG_SYNC_HIT_LIMIT';\r\nexports[1641] = 'ER_DUP_SIGNAL_SET';\r\nexports[1642] = 'ER_SIGNAL_WARN';\r\nexports[1643] = 'ER_SIGNAL_NOT_FOUND';\r\nexports[1644] = 'ER_SIGNAL_EXCEPTION';\r\nexports[1645] = 'ER_RESIGNAL_WITHOUT_ACTIVE_HANDLER';\r\nexports[1646] = 'ER_SIGNAL_BAD_CONDITION_TYPE';\r\nexports[1647] = 'WARN_COND_ITEM_TRUNCATED';\r\nexports[1648] = 'ER_COND_ITEM_TOO_LONG';\r\nexports[1649] = 'ER_UNKNOWN_LOCALE';\r\nexports[1650] = 'ER_REPLICA_IGNORE_SERVER_IDS';\r\nexports[1651] = 'ER_QUERY_CACHE_DISABLED';\r\nexports[1652] = 'ER_SAME_NAME_PARTITION_FIELD';\r\nexports[1653] = 'ER_PARTITION_COLUMN_LIST_ERROR';\r\nexports[1654] = 'ER_WRONG_TYPE_COLUMN_VALUE_ERROR';\r\nexports[1655] = 'ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR';\r\nexports[1656] = 'ER_MAXVALUE_IN_VALUES_IN';\r\nexports[1657] = 'ER_TOO_MANY_VALUES_ERROR';\r\nexports[1658] = 'ER_ROW_SINGLE_PARTITION_FIELD_ERROR';\r\nexports[1659] = 'ER_FIELD_TYPE_NOT_ALLOWED_AS_PARTITION_FIELD';\r\nexports[1660] = 'ER_PARTITION_FIELDS_TOO_LONG';\r\nexports[1661] = 'ER_BINLOG_ROW_ENGINE_AND_STMT_ENGINE';\r\nexports[1662] = 'ER_BINLOG_ROW_MODE_AND_STMT_ENGINE';\r\nexports[1663] = 'ER_BINLOG_UNSAFE_AND_STMT_ENGINE';\r\nexports[1664] = 'ER_BINLOG_ROW_INJECTION_AND_STMT_ENGINE';\r\nexports[1665] = 'ER_BINLOG_STMT_MODE_AND_ROW_ENGINE';\r\nexports[1666] = 'ER_BINLOG_ROW_INJECTION_AND_STMT_MODE';\r\nexports[1667] = 'ER_BINLOG_MULTIPLE_ENGINES_AND_SELF_LOGGING_ENGINE';\r\nexports[1668] = 'ER_BINLOG_UNSAFE_LIMIT';\r\nexports[1669] = 'ER_UNUSED4';\r\nexports[1670] = 'ER_BINLOG_UNSAFE_SYSTEM_TABLE';\r\nexports[1671] = 'ER_BINLOG_UNSAFE_AUTOINC_COLUMNS';\r\nexports[1672] = 'ER_BINLOG_UNSAFE_UDF';\r\nexports[1673] = 'ER_BINLOG_UNSAFE_SYSTEM_VARIABLE';\r\nexports[1674] = 'ER_BINLOG_UNSAFE_SYSTEM_FUNCTION';\r\nexports[1675] = 'ER_BINLOG_UNSAFE_NONTRANS_AFTER_TRANS';\r\nexports[1676] = 'ER_MESSAGE_AND_STATEMENT';\r\nexports[1677] = 'ER_SLAVE_CONVERSION_FAILED';\r\nexports[1678] = 'ER_REPLICA_CANT_CREATE_CONVERSION';\r\nexports[1679] = 'ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_BINLOG_FORMAT';\r\nexports[1680] = 'ER_PATH_LENGTH';\r\nexports[1681] = 'ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT';\r\nexports[1682] = 'ER_WRONG_NATIVE_TABLE_STRUCTURE';\r\nexports[1683] = 'ER_WRONG_PERFSCHEMA_USAGE';\r\nexports[1684] = 'ER_WARN_I_S_SKIPPED_TABLE';\r\nexports[1685] = 'ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_BINLOG_DIRECT';\r\nexports[1686] = 'ER_STORED_FUNCTION_PREVENTS_SWITCH_BINLOG_DIRECT';\r\nexports[1687] = 'ER_SPATIAL_MUST_HAVE_GEOM_COL';\r\nexports[1688] = 'ER_TOO_LONG_INDEX_COMMENT';\r\nexports[1689] = 'ER_LOCK_ABORTED';\r\nexports[1690] = 'ER_DATA_OUT_OF_RANGE';\r\nexports[1691] = 'ER_WRONG_SPVAR_TYPE_IN_LIMIT';\r\nexports[1692] = 'ER_BINLOG_UNSAFE_MULTIPLE_ENGINES_AND_SELF_LOGGING_ENGINE';\r\nexports[1693] = 'ER_BINLOG_UNSAFE_MIXED_STATEMENT';\r\nexports[1694] = 'ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_SQL_LOG_BIN';\r\nexports[1695] = 'ER_STORED_FUNCTION_PREVENTS_SWITCH_SQL_LOG_BIN';\r\nexports[1696] = 'ER_FAILED_READ_FROM_PAR_FILE';\r\nexports[1697] = 'ER_VALUES_IS_NOT_INT_TYPE_ERROR';\r\nexports[1698] = 'ER_ACCESS_DENIED_NO_PASSWORD_ERROR';\r\nexports[1699] = 'ER_SET_PASSWORD_AUTH_PLUGIN';\r\nexports[1700] = 'ER_GRANT_PLUGIN_USER_EXISTS';\r\nexports[1701] = 'ER_TRUNCATE_ILLEGAL_FK';\r\nexports[1702] = 'ER_PLUGIN_IS_PERMANENT';\r\nexports[1703] = 'ER_REPLICA_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN';\r\nexports[1704] = 'ER_REPLICA_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX';\r\nexports[1705] = 'ER_STMT_CACHE_FULL';\r\nexports[1706] = 'ER_MULTI_UPDATE_KEY_CONFLICT';\r\nexports[1707] = 'ER_TABLE_NEEDS_REBUILD';\r\nexports[1708] = 'WARN_OPTION_BELOW_LIMIT';\r\nexports[1709] = 'ER_INDEX_COLUMN_TOO_LONG';\r\nexports[1710] = 'ER_ERROR_IN_TRIGGER_BODY';\r\nexports[1711] = 'ER_ERROR_IN_UNKNOWN_TRIGGER_BODY';\r\nexports[1712] = 'ER_INDEX_CORRUPT';\r\nexports[1713] = 'ER_UNDO_RECORD_TOO_BIG';\r\nexports[1714] = 'ER_BINLOG_UNSAFE_INSERT_IGNORE_SELECT';\r\nexports[1715] = 'ER_BINLOG_UNSAFE_INSERT_SELECT_UPDATE';\r\nexports[1716] = 'ER_BINLOG_UNSAFE_REPLACE_SELECT';\r\nexports[1717] = 'ER_BINLOG_UNSAFE_CREATE_IGNORE_SELECT';\r\nexports[1718] = 'ER_BINLOG_UNSAFE_CREATE_REPLACE_SELECT';\r\nexports[1719] = 'ER_BINLOG_UNSAFE_UPDATE_IGNORE';\r\nexports[1720] = 'ER_PLUGIN_NO_UNINSTALL';\r\nexports[1721] = 'ER_PLUGIN_NO_INSTALL';\r\nexports[1722] = 'ER_BINLOG_UNSAFE_WRITE_AUTOINC_SELECT';\r\nexports[1723] = 'ER_BINLOG_UNSAFE_CREATE_SELECT_AUTOINC';\r\nexports[1724] = 'ER_BINLOG_UNSAFE_INSERT_TWO_KEYS';\r\nexports[1725] = 'ER_TABLE_IN_FK_CHECK';\r\nexports[1726] = 'ER_UNSUPPORTED_ENGINE';\r\nexports[1727] = 'ER_BINLOG_UNSAFE_AUTOINC_NOT_FIRST';\r\nexports[1728] = 'ER_CANNOT_LOAD_FROM_TABLE_V2';\r\nexports[1729] = 'ER_SOURCE_DELAY_VALUE_OUT_OF_RANGE';\r\nexports[1730] = 'ER_ONLY_FD_AND_RBR_EVENTS_ALLOWED_IN_BINLOG_STATEMENT';\r\nexports[1731] = 'ER_PARTITION_EXCHANGE_DIFFERENT_OPTION';\r\nexports[1732] = 'ER_PARTITION_EXCHANGE_PART_TABLE';\r\nexports[1733] = 'ER_PARTITION_EXCHANGE_TEMP_TABLE';\r\nexports[1734] = 'ER_PARTITION_INSTEAD_OF_SUBPARTITION';\r\nexports[1735] = 'ER_UNKNOWN_PARTITION';\r\nexports[1736] = 'ER_TABLES_DIFFERENT_METADATA';\r\nexports[1737] = 'ER_ROW_DOES_NOT_MATCH_PARTITION';\r\nexports[1738] = 'ER_BINLOG_CACHE_SIZE_GREATER_THAN_MAX';\r\nexports[1739] = 'ER_WARN_INDEX_NOT_APPLICABLE';\r\nexports[1740] = 'ER_PARTITION_EXCHANGE_FOREIGN_KEY';\r\nexports[1741] = 'ER_NO_SUCH_KEY_VALUE';\r\nexports[1742] = 'ER_RPL_INFO_DATA_TOO_LONG';\r\nexports[1743] = 'ER_NETWORK_READ_EVENT_CHECKSUM_FAILURE';\r\nexports[1744] = 'ER_BINLOG_READ_EVENT_CHECKSUM_FAILURE';\r\nexports[1745] = 'ER_BINLOG_STMT_CACHE_SIZE_GREATER_THAN_MAX';\r\nexports[1746] = 'ER_CANT_UPDATE_TABLE_IN_CREATE_TABLE_SELECT';\r\nexports[1747] = 'ER_PARTITION_CLAUSE_ON_NONPARTITIONED';\r\nexports[1748] = 'ER_ROW_DOES_NOT_MATCH_GIVEN_PARTITION_SET';\r\nexports[1749] = 'ER_NO_SUCH_PARTITION';\r\nexports[1750] = 'ER_CHANGE_RPL_INFO_REPOSITORY_FAILURE';\r\nexports[1751] = 'ER_WARNING_NOT_COMPLETE_ROLLBACK_WITH_CREATED_TEMP_TABLE';\r\nexports[1752] = 'ER_WARNING_NOT_COMPLETE_ROLLBACK_WITH_DROPPED_TEMP_TABLE';\r\nexports[1753] = 'ER_MTA_FEATURE_IS_NOT_SUPPORTED';\r\nexports[1754] = 'ER_MTA_UPDATED_DBS_GREATER_MAX';\r\nexports[1755] = 'ER_MTA_CANT_PARALLEL';\r\nexports[1756] = 'ER_MTA_INCONSISTENT_DATA';\r\nexports[1757] = 'ER_FULLTEXT_NOT_SUPPORTED_WITH_PARTITIONING';\r\nexports[1758] = 'ER_DA_INVALID_CONDITION_NUMBER';\r\nexports[1759] = 'ER_INSECURE_PLAIN_TEXT';\r\nexports[1760] = 'ER_INSECURE_CHANGE_SOURCE';\r\nexports[1761] = 'ER_FOREIGN_DUPLICATE_KEY_WITH_CHILD_INFO';\r\nexports[1762] = 'ER_FOREIGN_DUPLICATE_KEY_WITHOUT_CHILD_INFO';\r\nexports[1763] = 'ER_SQLTHREAD_WITH_SECURE_REPLICA';\r\nexports[1764] = 'ER_TABLE_HAS_NO_FT';\r\nexports[1765] = 'ER_VARIABLE_NOT_SETTABLE_IN_SF_OR_TRIGGER';\r\nexports[1766] = 'ER_VARIABLE_NOT_SETTABLE_IN_TRANSACTION';\r\nexports[1767] = 'ER_GTID_NEXT_IS_NOT_IN_GTID_NEXT_LIST';\r\nexports[1768] = 'ER_CANT_CHANGE_GTID_NEXT_IN_TRANSACTION';\r\nexports[1769] = 'ER_SET_STATEMENT_CANNOT_INVOKE_FUNCTION';\r\nexports[1770] = 'ER_GTID_NEXT_CANT_BE_AUTOMATIC_IF_GTID_NEXT_LIST_IS_NON_NULL';\r\nexports[1771] = 'ER_SKIPPING_LOGGED_TRANSACTION';\r\nexports[1772] = 'ER_MALFORMED_GTID_SET_SPECIFICATION';\r\nexports[1773] = 'ER_MALFORMED_GTID_SET_ENCODING';\r\nexports[1774] = 'ER_MALFORMED_GTID_SPECIFICATION';\r\nexports[1775] = 'ER_GNO_EXHAUSTED';\r\nexports[1776] = 'ER_BAD_REPLICA_AUTO_POSITION';\r\nexports[1777] = 'ER_AUTO_POSITION_REQUIRES_GTID_MODE_NOT_OFF';\r\nexports[1778] = 'ER_CANT_DO_IMPLICIT_COMMIT_IN_TRX_WHEN_GTID_NEXT_IS_SET';\r\nexports[1779] = 'ER_GTID_MODE_ON_REQUIRES_ENFORCE_GTID_CONSISTENCY_ON';\r\nexports[1780] = 'ER_GTID_MODE_REQUIRES_BINLOG';\r\nexports[1781] = 'ER_CANT_SET_GTID_NEXT_TO_GTID_WHEN_GTID_MODE_IS_OFF';\r\nexports[1782] = 'ER_CANT_SET_GTID_NEXT_TO_ANONYMOUS_WHEN_GTID_MODE_IS_ON';\r\nexports[1783] = 'ER_CANT_SET_GTID_NEXT_LIST_TO_NON_NULL_WHEN_GTID_MODE_IS_OFF';\r\nexports[1784] = 'ER_FOUND_GTID_EVENT_WHEN_GTID_MODE_IS_OFF';\r\nexports[1785] = 'ER_GTID_UNSAFE_NON_TRANSACTIONAL_TABLE';\r\nexports[1786] = 'ER_GTID_UNSAFE_CREATE_SELECT';\r\nexports[1787] = 'ER_GTID_UNSAFE_CREATE_DROP_TEMP_TABLE_IN_TRANSACTION';\r\nexports[1788] = 'ER_GTID_MODE_CAN_ONLY_CHANGE_ONE_STEP_AT_A_TIME';\r\nexports[1789] = 'ER_SOURCE_HAS_PURGED_REQUIRED_GTIDS';\r\nexports[1790] = 'ER_CANT_SET_GTID_NEXT_WHEN_OWNING_GTID';\r\nexports[1791] = 'ER_UNKNOWN_EXPLAIN_FORMAT';\r\nexports[1792] = 'ER_CANT_EXECUTE_IN_READ_ONLY_TRANSACTION';\r\nexports[1793] = 'ER_TOO_LONG_TABLE_PARTITION_COMMENT';\r\nexports[1794] = 'ER_REPLICA_CONFIGURATION';\r\nexports[1795] = 'ER_INNODB_FT_LIMIT';\r\nexports[1796] = 'ER_INNODB_NO_FT_TEMP_TABLE';\r\nexports[1797] = 'ER_INNODB_FT_WRONG_DOCID_COLUMN';\r\nexports[1798] = 'ER_INNODB_FT_WRONG_DOCID_INDEX';\r\nexports[1799] = 'ER_INNODB_ONLINE_LOG_TOO_BIG';\r\nexports[1800] = 'ER_UNKNOWN_ALTER_ALGORITHM';\r\nexports[1801] = 'ER_UNKNOWN_ALTER_LOCK';\r\nexports[1802] = 'ER_MTA_CHANGE_SOURCE_CANT_RUN_WITH_GAPS';\r\nexports[1803] = 'ER_MTA_RECOVERY_FAILURE';\r\nexports[1804] = 'ER_MTA_RESET_WORKERS';\r\nexports[1805] = 'ER_COL_COUNT_DOESNT_MATCH_CORRUPTED_V2';\r\nexports[1806] = 'ER_REPLICA_SILENT_RETRY_TRANSACTION';\r\nexports[1807] = 'ER_DISCARD_FK_CHECKS_RUNNING';\r\nexports[1808] = 'ER_TABLE_SCHEMA_MISMATCH';\r\nexports[1809] = 'ER_TABLE_IN_SYSTEM_TABLESPACE';\r\nexports[1810] = 'ER_IO_READ_ERROR';\r\nexports[1811] = 'ER_IO_WRITE_ERROR';\r\nexports[1812] = 'ER_TABLESPACE_MISSING';\r\nexports[1813] = 'ER_TABLESPACE_EXISTS';\r\nexports[1814] = 'ER_TABLESPACE_DISCARDED';\r\nexports[1815] = 'ER_INTERNAL_ERROR';\r\nexports[1816] = 'ER_INNODB_IMPORT_ERROR';\r\nexports[1817] = 'ER_INNODB_INDEX_CORRUPT';\r\nexports[1818] = 'ER_INVALID_YEAR_COLUMN_LENGTH';\r\nexports[1819] = 'ER_NOT_VALID_PASSWORD';\r\nexports[1820] = 'ER_MUST_CHANGE_PASSWORD';\r\nexports[1821] = 'ER_FK_NO_INDEX_CHILD';\r\nexports[1822] = 'ER_FK_NO_INDEX_PARENT';\r\nexports[1823] = 'ER_FK_FAIL_ADD_SYSTEM';\r\nexports[1824] = 'ER_FK_CANNOT_OPEN_PARENT';\r\nexports[1825] = 'ER_FK_INCORRECT_OPTION';\r\nexports[1826] = 'ER_FK_DUP_NAME';\r\nexports[1827] = 'ER_PASSWORD_FORMAT';\r\nexports[1828] = 'ER_FK_COLUMN_CANNOT_DROP';\r\nexports[1829] = 'ER_FK_COLUMN_CANNOT_DROP_CHILD';\r\nexports[1830] = 'ER_FK_COLUMN_NOT_NULL';\r\nexports[1831] = 'ER_DUP_INDEX';\r\nexports[1832] = 'ER_FK_COLUMN_CANNOT_CHANGE';\r\nexports[1833] = 'ER_FK_COLUMN_CANNOT_CHANGE_CHILD';\r\nexports[1834] = 'ER_UNUSED5';\r\nexports[1835] = 'ER_MALFORMED_PACKET';\r\nexports[1836] = 'ER_READ_ONLY_MODE';\r\nexports[1837] = 'ER_GTID_NEXT_TYPE_UNDEFINED_GTID';\r\nexports[1838] = 'ER_VARIABLE_NOT_SETTABLE_IN_SP';\r\nexports[1839] = 'ER_CANT_SET_GTID_PURGED_WHEN_GTID_MODE_IS_OFF';\r\nexports[1840] = 'ER_CANT_SET_GTID_PURGED_WHEN_GTID_EXECUTED_IS_NOT_EMPTY';\r\nexports[1841] = 'ER_CANT_SET_GTID_PURGED_WHEN_OWNED_GTIDS_IS_NOT_EMPTY';\r\nexports[1842] = 'ER_GTID_PURGED_WAS_CHANGED';\r\nexports[1843] = 'ER_GTID_EXECUTED_WAS_CHANGED';\r\nexports[1844] = 'ER_BINLOG_STMT_MODE_AND_NO_REPL_TABLES';\r\nexports[1845] = 'ER_ALTER_OPERATION_NOT_SUPPORTED';\r\nexports[1846] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON';\r\nexports[1847] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_COPY';\r\nexports[1848] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_PARTITION';\r\nexports[1849] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FK_RENAME';\r\nexports[1850] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_COLUMN_TYPE';\r\nexports[1851] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FK_CHECK';\r\nexports[1852] = 'ER_UNUSED6';\r\nexports[1853] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_NOPK';\r\nexports[1854] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_AUTOINC';\r\nexports[1855] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_HIDDEN_FTS';\r\nexports[1856] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_CHANGE_FTS';\r\nexports[1857] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FTS';\r\nexports[1858] = 'ER_SQL_REPLICA_SKIP_COUNTER_NOT_SETTABLE_IN_GTID_MODE';\r\nexports[1859] = 'ER_DUP_UNKNOWN_IN_INDEX';\r\nexports[1860] = 'ER_IDENT_CAUSES_TOO_LONG_PATH';\r\nexports[1861] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_NOT_NULL';\r\nexports[1862] = 'ER_MUST_CHANGE_PASSWORD_LOGIN';\r\nexports[1863] = 'ER_ROW_IN_WRONG_PARTITION';\r\nexports[1864] = 'ER_MTA_EVENT_BIGGER_PENDING_JOBS_SIZE_MAX';\r\nexports[1865] = 'ER_INNODB_NO_FT_USES_PARSER';\r\nexports[1866] = 'ER_BINLOG_LOGICAL_CORRUPTION';\r\nexports[1867] = 'ER_WARN_PURGE_LOG_IN_USE';\r\nexports[1868] = 'ER_WARN_PURGE_LOG_IS_ACTIVE';\r\nexports[1869] = 'ER_AUTO_INCREMENT_CONFLICT';\r\nexports[1870] = 'WARN_ON_BLOCKHOLE_IN_RBR';\r\nexports[1871] = 'ER_REPLICA_CM_INIT_REPOSITORY';\r\nexports[1872] = 'ER_REPLICA_AM_INIT_REPOSITORY';\r\nexports[1873] = 'ER_ACCESS_DENIED_CHANGE_USER_ERROR';\r\nexports[1874] = 'ER_INNODB_READ_ONLY';\r\nexports[1875] = 'ER_STOP_REPLICA_SQL_THREAD_TIMEOUT';\r\nexports[1876] = 'ER_STOP_REPLICA_IO_THREAD_TIMEOUT';\r\nexports[1877] = 'ER_TABLE_CORRUPT';\r\nexports[1878] = 'ER_TEMP_FILE_WRITE_FAILURE';\r\nexports[1879] = 'ER_INNODB_FT_AUX_NOT_HEX_ID';\r\nexports[1880] = 'ER_OLD_TEMPORALS_UPGRADED';\r\nexports[1881] = 'ER_INNODB_FORCED_RECOVERY';\r\nexports[1882] = 'ER_AES_INVALID_IV';\r\nexports[1883] = 'ER_PLUGIN_CANNOT_BE_UNINSTALLED';\r\nexports[1884] = 'ER_GTID_UNSAFE_BINLOG_SPLITTABLE_STATEMENT_AND_ASSIGNED_GTID';\r\nexports[1885] = 'ER_REPLICA_HAS_MORE_GTIDS_THAN_SOURCE';\r\nexports[1886] = 'ER_MISSING_KEY';\r\nexports[1887] = 'WARN_NAMED_PIPE_ACCESS_EVERYONE';\r\nexports[3000] = 'ER_FILE_CORRUPT';\r\nexports[3001] = 'ER_ERROR_ON_SOURCE';\r\nexports[3002] = 'ER_INCONSISTENT_ERROR';\r\nexports[3003] = 'ER_STORAGE_ENGINE_NOT_LOADED';\r\nexports[3004] = 'ER_GET_STACKED_DA_WITHOUT_ACTIVE_HANDLER';\r\nexports[3005] = 'ER_WARN_LEGACY_SYNTAX_CONVERTED';\r\nexports[3006] = 'ER_BINLOG_UNSAFE_FULLTEXT_PLUGIN';\r\nexports[3007] = 'ER_CANNOT_DISCARD_TEMPORARY_TABLE';\r\nexports[3008] = 'ER_FK_DEPTH_EXCEEDED';\r\nexports[3009] = 'ER_COL_COUNT_DOESNT_MATCH_PLEASE_UPDATE_V2';\r\nexports[3010] = 'ER_WARN_TRIGGER_DOESNT_HAVE_CREATED';\r\nexports[3011] = 'ER_REFERENCED_TRG_DOES_NOT_EXIST';\r\nexports[3012] = 'ER_EXPLAIN_NOT_SUPPORTED';\r\nexports[3013] = 'ER_INVALID_FIELD_SIZE';\r\nexports[3014] = 'ER_MISSING_HA_CREATE_OPTION';\r\nexports[3015] = 'ER_ENGINE_OUT_OF_MEMORY';\r\nexports[3016] = 'ER_PASSWORD_EXPIRE_ANONYMOUS_USER';\r\nexports[3017] = 'ER_REPLICA_SQL_THREAD_MUST_STOP';\r\nexports[3018] = 'ER_NO_FT_MATERIALIZED_SUBQUERY';\r\nexports[3019] = 'ER_INNODB_UNDO_LOG_FULL';\r\nexports[3020] = 'ER_INVALID_ARGUMENT_FOR_LOGARITHM';\r\nexports[3021] = 'ER_REPLICA_CHANNEL_IO_THREAD_MUST_STOP';\r\nexports[3022] = 'ER_WARN_OPEN_TEMP_TABLES_MUST_BE_ZERO';\r\nexports[3023] = 'ER_WARN_ONLY_SOURCE_LOG_FILE_NO_POS';\r\nexports[3024] = 'ER_QUERY_TIMEOUT';\r\nexports[3025] = 'ER_NON_RO_SELECT_DISABLE_TIMER';\r\nexports[3026] = 'ER_DUP_LIST_ENTRY';\r\nexports[3027] = 'ER_SQL_MODE_NO_EFFECT';\r\nexports[3028] = 'ER_AGGREGATE_ORDER_FOR_UNION';\r\nexports[3029] = 'ER_AGGREGATE_ORDER_NON_AGG_QUERY';\r\nexports[3030] = 'ER_REPLICA_WORKER_STOPPED_PREVIOUS_THD_ERROR';\r\nexports[3031] = 'ER_DONT_SUPPORT_REPLICA_PRESERVE_COMMIT_ORDER';\r\nexports[3032] = 'ER_SERVER_OFFLINE_MODE';\r\nexports[3033] = 'ER_GIS_DIFFERENT_SRIDS';\r\nexports[3034] = 'ER_GIS_UNSUPPORTED_ARGUMENT';\r\nexports[3035] = 'ER_GIS_UNKNOWN_ERROR';\r\nexports[3036] = 'ER_GIS_UNKNOWN_EXCEPTION';\r\nexports[3037] = 'ER_GIS_INVALID_DATA';\r\nexports[3038] = 'ER_BOOST_GEOMETRY_EMPTY_INPUT_EXCEPTION';\r\nexports[3039] = 'ER_BOOST_GEOMETRY_CENTROID_EXCEPTION';\r\nexports[3040] = 'ER_BOOST_GEOMETRY_OVERLAY_INVALID_INPUT_EXCEPTION';\r\nexports[3041] = 'ER_BOOST_GEOMETRY_TURN_INFO_EXCEPTION';\r\nexports[3042] = 'ER_BOOST_GEOMETRY_SELF_INTERSECTION_POINT_EXCEPTION';\r\nexports[3043] = 'ER_BOOST_GEOMETRY_UNKNOWN_EXCEPTION';\r\nexports[3044] = 'ER_STD_BAD_ALLOC_ERROR';\r\nexports[3045] = 'ER_STD_DOMAIN_ERROR';\r\nexports[3046] = 'ER_STD_LENGTH_ERROR';\r\nexports[3047] = 'ER_STD_INVALID_ARGUMENT';\r\nexports[3048] = 'ER_STD_OUT_OF_RANGE_ERROR';\r\nexports[3049] = 'ER_STD_OVERFLOW_ERROR';\r\nexports[3050] = 'ER_STD_RANGE_ERROR';\r\nexports[3051] = 'ER_STD_UNDERFLOW_ERROR';\r\nexports[3052] = 'ER_STD_LOGIC_ERROR';\r\nexports[3053] = 'ER_STD_RUNTIME_ERROR';\r\nexports[3054] = 'ER_STD_UNKNOWN_EXCEPTION';\r\nexports[3055] = 'ER_GIS_DATA_WRONG_ENDIANESS';\r\nexports[3056] = 'ER_CHANGE_SOURCE_PASSWORD_LENGTH';\r\nexports[3057] = 'ER_USER_LOCK_WRONG_NAME';\r\nexports[3058] = 'ER_USER_LOCK_DEADLOCK';\r\nexports[3059] = 'ER_REPLACE_INACCESSIBLE_ROWS';\r\nexports[3060] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_GIS';\r\nexports[3061] = 'ER_ILLEGAL_USER_VAR';\r\nexports[3062] = 'ER_GTID_MODE_OFF';\r\nexports[3063] = 'ER_UNSUPPORTED_BY_REPLICATION_THREAD';\r\nexports[3064] = 'ER_INCORRECT_TYPE';\r\nexports[3065] = 'ER_FIELD_IN_ORDER_NOT_SELECT';\r\nexports[3066] = 'ER_AGGREGATE_IN_ORDER_NOT_SELECT';\r\nexports[3067] = 'ER_INVALID_RPL_WILD_TABLE_FILTER_PATTERN';\r\nexports[3068] = 'ER_NET_OK_PACKET_TOO_LARGE';\r\nexports[3069] = 'ER_INVALID_JSON_DATA';\r\nexports[3070] = 'ER_INVALID_GEOJSON_MISSING_MEMBER';\r\nexports[3071] = 'ER_INVALID_GEOJSON_WRONG_TYPE';\r\nexports[3072] = 'ER_INVALID_GEOJSON_UNSPECIFIED';\r\nexports[3073] = 'ER_DIMENSION_UNSUPPORTED';\r\nexports[3074] = 'ER_REPLICA_CHANNEL_DOES_NOT_EXIST';\r\nexports[3075] = 'ER_SLAVE_MULTIPLE_CHANNELS_HOST_PORT';\r\nexports[3076] = 'ER_REPLICA_CHANNEL_NAME_INVALID_OR_TOO_LONG';\r\nexports[3077] = 'ER_REPLICA_NEW_CHANNEL_WRONG_REPOSITORY';\r\nexports[3078] = 'ER_SLAVE_CHANNEL_DELETE';\r\nexports[3079] = 'ER_REPLICA_MULTIPLE_CHANNELS_CMD';\r\nexports[3080] = 'ER_REPLICA_MAX_CHANNELS_EXCEEDED';\r\nexports[3081] = 'ER_REPLICA_CHANNEL_MUST_STOP';\r\nexports[3082] = 'ER_REPLICA_CHANNEL_NOT_RUNNING';\r\nexports[3083] = 'ER_REPLICA_CHANNEL_WAS_RUNNING';\r\nexports[3084] = 'ER_REPLICA_CHANNEL_WAS_NOT_RUNNING';\r\nexports[3085] = 'ER_REPLICA_CHANNEL_SQL_THREAD_MUST_STOP';\r\nexports[3086] = 'ER_REPLICA_CHANNEL_SQL_SKIP_COUNTER';\r\nexports[3087] = 'ER_WRONG_FIELD_WITH_GROUP_V2';\r\nexports[3088] = 'ER_MIX_OF_GROUP_FUNC_AND_FIELDS_V2';\r\nexports[3089] = 'ER_WARN_DEPRECATED_SYSVAR_UPDATE';\r\nexports[3090] = 'ER_WARN_DEPRECATED_SQLMODE';\r\nexports[3091] = 'ER_CANNOT_LOG_PARTIAL_DROP_DATABASE_WITH_GTID';\r\nexports[3092] = 'ER_GROUP_REPLICATION_CONFIGURATION';\r\nexports[3093] = 'ER_GROUP_REPLICATION_RUNNING';\r\nexports[3094] = 'ER_GROUP_REPLICATION_APPLIER_INIT_ERROR';\r\nexports[3095] = 'ER_GROUP_REPLICATION_STOP_APPLIER_THREAD_TIMEOUT';\r\nexports[3096] = 'ER_GROUP_REPLICATION_COMMUNICATION_LAYER_SESSION_ERROR';\r\nexports[3097] = 'ER_GROUP_REPLICATION_COMMUNICATION_LAYER_JOIN_ERROR';\r\nexports[3098] = 'ER_BEFORE_DML_VALIDATION_ERROR';\r\nexports[3099] = 'ER_PREVENTS_VARIABLE_WITHOUT_RBR';\r\nexports[3100] = 'ER_RUN_HOOK_ERROR';\r\nexports[3101] = 'ER_TRANSACTION_ROLLBACK_DURING_COMMIT';\r\nexports[3102] = 'ER_GENERATED_COLUMN_FUNCTION_IS_NOT_ALLOWED';\r\nexports[3103] = 'ER_UNSUPPORTED_ALTER_INPLACE_ON_VIRTUAL_COLUMN';\r\nexports[3104] = 'ER_WRONG_FK_OPTION_FOR_GENERATED_COLUMN';\r\nexports[3105] = 'ER_NON_DEFAULT_VALUE_FOR_GENERATED_COLUMN';\r\nexports[3106] = 'ER_UNSUPPORTED_ACTION_ON_GENERATED_COLUMN';\r\nexports[3107] = 'ER_GENERATED_COLUMN_NON_PRIOR';\r\nexports[3108] = 'ER_DEPENDENT_BY_GENERATED_COLUMN';\r\nexports[3109] = 'ER_GENERATED_COLUMN_REF_AUTO_INC';\r\nexports[3110] = 'ER_FEATURE_NOT_AVAILABLE';\r\nexports[3111] = 'ER_CANT_SET_GTID_MODE';\r\nexports[3112] = 'ER_CANT_USE_AUTO_POSITION_WITH_GTID_MODE_OFF';\r\nexports[3113] = 'ER_CANT_REPLICATE_ANONYMOUS_WITH_AUTO_POSITION';\r\nexports[3114] = 'ER_CANT_REPLICATE_ANONYMOUS_WITH_GTID_MODE_ON';\r\nexports[3115] = 'ER_CANT_REPLICATE_GTID_WITH_GTID_MODE_OFF';\r\nexports[3116] =\r\n  'ER_CANT_ENFORCE_GTID_CONSISTENCY_WITH_ONGOING_GTID_VIOLATING_TX';\r\nexports[3117] =\r\n  'ER_ENFORCE_GTID_CONSISTENCY_WARN_WITH_ONGOING_GTID_VIOLATING_TX';\r\nexports[3118] = 'ER_ACCOUNT_HAS_BEEN_LOCKED';\r\nexports[3119] = 'ER_WRONG_TABLESPACE_NAME';\r\nexports[3120] = 'ER_TABLESPACE_IS_NOT_EMPTY';\r\nexports[3121] = 'ER_WRONG_FILE_NAME';\r\nexports[3122] = 'ER_BOOST_GEOMETRY_INCONSISTENT_TURNS_EXCEPTION';\r\nexports[3123] = 'ER_WARN_OPTIMIZER_HINT_SYNTAX_ERROR';\r\nexports[3124] = 'ER_WARN_BAD_MAX_EXECUTION_TIME';\r\nexports[3125] = 'ER_WARN_UNSUPPORTED_MAX_EXECUTION_TIME';\r\nexports[3126] = 'ER_WARN_CONFLICTING_HINT';\r\nexports[3127] = 'ER_WARN_UNKNOWN_QB_NAME';\r\nexports[3128] = 'ER_UNRESOLVED_HINT_NAME';\r\nexports[3129] = 'ER_WARN_ON_MODIFYING_GTID_EXECUTED_TABLE';\r\nexports[3130] = 'ER_PLUGGABLE_PROTOCOL_COMMAND_NOT_SUPPORTED';\r\nexports[3131] = 'ER_LOCKING_SERVICE_WRONG_NAME';\r\nexports[3132] = 'ER_LOCKING_SERVICE_DEADLOCK';\r\nexports[3133] = 'ER_LOCKING_SERVICE_TIMEOUT';\r\nexports[3134] = 'ER_GIS_MAX_POINTS_IN_GEOMETRY_OVERFLOWED';\r\nexports[3135] = 'ER_SQL_MODE_MERGED';\r\nexports[3136] = 'ER_VTOKEN_PLUGIN_TOKEN_MISMATCH';\r\nexports[3137] = 'ER_VTOKEN_PLUGIN_TOKEN_NOT_FOUND';\r\nexports[3138] = 'ER_CANT_SET_VARIABLE_WHEN_OWNING_GTID';\r\nexports[3139] = 'ER_REPLICA_CHANNEL_OPERATION_NOT_ALLOWED';\r\nexports[3140] = 'ER_INVALID_JSON_TEXT';\r\nexports[3141] = 'ER_INVALID_JSON_TEXT_IN_PARAM';\r\nexports[3142] = 'ER_INVALID_JSON_BINARY_DATA';\r\nexports[3143] = 'ER_INVALID_JSON_PATH';\r\nexports[3144] = 'ER_INVALID_JSON_CHARSET';\r\nexports[3145] = 'ER_INVALID_JSON_CHARSET_IN_FUNCTION';\r\nexports[3146] = 'ER_INVALID_TYPE_FOR_JSON';\r\nexports[3147] = 'ER_INVALID_CAST_TO_JSON';\r\nexports[3148] = 'ER_INVALID_JSON_PATH_CHARSET';\r\nexports[3149] = 'ER_INVALID_JSON_PATH_WILDCARD';\r\nexports[3150] = 'ER_JSON_VALUE_TOO_BIG';\r\nexports[3151] = 'ER_JSON_KEY_TOO_BIG';\r\nexports[3152] = 'ER_JSON_USED_AS_KEY';\r\nexports[3153] = 'ER_JSON_VACUOUS_PATH';\r\nexports[3154] = 'ER_JSON_BAD_ONE_OR_ALL_ARG';\r\nexports[3155] = 'ER_NUMERIC_JSON_VALUE_OUT_OF_RANGE';\r\nexports[3156] = 'ER_INVALID_JSON_VALUE_FOR_CAST';\r\nexports[3157] = 'ER_JSON_DOCUMENT_TOO_DEEP';\r\nexports[3158] = 'ER_JSON_DOCUMENT_NULL_KEY';\r\nexports[3159] = 'ER_SECURE_TRANSPORT_REQUIRED';\r\nexports[3160] = 'ER_NO_SECURE_TRANSPORTS_CONFIGURED';\r\nexports[3161] = 'ER_DISABLED_STORAGE_ENGINE';\r\nexports[3162] = 'ER_USER_DOES_NOT_EXIST';\r\nexports[3163] = 'ER_USER_ALREADY_EXISTS';\r\nexports[3164] = 'ER_AUDIT_API_ABORT';\r\nexports[3165] = 'ER_INVALID_JSON_PATH_ARRAY_CELL';\r\nexports[3166] = 'ER_BUFPOOL_RESIZE_INPROGRESS';\r\nexports[3167] = 'ER_FEATURE_DISABLED_SEE_DOC';\r\nexports[3168] = 'ER_SERVER_ISNT_AVAILABLE';\r\nexports[3169] = 'ER_SESSION_WAS_KILLED';\r\nexports[3170] = 'ER_CAPACITY_EXCEEDED';\r\nexports[3171] = 'ER_CAPACITY_EXCEEDED_IN_RANGE_OPTIMIZER';\r\nexports[3172] = 'ER_TABLE_NEEDS_UPG_PART';\r\nexports[3173] = 'ER_CANT_WAIT_FOR_EXECUTED_GTID_SET_WHILE_OWNING_A_GTID';\r\nexports[3174] = 'ER_CANNOT_ADD_FOREIGN_BASE_COL_VIRTUAL';\r\nexports[3175] = 'ER_CANNOT_CREATE_VIRTUAL_INDEX_CONSTRAINT';\r\nexports[3176] = 'ER_ERROR_ON_MODIFYING_GTID_EXECUTED_TABLE';\r\nexports[3177] = 'ER_LOCK_REFUSED_BY_ENGINE';\r\nexports[3178] = 'ER_UNSUPPORTED_ALTER_ONLINE_ON_VIRTUAL_COLUMN';\r\nexports[3179] = 'ER_MASTER_KEY_ROTATION_NOT_SUPPORTED_BY_SE';\r\nexports[3180] = 'ER_MASTER_KEY_ROTATION_ERROR_BY_SE';\r\nexports[3181] = 'ER_MASTER_KEY_ROTATION_BINLOG_FAILED';\r\nexports[3182] = 'ER_MASTER_KEY_ROTATION_SE_UNAVAILABLE';\r\nexports[3183] = 'ER_TABLESPACE_CANNOT_ENCRYPT';\r\nexports[3184] = 'ER_INVALID_ENCRYPTION_OPTION';\r\nexports[3185] = 'ER_CANNOT_FIND_KEY_IN_KEYRING';\r\nexports[3186] = 'ER_CAPACITY_EXCEEDED_IN_PARSER';\r\nexports[3187] = 'ER_UNSUPPORTED_ALTER_ENCRYPTION_INPLACE';\r\nexports[3188] = 'ER_KEYRING_UDF_KEYRING_SERVICE_ERROR';\r\nexports[3189] = 'ER_USER_COLUMN_OLD_LENGTH';\r\nexports[3190] = 'ER_CANT_RESET_SOURCE';\r\nexports[3191] = 'ER_GROUP_REPLICATION_MAX_GROUP_SIZE';\r\nexports[3192] = 'ER_CANNOT_ADD_FOREIGN_BASE_COL_STORED';\r\nexports[3193] = 'ER_TABLE_REFERENCED';\r\nexports[3194] = 'ER_PARTITION_ENGINE_DEPRECATED_FOR_TABLE';\r\nexports[3195] = 'ER_WARN_USING_GEOMFROMWKB_TO_SET_SRID_ZERO';\r\nexports[3196] = 'ER_WARN_USING_GEOMFROMWKB_TO_SET_SRID';\r\nexports[3197] = 'ER_XA_RETRY';\r\nexports[3198] = 'ER_KEYRING_AWS_UDF_AWS_KMS_ERROR';\r\nexports[3199] = 'ER_BINLOG_UNSAFE_XA';\r\nexports[3200] = 'ER_UDF_ERROR';\r\nexports[3201] = 'ER_KEYRING_MIGRATION_FAILURE';\r\nexports[3202] = 'ER_KEYRING_ACCESS_DENIED_ERROR';\r\nexports[3203] = 'ER_KEYRING_MIGRATION_STATUS';\r\nexports[3204] = 'ER_PLUGIN_FAILED_TO_OPEN_TABLES';\r\nexports[3205] = 'ER_PLUGIN_FAILED_TO_OPEN_TABLE';\r\nexports[3206] = 'ER_AUDIT_LOG_NO_KEYRING_PLUGIN_INSTALLED';\r\nexports[3207] = 'ER_AUDIT_LOG_ENCRYPTION_PASSWORD_HAS_NOT_BEEN_SET';\r\nexports[3208] = 'ER_AUDIT_LOG_COULD_NOT_CREATE_AES_KEY';\r\nexports[3209] = 'ER_AUDIT_LOG_ENCRYPTION_PASSWORD_CANNOT_BE_FETCHED';\r\nexports[3210] = 'ER_AUDIT_LOG_JSON_FILTERING_NOT_ENABLED';\r\nexports[3211] = 'ER_AUDIT_LOG_UDF_INSUFFICIENT_PRIVILEGE';\r\nexports[3212] = 'ER_AUDIT_LOG_SUPER_PRIVILEGE_REQUIRED';\r\nexports[3213] = 'ER_COULD_NOT_REINITIALIZE_AUDIT_LOG_FILTERS';\r\nexports[3214] = 'ER_AUDIT_LOG_UDF_INVALID_ARGUMENT_TYPE';\r\nexports[3215] = 'ER_AUDIT_LOG_UDF_INVALID_ARGUMENT_COUNT';\r\nexports[3216] = 'ER_AUDIT_LOG_HAS_NOT_BEEN_INSTALLED';\r\nexports[3217] = 'ER_AUDIT_LOG_UDF_READ_INVALID_MAX_ARRAY_LENGTH_ARG_TYPE';\r\nexports[3218] = 'ER_AUDIT_LOG_UDF_READ_INVALID_MAX_ARRAY_LENGTH_ARG_VALUE';\r\nexports[3219] = 'ER_AUDIT_LOG_JSON_FILTER_PARSING_ERROR';\r\nexports[3220] = 'ER_AUDIT_LOG_JSON_FILTER_NAME_CANNOT_BE_EMPTY';\r\nexports[3221] = 'ER_AUDIT_LOG_JSON_USER_NAME_CANNOT_BE_EMPTY';\r\nexports[3222] = 'ER_AUDIT_LOG_JSON_FILTER_DOES_NOT_EXISTS';\r\nexports[3223] = 'ER_AUDIT_LOG_USER_FIRST_CHARACTER_MUST_BE_ALPHANUMERIC';\r\nexports[3224] = 'ER_AUDIT_LOG_USER_NAME_INVALID_CHARACTER';\r\nexports[3225] = 'ER_AUDIT_LOG_HOST_NAME_INVALID_CHARACTER';\r\nexports[3226] = 'WARN_DEPRECATED_MAXDB_SQL_MODE_FOR_TIMESTAMP';\r\nexports[3227] = 'ER_XA_REPLICATION_FILTERS';\r\nexports[3228] = 'ER_CANT_OPEN_ERROR_LOG';\r\nexports[3229] = 'ER_GROUPING_ON_TIMESTAMP_IN_DST';\r\nexports[3230] = 'ER_CANT_START_SERVER_NAMED_PIPE';\r\nexports[3231] = 'ER_WRITE_SET_EXCEEDS_LIMIT';\r\nexports[3232] = 'ER_DEPRECATED_TLS_VERSION_SESSION_57';\r\nexports[3233] = 'ER_WARN_DEPRECATED_TLS_VERSION_57';\r\nexports[3234] = 'ER_WARN_WRONG_NATIVE_TABLE_STRUCTURE';\r\nexports[3235] = 'ER_AES_INVALID_KDF_NAME';\r\nexports[3236] = 'ER_AES_INVALID_KDF_ITERATIONS';\r\nexports[3237] = 'WARN_AES_KEY_SIZE';\r\nexports[3238] = 'ER_AES_INVALID_KDF_OPTION_SIZE';\r\nexports[3500] = 'ER_UNSUPPORT_COMPRESSED_TEMPORARY_TABLE';\r\nexports[3501] = 'ER_ACL_OPERATION_FAILED';\r\nexports[3502] = 'ER_UNSUPPORTED_INDEX_ALGORITHM';\r\nexports[3503] = 'ER_NO_SUCH_DB';\r\nexports[3504] = 'ER_TOO_BIG_ENUM';\r\nexports[3505] = 'ER_TOO_LONG_SET_ENUM_VALUE';\r\nexports[3506] = 'ER_INVALID_DD_OBJECT';\r\nexports[3507] = 'ER_UPDATING_DD_TABLE';\r\nexports[3508] = 'ER_INVALID_DD_OBJECT_ID';\r\nexports[3509] = 'ER_INVALID_DD_OBJECT_NAME';\r\nexports[3510] = 'ER_TABLESPACE_MISSING_WITH_NAME';\r\nexports[3511] = 'ER_TOO_LONG_ROUTINE_COMMENT';\r\nexports[3512] = 'ER_SP_LOAD_FAILED';\r\nexports[3513] = 'ER_INVALID_BITWISE_OPERANDS_SIZE';\r\nexports[3514] = 'ER_INVALID_BITWISE_AGGREGATE_OPERANDS_SIZE';\r\nexports[3515] = 'ER_WARN_UNSUPPORTED_HINT';\r\nexports[3516] = 'ER_UNEXPECTED_GEOMETRY_TYPE';\r\nexports[3517] = 'ER_SRS_PARSE_ERROR';\r\nexports[3518] = 'ER_SRS_PROJ_PARAMETER_MISSING';\r\nexports[3519] = 'ER_WARN_SRS_NOT_FOUND';\r\nexports[3520] = 'ER_SRS_NOT_CARTESIAN';\r\nexports[3521] = 'ER_SRS_NOT_CARTESIAN_UNDEFINED';\r\nexports[3522] = 'ER_PK_INDEX_CANT_BE_INVISIBLE';\r\nexports[3523] = 'ER_UNKNOWN_AUTHID';\r\nexports[3524] = 'ER_FAILED_ROLE_GRANT';\r\nexports[3525] = 'ER_OPEN_ROLE_TABLES';\r\nexports[3526] = 'ER_FAILED_DEFAULT_ROLES';\r\nexports[3527] = 'ER_COMPONENTS_NO_SCHEME';\r\nexports[3528] = 'ER_COMPONENTS_NO_SCHEME_SERVICE';\r\nexports[3529] = 'ER_COMPONENTS_CANT_LOAD';\r\nexports[3530] = 'ER_ROLE_NOT_GRANTED';\r\nexports[3531] = 'ER_FAILED_REVOKE_ROLE';\r\nexports[3532] = 'ER_RENAME_ROLE';\r\nexports[3533] = 'ER_COMPONENTS_CANT_ACQUIRE_SERVICE_IMPLEMENTATION';\r\nexports[3534] = 'ER_COMPONENTS_CANT_SATISFY_DEPENDENCY';\r\nexports[3535] = 'ER_COMPONENTS_LOAD_CANT_REGISTER_SERVICE_IMPLEMENTATION';\r\nexports[3536] = 'ER_COMPONENTS_LOAD_CANT_INITIALIZE';\r\nexports[3537] = 'ER_COMPONENTS_UNLOAD_NOT_LOADED';\r\nexports[3538] = 'ER_COMPONENTS_UNLOAD_CANT_DEINITIALIZE';\r\nexports[3539] = 'ER_COMPONENTS_CANT_RELEASE_SERVICE';\r\nexports[3540] = 'ER_COMPONENTS_UNLOAD_CANT_UNREGISTER_SERVICE';\r\nexports[3541] = 'ER_COMPONENTS_CANT_UNLOAD';\r\nexports[3542] = 'ER_WARN_UNLOAD_THE_NOT_PERSISTED';\r\nexports[3543] = 'ER_COMPONENT_TABLE_INCORRECT';\r\nexports[3544] = 'ER_COMPONENT_MANIPULATE_ROW_FAILED';\r\nexports[3545] = 'ER_COMPONENTS_UNLOAD_DUPLICATE_IN_GROUP';\r\nexports[3546] = 'ER_CANT_SET_GTID_PURGED_DUE_SETS_CONSTRAINTS';\r\nexports[3547] = 'ER_CANNOT_LOCK_USER_MANAGEMENT_CACHES';\r\nexports[3548] = 'ER_SRS_NOT_FOUND';\r\nexports[3549] = 'ER_VARIABLE_NOT_PERSISTED';\r\nexports[3550] = 'ER_IS_QUERY_INVALID_CLAUSE';\r\nexports[3551] = 'ER_UNABLE_TO_STORE_STATISTICS';\r\nexports[3552] = 'ER_NO_SYSTEM_SCHEMA_ACCESS';\r\nexports[3553] = 'ER_NO_SYSTEM_TABLESPACE_ACCESS';\r\nexports[3554] = 'ER_NO_SYSTEM_TABLE_ACCESS';\r\nexports[3555] = 'ER_NO_SYSTEM_TABLE_ACCESS_FOR_DICTIONARY_TABLE';\r\nexports[3556] = 'ER_NO_SYSTEM_TABLE_ACCESS_FOR_SYSTEM_TABLE';\r\nexports[3557] = 'ER_NO_SYSTEM_TABLE_ACCESS_FOR_TABLE';\r\nexports[3558] = 'ER_INVALID_OPTION_KEY';\r\nexports[3559] = 'ER_INVALID_OPTION_VALUE';\r\nexports[3560] = 'ER_INVALID_OPTION_KEY_VALUE_PAIR';\r\nexports[3561] = 'ER_INVALID_OPTION_START_CHARACTER';\r\nexports[3562] = 'ER_INVALID_OPTION_END_CHARACTER';\r\nexports[3563] = 'ER_INVALID_OPTION_CHARACTERS';\r\nexports[3564] = 'ER_DUPLICATE_OPTION_KEY';\r\nexports[3565] = 'ER_WARN_SRS_NOT_FOUND_AXIS_ORDER';\r\nexports[3566] = 'ER_NO_ACCESS_TO_NATIVE_FCT';\r\nexports[3567] = 'ER_RESET_SOURCE_TO_VALUE_OUT_OF_RANGE';\r\nexports[3568] = 'ER_UNRESOLVED_TABLE_LOCK';\r\nexports[3569] = 'ER_DUPLICATE_TABLE_LOCK';\r\nexports[3570] = 'ER_BINLOG_UNSAFE_SKIP_LOCKED';\r\nexports[3571] = 'ER_BINLOG_UNSAFE_NOWAIT';\r\nexports[3572] = 'ER_LOCK_NOWAIT';\r\nexports[3573] = 'ER_CTE_RECURSIVE_REQUIRES_UNION';\r\nexports[3574] = 'ER_CTE_RECURSIVE_REQUIRES_NONRECURSIVE_FIRST';\r\nexports[3575] = 'ER_CTE_RECURSIVE_FORBIDS_AGGREGATION';\r\nexports[3576] = 'ER_CTE_RECURSIVE_FORBIDDEN_JOIN_ORDER';\r\nexports[3577] = 'ER_CTE_RECURSIVE_REQUIRES_SINGLE_REFERENCE';\r\nexports[3578] = 'ER_SWITCH_TMP_ENGINE';\r\nexports[3579] = 'ER_WINDOW_NO_SUCH_WINDOW';\r\nexports[3580] = 'ER_WINDOW_CIRCULARITY_IN_WINDOW_GRAPH';\r\nexports[3581] = 'ER_WINDOW_NO_CHILD_PARTITIONING';\r\nexports[3582] = 'ER_WINDOW_NO_INHERIT_FRAME';\r\nexports[3583] = 'ER_WINDOW_NO_REDEFINE_ORDER_BY';\r\nexports[3584] = 'ER_WINDOW_FRAME_START_ILLEGAL';\r\nexports[3585] = 'ER_WINDOW_FRAME_END_ILLEGAL';\r\nexports[3586] = 'ER_WINDOW_FRAME_ILLEGAL';\r\nexports[3587] = 'ER_WINDOW_RANGE_FRAME_ORDER_TYPE';\r\nexports[3588] = 'ER_WINDOW_RANGE_FRAME_TEMPORAL_TYPE';\r\nexports[3589] = 'ER_WINDOW_RANGE_FRAME_NUMERIC_TYPE';\r\nexports[3590] = 'ER_WINDOW_RANGE_BOUND_NOT_CONSTANT';\r\nexports[3591] = 'ER_WINDOW_DUPLICATE_NAME';\r\nexports[3592] = 'ER_WINDOW_ILLEGAL_ORDER_BY';\r\nexports[3593] = 'ER_WINDOW_INVALID_WINDOW_FUNC_USE';\r\nexports[3594] = 'ER_WINDOW_INVALID_WINDOW_FUNC_ALIAS_USE';\r\nexports[3595] = 'ER_WINDOW_NESTED_WINDOW_FUNC_USE_IN_WINDOW_SPEC';\r\nexports[3596] = 'ER_WINDOW_ROWS_INTERVAL_USE';\r\nexports[3597] = 'ER_WINDOW_NO_GROUP_ORDER';\r\nexports[3598] = 'ER_WINDOW_EXPLAIN_JSON';\r\nexports[3599] = 'ER_WINDOW_FUNCTION_IGNORES_FRAME';\r\nexports[3600] = 'ER_WL9236_NOW';\r\nexports[3601] = 'ER_INVALID_NO_OF_ARGS';\r\nexports[3602] = 'ER_FIELD_IN_GROUPING_NOT_GROUP_BY';\r\nexports[3603] = 'ER_TOO_LONG_TABLESPACE_COMMENT';\r\nexports[3604] = 'ER_ENGINE_CANT_DROP_TABLE';\r\nexports[3605] = 'ER_ENGINE_CANT_DROP_MISSING_TABLE';\r\nexports[3606] = 'ER_TABLESPACE_DUP_FILENAME';\r\nexports[3607] = 'ER_DB_DROP_RMDIR2';\r\nexports[3608] = 'ER_IMP_NO_FILES_MATCHED';\r\nexports[3609] = 'ER_IMP_SCHEMA_DOES_NOT_EXIST';\r\nexports[3610] = 'ER_IMP_TABLE_ALREADY_EXISTS';\r\nexports[3611] = 'ER_IMP_INCOMPATIBLE_MYSQLD_VERSION';\r\nexports[3612] = 'ER_IMP_INCOMPATIBLE_DD_VERSION';\r\nexports[3613] = 'ER_IMP_INCOMPATIBLE_SDI_VERSION';\r\nexports[3614] = 'ER_WARN_INVALID_HINT';\r\nexports[3615] = 'ER_VAR_DOES_NOT_EXIST';\r\nexports[3616] = 'ER_LONGITUDE_OUT_OF_RANGE';\r\nexports[3617] = 'ER_LATITUDE_OUT_OF_RANGE';\r\nexports[3618] = 'ER_NOT_IMPLEMENTED_FOR_GEOGRAPHIC_SRS';\r\nexports[3619] = 'ER_ILLEGAL_PRIVILEGE_LEVEL';\r\nexports[3620] = 'ER_NO_SYSTEM_VIEW_ACCESS';\r\nexports[3621] = 'ER_COMPONENT_FILTER_FLABBERGASTED';\r\nexports[3622] = 'ER_PART_EXPR_TOO_LONG';\r\nexports[3623] = 'ER_UDF_DROP_DYNAMICALLY_REGISTERED';\r\nexports[3624] = 'ER_UNABLE_TO_STORE_COLUMN_STATISTICS';\r\nexports[3625] = 'ER_UNABLE_TO_UPDATE_COLUMN_STATISTICS';\r\nexports[3626] = 'ER_UNABLE_TO_DROP_COLUMN_STATISTICS';\r\nexports[3627] = 'ER_UNABLE_TO_BUILD_HISTOGRAM';\r\nexports[3628] = 'ER_MANDATORY_ROLE';\r\nexports[3629] = 'ER_MISSING_TABLESPACE_FILE';\r\nexports[3630] = 'ER_PERSIST_ONLY_ACCESS_DENIED_ERROR';\r\nexports[3631] = 'ER_CMD_NEED_SUPER';\r\nexports[3632] = 'ER_PATH_IN_DATADIR';\r\nexports[3633] = 'ER_CLONE_DDL_IN_PROGRESS';\r\nexports[3634] = 'ER_CLONE_TOO_MANY_CONCURRENT_CLONES';\r\nexports[3635] = 'ER_APPLIER_LOG_EVENT_VALIDATION_ERROR';\r\nexports[3636] = 'ER_CTE_MAX_RECURSION_DEPTH';\r\nexports[3637] = 'ER_NOT_HINT_UPDATABLE_VARIABLE';\r\nexports[3638] = 'ER_CREDENTIALS_CONTRADICT_TO_HISTORY';\r\nexports[3639] = 'ER_WARNING_PASSWORD_HISTORY_CLAUSES_VOID';\r\nexports[3640] = 'ER_CLIENT_DOES_NOT_SUPPORT';\r\nexports[3641] = 'ER_I_S_SKIPPED_TABLESPACE';\r\nexports[3642] = 'ER_TABLESPACE_ENGINE_MISMATCH';\r\nexports[3643] = 'ER_WRONG_SRID_FOR_COLUMN';\r\nexports[3644] = 'ER_CANNOT_ALTER_SRID_DUE_TO_INDEX';\r\nexports[3645] = 'ER_WARN_BINLOG_PARTIAL_UPDATES_DISABLED';\r\nexports[3646] = 'ER_WARN_BINLOG_V1_ROW_EVENTS_DISABLED';\r\nexports[3647] = 'ER_WARN_BINLOG_PARTIAL_UPDATES_SUGGESTS_PARTIAL_IMAGES';\r\nexports[3648] = 'ER_COULD_NOT_APPLY_JSON_DIFF';\r\nexports[3649] = 'ER_CORRUPTED_JSON_DIFF';\r\nexports[3650] = 'ER_RESOURCE_GROUP_EXISTS';\r\nexports[3651] = 'ER_RESOURCE_GROUP_NOT_EXISTS';\r\nexports[3652] = 'ER_INVALID_VCPU_ID';\r\nexports[3653] = 'ER_INVALID_VCPU_RANGE';\r\nexports[3654] = 'ER_INVALID_THREAD_PRIORITY';\r\nexports[3655] = 'ER_DISALLOWED_OPERATION';\r\nexports[3656] = 'ER_RESOURCE_GROUP_BUSY';\r\nexports[3657] = 'ER_RESOURCE_GROUP_DISABLED';\r\nexports[3658] = 'ER_FEATURE_UNSUPPORTED';\r\nexports[3659] = 'ER_ATTRIBUTE_IGNORED';\r\nexports[3660] = 'ER_INVALID_THREAD_ID';\r\nexports[3661] = 'ER_RESOURCE_GROUP_BIND_FAILED';\r\nexports[3662] = 'ER_INVALID_USE_OF_FORCE_OPTION';\r\nexports[3663] = 'ER_GROUP_REPLICATION_COMMAND_FAILURE';\r\nexports[3664] = 'ER_SDI_OPERATION_FAILED';\r\nexports[3665] = 'ER_MISSING_JSON_TABLE_VALUE';\r\nexports[3666] = 'ER_WRONG_JSON_TABLE_VALUE';\r\nexports[3667] = 'ER_TF_MUST_HAVE_ALIAS';\r\nexports[3668] = 'ER_TF_FORBIDDEN_JOIN_TYPE';\r\nexports[3669] = 'ER_JT_VALUE_OUT_OF_RANGE';\r\nexports[3670] = 'ER_JT_MAX_NESTED_PATH';\r\nexports[3671] = 'ER_PASSWORD_EXPIRATION_NOT_SUPPORTED_BY_AUTH_METHOD';\r\nexports[3672] = 'ER_INVALID_GEOJSON_CRS_NOT_TOP_LEVEL';\r\nexports[3673] = 'ER_BAD_NULL_ERROR_NOT_IGNORED';\r\nexports[3674] = 'WARN_USELESS_SPATIAL_INDEX';\r\nexports[3675] = 'ER_DISK_FULL_NOWAIT';\r\nexports[3676] = 'ER_PARSE_ERROR_IN_DIGEST_FN';\r\nexports[3677] = 'ER_UNDISCLOSED_PARSE_ERROR_IN_DIGEST_FN';\r\nexports[3678] = 'ER_SCHEMA_DIR_EXISTS';\r\nexports[3679] = 'ER_SCHEMA_DIR_MISSING';\r\nexports[3680] = 'ER_SCHEMA_DIR_CREATE_FAILED';\r\nexports[3681] = 'ER_SCHEMA_DIR_UNKNOWN';\r\nexports[3682] = 'ER_ONLY_IMPLEMENTED_FOR_SRID_0_AND_4326';\r\nexports[3683] = 'ER_BINLOG_EXPIRE_LOG_DAYS_AND_SECS_USED_TOGETHER';\r\nexports[3684] = 'ER_REGEXP_BUFFER_OVERFLOW';\r\nexports[3685] = 'ER_REGEXP_ILLEGAL_ARGUMENT';\r\nexports[3686] = 'ER_REGEXP_INDEX_OUTOFBOUNDS_ERROR';\r\nexports[3687] = 'ER_REGEXP_INTERNAL_ERROR';\r\nexports[3688] = 'ER_REGEXP_RULE_SYNTAX';\r\nexports[3689] = 'ER_REGEXP_BAD_ESCAPE_SEQUENCE';\r\nexports[3690] = 'ER_REGEXP_UNIMPLEMENTED';\r\nexports[3691] = 'ER_REGEXP_MISMATCHED_PAREN';\r\nexports[3692] = 'ER_REGEXP_BAD_INTERVAL';\r\nexports[3693] = 'ER_REGEXP_MAX_LT_MIN';\r\nexports[3694] = 'ER_REGEXP_INVALID_BACK_REF';\r\nexports[3695] = 'ER_REGEXP_LOOK_BEHIND_LIMIT';\r\nexports[3696] = 'ER_REGEXP_MISSING_CLOSE_BRACKET';\r\nexports[3697] = 'ER_REGEXP_INVALID_RANGE';\r\nexports[3698] = 'ER_REGEXP_STACK_OVERFLOW';\r\nexports[3699] = 'ER_REGEXP_TIME_OUT';\r\nexports[3700] = 'ER_REGEXP_PATTERN_TOO_BIG';\r\nexports[3701] = 'ER_CANT_SET_ERROR_LOG_SERVICE';\r\nexports[3702] = 'ER_EMPTY_PIPELINE_FOR_ERROR_LOG_SERVICE';\r\nexports[3703] = 'ER_COMPONENT_FILTER_DIAGNOSTICS';\r\nexports[3704] = 'ER_NOT_IMPLEMENTED_FOR_CARTESIAN_SRS';\r\nexports[3705] = 'ER_NOT_IMPLEMENTED_FOR_PROJECTED_SRS';\r\nexports[3706] = 'ER_NONPOSITIVE_RADIUS';\r\nexports[3707] = 'ER_RESTART_SERVER_FAILED';\r\nexports[3708] = 'ER_SRS_MISSING_MANDATORY_ATTRIBUTE';\r\nexports[3709] = 'ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS';\r\nexports[3710] = 'ER_SRS_NAME_CANT_BE_EMPTY_OR_WHITESPACE';\r\nexports[3711] = 'ER_SRS_ORGANIZATION_CANT_BE_EMPTY_OR_WHITESPACE';\r\nexports[3712] = 'ER_SRS_ID_ALREADY_EXISTS';\r\nexports[3713] = 'ER_WARN_SRS_ID_ALREADY_EXISTS';\r\nexports[3714] = 'ER_CANT_MODIFY_SRID_0';\r\nexports[3715] = 'ER_WARN_RESERVED_SRID_RANGE';\r\nexports[3716] = 'ER_CANT_MODIFY_SRS_USED_BY_COLUMN';\r\nexports[3717] = 'ER_SRS_INVALID_CHARACTER_IN_ATTRIBUTE';\r\nexports[3718] = 'ER_SRS_ATTRIBUTE_STRING_TOO_LONG';\r\nexports[3719] = 'ER_DEPRECATED_UTF8_ALIAS';\r\nexports[3720] = 'ER_DEPRECATED_NATIONAL';\r\nexports[3721] = 'ER_INVALID_DEFAULT_UTF8MB4_COLLATION';\r\nexports[3722] = 'ER_UNABLE_TO_COLLECT_LOG_STATUS';\r\nexports[3723] = 'ER_RESERVED_TABLESPACE_NAME';\r\nexports[3724] = 'ER_UNABLE_TO_SET_OPTION';\r\nexports[3725] = 'ER_REPLICA_POSSIBLY_DIVERGED_AFTER_DDL';\r\nexports[3726] = 'ER_SRS_NOT_GEOGRAPHIC';\r\nexports[3727] = 'ER_POLYGON_TOO_LARGE';\r\nexports[3728] = 'ER_SPATIAL_UNIQUE_INDEX';\r\nexports[3729] = 'ER_INDEX_TYPE_NOT_SUPPORTED_FOR_SPATIAL_INDEX';\r\nexports[3730] = 'ER_FK_CANNOT_DROP_PARENT';\r\nexports[3731] = 'ER_GEOMETRY_PARAM_LONGITUDE_OUT_OF_RANGE';\r\nexports[3732] = 'ER_GEOMETRY_PARAM_LATITUDE_OUT_OF_RANGE';\r\nexports[3733] = 'ER_FK_CANNOT_USE_VIRTUAL_COLUMN';\r\nexports[3734] = 'ER_FK_NO_COLUMN_PARENT';\r\nexports[3735] = 'ER_CANT_SET_ERROR_SUPPRESSION_LIST';\r\nexports[3736] = 'ER_SRS_GEOGCS_INVALID_AXES';\r\nexports[3737] = 'ER_SRS_INVALID_SEMI_MAJOR_AXIS';\r\nexports[3738] = 'ER_SRS_INVALID_INVERSE_FLATTENING';\r\nexports[3739] = 'ER_SRS_INVALID_ANGULAR_UNIT';\r\nexports[3740] = 'ER_SRS_INVALID_PRIME_MERIDIAN';\r\nexports[3741] = 'ER_TRANSFORM_SOURCE_SRS_NOT_SUPPORTED';\r\nexports[3742] = 'ER_TRANSFORM_TARGET_SRS_NOT_SUPPORTED';\r\nexports[3743] = 'ER_TRANSFORM_SOURCE_SRS_MISSING_TOWGS84';\r\nexports[3744] = 'ER_TRANSFORM_TARGET_SRS_MISSING_TOWGS84';\r\nexports[3745] = 'ER_TEMP_TABLE_PREVENTS_SWITCH_SESSION_BINLOG_FORMAT';\r\nexports[3746] = 'ER_TEMP_TABLE_PREVENTS_SWITCH_GLOBAL_BINLOG_FORMAT';\r\nexports[3747] = 'ER_RUNNING_APPLIER_PREVENTS_SWITCH_GLOBAL_BINLOG_FORMAT';\r\nexports[3748] = 'ER_CLIENT_GTID_UNSAFE_CREATE_DROP_TEMP_TABLE_IN_TRX_IN_SBR';\r\nexports[3749] = 'ER_XA_CANT_CREATE_MDL_BACKUP';\r\nexports[3750] = 'ER_TABLE_WITHOUT_PK';\r\nexports[3751] = 'ER_WARN_DATA_TRUNCATED_FUNCTIONAL_INDEX';\r\nexports[3752] = 'ER_WARN_DATA_OUT_OF_RANGE_FUNCTIONAL_INDEX';\r\nexports[3753] = 'ER_FUNCTIONAL_INDEX_ON_JSON_OR_GEOMETRY_FUNCTION';\r\nexports[3754] = 'ER_FUNCTIONAL_INDEX_REF_AUTO_INCREMENT';\r\nexports[3755] = 'ER_CANNOT_DROP_COLUMN_FUNCTIONAL_INDEX';\r\nexports[3756] = 'ER_FUNCTIONAL_INDEX_PRIMARY_KEY';\r\nexports[3757] = 'ER_FUNCTIONAL_INDEX_ON_LOB';\r\nexports[3758] = 'ER_FUNCTIONAL_INDEX_FUNCTION_IS_NOT_ALLOWED';\r\nexports[3759] = 'ER_FULLTEXT_FUNCTIONAL_INDEX';\r\nexports[3760] = 'ER_SPATIAL_FUNCTIONAL_INDEX';\r\nexports[3761] = 'ER_WRONG_KEY_COLUMN_FUNCTIONAL_INDEX';\r\nexports[3762] = 'ER_FUNCTIONAL_INDEX_ON_FIELD';\r\nexports[3763] = 'ER_GENERATED_COLUMN_NAMED_FUNCTION_IS_NOT_ALLOWED';\r\nexports[3764] = 'ER_GENERATED_COLUMN_ROW_VALUE';\r\nexports[3765] = 'ER_GENERATED_COLUMN_VARIABLES';\r\nexports[3766] = 'ER_DEPENDENT_BY_DEFAULT_GENERATED_VALUE';\r\nexports[3767] = 'ER_DEFAULT_VAL_GENERATED_NON_PRIOR';\r\nexports[3768] = 'ER_DEFAULT_VAL_GENERATED_REF_AUTO_INC';\r\nexports[3769] = 'ER_DEFAULT_VAL_GENERATED_FUNCTION_IS_NOT_ALLOWED';\r\nexports[3770] = 'ER_DEFAULT_VAL_GENERATED_NAMED_FUNCTION_IS_NOT_ALLOWED';\r\nexports[3771] = 'ER_DEFAULT_VAL_GENERATED_ROW_VALUE';\r\nexports[3772] = 'ER_DEFAULT_VAL_GENERATED_VARIABLES';\r\nexports[3773] = 'ER_DEFAULT_AS_VAL_GENERATED';\r\nexports[3774] = 'ER_UNSUPPORTED_ACTION_ON_DEFAULT_VAL_GENERATED';\r\nexports[3775] = 'ER_GTID_UNSAFE_ALTER_ADD_COL_WITH_DEFAULT_EXPRESSION';\r\nexports[3776] = 'ER_FK_CANNOT_CHANGE_ENGINE';\r\nexports[3777] = 'ER_WARN_DEPRECATED_USER_SET_EXPR';\r\nexports[3778] = 'ER_WARN_DEPRECATED_UTF8MB3_COLLATION';\r\nexports[3779] = 'ER_WARN_DEPRECATED_NESTED_COMMENT_SYNTAX';\r\nexports[3780] = 'ER_FK_INCOMPATIBLE_COLUMNS';\r\nexports[3781] = 'ER_GR_HOLD_WAIT_TIMEOUT';\r\nexports[3782] = 'ER_GR_HOLD_KILLED';\r\nexports[3783] = 'ER_GR_HOLD_MEMBER_STATUS_ERROR';\r\nexports[3784] = 'ER_RPL_ENCRYPTION_FAILED_TO_FETCH_KEY';\r\nexports[3785] = 'ER_RPL_ENCRYPTION_KEY_NOT_FOUND';\r\nexports[3786] = 'ER_RPL_ENCRYPTION_KEYRING_INVALID_KEY';\r\nexports[3787] = 'ER_RPL_ENCRYPTION_HEADER_ERROR';\r\nexports[3788] = 'ER_RPL_ENCRYPTION_FAILED_TO_ROTATE_LOGS';\r\nexports[3789] = 'ER_RPL_ENCRYPTION_KEY_EXISTS_UNEXPECTED';\r\nexports[3790] = 'ER_RPL_ENCRYPTION_FAILED_TO_GENERATE_KEY';\r\nexports[3791] = 'ER_RPL_ENCRYPTION_FAILED_TO_STORE_KEY';\r\nexports[3792] = 'ER_RPL_ENCRYPTION_FAILED_TO_REMOVE_KEY';\r\nexports[3793] = 'ER_RPL_ENCRYPTION_UNABLE_TO_CHANGE_OPTION';\r\nexports[3794] = 'ER_RPL_ENCRYPTION_MASTER_KEY_RECOVERY_FAILED';\r\nexports[3795] = 'ER_SLOW_LOG_MODE_IGNORED_WHEN_NOT_LOGGING_TO_FILE';\r\nexports[3796] = 'ER_GRP_TRX_CONSISTENCY_NOT_ALLOWED';\r\nexports[3797] = 'ER_GRP_TRX_CONSISTENCY_BEFORE';\r\nexports[3798] = 'ER_GRP_TRX_CONSISTENCY_AFTER_ON_TRX_BEGIN';\r\nexports[3799] = 'ER_GRP_TRX_CONSISTENCY_BEGIN_NOT_ALLOWED';\r\nexports[3800] = 'ER_FUNCTIONAL_INDEX_ROW_VALUE_IS_NOT_ALLOWED';\r\nexports[3801] = 'ER_RPL_ENCRYPTION_FAILED_TO_ENCRYPT';\r\nexports[3802] = 'ER_PAGE_TRACKING_NOT_STARTED';\r\nexports[3803] = 'ER_PAGE_TRACKING_RANGE_NOT_TRACKED';\r\nexports[3804] = 'ER_PAGE_TRACKING_CANNOT_PURGE';\r\nexports[3805] = 'ER_RPL_ENCRYPTION_CANNOT_ROTATE_BINLOG_MASTER_KEY';\r\nexports[3806] = 'ER_BINLOG_MASTER_KEY_RECOVERY_OUT_OF_COMBINATION';\r\nexports[3807] = 'ER_BINLOG_MASTER_KEY_ROTATION_FAIL_TO_OPERATE_KEY';\r\nexports[3808] = 'ER_BINLOG_MASTER_KEY_ROTATION_FAIL_TO_ROTATE_LOGS';\r\nexports[3809] = 'ER_BINLOG_MASTER_KEY_ROTATION_FAIL_TO_REENCRYPT_LOG';\r\nexports[3810] = 'ER_BINLOG_MASTER_KEY_ROTATION_FAIL_TO_CLEANUP_UNUSED_KEYS';\r\nexports[3811] = 'ER_BINLOG_MASTER_KEY_ROTATION_FAIL_TO_CLEANUP_AUX_KEY';\r\nexports[3812] = 'ER_NON_BOOLEAN_EXPR_FOR_CHECK_CONSTRAINT';\r\nexports[3813] = 'ER_COLUMN_CHECK_CONSTRAINT_REFERENCES_OTHER_COLUMN';\r\nexports[3814] = 'ER_CHECK_CONSTRAINT_NAMED_FUNCTION_IS_NOT_ALLOWED';\r\nexports[3815] = 'ER_CHECK_CONSTRAINT_FUNCTION_IS_NOT_ALLOWED';\r\nexports[3816] = 'ER_CHECK_CONSTRAINT_VARIABLES';\r\nexports[3817] = 'ER_CHECK_CONSTRAINT_ROW_VALUE';\r\nexports[3818] = 'ER_CHECK_CONSTRAINT_REFERS_AUTO_INCREMENT_COLUMN';\r\nexports[3819] = 'ER_CHECK_CONSTRAINT_VIOLATED';\r\nexports[3820] = 'ER_CHECK_CONSTRAINT_REFERS_UNKNOWN_COLUMN';\r\nexports[3821] = 'ER_CHECK_CONSTRAINT_NOT_FOUND';\r\nexports[3822] = 'ER_CHECK_CONSTRAINT_DUP_NAME';\r\nexports[3823] = 'ER_CHECK_CONSTRAINT_CLAUSE_USING_FK_REFER_ACTION_COLUMN';\r\nexports[3824] = 'WARN_UNENCRYPTED_TABLE_IN_ENCRYPTED_DB';\r\nexports[3825] = 'ER_INVALID_ENCRYPTION_REQUEST';\r\nexports[3826] = 'ER_CANNOT_SET_TABLE_ENCRYPTION';\r\nexports[3827] = 'ER_CANNOT_SET_DATABASE_ENCRYPTION';\r\nexports[3828] = 'ER_CANNOT_SET_TABLESPACE_ENCRYPTION';\r\nexports[3829] = 'ER_TABLESPACE_CANNOT_BE_ENCRYPTED';\r\nexports[3830] = 'ER_TABLESPACE_CANNOT_BE_DECRYPTED';\r\nexports[3831] = 'ER_TABLESPACE_TYPE_UNKNOWN';\r\nexports[3832] = 'ER_TARGET_TABLESPACE_UNENCRYPTED';\r\nexports[3833] = 'ER_CANNOT_USE_ENCRYPTION_CLAUSE';\r\nexports[3834] = 'ER_INVALID_MULTIPLE_CLAUSES';\r\nexports[3835] = 'ER_UNSUPPORTED_USE_OF_GRANT_AS';\r\nexports[3836] = 'ER_UKNOWN_AUTH_ID_OR_ACCESS_DENIED_FOR_GRANT_AS';\r\nexports[3837] = 'ER_DEPENDENT_BY_FUNCTIONAL_INDEX';\r\nexports[3838] = 'ER_PLUGIN_NOT_EARLY';\r\nexports[3839] = 'ER_INNODB_REDO_LOG_ARCHIVE_START_SUBDIR_PATH';\r\nexports[3840] = 'ER_INNODB_REDO_LOG_ARCHIVE_START_TIMEOUT';\r\nexports[3841] = 'ER_INNODB_REDO_LOG_ARCHIVE_DIRS_INVALID';\r\nexports[3842] = 'ER_INNODB_REDO_LOG_ARCHIVE_LABEL_NOT_FOUND';\r\nexports[3843] = 'ER_INNODB_REDO_LOG_ARCHIVE_DIR_EMPTY';\r\nexports[3844] = 'ER_INNODB_REDO_LOG_ARCHIVE_NO_SUCH_DIR';\r\nexports[3845] = 'ER_INNODB_REDO_LOG_ARCHIVE_DIR_CLASH';\r\nexports[3846] = 'ER_INNODB_REDO_LOG_ARCHIVE_DIR_PERMISSIONS';\r\nexports[3847] = 'ER_INNODB_REDO_LOG_ARCHIVE_FILE_CREATE';\r\nexports[3848] = 'ER_INNODB_REDO_LOG_ARCHIVE_ACTIVE';\r\nexports[3849] = 'ER_INNODB_REDO_LOG_ARCHIVE_INACTIVE';\r\nexports[3850] = 'ER_INNODB_REDO_LOG_ARCHIVE_FAILED';\r\nexports[3851] = 'ER_INNODB_REDO_LOG_ARCHIVE_SESSION';\r\nexports[3852] = 'ER_STD_REGEX_ERROR';\r\nexports[3853] = 'ER_INVALID_JSON_TYPE';\r\nexports[3854] = 'ER_CANNOT_CONVERT_STRING';\r\nexports[3855] = 'ER_DEPENDENT_BY_PARTITION_FUNC';\r\nexports[3856] = 'ER_WARN_DEPRECATED_FLOAT_AUTO_INCREMENT';\r\nexports[3857] = 'ER_RPL_CANT_STOP_REPLICA_WHILE_LOCKED_BACKUP';\r\nexports[3858] = 'ER_WARN_DEPRECATED_FLOAT_DIGITS';\r\nexports[3859] = 'ER_WARN_DEPRECATED_FLOAT_UNSIGNED';\r\nexports[3860] = 'ER_WARN_DEPRECATED_INTEGER_DISPLAY_WIDTH';\r\nexports[3861] = 'ER_WARN_DEPRECATED_ZEROFILL';\r\nexports[3862] = 'ER_CLONE_DONOR';\r\nexports[3863] = 'ER_CLONE_PROTOCOL';\r\nexports[3864] = 'ER_CLONE_DONOR_VERSION';\r\nexports[3865] = 'ER_CLONE_OS';\r\nexports[3866] = 'ER_CLONE_PLATFORM';\r\nexports[3867] = 'ER_CLONE_CHARSET';\r\nexports[3868] = 'ER_CLONE_CONFIG';\r\nexports[3869] = 'ER_CLONE_SYS_CONFIG';\r\nexports[3870] = 'ER_CLONE_PLUGIN_MATCH';\r\nexports[3871] = 'ER_CLONE_LOOPBACK';\r\nexports[3872] = 'ER_CLONE_ENCRYPTION';\r\nexports[3873] = 'ER_CLONE_DISK_SPACE';\r\nexports[3874] = 'ER_CLONE_IN_PROGRESS';\r\nexports[3875] = 'ER_CLONE_DISALLOWED';\r\nexports[3876] = 'ER_CANNOT_GRANT_ROLES_TO_ANONYMOUS_USER';\r\nexports[3877] = 'ER_SECONDARY_ENGINE_PLUGIN';\r\nexports[3878] = 'ER_SECOND_PASSWORD_CANNOT_BE_EMPTY';\r\nexports[3879] = 'ER_DB_ACCESS_DENIED';\r\nexports[3880] = 'ER_DA_AUTH_ID_WITH_SYSTEM_USER_PRIV_IN_MANDATORY_ROLES';\r\nexports[3881] = 'ER_DA_RPL_GTID_TABLE_CANNOT_OPEN';\r\nexports[3882] = 'ER_GEOMETRY_IN_UNKNOWN_LENGTH_UNIT';\r\nexports[3883] = 'ER_DA_PLUGIN_INSTALL_ERROR';\r\nexports[3884] = 'ER_NO_SESSION_TEMP';\r\nexports[3885] = 'ER_DA_UNKNOWN_ERROR_NUMBER';\r\nexports[3886] = 'ER_COLUMN_CHANGE_SIZE';\r\nexports[3887] = 'ER_REGEXP_INVALID_CAPTURE_GROUP_NAME';\r\nexports[3888] = 'ER_DA_SSL_LIBRARY_ERROR';\r\nexports[3889] = 'ER_SECONDARY_ENGINE';\r\nexports[3890] = 'ER_SECONDARY_ENGINE_DDL';\r\nexports[3891] = 'ER_INCORRECT_CURRENT_PASSWORD';\r\nexports[3892] = 'ER_MISSING_CURRENT_PASSWORD';\r\nexports[3893] = 'ER_CURRENT_PASSWORD_NOT_REQUIRED';\r\nexports[3894] = 'ER_PASSWORD_CANNOT_BE_RETAINED_ON_PLUGIN_CHANGE';\r\nexports[3895] = 'ER_CURRENT_PASSWORD_CANNOT_BE_RETAINED';\r\nexports[3896] = 'ER_PARTIAL_REVOKES_EXIST';\r\nexports[3897] = 'ER_CANNOT_GRANT_SYSTEM_PRIV_TO_MANDATORY_ROLE';\r\nexports[3898] = 'ER_XA_REPLICATION_FILTERS';\r\nexports[3899] = 'ER_UNSUPPORTED_SQL_MODE';\r\nexports[3900] = 'ER_REGEXP_INVALID_FLAG';\r\nexports[3901] = 'ER_PARTIAL_REVOKE_AND_DB_GRANT_BOTH_EXISTS';\r\nexports[3902] = 'ER_UNIT_NOT_FOUND';\r\nexports[3903] = 'ER_INVALID_JSON_VALUE_FOR_FUNC_INDEX';\r\nexports[3904] = 'ER_JSON_VALUE_OUT_OF_RANGE_FOR_FUNC_INDEX';\r\nexports[3905] = 'ER_EXCEEDED_MV_KEYS_NUM';\r\nexports[3906] = 'ER_EXCEEDED_MV_KEYS_SPACE';\r\nexports[3907] = 'ER_FUNCTIONAL_INDEX_DATA_IS_TOO_LONG';\r\nexports[3908] = 'ER_WRONG_MVI_VALUE';\r\nexports[3909] = 'ER_WARN_FUNC_INDEX_NOT_APPLICABLE';\r\nexports[3910] = 'ER_GRP_RPL_UDF_ERROR';\r\nexports[3911] = 'ER_UPDATE_GTID_PURGED_WITH_GR';\r\nexports[3912] = 'ER_GROUPING_ON_TIMESTAMP_IN_DST';\r\nexports[3913] = 'ER_TABLE_NAME_CAUSES_TOO_LONG_PATH';\r\nexports[3914] = 'ER_AUDIT_LOG_INSUFFICIENT_PRIVILEGE';\r\nexports[3915] = 'ER_AUDIT_LOG_PASSWORD_HAS_BEEN_COPIED';\r\nexports[3916] = 'ER_DA_GRP_RPL_STARTED_AUTO_REJOIN';\r\nexports[3917] = 'ER_SYSVAR_CHANGE_DURING_QUERY';\r\nexports[3918] = 'ER_GLOBSTAT_CHANGE_DURING_QUERY';\r\nexports[3919] = 'ER_GRP_RPL_MESSAGE_SERVICE_INIT_FAILURE';\r\nexports[3920] = 'ER_CHANGE_SOURCE_WRONG_COMPRESSION_ALGORITHM_CLIENT';\r\nexports[3921] = 'ER_CHANGE_SOURCE_WRONG_COMPRESSION_LEVEL_CLIENT';\r\nexports[3922] = 'ER_WRONG_COMPRESSION_ALGORITHM_CLIENT';\r\nexports[3923] = 'ER_WRONG_COMPRESSION_LEVEL_CLIENT';\r\nexports[3924] = 'ER_CHANGE_SOURCE_WRONG_COMPRESSION_ALGORITHM_LIST_CLIENT';\r\nexports[3925] = 'ER_CLIENT_PRIVILEGE_CHECKS_USER_CANNOT_BE_ANONYMOUS';\r\nexports[3926] = 'ER_CLIENT_PRIVILEGE_CHECKS_USER_DOES_NOT_EXIST';\r\nexports[3927] = 'ER_CLIENT_PRIVILEGE_CHECKS_USER_CORRUPT';\r\nexports[3928] = 'ER_CLIENT_PRIVILEGE_CHECKS_USER_NEEDS_RPL_APPLIER_PRIV';\r\nexports[3929] = 'ER_WARN_DA_PRIVILEGE_NOT_REGISTERED';\r\nexports[3930] = 'ER_CLIENT_KEYRING_UDF_KEY_INVALID';\r\nexports[3931] = 'ER_CLIENT_KEYRING_UDF_KEY_TYPE_INVALID';\r\nexports[3932] = 'ER_CLIENT_KEYRING_UDF_KEY_TOO_LONG';\r\nexports[3933] = 'ER_CLIENT_KEYRING_UDF_KEY_TYPE_TOO_LONG';\r\nexports[3934] = 'ER_JSON_SCHEMA_VALIDATION_ERROR_WITH_DETAILED_REPORT';\r\nexports[3935] = 'ER_DA_UDF_INVALID_CHARSET_SPECIFIED';\r\nexports[3936] = 'ER_DA_UDF_INVALID_CHARSET';\r\nexports[3937] = 'ER_DA_UDF_INVALID_COLLATION';\r\nexports[3938] = 'ER_DA_UDF_INVALID_EXTENSION_ARGUMENT_TYPE';\r\nexports[3939] = 'ER_MULTIPLE_CONSTRAINTS_WITH_SAME_NAME';\r\nexports[3940] = 'ER_CONSTRAINT_NOT_FOUND';\r\nexports[3941] = 'ER_ALTER_CONSTRAINT_ENFORCEMENT_NOT_SUPPORTED';\r\nexports[3942] = 'ER_TABLE_VALUE_CONSTRUCTOR_MUST_HAVE_COLUMNS';\r\nexports[3943] = 'ER_TABLE_VALUE_CONSTRUCTOR_CANNOT_HAVE_DEFAULT';\r\nexports[3944] = 'ER_CLIENT_QUERY_FAILURE_INVALID_NON_ROW_FORMAT';\r\nexports[3945] = 'ER_REQUIRE_ROW_FORMAT_INVALID_VALUE';\r\nexports[3946] = 'ER_FAILED_TO_DETERMINE_IF_ROLE_IS_MANDATORY';\r\nexports[3947] = 'ER_FAILED_TO_FETCH_MANDATORY_ROLE_LIST';\r\nexports[3948] = 'ER_CLIENT_LOCAL_FILES_DISABLED';\r\nexports[3949] = 'ER_IMP_INCOMPATIBLE_CFG_VERSION';\r\nexports[3950] = 'ER_DA_OOM';\r\nexports[3951] = 'ER_DA_UDF_INVALID_ARGUMENT_TO_SET_CHARSET';\r\nexports[3952] = 'ER_DA_UDF_INVALID_RETURN_TYPE_TO_SET_CHARSET';\r\nexports[3953] = 'ER_MULTIPLE_INTO_CLAUSES';\r\nexports[3954] = 'ER_MISPLACED_INTO';\r\nexports[3955] =\r\n  'ER_USER_ACCESS_DENIED_FOR_USER_ACCOUNT_BLOCKED_BY_PASSWORD_LOCK';\r\nexports[3956] = 'ER_WARN_DEPRECATED_YEAR_UNSIGNED';\r\nexports[3957] = 'ER_CLONE_NETWORK_PACKET';\r\nexports[3958] = 'ER_SDI_OPERATION_FAILED_MISSING_RECORD';\r\nexports[3959] = 'ER_DEPENDENT_BY_CHECK_CONSTRAINT';\r\nexports[3960] = 'ER_GRP_OPERATION_NOT_ALLOWED_GR_MUST_STOP';\r\nexports[3961] = 'ER_WARN_DEPRECATED_JSON_TABLE_ON_ERROR_ON_EMPTY';\r\nexports[3962] = 'ER_WARN_DEPRECATED_INNER_INTO';\r\nexports[3963] = 'ER_WARN_DEPRECATED_VALUES_FUNCTION_ALWAYS_NULL';\r\nexports[3964] = 'ER_WARN_DEPRECATED_SQL_CALC_FOUND_ROWS';\r\nexports[3965] = 'ER_WARN_DEPRECATED_FOUND_ROWS';\r\nexports[3966] = 'ER_MISSING_JSON_VALUE';\r\nexports[3967] = 'ER_MULTIPLE_JSON_VALUES';\r\nexports[3968] = 'ER_HOSTNAME_TOO_LONG';\r\nexports[3969] = 'ER_WARN_CLIENT_DEPRECATED_PARTITION_PREFIX_KEY';\r\nexports[3970] = 'ER_GROUP_REPLICATION_USER_EMPTY_MSG';\r\nexports[3971] = 'ER_GROUP_REPLICATION_USER_MANDATORY_MSG';\r\nexports[3972] = 'ER_GROUP_REPLICATION_PASSWORD_LENGTH';\r\nexports[3973] = 'ER_SUBQUERY_TRANSFORM_REJECTED';\r\nexports[3974] = 'ER_DA_GRP_RPL_RECOVERY_ENDPOINT_FORMAT';\r\nexports[3975] = 'ER_DA_GRP_RPL_RECOVERY_ENDPOINT_INVALID';\r\nexports[3976] = 'ER_WRONG_VALUE_FOR_VAR_PLUS_ACTIONABLE_PART';\r\nexports[3977] = 'ER_STATEMENT_NOT_ALLOWED_AFTER_START_TRANSACTION';\r\nexports[3978] = 'ER_FOREIGN_KEY_WITH_ATOMIC_CREATE_SELECT';\r\nexports[3979] = 'ER_NOT_ALLOWED_WITH_START_TRANSACTION';\r\nexports[3980] = 'ER_INVALID_JSON_ATTRIBUTE';\r\nexports[3981] = 'ER_ENGINE_ATTRIBUTE_NOT_SUPPORTED';\r\nexports[3982] = 'ER_INVALID_USER_ATTRIBUTE_JSON';\r\nexports[3983] = 'ER_INNODB_REDO_DISABLED';\r\nexports[3984] = 'ER_INNODB_REDO_ARCHIVING_ENABLED';\r\nexports[3985] = 'ER_MDL_OUT_OF_RESOURCES';\r\nexports[3986] = 'ER_IMPLICIT_COMPARISON_FOR_JSON';\r\nexports[3987] = 'ER_FUNCTION_DOES_NOT_SUPPORT_CHARACTER_SET';\r\nexports[3988] = 'ER_IMPOSSIBLE_STRING_CONVERSION';\r\nexports[3989] = 'ER_SCHEMA_READ_ONLY';\r\nexports[3990] = 'ER_RPL_ASYNC_RECONNECT_GTID_MODE_OFF';\r\nexports[3991] = 'ER_RPL_ASYNC_RECONNECT_AUTO_POSITION_OFF';\r\nexports[3992] = 'ER_DISABLE_GTID_MODE_REQUIRES_ASYNC_RECONNECT_OFF';\r\nexports[3993] = 'ER_DISABLE_AUTO_POSITION_REQUIRES_ASYNC_RECONNECT_OFF';\r\nexports[3994] = 'ER_INVALID_PARAMETER_USE';\r\nexports[3995] = 'ER_CHARACTER_SET_MISMATCH';\r\nexports[3996] = 'ER_WARN_VAR_VALUE_CHANGE_NOT_SUPPORTED';\r\nexports[3997] = 'ER_INVALID_TIME_ZONE_INTERVAL';\r\nexports[3998] = 'ER_INVALID_CAST';\r\nexports[3999] = 'ER_HYPERGRAPH_NOT_SUPPORTED_YET';\r\nexports[4000] = 'ER_WARN_HYPERGRAPH_EXPERIMENTAL';\r\nexports[4001] = 'ER_DA_NO_ERROR_LOG_PARSER_CONFIGURED';\r\nexports[4002] = 'ER_DA_ERROR_LOG_TABLE_DISABLED';\r\nexports[4003] = 'ER_DA_ERROR_LOG_MULTIPLE_FILTERS';\r\nexports[4004] = 'ER_DA_CANT_OPEN_ERROR_LOG';\r\nexports[4005] = 'ER_USER_REFERENCED_AS_DEFINER';\r\nexports[4006] = 'ER_CANNOT_USER_REFERENCED_AS_DEFINER';\r\nexports[4007] = 'ER_REGEX_NUMBER_TOO_BIG';\r\nexports[4008] = 'ER_SPVAR_NONINTEGER_TYPE';\r\nexports[4009] = 'WARN_UNSUPPORTED_ACL_TABLES_READ';\r\nexports[4010] = 'ER_BINLOG_UNSAFE_ACL_TABLE_READ_IN_DML_DDL';\r\nexports[4011] = 'ER_STOP_REPLICA_MONITOR_IO_THREAD_TIMEOUT';\r\nexports[4012] = 'ER_STARTING_REPLICA_MONITOR_IO_THREAD';\r\nexports[4013] = 'ER_CANT_USE_ANONYMOUS_TO_GTID_WITH_GTID_MODE_NOT_ON';\r\nexports[4014] = 'ER_CANT_COMBINE_ANONYMOUS_TO_GTID_AND_AUTOPOSITION';\r\nexports[4015] =\r\n  'ER_ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_REQUIRES_GTID_MODE_ON';\r\nexports[4016] = 'ER_SQL_REPLICA_SKIP_COUNTER_USED_WITH_GTID_MODE_ON';\r\nexports[4017] =\r\n  'ER_USING_ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_AS_LOCAL_OR_UUID';\r\nexports[4018] =\r\n  'ER_CANT_SET_ANONYMOUS_TO_GTID_AND_WAIT_UNTIL_SQL_THD_AFTER_GTIDS';\r\nexports[4019] = 'ER_CANT_SET_SQL_AFTER_OR_BEFORE_GTIDS_WITH_ANONYMOUS_TO_GTID';\r\nexports[4020] = 'ER_ANONYMOUS_TO_GTID_UUID_SAME_AS_GROUP_NAME';\r\nexports[4021] = 'ER_CANT_USE_SAME_UUID_AS_GROUP_NAME';\r\nexports[4022] = 'ER_GRP_RPL_RECOVERY_CHANNEL_STILL_RUNNING';\r\nexports[4023] = 'ER_INNODB_INVALID_AUTOEXTEND_SIZE_VALUE';\r\nexports[4024] = 'ER_INNODB_INCOMPATIBLE_WITH_TABLESPACE';\r\nexports[4025] = 'ER_INNODB_AUTOEXTEND_SIZE_OUT_OF_RANGE';\r\nexports[4026] = 'ER_CANNOT_USE_AUTOEXTEND_SIZE_CLAUSE';\r\nexports[4027] = 'ER_ROLE_GRANTED_TO_ITSELF';\r\nexports[4028] = 'ER_TABLE_MUST_HAVE_A_VISIBLE_COLUMN';\r\nexports[4029] = 'ER_INNODB_COMPRESSION_FAILURE';\r\nexports[4030] = 'ER_WARN_ASYNC_CONN_FAILOVER_NETWORK_NAMESPACE';\r\nexports[4031] = 'ER_CLIENT_INTERACTION_TIMEOUT';\r\nexports[4032] = 'ER_INVALID_CAST_TO_GEOMETRY';\r\nexports[4033] = 'ER_INVALID_CAST_POLYGON_RING_DIRECTION';\r\nexports[4034] = 'ER_GIS_DIFFERENT_SRIDS_AGGREGATION';\r\nexports[4035] = 'ER_RELOAD_KEYRING_FAILURE';\r\nexports[4036] = 'ER_SDI_GET_KEYS_INVALID_TABLESPACE';\r\nexports[4037] = 'ER_CHANGE_RPL_SRC_WRONG_COMPRESSION_ALGORITHM_SIZE';\r\nexports[4038] = 'ER_WARN_DEPRECATED_TLS_VERSION_FOR_CHANNEL_CLI';\r\nexports[4039] = 'ER_CANT_USE_SAME_UUID_AS_VIEW_CHANGE_UUID';\r\nexports[4040] = 'ER_ANONYMOUS_TO_GTID_UUID_SAME_AS_VIEW_CHANGE_UUID';\r\nexports[4041] = 'ER_GRP_RPL_VIEW_CHANGE_UUID_FAIL_GET_VARIABLE';\r\nexports[4042] = 'ER_WARN_ADUIT_LOG_MAX_SIZE_AND_PRUNE_SECONDS';\r\nexports[4043] = 'ER_WARN_ADUIT_LOG_MAX_SIZE_CLOSE_TO_ROTATE_ON_SIZE';\r\nexports[4044] = 'ER_KERBEROS_CREATE_USER';\r\nexports[4045] = 'ER_INSTALL_PLUGIN_CONFLICT_CLIENT';\r\nexports[4046] = 'ER_DA_ERROR_LOG_COMPONENT_FLUSH_FAILED';\r\nexports[4047] = 'ER_WARN_SQL_AFTER_MTS_GAPS_GAP_NOT_CALCULATED';\r\nexports[4048] = 'ER_INVALID_ASSIGNMENT_TARGET';\r\nexports[4049] = 'ER_OPERATION_NOT_ALLOWED_ON_GR_SECONDARY';\r\nexports[4050] = 'ER_GRP_RPL_FAILOVER_CHANNEL_STATUS_PROPAGATION';\r\nexports[4051] = 'ER_WARN_AUDIT_LOG_FORMAT_UNIX_TIMESTAMP_ONLY_WHEN_JSON';\r\nexports[4052] = 'ER_INVALID_MFA_PLUGIN_SPECIFIED';\r\nexports[4053] = 'ER_IDENTIFIED_BY_UNSUPPORTED';\r\nexports[4054] = 'ER_INVALID_PLUGIN_FOR_REGISTRATION';\r\nexports[4055] = 'ER_PLUGIN_REQUIRES_REGISTRATION';\r\nexports[4056] = 'ER_MFA_METHOD_EXISTS';\r\nexports[4057] = 'ER_MFA_METHOD_NOT_EXISTS';\r\nexports[4058] = 'ER_AUTHENTICATION_POLICY_MISMATCH';\r\nexports[4059] = 'ER_PLUGIN_REGISTRATION_DONE';\r\nexports[4060] = 'ER_INVALID_USER_FOR_REGISTRATION';\r\nexports[4061] = 'ER_USER_REGISTRATION_FAILED';\r\nexports[4062] = 'ER_MFA_METHODS_INVALID_ORDER';\r\nexports[4063] = 'ER_MFA_METHODS_IDENTICAL';\r\nexports[4064] = 'ER_INVALID_MFA_OPERATIONS_FOR_PASSWORDLESS_USER';\r\nexports[4065] = 'ER_CHANGE_REPLICATION_SOURCE_NO_OPTIONS_FOR_GTID_ONLY';\r\nexports[4066] =\r\n  'ER_CHANGE_REP_SOURCE_CANT_DISABLE_REQ_ROW_FORMAT_WITH_GTID_ONLY';\r\nexports[4067] =\r\n  'ER_CHANGE_REP_SOURCE_CANT_DISABLE_AUTO_POSITION_WITH_GTID_ONLY';\r\nexports[4068] = 'ER_CHANGE_REP_SOURCE_CANT_DISABLE_GTID_ONLY_WITHOUT_POSITIONS';\r\nexports[4069] = 'ER_CHANGE_REP_SOURCE_CANT_DISABLE_AUTO_POS_WITHOUT_POSITIONS';\r\nexports[4070] = 'ER_CHANGE_REP_SOURCE_GR_CHANNEL_WITH_GTID_MODE_NOT_ON';\r\nexports[4071] = 'ER_CANT_USE_GTID_ONLY_WITH_GTID_MODE_NOT_ON';\r\nexports[4072] = 'ER_WARN_C_DISABLE_GTID_ONLY_WITH_SOURCE_AUTO_POS_INVALID_POS';\r\nexports[4073] = 'ER_DA_SSL_FIPS_MODE_ERROR';\r\nexports[4074] = 'ER_VALUE_OUT_OF_RANGE';\r\nexports[4075] = 'ER_FULLTEXT_WITH_ROLLUP';\r\nexports[4076] = 'ER_REGEXP_MISSING_RESOURCE';\r\nexports[4077] = 'ER_WARN_REGEXP_USING_DEFAULT';\r\nexports[4078] = 'ER_REGEXP_MISSING_FILE';\r\nexports[4079] = 'ER_WARN_DEPRECATED_COLLATION';\r\nexports[4080] = 'ER_CONCURRENT_PROCEDURE_USAGE';\r\nexports[4081] = 'ER_DA_GLOBAL_CONN_LIMIT';\r\nexports[4082] = 'ER_DA_CONN_LIMIT';\r\nexports[4083] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_COLUMN_TYPE_INSTANT';\r\nexports[4084] = 'ER_WARN_SF_UDF_NAME_COLLISION';\r\nexports[4085] = 'ER_CANNOT_PURGE_BINLOG_WITH_BACKUP_LOCK';\r\nexports[4086] = 'ER_TOO_MANY_WINDOWS';\r\nexports[4087] = 'ER_MYSQLBACKUP_CLIENT_MSG';\r\nexports[4088] = 'ER_COMMENT_CONTAINS_INVALID_STRING';\r\nexports[4089] = 'ER_DEFINITION_CONTAINS_INVALID_STRING';\r\nexports[4090] = 'ER_CANT_EXECUTE_COMMAND_WITH_ASSIGNED_GTID_NEXT';\r\nexports[4091] = 'ER_XA_TEMP_TABLE';\r\nexports[4092] = 'ER_INNODB_MAX_ROW_VERSION';\r\nexports[4093] = 'ER_INNODB_INSTANT_ADD_NOT_SUPPORTED_MAX_SIZE';\r\nexports[4094] = 'ER_OPERATION_NOT_ALLOWED_WHILE_PRIMARY_CHANGE_IS_RUNNING';\r\nexports[4095] = 'ER_WARN_DEPRECATED_DATETIME_DELIMITER';\r\nexports[4096] = 'ER_WARN_DEPRECATED_SUPERFLUOUS_DELIMITER';\r\nexports[4097] = 'ER_CANNOT_PERSIST_SENSITIVE_VARIABLES';\r\nexports[4098] = 'ER_WARN_CANNOT_SECURELY_PERSIST_SENSITIVE_VARIABLES';\r\nexports[4099] = 'ER_WARN_TRG_ALREADY_EXISTS';\r\nexports[4100] = 'ER_IF_NOT_EXISTS_UNSUPPORTED_TRG_EXISTS_ON_DIFFERENT_TABLE';\r\nexports[4101] = 'ER_IF_NOT_EXISTS_UNSUPPORTED_UDF_NATIVE_FCT_NAME_COLLISION';\r\nexports[4102] = 'ER_SET_PASSWORD_AUTH_PLUGIN_ERROR';\r\nexports[4103] = 'ER_REDUCED_DBLWR_FILE_CORRUPTED';\r\nexports[4104] = 'ER_REDUCED_DBLWR_PAGE_FOUND';\r\nexports[4105] = 'ER_SRS_INVALID_LATITUDE_OF_ORIGIN';\r\nexports[4106] = 'ER_SRS_INVALID_LONGITUDE_OF_ORIGIN';\r\nexports[4107] = 'ER_SRS_UNUSED_PROJ_PARAMETER_PRESENT';\r\nexports[4108] = 'ER_GIPK_COLUMN_EXISTS';\r\nexports[4109] = 'ER_GIPK_FAILED_AUTOINC_COLUMN_EXISTS';\r\nexports[4110] = 'ER_GIPK_COLUMN_ALTER_NOT_ALLOWED';\r\nexports[4111] = 'ER_DROP_PK_COLUMN_TO_DROP_GIPK';\r\nexports[4112] = 'ER_CREATE_SELECT_WITH_GIPK_DISALLOWED_IN_SBR';\r\nexports[4113] = 'ER_DA_EXPIRE_LOGS_DAYS_IGNORED';\r\nexports[4114] = 'ER_CTE_RECURSIVE_NOT_UNION';\r\nexports[4115] = 'ER_COMMAND_BACKEND_FAILED_TO_FETCH_SECURITY_CTX';\r\nexports[4116] = 'ER_COMMAND_SERVICE_BACKEND_FAILED';\r\nexports[4117] = 'ER_CLIENT_FILE_PRIVILEGE_FOR_REPLICATION_CHECKS';\r\nexports[4118] = 'ER_GROUP_REPLICATION_FORCE_MEMBERS_COMMAND_FAILURE';\r\nexports[4119] = 'ER_WARN_DEPRECATED_IDENT';\r\nexports[4120] = 'ER_INTERSECT_ALL_MAX_DUPLICATES_EXCEEDED';\r\nexports[4121] = 'ER_TP_QUERY_THRS_PER_GRP_EXCEEDS_TXN_THR_LIMIT';\r\nexports[4122] = 'ER_BAD_TIMESTAMP_FORMAT';\r\nexports[4123] = 'ER_SHAPE_PRIDICTION_UDF';\r\nexports[4124] = 'ER_SRS_INVALID_HEIGHT';\r\nexports[4125] = 'ER_SRS_INVALID_SCALING';\r\nexports[4126] = 'ER_SRS_INVALID_ZONE_WIDTH';\r\nexports[4127] = 'ER_SRS_INVALID_LATITUDE_POLAR_STERE_VAR_A';\r\nexports[4128] = 'ER_WARN_DEPRECATED_CLIENT_NO_SCHEMA_OPTION';\r\nexports[4129] = 'ER_TABLE_NOT_EMPTY';\r\nexports[4130] = 'ER_TABLE_NO_PRIMARY_KEY';\r\nexports[4131] = 'ER_TABLE_IN_SHARED_TABLESPACE';\r\nexports[4132] = 'ER_INDEX_OTHER_THAN_PK';\r\nexports[4133] = 'ER_LOAD_BULK_DATA_UNSORTED';\r\nexports[4134] = 'ER_BULK_EXECUTOR_ERROR';\r\nexports[4135] = 'ER_BULK_READER_LIBCURL_INIT_FAILED';\r\nexports[4136] = 'ER_BULK_READER_LIBCURL_ERROR';\r\nexports[4137] = 'ER_BULK_READER_SERVER_ERROR';\r\nexports[4138] = 'ER_BULK_READER_COMMUNICATION_ERROR';\r\nexports[4139] = 'ER_BULK_LOAD_DATA_FAILED';\r\nexports[4140] = 'ER_BULK_LOADER_COLUMN_TOO_BIG_FOR_LEFTOVER_BUFFER';\r\nexports[4141] = 'ER_BULK_LOADER_COMPONENT_ERROR';\r\nexports[4142] = 'ER_BULK_LOADER_FILE_CONTAINS_LESS_LINES_THAN_IGNORE_CLAUSE';\r\nexports[4143] = 'ER_BULK_PARSER_MISSING_ENCLOSED_BY';\r\nexports[4144] = 'ER_BULK_PARSER_ROW_BUFFER_MAX_TOTAL_COLS_EXCEEDED';\r\nexports[4145] = 'ER_BULK_PARSER_COPY_BUFFER_SIZE_EXCEEDED';\r\nexports[4146] = 'ER_BULK_PARSER_UNEXPECTED_END_OF_INPUT';\r\nexports[4147] = 'ER_BULK_PARSER_UNEXPECTED_ROW_TERMINATOR';\r\nexports[4148] = 'ER_BULK_PARSER_UNEXPECTED_CHAR_AFTER_ENDING_ENCLOSED_BY';\r\nexports[4149] = 'ER_BULK_PARSER_UNEXPECTED_CHAR_AFTER_NULL_ESCAPE';\r\nexports[4150] = 'ER_BULK_PARSER_UNEXPECTED_CHAR_AFTER_COLUMN_TERMINATOR';\r\nexports[4151] = 'ER_BULK_PARSER_INCOMPLETE_ESCAPE_SEQUENCE';\r\nexports[4152] = 'ER_LOAD_BULK_DATA_FAILED';\r\nexports[4153] = 'ER_LOAD_BULK_DATA_WRONG_VALUE_FOR_FIELD';\r\nexports[4154] = 'ER_LOAD_BULK_DATA_WARN_NULL_TO_NOTNULL';\r\nexports[4155] = 'ER_REQUIRE_TABLE_PRIMARY_KEY_CHECK_GENERATE_WITH_GR';\r\nexports[4156] = 'ER_CANT_CHANGE_SYS_VAR_IN_READ_ONLY_MODE';\r\nexports[4157] = 'ER_INNODB_INSTANT_ADD_DROP_NOT_SUPPORTED_MAX_SIZE';\r\nexports[4158] = 'ER_INNODB_INSTANT_ADD_NOT_SUPPORTED_MAX_FIELDS';\r\nexports[4159] = 'ER_CANT_SET_PERSISTED';\r\nexports[4160] = 'ER_INSTALL_COMPONENT_SET_NULL_VALUE';\r\nexports[4161] = 'ER_INSTALL_COMPONENT_SET_UNUSED_VALUE';\r\nexports[4162] = 'ER_WARN_DEPRECATED_USER_DEFINED_COLLATIONS';\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/constants/errors.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/constants/field_flags.js":
/*!**********************************************************!*\
  !*** ./node_modules/mysql2/lib/constants/field_flags.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\n\r\n// Manually extracted from mysql-5.5.23/include/mysql_com.h\r\nexports.NOT_NULL = 1; /* Field can't be NULL */\r\nexports.PRI_KEY = 2; /* Field is part of a primary key */\r\nexports.UNIQUE_KEY = 4; /* Field is part of a unique key */\r\nexports.MULTIPLE_KEY = 8; /* Field is part of a key */\r\nexports.BLOB = 16; /* Field is a blob */\r\nexports.UNSIGNED = 32; /* Field is unsigned */\r\nexports.ZEROFILL = 64; /* Field is zerofill */\r\nexports.BINARY = 128; /* Field is binary   */\r\n\r\n/* The following are only sent to new clients */\r\nexports.ENUM = 256; /* field is an enum */\r\nexports.AUTO_INCREMENT = 512; /* field is a autoincrement field */\r\nexports.TIMESTAMP = 1024; /* Field is a timestamp */\r\nexports.SET = 2048; /* field is a set */\r\nexports.NO_DEFAULT_VALUE = 4096; /* Field doesn't have default value */\r\nexports.ON_UPDATE_NOW = 8192; /* Field is set to NOW on UPDATE */\r\nexports.NUM = 32768; /* Field is num (for clients) */\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29uc3RhbnRzL2ZpZWxkX2ZsYWdzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLGdCQUFnQixNQUFNO0FBQ3RCLGVBQWUsTUFBTTtBQUNyQixrQkFBa0IsTUFBTTtBQUN4QixvQkFBb0IsTUFBTTtBQUMxQixZQUFZLE9BQU87QUFDbkIsZ0JBQWdCLE9BQU87QUFDdkIsZ0JBQWdCLE9BQU87QUFDdkIsY0FBYyxRQUFRO0FBQ3RCO0FBQ0E7QUFDQSxZQUFZLFFBQVE7QUFDcEIsc0JBQXNCLFFBQVE7QUFDOUIsaUJBQWlCLFNBQVM7QUFDMUIsV0FBVyxTQUFTO0FBQ3BCLHdCQUF3QixTQUFTO0FBQ2pDLHFCQUFxQixTQUFTO0FBQzlCLFdBQVcsVUFBVSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb25zdGFudHMvZmllbGRfZmxhZ3MuanM/ODBjOSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG4vLyBNYW51YWxseSBleHRyYWN0ZWQgZnJvbSBteXNxbC01LjUuMjMvaW5jbHVkZS9teXNxbF9jb20uaFxyXG5leHBvcnRzLk5PVF9OVUxMID0gMTsgLyogRmllbGQgY2FuJ3QgYmUgTlVMTCAqL1xyXG5leHBvcnRzLlBSSV9LRVkgPSAyOyAvKiBGaWVsZCBpcyBwYXJ0IG9mIGEgcHJpbWFyeSBrZXkgKi9cclxuZXhwb3J0cy5VTklRVUVfS0VZID0gNDsgLyogRmllbGQgaXMgcGFydCBvZiBhIHVuaXF1ZSBrZXkgKi9cclxuZXhwb3J0cy5NVUxUSVBMRV9LRVkgPSA4OyAvKiBGaWVsZCBpcyBwYXJ0IG9mIGEga2V5ICovXHJcbmV4cG9ydHMuQkxPQiA9IDE2OyAvKiBGaWVsZCBpcyBhIGJsb2IgKi9cclxuZXhwb3J0cy5VTlNJR05FRCA9IDMyOyAvKiBGaWVsZCBpcyB1bnNpZ25lZCAqL1xyXG5leHBvcnRzLlpFUk9GSUxMID0gNjQ7IC8qIEZpZWxkIGlzIHplcm9maWxsICovXHJcbmV4cG9ydHMuQklOQVJZID0gMTI4OyAvKiBGaWVsZCBpcyBiaW5hcnkgICAqL1xyXG5cclxuLyogVGhlIGZvbGxvd2luZyBhcmUgb25seSBzZW50IHRvIG5ldyBjbGllbnRzICovXHJcbmV4cG9ydHMuRU5VTSA9IDI1NjsgLyogZmllbGQgaXMgYW4gZW51bSAqL1xyXG5leHBvcnRzLkFVVE9fSU5DUkVNRU5UID0gNTEyOyAvKiBmaWVsZCBpcyBhIGF1dG9pbmNyZW1lbnQgZmllbGQgKi9cclxuZXhwb3J0cy5USU1FU1RBTVAgPSAxMDI0OyAvKiBGaWVsZCBpcyBhIHRpbWVzdGFtcCAqL1xyXG5leHBvcnRzLlNFVCA9IDIwNDg7IC8qIGZpZWxkIGlzIGEgc2V0ICovXHJcbmV4cG9ydHMuTk9fREVGQVVMVF9WQUxVRSA9IDQwOTY7IC8qIEZpZWxkIGRvZXNuJ3QgaGF2ZSBkZWZhdWx0IHZhbHVlICovXHJcbmV4cG9ydHMuT05fVVBEQVRFX05PVyA9IDgxOTI7IC8qIEZpZWxkIGlzIHNldCB0byBOT1cgb24gVVBEQVRFICovXHJcbmV4cG9ydHMuTlVNID0gMzI3Njg7IC8qIEZpZWxkIGlzIG51bSAoZm9yIGNsaWVudHMpICovXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/constants/field_flags.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/constants/server_status.js":
/*!************************************************************!*\
  !*** ./node_modules/mysql2/lib/constants/server_status.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\n\r\n// Manually extracted from mysql-5.5.23/include/mysql_com.h\r\n\r\n/**\r\n  Is raised when a multi-statement transaction\r\n  has been started, either explicitly, by means\r\n  of BEGIN or COMMIT AND CHAIN, or\r\n  implicitly, by the first transactional\r\n  statement, when autocommit=off.\r\n*/\r\nexports.SERVER_STATUS_IN_TRANS = 1;\r\nexports.SERVER_STATUS_AUTOCOMMIT = 2; /* Server in auto_commit mode */\r\nexports.SERVER_MORE_RESULTS_EXISTS = 8; /* Multi query - next query exists */\r\nexports.SERVER_QUERY_NO_GOOD_INDEX_USED = 16;\r\nexports.SERVER_QUERY_NO_INDEX_USED = 32;\r\n/**\r\n  The server was able to fulfill the clients request and opened a\r\n  read-only non-scrollable cursor for a query. This flag comes\r\n  in reply to COM_STMT_EXECUTE and COM_STMT_FETCH commands.\r\n*/\r\nexports.SERVER_STATUS_CURSOR_EXISTS = 64;\r\n/**\r\n  This flag is sent when a read-only cursor is exhausted, in reply to\r\n  COM_STMT_FETCH command.\r\n*/\r\nexports.SERVER_STATUS_LAST_ROW_SENT = 128;\r\nexports.SERVER_STATUS_DB_DROPPED = 256; /* A database was dropped */\r\nexports.SERVER_STATUS_NO_BACKSLASH_ESCAPES = 512;\r\n/**\r\n  Sent to the client if after a prepared statement reprepare\r\n  we discovered that the new statement returns a different\r\n  number of result set columns.\r\n*/\r\nexports.SERVER_STATUS_METADATA_CHANGED = 1024;\r\nexports.SERVER_QUERY_WAS_SLOW = 2048;\r\n\r\n/**\r\n  To mark ResultSet containing output parameter values.\r\n*/\r\nexports.SERVER_PS_OUT_PARAMS = 4096;\r\n\r\nexports.SERVER_STATUS_IN_TRANS_READONLY = 0x2000; // in a read-only transaction\r\nexports.SERVER_SESSION_STATE_CHANGED = 0x4000;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29uc3RhbnRzL3NlcnZlcl9zdGF0dXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QixnQ0FBZ0MsTUFBTTtBQUN0QyxrQ0FBa0MsTUFBTTtBQUN4Qyx1Q0FBdUM7QUFDdkMsa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUM7QUFDbkMsZ0NBQWdDLFFBQVE7QUFDeEMsMENBQTBDO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0M7QUFDdEMsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0EsdUNBQXVDLFdBQVc7QUFDbEQsb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL2NvbnN0YW50cy9zZXJ2ZXJfc3RhdHVzLmpzP2U5OTAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxuLy8gTWFudWFsbHkgZXh0cmFjdGVkIGZyb20gbXlzcWwtNS41LjIzL2luY2x1ZGUvbXlzcWxfY29tLmhcclxuXHJcbi8qKlxyXG4gIElzIHJhaXNlZCB3aGVuIGEgbXVsdGktc3RhdGVtZW50IHRyYW5zYWN0aW9uXHJcbiAgaGFzIGJlZW4gc3RhcnRlZCwgZWl0aGVyIGV4cGxpY2l0bHksIGJ5IG1lYW5zXHJcbiAgb2YgQkVHSU4gb3IgQ09NTUlUIEFORCBDSEFJTiwgb3JcclxuICBpbXBsaWNpdGx5LCBieSB0aGUgZmlyc3QgdHJhbnNhY3Rpb25hbFxyXG4gIHN0YXRlbWVudCwgd2hlbiBhdXRvY29tbWl0PW9mZi5cclxuKi9cclxuZXhwb3J0cy5TRVJWRVJfU1RBVFVTX0lOX1RSQU5TID0gMTtcclxuZXhwb3J0cy5TRVJWRVJfU1RBVFVTX0FVVE9DT01NSVQgPSAyOyAvKiBTZXJ2ZXIgaW4gYXV0b19jb21taXQgbW9kZSAqL1xyXG5leHBvcnRzLlNFUlZFUl9NT1JFX1JFU1VMVFNfRVhJU1RTID0gODsgLyogTXVsdGkgcXVlcnkgLSBuZXh0IHF1ZXJ5IGV4aXN0cyAqL1xyXG5leHBvcnRzLlNFUlZFUl9RVUVSWV9OT19HT09EX0lOREVYX1VTRUQgPSAxNjtcclxuZXhwb3J0cy5TRVJWRVJfUVVFUllfTk9fSU5ERVhfVVNFRCA9IDMyO1xyXG4vKipcclxuICBUaGUgc2VydmVyIHdhcyBhYmxlIHRvIGZ1bGZpbGwgdGhlIGNsaWVudHMgcmVxdWVzdCBhbmQgb3BlbmVkIGFcclxuICByZWFkLW9ubHkgbm9uLXNjcm9sbGFibGUgY3Vyc29yIGZvciBhIHF1ZXJ5LiBUaGlzIGZsYWcgY29tZXNcclxuICBpbiByZXBseSB0byBDT01fU1RNVF9FWEVDVVRFIGFuZCBDT01fU1RNVF9GRVRDSCBjb21tYW5kcy5cclxuKi9cclxuZXhwb3J0cy5TRVJWRVJfU1RBVFVTX0NVUlNPUl9FWElTVFMgPSA2NDtcclxuLyoqXHJcbiAgVGhpcyBmbGFnIGlzIHNlbnQgd2hlbiBhIHJlYWQtb25seSBjdXJzb3IgaXMgZXhoYXVzdGVkLCBpbiByZXBseSB0b1xyXG4gIENPTV9TVE1UX0ZFVENIIGNvbW1hbmQuXHJcbiovXHJcbmV4cG9ydHMuU0VSVkVSX1NUQVRVU19MQVNUX1JPV19TRU5UID0gMTI4O1xyXG5leHBvcnRzLlNFUlZFUl9TVEFUVVNfREJfRFJPUFBFRCA9IDI1NjsgLyogQSBkYXRhYmFzZSB3YXMgZHJvcHBlZCAqL1xyXG5leHBvcnRzLlNFUlZFUl9TVEFUVVNfTk9fQkFDS1NMQVNIX0VTQ0FQRVMgPSA1MTI7XHJcbi8qKlxyXG4gIFNlbnQgdG8gdGhlIGNsaWVudCBpZiBhZnRlciBhIHByZXBhcmVkIHN0YXRlbWVudCByZXByZXBhcmVcclxuICB3ZSBkaXNjb3ZlcmVkIHRoYXQgdGhlIG5ldyBzdGF0ZW1lbnQgcmV0dXJucyBhIGRpZmZlcmVudFxyXG4gIG51bWJlciBvZiByZXN1bHQgc2V0IGNvbHVtbnMuXHJcbiovXHJcbmV4cG9ydHMuU0VSVkVSX1NUQVRVU19NRVRBREFUQV9DSEFOR0VEID0gMTAyNDtcclxuZXhwb3J0cy5TRVJWRVJfUVVFUllfV0FTX1NMT1cgPSAyMDQ4O1xyXG5cclxuLyoqXHJcbiAgVG8gbWFyayBSZXN1bHRTZXQgY29udGFpbmluZyBvdXRwdXQgcGFyYW1ldGVyIHZhbHVlcy5cclxuKi9cclxuZXhwb3J0cy5TRVJWRVJfUFNfT1VUX1BBUkFNUyA9IDQwOTY7XHJcblxyXG5leHBvcnRzLlNFUlZFUl9TVEFUVVNfSU5fVFJBTlNfUkVBRE9OTFkgPSAweDIwMDA7IC8vIGluIGEgcmVhZC1vbmx5IHRyYW5zYWN0aW9uXHJcbmV4cG9ydHMuU0VSVkVSX1NFU1NJT05fU1RBVEVfQ0hBTkdFRCA9IDB4NDAwMDtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/constants/server_status.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/constants/session_track.js":
/*!************************************************************!*\
  !*** ./node_modules/mysql2/lib/constants/session_track.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\n\r\nexports.SYSTEM_VARIABLES = 0;\r\nexports.SCHEMA = 1;\r\nexports.STATE_CHANGE = 2;\r\nexports.STATE_GTIDS = 3;\r\nexports.TRANSACTION_CHARACTERISTICS = 4;\r\nexports.TRANSACTION_STATE = 5;\r\n\r\nexports.FIRST_KEY = exports.SYSTEM_VARIABLES;\r\nexports.LAST_KEY = exports.TRANSACTION_STATE;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29uc3RhbnRzL3Nlc3Npb25fdHJhY2suanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLHdCQUF3QjtBQUN4QixjQUFjO0FBQ2Qsb0JBQW9CO0FBQ3BCLG1CQUFtQjtBQUNuQixtQ0FBbUM7QUFDbkMseUJBQXlCO0FBQ3pCO0FBQ0EsaUJBQWlCO0FBQ2pCLGdCQUFnQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb25zdGFudHMvc2Vzc2lvbl90cmFjay5qcz85MDZmIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuXHJcbmV4cG9ydHMuU1lTVEVNX1ZBUklBQkxFUyA9IDA7XHJcbmV4cG9ydHMuU0NIRU1BID0gMTtcclxuZXhwb3J0cy5TVEFURV9DSEFOR0UgPSAyO1xyXG5leHBvcnRzLlNUQVRFX0dUSURTID0gMztcclxuZXhwb3J0cy5UUkFOU0FDVElPTl9DSEFSQUNURVJJU1RJQ1MgPSA0O1xyXG5leHBvcnRzLlRSQU5TQUNUSU9OX1NUQVRFID0gNTtcclxuXHJcbmV4cG9ydHMuRklSU1RfS0VZID0gZXhwb3J0cy5TWVNURU1fVkFSSUFCTEVTO1xyXG5leHBvcnRzLkxBU1RfS0VZID0gZXhwb3J0cy5UUkFOU0FDVElPTl9TVEFURTtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/constants/session_track.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/constants/ssl_profiles.js":
/*!***********************************************************!*\
  !*** ./node_modules/mysql2/lib/constants/ssl_profiles.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\nconst awsCaBundle = __webpack_require__(/*! aws-ssl-profiles */ \"(middleware)/./node_modules/aws-ssl-profiles/lib/index.js\");\r\n\r\n/**\r\n * @deprecated\r\n * Please, use [**aws-ssl-profiles**](https://github.com/mysqljs/aws-ssl-profiles).\r\n */\r\nexports[\"Amazon RDS\"] = {\r\n  ca: awsCaBundle.ca,\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29uc3RhbnRzL3NzbF9wcm9maWxlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0Esb0JBQW9CLG1CQUFPLENBQUMsbUZBQWtCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb25zdGFudHMvc3NsX3Byb2ZpbGVzLmpzP2FhMjQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxuY29uc3QgYXdzQ2FCdW5kbGUgPSByZXF1aXJlKCdhd3Mtc3NsLXByb2ZpbGVzJyk7XHJcblxyXG4vKipcclxuICogQGRlcHJlY2F0ZWRcclxuICogUGxlYXNlLCB1c2UgWyoqYXdzLXNzbC1wcm9maWxlcyoqXShodHRwczovL2dpdGh1Yi5jb20vbXlzcWxqcy9hd3Mtc3NsLXByb2ZpbGVzKS5cclxuICovXHJcbmV4cG9ydHNbJ0FtYXpvbiBSRFMnXSA9IHtcclxuICBjYTogYXdzQ2FCdW5kbGUuY2EsXHJcbn07XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/constants/ssl_profiles.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/constants/types.js":
/*!****************************************************!*\
  !*** ./node_modules/mysql2/lib/constants/types.js ***!
  \****************************************************/
/***/ ((module) => {

"use strict";
eval("\r\n\r\nmodule.exports = {\r\n  0x00: 'DECIMAL', // aka DECIMAL\r\n  0x01: 'TINY', // aka TINYINT, 1 byte\r\n  0x02: 'SHORT', // aka SMALLINT, 2 bytes\r\n  0x03: 'LONG', // aka INT, 4 bytes\r\n  0x04: 'FLOAT', // aka FLOAT, 4-8 bytes\r\n  0x05: 'DOUBLE', // aka DOUBLE, 8 bytes\r\n  0x06: 'NULL', // NULL (used for prepared statements, I think)\r\n  0x07: 'TIMESTAMP', // aka TIMESTAMP\r\n  0x08: 'LONGLONG', // aka BIGINT, 8 bytes\r\n  0x09: 'INT24', // aka MEDIUMINT, 3 bytes\r\n  0x0a: 'DATE', // aka DATE\r\n  0x0b: 'TIME', // aka TIME\r\n  0x0c: 'DATETIME', // aka DATETIME\r\n  0x0d: 'YEAR', // aka YEAR, 1 byte (don't ask)\r\n  0x0e: 'NEWDATE', // aka ?\r\n  0x0f: 'VARCHAR', // aka VARCHAR (?)\r\n  0x10: 'BIT', // aka BIT, 1-8 byte\r\n  0xf5: 'JSON',\r\n  0xf6: 'NEWDECIMAL', // aka DECIMAL\r\n  0xf7: 'ENUM', // aka ENUM\r\n  0xf8: 'SET', // aka SET\r\n  0xf9: 'TINY_BLOB', // aka TINYBLOB, TINYTEXT\r\n  0xfa: 'MEDIUM_BLOB', // aka MEDIUMBLOB, MEDIUMTEXT\r\n  0xfb: 'LONG_BLOB', // aka LONGBLOG, LONGTEXT\r\n  0xfc: 'BLOB', // aka BLOB, TEXT\r\n  0xfd: 'VAR_STRING', // aka VARCHAR, VARBINARY\r\n  0xfe: 'STRING', // aka CHAR, BINARY\r\n  0xff: 'GEOMETRY', // aka GEOMETRY\r\n};\r\n\r\n// Manually extracted from mysql-5.5.23/include/mysql_com.h\r\n// some more info here: http://dev.mysql.com/doc/refman/5.5/en/c-api-prepared-statement-type-codes.html\r\nmodule.exports.DECIMAL = 0x00; // aka DECIMAL (http://dev.mysql.com/doc/refman/5.0/en/precision-math-decimal-changes.html)\r\nmodule.exports.TINY = 0x01; // aka TINYINT, 1 byte\r\nmodule.exports.SHORT = 0x02; // aka SMALLINT, 2 bytes\r\nmodule.exports.LONG = 0x03; // aka INT, 4 bytes\r\nmodule.exports.FLOAT = 0x04; // aka FLOAT, 4-8 bytes\r\nmodule.exports.DOUBLE = 0x05; // aka DOUBLE, 8 bytes\r\nmodule.exports.NULL = 0x06; // NULL (used for prepared statements, I think)\r\nmodule.exports.TIMESTAMP = 0x07; // aka TIMESTAMP\r\nmodule.exports.LONGLONG = 0x08; // aka BIGINT, 8 bytes\r\nmodule.exports.INT24 = 0x09; // aka MEDIUMINT, 3 bytes\r\nmodule.exports.DATE = 0x0a; // aka DATE\r\nmodule.exports.TIME = 0x0b; // aka TIME\r\nmodule.exports.DATETIME = 0x0c; // aka DATETIME\r\nmodule.exports.YEAR = 0x0d; // aka YEAR, 1 byte (don't ask)\r\nmodule.exports.NEWDATE = 0x0e; // aka ?\r\nmodule.exports.VARCHAR = 0x0f; // aka VARCHAR (?)\r\nmodule.exports.BIT = 0x10; // aka BIT, 1-8 byte\r\nmodule.exports.VECTOR = 0xf2;\r\nmodule.exports.JSON = 0xf5;\r\nmodule.exports.NEWDECIMAL = 0xf6; // aka DECIMAL\r\nmodule.exports.ENUM = 0xf7; // aka ENUM\r\nmodule.exports.SET = 0xf8; // aka SET\r\nmodule.exports.TINY_BLOB = 0xf9; // aka TINYBLOB, TINYTEXT\r\nmodule.exports.MEDIUM_BLOB = 0xfa; // aka MEDIUMBLOB, MEDIUMTEXT\r\nmodule.exports.LONG_BLOB = 0xfb; // aka LONGBLOG, LONGTEXT\r\nmodule.exports.BLOB = 0xfc; // aka BLOB, TEXT\r\nmodule.exports.VAR_STRING = 0xfd; // aka VARCHAR, VARBINARY\r\nmodule.exports.STRING = 0xfe; // aka CHAR, BINARY\r\nmodule.exports.GEOMETRY = 0xff; // aka GEOMETRY\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29uc3RhbnRzL3R5cGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsU0FBUztBQUMvQixtQkFBbUIsU0FBUztBQUM1QixvQkFBb0IsU0FBUztBQUM3QixtQkFBbUIsU0FBUztBQUM1QixvQkFBb0IsU0FBUztBQUM3QixxQkFBcUIsU0FBUztBQUM5QixtQkFBbUIsU0FBUztBQUM1Qix3QkFBd0IsU0FBUztBQUNqQyx1QkFBdUIsU0FBUztBQUNoQyxvQkFBb0IsU0FBUztBQUM3QixtQkFBbUIsU0FBUztBQUM1QixtQkFBbUIsU0FBUztBQUM1Qix1QkFBdUIsU0FBUztBQUNoQyxtQkFBbUIsU0FBUztBQUM1QixzQkFBc0IsU0FBUztBQUMvQixzQkFBc0IsU0FBUztBQUMvQixrQkFBa0IsU0FBUztBQUMzQixxQkFBcUI7QUFDckIsbUJBQW1CO0FBQ25CLHlCQUF5QixTQUFTO0FBQ2xDLG1CQUFtQixTQUFTO0FBQzVCLGtCQUFrQixTQUFTO0FBQzNCLHdCQUF3QixTQUFTO0FBQ2pDLDBCQUEwQixTQUFTO0FBQ25DLHdCQUF3QixTQUFTO0FBQ2pDLG1CQUFtQixTQUFTO0FBQzVCLHlCQUF5QixTQUFTO0FBQ2xDLHFCQUFxQixTQUFTO0FBQzlCLHVCQUF1QixTQUFTIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL2NvbnN0YW50cy90eXBlcy5qcz82MWY2Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuXHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG4gIDB4MDA6ICdERUNJTUFMJywgLy8gYWthIERFQ0lNQUxcclxuICAweDAxOiAnVElOWScsIC8vIGFrYSBUSU5ZSU5ULCAxIGJ5dGVcclxuICAweDAyOiAnU0hPUlQnLCAvLyBha2EgU01BTExJTlQsIDIgYnl0ZXNcclxuICAweDAzOiAnTE9ORycsIC8vIGFrYSBJTlQsIDQgYnl0ZXNcclxuICAweDA0OiAnRkxPQVQnLCAvLyBha2EgRkxPQVQsIDQtOCBieXRlc1xyXG4gIDB4MDU6ICdET1VCTEUnLCAvLyBha2EgRE9VQkxFLCA4IGJ5dGVzXHJcbiAgMHgwNjogJ05VTEwnLCAvLyBOVUxMICh1c2VkIGZvciBwcmVwYXJlZCBzdGF0ZW1lbnRzLCBJIHRoaW5rKVxyXG4gIDB4MDc6ICdUSU1FU1RBTVAnLCAvLyBha2EgVElNRVNUQU1QXHJcbiAgMHgwODogJ0xPTkdMT05HJywgLy8gYWthIEJJR0lOVCwgOCBieXRlc1xyXG4gIDB4MDk6ICdJTlQyNCcsIC8vIGFrYSBNRURJVU1JTlQsIDMgYnl0ZXNcclxuICAweDBhOiAnREFURScsIC8vIGFrYSBEQVRFXHJcbiAgMHgwYjogJ1RJTUUnLCAvLyBha2EgVElNRVxyXG4gIDB4MGM6ICdEQVRFVElNRScsIC8vIGFrYSBEQVRFVElNRVxyXG4gIDB4MGQ6ICdZRUFSJywgLy8gYWthIFlFQVIsIDEgYnl0ZSAoZG9uJ3QgYXNrKVxyXG4gIDB4MGU6ICdORVdEQVRFJywgLy8gYWthID9cclxuICAweDBmOiAnVkFSQ0hBUicsIC8vIGFrYSBWQVJDSEFSICg/KVxyXG4gIDB4MTA6ICdCSVQnLCAvLyBha2EgQklULCAxLTggYnl0ZVxyXG4gIDB4ZjU6ICdKU09OJyxcclxuICAweGY2OiAnTkVXREVDSU1BTCcsIC8vIGFrYSBERUNJTUFMXHJcbiAgMHhmNzogJ0VOVU0nLCAvLyBha2EgRU5VTVxyXG4gIDB4Zjg6ICdTRVQnLCAvLyBha2EgU0VUXHJcbiAgMHhmOTogJ1RJTllfQkxPQicsIC8vIGFrYSBUSU5ZQkxPQiwgVElOWVRFWFRcclxuICAweGZhOiAnTUVESVVNX0JMT0InLCAvLyBha2EgTUVESVVNQkxPQiwgTUVESVVNVEVYVFxyXG4gIDB4ZmI6ICdMT05HX0JMT0InLCAvLyBha2EgTE9OR0JMT0csIExPTkdURVhUXHJcbiAgMHhmYzogJ0JMT0InLCAvLyBha2EgQkxPQiwgVEVYVFxyXG4gIDB4ZmQ6ICdWQVJfU1RSSU5HJywgLy8gYWthIFZBUkNIQVIsIFZBUkJJTkFSWVxyXG4gIDB4ZmU6ICdTVFJJTkcnLCAvLyBha2EgQ0hBUiwgQklOQVJZXHJcbiAgMHhmZjogJ0dFT01FVFJZJywgLy8gYWthIEdFT01FVFJZXHJcbn07XHJcblxyXG4vLyBNYW51YWxseSBleHRyYWN0ZWQgZnJvbSBteXNxbC01LjUuMjMvaW5jbHVkZS9teXNxbF9jb20uaFxyXG4vLyBzb21lIG1vcmUgaW5mbyBoZXJlOiBodHRwOi8vZGV2Lm15c3FsLmNvbS9kb2MvcmVmbWFuLzUuNS9lbi9jLWFwaS1wcmVwYXJlZC1zdGF0ZW1lbnQtdHlwZS1jb2Rlcy5odG1sXHJcbm1vZHVsZS5leHBvcnRzLkRFQ0lNQUwgPSAweDAwOyAvLyBha2EgREVDSU1BTCAoaHR0cDovL2Rldi5teXNxbC5jb20vZG9jL3JlZm1hbi81LjAvZW4vcHJlY2lzaW9uLW1hdGgtZGVjaW1hbC1jaGFuZ2VzLmh0bWwpXHJcbm1vZHVsZS5leHBvcnRzLlRJTlkgPSAweDAxOyAvLyBha2EgVElOWUlOVCwgMSBieXRlXHJcbm1vZHVsZS5leHBvcnRzLlNIT1JUID0gMHgwMjsgLy8gYWthIFNNQUxMSU5ULCAyIGJ5dGVzXHJcbm1vZHVsZS5leHBvcnRzLkxPTkcgPSAweDAzOyAvLyBha2EgSU5ULCA0IGJ5dGVzXHJcbm1vZHVsZS5leHBvcnRzLkZMT0FUID0gMHgwNDsgLy8gYWthIEZMT0FULCA0LTggYnl0ZXNcclxubW9kdWxlLmV4cG9ydHMuRE9VQkxFID0gMHgwNTsgLy8gYWthIERPVUJMRSwgOCBieXRlc1xyXG5tb2R1bGUuZXhwb3J0cy5OVUxMID0gMHgwNjsgLy8gTlVMTCAodXNlZCBmb3IgcHJlcGFyZWQgc3RhdGVtZW50cywgSSB0aGluaylcclxubW9kdWxlLmV4cG9ydHMuVElNRVNUQU1QID0gMHgwNzsgLy8gYWthIFRJTUVTVEFNUFxyXG5tb2R1bGUuZXhwb3J0cy5MT05HTE9ORyA9IDB4MDg7IC8vIGFrYSBCSUdJTlQsIDggYnl0ZXNcclxubW9kdWxlLmV4cG9ydHMuSU5UMjQgPSAweDA5OyAvLyBha2EgTUVESVVNSU5ULCAzIGJ5dGVzXHJcbm1vZHVsZS5leHBvcnRzLkRBVEUgPSAweDBhOyAvLyBha2EgREFURVxyXG5tb2R1bGUuZXhwb3J0cy5USU1FID0gMHgwYjsgLy8gYWthIFRJTUVcclxubW9kdWxlLmV4cG9ydHMuREFURVRJTUUgPSAweDBjOyAvLyBha2EgREFURVRJTUVcclxubW9kdWxlLmV4cG9ydHMuWUVBUiA9IDB4MGQ7IC8vIGFrYSBZRUFSLCAxIGJ5dGUgKGRvbid0IGFzaylcclxubW9kdWxlLmV4cG9ydHMuTkVXREFURSA9IDB4MGU7IC8vIGFrYSA/XHJcbm1vZHVsZS5leHBvcnRzLlZBUkNIQVIgPSAweDBmOyAvLyBha2EgVkFSQ0hBUiAoPylcclxubW9kdWxlLmV4cG9ydHMuQklUID0gMHgxMDsgLy8gYWthIEJJVCwgMS04IGJ5dGVcclxubW9kdWxlLmV4cG9ydHMuVkVDVE9SID0gMHhmMjtcclxubW9kdWxlLmV4cG9ydHMuSlNPTiA9IDB4ZjU7XHJcbm1vZHVsZS5leHBvcnRzLk5FV0RFQ0lNQUwgPSAweGY2OyAvLyBha2EgREVDSU1BTFxyXG5tb2R1bGUuZXhwb3J0cy5FTlVNID0gMHhmNzsgLy8gYWthIEVOVU1cclxubW9kdWxlLmV4cG9ydHMuU0VUID0gMHhmODsgLy8gYWthIFNFVFxyXG5tb2R1bGUuZXhwb3J0cy5USU5ZX0JMT0IgPSAweGY5OyAvLyBha2EgVElOWUJMT0IsIFRJTllURVhUXHJcbm1vZHVsZS5leHBvcnRzLk1FRElVTV9CTE9CID0gMHhmYTsgLy8gYWthIE1FRElVTUJMT0IsIE1FRElVTVRFWFRcclxubW9kdWxlLmV4cG9ydHMuTE9OR19CTE9CID0gMHhmYjsgLy8gYWthIExPTkdCTE9HLCBMT05HVEVYVFxyXG5tb2R1bGUuZXhwb3J0cy5CTE9CID0gMHhmYzsgLy8gYWthIEJMT0IsIFRFWFRcclxubW9kdWxlLmV4cG9ydHMuVkFSX1NUUklORyA9IDB4ZmQ7IC8vIGFrYSBWQVJDSEFSLCBWQVJCSU5BUllcclxubW9kdWxlLmV4cG9ydHMuU1RSSU5HID0gMHhmZTsgLy8gYWthIENIQVIsIEJJTkFSWVxyXG5tb2R1bGUuZXhwb3J0cy5HRU9NRVRSWSA9IDB4ZmY7IC8vIGFrYSBHRU9NRVRSWVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/constants/types.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/create_connection.js":
/*!******************************************************!*\
  !*** ./node_modules/mysql2/lib/create_connection.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\nconst Connection = __webpack_require__(/*! ./connection.js */ \"(middleware)/./node_modules/mysql2/lib/connection.js\");\r\nconst ConnectionConfig = __webpack_require__(/*! ./connection_config.js */ \"(middleware)/./node_modules/mysql2/lib/connection_config.js\");\r\n\r\nfunction createConnection(opts) {\r\n  return new Connection({ config: new ConnectionConfig(opts) });\r\n}\r\n\r\nmodule.exports = createConnection;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY3JlYXRlX2Nvbm5lY3Rpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLG1CQUFtQixtQkFBTyxDQUFDLDZFQUFpQjtBQUM1Qyx5QkFBeUIsbUJBQU8sQ0FBQywyRkFBd0I7QUFDekQ7QUFDQTtBQUNBLDBCQUEwQixvQ0FBb0M7QUFDOUQ7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL2NyZWF0ZV9jb25uZWN0aW9uLmpzP2ExNWMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxuY29uc3QgQ29ubmVjdGlvbiA9IHJlcXVpcmUoJy4vY29ubmVjdGlvbi5qcycpO1xyXG5jb25zdCBDb25uZWN0aW9uQ29uZmlnID0gcmVxdWlyZSgnLi9jb25uZWN0aW9uX2NvbmZpZy5qcycpO1xyXG5cclxuZnVuY3Rpb24gY3JlYXRlQ29ubmVjdGlvbihvcHRzKSB7XHJcbiAgcmV0dXJuIG5ldyBDb25uZWN0aW9uKHsgY29uZmlnOiBuZXcgQ29ubmVjdGlvbkNvbmZpZyhvcHRzKSB9KTtcclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBjcmVhdGVDb25uZWN0aW9uO1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/create_connection.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/create_pool.js":
/*!************************************************!*\
  !*** ./node_modules/mysql2/lib/create_pool.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\nconst Pool = __webpack_require__(/*! ./pool.js */ \"(middleware)/./node_modules/mysql2/lib/pool.js\");\r\nconst PoolConfig = __webpack_require__(/*! ./pool_config.js */ \"(middleware)/./node_modules/mysql2/lib/pool_config.js\");\r\n\r\nfunction createPool(config) {\r\n  return new Pool({ config: new PoolConfig(config) });\r\n}\r\n\r\nmodule.exports = createPool;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY3JlYXRlX3Bvb2wuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLGFBQWEsbUJBQU8sQ0FBQyxpRUFBVztBQUNoQyxtQkFBbUIsbUJBQU8sQ0FBQywrRUFBa0I7QUFDN0M7QUFDQTtBQUNBLG9CQUFvQixnQ0FBZ0M7QUFDcEQ7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL2NyZWF0ZV9wb29sLmpzPzJhYmMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxuY29uc3QgUG9vbCA9IHJlcXVpcmUoJy4vcG9vbC5qcycpO1xyXG5jb25zdCBQb29sQ29uZmlnID0gcmVxdWlyZSgnLi9wb29sX2NvbmZpZy5qcycpO1xyXG5cclxuZnVuY3Rpb24gY3JlYXRlUG9vbChjb25maWcpIHtcclxuICByZXR1cm4gbmV3IFBvb2woeyBjb25maWc6IG5ldyBQb29sQ29uZmlnKGNvbmZpZykgfSk7XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gY3JlYXRlUG9vbDtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/create_pool.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/create_pool_cluster.js":
/*!********************************************************!*\
  !*** ./node_modules/mysql2/lib/create_pool_cluster.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\nconst PoolCluster = __webpack_require__(/*! ./pool_cluster.js */ \"(middleware)/./node_modules/mysql2/lib/pool_cluster.js\");\r\n\r\nfunction createPoolCluster(config) {\r\n  return new PoolCluster(config);\r\n}\r\n\r\nmodule.exports = createPoolCluster;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY3JlYXRlX3Bvb2xfY2x1c3Rlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0Esb0JBQW9CLG1CQUFPLENBQUMsaUZBQW1CO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jcmVhdGVfcG9vbF9jbHVzdGVyLmpzPzA0YWYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxuY29uc3QgUG9vbENsdXN0ZXIgPSByZXF1aXJlKCcuL3Bvb2xfY2x1c3Rlci5qcycpO1xyXG5cclxuZnVuY3Rpb24gY3JlYXRlUG9vbENsdXN0ZXIoY29uZmlnKSB7XHJcbiAgcmV0dXJuIG5ldyBQb29sQ2x1c3Rlcihjb25maWcpO1xyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGNyZWF0ZVBvb2xDbHVzdGVyO1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/create_pool_cluster.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/helpers.js":
/*!********************************************!*\
  !*** ./node_modules/mysql2/lib/helpers.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\n/*\r\n\r\n  this seems to be not only shorter, but faster than\r\n  string.replace(/\\\\/g, '\\\\\\\\').\r\n            replace(/\\u0008/g, '\\\\b').\r\n            replace(/\\t/g, '\\\\t').\r\n            replace(/\\n/g, '\\\\n').\r\n            replace(/\\f/g, '\\\\f').\r\n            replace(/\\r/g, '\\\\r').\r\n            replace(/'/g, '\\\\\\'').\r\n            replace(/\"/g, '\\\\\"');\r\n  or string.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\")\r\n  see http://jsperf.com/string-escape-regexp-vs-json-stringify\r\n  */\r\nfunction srcEscape(str) {\r\n  return JSON.stringify({\r\n    [str]: 1,\r\n  }).slice(1, -3);\r\n}\r\n\r\nexports.srcEscape = srcEscape;\r\n\r\nlet highlightFn;\r\nlet cardinalRecommended = false;\r\ntry {\r\n  // the purpose of this is to prevent projects using Webpack from displaying a warning during runtime if cardinal is not a dependency\r\n  const REQUIRE_TERMINATOR = '';\r\n  highlightFn = __webpack_require__(\"(middleware)/./node_modules/mysql2/lib sync recursive ^cardinal.*$\")(`cardinal${REQUIRE_TERMINATOR}`).highlight;\r\n} catch (err) {\r\n  highlightFn = (text) => {\r\n    if (!cardinalRecommended) {\r\n      // eslint-disable-next-line no-console\r\n      console.log('For nicer debug output consider install cardinal@^2.0.0');\r\n      cardinalRecommended = true;\r\n    }\r\n    return text;\r\n  };\r\n}\r\n\r\n/**\r\n * Prints debug message with code frame, will try to use `cardinal` if available.\r\n */\r\nfunction printDebugWithCode(msg, code) {\r\n  // eslint-disable-next-line no-console\r\n  console.log(`\\n\\n${msg}:\\n`);\r\n  // eslint-disable-next-line no-console\r\n  console.log(`${highlightFn(code)}\\n`);\r\n}\r\n\r\nexports.printDebugWithCode = printDebugWithCode;\r\n\r\n/**\r\n * checks whether the `type` is in the `list`\r\n */\r\nfunction typeMatch(type, list, Types) {\r\n  if (Array.isArray(list)) {\r\n    return list.some((t) => type === Types[t]);\r\n  }\r\n\r\n  return !!list;\r\n}\r\n\r\nexports.typeMatch = typeMatch;\r\n\r\nconst privateObjectProps = new Set([\r\n  '__defineGetter__',\r\n  '__defineSetter__',\r\n  '__lookupGetter__',\r\n  '__lookupSetter__',\r\n  '__proto__',\r\n]);\r\n\r\nexports.privateObjectProps = privateObjectProps;\r\n\r\nconst fieldEscape = (field, isEval = true) => {\r\n  if (privateObjectProps.has(field)) {\r\n    throw new Error(\r\n      `The field name (${field}) can't be the same as an object's private property.`\r\n    );\r\n  }\r\n\r\n  return isEval ? srcEscape(field) : field;\r\n};\r\nexports.fieldEscape = fieldEscape;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvaGVscGVycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxFQUFFO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsMEZBQVEsU0FBUyxFQUFFLG1CQUFtQixDQUFDLENBQUM7QUFDeEQsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixJQUFJO0FBQ3pCO0FBQ0EsaUJBQWlCLGtCQUFrQjtBQUNuQztBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsTUFBTTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL2hlbHBlcnMuanM/ZjA0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG4vKlxyXG5cclxuICB0aGlzIHNlZW1zIHRvIGJlIG5vdCBvbmx5IHNob3J0ZXIsIGJ1dCBmYXN0ZXIgdGhhblxyXG4gIHN0cmluZy5yZXBsYWNlKC9cXFxcL2csICdcXFxcXFxcXCcpLlxyXG4gICAgICAgICAgICByZXBsYWNlKC9cXHUwMDA4L2csICdcXFxcYicpLlxyXG4gICAgICAgICAgICByZXBsYWNlKC9cXHQvZywgJ1xcXFx0JykuXHJcbiAgICAgICAgICAgIHJlcGxhY2UoL1xcbi9nLCAnXFxcXG4nKS5cclxuICAgICAgICAgICAgcmVwbGFjZSgvXFxmL2csICdcXFxcZicpLlxyXG4gICAgICAgICAgICByZXBsYWNlKC9cXHIvZywgJ1xcXFxyJykuXHJcbiAgICAgICAgICAgIHJlcGxhY2UoLycvZywgJ1xcXFxcXCcnKS5cclxuICAgICAgICAgICAgcmVwbGFjZSgvXCIvZywgJ1xcXFxcIicpO1xyXG4gIG9yIHN0cmluZy5yZXBsYWNlKC9bXFwtXFxbXFxdXFwvXFx7XFx9XFwoXFwpXFwqXFwrXFw/XFwuXFxcXFxcXlxcJFxcfF0vZywgXCJcXFxcJCZcIilcclxuICBzZWUgaHR0cDovL2pzcGVyZi5jb20vc3RyaW5nLWVzY2FwZS1yZWdleHAtdnMtanNvbi1zdHJpbmdpZnlcclxuICAqL1xyXG5mdW5jdGlvbiBzcmNFc2NhcGUoc3RyKSB7XHJcbiAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHtcclxuICAgIFtzdHJdOiAxLFxyXG4gIH0pLnNsaWNlKDEsIC0zKTtcclxufVxyXG5cclxuZXhwb3J0cy5zcmNFc2NhcGUgPSBzcmNFc2NhcGU7XHJcblxyXG5sZXQgaGlnaGxpZ2h0Rm47XHJcbmxldCBjYXJkaW5hbFJlY29tbWVuZGVkID0gZmFsc2U7XHJcbnRyeSB7XHJcbiAgLy8gdGhlIHB1cnBvc2Ugb2YgdGhpcyBpcyB0byBwcmV2ZW50IHByb2plY3RzIHVzaW5nIFdlYnBhY2sgZnJvbSBkaXNwbGF5aW5nIGEgd2FybmluZyBkdXJpbmcgcnVudGltZSBpZiBjYXJkaW5hbCBpcyBub3QgYSBkZXBlbmRlbmN5XHJcbiAgY29uc3QgUkVRVUlSRV9URVJNSU5BVE9SID0gJyc7XHJcbiAgaGlnaGxpZ2h0Rm4gPSByZXF1aXJlKGBjYXJkaW5hbCR7UkVRVUlSRV9URVJNSU5BVE9SfWApLmhpZ2hsaWdodDtcclxufSBjYXRjaCAoZXJyKSB7XHJcbiAgaGlnaGxpZ2h0Rm4gPSAodGV4dCkgPT4ge1xyXG4gICAgaWYgKCFjYXJkaW5hbFJlY29tbWVuZGVkKSB7XHJcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXHJcbiAgICAgIGNvbnNvbGUubG9nKCdGb3IgbmljZXIgZGVidWcgb3V0cHV0IGNvbnNpZGVyIGluc3RhbGwgY2FyZGluYWxAXjIuMC4wJyk7XHJcbiAgICAgIGNhcmRpbmFsUmVjb21tZW5kZWQgPSB0cnVlO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRleHQ7XHJcbiAgfTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFByaW50cyBkZWJ1ZyBtZXNzYWdlIHdpdGggY29kZSBmcmFtZSwgd2lsbCB0cnkgdG8gdXNlIGBjYXJkaW5hbGAgaWYgYXZhaWxhYmxlLlxyXG4gKi9cclxuZnVuY3Rpb24gcHJpbnREZWJ1Z1dpdGhDb2RlKG1zZywgY29kZSkge1xyXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXHJcbiAgY29uc29sZS5sb2coYFxcblxcbiR7bXNnfTpcXG5gKTtcclxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxyXG4gIGNvbnNvbGUubG9nKGAke2hpZ2hsaWdodEZuKGNvZGUpfVxcbmApO1xyXG59XHJcblxyXG5leHBvcnRzLnByaW50RGVidWdXaXRoQ29kZSA9IHByaW50RGVidWdXaXRoQ29kZTtcclxuXHJcbi8qKlxyXG4gKiBjaGVja3Mgd2hldGhlciB0aGUgYHR5cGVgIGlzIGluIHRoZSBgbGlzdGBcclxuICovXHJcbmZ1bmN0aW9uIHR5cGVNYXRjaCh0eXBlLCBsaXN0LCBUeXBlcykge1xyXG4gIGlmIChBcnJheS5pc0FycmF5KGxpc3QpKSB7XHJcbiAgICByZXR1cm4gbGlzdC5zb21lKCh0KSA9PiB0eXBlID09PSBUeXBlc1t0XSk7XHJcbiAgfVxyXG5cclxuICByZXR1cm4gISFsaXN0O1xyXG59XHJcblxyXG5leHBvcnRzLnR5cGVNYXRjaCA9IHR5cGVNYXRjaDtcclxuXHJcbmNvbnN0IHByaXZhdGVPYmplY3RQcm9wcyA9IG5ldyBTZXQoW1xyXG4gICdfX2RlZmluZUdldHRlcl9fJyxcclxuICAnX19kZWZpbmVTZXR0ZXJfXycsXHJcbiAgJ19fbG9va3VwR2V0dGVyX18nLFxyXG4gICdfX2xvb2t1cFNldHRlcl9fJyxcclxuICAnX19wcm90b19fJyxcclxuXSk7XHJcblxyXG5leHBvcnRzLnByaXZhdGVPYmplY3RQcm9wcyA9IHByaXZhdGVPYmplY3RQcm9wcztcclxuXHJcbmNvbnN0IGZpZWxkRXNjYXBlID0gKGZpZWxkLCBpc0V2YWwgPSB0cnVlKSA9PiB7XHJcbiAgaWYgKHByaXZhdGVPYmplY3RQcm9wcy5oYXMoZmllbGQpKSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoXHJcbiAgICAgIGBUaGUgZmllbGQgbmFtZSAoJHtmaWVsZH0pIGNhbid0IGJlIHRoZSBzYW1lIGFzIGFuIG9iamVjdCdzIHByaXZhdGUgcHJvcGVydHkuYFxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIHJldHVybiBpc0V2YWwgPyBzcmNFc2NhcGUoZmllbGQpIDogZmllbGQ7XHJcbn07XHJcbmV4cG9ydHMuZmllbGRFc2NhcGUgPSBmaWVsZEVzY2FwZTtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/helpers.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/packet_parser.js":
/*!**************************************************!*\
  !*** ./node_modules/mysql2/lib/packet_parser.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\n\r\n\r\nconst Packet = __webpack_require__(/*! ./packets/packet.js */ \"(middleware)/./node_modules/mysql2/lib/packets/packet.js\");\r\n\r\nconst MAX_PACKET_LENGTH = 16777215;\r\n\r\nfunction readPacketLength(b, off) {\r\n  const b0 = b[off];\r\n  const b1 = b[off + 1];\r\n  const b2 = b[off + 2];\r\n  if (b1 + b2 === 0) {\r\n    return b0;\r\n  }\r\n  return b0 + (b1 << 8) + (b2 << 16);\r\n}\r\n\r\nclass PacketParser {\r\n  constructor(onPacket, packetHeaderLength) {\r\n    // 4 for normal packets, 7 for comprssed protocol packets\r\n    if (typeof packetHeaderLength === 'undefined') {\r\n      packetHeaderLength = 4;\r\n    }\r\n    // array of last payload chunks\r\n    // only used when current payload is not complete\r\n    this.buffer = [];\r\n    // total length of chunks on buffer\r\n    this.bufferLength = 0;\r\n    this.packetHeaderLength = packetHeaderLength;\r\n    // incomplete header state: number of header bytes received\r\n    this.headerLen = 0;\r\n    // expected payload length\r\n    this.length = 0;\r\n    this.largePacketParts = [];\r\n    this.firstPacketSequenceId = 0;\r\n    this.onPacket = onPacket;\r\n    this.execute = PacketParser.prototype.executeStart;\r\n    this._flushLargePacket =\r\n      packetHeaderLength === 7\r\n        ? this._flushLargePacket7\r\n        : this._flushLargePacket4;\r\n  }\r\n\r\n  _flushLargePacket4() {\r\n    const numPackets = this.largePacketParts.length;\r\n    this.largePacketParts.unshift(Buffer.from([0, 0, 0, 0])); // insert header\r\n    const body = Buffer.concat(this.largePacketParts);\r\n    const packet = new Packet(this.firstPacketSequenceId, body, 0, body.length);\r\n    this.largePacketParts.length = 0;\r\n    packet.numPackets = numPackets;\r\n    this.onPacket(packet);\r\n  }\r\n\r\n  _flushLargePacket7() {\r\n    const numPackets = this.largePacketParts.length;\r\n    this.largePacketParts.unshift(Buffer.from([0, 0, 0, 0, 0, 0, 0])); // insert header\r\n    const body = Buffer.concat(this.largePacketParts);\r\n    this.largePacketParts.length = 0;\r\n    const packet = new Packet(this.firstPacketSequenceId, body, 0, body.length);\r\n    packet.numPackets = numPackets;\r\n    this.onPacket(packet);\r\n  }\r\n\r\n  executeStart(chunk) {\r\n    let start = 0;\r\n    const end = chunk.length;\r\n    while (end - start >= 3) {\r\n      this.length = readPacketLength(chunk, start);\r\n      if (end - start >= this.length + this.packetHeaderLength) {\r\n        // at least one full packet\r\n        const sequenceId = chunk[start + 3];\r\n        if (\r\n          this.length < MAX_PACKET_LENGTH &&\r\n          this.largePacketParts.length === 0\r\n        ) {\r\n          this.onPacket(\r\n            new Packet(\r\n              sequenceId,\r\n              chunk,\r\n              start,\r\n              start + this.packetHeaderLength + this.length\r\n            )\r\n          );\r\n        } else {\r\n          // first large packet - remember it's id\r\n          if (this.largePacketParts.length === 0) {\r\n            this.firstPacketSequenceId = sequenceId;\r\n          }\r\n          this.largePacketParts.push(\r\n            chunk.slice(\r\n              start + this.packetHeaderLength,\r\n              start + this.packetHeaderLength + this.length\r\n            )\r\n          );\r\n          if (this.length < MAX_PACKET_LENGTH) {\r\n            this._flushLargePacket();\r\n          }\r\n        }\r\n        start += this.packetHeaderLength + this.length;\r\n      } else {\r\n        // payload is incomplete\r\n        this.buffer = [chunk.slice(start + 3, end)];\r\n        this.bufferLength = end - start - 3;\r\n        this.execute = PacketParser.prototype.executePayload;\r\n        return;\r\n      }\r\n    }\r\n    if (end - start > 0) {\r\n      // there is start of length header, but it's not full 3 bytes\r\n      this.headerLen = end - start; // 1 or 2 bytes\r\n      this.length = chunk[start];\r\n      if (this.headerLen === 2) {\r\n        this.length = chunk[start] + (chunk[start + 1] << 8);\r\n        this.execute = PacketParser.prototype.executeHeader3;\r\n      } else {\r\n        this.execute = PacketParser.prototype.executeHeader2;\r\n      }\r\n    }\r\n  }\r\n\r\n  executePayload(chunk) {\r\n    let start = 0;\r\n    const end = chunk.length;\r\n    const remainingPayload =\r\n      this.length - this.bufferLength + this.packetHeaderLength - 3;\r\n    if (end - start >= remainingPayload) {\r\n      // last chunk for payload\r\n      const payload = Buffer.allocUnsafe(this.length + this.packetHeaderLength);\r\n      let offset = 3;\r\n      for (let i = 0; i < this.buffer.length; ++i) {\r\n        this.buffer[i].copy(payload, offset);\r\n        offset += this.buffer[i].length;\r\n      }\r\n      chunk.copy(payload, offset, start, start + remainingPayload);\r\n      const sequenceId = payload[3];\r\n      if (\r\n        this.length < MAX_PACKET_LENGTH &&\r\n        this.largePacketParts.length === 0\r\n      ) {\r\n        this.onPacket(\r\n          new Packet(\r\n            sequenceId,\r\n            payload,\r\n            0,\r\n            this.length + this.packetHeaderLength\r\n          )\r\n        );\r\n      } else {\r\n        // first large packet - remember it's id\r\n        if (this.largePacketParts.length === 0) {\r\n          this.firstPacketSequenceId = sequenceId;\r\n        }\r\n        this.largePacketParts.push(\r\n          payload.slice(\r\n            this.packetHeaderLength,\r\n            this.packetHeaderLength + this.length\r\n          )\r\n        );\r\n        if (this.length < MAX_PACKET_LENGTH) {\r\n          this._flushLargePacket();\r\n        }\r\n      }\r\n      this.buffer = [];\r\n      this.bufferLength = 0;\r\n      this.execute = PacketParser.prototype.executeStart;\r\n      start += remainingPayload;\r\n      if (end - start > 0) {\r\n        return this.execute(chunk.slice(start, end));\r\n      }\r\n    } else {\r\n      this.buffer.push(chunk);\r\n      this.bufferLength += chunk.length;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  executeHeader2(chunk) {\r\n    this.length += chunk[0] << 8;\r\n    if (chunk.length > 1) {\r\n      this.length += chunk[1] << 16;\r\n      this.execute = PacketParser.prototype.executePayload;\r\n      return this.executePayload(chunk.slice(2));\r\n    }\r\n    this.execute = PacketParser.prototype.executeHeader3;\r\n\r\n    return null;\r\n  }\r\n\r\n  executeHeader3(chunk) {\r\n    this.length += chunk[0] << 16;\r\n    this.execute = PacketParser.prototype.executePayload;\r\n    return this.executePayload(chunk.slice(1));\r\n  }\r\n}\r\n\r\nmodule.exports = PacketParser;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/packet_parser.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/packets/auth_next_factor.js":
/*!*************************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/auth_next_factor.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\n// Copyright (c) 2021, Oracle and/or its affiliates.\r\n\r\n\r\n\r\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(middleware)/./node_modules/mysql2/lib/packets/packet.js\");\r\n\r\nclass AuthNextFactor {\r\n  constructor(opts) {\r\n    this.pluginName = opts.pluginName;\r\n    this.pluginData = opts.pluginData;\r\n  }\r\n\r\n  toPacket(encoding) {\r\n    const length = 6 + this.pluginName.length + this.pluginData.length;\r\n    const buffer = Buffer.allocUnsafe(length);\r\n    const packet = new Packet(0, buffer, 0, length);\r\n    packet.offset = 4;\r\n    packet.writeInt8(0x02);\r\n    packet.writeNullTerminatedString(this.pluginName, encoding);\r\n    packet.writeBuffer(this.pluginData);\r\n    return packet;\r\n  }\r\n\r\n  static fromPacket(packet, encoding) {\r\n    packet.readInt8(); // marker\r\n    const name = packet.readNullTerminatedString(encoding);\r\n    const data = packet.readBuffer();\r\n    return new AuthNextFactor({\r\n      pluginName: name,\r\n      pluginData: data,\r\n    });\r\n  }\r\n}\r\n\r\nmodule.exports = AuthNextFactor;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcGFja2V0cy9hdXRoX25leHRfZmFjdG9yLmpzIiwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ2E7QUFDYjtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxtRkFBbUI7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLE1BQU07QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcGFja2V0cy9hdXRoX25leHRfZmFjdG9yLmpzP2U3MjIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSAyMDIxLCBPcmFjbGUgYW5kL29yIGl0cyBhZmZpbGlhdGVzLlxyXG5cclxuJ3VzZSBzdHJpY3QnO1xyXG5cclxuY29uc3QgUGFja2V0ID0gcmVxdWlyZSgnLi4vcGFja2V0cy9wYWNrZXQnKTtcclxuXHJcbmNsYXNzIEF1dGhOZXh0RmFjdG9yIHtcclxuICBjb25zdHJ1Y3RvcihvcHRzKSB7XHJcbiAgICB0aGlzLnBsdWdpbk5hbWUgPSBvcHRzLnBsdWdpbk5hbWU7XHJcbiAgICB0aGlzLnBsdWdpbkRhdGEgPSBvcHRzLnBsdWdpbkRhdGE7XHJcbiAgfVxyXG5cclxuICB0b1BhY2tldChlbmNvZGluZykge1xyXG4gICAgY29uc3QgbGVuZ3RoID0gNiArIHRoaXMucGx1Z2luTmFtZS5sZW5ndGggKyB0aGlzLnBsdWdpbkRhdGEubGVuZ3RoO1xyXG4gICAgY29uc3QgYnVmZmVyID0gQnVmZmVyLmFsbG9jVW5zYWZlKGxlbmd0aCk7XHJcbiAgICBjb25zdCBwYWNrZXQgPSBuZXcgUGFja2V0KDAsIGJ1ZmZlciwgMCwgbGVuZ3RoKTtcclxuICAgIHBhY2tldC5vZmZzZXQgPSA0O1xyXG4gICAgcGFja2V0LndyaXRlSW50OCgweDAyKTtcclxuICAgIHBhY2tldC53cml0ZU51bGxUZXJtaW5hdGVkU3RyaW5nKHRoaXMucGx1Z2luTmFtZSwgZW5jb2RpbmcpO1xyXG4gICAgcGFja2V0LndyaXRlQnVmZmVyKHRoaXMucGx1Z2luRGF0YSk7XHJcbiAgICByZXR1cm4gcGFja2V0O1xyXG4gIH1cclxuXHJcbiAgc3RhdGljIGZyb21QYWNrZXQocGFja2V0LCBlbmNvZGluZykge1xyXG4gICAgcGFja2V0LnJlYWRJbnQ4KCk7IC8vIG1hcmtlclxyXG4gICAgY29uc3QgbmFtZSA9IHBhY2tldC5yZWFkTnVsbFRlcm1pbmF0ZWRTdHJpbmcoZW5jb2RpbmcpO1xyXG4gICAgY29uc3QgZGF0YSA9IHBhY2tldC5yZWFkQnVmZmVyKCk7XHJcbiAgICByZXR1cm4gbmV3IEF1dGhOZXh0RmFjdG9yKHtcclxuICAgICAgcGx1Z2luTmFtZTogbmFtZSxcclxuICAgICAgcGx1Z2luRGF0YTogZGF0YSxcclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBBdXRoTmV4dEZhY3RvcjtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/packets/auth_next_factor.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/packets/auth_switch_request.js":
/*!****************************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/auth_switch_request.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\n\n// http://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::AuthSwitchRequest\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(middleware)/./node_modules/mysql2/lib/packets/packet.js\");\nclass AuthSwitchRequest {\n    constructor(opts){\n        this.pluginName = opts.pluginName;\n        this.pluginData = opts.pluginData;\n    }\n    toPacket() {\n        const length = 6 + this.pluginName.length + this.pluginData.length;\n        const buffer = Buffer.allocUnsafe(length);\n        const packet = new Packet(0, buffer, 0, length);\n        packet.offset = 4;\n        packet.writeInt8(0xfe);\n        // TODO: use server encoding\n        packet.writeNullTerminatedString(this.pluginName, \"cesu8\");\n        packet.writeBuffer(this.pluginData);\n        return packet;\n    }\n    static fromPacket(packet) {\n        packet.readInt8(); // marker\n        // assert marker == 0xfe?\n        // TODO: use server encoding\n        const name = packet.readNullTerminatedString(\"cesu8\");\n        const data = packet.readBuffer();\n        return new AuthSwitchRequest({\n            pluginName: name,\n            pluginData: data\n        });\n    }\n}\nmodule.exports = AuthSwitchRequest;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcGFja2V0cy9hdXRoX3N3aXRjaF9yZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiI7QUFBQTtBQUVBLHlHQUF5RztBQUV6RyxNQUFNQSxTQUFTQyxtQkFBT0EsQ0FBQztBQUV2QixNQUFNQztJQUNKQyxZQUFZQyxJQUFJLENBQUU7UUFDaEIsSUFBSSxDQUFDQyxVQUFVLEdBQUdELEtBQUtDLFVBQVU7UUFDakMsSUFBSSxDQUFDQyxVQUFVLEdBQUdGLEtBQUtFLFVBQVU7SUFDbkM7SUFFQUMsV0FBVztRQUNULE1BQU1DLFNBQVMsSUFBSSxJQUFJLENBQUNILFVBQVUsQ0FBQ0csTUFBTSxHQUFHLElBQUksQ0FBQ0YsVUFBVSxDQUFDRSxNQUFNO1FBQ2xFLE1BQU1DLFNBQVNDLE1BQU1BLENBQUNDLFdBQVcsQ0FBQ0g7UUFDbEMsTUFBTUksU0FBUyxJQUFJWixPQUFPLEdBQUdTLFFBQVEsR0FBR0Q7UUFDeENJLE9BQU9DLE1BQU0sR0FBRztRQUNoQkQsT0FBT0UsU0FBUyxDQUFDO1FBQ2pCLDRCQUE0QjtRQUM1QkYsT0FBT0cseUJBQXlCLENBQUMsSUFBSSxDQUFDVixVQUFVLEVBQUU7UUFDbERPLE9BQU9JLFdBQVcsQ0FBQyxJQUFJLENBQUNWLFVBQVU7UUFDbEMsT0FBT007SUFDVDtJQUVBLE9BQU9LLFdBQVdMLE1BQU0sRUFBRTtRQUN4QkEsT0FBT00sUUFBUSxJQUFJLFNBQVM7UUFDNUIseUJBQXlCO1FBQ3pCLDRCQUE0QjtRQUM1QixNQUFNQyxPQUFPUCxPQUFPUSx3QkFBd0IsQ0FBQztRQUM3QyxNQUFNQyxPQUFPVCxPQUFPVSxVQUFVO1FBQzlCLE9BQU8sSUFBSXBCLGtCQUFrQjtZQUMzQkcsWUFBWWM7WUFDWmIsWUFBWWU7UUFDZDtJQUNGO0FBQ0Y7QUFFQUUsT0FBT0MsT0FBTyxHQUFHdEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcGFja2V0cy9hdXRoX3N3aXRjaF9yZXF1ZXN0LmpzPzdkYmMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxuLy8gaHR0cDovL2Rldi5teXNxbC5jb20vZG9jL2ludGVybmFscy9lbi9jb25uZWN0aW9uLXBoYXNlLXBhY2tldHMuaHRtbCNwYWNrZXQtUHJvdG9jb2w6OkF1dGhTd2l0Y2hSZXF1ZXN0XHJcblxyXG5jb25zdCBQYWNrZXQgPSByZXF1aXJlKCcuLi9wYWNrZXRzL3BhY2tldCcpO1xyXG5cclxuY2xhc3MgQXV0aFN3aXRjaFJlcXVlc3Qge1xyXG4gIGNvbnN0cnVjdG9yKG9wdHMpIHtcclxuICAgIHRoaXMucGx1Z2luTmFtZSA9IG9wdHMucGx1Z2luTmFtZTtcclxuICAgIHRoaXMucGx1Z2luRGF0YSA9IG9wdHMucGx1Z2luRGF0YTtcclxuICB9XHJcblxyXG4gIHRvUGFja2V0KCkge1xyXG4gICAgY29uc3QgbGVuZ3RoID0gNiArIHRoaXMucGx1Z2luTmFtZS5sZW5ndGggKyB0aGlzLnBsdWdpbkRhdGEubGVuZ3RoO1xyXG4gICAgY29uc3QgYnVmZmVyID0gQnVmZmVyLmFsbG9jVW5zYWZlKGxlbmd0aCk7XHJcbiAgICBjb25zdCBwYWNrZXQgPSBuZXcgUGFja2V0KDAsIGJ1ZmZlciwgMCwgbGVuZ3RoKTtcclxuICAgIHBhY2tldC5vZmZzZXQgPSA0O1xyXG4gICAgcGFja2V0LndyaXRlSW50OCgweGZlKTtcclxuICAgIC8vIFRPRE86IHVzZSBzZXJ2ZXIgZW5jb2RpbmdcclxuICAgIHBhY2tldC53cml0ZU51bGxUZXJtaW5hdGVkU3RyaW5nKHRoaXMucGx1Z2luTmFtZSwgJ2Nlc3U4Jyk7XHJcbiAgICBwYWNrZXQud3JpdGVCdWZmZXIodGhpcy5wbHVnaW5EYXRhKTtcclxuICAgIHJldHVybiBwYWNrZXQ7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgZnJvbVBhY2tldChwYWNrZXQpIHtcclxuICAgIHBhY2tldC5yZWFkSW50OCgpOyAvLyBtYXJrZXJcclxuICAgIC8vIGFzc2VydCBtYXJrZXIgPT0gMHhmZT9cclxuICAgIC8vIFRPRE86IHVzZSBzZXJ2ZXIgZW5jb2RpbmdcclxuICAgIGNvbnN0IG5hbWUgPSBwYWNrZXQucmVhZE51bGxUZXJtaW5hdGVkU3RyaW5nKCdjZXN1OCcpO1xyXG4gICAgY29uc3QgZGF0YSA9IHBhY2tldC5yZWFkQnVmZmVyKCk7XHJcbiAgICByZXR1cm4gbmV3IEF1dGhTd2l0Y2hSZXF1ZXN0KHtcclxuICAgICAgcGx1Z2luTmFtZTogbmFtZSxcclxuICAgICAgcGx1Z2luRGF0YTogZGF0YSxcclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBBdXRoU3dpdGNoUmVxdWVzdDtcclxuIl0sIm5hbWVzIjpbIlBhY2tldCIsInJlcXVpcmUiLCJBdXRoU3dpdGNoUmVxdWVzdCIsImNvbnN0cnVjdG9yIiwib3B0cyIsInBsdWdpbk5hbWUiLCJwbHVnaW5EYXRhIiwidG9QYWNrZXQiLCJsZW5ndGgiLCJidWZmZXIiLCJCdWZmZXIiLCJhbGxvY1Vuc2FmZSIsInBhY2tldCIsIm9mZnNldCIsIndyaXRlSW50OCIsIndyaXRlTnVsbFRlcm1pbmF0ZWRTdHJpbmciLCJ3cml0ZUJ1ZmZlciIsImZyb21QYWNrZXQiLCJyZWFkSW50OCIsIm5hbWUiLCJyZWFkTnVsbFRlcm1pbmF0ZWRTdHJpbmciLCJkYXRhIiwicmVhZEJ1ZmZlciIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/packets/auth_switch_request.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/packets/auth_switch_request_more_data.js":
/*!**************************************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/auth_switch_request_more_data.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\n\r\n\r\n// http://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::AuthSwitchRequest\r\n\r\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(middleware)/./node_modules/mysql2/lib/packets/packet.js\");\r\n\r\nclass AuthSwitchRequestMoreData {\r\n  constructor(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  toPacket() {\r\n    const length = 5 + this.data.length;\r\n    const buffer = Buffer.allocUnsafe(length);\r\n    const packet = new Packet(0, buffer, 0, length);\r\n    packet.offset = 4;\r\n    packet.writeInt8(0x01);\r\n    packet.writeBuffer(this.data);\r\n    return packet;\r\n  }\r\n\r\n  static fromPacket(packet) {\r\n    packet.readInt8(); // marker\r\n    const data = packet.readBuffer();\r\n    return new AuthSwitchRequestMoreData(data);\r\n  }\r\n\r\n  static verifyMarker(packet) {\r\n    return packet.peekByte() === 0x01;\r\n  }\r\n}\r\n\r\nmodule.exports = AuthSwitchRequestMoreData;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcGFja2V0cy9hdXRoX3N3aXRjaF9yZXF1ZXN0X21vcmVfZGF0YS5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1CQUFPLENBQUMsbUZBQW1CO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsTUFBTTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL3BhY2tldHMvYXV0aF9zd2l0Y2hfcmVxdWVzdF9tb3JlX2RhdGEuanM/NGU0MyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG4vLyBodHRwOi8vZGV2Lm15c3FsLmNvbS9kb2MvaW50ZXJuYWxzL2VuL2Nvbm5lY3Rpb24tcGhhc2UtcGFja2V0cy5odG1sI3BhY2tldC1Qcm90b2NvbDo6QXV0aFN3aXRjaFJlcXVlc3RcclxuXHJcbmNvbnN0IFBhY2tldCA9IHJlcXVpcmUoJy4uL3BhY2tldHMvcGFja2V0Jyk7XHJcblxyXG5jbGFzcyBBdXRoU3dpdGNoUmVxdWVzdE1vcmVEYXRhIHtcclxuICBjb25zdHJ1Y3RvcihkYXRhKSB7XHJcbiAgICB0aGlzLmRhdGEgPSBkYXRhO1xyXG4gIH1cclxuXHJcbiAgdG9QYWNrZXQoKSB7XHJcbiAgICBjb25zdCBsZW5ndGggPSA1ICsgdGhpcy5kYXRhLmxlbmd0aDtcclxuICAgIGNvbnN0IGJ1ZmZlciA9IEJ1ZmZlci5hbGxvY1Vuc2FmZShsZW5ndGgpO1xyXG4gICAgY29uc3QgcGFja2V0ID0gbmV3IFBhY2tldCgwLCBidWZmZXIsIDAsIGxlbmd0aCk7XHJcbiAgICBwYWNrZXQub2Zmc2V0ID0gNDtcclxuICAgIHBhY2tldC53cml0ZUludDgoMHgwMSk7XHJcbiAgICBwYWNrZXQud3JpdGVCdWZmZXIodGhpcy5kYXRhKTtcclxuICAgIHJldHVybiBwYWNrZXQ7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgZnJvbVBhY2tldChwYWNrZXQpIHtcclxuICAgIHBhY2tldC5yZWFkSW50OCgpOyAvLyBtYXJrZXJcclxuICAgIGNvbnN0IGRhdGEgPSBwYWNrZXQucmVhZEJ1ZmZlcigpO1xyXG4gICAgcmV0dXJuIG5ldyBBdXRoU3dpdGNoUmVxdWVzdE1vcmVEYXRhKGRhdGEpO1xyXG4gIH1cclxuXHJcbiAgc3RhdGljIHZlcmlmeU1hcmtlcihwYWNrZXQpIHtcclxuICAgIHJldHVybiBwYWNrZXQucGVla0J5dGUoKSA9PT0gMHgwMTtcclxuICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gQXV0aFN3aXRjaFJlcXVlc3RNb3JlRGF0YTtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/packets/auth_switch_request_more_data.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/packets/auth_switch_response.js":
/*!*****************************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/auth_switch_response.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\n\r\n\r\n// http://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::AuthSwitchRequest\r\n\r\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(middleware)/./node_modules/mysql2/lib/packets/packet.js\");\r\n\r\nclass AuthSwitchResponse {\r\n  constructor(data) {\r\n    if (!Buffer.isBuffer(data)) {\r\n      data = Buffer.from(data);\r\n    }\r\n    this.data = data;\r\n  }\r\n\r\n  toPacket() {\r\n    const length = 4 + this.data.length;\r\n    const buffer = Buffer.allocUnsafe(length);\r\n    const packet = new Packet(0, buffer, 0, length);\r\n    packet.offset = 4;\r\n    packet.writeBuffer(this.data);\r\n    return packet;\r\n  }\r\n\r\n  static fromPacket(packet) {\r\n    const data = packet.readBuffer();\r\n    return new AuthSwitchResponse(data);\r\n  }\r\n}\r\n\r\nmodule.exports = AuthSwitchResponse;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcGFja2V0cy9hdXRoX3N3aXRjaF9yZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1CQUFPLENBQUMsbUZBQW1CO0FBQzFDO0FBQ0E7QUFDQTtBQUNBLFNBQVMsTUFBTTtBQUNmLGFBQWEsTUFBTTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsTUFBTTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL2F1dGhfc3dpdGNoX3Jlc3BvbnNlLmpzPzU1NzciXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxuLy8gaHR0cDovL2Rldi5teXNxbC5jb20vZG9jL2ludGVybmFscy9lbi9jb25uZWN0aW9uLXBoYXNlLXBhY2tldHMuaHRtbCNwYWNrZXQtUHJvdG9jb2w6OkF1dGhTd2l0Y2hSZXF1ZXN0XHJcblxyXG5jb25zdCBQYWNrZXQgPSByZXF1aXJlKCcuLi9wYWNrZXRzL3BhY2tldCcpO1xyXG5cclxuY2xhc3MgQXV0aFN3aXRjaFJlc3BvbnNlIHtcclxuICBjb25zdHJ1Y3RvcihkYXRhKSB7XHJcbiAgICBpZiAoIUJ1ZmZlci5pc0J1ZmZlcihkYXRhKSkge1xyXG4gICAgICBkYXRhID0gQnVmZmVyLmZyb20oZGF0YSk7XHJcbiAgICB9XHJcbiAgICB0aGlzLmRhdGEgPSBkYXRhO1xyXG4gIH1cclxuXHJcbiAgdG9QYWNrZXQoKSB7XHJcbiAgICBjb25zdCBsZW5ndGggPSA0ICsgdGhpcy5kYXRhLmxlbmd0aDtcclxuICAgIGNvbnN0IGJ1ZmZlciA9IEJ1ZmZlci5hbGxvY1Vuc2FmZShsZW5ndGgpO1xyXG4gICAgY29uc3QgcGFja2V0ID0gbmV3IFBhY2tldCgwLCBidWZmZXIsIDAsIGxlbmd0aCk7XHJcbiAgICBwYWNrZXQub2Zmc2V0ID0gNDtcclxuICAgIHBhY2tldC53cml0ZUJ1ZmZlcih0aGlzLmRhdGEpO1xyXG4gICAgcmV0dXJuIHBhY2tldDtcclxuICB9XHJcblxyXG4gIHN0YXRpYyBmcm9tUGFja2V0KHBhY2tldCkge1xyXG4gICAgY29uc3QgZGF0YSA9IHBhY2tldC5yZWFkQnVmZmVyKCk7XHJcbiAgICByZXR1cm4gbmV3IEF1dGhTd2l0Y2hSZXNwb25zZShkYXRhKTtcclxuICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gQXV0aFN3aXRjaFJlc3BvbnNlO1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/packets/auth_switch_response.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/packets/binary_row.js":
/*!*******************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/binary_row.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\n\r\n\r\nconst Types = __webpack_require__(/*! ../constants/types */ \"(middleware)/./node_modules/mysql2/lib/constants/types.js\");\r\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(middleware)/./node_modules/mysql2/lib/packets/packet.js\");\r\n\r\nconst binaryReader = new Array(256);\r\n\r\nclass BinaryRow {\r\n  constructor(columns) {\r\n    this.columns = columns || [];\r\n  }\r\n\r\n  static toPacket(columns, encoding) {\r\n    // throw new Error('Not implemented');\r\n    const sequenceId = 0; // TODO remove, this is calculated now in connecton\r\n    let length = 0;\r\n    columns.forEach((val) => {\r\n      if (val === null || typeof val === 'undefined') {\r\n        ++length;\r\n        return;\r\n      }\r\n      length += Packet.lengthCodedStringLength(val.toString(10), encoding);\r\n    });\r\n\r\n    length = length + 2;\r\n\r\n    const buffer = Buffer.allocUnsafe(length + 4);\r\n    const packet = new Packet(sequenceId, buffer, 0, length + 4);\r\n    packet.offset = 4;\r\n\r\n    packet.writeInt8(0);\r\n\r\n    let bitmap = 0;\r\n    let bitValue = 1;\r\n    columns.forEach((parameter) => {\r\n      if (parameter.type === Types.NULL) {\r\n        bitmap += bitValue;\r\n      }\r\n      bitValue *= 2;\r\n      if (bitValue === 256) {\r\n        packet.writeInt8(bitmap);\r\n        bitmap = 0;\r\n        bitValue = 1;\r\n      }\r\n    });\r\n    if (bitValue !== 1) {\r\n      packet.writeInt8(bitmap);\r\n    }\r\n\r\n    columns.forEach((val) => {\r\n      if (val === null) {\r\n        packet.writeNull();\r\n        return;\r\n      }\r\n      if (typeof val === 'undefined') {\r\n        packet.writeInt8(0);\r\n        return;\r\n      }\r\n      packet.writeLengthCodedString(val.toString(10), encoding);\r\n    });\r\n    return packet;\r\n  }\r\n\r\n  // TODO: complete list of types...\r\n  static fromPacket(fields, packet) {\r\n    const columns = new Array(fields.length);\r\n    packet.readInt8(); // TODO check it's 0\r\n    const nullBitmapLength = Math.floor((fields.length + 7 + 2) / 8);\r\n    // TODO: read and interpret null bitmap\r\n    packet.skip(nullBitmapLength);\r\n    for (let i = 0; i < columns.length; ++i) {\r\n      columns[i] = binaryReader[fields[i].columnType].apply(packet);\r\n    }\r\n    return new BinaryRow(columns);\r\n  }\r\n}\r\n\r\n// TODO: replace with constants.MYSQL_TYPE_*\r\nbinaryReader[Types.DECIMAL] = Packet.prototype.readLengthCodedString;\r\nbinaryReader[1] = Packet.prototype.readInt8; // tiny\r\nbinaryReader[2] = Packet.prototype.readInt16; // short\r\nbinaryReader[3] = Packet.prototype.readInt32; // long\r\nbinaryReader[4] = Packet.prototype.readFloat; // float\r\nbinaryReader[5] = Packet.prototype.readDouble; // double\r\nbinaryReader[6] = Packet.prototype.assertInvalid; // null, should be skipped vie null bitmap\r\nbinaryReader[7] = Packet.prototype.readTimestamp; // timestamp, http://dev.mysql.com/doc/internals/en/prepared-statements.html#packet-ProtocolBinary::MYSQL_TYPE_TIMESTAMP\r\nbinaryReader[8] = Packet.prototype.readInt64; // long long\r\nbinaryReader[9] = Packet.prototype.readInt32; // int24\r\nbinaryReader[10] = Packet.prototype.readTimestamp; // date\r\nbinaryReader[11] = Packet.prototype.readTime; // time, http://dev.mysql.com/doc/internals/en/prepared-statements.html#packet-ProtocolBinary::MYSQL_TYPE_TIME\r\nbinaryReader[12] = Packet.prototype.readDateTime; // datetime, http://dev.mysql.com/doc/internals/en/prepared-statements.html#packet-ProtocolBinary::MYSQL_TYPE_DATETIME\r\nbinaryReader[13] = Packet.prototype.readInt16; // year\r\nbinaryReader[Types.VAR_STRING] = Packet.prototype.readLengthCodedString; // var string\r\n\r\nmodule.exports = BinaryRow;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcGFja2V0cy9iaW5hcnlfcm93LmpzIiwibWFwcGluZ3MiOiI7QUFBYTtBQUNiO0FBQ0EsY0FBYyxtQkFBTyxDQUFDLHFGQUFvQjtBQUMxQyxlQUFlLG1CQUFPLENBQUMsbUZBQW1CO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixNQUFNO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLG9CQUFvQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDLDhDQUE4QztBQUM5Qyw4Q0FBOEM7QUFDOUMsOENBQThDO0FBQzlDLCtDQUErQztBQUMvQyxrREFBa0Q7QUFDbEQsa0RBQWtEO0FBQ2xELDhDQUE4QztBQUM5Qyw4Q0FBOEM7QUFDOUMsbURBQW1EO0FBQ25ELDhDQUE4QztBQUM5QyxrREFBa0Q7QUFDbEQsK0NBQStDO0FBQy9DLHlFQUF5RTtBQUN6RTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL3BhY2tldHMvYmluYXJ5X3Jvdy5qcz9iODIwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuXHJcbmNvbnN0IFR5cGVzID0gcmVxdWlyZSgnLi4vY29uc3RhbnRzL3R5cGVzJyk7XHJcbmNvbnN0IFBhY2tldCA9IHJlcXVpcmUoJy4uL3BhY2tldHMvcGFja2V0Jyk7XHJcblxyXG5jb25zdCBiaW5hcnlSZWFkZXIgPSBuZXcgQXJyYXkoMjU2KTtcclxuXHJcbmNsYXNzIEJpbmFyeVJvdyB7XHJcbiAgY29uc3RydWN0b3IoY29sdW1ucykge1xyXG4gICAgdGhpcy5jb2x1bW5zID0gY29sdW1ucyB8fCBbXTtcclxuICB9XHJcblxyXG4gIHN0YXRpYyB0b1BhY2tldChjb2x1bW5zLCBlbmNvZGluZykge1xyXG4gICAgLy8gdGhyb3cgbmV3IEVycm9yKCdOb3QgaW1wbGVtZW50ZWQnKTtcclxuICAgIGNvbnN0IHNlcXVlbmNlSWQgPSAwOyAvLyBUT0RPIHJlbW92ZSwgdGhpcyBpcyBjYWxjdWxhdGVkIG5vdyBpbiBjb25uZWN0b25cclxuICAgIGxldCBsZW5ndGggPSAwO1xyXG4gICAgY29sdW1ucy5mb3JFYWNoKCh2YWwpID0+IHtcclxuICAgICAgaWYgKHZhbCA9PT0gbnVsbCB8fCB0eXBlb2YgdmFsID09PSAndW5kZWZpbmVkJykge1xyXG4gICAgICAgICsrbGVuZ3RoO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgICBsZW5ndGggKz0gUGFja2V0Lmxlbmd0aENvZGVkU3RyaW5nTGVuZ3RoKHZhbC50b1N0cmluZygxMCksIGVuY29kaW5nKTtcclxuICAgIH0pO1xyXG5cclxuICAgIGxlbmd0aCA9IGxlbmd0aCArIDI7XHJcblxyXG4gICAgY29uc3QgYnVmZmVyID0gQnVmZmVyLmFsbG9jVW5zYWZlKGxlbmd0aCArIDQpO1xyXG4gICAgY29uc3QgcGFja2V0ID0gbmV3IFBhY2tldChzZXF1ZW5jZUlkLCBidWZmZXIsIDAsIGxlbmd0aCArIDQpO1xyXG4gICAgcGFja2V0Lm9mZnNldCA9IDQ7XHJcblxyXG4gICAgcGFja2V0LndyaXRlSW50OCgwKTtcclxuXHJcbiAgICBsZXQgYml0bWFwID0gMDtcclxuICAgIGxldCBiaXRWYWx1ZSA9IDE7XHJcbiAgICBjb2x1bW5zLmZvckVhY2goKHBhcmFtZXRlcikgPT4ge1xyXG4gICAgICBpZiAocGFyYW1ldGVyLnR5cGUgPT09IFR5cGVzLk5VTEwpIHtcclxuICAgICAgICBiaXRtYXAgKz0gYml0VmFsdWU7XHJcbiAgICAgIH1cclxuICAgICAgYml0VmFsdWUgKj0gMjtcclxuICAgICAgaWYgKGJpdFZhbHVlID09PSAyNTYpIHtcclxuICAgICAgICBwYWNrZXQud3JpdGVJbnQ4KGJpdG1hcCk7XHJcbiAgICAgICAgYml0bWFwID0gMDtcclxuICAgICAgICBiaXRWYWx1ZSA9IDE7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgaWYgKGJpdFZhbHVlICE9PSAxKSB7XHJcbiAgICAgIHBhY2tldC53cml0ZUludDgoYml0bWFwKTtcclxuICAgIH1cclxuXHJcbiAgICBjb2x1bW5zLmZvckVhY2goKHZhbCkgPT4ge1xyXG4gICAgICBpZiAodmFsID09PSBudWxsKSB7XHJcbiAgICAgICAgcGFja2V0LndyaXRlTnVsbCgpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgICBpZiAodHlwZW9mIHZhbCA9PT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgICAgICBwYWNrZXQud3JpdGVJbnQ4KDApO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgICBwYWNrZXQud3JpdGVMZW5ndGhDb2RlZFN0cmluZyh2YWwudG9TdHJpbmcoMTApLCBlbmNvZGluZyk7XHJcbiAgICB9KTtcclxuICAgIHJldHVybiBwYWNrZXQ7XHJcbiAgfVxyXG5cclxuICAvLyBUT0RPOiBjb21wbGV0ZSBsaXN0IG9mIHR5cGVzLi4uXHJcbiAgc3RhdGljIGZyb21QYWNrZXQoZmllbGRzLCBwYWNrZXQpIHtcclxuICAgIGNvbnN0IGNvbHVtbnMgPSBuZXcgQXJyYXkoZmllbGRzLmxlbmd0aCk7XHJcbiAgICBwYWNrZXQucmVhZEludDgoKTsgLy8gVE9ETyBjaGVjayBpdCdzIDBcclxuICAgIGNvbnN0IG51bGxCaXRtYXBMZW5ndGggPSBNYXRoLmZsb29yKChmaWVsZHMubGVuZ3RoICsgNyArIDIpIC8gOCk7XHJcbiAgICAvLyBUT0RPOiByZWFkIGFuZCBpbnRlcnByZXQgbnVsbCBiaXRtYXBcclxuICAgIHBhY2tldC5za2lwKG51bGxCaXRtYXBMZW5ndGgpO1xyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb2x1bW5zLmxlbmd0aDsgKytpKSB7XHJcbiAgICAgIGNvbHVtbnNbaV0gPSBiaW5hcnlSZWFkZXJbZmllbGRzW2ldLmNvbHVtblR5cGVdLmFwcGx5KHBhY2tldCk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gbmV3IEJpbmFyeVJvdyhjb2x1bW5zKTtcclxuICB9XHJcbn1cclxuXHJcbi8vIFRPRE86IHJlcGxhY2Ugd2l0aCBjb25zdGFudHMuTVlTUUxfVFlQRV8qXHJcbmJpbmFyeVJlYWRlcltUeXBlcy5ERUNJTUFMXSA9IFBhY2tldC5wcm90b3R5cGUucmVhZExlbmd0aENvZGVkU3RyaW5nO1xyXG5iaW5hcnlSZWFkZXJbMV0gPSBQYWNrZXQucHJvdG90eXBlLnJlYWRJbnQ4OyAvLyB0aW55XHJcbmJpbmFyeVJlYWRlclsyXSA9IFBhY2tldC5wcm90b3R5cGUucmVhZEludDE2OyAvLyBzaG9ydFxyXG5iaW5hcnlSZWFkZXJbM10gPSBQYWNrZXQucHJvdG90eXBlLnJlYWRJbnQzMjsgLy8gbG9uZ1xyXG5iaW5hcnlSZWFkZXJbNF0gPSBQYWNrZXQucHJvdG90eXBlLnJlYWRGbG9hdDsgLy8gZmxvYXRcclxuYmluYXJ5UmVhZGVyWzVdID0gUGFja2V0LnByb3RvdHlwZS5yZWFkRG91YmxlOyAvLyBkb3VibGVcclxuYmluYXJ5UmVhZGVyWzZdID0gUGFja2V0LnByb3RvdHlwZS5hc3NlcnRJbnZhbGlkOyAvLyBudWxsLCBzaG91bGQgYmUgc2tpcHBlZCB2aWUgbnVsbCBiaXRtYXBcclxuYmluYXJ5UmVhZGVyWzddID0gUGFja2V0LnByb3RvdHlwZS5yZWFkVGltZXN0YW1wOyAvLyB0aW1lc3RhbXAsIGh0dHA6Ly9kZXYubXlzcWwuY29tL2RvYy9pbnRlcm5hbHMvZW4vcHJlcGFyZWQtc3RhdGVtZW50cy5odG1sI3BhY2tldC1Qcm90b2NvbEJpbmFyeTo6TVlTUUxfVFlQRV9USU1FU1RBTVBcclxuYmluYXJ5UmVhZGVyWzhdID0gUGFja2V0LnByb3RvdHlwZS5yZWFkSW50NjQ7IC8vIGxvbmcgbG9uZ1xyXG5iaW5hcnlSZWFkZXJbOV0gPSBQYWNrZXQucHJvdG90eXBlLnJlYWRJbnQzMjsgLy8gaW50MjRcclxuYmluYXJ5UmVhZGVyWzEwXSA9IFBhY2tldC5wcm90b3R5cGUucmVhZFRpbWVzdGFtcDsgLy8gZGF0ZVxyXG5iaW5hcnlSZWFkZXJbMTFdID0gUGFja2V0LnByb3RvdHlwZS5yZWFkVGltZTsgLy8gdGltZSwgaHR0cDovL2Rldi5teXNxbC5jb20vZG9jL2ludGVybmFscy9lbi9wcmVwYXJlZC1zdGF0ZW1lbnRzLmh0bWwjcGFja2V0LVByb3RvY29sQmluYXJ5OjpNWVNRTF9UWVBFX1RJTUVcclxuYmluYXJ5UmVhZGVyWzEyXSA9IFBhY2tldC5wcm90b3R5cGUucmVhZERhdGVUaW1lOyAvLyBkYXRldGltZSwgaHR0cDovL2Rldi5teXNxbC5jb20vZG9jL2ludGVybmFscy9lbi9wcmVwYXJlZC1zdGF0ZW1lbnRzLmh0bWwjcGFja2V0LVByb3RvY29sQmluYXJ5OjpNWVNRTF9UWVBFX0RBVEVUSU1FXHJcbmJpbmFyeVJlYWRlclsxM10gPSBQYWNrZXQucHJvdG90eXBlLnJlYWRJbnQxNjsgLy8geWVhclxyXG5iaW5hcnlSZWFkZXJbVHlwZXMuVkFSX1NUUklOR10gPSBQYWNrZXQucHJvdG90eXBlLnJlYWRMZW5ndGhDb2RlZFN0cmluZzsgLy8gdmFyIHN0cmluZ1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBCaW5hcnlSb3c7XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/packets/binary_row.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/packets/binlog_dump.js":
/*!********************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/binlog_dump.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\n\r\n\r\n// http://dev.mysql.com/doc/internals/en/com-binlog-dump.html#packet-COM_BINLOG_DUMP\r\n\r\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(middleware)/./node_modules/mysql2/lib/packets/packet.js\");\r\nconst CommandCodes = __webpack_require__(/*! ../constants/commands */ \"(middleware)/./node_modules/mysql2/lib/constants/commands.js\");\r\n\r\n// TODO: add flag to constants\r\n// 0x01 - BINLOG_DUMP_NON_BLOCK\r\n// send EOF instead of blocking\r\nclass BinlogDump {\r\n  constructor(opts) {\r\n    this.binlogPos = opts.binlogPos || 0;\r\n    this.serverId = opts.serverId || 0;\r\n    this.flags = opts.flags || 0;\r\n    this.filename = opts.filename || '';\r\n  }\r\n\r\n  toPacket() {\r\n    const length = 15 + Buffer.byteLength(this.filename, 'utf8'); // TODO: should be ascii?\r\n    const buffer = Buffer.allocUnsafe(length);\r\n    const packet = new Packet(0, buffer, 0, length);\r\n    packet.offset = 4;\r\n    packet.writeInt8(CommandCodes.BINLOG_DUMP);\r\n    packet.writeInt32(this.binlogPos);\r\n    packet.writeInt16(this.flags);\r\n    packet.writeInt32(this.serverId);\r\n    packet.writeString(this.filename);\r\n    return packet;\r\n  }\r\n}\r\n\r\nmodule.exports = BinlogDump;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcGFja2V0cy9iaW5sb2dfZHVtcC5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1CQUFPLENBQUMsbUZBQW1CO0FBQzFDLHFCQUFxQixtQkFBTyxDQUFDLDJGQUF1QjtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixNQUFNLG9DQUFvQztBQUNsRSxtQkFBbUIsTUFBTTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcGFja2V0cy9iaW5sb2dfZHVtcC5qcz82N2FiIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuXHJcbi8vIGh0dHA6Ly9kZXYubXlzcWwuY29tL2RvYy9pbnRlcm5hbHMvZW4vY29tLWJpbmxvZy1kdW1wLmh0bWwjcGFja2V0LUNPTV9CSU5MT0dfRFVNUFxyXG5cclxuY29uc3QgUGFja2V0ID0gcmVxdWlyZSgnLi4vcGFja2V0cy9wYWNrZXQnKTtcclxuY29uc3QgQ29tbWFuZENvZGVzID0gcmVxdWlyZSgnLi4vY29uc3RhbnRzL2NvbW1hbmRzJyk7XHJcblxyXG4vLyBUT0RPOiBhZGQgZmxhZyB0byBjb25zdGFudHNcclxuLy8gMHgwMSAtIEJJTkxPR19EVU1QX05PTl9CTE9DS1xyXG4vLyBzZW5kIEVPRiBpbnN0ZWFkIG9mIGJsb2NraW5nXHJcbmNsYXNzIEJpbmxvZ0R1bXAge1xyXG4gIGNvbnN0cnVjdG9yKG9wdHMpIHtcclxuICAgIHRoaXMuYmlubG9nUG9zID0gb3B0cy5iaW5sb2dQb3MgfHwgMDtcclxuICAgIHRoaXMuc2VydmVySWQgPSBvcHRzLnNlcnZlcklkIHx8IDA7XHJcbiAgICB0aGlzLmZsYWdzID0gb3B0cy5mbGFncyB8fCAwO1xyXG4gICAgdGhpcy5maWxlbmFtZSA9IG9wdHMuZmlsZW5hbWUgfHwgJyc7XHJcbiAgfVxyXG5cclxuICB0b1BhY2tldCgpIHtcclxuICAgIGNvbnN0IGxlbmd0aCA9IDE1ICsgQnVmZmVyLmJ5dGVMZW5ndGgodGhpcy5maWxlbmFtZSwgJ3V0ZjgnKTsgLy8gVE9ETzogc2hvdWxkIGJlIGFzY2lpP1xyXG4gICAgY29uc3QgYnVmZmVyID0gQnVmZmVyLmFsbG9jVW5zYWZlKGxlbmd0aCk7XHJcbiAgICBjb25zdCBwYWNrZXQgPSBuZXcgUGFja2V0KDAsIGJ1ZmZlciwgMCwgbGVuZ3RoKTtcclxuICAgIHBhY2tldC5vZmZzZXQgPSA0O1xyXG4gICAgcGFja2V0LndyaXRlSW50OChDb21tYW5kQ29kZXMuQklOTE9HX0RVTVApO1xyXG4gICAgcGFja2V0LndyaXRlSW50MzIodGhpcy5iaW5sb2dQb3MpO1xyXG4gICAgcGFja2V0LndyaXRlSW50MTYodGhpcy5mbGFncyk7XHJcbiAgICBwYWNrZXQud3JpdGVJbnQzMih0aGlzLnNlcnZlcklkKTtcclxuICAgIHBhY2tldC53cml0ZVN0cmluZyh0aGlzLmZpbGVuYW1lKTtcclxuICAgIHJldHVybiBwYWNrZXQ7XHJcbiAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IEJpbmxvZ0R1bXA7XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/packets/binlog_dump.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/packets/binlog_query_statusvars.js":
/*!********************************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/binlog_query_statusvars.js ***!
  \********************************************************************/
/***/ ((module) => {

"use strict";
eval("\r\n\r\n// http://dev.mysql.com/doc/internals/en/query-event.html\r\n\r\nconst keys = {\r\n  FLAGS2: 0,\r\n  SQL_MODE: 1,\r\n  CATALOG: 2,\r\n  AUTO_INCREMENT: 3,\r\n  CHARSET: 4,\r\n  TIME_ZONE: 5,\r\n  CATALOG_NZ: 6,\r\n  LC_TIME_NAMES: 7,\r\n  CHARSET_DATABASE: 8,\r\n  TABLE_MAP_FOR_UPDATE: 9,\r\n  MASTER_DATA_WRITTEN: 10,\r\n  INVOKERS: 11,\r\n  UPDATED_DB_NAMES: 12,\r\n  MICROSECONDS: 3,\r\n};\r\n\r\nmodule.exports = function parseStatusVars(buffer) {\r\n  const result = {};\r\n  let offset = 0;\r\n  let key, length, prevOffset;\r\n  while (offset < buffer.length) {\r\n    key = buffer[offset++];\r\n    switch (key) {\r\n      case keys.FLAGS2:\r\n        result.flags = buffer.readUInt32LE(offset);\r\n        offset += 4;\r\n        break;\r\n      case keys.SQL_MODE:\r\n        // value is 8 bytes, but all dcumented flags are in first 4 bytes\r\n        result.sqlMode = buffer.readUInt32LE(offset);\r\n        offset += 8;\r\n        break;\r\n      case keys.CATALOG:\r\n        length = buffer[offset++];\r\n        result.catalog = buffer.toString('utf8', offset, offset + length);\r\n        offset += length + 1; // null byte after string\r\n        break;\r\n      case keys.CHARSET:\r\n        result.clientCharset = buffer.readUInt16LE(offset);\r\n        result.connectionCollation = buffer.readUInt16LE(offset + 2);\r\n        result.serverCharset = buffer.readUInt16LE(offset + 4);\r\n        offset += 6;\r\n        break;\r\n      case keys.TIME_ZONE:\r\n        length = buffer[offset++];\r\n        result.timeZone = buffer.toString('utf8', offset, offset + length);\r\n        offset += length; // no null byte\r\n        break;\r\n      case keys.CATALOG_NZ:\r\n        length = buffer[offset++];\r\n        result.catalogNz = buffer.toString('utf8', offset, offset + length);\r\n        offset += length; // no null byte\r\n        break;\r\n      case keys.LC_TIME_NAMES:\r\n        result.lcTimeNames = buffer.readUInt16LE(offset);\r\n        offset += 2;\r\n        break;\r\n      case keys.CHARSET_DATABASE:\r\n        result.schemaCharset = buffer.readUInt16LE(offset);\r\n        offset += 2;\r\n        break;\r\n      case keys.TABLE_MAP_FOR_UPDATE:\r\n        result.mapForUpdate1 = buffer.readUInt32LE(offset);\r\n        result.mapForUpdate2 = buffer.readUInt32LE(offset + 4);\r\n        offset += 8;\r\n        break;\r\n      case keys.MASTER_DATA_WRITTEN:\r\n        result.masterDataWritten = buffer.readUInt32LE(offset);\r\n        offset += 4;\r\n        break;\r\n      case keys.INVOKERS:\r\n        length = buffer[offset++];\r\n        result.invokerUsername = buffer.toString(\r\n          'utf8',\r\n          offset,\r\n          offset + length\r\n        );\r\n        offset += length;\r\n        length = buffer[offset++];\r\n        result.invokerHostname = buffer.toString(\r\n          'utf8',\r\n          offset,\r\n          offset + length\r\n        );\r\n        offset += length;\r\n        break;\r\n      case keys.UPDATED_DB_NAMES:\r\n        length = buffer[offset++];\r\n        // length - number of null-terminated strings\r\n        result.updatedDBs = []; // we'll store them as array here\r\n        for (; length; --length) {\r\n          prevOffset = offset;\r\n          // fast forward to null terminating byte\r\n          while (buffer[offset++] && offset < buffer.length) {\r\n            // empty body, everything inside while condition\r\n          }\r\n          result.updatedDBs.push(\r\n            buffer.toString('utf8', prevOffset, offset - 1)\r\n          );\r\n        }\r\n        break;\r\n      case keys.MICROSECONDS:\r\n        result.microseconds =\r\n          // REVIEW: INVALID UNKNOWN VARIABLE!\r\n          buffer.readInt16LE(offset) + (buffer[offset + 2] << 16);\r\n        offset += 3;\r\n    }\r\n  }\r\n  return result;\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcGFja2V0cy9iaW5sb2dfcXVlcnlfc3RhdHVzdmFycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQztBQUNoQyxlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcGFja2V0cy9iaW5sb2dfcXVlcnlfc3RhdHVzdmFycy5qcz85YThlIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuXHJcbi8vIGh0dHA6Ly9kZXYubXlzcWwuY29tL2RvYy9pbnRlcm5hbHMvZW4vcXVlcnktZXZlbnQuaHRtbFxyXG5cclxuY29uc3Qga2V5cyA9IHtcclxuICBGTEFHUzI6IDAsXHJcbiAgU1FMX01PREU6IDEsXHJcbiAgQ0FUQUxPRzogMixcclxuICBBVVRPX0lOQ1JFTUVOVDogMyxcclxuICBDSEFSU0VUOiA0LFxyXG4gIFRJTUVfWk9ORTogNSxcclxuICBDQVRBTE9HX05aOiA2LFxyXG4gIExDX1RJTUVfTkFNRVM6IDcsXHJcbiAgQ0hBUlNFVF9EQVRBQkFTRTogOCxcclxuICBUQUJMRV9NQVBfRk9SX1VQREFURTogOSxcclxuICBNQVNURVJfREFUQV9XUklUVEVOOiAxMCxcclxuICBJTlZPS0VSUzogMTEsXHJcbiAgVVBEQVRFRF9EQl9OQU1FUzogMTIsXHJcbiAgTUlDUk9TRUNPTkRTOiAzLFxyXG59O1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBwYXJzZVN0YXR1c1ZhcnMoYnVmZmVyKSB7XHJcbiAgY29uc3QgcmVzdWx0ID0ge307XHJcbiAgbGV0IG9mZnNldCA9IDA7XHJcbiAgbGV0IGtleSwgbGVuZ3RoLCBwcmV2T2Zmc2V0O1xyXG4gIHdoaWxlIChvZmZzZXQgPCBidWZmZXIubGVuZ3RoKSB7XHJcbiAgICBrZXkgPSBidWZmZXJbb2Zmc2V0KytdO1xyXG4gICAgc3dpdGNoIChrZXkpIHtcclxuICAgICAgY2FzZSBrZXlzLkZMQUdTMjpcclxuICAgICAgICByZXN1bHQuZmxhZ3MgPSBidWZmZXIucmVhZFVJbnQzMkxFKG9mZnNldCk7XHJcbiAgICAgICAgb2Zmc2V0ICs9IDQ7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2Uga2V5cy5TUUxfTU9ERTpcclxuICAgICAgICAvLyB2YWx1ZSBpcyA4IGJ5dGVzLCBidXQgYWxsIGRjdW1lbnRlZCBmbGFncyBhcmUgaW4gZmlyc3QgNCBieXRlc1xyXG4gICAgICAgIHJlc3VsdC5zcWxNb2RlID0gYnVmZmVyLnJlYWRVSW50MzJMRShvZmZzZXQpO1xyXG4gICAgICAgIG9mZnNldCArPSA4O1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICBjYXNlIGtleXMuQ0FUQUxPRzpcclxuICAgICAgICBsZW5ndGggPSBidWZmZXJbb2Zmc2V0KytdO1xyXG4gICAgICAgIHJlc3VsdC5jYXRhbG9nID0gYnVmZmVyLnRvU3RyaW5nKCd1dGY4Jywgb2Zmc2V0LCBvZmZzZXQgKyBsZW5ndGgpO1xyXG4gICAgICAgIG9mZnNldCArPSBsZW5ndGggKyAxOyAvLyBudWxsIGJ5dGUgYWZ0ZXIgc3RyaW5nXHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2Uga2V5cy5DSEFSU0VUOlxyXG4gICAgICAgIHJlc3VsdC5jbGllbnRDaGFyc2V0ID0gYnVmZmVyLnJlYWRVSW50MTZMRShvZmZzZXQpO1xyXG4gICAgICAgIHJlc3VsdC5jb25uZWN0aW9uQ29sbGF0aW9uID0gYnVmZmVyLnJlYWRVSW50MTZMRShvZmZzZXQgKyAyKTtcclxuICAgICAgICByZXN1bHQuc2VydmVyQ2hhcnNldCA9IGJ1ZmZlci5yZWFkVUludDE2TEUob2Zmc2V0ICsgNCk7XHJcbiAgICAgICAgb2Zmc2V0ICs9IDY7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2Uga2V5cy5USU1FX1pPTkU6XHJcbiAgICAgICAgbGVuZ3RoID0gYnVmZmVyW29mZnNldCsrXTtcclxuICAgICAgICByZXN1bHQudGltZVpvbmUgPSBidWZmZXIudG9TdHJpbmcoJ3V0ZjgnLCBvZmZzZXQsIG9mZnNldCArIGxlbmd0aCk7XHJcbiAgICAgICAgb2Zmc2V0ICs9IGxlbmd0aDsgLy8gbm8gbnVsbCBieXRlXHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2Uga2V5cy5DQVRBTE9HX05aOlxyXG4gICAgICAgIGxlbmd0aCA9IGJ1ZmZlcltvZmZzZXQrK107XHJcbiAgICAgICAgcmVzdWx0LmNhdGFsb2dOeiA9IGJ1ZmZlci50b1N0cmluZygndXRmOCcsIG9mZnNldCwgb2Zmc2V0ICsgbGVuZ3RoKTtcclxuICAgICAgICBvZmZzZXQgKz0gbGVuZ3RoOyAvLyBubyBudWxsIGJ5dGVcclxuICAgICAgICBicmVhaztcclxuICAgICAgY2FzZSBrZXlzLkxDX1RJTUVfTkFNRVM6XHJcbiAgICAgICAgcmVzdWx0LmxjVGltZU5hbWVzID0gYnVmZmVyLnJlYWRVSW50MTZMRShvZmZzZXQpO1xyXG4gICAgICAgIG9mZnNldCArPSAyO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICBjYXNlIGtleXMuQ0hBUlNFVF9EQVRBQkFTRTpcclxuICAgICAgICByZXN1bHQuc2NoZW1hQ2hhcnNldCA9IGJ1ZmZlci5yZWFkVUludDE2TEUob2Zmc2V0KTtcclxuICAgICAgICBvZmZzZXQgKz0gMjtcclxuICAgICAgICBicmVhaztcclxuICAgICAgY2FzZSBrZXlzLlRBQkxFX01BUF9GT1JfVVBEQVRFOlxyXG4gICAgICAgIHJlc3VsdC5tYXBGb3JVcGRhdGUxID0gYnVmZmVyLnJlYWRVSW50MzJMRShvZmZzZXQpO1xyXG4gICAgICAgIHJlc3VsdC5tYXBGb3JVcGRhdGUyID0gYnVmZmVyLnJlYWRVSW50MzJMRShvZmZzZXQgKyA0KTtcclxuICAgICAgICBvZmZzZXQgKz0gODtcclxuICAgICAgICBicmVhaztcclxuICAgICAgY2FzZSBrZXlzLk1BU1RFUl9EQVRBX1dSSVRURU46XHJcbiAgICAgICAgcmVzdWx0Lm1hc3RlckRhdGFXcml0dGVuID0gYnVmZmVyLnJlYWRVSW50MzJMRShvZmZzZXQpO1xyXG4gICAgICAgIG9mZnNldCArPSA0O1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICBjYXNlIGtleXMuSU5WT0tFUlM6XHJcbiAgICAgICAgbGVuZ3RoID0gYnVmZmVyW29mZnNldCsrXTtcclxuICAgICAgICByZXN1bHQuaW52b2tlclVzZXJuYW1lID0gYnVmZmVyLnRvU3RyaW5nKFxyXG4gICAgICAgICAgJ3V0ZjgnLFxyXG4gICAgICAgICAgb2Zmc2V0LFxyXG4gICAgICAgICAgb2Zmc2V0ICsgbGVuZ3RoXHJcbiAgICAgICAgKTtcclxuICAgICAgICBvZmZzZXQgKz0gbGVuZ3RoO1xyXG4gICAgICAgIGxlbmd0aCA9IGJ1ZmZlcltvZmZzZXQrK107XHJcbiAgICAgICAgcmVzdWx0Lmludm9rZXJIb3N0bmFtZSA9IGJ1ZmZlci50b1N0cmluZyhcclxuICAgICAgICAgICd1dGY4JyxcclxuICAgICAgICAgIG9mZnNldCxcclxuICAgICAgICAgIG9mZnNldCArIGxlbmd0aFxyXG4gICAgICAgICk7XHJcbiAgICAgICAgb2Zmc2V0ICs9IGxlbmd0aDtcclxuICAgICAgICBicmVhaztcclxuICAgICAgY2FzZSBrZXlzLlVQREFURURfREJfTkFNRVM6XHJcbiAgICAgICAgbGVuZ3RoID0gYnVmZmVyW29mZnNldCsrXTtcclxuICAgICAgICAvLyBsZW5ndGggLSBudW1iZXIgb2YgbnVsbC10ZXJtaW5hdGVkIHN0cmluZ3NcclxuICAgICAgICByZXN1bHQudXBkYXRlZERCcyA9IFtdOyAvLyB3ZSdsbCBzdG9yZSB0aGVtIGFzIGFycmF5IGhlcmVcclxuICAgICAgICBmb3IgKDsgbGVuZ3RoOyAtLWxlbmd0aCkge1xyXG4gICAgICAgICAgcHJldk9mZnNldCA9IG9mZnNldDtcclxuICAgICAgICAgIC8vIGZhc3QgZm9yd2FyZCB0byBudWxsIHRlcm1pbmF0aW5nIGJ5dGVcclxuICAgICAgICAgIHdoaWxlIChidWZmZXJbb2Zmc2V0KytdICYmIG9mZnNldCA8IGJ1ZmZlci5sZW5ndGgpIHtcclxuICAgICAgICAgICAgLy8gZW1wdHkgYm9keSwgZXZlcnl0aGluZyBpbnNpZGUgd2hpbGUgY29uZGl0aW9uXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICByZXN1bHQudXBkYXRlZERCcy5wdXNoKFxyXG4gICAgICAgICAgICBidWZmZXIudG9TdHJpbmcoJ3V0ZjgnLCBwcmV2T2Zmc2V0LCBvZmZzZXQgLSAxKVxyXG4gICAgICAgICAgKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2Uga2V5cy5NSUNST1NFQ09ORFM6XHJcbiAgICAgICAgcmVzdWx0Lm1pY3Jvc2Vjb25kcyA9XHJcbiAgICAgICAgICAvLyBSRVZJRVc6IElOVkFMSUQgVU5LTk9XTiBWQVJJQUJMRSFcclxuICAgICAgICAgIGJ1ZmZlci5yZWFkSW50MTZMRShvZmZzZXQpICsgKGJ1ZmZlcltvZmZzZXQgKyAyXSA8PCAxNik7XHJcbiAgICAgICAgb2Zmc2V0ICs9IDM7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHJldHVybiByZXN1bHQ7XHJcbn07XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/packets/binlog_query_statusvars.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/packets/change_user.js":
/*!********************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/change_user.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\n\r\n\r\nconst CommandCode = __webpack_require__(/*! ../constants/commands.js */ \"(middleware)/./node_modules/mysql2/lib/constants/commands.js\");\r\nconst ClientConstants = __webpack_require__(/*! ../constants/client.js */ \"(middleware)/./node_modules/mysql2/lib/constants/client.js\");\r\nconst Packet = __webpack_require__(/*! ../packets/packet.js */ \"(middleware)/./node_modules/mysql2/lib/packets/packet.js\");\r\nconst auth41 = __webpack_require__(/*! ../auth_41.js */ \"(middleware)/./node_modules/mysql2/lib/auth_41.js\");\r\nconst CharsetToEncoding = __webpack_require__(/*! ../constants/charset_encodings.js */ \"(middleware)/./node_modules/mysql2/lib/constants/charset_encodings.js\");\r\n\r\n// https://dev.mysql.com/doc/internals/en/com-change-user.html#packet-COM_CHANGE_USER\r\nclass ChangeUser {\r\n  constructor(opts) {\r\n    this.flags = opts.flags;\r\n    this.user = opts.user || '';\r\n    this.database = opts.database || '';\r\n    this.password = opts.password || '';\r\n    this.passwordSha1 = opts.passwordSha1;\r\n    this.authPluginData1 = opts.authPluginData1;\r\n    this.authPluginData2 = opts.authPluginData2;\r\n    this.connectAttributes = opts.connectAttrinutes || {};\r\n    let authToken;\r\n    if (this.passwordSha1) {\r\n      authToken = auth41.calculateTokenFromPasswordSha(\r\n        this.passwordSha1,\r\n        this.authPluginData1,\r\n        this.authPluginData2\r\n      );\r\n    } else {\r\n      authToken = auth41.calculateToken(\r\n        this.password,\r\n        this.authPluginData1,\r\n        this.authPluginData2\r\n      );\r\n    }\r\n    this.authToken = authToken;\r\n    this.charsetNumber = opts.charsetNumber;\r\n  }\r\n\r\n  // TODO\r\n  // ChangeUser.fromPacket = function(packet)\r\n  // };\r\n  serializeToBuffer(buffer) {\r\n    const isSet = (flag) => this.flags & ClientConstants[flag];\r\n    const packet = new Packet(0, buffer, 0, buffer.length);\r\n    packet.offset = 4;\r\n    const encoding = CharsetToEncoding[this.charsetNumber];\r\n    packet.writeInt8(CommandCode.CHANGE_USER);\r\n    packet.writeNullTerminatedString(this.user, encoding);\r\n    if (isSet('SECURE_CONNECTION')) {\r\n      packet.writeInt8(this.authToken.length);\r\n      packet.writeBuffer(this.authToken);\r\n    } else {\r\n      packet.writeBuffer(this.authToken);\r\n      packet.writeInt8(0);\r\n    }\r\n    packet.writeNullTerminatedString(this.database, encoding);\r\n    packet.writeInt16(this.charsetNumber);\r\n    if (isSet('PLUGIN_AUTH')) {\r\n      // TODO: read this from parameters\r\n      packet.writeNullTerminatedString('mysql_native_password', 'latin1');\r\n    }\r\n    if (isSet('CONNECT_ATTRS')) {\r\n      const connectAttributes = this.connectAttributes;\r\n      const attrNames = Object.keys(connectAttributes);\r\n      let keysLength = 0;\r\n      for (let k = 0; k < attrNames.length; ++k) {\r\n        keysLength += Packet.lengthCodedStringLength(attrNames[k], encoding);\r\n        keysLength += Packet.lengthCodedStringLength(\r\n          connectAttributes[attrNames[k]],\r\n          encoding\r\n        );\r\n      }\r\n      packet.writeLengthCodedNumber(keysLength);\r\n      for (let k = 0; k < attrNames.length; ++k) {\r\n        packet.writeLengthCodedString(attrNames[k], encoding);\r\n        packet.writeLengthCodedString(\r\n          connectAttributes[attrNames[k]],\r\n          encoding\r\n        );\r\n      }\r\n    }\r\n    return packet;\r\n  }\r\n\r\n  toPacket() {\r\n    if (typeof this.user !== 'string') {\r\n      throw new Error('\"user\" connection config property must be a string');\r\n    }\r\n    if (typeof this.database !== 'string') {\r\n      throw new Error('\"database\" connection config property must be a string');\r\n    }\r\n    // dry run: calculate resulting packet length\r\n    const p = this.serializeToBuffer(Packet.MockBuffer());\r\n    return this.serializeToBuffer(Buffer.allocUnsafe(p.offset));\r\n  }\r\n}\r\n\r\nmodule.exports = ChangeUser;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcGFja2V0cy9jaGFuZ2VfdXNlci5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7QUFDYjtBQUNBLG9CQUFvQixtQkFBTyxDQUFDLDhGQUEwQjtBQUN0RCx3QkFBd0IsbUJBQU8sQ0FBQywwRkFBd0I7QUFDeEQsZUFBZSxtQkFBTyxDQUFDLHNGQUFzQjtBQUM3QyxlQUFlLG1CQUFPLENBQUMsd0VBQWU7QUFDdEMsMEJBQTBCLG1CQUFPLENBQUMsZ0hBQW1DO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0Isc0JBQXNCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHNCQUFzQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxNQUFNO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL3BhY2tldHMvY2hhbmdlX3VzZXIuanM/NGYwYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG5jb25zdCBDb21tYW5kQ29kZSA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cy9jb21tYW5kcy5qcycpO1xyXG5jb25zdCBDbGllbnRDb25zdGFudHMgPSByZXF1aXJlKCcuLi9jb25zdGFudHMvY2xpZW50LmpzJyk7XHJcbmNvbnN0IFBhY2tldCA9IHJlcXVpcmUoJy4uL3BhY2tldHMvcGFja2V0LmpzJyk7XHJcbmNvbnN0IGF1dGg0MSA9IHJlcXVpcmUoJy4uL2F1dGhfNDEuanMnKTtcclxuY29uc3QgQ2hhcnNldFRvRW5jb2RpbmcgPSByZXF1aXJlKCcuLi9jb25zdGFudHMvY2hhcnNldF9lbmNvZGluZ3MuanMnKTtcclxuXHJcbi8vIGh0dHBzOi8vZGV2Lm15c3FsLmNvbS9kb2MvaW50ZXJuYWxzL2VuL2NvbS1jaGFuZ2UtdXNlci5odG1sI3BhY2tldC1DT01fQ0hBTkdFX1VTRVJcclxuY2xhc3MgQ2hhbmdlVXNlciB7XHJcbiAgY29uc3RydWN0b3Iob3B0cykge1xyXG4gICAgdGhpcy5mbGFncyA9IG9wdHMuZmxhZ3M7XHJcbiAgICB0aGlzLnVzZXIgPSBvcHRzLnVzZXIgfHwgJyc7XHJcbiAgICB0aGlzLmRhdGFiYXNlID0gb3B0cy5kYXRhYmFzZSB8fCAnJztcclxuICAgIHRoaXMucGFzc3dvcmQgPSBvcHRzLnBhc3N3b3JkIHx8ICcnO1xyXG4gICAgdGhpcy5wYXNzd29yZFNoYTEgPSBvcHRzLnBhc3N3b3JkU2hhMTtcclxuICAgIHRoaXMuYXV0aFBsdWdpbkRhdGExID0gb3B0cy5hdXRoUGx1Z2luRGF0YTE7XHJcbiAgICB0aGlzLmF1dGhQbHVnaW5EYXRhMiA9IG9wdHMuYXV0aFBsdWdpbkRhdGEyO1xyXG4gICAgdGhpcy5jb25uZWN0QXR0cmlidXRlcyA9IG9wdHMuY29ubmVjdEF0dHJpbnV0ZXMgfHwge307XHJcbiAgICBsZXQgYXV0aFRva2VuO1xyXG4gICAgaWYgKHRoaXMucGFzc3dvcmRTaGExKSB7XHJcbiAgICAgIGF1dGhUb2tlbiA9IGF1dGg0MS5jYWxjdWxhdGVUb2tlbkZyb21QYXNzd29yZFNoYShcclxuICAgICAgICB0aGlzLnBhc3N3b3JkU2hhMSxcclxuICAgICAgICB0aGlzLmF1dGhQbHVnaW5EYXRhMSxcclxuICAgICAgICB0aGlzLmF1dGhQbHVnaW5EYXRhMlxyXG4gICAgICApO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgYXV0aFRva2VuID0gYXV0aDQxLmNhbGN1bGF0ZVRva2VuKFxyXG4gICAgICAgIHRoaXMucGFzc3dvcmQsXHJcbiAgICAgICAgdGhpcy5hdXRoUGx1Z2luRGF0YTEsXHJcbiAgICAgICAgdGhpcy5hdXRoUGx1Z2luRGF0YTJcclxuICAgICAgKTtcclxuICAgIH1cclxuICAgIHRoaXMuYXV0aFRva2VuID0gYXV0aFRva2VuO1xyXG4gICAgdGhpcy5jaGFyc2V0TnVtYmVyID0gb3B0cy5jaGFyc2V0TnVtYmVyO1xyXG4gIH1cclxuXHJcbiAgLy8gVE9ET1xyXG4gIC8vIENoYW5nZVVzZXIuZnJvbVBhY2tldCA9IGZ1bmN0aW9uKHBhY2tldClcclxuICAvLyB9O1xyXG4gIHNlcmlhbGl6ZVRvQnVmZmVyKGJ1ZmZlcikge1xyXG4gICAgY29uc3QgaXNTZXQgPSAoZmxhZykgPT4gdGhpcy5mbGFncyAmIENsaWVudENvbnN0YW50c1tmbGFnXTtcclxuICAgIGNvbnN0IHBhY2tldCA9IG5ldyBQYWNrZXQoMCwgYnVmZmVyLCAwLCBidWZmZXIubGVuZ3RoKTtcclxuICAgIHBhY2tldC5vZmZzZXQgPSA0O1xyXG4gICAgY29uc3QgZW5jb2RpbmcgPSBDaGFyc2V0VG9FbmNvZGluZ1t0aGlzLmNoYXJzZXROdW1iZXJdO1xyXG4gICAgcGFja2V0LndyaXRlSW50OChDb21tYW5kQ29kZS5DSEFOR0VfVVNFUik7XHJcbiAgICBwYWNrZXQud3JpdGVOdWxsVGVybWluYXRlZFN0cmluZyh0aGlzLnVzZXIsIGVuY29kaW5nKTtcclxuICAgIGlmIChpc1NldCgnU0VDVVJFX0NPTk5FQ1RJT04nKSkge1xyXG4gICAgICBwYWNrZXQud3JpdGVJbnQ4KHRoaXMuYXV0aFRva2VuLmxlbmd0aCk7XHJcbiAgICAgIHBhY2tldC53cml0ZUJ1ZmZlcih0aGlzLmF1dGhUb2tlbik7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBwYWNrZXQud3JpdGVCdWZmZXIodGhpcy5hdXRoVG9rZW4pO1xyXG4gICAgICBwYWNrZXQud3JpdGVJbnQ4KDApO1xyXG4gICAgfVxyXG4gICAgcGFja2V0LndyaXRlTnVsbFRlcm1pbmF0ZWRTdHJpbmcodGhpcy5kYXRhYmFzZSwgZW5jb2RpbmcpO1xyXG4gICAgcGFja2V0LndyaXRlSW50MTYodGhpcy5jaGFyc2V0TnVtYmVyKTtcclxuICAgIGlmIChpc1NldCgnUExVR0lOX0FVVEgnKSkge1xyXG4gICAgICAvLyBUT0RPOiByZWFkIHRoaXMgZnJvbSBwYXJhbWV0ZXJzXHJcbiAgICAgIHBhY2tldC53cml0ZU51bGxUZXJtaW5hdGVkU3RyaW5nKCdteXNxbF9uYXRpdmVfcGFzc3dvcmQnLCAnbGF0aW4xJyk7XHJcbiAgICB9XHJcbiAgICBpZiAoaXNTZXQoJ0NPTk5FQ1RfQVRUUlMnKSkge1xyXG4gICAgICBjb25zdCBjb25uZWN0QXR0cmlidXRlcyA9IHRoaXMuY29ubmVjdEF0dHJpYnV0ZXM7XHJcbiAgICAgIGNvbnN0IGF0dHJOYW1lcyA9IE9iamVjdC5rZXlzKGNvbm5lY3RBdHRyaWJ1dGVzKTtcclxuICAgICAgbGV0IGtleXNMZW5ndGggPSAwO1xyXG4gICAgICBmb3IgKGxldCBrID0gMDsgayA8IGF0dHJOYW1lcy5sZW5ndGg7ICsraykge1xyXG4gICAgICAgIGtleXNMZW5ndGggKz0gUGFja2V0Lmxlbmd0aENvZGVkU3RyaW5nTGVuZ3RoKGF0dHJOYW1lc1trXSwgZW5jb2RpbmcpO1xyXG4gICAgICAgIGtleXNMZW5ndGggKz0gUGFja2V0Lmxlbmd0aENvZGVkU3RyaW5nTGVuZ3RoKFxyXG4gICAgICAgICAgY29ubmVjdEF0dHJpYnV0ZXNbYXR0ck5hbWVzW2tdXSxcclxuICAgICAgICAgIGVuY29kaW5nXHJcbiAgICAgICAgKTtcclxuICAgICAgfVxyXG4gICAgICBwYWNrZXQud3JpdGVMZW5ndGhDb2RlZE51bWJlcihrZXlzTGVuZ3RoKTtcclxuICAgICAgZm9yIChsZXQgayA9IDA7IGsgPCBhdHRyTmFtZXMubGVuZ3RoOyArK2spIHtcclxuICAgICAgICBwYWNrZXQud3JpdGVMZW5ndGhDb2RlZFN0cmluZyhhdHRyTmFtZXNba10sIGVuY29kaW5nKTtcclxuICAgICAgICBwYWNrZXQud3JpdGVMZW5ndGhDb2RlZFN0cmluZyhcclxuICAgICAgICAgIGNvbm5lY3RBdHRyaWJ1dGVzW2F0dHJOYW1lc1trXV0sXHJcbiAgICAgICAgICBlbmNvZGluZ1xyXG4gICAgICAgICk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiBwYWNrZXQ7XHJcbiAgfVxyXG5cclxuICB0b1BhY2tldCgpIHtcclxuICAgIGlmICh0eXBlb2YgdGhpcy51c2VyICE9PSAnc3RyaW5nJykge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1widXNlclwiIGNvbm5lY3Rpb24gY29uZmlnIHByb3BlcnR5IG11c3QgYmUgYSBzdHJpbmcnKTtcclxuICAgIH1cclxuICAgIGlmICh0eXBlb2YgdGhpcy5kYXRhYmFzZSAhPT0gJ3N0cmluZycpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdcImRhdGFiYXNlXCIgY29ubmVjdGlvbiBjb25maWcgcHJvcGVydHkgbXVzdCBiZSBhIHN0cmluZycpO1xyXG4gICAgfVxyXG4gICAgLy8gZHJ5IHJ1bjogY2FsY3VsYXRlIHJlc3VsdGluZyBwYWNrZXQgbGVuZ3RoXHJcbiAgICBjb25zdCBwID0gdGhpcy5zZXJpYWxpemVUb0J1ZmZlcihQYWNrZXQuTW9ja0J1ZmZlcigpKTtcclxuICAgIHJldHVybiB0aGlzLnNlcmlhbGl6ZVRvQnVmZmVyKEJ1ZmZlci5hbGxvY1Vuc2FmZShwLm9mZnNldCkpO1xyXG4gIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBDaGFuZ2VVc2VyO1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/packets/change_user.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/packets/close_statement.js":
/*!************************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/close_statement.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\n\r\n\r\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(middleware)/./node_modules/mysql2/lib/packets/packet.js\");\r\nconst CommandCodes = __webpack_require__(/*! ../constants/commands */ \"(middleware)/./node_modules/mysql2/lib/constants/commands.js\");\r\n\r\nclass CloseStatement {\r\n  constructor(id) {\r\n    this.id = id;\r\n  }\r\n\r\n  // note: no response sent back\r\n  toPacket() {\r\n    const packet = new Packet(0, Buffer.allocUnsafe(9), 0, 9);\r\n    packet.offset = 4;\r\n    packet.writeInt8(CommandCodes.STMT_CLOSE);\r\n    packet.writeInt32(this.id);\r\n    return packet;\r\n  }\r\n}\r\n\r\nmodule.exports = CloseStatement;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcGFja2V0cy9jbG9zZV9zdGF0ZW1lbnQuanMiLCJtYXBwaW5ncyI6IjtBQUFhO0FBQ2I7QUFDQSxlQUFlLG1CQUFPLENBQUMsbUZBQW1CO0FBQzFDLHFCQUFxQixtQkFBTyxDQUFDLDJGQUF1QjtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLE1BQU07QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL2Nsb3NlX3N0YXRlbWVudC5qcz9kMGExIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuXHJcbmNvbnN0IFBhY2tldCA9IHJlcXVpcmUoJy4uL3BhY2tldHMvcGFja2V0Jyk7XHJcbmNvbnN0IENvbW1hbmRDb2RlcyA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cy9jb21tYW5kcycpO1xyXG5cclxuY2xhc3MgQ2xvc2VTdGF0ZW1lbnQge1xyXG4gIGNvbnN0cnVjdG9yKGlkKSB7XHJcbiAgICB0aGlzLmlkID0gaWQ7XHJcbiAgfVxyXG5cclxuICAvLyBub3RlOiBubyByZXNwb25zZSBzZW50IGJhY2tcclxuICB0b1BhY2tldCgpIHtcclxuICAgIGNvbnN0IHBhY2tldCA9IG5ldyBQYWNrZXQoMCwgQnVmZmVyLmFsbG9jVW5zYWZlKDkpLCAwLCA5KTtcclxuICAgIHBhY2tldC5vZmZzZXQgPSA0O1xyXG4gICAgcGFja2V0LndyaXRlSW50OChDb21tYW5kQ29kZXMuU1RNVF9DTE9TRSk7XHJcbiAgICBwYWNrZXQud3JpdGVJbnQzMih0aGlzLmlkKTtcclxuICAgIHJldHVybiBwYWNrZXQ7XHJcbiAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IENsb3NlU3RhdGVtZW50O1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/packets/close_statement.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/packets/column_definition.js":
/*!**************************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/column_definition.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\n\r\n\r\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(middleware)/./node_modules/mysql2/lib/packets/packet.js\");\r\nconst StringParser = __webpack_require__(/*! ../parsers/string */ \"(middleware)/./node_modules/mysql2/lib/parsers/string.js\");\r\nconst CharsetToEncoding = __webpack_require__(/*! ../constants/charset_encodings.js */ \"(middleware)/./node_modules/mysql2/lib/constants/charset_encodings.js\");\r\n\r\nconst fields = ['catalog', 'schema', 'table', 'orgTable', 'name', 'orgName'];\r\n\r\n// creating JS string is relatively expensive (compared to\r\n// reading few bytes from buffer) because all string properties\r\n// except for name are unlikely to be used we postpone\r\n// string conversion until property access\r\n//\r\n// TODO: watch for integration benchmarks (one with real network buffer)\r\n// there could be bad side effect as keeping reference to a buffer makes it\r\n// sit in the memory longer (usually until final .query() callback)\r\n// Latest v8 perform much better in regard to bufferer -> string conversion,\r\n// at some point of time this optimisation might become unnecessary\r\n// see https://github.com/sidorares/node-mysql2/pull/137\r\n//\r\nclass ColumnDefinition {\r\n  constructor(packet, clientEncoding) {\r\n    this._buf = packet.buffer;\r\n    this._clientEncoding = clientEncoding;\r\n    this._catalogLength = packet.readLengthCodedNumber();\r\n    this._catalogStart = packet.offset;\r\n    packet.offset += this._catalogLength;\r\n    this._schemaLength = packet.readLengthCodedNumber();\r\n    this._schemaStart = packet.offset;\r\n    packet.offset += this._schemaLength;\r\n    this._tableLength = packet.readLengthCodedNumber();\r\n    this._tableStart = packet.offset;\r\n    packet.offset += this._tableLength;\r\n    this._orgTableLength = packet.readLengthCodedNumber();\r\n    this._orgTableStart = packet.offset;\r\n    packet.offset += this._orgTableLength;\r\n    // name is always used, don't make it lazy\r\n    const _nameLength = packet.readLengthCodedNumber();\r\n    const _nameStart = packet.offset;\r\n    packet.offset += _nameLength;\r\n    this._orgNameLength = packet.readLengthCodedNumber();\r\n    this._orgNameStart = packet.offset;\r\n    packet.offset += this._orgNameLength;\r\n    packet.skip(1); //  length of the following fields (always 0x0c)\r\n    this.characterSet = packet.readInt16();\r\n    this.encoding = CharsetToEncoding[this.characterSet];\r\n    this.name = StringParser.decode(\r\n      this._buf,\r\n      this.encoding === 'binary' ? this._clientEncoding : this.encoding,\r\n      _nameStart,\r\n      _nameStart + _nameLength\r\n    );\r\n    this.columnLength = packet.readInt32();\r\n    this.columnType = packet.readInt8();\r\n    this.type = this.columnType;\r\n    this.flags = packet.readInt16();\r\n    this.decimals = packet.readInt8();\r\n  }\r\n\r\n  inspect() {\r\n    return {\r\n      catalog: this.catalog,\r\n      schema: this.schema,\r\n      name: this.name,\r\n      orgName: this.orgName,\r\n      table: this.table,\r\n      orgTable: this.orgTable,\r\n      characterSet: this.characterSet,\r\n      encoding: this.encoding,\r\n      columnLength: this.columnLength,\r\n      type: this.columnType,\r\n      flags: this.flags,\r\n      decimals: this.decimals,\r\n    };\r\n  }\r\n\r\n  [Symbol.for('nodejs.util.inspect.custom')](depth, inspectOptions, inspect) {\r\n    const Types = __webpack_require__(/*! ../constants/types.js */ \"(middleware)/./node_modules/mysql2/lib/constants/types.js\");\r\n    const typeNames = [];\r\n    for (const t in Types) {\r\n      typeNames[Types[t]] = t;\r\n    }\r\n    const fiedFlags = __webpack_require__(/*! ../constants/field_flags.js */ \"(middleware)/./node_modules/mysql2/lib/constants/field_flags.js\");\r\n    const flagNames = [];\r\n    // TODO: respect inspectOptions.showHidden\r\n    //const inspectFlags = inspectOptions.showHidden ? this.flags : this.flags & ~fiedFlags.PRI_KEY;\r\n    const inspectFlags = this.flags;\r\n    for (const f in fiedFlags) {\r\n      if (inspectFlags & fiedFlags[f]) {\r\n        if (f === 'PRI_KEY') {\r\n          flagNames.push('PRIMARY KEY');\r\n        } else if (f === 'NOT_NULL') {\r\n          flagNames.push('NOT NULL');\r\n        } else if (f === 'BINARY') {\r\n          // ignore flag for now\r\n        } else if (f === 'MULTIPLE_KEY') {\r\n          // not sure if that should be part of inspection.\r\n          // in the schema usually this is part of index definition\r\n          // example: UNIQUE KEY `my_uniq_id` (`id_box_elements`,`id_router`)\r\n          // note that only first column has MULTIPLE_KEY flag set in this case\r\n          // so there is no good way of knowing that this is part of index just\r\n          // by looking at indifidual field flags\r\n        } else if (f === 'NO_DEFAULT_VALUE') {\r\n          // almost the same as NOT_NULL?\r\n        } else if (f === 'BLOB') {\r\n          // included in the type\r\n        } else if (f === 'UNSIGNED') {\r\n          // this should be first after type\r\n        } else if (f === 'TIMESTAMP') {\r\n          // timestamp flag is redundant for inspection - already included in type\r\n        } else if (f === 'ON_UPDATE_NOW') {\r\n          flagNames.push('ON UPDATE CURRENT_TIMESTAMP');\r\n        } else {\r\n          flagNames.push(f);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (depth > 1) {\r\n      return inspect({\r\n        ...this.inspect(),\r\n        typeName: typeNames[this.columnType],\r\n        flags: flagNames,\r\n      });\r\n    }\r\n\r\n    const isUnsigned = this.flags & fiedFlags.UNSIGNED;\r\n\r\n    let typeName = typeNames[this.columnType];\r\n    if (typeName === 'BLOB') {\r\n      // TODO: check for non-utf8mb4 encoding\r\n      if (this.columnLength === 4294967295) {\r\n        typeName = 'LONGTEXT';\r\n      } else if (this.columnLength === 67108860) {\r\n        typeName = 'MEDIUMTEXT';\r\n      } else if (this.columnLength === 262140) {\r\n        typeName = 'TEXT';\r\n      } else if (this.columnLength === 1020) {\r\n        // 255*4\r\n        typeName = 'TINYTEXT';\r\n      } else {\r\n        typeName = `BLOB(${this.columnLength})`;\r\n      }\r\n    } else if (typeName === 'VAR_STRING') {\r\n      // TODO: check for non-utf8mb4 encoding\r\n      typeName = `VARCHAR(${Math.ceil(this.columnLength / 4)})`;\r\n    } else if (typeName === 'TINY') {\r\n      if (\r\n        (this.columnLength === 3 && isUnsigned) ||\r\n        (this.columnLength === 4 && !isUnsigned)\r\n      ) {\r\n        typeName = 'TINYINT';\r\n      } else {\r\n        typeName = `TINYINT(${this.columnLength})`;\r\n      }\r\n    } else if (typeName === 'LONGLONG') {\r\n      if (this.columnLength === 20) {\r\n        typeName = 'BIGINT';\r\n      } else {\r\n        typeName = `BIGINT(${this.columnLength})`;\r\n      }\r\n    } else if (typeName === 'SHORT') {\r\n      if (isUnsigned && this.columnLength === 5) {\r\n        typeName = 'SMALLINT';\r\n      } else if (!isUnsigned && this.columnLength === 6) {\r\n        typeName = 'SMALLINT';\r\n      } else {\r\n        typeName = `SMALLINT(${this.columnLength})`;\r\n      }\r\n    } else if (typeName === 'LONG') {\r\n      if (isUnsigned && this.columnLength === 10) {\r\n        typeName = 'INT';\r\n      } else if (!isUnsigned && this.columnLength === 11) {\r\n        typeName = 'INT';\r\n      } else {\r\n        typeName = `INT(${this.columnLength})`;\r\n      }\r\n    } else if (typeName === 'INT24') {\r\n      if (isUnsigned && this.columnLength === 8) {\r\n        typeName = 'MEDIUMINT';\r\n      } else if (!isUnsigned && this.columnLength === 9) {\r\n        typeName = 'MEDIUMINT';\r\n      } else {\r\n        typeName = `MEDIUMINT(${this.columnLength})`;\r\n      }\r\n    } else if (typeName === 'DOUBLE') {\r\n      // DOUBLE without modifiers is reported as DOUBLE(22, 31)\r\n      if (this.columnLength === 22 && this.decimals === 31) {\r\n        typeName = 'DOUBLE';\r\n      } else {\r\n        typeName = `DOUBLE(${this.columnLength},${this.decimals})`;\r\n      }\r\n    } else if (typeName === 'FLOAT') {\r\n      // FLOAT without modifiers is reported as FLOAT(12, 31)\r\n      if (this.columnLength === 12 && this.decimals === 31) {\r\n        typeName = 'FLOAT';\r\n      } else {\r\n        typeName = `FLOAT(${this.columnLength},${this.decimals})`;\r\n      }\r\n    } else if (typeName === 'NEWDECIMAL') {\r\n      if (this.columnLength === 11 && this.decimals === 0) {\r\n        typeName = 'DECIMAL';\r\n      } else if (this.decimals === 0) {\r\n        // not sure why, but DECIMAL(13) is reported as DECIMAL(14, 0)\r\n        // and DECIMAL(13, 9) is reported as NEWDECIMAL(15, 9)\r\n        if (isUnsigned) {\r\n          typeName = `DECIMAL(${this.columnLength})`;\r\n        } else {\r\n          typeName = `DECIMAL(${this.columnLength - 1})`;\r\n        }\r\n      } else {\r\n        typeName = `DECIMAL(${this.columnLength - 2},${this.decimals})`;\r\n      }\r\n    } else {\r\n      typeName = `${typeNames[this.columnType]}(${this.columnLength})`;\r\n    }\r\n\r\n    if (isUnsigned) {\r\n      typeName += ' UNSIGNED';\r\n    }\r\n\r\n    // TODO respect colors option\r\n    return `\\`${this.name}\\` ${[typeName, ...flagNames].join(' ')}`;\r\n  }\r\n\r\n  static toPacket(column, sequenceId) {\r\n    let length = 17; // = 4 padding + 1 + 12 for the rest\r\n    fields.forEach((field) => {\r\n      length += Packet.lengthCodedStringLength(\r\n        column[field],\r\n        CharsetToEncoding[column.characterSet]\r\n      );\r\n    });\r\n    const buffer = Buffer.allocUnsafe(length);\r\n\r\n    const packet = new Packet(sequenceId, buffer, 0, length);\r\n    function writeField(name) {\r\n      packet.writeLengthCodedString(\r\n        column[name],\r\n        CharsetToEncoding[column.characterSet]\r\n      );\r\n    }\r\n    packet.offset = 4;\r\n    fields.forEach(writeField);\r\n    packet.writeInt8(0x0c);\r\n    packet.writeInt16(column.characterSet);\r\n    packet.writeInt32(column.columnLength);\r\n    packet.writeInt8(column.columnType);\r\n    packet.writeInt16(column.flags);\r\n    packet.writeInt8(column.decimals);\r\n    packet.writeInt16(0); // filler\r\n    return packet;\r\n  }\r\n\r\n  // node-mysql compatibility: alias \"db\" to \"schema\"\r\n  get db() {\r\n    return this.schema;\r\n  }\r\n}\r\n\r\nconst addString = function (name) {\r\n  Object.defineProperty(ColumnDefinition.prototype, name, {\r\n    get: function () {\r\n      const start = this[`_${name}Start`];\r\n      const end = start + this[`_${name}Length`];\r\n      const val = StringParser.decode(\r\n        this._buf,\r\n        this.encoding === 'binary' ? this._clientEncoding : this.encoding,\r\n        start,\r\n        end\r\n      );\r\n\r\n      Object.defineProperty(this, name, {\r\n        value: val,\r\n        writable: false,\r\n        configurable: false,\r\n        enumerable: false,\r\n      });\r\n\r\n      return val;\r\n    },\r\n  });\r\n};\r\n\r\naddString('catalog');\r\naddString('schema');\r\naddString('table');\r\naddString('orgTable');\r\naddString('orgName');\r\n\r\nmodule.exports = ColumnDefinition;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcGFja2V0cy9jb2x1bW5fZGVmaW5pdGlvbi5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7QUFDYjtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxtRkFBbUI7QUFDMUMscUJBQXFCLG1CQUFPLENBQUMsbUZBQW1CO0FBQ2hELDBCQUEwQixtQkFBTyxDQUFDLGdIQUFtQztBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixtQkFBTyxDQUFDLHdGQUF1QjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixtQkFBTyxDQUFDLG9HQUE2QjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQSxRQUFRO0FBQ1I7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLFFBQVE7QUFDUiwyQkFBMkIsa0JBQWtCO0FBQzdDO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsNEJBQTRCLGlDQUFpQztBQUM3RCxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUiw4QkFBOEIsa0JBQWtCO0FBQ2hEO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxRQUFRO0FBQ1IsNkJBQTZCLGtCQUFrQjtBQUMvQztBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0EsUUFBUTtBQUNSLCtCQUErQixrQkFBa0I7QUFDakQ7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBLFFBQVE7QUFDUiwwQkFBMEIsa0JBQWtCO0FBQzVDO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQSxRQUFRO0FBQ1IsZ0NBQWdDLGtCQUFrQjtBQUNsRDtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1IsNkJBQTZCLGtCQUFrQixHQUFHLGNBQWM7QUFDaEU7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSLDRCQUE0QixrQkFBa0IsR0FBRyxjQUFjO0FBQy9EO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLGtCQUFrQjtBQUNsRCxVQUFVO0FBQ1YsZ0NBQWdDLHNCQUFzQjtBQUN0RDtBQUNBLFFBQVE7QUFDUiw4QkFBOEIsc0JBQXNCLEdBQUcsY0FBYztBQUNyRTtBQUNBLE1BQU07QUFDTixvQkFBb0IsMkJBQTJCLEdBQUcsa0JBQWtCO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLFVBQVUsS0FBSyxtQ0FBbUM7QUFDbEU7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsbUJBQW1CLE1BQU07QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLEtBQUs7QUFDbEMsbUNBQW1DLEtBQUs7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL2NvbHVtbl9kZWZpbml0aW9uLmpzPzVhZDIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxuY29uc3QgUGFja2V0ID0gcmVxdWlyZSgnLi4vcGFja2V0cy9wYWNrZXQnKTtcclxuY29uc3QgU3RyaW5nUGFyc2VyID0gcmVxdWlyZSgnLi4vcGFyc2Vycy9zdHJpbmcnKTtcclxuY29uc3QgQ2hhcnNldFRvRW5jb2RpbmcgPSByZXF1aXJlKCcuLi9jb25zdGFudHMvY2hhcnNldF9lbmNvZGluZ3MuanMnKTtcclxuXHJcbmNvbnN0IGZpZWxkcyA9IFsnY2F0YWxvZycsICdzY2hlbWEnLCAndGFibGUnLCAnb3JnVGFibGUnLCAnbmFtZScsICdvcmdOYW1lJ107XHJcblxyXG4vLyBjcmVhdGluZyBKUyBzdHJpbmcgaXMgcmVsYXRpdmVseSBleHBlbnNpdmUgKGNvbXBhcmVkIHRvXHJcbi8vIHJlYWRpbmcgZmV3IGJ5dGVzIGZyb20gYnVmZmVyKSBiZWNhdXNlIGFsbCBzdHJpbmcgcHJvcGVydGllc1xyXG4vLyBleGNlcHQgZm9yIG5hbWUgYXJlIHVubGlrZWx5IHRvIGJlIHVzZWQgd2UgcG9zdHBvbmVcclxuLy8gc3RyaW5nIGNvbnZlcnNpb24gdW50aWwgcHJvcGVydHkgYWNjZXNzXHJcbi8vXHJcbi8vIFRPRE86IHdhdGNoIGZvciBpbnRlZ3JhdGlvbiBiZW5jaG1hcmtzIChvbmUgd2l0aCByZWFsIG5ldHdvcmsgYnVmZmVyKVxyXG4vLyB0aGVyZSBjb3VsZCBiZSBiYWQgc2lkZSBlZmZlY3QgYXMga2VlcGluZyByZWZlcmVuY2UgdG8gYSBidWZmZXIgbWFrZXMgaXRcclxuLy8gc2l0IGluIHRoZSBtZW1vcnkgbG9uZ2VyICh1c3VhbGx5IHVudGlsIGZpbmFsIC5xdWVyeSgpIGNhbGxiYWNrKVxyXG4vLyBMYXRlc3QgdjggcGVyZm9ybSBtdWNoIGJldHRlciBpbiByZWdhcmQgdG8gYnVmZmVyZXIgLT4gc3RyaW5nIGNvbnZlcnNpb24sXHJcbi8vIGF0IHNvbWUgcG9pbnQgb2YgdGltZSB0aGlzIG9wdGltaXNhdGlvbiBtaWdodCBiZWNvbWUgdW5uZWNlc3NhcnlcclxuLy8gc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9zaWRvcmFyZXMvbm9kZS1teXNxbDIvcHVsbC8xMzdcclxuLy9cclxuY2xhc3MgQ29sdW1uRGVmaW5pdGlvbiB7XHJcbiAgY29uc3RydWN0b3IocGFja2V0LCBjbGllbnRFbmNvZGluZykge1xyXG4gICAgdGhpcy5fYnVmID0gcGFja2V0LmJ1ZmZlcjtcclxuICAgIHRoaXMuX2NsaWVudEVuY29kaW5nID0gY2xpZW50RW5jb2Rpbmc7XHJcbiAgICB0aGlzLl9jYXRhbG9nTGVuZ3RoID0gcGFja2V0LnJlYWRMZW5ndGhDb2RlZE51bWJlcigpO1xyXG4gICAgdGhpcy5fY2F0YWxvZ1N0YXJ0ID0gcGFja2V0Lm9mZnNldDtcclxuICAgIHBhY2tldC5vZmZzZXQgKz0gdGhpcy5fY2F0YWxvZ0xlbmd0aDtcclxuICAgIHRoaXMuX3NjaGVtYUxlbmd0aCA9IHBhY2tldC5yZWFkTGVuZ3RoQ29kZWROdW1iZXIoKTtcclxuICAgIHRoaXMuX3NjaGVtYVN0YXJ0ID0gcGFja2V0Lm9mZnNldDtcclxuICAgIHBhY2tldC5vZmZzZXQgKz0gdGhpcy5fc2NoZW1hTGVuZ3RoO1xyXG4gICAgdGhpcy5fdGFibGVMZW5ndGggPSBwYWNrZXQucmVhZExlbmd0aENvZGVkTnVtYmVyKCk7XHJcbiAgICB0aGlzLl90YWJsZVN0YXJ0ID0gcGFja2V0Lm9mZnNldDtcclxuICAgIHBhY2tldC5vZmZzZXQgKz0gdGhpcy5fdGFibGVMZW5ndGg7XHJcbiAgICB0aGlzLl9vcmdUYWJsZUxlbmd0aCA9IHBhY2tldC5yZWFkTGVuZ3RoQ29kZWROdW1iZXIoKTtcclxuICAgIHRoaXMuX29yZ1RhYmxlU3RhcnQgPSBwYWNrZXQub2Zmc2V0O1xyXG4gICAgcGFja2V0Lm9mZnNldCArPSB0aGlzLl9vcmdUYWJsZUxlbmd0aDtcclxuICAgIC8vIG5hbWUgaXMgYWx3YXlzIHVzZWQsIGRvbid0IG1ha2UgaXQgbGF6eVxyXG4gICAgY29uc3QgX25hbWVMZW5ndGggPSBwYWNrZXQucmVhZExlbmd0aENvZGVkTnVtYmVyKCk7XHJcbiAgICBjb25zdCBfbmFtZVN0YXJ0ID0gcGFja2V0Lm9mZnNldDtcclxuICAgIHBhY2tldC5vZmZzZXQgKz0gX25hbWVMZW5ndGg7XHJcbiAgICB0aGlzLl9vcmdOYW1lTGVuZ3RoID0gcGFja2V0LnJlYWRMZW5ndGhDb2RlZE51bWJlcigpO1xyXG4gICAgdGhpcy5fb3JnTmFtZVN0YXJ0ID0gcGFja2V0Lm9mZnNldDtcclxuICAgIHBhY2tldC5vZmZzZXQgKz0gdGhpcy5fb3JnTmFtZUxlbmd0aDtcclxuICAgIHBhY2tldC5za2lwKDEpOyAvLyAgbGVuZ3RoIG9mIHRoZSBmb2xsb3dpbmcgZmllbGRzIChhbHdheXMgMHgwYylcclxuICAgIHRoaXMuY2hhcmFjdGVyU2V0ID0gcGFja2V0LnJlYWRJbnQxNigpO1xyXG4gICAgdGhpcy5lbmNvZGluZyA9IENoYXJzZXRUb0VuY29kaW5nW3RoaXMuY2hhcmFjdGVyU2V0XTtcclxuICAgIHRoaXMubmFtZSA9IFN0cmluZ1BhcnNlci5kZWNvZGUoXHJcbiAgICAgIHRoaXMuX2J1ZixcclxuICAgICAgdGhpcy5lbmNvZGluZyA9PT0gJ2JpbmFyeScgPyB0aGlzLl9jbGllbnRFbmNvZGluZyA6IHRoaXMuZW5jb2RpbmcsXHJcbiAgICAgIF9uYW1lU3RhcnQsXHJcbiAgICAgIF9uYW1lU3RhcnQgKyBfbmFtZUxlbmd0aFxyXG4gICAgKTtcclxuICAgIHRoaXMuY29sdW1uTGVuZ3RoID0gcGFja2V0LnJlYWRJbnQzMigpO1xyXG4gICAgdGhpcy5jb2x1bW5UeXBlID0gcGFja2V0LnJlYWRJbnQ4KCk7XHJcbiAgICB0aGlzLnR5cGUgPSB0aGlzLmNvbHVtblR5cGU7XHJcbiAgICB0aGlzLmZsYWdzID0gcGFja2V0LnJlYWRJbnQxNigpO1xyXG4gICAgdGhpcy5kZWNpbWFscyA9IHBhY2tldC5yZWFkSW50OCgpO1xyXG4gIH1cclxuXHJcbiAgaW5zcGVjdCgpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIGNhdGFsb2c6IHRoaXMuY2F0YWxvZyxcclxuICAgICAgc2NoZW1hOiB0aGlzLnNjaGVtYSxcclxuICAgICAgbmFtZTogdGhpcy5uYW1lLFxyXG4gICAgICBvcmdOYW1lOiB0aGlzLm9yZ05hbWUsXHJcbiAgICAgIHRhYmxlOiB0aGlzLnRhYmxlLFxyXG4gICAgICBvcmdUYWJsZTogdGhpcy5vcmdUYWJsZSxcclxuICAgICAgY2hhcmFjdGVyU2V0OiB0aGlzLmNoYXJhY3RlclNldCxcclxuICAgICAgZW5jb2Rpbmc6IHRoaXMuZW5jb2RpbmcsXHJcbiAgICAgIGNvbHVtbkxlbmd0aDogdGhpcy5jb2x1bW5MZW5ndGgsXHJcbiAgICAgIHR5cGU6IHRoaXMuY29sdW1uVHlwZSxcclxuICAgICAgZmxhZ3M6IHRoaXMuZmxhZ3MsXHJcbiAgICAgIGRlY2ltYWxzOiB0aGlzLmRlY2ltYWxzLFxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIFtTeW1ib2wuZm9yKCdub2RlanMudXRpbC5pbnNwZWN0LmN1c3RvbScpXShkZXB0aCwgaW5zcGVjdE9wdGlvbnMsIGluc3BlY3QpIHtcclxuICAgIGNvbnN0IFR5cGVzID0gcmVxdWlyZSgnLi4vY29uc3RhbnRzL3R5cGVzLmpzJyk7XHJcbiAgICBjb25zdCB0eXBlTmFtZXMgPSBbXTtcclxuICAgIGZvciAoY29uc3QgdCBpbiBUeXBlcykge1xyXG4gICAgICB0eXBlTmFtZXNbVHlwZXNbdF1dID0gdDtcclxuICAgIH1cclxuICAgIGNvbnN0IGZpZWRGbGFncyA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cy9maWVsZF9mbGFncy5qcycpO1xyXG4gICAgY29uc3QgZmxhZ05hbWVzID0gW107XHJcbiAgICAvLyBUT0RPOiByZXNwZWN0IGluc3BlY3RPcHRpb25zLnNob3dIaWRkZW5cclxuICAgIC8vY29uc3QgaW5zcGVjdEZsYWdzID0gaW5zcGVjdE9wdGlvbnMuc2hvd0hpZGRlbiA/IHRoaXMuZmxhZ3MgOiB0aGlzLmZsYWdzICYgfmZpZWRGbGFncy5QUklfS0VZO1xyXG4gICAgY29uc3QgaW5zcGVjdEZsYWdzID0gdGhpcy5mbGFncztcclxuICAgIGZvciAoY29uc3QgZiBpbiBmaWVkRmxhZ3MpIHtcclxuICAgICAgaWYgKGluc3BlY3RGbGFncyAmIGZpZWRGbGFnc1tmXSkge1xyXG4gICAgICAgIGlmIChmID09PSAnUFJJX0tFWScpIHtcclxuICAgICAgICAgIGZsYWdOYW1lcy5wdXNoKCdQUklNQVJZIEtFWScpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAoZiA9PT0gJ05PVF9OVUxMJykge1xyXG4gICAgICAgICAgZmxhZ05hbWVzLnB1c2goJ05PVCBOVUxMJyk7XHJcbiAgICAgICAgfSBlbHNlIGlmIChmID09PSAnQklOQVJZJykge1xyXG4gICAgICAgICAgLy8gaWdub3JlIGZsYWcgZm9yIG5vd1xyXG4gICAgICAgIH0gZWxzZSBpZiAoZiA9PT0gJ01VTFRJUExFX0tFWScpIHtcclxuICAgICAgICAgIC8vIG5vdCBzdXJlIGlmIHRoYXQgc2hvdWxkIGJlIHBhcnQgb2YgaW5zcGVjdGlvbi5cclxuICAgICAgICAgIC8vIGluIHRoZSBzY2hlbWEgdXN1YWxseSB0aGlzIGlzIHBhcnQgb2YgaW5kZXggZGVmaW5pdGlvblxyXG4gICAgICAgICAgLy8gZXhhbXBsZTogVU5JUVVFIEtFWSBgbXlfdW5pcV9pZGAgKGBpZF9ib3hfZWxlbWVudHNgLGBpZF9yb3V0ZXJgKVxyXG4gICAgICAgICAgLy8gbm90ZSB0aGF0IG9ubHkgZmlyc3QgY29sdW1uIGhhcyBNVUxUSVBMRV9LRVkgZmxhZyBzZXQgaW4gdGhpcyBjYXNlXHJcbiAgICAgICAgICAvLyBzbyB0aGVyZSBpcyBubyBnb29kIHdheSBvZiBrbm93aW5nIHRoYXQgdGhpcyBpcyBwYXJ0IG9mIGluZGV4IGp1c3RcclxuICAgICAgICAgIC8vIGJ5IGxvb2tpbmcgYXQgaW5kaWZpZHVhbCBmaWVsZCBmbGFnc1xyXG4gICAgICAgIH0gZWxzZSBpZiAoZiA9PT0gJ05PX0RFRkFVTFRfVkFMVUUnKSB7XHJcbiAgICAgICAgICAvLyBhbG1vc3QgdGhlIHNhbWUgYXMgTk9UX05VTEw/XHJcbiAgICAgICAgfSBlbHNlIGlmIChmID09PSAnQkxPQicpIHtcclxuICAgICAgICAgIC8vIGluY2x1ZGVkIGluIHRoZSB0eXBlXHJcbiAgICAgICAgfSBlbHNlIGlmIChmID09PSAnVU5TSUdORUQnKSB7XHJcbiAgICAgICAgICAvLyB0aGlzIHNob3VsZCBiZSBmaXJzdCBhZnRlciB0eXBlXHJcbiAgICAgICAgfSBlbHNlIGlmIChmID09PSAnVElNRVNUQU1QJykge1xyXG4gICAgICAgICAgLy8gdGltZXN0YW1wIGZsYWcgaXMgcmVkdW5kYW50IGZvciBpbnNwZWN0aW9uIC0gYWxyZWFkeSBpbmNsdWRlZCBpbiB0eXBlXHJcbiAgICAgICAgfSBlbHNlIGlmIChmID09PSAnT05fVVBEQVRFX05PVycpIHtcclxuICAgICAgICAgIGZsYWdOYW1lcy5wdXNoKCdPTiBVUERBVEUgQ1VSUkVOVF9USU1FU1RBTVAnKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgZmxhZ05hbWVzLnB1c2goZik7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGRlcHRoID4gMSkge1xyXG4gICAgICByZXR1cm4gaW5zcGVjdCh7XHJcbiAgICAgICAgLi4udGhpcy5pbnNwZWN0KCksXHJcbiAgICAgICAgdHlwZU5hbWU6IHR5cGVOYW1lc1t0aGlzLmNvbHVtblR5cGVdLFxyXG4gICAgICAgIGZsYWdzOiBmbGFnTmFtZXMsXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGlzVW5zaWduZWQgPSB0aGlzLmZsYWdzICYgZmllZEZsYWdzLlVOU0lHTkVEO1xyXG5cclxuICAgIGxldCB0eXBlTmFtZSA9IHR5cGVOYW1lc1t0aGlzLmNvbHVtblR5cGVdO1xyXG4gICAgaWYgKHR5cGVOYW1lID09PSAnQkxPQicpIHtcclxuICAgICAgLy8gVE9ETzogY2hlY2sgZm9yIG5vbi11dGY4bWI0IGVuY29kaW5nXHJcbiAgICAgIGlmICh0aGlzLmNvbHVtbkxlbmd0aCA9PT0gNDI5NDk2NzI5NSkge1xyXG4gICAgICAgIHR5cGVOYW1lID0gJ0xPTkdURVhUJztcclxuICAgICAgfSBlbHNlIGlmICh0aGlzLmNvbHVtbkxlbmd0aCA9PT0gNjcxMDg4NjApIHtcclxuICAgICAgICB0eXBlTmFtZSA9ICdNRURJVU1URVhUJztcclxuICAgICAgfSBlbHNlIGlmICh0aGlzLmNvbHVtbkxlbmd0aCA9PT0gMjYyMTQwKSB7XHJcbiAgICAgICAgdHlwZU5hbWUgPSAnVEVYVCc7XHJcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5jb2x1bW5MZW5ndGggPT09IDEwMjApIHtcclxuICAgICAgICAvLyAyNTUqNFxyXG4gICAgICAgIHR5cGVOYW1lID0gJ1RJTllURVhUJztcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB0eXBlTmFtZSA9IGBCTE9CKCR7dGhpcy5jb2x1bW5MZW5ndGh9KWA7XHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSBpZiAodHlwZU5hbWUgPT09ICdWQVJfU1RSSU5HJykge1xyXG4gICAgICAvLyBUT0RPOiBjaGVjayBmb3Igbm9uLXV0ZjhtYjQgZW5jb2RpbmdcclxuICAgICAgdHlwZU5hbWUgPSBgVkFSQ0hBUigke01hdGguY2VpbCh0aGlzLmNvbHVtbkxlbmd0aCAvIDQpfSlgO1xyXG4gICAgfSBlbHNlIGlmICh0eXBlTmFtZSA9PT0gJ1RJTlknKSB7XHJcbiAgICAgIGlmIChcclxuICAgICAgICAodGhpcy5jb2x1bW5MZW5ndGggPT09IDMgJiYgaXNVbnNpZ25lZCkgfHxcclxuICAgICAgICAodGhpcy5jb2x1bW5MZW5ndGggPT09IDQgJiYgIWlzVW5zaWduZWQpXHJcbiAgICAgICkge1xyXG4gICAgICAgIHR5cGVOYW1lID0gJ1RJTllJTlQnO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHR5cGVOYW1lID0gYFRJTllJTlQoJHt0aGlzLmNvbHVtbkxlbmd0aH0pYDtcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIGlmICh0eXBlTmFtZSA9PT0gJ0xPTkdMT05HJykge1xyXG4gICAgICBpZiAodGhpcy5jb2x1bW5MZW5ndGggPT09IDIwKSB7XHJcbiAgICAgICAgdHlwZU5hbWUgPSAnQklHSU5UJztcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB0eXBlTmFtZSA9IGBCSUdJTlQoJHt0aGlzLmNvbHVtbkxlbmd0aH0pYDtcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIGlmICh0eXBlTmFtZSA9PT0gJ1NIT1JUJykge1xyXG4gICAgICBpZiAoaXNVbnNpZ25lZCAmJiB0aGlzLmNvbHVtbkxlbmd0aCA9PT0gNSkge1xyXG4gICAgICAgIHR5cGVOYW1lID0gJ1NNQUxMSU5UJztcclxuICAgICAgfSBlbHNlIGlmICghaXNVbnNpZ25lZCAmJiB0aGlzLmNvbHVtbkxlbmd0aCA9PT0gNikge1xyXG4gICAgICAgIHR5cGVOYW1lID0gJ1NNQUxMSU5UJztcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB0eXBlTmFtZSA9IGBTTUFMTElOVCgke3RoaXMuY29sdW1uTGVuZ3RofSlgO1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2UgaWYgKHR5cGVOYW1lID09PSAnTE9ORycpIHtcclxuICAgICAgaWYgKGlzVW5zaWduZWQgJiYgdGhpcy5jb2x1bW5MZW5ndGggPT09IDEwKSB7XHJcbiAgICAgICAgdHlwZU5hbWUgPSAnSU5UJztcclxuICAgICAgfSBlbHNlIGlmICghaXNVbnNpZ25lZCAmJiB0aGlzLmNvbHVtbkxlbmd0aCA9PT0gMTEpIHtcclxuICAgICAgICB0eXBlTmFtZSA9ICdJTlQnO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHR5cGVOYW1lID0gYElOVCgke3RoaXMuY29sdW1uTGVuZ3RofSlgO1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2UgaWYgKHR5cGVOYW1lID09PSAnSU5UMjQnKSB7XHJcbiAgICAgIGlmIChpc1Vuc2lnbmVkICYmIHRoaXMuY29sdW1uTGVuZ3RoID09PSA4KSB7XHJcbiAgICAgICAgdHlwZU5hbWUgPSAnTUVESVVNSU5UJztcclxuICAgICAgfSBlbHNlIGlmICghaXNVbnNpZ25lZCAmJiB0aGlzLmNvbHVtbkxlbmd0aCA9PT0gOSkge1xyXG4gICAgICAgIHR5cGVOYW1lID0gJ01FRElVTUlOVCc7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdHlwZU5hbWUgPSBgTUVESVVNSU5UKCR7dGhpcy5jb2x1bW5MZW5ndGh9KWA7XHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSBpZiAodHlwZU5hbWUgPT09ICdET1VCTEUnKSB7XHJcbiAgICAgIC8vIERPVUJMRSB3aXRob3V0IG1vZGlmaWVycyBpcyByZXBvcnRlZCBhcyBET1VCTEUoMjIsIDMxKVxyXG4gICAgICBpZiAodGhpcy5jb2x1bW5MZW5ndGggPT09IDIyICYmIHRoaXMuZGVjaW1hbHMgPT09IDMxKSB7XHJcbiAgICAgICAgdHlwZU5hbWUgPSAnRE9VQkxFJztcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB0eXBlTmFtZSA9IGBET1VCTEUoJHt0aGlzLmNvbHVtbkxlbmd0aH0sJHt0aGlzLmRlY2ltYWxzfSlgO1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2UgaWYgKHR5cGVOYW1lID09PSAnRkxPQVQnKSB7XHJcbiAgICAgIC8vIEZMT0FUIHdpdGhvdXQgbW9kaWZpZXJzIGlzIHJlcG9ydGVkIGFzIEZMT0FUKDEyLCAzMSlcclxuICAgICAgaWYgKHRoaXMuY29sdW1uTGVuZ3RoID09PSAxMiAmJiB0aGlzLmRlY2ltYWxzID09PSAzMSkge1xyXG4gICAgICAgIHR5cGVOYW1lID0gJ0ZMT0FUJztcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB0eXBlTmFtZSA9IGBGTE9BVCgke3RoaXMuY29sdW1uTGVuZ3RofSwke3RoaXMuZGVjaW1hbHN9KWA7XHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSBpZiAodHlwZU5hbWUgPT09ICdORVdERUNJTUFMJykge1xyXG4gICAgICBpZiAodGhpcy5jb2x1bW5MZW5ndGggPT09IDExICYmIHRoaXMuZGVjaW1hbHMgPT09IDApIHtcclxuICAgICAgICB0eXBlTmFtZSA9ICdERUNJTUFMJztcclxuICAgICAgfSBlbHNlIGlmICh0aGlzLmRlY2ltYWxzID09PSAwKSB7XHJcbiAgICAgICAgLy8gbm90IHN1cmUgd2h5LCBidXQgREVDSU1BTCgxMykgaXMgcmVwb3J0ZWQgYXMgREVDSU1BTCgxNCwgMClcclxuICAgICAgICAvLyBhbmQgREVDSU1BTCgxMywgOSkgaXMgcmVwb3J0ZWQgYXMgTkVXREVDSU1BTCgxNSwgOSlcclxuICAgICAgICBpZiAoaXNVbnNpZ25lZCkge1xyXG4gICAgICAgICAgdHlwZU5hbWUgPSBgREVDSU1BTCgke3RoaXMuY29sdW1uTGVuZ3RofSlgO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICB0eXBlTmFtZSA9IGBERUNJTUFMKCR7dGhpcy5jb2x1bW5MZW5ndGggLSAxfSlgO1xyXG4gICAgICAgIH1cclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB0eXBlTmFtZSA9IGBERUNJTUFMKCR7dGhpcy5jb2x1bW5MZW5ndGggLSAyfSwke3RoaXMuZGVjaW1hbHN9KWA7XHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHR5cGVOYW1lID0gYCR7dHlwZU5hbWVzW3RoaXMuY29sdW1uVHlwZV19KCR7dGhpcy5jb2x1bW5MZW5ndGh9KWA7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGlzVW5zaWduZWQpIHtcclxuICAgICAgdHlwZU5hbWUgKz0gJyBVTlNJR05FRCc7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gVE9ETyByZXNwZWN0IGNvbG9ycyBvcHRpb25cclxuICAgIHJldHVybiBgXFxgJHt0aGlzLm5hbWV9XFxgICR7W3R5cGVOYW1lLCAuLi5mbGFnTmFtZXNdLmpvaW4oJyAnKX1gO1xyXG4gIH1cclxuXHJcbiAgc3RhdGljIHRvUGFja2V0KGNvbHVtbiwgc2VxdWVuY2VJZCkge1xyXG4gICAgbGV0IGxlbmd0aCA9IDE3OyAvLyA9IDQgcGFkZGluZyArIDEgKyAxMiBmb3IgdGhlIHJlc3RcclxuICAgIGZpZWxkcy5mb3JFYWNoKChmaWVsZCkgPT4ge1xyXG4gICAgICBsZW5ndGggKz0gUGFja2V0Lmxlbmd0aENvZGVkU3RyaW5nTGVuZ3RoKFxyXG4gICAgICAgIGNvbHVtbltmaWVsZF0sXHJcbiAgICAgICAgQ2hhcnNldFRvRW5jb2RpbmdbY29sdW1uLmNoYXJhY3RlclNldF1cclxuICAgICAgKTtcclxuICAgIH0pO1xyXG4gICAgY29uc3QgYnVmZmVyID0gQnVmZmVyLmFsbG9jVW5zYWZlKGxlbmd0aCk7XHJcblxyXG4gICAgY29uc3QgcGFja2V0ID0gbmV3IFBhY2tldChzZXF1ZW5jZUlkLCBidWZmZXIsIDAsIGxlbmd0aCk7XHJcbiAgICBmdW5jdGlvbiB3cml0ZUZpZWxkKG5hbWUpIHtcclxuICAgICAgcGFja2V0LndyaXRlTGVuZ3RoQ29kZWRTdHJpbmcoXHJcbiAgICAgICAgY29sdW1uW25hbWVdLFxyXG4gICAgICAgIENoYXJzZXRUb0VuY29kaW5nW2NvbHVtbi5jaGFyYWN0ZXJTZXRdXHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgICBwYWNrZXQub2Zmc2V0ID0gNDtcclxuICAgIGZpZWxkcy5mb3JFYWNoKHdyaXRlRmllbGQpO1xyXG4gICAgcGFja2V0LndyaXRlSW50OCgweDBjKTtcclxuICAgIHBhY2tldC53cml0ZUludDE2KGNvbHVtbi5jaGFyYWN0ZXJTZXQpO1xyXG4gICAgcGFja2V0LndyaXRlSW50MzIoY29sdW1uLmNvbHVtbkxlbmd0aCk7XHJcbiAgICBwYWNrZXQud3JpdGVJbnQ4KGNvbHVtbi5jb2x1bW5UeXBlKTtcclxuICAgIHBhY2tldC53cml0ZUludDE2KGNvbHVtbi5mbGFncyk7XHJcbiAgICBwYWNrZXQud3JpdGVJbnQ4KGNvbHVtbi5kZWNpbWFscyk7XHJcbiAgICBwYWNrZXQud3JpdGVJbnQxNigwKTsgLy8gZmlsbGVyXHJcbiAgICByZXR1cm4gcGFja2V0O1xyXG4gIH1cclxuXHJcbiAgLy8gbm9kZS1teXNxbCBjb21wYXRpYmlsaXR5OiBhbGlhcyBcImRiXCIgdG8gXCJzY2hlbWFcIlxyXG4gIGdldCBkYigpIHtcclxuICAgIHJldHVybiB0aGlzLnNjaGVtYTtcclxuICB9XHJcbn1cclxuXHJcbmNvbnN0IGFkZFN0cmluZyA9IGZ1bmN0aW9uIChuYW1lKSB7XHJcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KENvbHVtbkRlZmluaXRpb24ucHJvdG90eXBlLCBuYW1lLCB7XHJcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgY29uc3Qgc3RhcnQgPSB0aGlzW2BfJHtuYW1lfVN0YXJ0YF07XHJcbiAgICAgIGNvbnN0IGVuZCA9IHN0YXJ0ICsgdGhpc1tgXyR7bmFtZX1MZW5ndGhgXTtcclxuICAgICAgY29uc3QgdmFsID0gU3RyaW5nUGFyc2VyLmRlY29kZShcclxuICAgICAgICB0aGlzLl9idWYsXHJcbiAgICAgICAgdGhpcy5lbmNvZGluZyA9PT0gJ2JpbmFyeScgPyB0aGlzLl9jbGllbnRFbmNvZGluZyA6IHRoaXMuZW5jb2RpbmcsXHJcbiAgICAgICAgc3RhcnQsXHJcbiAgICAgICAgZW5kXHJcbiAgICAgICk7XHJcblxyXG4gICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgbmFtZSwge1xyXG4gICAgICAgIHZhbHVlOiB2YWwsXHJcbiAgICAgICAgd3JpdGFibGU6IGZhbHNlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogZmFsc2UsXHJcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgcmV0dXJuIHZhbDtcclxuICAgIH0sXHJcbiAgfSk7XHJcbn07XHJcblxyXG5hZGRTdHJpbmcoJ2NhdGFsb2cnKTtcclxuYWRkU3RyaW5nKCdzY2hlbWEnKTtcclxuYWRkU3RyaW5nKCd0YWJsZScpO1xyXG5hZGRTdHJpbmcoJ29yZ1RhYmxlJyk7XHJcbmFkZFN0cmluZygnb3JnTmFtZScpO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBDb2x1bW5EZWZpbml0aW9uO1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/packets/column_definition.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/packets/execute.js":
/*!****************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/execute.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\n\r\n\r\nconst CursorType = __webpack_require__(/*! ../constants/cursor */ \"(middleware)/./node_modules/mysql2/lib/constants/cursor.js\");\r\nconst CommandCodes = __webpack_require__(/*! ../constants/commands */ \"(middleware)/./node_modules/mysql2/lib/constants/commands.js\");\r\nconst Types = __webpack_require__(/*! ../constants/types */ \"(middleware)/./node_modules/mysql2/lib/constants/types.js\");\r\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(middleware)/./node_modules/mysql2/lib/packets/packet.js\");\r\nconst CharsetToEncoding = __webpack_require__(/*! ../constants/charset_encodings.js */ \"(middleware)/./node_modules/mysql2/lib/constants/charset_encodings.js\");\r\n\r\nfunction isJSON(value) {\r\n  return (\r\n    Array.isArray(value) ||\r\n    value.constructor === Object ||\r\n    (typeof value.toJSON === 'function' && !Buffer.isBuffer(value))\r\n  );\r\n}\r\n\r\n/**\r\n * Converts a value to an object describing type, String/Buffer representation and length\r\n * @param {*} value\r\n */\r\nfunction toParameter(value, encoding, timezone) {\r\n  let type = Types.VAR_STRING;\r\n  let length;\r\n  let writer = function (value) {\r\n    // eslint-disable-next-line no-invalid-this\r\n    return Packet.prototype.writeLengthCodedString.call(this, value, encoding);\r\n  };\r\n  if (value !== null) {\r\n    switch (typeof value) {\r\n      case 'undefined':\r\n        throw new TypeError('Bind parameters must not contain undefined');\r\n\r\n      case 'number':\r\n        type = Types.DOUBLE;\r\n        length = 8;\r\n        writer = Packet.prototype.writeDouble;\r\n        break;\r\n\r\n      case 'boolean':\r\n        value = value | 0;\r\n        type = Types.TINY;\r\n        length = 1;\r\n        writer = Packet.prototype.writeInt8;\r\n        break;\r\n\r\n      case 'object':\r\n        if (Object.prototype.toString.call(value) === '[object Date]') {\r\n          type = Types.DATETIME;\r\n          length = 12;\r\n          writer = function (value) {\r\n            // eslint-disable-next-line no-invalid-this\r\n            return Packet.prototype.writeDate.call(this, value, timezone);\r\n          };\r\n        } else if (isJSON(value)) {\r\n          value = JSON.stringify(value);\r\n          type = Types.JSON;\r\n        } else if (Buffer.isBuffer(value)) {\r\n          length = Packet.lengthCodedNumberLength(value.length) + value.length;\r\n          writer = Packet.prototype.writeLengthCodedBuffer;\r\n        }\r\n        break;\r\n\r\n      default:\r\n        value = value.toString();\r\n    }\r\n  } else {\r\n    value = '';\r\n    type = Types.NULL;\r\n  }\r\n  if (!length) {\r\n    length = Packet.lengthCodedStringLength(value, encoding);\r\n  }\r\n  return { value, type, length, writer };\r\n}\r\n\r\nclass Execute {\r\n  constructor(id, parameters, charsetNumber, timezone) {\r\n    this.id = id;\r\n    this.parameters = parameters;\r\n    this.encoding = CharsetToEncoding[charsetNumber];\r\n    this.timezone = timezone;\r\n  }\r\n\r\n  static fromPacket(packet, encoding) {\r\n    const stmtId = packet.readInt32();\r\n    const flags = packet.readInt8();\r\n    const iterationCount = packet.readInt32();\r\n\r\n    let i = packet.offset;\r\n    while (i < packet.end - 1) {\r\n      if (\r\n        (packet.buffer[i + 1] === Types.VAR_STRING ||\r\n          packet.buffer[i + 1] === Types.NULL ||\r\n          packet.buffer[i + 1] === Types.DOUBLE ||\r\n          packet.buffer[i + 1] === Types.TINY ||\r\n          packet.buffer[i + 1] === Types.DATETIME ||\r\n          packet.buffer[i + 1] === Types.JSON) &&\r\n        packet.buffer[i] === 1 &&\r\n        packet.buffer[i + 2] === 0\r\n      ) {\r\n        break;\r\n      } else {\r\n        packet.readInt8();\r\n      }\r\n      i++;\r\n    }\r\n\r\n    const types = [];\r\n\r\n    for (let i = packet.offset + 1; i < packet.end - 1; i++) {\r\n      if (\r\n        (packet.buffer[i] === Types.VAR_STRING ||\r\n          packet.buffer[i] === Types.NULL ||\r\n          packet.buffer[i] === Types.DOUBLE ||\r\n          packet.buffer[i] === Types.TINY ||\r\n          packet.buffer[i] === Types.DATETIME ||\r\n          packet.buffer[i] === Types.JSON) &&\r\n        packet.buffer[i + 1] === 0\r\n      ) {\r\n        types.push(packet.buffer[i]);\r\n        packet.skip(2);\r\n      }\r\n    }\r\n\r\n    packet.skip(1);\r\n\r\n    const values = [];\r\n    for (let i = 0; i < types.length; i++) {\r\n      if (types[i] === Types.VAR_STRING) {\r\n        values.push(packet.readLengthCodedString(encoding));\r\n      } else if (types[i] === Types.DOUBLE) {\r\n        values.push(packet.readDouble());\r\n      } else if (types[i] === Types.TINY) {\r\n        values.push(packet.readInt8());\r\n      } else if (types[i] === Types.DATETIME) {\r\n        values.push(packet.readDateTime());\r\n      } else if (types[i] === Types.JSON) {\r\n        values.push(JSON.parse(packet.readLengthCodedString(encoding)));\r\n      }\r\n      if (types[i] === Types.NULL) {\r\n        values.push(null);\r\n      }\r\n    }\r\n\r\n    return { stmtId, flags, iterationCount, values };\r\n  }\r\n\r\n  toPacket() {\r\n    // TODO: don't try to calculate packet length in advance, allocate some big buffer in advance (header + 256 bytes?)\r\n    // and copy + reallocate if not enough\r\n    // 0 + 4 - length, seqId\r\n    // 4 + 1 - COM_EXECUTE\r\n    // 5 + 4 - stmtId\r\n    // 9 + 1 - flags\r\n    // 10 + 4 - iteration-count (always 1)\r\n    let length = 14;\r\n    let parameters;\r\n    if (this.parameters && this.parameters.length > 0) {\r\n      length += Math.floor((this.parameters.length + 7) / 8);\r\n      length += 1; // new-params-bound-flag\r\n      length += 2 * this.parameters.length; // type byte for each parameter if new-params-bound-flag is set\r\n      parameters = this.parameters.map((value) =>\r\n        toParameter(value, this.encoding, this.timezone)\r\n      );\r\n      length += parameters.reduce(\r\n        (accumulator, parameter) => accumulator + parameter.length,\r\n        0\r\n      );\r\n    }\r\n    const buffer = Buffer.allocUnsafe(length);\r\n    const packet = new Packet(0, buffer, 0, length);\r\n    packet.offset = 4;\r\n    packet.writeInt8(CommandCodes.STMT_EXECUTE);\r\n    packet.writeInt32(this.id);\r\n    packet.writeInt8(CursorType.NO_CURSOR); // flags\r\n    packet.writeInt32(1); // iteration-count, always 1\r\n    if (parameters) {\r\n      let bitmap = 0;\r\n      let bitValue = 1;\r\n      parameters.forEach((parameter) => {\r\n        if (parameter.type === Types.NULL) {\r\n          bitmap += bitValue;\r\n        }\r\n        bitValue *= 2;\r\n        if (bitValue === 256) {\r\n          packet.writeInt8(bitmap);\r\n          bitmap = 0;\r\n          bitValue = 1;\r\n        }\r\n      });\r\n      if (bitValue !== 1) {\r\n        packet.writeInt8(bitmap);\r\n      }\r\n      // TODO: explain meaning of the flag\r\n      // afaik, if set n*2 bytes with type of parameter are sent before parameters\r\n      // if not, previous execution types are used (TODO prooflink)\r\n      packet.writeInt8(1); // new-params-bound-flag\r\n      // Write parameter types\r\n      parameters.forEach((parameter) => {\r\n        packet.writeInt8(parameter.type); // field type\r\n        packet.writeInt8(0); // parameter flag\r\n      });\r\n      // Write parameter values\r\n      parameters.forEach((parameter) => {\r\n        if (parameter.type !== Types.NULL) {\r\n          parameter.writer.call(packet, parameter.value);\r\n        }\r\n      });\r\n    }\r\n    return packet;\r\n  }\r\n}\r\n\r\nmodule.exports = Execute;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/packets/execute.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/packets/handshake.js":
/*!******************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/handshake.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\n\r\n\r\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(middleware)/./node_modules/mysql2/lib/packets/packet.js\");\r\nconst ClientConstants = __webpack_require__(/*! ../constants/client.js */ \"(middleware)/./node_modules/mysql2/lib/constants/client.js\");\r\n\r\n// https://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::Handshake\r\n\r\nclass Handshake {\r\n  constructor(args) {\r\n    this.protocolVersion = args.protocolVersion;\r\n    this.serverVersion = args.serverVersion;\r\n    this.capabilityFlags = args.capabilityFlags;\r\n    this.connectionId = args.connectionId;\r\n    this.authPluginData1 = args.authPluginData1;\r\n    this.authPluginData2 = args.authPluginData2;\r\n    this.characterSet = args.characterSet;\r\n    this.statusFlags = args.statusFlags;\r\n    this.authPluginName = args.authPluginName;\r\n  }\r\n\r\n  setScrambleData(cb) {\r\n    (__webpack_require__(/*! crypto */ \"crypto\").randomBytes)(20, (err, data) => {\r\n      if (err) {\r\n        cb(err);\r\n        return;\r\n      }\r\n      this.authPluginData1 = data.slice(0, 8);\r\n      this.authPluginData2 = data.slice(8, 20);\r\n      cb();\r\n    });\r\n  }\r\n\r\n  toPacket(sequenceId) {\r\n    const length = 68 + Buffer.byteLength(this.serverVersion, 'utf8');\r\n    const buffer = Buffer.alloc(length + 4, 0); // zero fill, 10 bytes filler later needs to contain zeros\r\n    const packet = new Packet(sequenceId, buffer, 0, length + 4);\r\n    packet.offset = 4;\r\n    packet.writeInt8(this.protocolVersion);\r\n    packet.writeString(this.serverVersion, 'cesu8');\r\n    packet.writeInt8(0);\r\n    packet.writeInt32(this.connectionId);\r\n    packet.writeBuffer(this.authPluginData1);\r\n    packet.writeInt8(0);\r\n    const capabilityFlagsBuffer = Buffer.allocUnsafe(4);\r\n    capabilityFlagsBuffer.writeUInt32LE(this.capabilityFlags, 0);\r\n    packet.writeBuffer(capabilityFlagsBuffer.slice(0, 2));\r\n    packet.writeInt8(this.characterSet);\r\n    packet.writeInt16(this.statusFlags);\r\n    packet.writeBuffer(capabilityFlagsBuffer.slice(2, 4));\r\n    packet.writeInt8(21); // authPluginDataLength\r\n    packet.skip(10);\r\n    packet.writeBuffer(this.authPluginData2);\r\n    packet.writeInt8(0);\r\n    packet.writeString('mysql_native_password', 'latin1');\r\n    packet.writeInt8(0);\r\n    return packet;\r\n  }\r\n\r\n  static fromPacket(packet) {\r\n    const args = {};\r\n    args.protocolVersion = packet.readInt8();\r\n    args.serverVersion = packet.readNullTerminatedString('cesu8');\r\n    args.connectionId = packet.readInt32();\r\n    args.authPluginData1 = packet.readBuffer(8);\r\n    packet.skip(1);\r\n    const capabilityFlagsBuffer = Buffer.allocUnsafe(4);\r\n    capabilityFlagsBuffer[0] = packet.readInt8();\r\n    capabilityFlagsBuffer[1] = packet.readInt8();\r\n    if (packet.haveMoreData()) {\r\n      args.characterSet = packet.readInt8();\r\n      args.statusFlags = packet.readInt16();\r\n      // upper 2 bytes\r\n      capabilityFlagsBuffer[2] = packet.readInt8();\r\n      capabilityFlagsBuffer[3] = packet.readInt8();\r\n      args.capabilityFlags = capabilityFlagsBuffer.readUInt32LE(0);\r\n      if (args.capabilityFlags & ClientConstants.PLUGIN_AUTH) {\r\n        args.authPluginDataLength = packet.readInt8();\r\n      } else {\r\n        args.authPluginDataLength = 0;\r\n        packet.skip(1);\r\n      }\r\n      packet.skip(10);\r\n    } else {\r\n      args.capabilityFlags = capabilityFlagsBuffer.readUInt16LE(0);\r\n    }\r\n\r\n    const isSecureConnection =\r\n      args.capabilityFlags & ClientConstants.SECURE_CONNECTION;\r\n    if (isSecureConnection) {\r\n      const authPluginDataLength = args.authPluginDataLength;\r\n      if (authPluginDataLength === 0) {\r\n        // for Secure Password Authentication\r\n        args.authPluginDataLength = 20;\r\n        args.authPluginData2 = packet.readBuffer(12);\r\n        packet.skip(1);\r\n      } else {\r\n        // length > 0\r\n        // for Custom Auth Plugin (PLUGIN_AUTH)\r\n        const len = Math.max(13, authPluginDataLength - 8);\r\n        args.authPluginData2 = packet.readBuffer(len);\r\n      }\r\n    }\r\n\r\n    if (args.capabilityFlags & ClientConstants.PLUGIN_AUTH) {\r\n      args.authPluginName = packet.readNullTerminatedString('ascii');\r\n    }\r\n\r\n    return new Handshake(args);\r\n  }\r\n}\r\n\r\nmodule.exports = Handshake;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcGFja2V0cy9oYW5kc2hha2UuanMiLCJtYXBwaW5ncyI6IjtBQUFhO0FBQ2I7QUFDQSxlQUFlLG1CQUFPLENBQUMsbUZBQW1CO0FBQzFDLHdCQUF3QixtQkFBTyxDQUFDLDBGQUF3QjtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSx5REFBNkI7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLE1BQU07QUFDOUIsbUJBQW1CLE1BQU0sdUJBQXVCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsTUFBTTtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxNQUFNO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL3BhY2tldHMvaGFuZHNoYWtlLmpzPzllZTIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxuY29uc3QgUGFja2V0ID0gcmVxdWlyZSgnLi4vcGFja2V0cy9wYWNrZXQnKTtcclxuY29uc3QgQ2xpZW50Q29uc3RhbnRzID0gcmVxdWlyZSgnLi4vY29uc3RhbnRzL2NsaWVudC5qcycpO1xyXG5cclxuLy8gaHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9pbnRlcm5hbHMvZW4vY29ubmVjdGlvbi1waGFzZS1wYWNrZXRzLmh0bWwjcGFja2V0LVByb3RvY29sOjpIYW5kc2hha2VcclxuXHJcbmNsYXNzIEhhbmRzaGFrZSB7XHJcbiAgY29uc3RydWN0b3IoYXJncykge1xyXG4gICAgdGhpcy5wcm90b2NvbFZlcnNpb24gPSBhcmdzLnByb3RvY29sVmVyc2lvbjtcclxuICAgIHRoaXMuc2VydmVyVmVyc2lvbiA9IGFyZ3Muc2VydmVyVmVyc2lvbjtcclxuICAgIHRoaXMuY2FwYWJpbGl0eUZsYWdzID0gYXJncy5jYXBhYmlsaXR5RmxhZ3M7XHJcbiAgICB0aGlzLmNvbm5lY3Rpb25JZCA9IGFyZ3MuY29ubmVjdGlvbklkO1xyXG4gICAgdGhpcy5hdXRoUGx1Z2luRGF0YTEgPSBhcmdzLmF1dGhQbHVnaW5EYXRhMTtcclxuICAgIHRoaXMuYXV0aFBsdWdpbkRhdGEyID0gYXJncy5hdXRoUGx1Z2luRGF0YTI7XHJcbiAgICB0aGlzLmNoYXJhY3RlclNldCA9IGFyZ3MuY2hhcmFjdGVyU2V0O1xyXG4gICAgdGhpcy5zdGF0dXNGbGFncyA9IGFyZ3Muc3RhdHVzRmxhZ3M7XHJcbiAgICB0aGlzLmF1dGhQbHVnaW5OYW1lID0gYXJncy5hdXRoUGx1Z2luTmFtZTtcclxuICB9XHJcblxyXG4gIHNldFNjcmFtYmxlRGF0YShjYikge1xyXG4gICAgcmVxdWlyZSgnY3J5cHRvJykucmFuZG9tQnl0ZXMoMjAsIChlcnIsIGRhdGEpID0+IHtcclxuICAgICAgaWYgKGVycikge1xyXG4gICAgICAgIGNiKGVycik7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICAgIHRoaXMuYXV0aFBsdWdpbkRhdGExID0gZGF0YS5zbGljZSgwLCA4KTtcclxuICAgICAgdGhpcy5hdXRoUGx1Z2luRGF0YTIgPSBkYXRhLnNsaWNlKDgsIDIwKTtcclxuICAgICAgY2IoKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgdG9QYWNrZXQoc2VxdWVuY2VJZCkge1xyXG4gICAgY29uc3QgbGVuZ3RoID0gNjggKyBCdWZmZXIuYnl0ZUxlbmd0aCh0aGlzLnNlcnZlclZlcnNpb24sICd1dGY4Jyk7XHJcbiAgICBjb25zdCBidWZmZXIgPSBCdWZmZXIuYWxsb2MobGVuZ3RoICsgNCwgMCk7IC8vIHplcm8gZmlsbCwgMTAgYnl0ZXMgZmlsbGVyIGxhdGVyIG5lZWRzIHRvIGNvbnRhaW4gemVyb3NcclxuICAgIGNvbnN0IHBhY2tldCA9IG5ldyBQYWNrZXQoc2VxdWVuY2VJZCwgYnVmZmVyLCAwLCBsZW5ndGggKyA0KTtcclxuICAgIHBhY2tldC5vZmZzZXQgPSA0O1xyXG4gICAgcGFja2V0LndyaXRlSW50OCh0aGlzLnByb3RvY29sVmVyc2lvbik7XHJcbiAgICBwYWNrZXQud3JpdGVTdHJpbmcodGhpcy5zZXJ2ZXJWZXJzaW9uLCAnY2VzdTgnKTtcclxuICAgIHBhY2tldC53cml0ZUludDgoMCk7XHJcbiAgICBwYWNrZXQud3JpdGVJbnQzMih0aGlzLmNvbm5lY3Rpb25JZCk7XHJcbiAgICBwYWNrZXQud3JpdGVCdWZmZXIodGhpcy5hdXRoUGx1Z2luRGF0YTEpO1xyXG4gICAgcGFja2V0LndyaXRlSW50OCgwKTtcclxuICAgIGNvbnN0IGNhcGFiaWxpdHlGbGFnc0J1ZmZlciA9IEJ1ZmZlci5hbGxvY1Vuc2FmZSg0KTtcclxuICAgIGNhcGFiaWxpdHlGbGFnc0J1ZmZlci53cml0ZVVJbnQzMkxFKHRoaXMuY2FwYWJpbGl0eUZsYWdzLCAwKTtcclxuICAgIHBhY2tldC53cml0ZUJ1ZmZlcihjYXBhYmlsaXR5RmxhZ3NCdWZmZXIuc2xpY2UoMCwgMikpO1xyXG4gICAgcGFja2V0LndyaXRlSW50OCh0aGlzLmNoYXJhY3RlclNldCk7XHJcbiAgICBwYWNrZXQud3JpdGVJbnQxNih0aGlzLnN0YXR1c0ZsYWdzKTtcclxuICAgIHBhY2tldC53cml0ZUJ1ZmZlcihjYXBhYmlsaXR5RmxhZ3NCdWZmZXIuc2xpY2UoMiwgNCkpO1xyXG4gICAgcGFja2V0LndyaXRlSW50OCgyMSk7IC8vIGF1dGhQbHVnaW5EYXRhTGVuZ3RoXHJcbiAgICBwYWNrZXQuc2tpcCgxMCk7XHJcbiAgICBwYWNrZXQud3JpdGVCdWZmZXIodGhpcy5hdXRoUGx1Z2luRGF0YTIpO1xyXG4gICAgcGFja2V0LndyaXRlSW50OCgwKTtcclxuICAgIHBhY2tldC53cml0ZVN0cmluZygnbXlzcWxfbmF0aXZlX3Bhc3N3b3JkJywgJ2xhdGluMScpO1xyXG4gICAgcGFja2V0LndyaXRlSW50OCgwKTtcclxuICAgIHJldHVybiBwYWNrZXQ7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgZnJvbVBhY2tldChwYWNrZXQpIHtcclxuICAgIGNvbnN0IGFyZ3MgPSB7fTtcclxuICAgIGFyZ3MucHJvdG9jb2xWZXJzaW9uID0gcGFja2V0LnJlYWRJbnQ4KCk7XHJcbiAgICBhcmdzLnNlcnZlclZlcnNpb24gPSBwYWNrZXQucmVhZE51bGxUZXJtaW5hdGVkU3RyaW5nKCdjZXN1OCcpO1xyXG4gICAgYXJncy5jb25uZWN0aW9uSWQgPSBwYWNrZXQucmVhZEludDMyKCk7XHJcbiAgICBhcmdzLmF1dGhQbHVnaW5EYXRhMSA9IHBhY2tldC5yZWFkQnVmZmVyKDgpO1xyXG4gICAgcGFja2V0LnNraXAoMSk7XHJcbiAgICBjb25zdCBjYXBhYmlsaXR5RmxhZ3NCdWZmZXIgPSBCdWZmZXIuYWxsb2NVbnNhZmUoNCk7XHJcbiAgICBjYXBhYmlsaXR5RmxhZ3NCdWZmZXJbMF0gPSBwYWNrZXQucmVhZEludDgoKTtcclxuICAgIGNhcGFiaWxpdHlGbGFnc0J1ZmZlclsxXSA9IHBhY2tldC5yZWFkSW50OCgpO1xyXG4gICAgaWYgKHBhY2tldC5oYXZlTW9yZURhdGEoKSkge1xyXG4gICAgICBhcmdzLmNoYXJhY3RlclNldCA9IHBhY2tldC5yZWFkSW50OCgpO1xyXG4gICAgICBhcmdzLnN0YXR1c0ZsYWdzID0gcGFja2V0LnJlYWRJbnQxNigpO1xyXG4gICAgICAvLyB1cHBlciAyIGJ5dGVzXHJcbiAgICAgIGNhcGFiaWxpdHlGbGFnc0J1ZmZlclsyXSA9IHBhY2tldC5yZWFkSW50OCgpO1xyXG4gICAgICBjYXBhYmlsaXR5RmxhZ3NCdWZmZXJbM10gPSBwYWNrZXQucmVhZEludDgoKTtcclxuICAgICAgYXJncy5jYXBhYmlsaXR5RmxhZ3MgPSBjYXBhYmlsaXR5RmxhZ3NCdWZmZXIucmVhZFVJbnQzMkxFKDApO1xyXG4gICAgICBpZiAoYXJncy5jYXBhYmlsaXR5RmxhZ3MgJiBDbGllbnRDb25zdGFudHMuUExVR0lOX0FVVEgpIHtcclxuICAgICAgICBhcmdzLmF1dGhQbHVnaW5EYXRhTGVuZ3RoID0gcGFja2V0LnJlYWRJbnQ4KCk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgYXJncy5hdXRoUGx1Z2luRGF0YUxlbmd0aCA9IDA7XHJcbiAgICAgICAgcGFja2V0LnNraXAoMSk7XHJcbiAgICAgIH1cclxuICAgICAgcGFja2V0LnNraXAoMTApO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgYXJncy5jYXBhYmlsaXR5RmxhZ3MgPSBjYXBhYmlsaXR5RmxhZ3NCdWZmZXIucmVhZFVJbnQxNkxFKDApO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGlzU2VjdXJlQ29ubmVjdGlvbiA9XHJcbiAgICAgIGFyZ3MuY2FwYWJpbGl0eUZsYWdzICYgQ2xpZW50Q29uc3RhbnRzLlNFQ1VSRV9DT05ORUNUSU9OO1xyXG4gICAgaWYgKGlzU2VjdXJlQ29ubmVjdGlvbikge1xyXG4gICAgICBjb25zdCBhdXRoUGx1Z2luRGF0YUxlbmd0aCA9IGFyZ3MuYXV0aFBsdWdpbkRhdGFMZW5ndGg7XHJcbiAgICAgIGlmIChhdXRoUGx1Z2luRGF0YUxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAgIC8vIGZvciBTZWN1cmUgUGFzc3dvcmQgQXV0aGVudGljYXRpb25cclxuICAgICAgICBhcmdzLmF1dGhQbHVnaW5EYXRhTGVuZ3RoID0gMjA7XHJcbiAgICAgICAgYXJncy5hdXRoUGx1Z2luRGF0YTIgPSBwYWNrZXQucmVhZEJ1ZmZlcigxMik7XHJcbiAgICAgICAgcGFja2V0LnNraXAoMSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgLy8gbGVuZ3RoID4gMFxyXG4gICAgICAgIC8vIGZvciBDdXN0b20gQXV0aCBQbHVnaW4gKFBMVUdJTl9BVVRIKVxyXG4gICAgICAgIGNvbnN0IGxlbiA9IE1hdGgubWF4KDEzLCBhdXRoUGx1Z2luRGF0YUxlbmd0aCAtIDgpO1xyXG4gICAgICAgIGFyZ3MuYXV0aFBsdWdpbkRhdGEyID0gcGFja2V0LnJlYWRCdWZmZXIobGVuKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGlmIChhcmdzLmNhcGFiaWxpdHlGbGFncyAmIENsaWVudENvbnN0YW50cy5QTFVHSU5fQVVUSCkge1xyXG4gICAgICBhcmdzLmF1dGhQbHVnaW5OYW1lID0gcGFja2V0LnJlYWROdWxsVGVybWluYXRlZFN0cmluZygnYXNjaWknKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gbmV3IEhhbmRzaGFrZShhcmdzKTtcclxuICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gSGFuZHNoYWtlO1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/packets/handshake.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/packets/handshake_response.js":
/*!***************************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/handshake_response.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\n\r\n\r\nconst ClientConstants = __webpack_require__(/*! ../constants/client.js */ \"(middleware)/./node_modules/mysql2/lib/constants/client.js\");\r\nconst CharsetToEncoding = __webpack_require__(/*! ../constants/charset_encodings.js */ \"(middleware)/./node_modules/mysql2/lib/constants/charset_encodings.js\");\r\nconst Packet = __webpack_require__(/*! ../packets/packet.js */ \"(middleware)/./node_modules/mysql2/lib/packets/packet.js\");\r\n\r\nconst auth41 = __webpack_require__(/*! ../auth_41.js */ \"(middleware)/./node_modules/mysql2/lib/auth_41.js\");\r\n\r\nclass HandshakeResponse {\r\n  constructor(handshake) {\r\n    this.user = handshake.user || '';\r\n    this.database = handshake.database || '';\r\n    this.password = handshake.password || '';\r\n    this.passwordSha1 = handshake.passwordSha1;\r\n    this.authPluginData1 = handshake.authPluginData1;\r\n    this.authPluginData2 = handshake.authPluginData2;\r\n    this.compress = handshake.compress;\r\n    this.clientFlags = handshake.flags;\r\n    // TODO: pre-4.1 auth support\r\n    let authToken;\r\n    if (this.passwordSha1) {\r\n      authToken = auth41.calculateTokenFromPasswordSha(\r\n        this.passwordSha1,\r\n        this.authPluginData1,\r\n        this.authPluginData2\r\n      );\r\n    } else {\r\n      authToken = auth41.calculateToken(\r\n        this.password,\r\n        this.authPluginData1,\r\n        this.authPluginData2\r\n      );\r\n    }\r\n    this.authToken = authToken;\r\n    this.charsetNumber = handshake.charsetNumber;\r\n    this.encoding = CharsetToEncoding[handshake.charsetNumber];\r\n    this.connectAttributes = handshake.connectAttributes;\r\n  }\r\n\r\n  serializeResponse(buffer) {\r\n    const isSet = (flag) => this.clientFlags & ClientConstants[flag];\r\n    const packet = new Packet(0, buffer, 0, buffer.length);\r\n    packet.offset = 4;\r\n    packet.writeInt32(this.clientFlags);\r\n    packet.writeInt32(0); // max packet size. todo: move to config\r\n    packet.writeInt8(this.charsetNumber);\r\n    packet.skip(23);\r\n    const encoding = this.encoding;\r\n    packet.writeNullTerminatedString(this.user, encoding);\r\n    let k;\r\n    if (isSet('PLUGIN_AUTH_LENENC_CLIENT_DATA')) {\r\n      packet.writeLengthCodedNumber(this.authToken.length);\r\n      packet.writeBuffer(this.authToken);\r\n    } else if (isSet('SECURE_CONNECTION')) {\r\n      packet.writeInt8(this.authToken.length);\r\n      packet.writeBuffer(this.authToken);\r\n    } else {\r\n      packet.writeBuffer(this.authToken);\r\n      packet.writeInt8(0);\r\n    }\r\n    if (isSet('CONNECT_WITH_DB')) {\r\n      packet.writeNullTerminatedString(this.database, encoding);\r\n    }\r\n    if (isSet('PLUGIN_AUTH')) {\r\n      // TODO: pass from config\r\n      packet.writeNullTerminatedString('mysql_native_password', 'latin1');\r\n    }\r\n    if (isSet('CONNECT_ATTRS')) {\r\n      const connectAttributes = this.connectAttributes || {};\r\n      const attrNames = Object.keys(connectAttributes);\r\n      let keysLength = 0;\r\n      for (k = 0; k < attrNames.length; ++k) {\r\n        keysLength += Packet.lengthCodedStringLength(attrNames[k], encoding);\r\n        keysLength += Packet.lengthCodedStringLength(\r\n          connectAttributes[attrNames[k]],\r\n          encoding\r\n        );\r\n      }\r\n      packet.writeLengthCodedNumber(keysLength);\r\n      for (k = 0; k < attrNames.length; ++k) {\r\n        packet.writeLengthCodedString(attrNames[k], encoding);\r\n        packet.writeLengthCodedString(\r\n          connectAttributes[attrNames[k]],\r\n          encoding\r\n        );\r\n      }\r\n    }\r\n    return packet;\r\n  }\r\n\r\n  toPacket() {\r\n    if (typeof this.user !== 'string') {\r\n      throw new Error('\"user\" connection config property must be a string');\r\n    }\r\n    if (typeof this.database !== 'string') {\r\n      throw new Error('\"database\" connection config property must be a string');\r\n    }\r\n    // dry run: calculate resulting packet length\r\n    const p = this.serializeResponse(Packet.MockBuffer());\r\n    return this.serializeResponse(Buffer.alloc(p.offset));\r\n  }\r\n  static fromPacket(packet) {\r\n    const args = {};\r\n    args.clientFlags = packet.readInt32();\r\n    function isSet(flag) {\r\n      return args.clientFlags & ClientConstants[flag];\r\n    }\r\n    args.maxPacketSize = packet.readInt32();\r\n    args.charsetNumber = packet.readInt8();\r\n    const encoding = CharsetToEncoding[args.charsetNumber];\r\n    args.encoding = encoding;\r\n    packet.skip(23);\r\n    args.user = packet.readNullTerminatedString(encoding);\r\n    let authTokenLength;\r\n    if (isSet('PLUGIN_AUTH_LENENC_CLIENT_DATA')) {\r\n      authTokenLength = packet.readLengthCodedNumber(encoding);\r\n      args.authToken = packet.readBuffer(authTokenLength);\r\n    } else if (isSet('SECURE_CONNECTION')) {\r\n      authTokenLength = packet.readInt8();\r\n      args.authToken = packet.readBuffer(authTokenLength);\r\n    } else {\r\n      args.authToken = packet.readNullTerminatedString(encoding);\r\n    }\r\n    if (isSet('CONNECT_WITH_DB')) {\r\n      args.database = packet.readNullTerminatedString(encoding);\r\n    }\r\n    if (isSet('PLUGIN_AUTH')) {\r\n      args.authPluginName = packet.readNullTerminatedString(encoding);\r\n    }\r\n    if (isSet('CONNECT_ATTRS')) {\r\n      const keysLength = packet.readLengthCodedNumber(encoding);\r\n      const keysEnd = packet.offset + keysLength;\r\n      const attrs = {};\r\n      while (packet.offset < keysEnd) {\r\n        attrs[packet.readLengthCodedString(encoding)] =\r\n          packet.readLengthCodedString(encoding);\r\n      }\r\n      args.connectAttributes = attrs;\r\n    }\r\n    return args;\r\n  }\r\n}\r\n\r\nmodule.exports = HandshakeResponse;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/packets/handshake_response.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/packets/index.js":
/*!**************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/index.js ***!
  \**************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\n// This file was modified by Oracle on June 1, 2021.\r\n// A utility method was introduced to generate an Error instance from a\r\n// binary server packet.\r\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\r\n\r\n// This file was modified by Oracle on September 21, 2021.\r\n// The new AuthNextFactor packet is now available.\r\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\r\n\r\n\r\n\r\nconst process = __webpack_require__(/*! process */ \"(middleware)/../../node_modules/process/browser.js\");\r\n\r\nconst AuthNextFactor = __webpack_require__(/*! ./auth_next_factor */ \"(middleware)/./node_modules/mysql2/lib/packets/auth_next_factor.js\");\r\nconst AuthSwitchRequest = __webpack_require__(/*! ./auth_switch_request */ \"(middleware)/./node_modules/mysql2/lib/packets/auth_switch_request.js\");\r\nconst AuthSwitchRequestMoreData = __webpack_require__(/*! ./auth_switch_request_more_data */ \"(middleware)/./node_modules/mysql2/lib/packets/auth_switch_request_more_data.js\");\r\nconst AuthSwitchResponse = __webpack_require__(/*! ./auth_switch_response */ \"(middleware)/./node_modules/mysql2/lib/packets/auth_switch_response.js\");\r\nconst BinaryRow = __webpack_require__(/*! ./binary_row */ \"(middleware)/./node_modules/mysql2/lib/packets/binary_row.js\");\r\nconst BinlogDump = __webpack_require__(/*! ./binlog_dump */ \"(middleware)/./node_modules/mysql2/lib/packets/binlog_dump.js\");\r\nconst ChangeUser = __webpack_require__(/*! ./change_user */ \"(middleware)/./node_modules/mysql2/lib/packets/change_user.js\");\r\nconst CloseStatement = __webpack_require__(/*! ./close_statement */ \"(middleware)/./node_modules/mysql2/lib/packets/close_statement.js\");\r\nconst ColumnDefinition = __webpack_require__(/*! ./column_definition */ \"(middleware)/./node_modules/mysql2/lib/packets/column_definition.js\");\r\nconst Execute = __webpack_require__(/*! ./execute */ \"(middleware)/./node_modules/mysql2/lib/packets/execute.js\");\r\nconst Handshake = __webpack_require__(/*! ./handshake */ \"(middleware)/./node_modules/mysql2/lib/packets/handshake.js\");\r\nconst HandshakeResponse = __webpack_require__(/*! ./handshake_response */ \"(middleware)/./node_modules/mysql2/lib/packets/handshake_response.js\");\r\nconst PrepareStatement = __webpack_require__(/*! ./prepare_statement */ \"(middleware)/./node_modules/mysql2/lib/packets/prepare_statement.js\");\r\nconst PreparedStatementHeader = __webpack_require__(/*! ./prepared_statement_header */ \"(middleware)/./node_modules/mysql2/lib/packets/prepared_statement_header.js\");\r\nconst Query = __webpack_require__(/*! ./query */ \"(middleware)/./node_modules/mysql2/lib/packets/query.js\");\r\nconst RegisterSlave = __webpack_require__(/*! ./register_slave */ \"(middleware)/./node_modules/mysql2/lib/packets/register_slave.js\");\r\nconst ResultSetHeader = __webpack_require__(/*! ./resultset_header */ \"(middleware)/./node_modules/mysql2/lib/packets/resultset_header.js\");\r\nconst SSLRequest = __webpack_require__(/*! ./ssl_request */ \"(middleware)/./node_modules/mysql2/lib/packets/ssl_request.js\");\r\nconst TextRow = __webpack_require__(/*! ./text_row */ \"(middleware)/./node_modules/mysql2/lib/packets/text_row.js\");\r\n\r\nconst ctorMap = {\r\n  AuthNextFactor,\r\n  AuthSwitchRequest,\r\n  AuthSwitchRequestMoreData,\r\n  AuthSwitchResponse,\r\n  BinaryRow,\r\n  BinlogDump,\r\n  ChangeUser,\r\n  CloseStatement,\r\n  ColumnDefinition,\r\n  Execute,\r\n  Handshake,\r\n  HandshakeResponse,\r\n  PrepareStatement,\r\n  PreparedStatementHeader,\r\n  Query,\r\n  RegisterSlave,\r\n  ResultSetHeader,\r\n  SSLRequest,\r\n  TextRow,\r\n};\r\nObject.entries(ctorMap).forEach(([name, ctor]) => {\r\n  module.exports[name] = ctor;\r\n  // monkey-patch it to include name if debug is on\r\n  if (process.env.NODE_DEBUG) {\r\n    if (ctor.prototype.toPacket) {\r\n      const old = ctor.prototype.toPacket;\r\n      ctor.prototype.toPacket = function () {\r\n        const p = old.call(this);\r\n        p._name = name;\r\n        return p;\r\n      };\r\n    }\r\n  }\r\n});\r\n\r\n// simple packets:\r\nconst Packet = __webpack_require__(/*! ./packet */ \"(middleware)/./node_modules/mysql2/lib/packets/packet.js\");\r\nexports.Packet = Packet;\r\n\r\nclass OK {\r\n  static toPacket(args, encoding) {\r\n    args = args || {};\r\n    const affectedRows = args.affectedRows || 0;\r\n    const insertId = args.insertId || 0;\r\n    const serverStatus = args.serverStatus || 0;\r\n    const warningCount = args.warningCount || 0;\r\n    const message = args.message || '';\r\n\r\n    let length = 9 + Packet.lengthCodedNumberLength(affectedRows);\r\n    length += Packet.lengthCodedNumberLength(insertId);\r\n\r\n    const buffer = Buffer.allocUnsafe(length);\r\n    const packet = new Packet(0, buffer, 0, length);\r\n    packet.offset = 4;\r\n    packet.writeInt8(0);\r\n    packet.writeLengthCodedNumber(affectedRows);\r\n    packet.writeLengthCodedNumber(insertId);\r\n    packet.writeInt16(serverStatus);\r\n    packet.writeInt16(warningCount);\r\n    packet.writeString(message, encoding);\r\n    packet._name = 'OK';\r\n    return packet;\r\n  }\r\n}\r\n\r\nexports.OK = OK;\r\n\r\n// warnings, statusFlags\r\nclass EOF {\r\n  static toPacket(warnings, statusFlags) {\r\n    if (typeof warnings === 'undefined') {\r\n      warnings = 0;\r\n    }\r\n    if (typeof statusFlags === 'undefined') {\r\n      statusFlags = 0;\r\n    }\r\n    const packet = new Packet(0, Buffer.allocUnsafe(9), 0, 9);\r\n    packet.offset = 4;\r\n    packet.writeInt8(0xfe);\r\n    packet.writeInt16(warnings);\r\n    packet.writeInt16(statusFlags);\r\n    packet._name = 'EOF';\r\n    return packet;\r\n  }\r\n}\r\n\r\nexports.EOF = EOF;\r\n\r\nclass Error {\r\n  static toPacket(args, encoding) {\r\n    const length = 13 + Buffer.byteLength(args.message, 'utf8');\r\n    const packet = new Packet(0, Buffer.allocUnsafe(length), 0, length);\r\n    packet.offset = 4;\r\n    packet.writeInt8(0xff);\r\n    packet.writeInt16(args.code);\r\n    // TODO: sql state parameter\r\n    packet.writeString('#_____', encoding);\r\n    packet.writeString(args.message, encoding);\r\n    packet._name = 'Error';\r\n    return packet;\r\n  }\r\n\r\n  static fromPacket(packet) {\r\n    packet.readInt8(); // marker\r\n    const code = packet.readInt16();\r\n    packet.readString(1, 'ascii'); // sql state marker\r\n    // The SQL state of the ERR_Packet which is always 5 bytes long.\r\n    // https://dev.mysql.com/doc/dev/mysql-server/8.0.11/page_protocol_basic_dt_strings.html#sect_protocol_basic_dt_string_fix\r\n    packet.readString(5, 'ascii'); // sql state (ignore for now)\r\n    const message = packet.readNullTerminatedString('utf8');\r\n    const error = new Error();\r\n    error.message = message;\r\n    error.code = code;\r\n    return error;\r\n  }\r\n}\r\n\r\nexports.Error = Error;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/packets/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/packets/packet.js":
/*!***************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/packet.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\n// This file was modified by Oracle on June 1, 2021.\r\n// A comment describing some changes in the strict default SQL mode regarding\r\n// non-standard dates was introduced.\r\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\r\n\r\n\r\n\r\nconst ErrorCodeToName = __webpack_require__(/*! ../constants/errors.js */ \"(middleware)/./node_modules/mysql2/lib/constants/errors.js\");\r\nconst NativeBuffer = (__webpack_require__(/*! buffer */ \"buffer\").Buffer);\r\nconst Long = __webpack_require__(/*! long */ \"(middleware)/./node_modules/long/umd/index.js\");\r\nconst StringParser = __webpack_require__(/*! ../parsers/string.js */ \"(middleware)/./node_modules/mysql2/lib/parsers/string.js\");\r\nconst Types = __webpack_require__(/*! ../constants/types.js */ \"(middleware)/./node_modules/mysql2/lib/constants/types.js\");\r\nconst INVALID_DATE = new Date(NaN);\r\n\r\n// this is nearly duplicate of previous function so generated code is not slower\r\n// due to \"if (dateStrings)\" branching\r\nconst pad = '000000000000';\r\nfunction leftPad(num, value) {\r\n  const s = value.toString();\r\n  // if we don't need to pad\r\n  if (s.length >= num) {\r\n    return s;\r\n  }\r\n  return (pad + s).slice(-num);\r\n}\r\n\r\n// The whole reason parse* function below exist\r\n// is because String creation is relatively expensive (at least with V8), and if we have\r\n// a buffer with \"12345\" content ideally we would like to bypass intermediate\r\n// \"12345\" string creation and directly build 12345 number out of\r\n// <Buffer 31 32 33 34 35> data.\r\n// In my benchmarks the difference is ~25M 8-digit numbers per second vs\r\n// 4.5 M using Number(packet.readLengthCodedString())\r\n// not used when size is close to max precision as series of *10 accumulate error\r\n// and approximate result mihgt be diffreent from (approximate as well) Number(bigNumStringValue))\r\n// In the futire node version if speed difference is smaller parse* functions might be removed\r\n// don't consider them as Packet public API\r\n\r\nconst minus = '-'.charCodeAt(0);\r\nconst plus = '+'.charCodeAt(0);\r\n\r\n// TODO: handle E notation\r\nconst dot = '.'.charCodeAt(0);\r\nconst exponent = 'e'.charCodeAt(0);\r\nconst exponentCapital = 'E'.charCodeAt(0);\r\n\r\nclass Packet {\r\n  constructor(id, buffer, start, end) {\r\n    // hot path, enable checks when testing only\r\n    // if (!Buffer.isBuffer(buffer) || typeof start == 'undefined' || typeof end == 'undefined')\r\n    //  throw new Error('invalid packet');\r\n    this.sequenceId = id;\r\n    this.numPackets = 1;\r\n    this.buffer = buffer;\r\n    this.start = start;\r\n    this.offset = start + 4;\r\n    this.end = end;\r\n  }\r\n\r\n  // ==============================\r\n  // readers\r\n  // ==============================\r\n  reset() {\r\n    this.offset = this.start + 4;\r\n  }\r\n\r\n  length() {\r\n    return this.end - this.start;\r\n  }\r\n\r\n  slice() {\r\n    return this.buffer.slice(this.start, this.end);\r\n  }\r\n\r\n  dump() {\r\n    // eslint-disable-next-line no-console\r\n    console.log(\r\n      [this.buffer.asciiSlice(this.start, this.end)],\r\n      this.buffer.slice(this.start, this.end),\r\n      this.length(),\r\n      this.sequenceId\r\n    );\r\n  }\r\n\r\n  haveMoreData() {\r\n    return this.end > this.offset;\r\n  }\r\n\r\n  skip(num) {\r\n    this.offset += num;\r\n  }\r\n\r\n  readInt8() {\r\n    return this.buffer[this.offset++];\r\n  }\r\n\r\n  readInt16() {\r\n    this.offset += 2;\r\n    return this.buffer.readUInt16LE(this.offset - 2);\r\n  }\r\n\r\n  readInt24() {\r\n    return this.readInt16() + (this.readInt8() << 16);\r\n  }\r\n\r\n  readInt32() {\r\n    this.offset += 4;\r\n    return this.buffer.readUInt32LE(this.offset - 4);\r\n  }\r\n\r\n  readSInt8() {\r\n    return this.buffer.readInt8(this.offset++);\r\n  }\r\n\r\n  readSInt16() {\r\n    this.offset += 2;\r\n    return this.buffer.readInt16LE(this.offset - 2);\r\n  }\r\n\r\n  readSInt32() {\r\n    this.offset += 4;\r\n    return this.buffer.readInt32LE(this.offset - 4);\r\n  }\r\n\r\n  readInt64JSNumber() {\r\n    const word0 = this.readInt32();\r\n    const word1 = this.readInt32();\r\n    const l = new Long(word0, word1, true);\r\n    return l.toNumber();\r\n  }\r\n\r\n  readSInt64JSNumber() {\r\n    const word0 = this.readInt32();\r\n    const word1 = this.readInt32();\r\n    if (!(word1 & 0x80000000)) {\r\n      return word0 + 0x100000000 * word1;\r\n    }\r\n    const l = new Long(word0, word1, false);\r\n    return l.toNumber();\r\n  }\r\n\r\n  readInt64String() {\r\n    const word0 = this.readInt32();\r\n    const word1 = this.readInt32();\r\n    const res = new Long(word0, word1, true);\r\n    return res.toString();\r\n  }\r\n\r\n  readSInt64String() {\r\n    const word0 = this.readInt32();\r\n    const word1 = this.readInt32();\r\n    const res = new Long(word0, word1, false);\r\n    return res.toString();\r\n  }\r\n\r\n  readInt64() {\r\n    const word0 = this.readInt32();\r\n    const word1 = this.readInt32();\r\n    let res = new Long(word0, word1, true);\r\n    const resNumber = res.toNumber();\r\n    const resString = res.toString();\r\n    res = resNumber.toString() === resString ? resNumber : resString;\r\n    return res;\r\n  }\r\n\r\n  readSInt64() {\r\n    const word0 = this.readInt32();\r\n    const word1 = this.readInt32();\r\n    let res = new Long(word0, word1, false);\r\n    const resNumber = res.toNumber();\r\n    const resString = res.toString();\r\n    res = resNumber.toString() === resString ? resNumber : resString;\r\n    return res;\r\n  }\r\n\r\n  isEOF() {\r\n    return this.buffer[this.offset] === 0xfe && this.length() < 13;\r\n  }\r\n\r\n  eofStatusFlags() {\r\n    return this.buffer.readInt16LE(this.offset + 3);\r\n  }\r\n\r\n  eofWarningCount() {\r\n    return this.buffer.readInt16LE(this.offset + 1);\r\n  }\r\n\r\n  readLengthCodedNumber(bigNumberStrings, signed) {\r\n    const byte1 = this.buffer[this.offset++];\r\n    if (byte1 < 251) {\r\n      return byte1;\r\n    }\r\n    return this.readLengthCodedNumberExt(byte1, bigNumberStrings, signed);\r\n  }\r\n\r\n  readLengthCodedNumberSigned(bigNumberStrings) {\r\n    return this.readLengthCodedNumber(bigNumberStrings, true);\r\n  }\r\n\r\n  readLengthCodedNumberExt(tag, bigNumberStrings, signed) {\r\n    let word0, word1;\r\n    let res;\r\n    if (tag === 0xfb) {\r\n      return null;\r\n    }\r\n    if (tag === 0xfc) {\r\n      return this.readInt8() + (this.readInt8() << 8);\r\n    }\r\n    if (tag === 0xfd) {\r\n      return this.readInt8() + (this.readInt8() << 8) + (this.readInt8() << 16);\r\n    }\r\n    if (tag === 0xfe) {\r\n      // TODO: check version\r\n      // Up to MySQL 3.22, 0xfe was followed by a 4-byte integer.\r\n      word0 = this.readInt32();\r\n      word1 = this.readInt32();\r\n      if (word1 === 0) {\r\n        return word0; // don't convert to float if possible\r\n      }\r\n      if (word1 < 2097152) {\r\n        // max exact float point int, 2^52 / 2^32\r\n        return word1 * 0x100000000 + word0;\r\n      }\r\n      res = new Long(word0, word1, !signed); // Long need unsigned\r\n      const resNumber = res.toNumber();\r\n      const resString = res.toString();\r\n      res = resNumber.toString() === resString ? resNumber : resString;\r\n      return bigNumberStrings ? resString : res;\r\n    }\r\n    // eslint-disable-next-line no-console\r\n    console.trace();\r\n    throw new Error(`Should not reach here: ${tag}`);\r\n  }\r\n\r\n  readFloat() {\r\n    const res = this.buffer.readFloatLE(this.offset);\r\n    this.offset += 4;\r\n    return res;\r\n  }\r\n\r\n  readDouble() {\r\n    const res = this.buffer.readDoubleLE(this.offset);\r\n    this.offset += 8;\r\n    return res;\r\n  }\r\n\r\n  readBuffer(len) {\r\n    if (typeof len === 'undefined') {\r\n      len = this.end - this.offset;\r\n    }\r\n    this.offset += len;\r\n    return this.buffer.slice(this.offset - len, this.offset);\r\n  }\r\n\r\n  // DATE, DATETIME and TIMESTAMP\r\n  readDateTime(timezone) {\r\n    if (!timezone || timezone === 'Z' || timezone === 'local') {\r\n      const length = this.readInt8();\r\n      if (length === 0xfb) {\r\n        return null;\r\n      }\r\n      let y = 0;\r\n      let m = 0;\r\n      let d = 0;\r\n      let H = 0;\r\n      let M = 0;\r\n      let S = 0;\r\n      let ms = 0;\r\n      if (length > 3) {\r\n        y = this.readInt16();\r\n        m = this.readInt8();\r\n        d = this.readInt8();\r\n      }\r\n      if (length > 6) {\r\n        H = this.readInt8();\r\n        M = this.readInt8();\r\n        S = this.readInt8();\r\n      }\r\n      if (length > 10) {\r\n        ms = this.readInt32() / 1000;\r\n      }\r\n      // NO_ZERO_DATE mode and NO_ZERO_IN_DATE mode are part of the strict\r\n      // default SQL mode used by MySQL 8.0. This means that non-standard\r\n      // dates like '0000-00-00' become NULL. For older versions and other\r\n      // possible MySQL flavours we still need to account for the\r\n      // non-standard behaviour.\r\n      if (y + m + d + H + M + S + ms === 0) {\r\n        return INVALID_DATE;\r\n      }\r\n      if (timezone === 'Z') {\r\n        return new Date(Date.UTC(y, m - 1, d, H, M, S, ms));\r\n      }\r\n      return new Date(y, m - 1, d, H, M, S, ms);\r\n    }\r\n    let str = this.readDateTimeString(6, 'T', null);\r\n    if (str.length === 10) {\r\n      str += 'T00:00:00';\r\n    }\r\n    return new Date(str + timezone);\r\n  }\r\n\r\n  readDateTimeString(decimals, timeSep, columnType) {\r\n    const length = this.readInt8();\r\n    let y = 0;\r\n    let m = 0;\r\n    let d = 0;\r\n    let H = 0;\r\n    let M = 0;\r\n    let S = 0;\r\n    let ms = 0;\r\n    let str;\r\n    if (length > 3) {\r\n      y = this.readInt16();\r\n      m = this.readInt8();\r\n      d = this.readInt8();\r\n      str = [leftPad(4, y), leftPad(2, m), leftPad(2, d)].join('-');\r\n    }\r\n    if (length > 6) {\r\n      H = this.readInt8();\r\n      M = this.readInt8();\r\n      S = this.readInt8();\r\n      str += `${timeSep || ' '}${[\r\n        leftPad(2, H),\r\n        leftPad(2, M),\r\n        leftPad(2, S),\r\n      ].join(':')}`;\r\n    } else if (columnType === Types.DATETIME) {\r\n      str += ' 00:00:00';\r\n    }\r\n    if (length > 10) {\r\n      ms = this.readInt32();\r\n      str += '.';\r\n      if (decimals) {\r\n        ms = leftPad(6, ms);\r\n        if (ms.length > decimals) {\r\n          ms = ms.substring(0, decimals); // rounding is done at the MySQL side, only 0 are here\r\n        }\r\n      }\r\n      str += ms;\r\n    }\r\n    return str;\r\n  }\r\n\r\n  // TIME - value as a string, Can be negative\r\n  readTimeString(convertTtoMs) {\r\n    const length = this.readInt8();\r\n    if (length === 0) {\r\n      return '00:00:00';\r\n    }\r\n    const sign = this.readInt8() ? -1 : 1; // 'isNegative' flag byte\r\n    let d = 0;\r\n    let H = 0;\r\n    let M = 0;\r\n    let S = 0;\r\n    let ms = 0;\r\n    if (length > 6) {\r\n      d = this.readInt32();\r\n      H = this.readInt8();\r\n      M = this.readInt8();\r\n      S = this.readInt8();\r\n    }\r\n    if (length > 10) {\r\n      ms = this.readInt32();\r\n    }\r\n    if (convertTtoMs) {\r\n      H += d * 24;\r\n      M += H * 60;\r\n      S += M * 60;\r\n      ms += S * 1000;\r\n      ms *= sign;\r\n      return ms;\r\n    }\r\n    // Format follows mySQL TIME format ([-][h]hh:mm:ss[.u[u[u[u[u[u]]]]]])\r\n    // For positive times below 24 hours, this makes it equal to ISO 8601 times\r\n    return (\r\n      (sign === -1 ? '-' : '') +\r\n      [leftPad(2, d * 24 + H), leftPad(2, M), leftPad(2, S)].join(':') +\r\n      (ms ? `.${ms}`.replace(/0+$/, '') : '')\r\n    );\r\n  }\r\n\r\n  readLengthCodedString(encoding) {\r\n    const len = this.readLengthCodedNumber();\r\n    // TODO: check manually first byte here to avoid polymorphic return type?\r\n    if (len === null) {\r\n      return null;\r\n    }\r\n    this.offset += len;\r\n    // TODO: Use characterSetCode to get proper encoding\r\n    // https://github.com/sidorares/node-mysql2/pull/374\r\n    return StringParser.decode(\r\n      this.buffer,\r\n      encoding,\r\n      this.offset - len,\r\n      this.offset\r\n    );\r\n  }\r\n\r\n  readLengthCodedBuffer() {\r\n    const len = this.readLengthCodedNumber();\r\n    if (len === null) {\r\n      return null;\r\n    }\r\n    return this.readBuffer(len);\r\n  }\r\n\r\n  readNullTerminatedString(encoding) {\r\n    const start = this.offset;\r\n    let end = this.offset;\r\n    while (this.buffer[end]) {\r\n      end = end + 1; // TODO: handle OOB check\r\n    }\r\n    this.offset = end + 1;\r\n    return StringParser.decode(this.buffer, encoding, start, end);\r\n  }\r\n\r\n  // TODO reuse?\r\n  readString(len, encoding) {\r\n    if (typeof len === 'string' && typeof encoding === 'undefined') {\r\n      encoding = len;\r\n      len = undefined;\r\n    }\r\n    if (typeof len === 'undefined') {\r\n      len = this.end - this.offset;\r\n    }\r\n    this.offset += len;\r\n    return StringParser.decode(\r\n      this.buffer,\r\n      encoding,\r\n      this.offset - len,\r\n      this.offset\r\n    );\r\n  }\r\n\r\n  parseInt(len, supportBigNumbers) {\r\n    if (len === null) {\r\n      return null;\r\n    }\r\n    if (len >= 14 && !supportBigNumbers) {\r\n      const s = this.buffer.toString('ascii', this.offset, this.offset + len);\r\n      this.offset += len;\r\n      return Number(s);\r\n    }\r\n    let result = 0;\r\n    const start = this.offset;\r\n    const end = this.offset + len;\r\n    let sign = 1;\r\n    if (len === 0) {\r\n      return 0; // TODO: assert? exception?\r\n    }\r\n    if (this.buffer[this.offset] === minus) {\r\n      this.offset++;\r\n      sign = -1;\r\n    }\r\n    // max precise int is 9007199254740992\r\n    let str;\r\n    const numDigits = end - this.offset;\r\n    if (supportBigNumbers) {\r\n      if (numDigits >= 15) {\r\n        str = this.readString(end - this.offset, 'binary');\r\n        result = parseInt(str, 10);\r\n        if (result.toString() === str) {\r\n          return sign * result;\r\n        }\r\n        return sign === -1 ? `-${str}` : str;\r\n      }\r\n      if (numDigits > 16) {\r\n        str = this.readString(end - this.offset);\r\n        return sign === -1 ? `-${str}` : str;\r\n      }\r\n    }\r\n    if (this.buffer[this.offset] === plus) {\r\n      this.offset++; // just ignore\r\n    }\r\n    while (this.offset < end) {\r\n      result *= 10;\r\n      result += this.buffer[this.offset] - 48;\r\n      this.offset++;\r\n    }\r\n    const num = result * sign;\r\n    if (!supportBigNumbers) {\r\n      return num;\r\n    }\r\n    str = this.buffer.toString('ascii', start, end);\r\n    if (num.toString() === str) {\r\n      return num;\r\n    }\r\n    return str;\r\n  }\r\n\r\n  // note that if value of inputNumberAsString is bigger than MAX_SAFE_INTEGER\r\n  // ( or smaller than MIN_SAFE_INTEGER ) the parseIntNoBigCheck result might be\r\n  // different from what you would get from Number(inputNumberAsString)\r\n  // String(parseIntNoBigCheck) <> String(Number(inputNumberAsString)) <> inputNumberAsString\r\n  parseIntNoBigCheck(len) {\r\n    if (len === null) {\r\n      return null;\r\n    }\r\n    let result = 0;\r\n    const end = this.offset + len;\r\n    let sign = 1;\r\n    if (len === 0) {\r\n      return 0; // TODO: assert? exception?\r\n    }\r\n    if (this.buffer[this.offset] === minus) {\r\n      this.offset++;\r\n      sign = -1;\r\n    }\r\n    if (this.buffer[this.offset] === plus) {\r\n      this.offset++; // just ignore\r\n    }\r\n    while (this.offset < end) {\r\n      result *= 10;\r\n      result += this.buffer[this.offset] - 48;\r\n      this.offset++;\r\n    }\r\n    return result * sign;\r\n  }\r\n\r\n  // copy-paste from https://github.com/mysqljs/mysql/blob/master/lib/protocol/Parser.js\r\n  parseGeometryValue() {\r\n    const buffer = this.readLengthCodedBuffer();\r\n    let offset = 4;\r\n    if (buffer === null || !buffer.length) {\r\n      return null;\r\n    }\r\n    function parseGeometry() {\r\n      let x, y, i, j, numPoints, line;\r\n      let result = null;\r\n      const byteOrder = buffer.readUInt8(offset);\r\n      offset += 1;\r\n      const wkbType = byteOrder\r\n        ? buffer.readUInt32LE(offset)\r\n        : buffer.readUInt32BE(offset);\r\n      offset += 4;\r\n      switch (wkbType) {\r\n        case 1: // WKBPoint\r\n          x = byteOrder\r\n            ? buffer.readDoubleLE(offset)\r\n            : buffer.readDoubleBE(offset);\r\n          offset += 8;\r\n          y = byteOrder\r\n            ? buffer.readDoubleLE(offset)\r\n            : buffer.readDoubleBE(offset);\r\n          offset += 8;\r\n          result = { x: x, y: y };\r\n          break;\r\n        case 2: // WKBLineString\r\n          numPoints = byteOrder\r\n            ? buffer.readUInt32LE(offset)\r\n            : buffer.readUInt32BE(offset);\r\n          offset += 4;\r\n          result = [];\r\n          for (i = numPoints; i > 0; i--) {\r\n            x = byteOrder\r\n              ? buffer.readDoubleLE(offset)\r\n              : buffer.readDoubleBE(offset);\r\n            offset += 8;\r\n            y = byteOrder\r\n              ? buffer.readDoubleLE(offset)\r\n              : buffer.readDoubleBE(offset);\r\n            offset += 8;\r\n            result.push({ x: x, y: y });\r\n          }\r\n          break;\r\n        case 3: // WKBPolygon\r\n          // eslint-disable-next-line no-case-declarations\r\n          const numRings = byteOrder\r\n            ? buffer.readUInt32LE(offset)\r\n            : buffer.readUInt32BE(offset);\r\n          offset += 4;\r\n          result = [];\r\n          for (i = numRings; i > 0; i--) {\r\n            numPoints = byteOrder\r\n              ? buffer.readUInt32LE(offset)\r\n              : buffer.readUInt32BE(offset);\r\n            offset += 4;\r\n            line = [];\r\n            for (j = numPoints; j > 0; j--) {\r\n              x = byteOrder\r\n                ? buffer.readDoubleLE(offset)\r\n                : buffer.readDoubleBE(offset);\r\n              offset += 8;\r\n              y = byteOrder\r\n                ? buffer.readDoubleLE(offset)\r\n                : buffer.readDoubleBE(offset);\r\n              offset += 8;\r\n              line.push({ x: x, y: y });\r\n            }\r\n            result.push(line);\r\n          }\r\n          break;\r\n        case 4: // WKBMultiPoint\r\n        case 5: // WKBMultiLineString\r\n        case 6: // WKBMultiPolygon\r\n        case 7: // WKBGeometryCollection\r\n          // eslint-disable-next-line no-case-declarations\r\n          const num = byteOrder\r\n            ? buffer.readUInt32LE(offset)\r\n            : buffer.readUInt32BE(offset);\r\n          offset += 4;\r\n          result = [];\r\n          for (i = num; i > 0; i--) {\r\n            result.push(parseGeometry());\r\n          }\r\n          break;\r\n      }\r\n      return result;\r\n    }\r\n    return parseGeometry();\r\n  }\r\n\r\n  parseVector() {\r\n    const bufLen = this.readLengthCodedNumber();\r\n    const vectorEnd = this.offset + bufLen;\r\n    const result = [];\r\n    while (this.offset < vectorEnd && this.offset < this.end) {\r\n      result.push(this.readFloat());\r\n    }\r\n    return result;\r\n  }\r\n\r\n  parseDate(timezone) {\r\n    const strLen = this.readLengthCodedNumber();\r\n    if (strLen === null) {\r\n      return null;\r\n    }\r\n    if (strLen !== 10) {\r\n      // we expect only YYYY-MM-DD here.\r\n      // if for some reason it's not the case return invalid date\r\n      return new Date(NaN);\r\n    }\r\n    const y = this.parseInt(4);\r\n    this.offset++; // -\r\n    const m = this.parseInt(2);\r\n    this.offset++; // -\r\n    const d = this.parseInt(2);\r\n    if (!timezone || timezone === 'local') {\r\n      return new Date(y, m - 1, d);\r\n    }\r\n    if (timezone === 'Z') {\r\n      return new Date(Date.UTC(y, m - 1, d));\r\n    }\r\n    return new Date(\r\n      `${leftPad(4, y)}-${leftPad(2, m)}-${leftPad(2, d)}T00:00:00${timezone}`\r\n    );\r\n  }\r\n\r\n  parseDateTime(timezone) {\r\n    const str = this.readLengthCodedString('binary');\r\n    if (str === null) {\r\n      return null;\r\n    }\r\n    if (!timezone || timezone === 'local') {\r\n      return new Date(str);\r\n    }\r\n    return new Date(`${str}${timezone}`);\r\n  }\r\n\r\n  parseFloat(len) {\r\n    if (len === null) {\r\n      return null;\r\n    }\r\n    let result = 0;\r\n    const end = this.offset + len;\r\n    let factor = 1;\r\n    let pastDot = false;\r\n    let charCode = 0;\r\n    if (len === 0) {\r\n      return 0; // TODO: assert? exception?\r\n    }\r\n    if (this.buffer[this.offset] === minus) {\r\n      this.offset++;\r\n      factor = -1;\r\n    }\r\n    if (this.buffer[this.offset] === plus) {\r\n      this.offset++; // just ignore\r\n    }\r\n    while (this.offset < end) {\r\n      charCode = this.buffer[this.offset];\r\n      if (charCode === dot) {\r\n        pastDot = true;\r\n        this.offset++;\r\n      } else if (charCode === exponent || charCode === exponentCapital) {\r\n        this.offset++;\r\n        const exponentValue = this.parseInt(end - this.offset);\r\n        return (result / factor) * Math.pow(10, exponentValue);\r\n      } else {\r\n        result *= 10;\r\n        result += this.buffer[this.offset] - 48;\r\n        this.offset++;\r\n        if (pastDot) {\r\n          factor = factor * 10;\r\n        }\r\n      }\r\n    }\r\n    return result / factor;\r\n  }\r\n\r\n  parseLengthCodedIntNoBigCheck() {\r\n    return this.parseIntNoBigCheck(this.readLengthCodedNumber());\r\n  }\r\n\r\n  parseLengthCodedInt(supportBigNumbers) {\r\n    return this.parseInt(this.readLengthCodedNumber(), supportBigNumbers);\r\n  }\r\n\r\n  parseLengthCodedIntString() {\r\n    return this.readLengthCodedString('binary');\r\n  }\r\n\r\n  parseLengthCodedFloat() {\r\n    return this.parseFloat(this.readLengthCodedNumber());\r\n  }\r\n\r\n  peekByte() {\r\n    return this.buffer[this.offset];\r\n  }\r\n\r\n  // OxFE is often used as \"Alt\" flag - not ok, not error.\r\n  // For example, it's first byte of AuthSwitchRequest\r\n  isAlt() {\r\n    return this.peekByte() === 0xfe;\r\n  }\r\n\r\n  isError() {\r\n    return this.peekByte() === 0xff;\r\n  }\r\n\r\n  asError(encoding) {\r\n    this.reset();\r\n    this.readInt8(); // fieldCount\r\n    const errorCode = this.readInt16();\r\n    let sqlState = '';\r\n    if (this.buffer[this.offset] === 0x23) {\r\n      this.skip(1);\r\n      sqlState = this.readBuffer(5).toString();\r\n    }\r\n    const message = this.readString(undefined, encoding);\r\n    const err = new Error(message);\r\n    err.code = ErrorCodeToName[errorCode];\r\n    err.errno = errorCode;\r\n    err.sqlState = sqlState;\r\n    err.sqlMessage = message;\r\n    return err;\r\n  }\r\n\r\n  writeInt32(n) {\r\n    this.buffer.writeUInt32LE(n, this.offset);\r\n    this.offset += 4;\r\n  }\r\n\r\n  writeInt24(n) {\r\n    this.writeInt8(n & 0xff);\r\n    this.writeInt16(n >> 8);\r\n  }\r\n\r\n  writeInt16(n) {\r\n    this.buffer.writeUInt16LE(n, this.offset);\r\n    this.offset += 2;\r\n  }\r\n\r\n  writeInt8(n) {\r\n    this.buffer.writeUInt8(n, this.offset);\r\n    this.offset++;\r\n  }\r\n\r\n  writeDouble(n) {\r\n    this.buffer.writeDoubleLE(n, this.offset);\r\n    this.offset += 8;\r\n  }\r\n\r\n  writeBuffer(b) {\r\n    b.copy(this.buffer, this.offset);\r\n    this.offset += b.length;\r\n  }\r\n\r\n  writeNull() {\r\n    this.buffer[this.offset] = 0xfb;\r\n    this.offset++;\r\n  }\r\n\r\n  // TODO: refactor following three?\r\n  writeNullTerminatedString(s, encoding) {\r\n    const buf = StringParser.encode(s, encoding);\r\n    this.buffer.length && buf.copy(this.buffer, this.offset);\r\n    this.offset += buf.length;\r\n    this.writeInt8(0);\r\n  }\r\n\r\n  writeString(s, encoding) {\r\n    if (s === null) {\r\n      this.writeInt8(0xfb);\r\n      return;\r\n    }\r\n    if (s.length === 0) {\r\n      return;\r\n    }\r\n    // const bytes = Buffer.byteLength(s, 'utf8');\r\n    // this.buffer.write(s, this.offset, bytes, 'utf8');\r\n    // this.offset += bytes;\r\n    const buf = StringParser.encode(s, encoding);\r\n    this.buffer.length && buf.copy(this.buffer, this.offset);\r\n    this.offset += buf.length;\r\n  }\r\n\r\n  writeLengthCodedString(s, encoding) {\r\n    const buf = StringParser.encode(s, encoding);\r\n    this.writeLengthCodedNumber(buf.length);\r\n    this.buffer.length && buf.copy(this.buffer, this.offset);\r\n    this.offset += buf.length;\r\n  }\r\n\r\n  writeLengthCodedBuffer(b) {\r\n    this.writeLengthCodedNumber(b.length);\r\n    b.copy(this.buffer, this.offset);\r\n    this.offset += b.length;\r\n  }\r\n\r\n  writeLengthCodedNumber(n) {\r\n    if (n < 0xfb) {\r\n      return this.writeInt8(n);\r\n    }\r\n    if (n < 0xffff) {\r\n      this.writeInt8(0xfc);\r\n      return this.writeInt16(n);\r\n    }\r\n    if (n < 0xffffff) {\r\n      this.writeInt8(0xfd);\r\n      return this.writeInt24(n);\r\n    }\r\n    if (n === null) {\r\n      return this.writeInt8(0xfb);\r\n    }\r\n    // TODO: check that n is out of int precision\r\n    this.writeInt8(0xfe);\r\n    this.buffer.writeUInt32LE(n, this.offset);\r\n    this.offset += 4;\r\n    this.buffer.writeUInt32LE(n >> 32, this.offset);\r\n    this.offset += 4;\r\n    return this.offset;\r\n  }\r\n\r\n  writeDate(d, timezone) {\r\n    this.buffer.writeUInt8(11, this.offset);\r\n    if (!timezone || timezone === 'local') {\r\n      this.buffer.writeUInt16LE(d.getFullYear(), this.offset + 1);\r\n      this.buffer.writeUInt8(d.getMonth() + 1, this.offset + 3);\r\n      this.buffer.writeUInt8(d.getDate(), this.offset + 4);\r\n      this.buffer.writeUInt8(d.getHours(), this.offset + 5);\r\n      this.buffer.writeUInt8(d.getMinutes(), this.offset + 6);\r\n      this.buffer.writeUInt8(d.getSeconds(), this.offset + 7);\r\n      this.buffer.writeUInt32LE(d.getMilliseconds() * 1000, this.offset + 8);\r\n    } else {\r\n      if (timezone !== 'Z') {\r\n        const offset =\r\n          (timezone[0] === '-' ? -1 : 1) *\r\n          (parseInt(timezone.substring(1, 3), 10) * 60 +\r\n            parseInt(timezone.substring(4), 10));\r\n        if (offset !== 0) {\r\n          d = new Date(d.getTime() + 60000 * offset);\r\n        }\r\n      }\r\n      this.buffer.writeUInt16LE(d.getUTCFullYear(), this.offset + 1);\r\n      this.buffer.writeUInt8(d.getUTCMonth() + 1, this.offset + 3);\r\n      this.buffer.writeUInt8(d.getUTCDate(), this.offset + 4);\r\n      this.buffer.writeUInt8(d.getUTCHours(), this.offset + 5);\r\n      this.buffer.writeUInt8(d.getUTCMinutes(), this.offset + 6);\r\n      this.buffer.writeUInt8(d.getUTCSeconds(), this.offset + 7);\r\n      this.buffer.writeUInt32LE(d.getUTCMilliseconds() * 1000, this.offset + 8);\r\n    }\r\n    this.offset += 12;\r\n  }\r\n\r\n  writeHeader(sequenceId) {\r\n    const offset = this.offset;\r\n    this.offset = 0;\r\n    this.writeInt24(this.buffer.length - 4);\r\n    this.writeInt8(sequenceId);\r\n    this.offset = offset;\r\n  }\r\n\r\n  clone() {\r\n    return new Packet(this.sequenceId, this.buffer, this.start, this.end);\r\n  }\r\n\r\n  type() {\r\n    if (this.isEOF()) {\r\n      return 'EOF';\r\n    }\r\n    if (this.isError()) {\r\n      return 'Error';\r\n    }\r\n    if (this.buffer[this.offset] === 0) {\r\n      return 'maybeOK'; // could be other packet types as well\r\n    }\r\n    return '';\r\n  }\r\n\r\n  static lengthCodedNumberLength(n) {\r\n    if (n < 0xfb) {\r\n      return 1;\r\n    }\r\n    if (n < 0xffff) {\r\n      return 3;\r\n    }\r\n    if (n < 0xffffff) {\r\n      return 5;\r\n    }\r\n    return 9;\r\n  }\r\n\r\n  static lengthCodedStringLength(str, encoding) {\r\n    const buf = StringParser.encode(str, encoding);\r\n    const slen = buf.length;\r\n    return Packet.lengthCodedNumberLength(slen) + slen;\r\n  }\r\n\r\n  static MockBuffer() {\r\n    const noop = function () {};\r\n    const res = Buffer.alloc(0);\r\n    for (const op in NativeBuffer.prototype) {\r\n      if (typeof res[op] === 'function') {\r\n        res[op] = noop;\r\n      }\r\n    }\r\n    return res;\r\n  }\r\n}\r\n\r\nmodule.exports = Packet;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/packets/packet.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/packets/prepare_statement.js":
/*!**************************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/prepare_statement.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\n\r\n\r\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(middleware)/./node_modules/mysql2/lib/packets/packet.js\");\r\nconst CommandCodes = __webpack_require__(/*! ../constants/commands */ \"(middleware)/./node_modules/mysql2/lib/constants/commands.js\");\r\nconst StringParser = __webpack_require__(/*! ../parsers/string.js */ \"(middleware)/./node_modules/mysql2/lib/parsers/string.js\");\r\nconst CharsetToEncoding = __webpack_require__(/*! ../constants/charset_encodings.js */ \"(middleware)/./node_modules/mysql2/lib/constants/charset_encodings.js\");\r\n\r\nclass PrepareStatement {\r\n  constructor(sql, charsetNumber) {\r\n    this.query = sql;\r\n    this.charsetNumber = charsetNumber;\r\n    this.encoding = CharsetToEncoding[charsetNumber];\r\n  }\r\n\r\n  toPacket() {\r\n    const buf = StringParser.encode(this.query, this.encoding);\r\n    const length = 5 + buf.length;\r\n    const buffer = Buffer.allocUnsafe(length);\r\n    const packet = new Packet(0, buffer, 0, length);\r\n    packet.offset = 4;\r\n    packet.writeInt8(CommandCodes.STMT_PREPARE);\r\n    packet.writeBuffer(buf);\r\n    return packet;\r\n  }\r\n}\r\n\r\nmodule.exports = PrepareStatement;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcGFja2V0cy9wcmVwYXJlX3N0YXRlbWVudC5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7QUFDYjtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxtRkFBbUI7QUFDMUMscUJBQXFCLG1CQUFPLENBQUMsMkZBQXVCO0FBQ3BELHFCQUFxQixtQkFBTyxDQUFDLHNGQUFzQjtBQUNuRCwwQkFBMEIsbUJBQU8sQ0FBQyxnSEFBbUM7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixNQUFNO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL3ByZXBhcmVfc3RhdGVtZW50LmpzP2VkMGQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxuY29uc3QgUGFja2V0ID0gcmVxdWlyZSgnLi4vcGFja2V0cy9wYWNrZXQnKTtcclxuY29uc3QgQ29tbWFuZENvZGVzID0gcmVxdWlyZSgnLi4vY29uc3RhbnRzL2NvbW1hbmRzJyk7XHJcbmNvbnN0IFN0cmluZ1BhcnNlciA9IHJlcXVpcmUoJy4uL3BhcnNlcnMvc3RyaW5nLmpzJyk7XHJcbmNvbnN0IENoYXJzZXRUb0VuY29kaW5nID0gcmVxdWlyZSgnLi4vY29uc3RhbnRzL2NoYXJzZXRfZW5jb2RpbmdzLmpzJyk7XHJcblxyXG5jbGFzcyBQcmVwYXJlU3RhdGVtZW50IHtcclxuICBjb25zdHJ1Y3RvcihzcWwsIGNoYXJzZXROdW1iZXIpIHtcclxuICAgIHRoaXMucXVlcnkgPSBzcWw7XHJcbiAgICB0aGlzLmNoYXJzZXROdW1iZXIgPSBjaGFyc2V0TnVtYmVyO1xyXG4gICAgdGhpcy5lbmNvZGluZyA9IENoYXJzZXRUb0VuY29kaW5nW2NoYXJzZXROdW1iZXJdO1xyXG4gIH1cclxuXHJcbiAgdG9QYWNrZXQoKSB7XHJcbiAgICBjb25zdCBidWYgPSBTdHJpbmdQYXJzZXIuZW5jb2RlKHRoaXMucXVlcnksIHRoaXMuZW5jb2RpbmcpO1xyXG4gICAgY29uc3QgbGVuZ3RoID0gNSArIGJ1Zi5sZW5ndGg7XHJcbiAgICBjb25zdCBidWZmZXIgPSBCdWZmZXIuYWxsb2NVbnNhZmUobGVuZ3RoKTtcclxuICAgIGNvbnN0IHBhY2tldCA9IG5ldyBQYWNrZXQoMCwgYnVmZmVyLCAwLCBsZW5ndGgpO1xyXG4gICAgcGFja2V0Lm9mZnNldCA9IDQ7XHJcbiAgICBwYWNrZXQud3JpdGVJbnQ4KENvbW1hbmRDb2Rlcy5TVE1UX1BSRVBBUkUpO1xyXG4gICAgcGFja2V0LndyaXRlQnVmZmVyKGJ1Zik7XHJcbiAgICByZXR1cm4gcGFja2V0O1xyXG4gIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBQcmVwYXJlU3RhdGVtZW50O1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/packets/prepare_statement.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/packets/prepared_statement_header.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/prepared_statement_header.js ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";
eval("\r\n\r\nclass PreparedStatementHeader {\r\n  constructor(packet) {\r\n    packet.skip(1); // should be 0\r\n    this.id = packet.readInt32();\r\n    this.fieldCount = packet.readInt16();\r\n    this.parameterCount = packet.readInt16();\r\n    packet.skip(1); // should be 0\r\n    this.warningCount = packet.readInt16();\r\n  }\r\n}\r\n\r\n// TODO: toPacket\r\n\r\nmodule.exports = PreparedStatementHeader;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcGFja2V0cy9wcmVwYXJlZF9zdGF0ZW1lbnRfaGVhZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL3ByZXBhcmVkX3N0YXRlbWVudF9oZWFkZXIuanM/YWEwOCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG5jbGFzcyBQcmVwYXJlZFN0YXRlbWVudEhlYWRlciB7XHJcbiAgY29uc3RydWN0b3IocGFja2V0KSB7XHJcbiAgICBwYWNrZXQuc2tpcCgxKTsgLy8gc2hvdWxkIGJlIDBcclxuICAgIHRoaXMuaWQgPSBwYWNrZXQucmVhZEludDMyKCk7XHJcbiAgICB0aGlzLmZpZWxkQ291bnQgPSBwYWNrZXQucmVhZEludDE2KCk7XHJcbiAgICB0aGlzLnBhcmFtZXRlckNvdW50ID0gcGFja2V0LnJlYWRJbnQxNigpO1xyXG4gICAgcGFja2V0LnNraXAoMSk7IC8vIHNob3VsZCBiZSAwXHJcbiAgICB0aGlzLndhcm5pbmdDb3VudCA9IHBhY2tldC5yZWFkSW50MTYoKTtcclxuICB9XHJcbn1cclxuXHJcbi8vIFRPRE86IHRvUGFja2V0XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IFByZXBhcmVkU3RhdGVtZW50SGVhZGVyO1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/packets/prepared_statement_header.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/packets/query.js":
/*!**************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/query.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\n\r\n\r\nconst Packet = __webpack_require__(/*! ../packets/packet.js */ \"(middleware)/./node_modules/mysql2/lib/packets/packet.js\");\r\nconst CommandCode = __webpack_require__(/*! ../constants/commands.js */ \"(middleware)/./node_modules/mysql2/lib/constants/commands.js\");\r\nconst StringParser = __webpack_require__(/*! ../parsers/string.js */ \"(middleware)/./node_modules/mysql2/lib/parsers/string.js\");\r\nconst CharsetToEncoding = __webpack_require__(/*! ../constants/charset_encodings.js */ \"(middleware)/./node_modules/mysql2/lib/constants/charset_encodings.js\");\r\n\r\nclass Query {\r\n  constructor(sql, charsetNumber) {\r\n    this.query = sql;\r\n    this.charsetNumber = charsetNumber;\r\n    this.encoding = CharsetToEncoding[charsetNumber];\r\n  }\r\n\r\n  toPacket() {\r\n    const buf = StringParser.encode(this.query, this.encoding);\r\n    const length = 5 + buf.length;\r\n    const buffer = Buffer.allocUnsafe(length);\r\n    const packet = new Packet(0, buffer, 0, length);\r\n    packet.offset = 4;\r\n    packet.writeInt8(CommandCode.QUERY);\r\n    packet.writeBuffer(buf);\r\n    return packet;\r\n  }\r\n}\r\n\r\nmodule.exports = Query;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcGFja2V0cy9xdWVyeS5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7QUFDYjtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxzRkFBc0I7QUFDN0Msb0JBQW9CLG1CQUFPLENBQUMsOEZBQTBCO0FBQ3RELHFCQUFxQixtQkFBTyxDQUFDLHNGQUFzQjtBQUNuRCwwQkFBMEIsbUJBQU8sQ0FBQyxnSEFBbUM7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixNQUFNO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL3F1ZXJ5LmpzPzdiMzQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxuY29uc3QgUGFja2V0ID0gcmVxdWlyZSgnLi4vcGFja2V0cy9wYWNrZXQuanMnKTtcclxuY29uc3QgQ29tbWFuZENvZGUgPSByZXF1aXJlKCcuLi9jb25zdGFudHMvY29tbWFuZHMuanMnKTtcclxuY29uc3QgU3RyaW5nUGFyc2VyID0gcmVxdWlyZSgnLi4vcGFyc2Vycy9zdHJpbmcuanMnKTtcclxuY29uc3QgQ2hhcnNldFRvRW5jb2RpbmcgPSByZXF1aXJlKCcuLi9jb25zdGFudHMvY2hhcnNldF9lbmNvZGluZ3MuanMnKTtcclxuXHJcbmNsYXNzIFF1ZXJ5IHtcclxuICBjb25zdHJ1Y3RvcihzcWwsIGNoYXJzZXROdW1iZXIpIHtcclxuICAgIHRoaXMucXVlcnkgPSBzcWw7XHJcbiAgICB0aGlzLmNoYXJzZXROdW1iZXIgPSBjaGFyc2V0TnVtYmVyO1xyXG4gICAgdGhpcy5lbmNvZGluZyA9IENoYXJzZXRUb0VuY29kaW5nW2NoYXJzZXROdW1iZXJdO1xyXG4gIH1cclxuXHJcbiAgdG9QYWNrZXQoKSB7XHJcbiAgICBjb25zdCBidWYgPSBTdHJpbmdQYXJzZXIuZW5jb2RlKHRoaXMucXVlcnksIHRoaXMuZW5jb2RpbmcpO1xyXG4gICAgY29uc3QgbGVuZ3RoID0gNSArIGJ1Zi5sZW5ndGg7XHJcbiAgICBjb25zdCBidWZmZXIgPSBCdWZmZXIuYWxsb2NVbnNhZmUobGVuZ3RoKTtcclxuICAgIGNvbnN0IHBhY2tldCA9IG5ldyBQYWNrZXQoMCwgYnVmZmVyLCAwLCBsZW5ndGgpO1xyXG4gICAgcGFja2V0Lm9mZnNldCA9IDQ7XHJcbiAgICBwYWNrZXQud3JpdGVJbnQ4KENvbW1hbmRDb2RlLlFVRVJZKTtcclxuICAgIHBhY2tldC53cml0ZUJ1ZmZlcihidWYpO1xyXG4gICAgcmV0dXJuIHBhY2tldDtcclxuICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gUXVlcnk7XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/packets/query.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/packets/register_slave.js":
/*!***********************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/register_slave.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\n\r\n\r\n// http://dev.mysql.com/doc/internals/en/com-register-slave.html\r\n// note that documentation is incorrect, for example command code is actually 0x15 but documented as 0x14\r\n\r\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(middleware)/./node_modules/mysql2/lib/packets/packet.js\");\r\nconst CommandCodes = __webpack_require__(/*! ../constants/commands */ \"(middleware)/./node_modules/mysql2/lib/constants/commands.js\");\r\n\r\nclass RegisterSlave {\r\n  constructor(opts) {\r\n    this.serverId = opts.serverId || 0;\r\n    this.slaveHostname = opts.slaveHostname || '';\r\n    this.slaveUser = opts.slaveUser || '';\r\n    this.slavePassword = opts.slavePassword || '';\r\n    this.slavePort = opts.slavePort || 0;\r\n    this.replicationRank = opts.replicationRank || 0;\r\n    this.masterId = opts.masterId || 0;\r\n  }\r\n\r\n  toPacket() {\r\n    const length =\r\n      15 + // TODO: should be ascii?\r\n      Buffer.byteLength(this.slaveHostname, 'utf8') +\r\n      Buffer.byteLength(this.slaveUser, 'utf8') +\r\n      Buffer.byteLength(this.slavePassword, 'utf8') +\r\n      3 +\r\n      4;\r\n    const buffer = Buffer.allocUnsafe(length);\r\n    const packet = new Packet(0, buffer, 0, length);\r\n    packet.offset = 4;\r\n    packet.writeInt8(CommandCodes.REGISTER_SLAVE);\r\n    packet.writeInt32(this.serverId);\r\n    packet.writeInt8(Buffer.byteLength(this.slaveHostname, 'utf8'));\r\n    packet.writeString(this.slaveHostname);\r\n    packet.writeInt8(Buffer.byteLength(this.slaveUser, 'utf8'));\r\n    packet.writeString(this.slaveUser);\r\n    packet.writeInt8(Buffer.byteLength(this.slavePassword, 'utf8'));\r\n    packet.writeString(this.slavePassword);\r\n    packet.writeInt16(this.slavePort);\r\n    packet.writeInt32(this.replicationRank);\r\n    packet.writeInt32(this.masterId);\r\n    return packet;\r\n  }\r\n}\r\n\r\nmodule.exports = RegisterSlave;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcGFja2V0cy9yZWdpc3Rlcl9zbGF2ZS5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxtRkFBbUI7QUFDMUMscUJBQXFCLG1CQUFPLENBQUMsMkZBQXVCO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sTUFBTTtBQUNaLE1BQU0sTUFBTTtBQUNaLE1BQU0sTUFBTTtBQUNaO0FBQ0E7QUFDQSxtQkFBbUIsTUFBTTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixNQUFNO0FBQzNCO0FBQ0EscUJBQXFCLE1BQU07QUFDM0I7QUFDQSxxQkFBcUIsTUFBTTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcGFja2V0cy9yZWdpc3Rlcl9zbGF2ZS5qcz83ZTc4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuXHJcbi8vIGh0dHA6Ly9kZXYubXlzcWwuY29tL2RvYy9pbnRlcm5hbHMvZW4vY29tLXJlZ2lzdGVyLXNsYXZlLmh0bWxcclxuLy8gbm90ZSB0aGF0IGRvY3VtZW50YXRpb24gaXMgaW5jb3JyZWN0LCBmb3IgZXhhbXBsZSBjb21tYW5kIGNvZGUgaXMgYWN0dWFsbHkgMHgxNSBidXQgZG9jdW1lbnRlZCBhcyAweDE0XHJcblxyXG5jb25zdCBQYWNrZXQgPSByZXF1aXJlKCcuLi9wYWNrZXRzL3BhY2tldCcpO1xyXG5jb25zdCBDb21tYW5kQ29kZXMgPSByZXF1aXJlKCcuLi9jb25zdGFudHMvY29tbWFuZHMnKTtcclxuXHJcbmNsYXNzIFJlZ2lzdGVyU2xhdmUge1xyXG4gIGNvbnN0cnVjdG9yKG9wdHMpIHtcclxuICAgIHRoaXMuc2VydmVySWQgPSBvcHRzLnNlcnZlcklkIHx8IDA7XHJcbiAgICB0aGlzLnNsYXZlSG9zdG5hbWUgPSBvcHRzLnNsYXZlSG9zdG5hbWUgfHwgJyc7XHJcbiAgICB0aGlzLnNsYXZlVXNlciA9IG9wdHMuc2xhdmVVc2VyIHx8ICcnO1xyXG4gICAgdGhpcy5zbGF2ZVBhc3N3b3JkID0gb3B0cy5zbGF2ZVBhc3N3b3JkIHx8ICcnO1xyXG4gICAgdGhpcy5zbGF2ZVBvcnQgPSBvcHRzLnNsYXZlUG9ydCB8fCAwO1xyXG4gICAgdGhpcy5yZXBsaWNhdGlvblJhbmsgPSBvcHRzLnJlcGxpY2F0aW9uUmFuayB8fCAwO1xyXG4gICAgdGhpcy5tYXN0ZXJJZCA9IG9wdHMubWFzdGVySWQgfHwgMDtcclxuICB9XHJcblxyXG4gIHRvUGFja2V0KCkge1xyXG4gICAgY29uc3QgbGVuZ3RoID1cclxuICAgICAgMTUgKyAvLyBUT0RPOiBzaG91bGQgYmUgYXNjaWk/XHJcbiAgICAgIEJ1ZmZlci5ieXRlTGVuZ3RoKHRoaXMuc2xhdmVIb3N0bmFtZSwgJ3V0ZjgnKSArXHJcbiAgICAgIEJ1ZmZlci5ieXRlTGVuZ3RoKHRoaXMuc2xhdmVVc2VyLCAndXRmOCcpICtcclxuICAgICAgQnVmZmVyLmJ5dGVMZW5ndGgodGhpcy5zbGF2ZVBhc3N3b3JkLCAndXRmOCcpICtcclxuICAgICAgMyArXHJcbiAgICAgIDQ7XHJcbiAgICBjb25zdCBidWZmZXIgPSBCdWZmZXIuYWxsb2NVbnNhZmUobGVuZ3RoKTtcclxuICAgIGNvbnN0IHBhY2tldCA9IG5ldyBQYWNrZXQoMCwgYnVmZmVyLCAwLCBsZW5ndGgpO1xyXG4gICAgcGFja2V0Lm9mZnNldCA9IDQ7XHJcbiAgICBwYWNrZXQud3JpdGVJbnQ4KENvbW1hbmRDb2Rlcy5SRUdJU1RFUl9TTEFWRSk7XHJcbiAgICBwYWNrZXQud3JpdGVJbnQzMih0aGlzLnNlcnZlcklkKTtcclxuICAgIHBhY2tldC53cml0ZUludDgoQnVmZmVyLmJ5dGVMZW5ndGgodGhpcy5zbGF2ZUhvc3RuYW1lLCAndXRmOCcpKTtcclxuICAgIHBhY2tldC53cml0ZVN0cmluZyh0aGlzLnNsYXZlSG9zdG5hbWUpO1xyXG4gICAgcGFja2V0LndyaXRlSW50OChCdWZmZXIuYnl0ZUxlbmd0aCh0aGlzLnNsYXZlVXNlciwgJ3V0ZjgnKSk7XHJcbiAgICBwYWNrZXQud3JpdGVTdHJpbmcodGhpcy5zbGF2ZVVzZXIpO1xyXG4gICAgcGFja2V0LndyaXRlSW50OChCdWZmZXIuYnl0ZUxlbmd0aCh0aGlzLnNsYXZlUGFzc3dvcmQsICd1dGY4JykpO1xyXG4gICAgcGFja2V0LndyaXRlU3RyaW5nKHRoaXMuc2xhdmVQYXNzd29yZCk7XHJcbiAgICBwYWNrZXQud3JpdGVJbnQxNih0aGlzLnNsYXZlUG9ydCk7XHJcbiAgICBwYWNrZXQud3JpdGVJbnQzMih0aGlzLnJlcGxpY2F0aW9uUmFuayk7XHJcbiAgICBwYWNrZXQud3JpdGVJbnQzMih0aGlzLm1hc3RlcklkKTtcclxuICAgIHJldHVybiBwYWNrZXQ7XHJcbiAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IFJlZ2lzdGVyU2xhdmU7XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/packets/register_slave.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/packets/resultset_header.js":
/*!*************************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/resultset_header.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\n\r\n\r\n// TODO: rename to OK packet\r\n// https://dev.mysql.com/doc/internals/en/packet-OK_Packet.html\r\n\r\nconst Packet = __webpack_require__(/*! ./packet.js */ \"(middleware)/./node_modules/mysql2/lib/packets/packet.js\");\r\nconst ClientConstants = __webpack_require__(/*! ../constants/client.js */ \"(middleware)/./node_modules/mysql2/lib/constants/client.js\");\r\nconst ServerSatusFlags = __webpack_require__(/*! ../constants/server_status.js */ \"(middleware)/./node_modules/mysql2/lib/constants/server_status.js\");\r\n\r\nconst EncodingToCharset = __webpack_require__(/*! ../constants/encoding_charset.js */ \"(middleware)/./node_modules/mysql2/lib/constants/encoding_charset.js\");\r\nconst sessionInfoTypes = __webpack_require__(/*! ../constants/session_track.js */ \"(middleware)/./node_modules/mysql2/lib/constants/session_track.js\");\r\n\r\nclass ResultSetHeader {\r\n  constructor(packet, connection) {\r\n    const bigNumberStrings = connection.config.bigNumberStrings;\r\n    const encoding = connection.serverEncoding;\r\n    const flags = connection._handshakePacket.capabilityFlags;\r\n    const isSet = function (flag) {\r\n      return flags & ClientConstants[flag];\r\n    };\r\n    if (packet.buffer[packet.offset] !== 0) {\r\n      this.fieldCount = packet.readLengthCodedNumber();\r\n      if (this.fieldCount === null) {\r\n        this.infileName = packet.readString(undefined, encoding);\r\n      }\r\n      return;\r\n    }\r\n    this.fieldCount = packet.readInt8(); // skip OK byte\r\n    this.affectedRows = packet.readLengthCodedNumber(bigNumberStrings);\r\n    this.insertId = packet.readLengthCodedNumberSigned(bigNumberStrings);\r\n    this.info = '';\r\n    if (isSet('PROTOCOL_41')) {\r\n      this.serverStatus = packet.readInt16();\r\n      this.warningStatus = packet.readInt16();\r\n    } else if (isSet('TRANSACTIONS')) {\r\n      this.serverStatus = packet.readInt16();\r\n    }\r\n    let stateChanges = null;\r\n    if (isSet('SESSION_TRACK') && packet.offset < packet.end) {\r\n      this.info = packet.readLengthCodedString(encoding);\r\n\r\n      if (this.serverStatus && ServerSatusFlags.SERVER_SESSION_STATE_CHANGED) {\r\n        // session change info record - see\r\n        // https://dev.mysql.com/doc/internals/en/packet-OK_Packet.html#cs-sect-packet-ok-sessioninfo\r\n        let len =\r\n          packet.offset < packet.end ? packet.readLengthCodedNumber() : 0;\r\n        const end = packet.offset + len;\r\n        let type, key, stateEnd;\r\n        if (len > 0) {\r\n          stateChanges = {\r\n            systemVariables: {},\r\n            schema: null,\r\n            gtids: [],\r\n            trackStateChange: null,\r\n          };\r\n        }\r\n        while (packet.offset < end) {\r\n          type = packet.readInt8();\r\n          len = packet.readLengthCodedNumber();\r\n          stateEnd = packet.offset + len;\r\n          if (type === sessionInfoTypes.SYSTEM_VARIABLES) {\r\n            key = packet.readLengthCodedString(encoding);\r\n            const val = packet.readLengthCodedString(encoding);\r\n            stateChanges.systemVariables[key] = val;\r\n            if (key === 'character_set_client') {\r\n              const charsetNumber = EncodingToCharset[val];\r\n              // TODO - better api for driver users to handle unknown encodings?\r\n              // maybe custom coverter in the config?\r\n              // For now just ignore character_set_client command if there is\r\n              // no known mapping from reported encoding to a charset code\r\n              if (typeof charsetNumber !== 'undefined') {\r\n                connection.config.charsetNumber = charsetNumber;\r\n              }\r\n            }\r\n          } else if (type === sessionInfoTypes.SCHEMA) {\r\n            key = packet.readLengthCodedString(encoding);\r\n            stateChanges.schema = key;\r\n          } else if (type === sessionInfoTypes.STATE_CHANGE) {\r\n            stateChanges.trackStateChange =\r\n              packet.readLengthCodedString(encoding);\r\n          } else if (type === sessionInfoTypes.STATE_GTIDS) {\r\n            // TODO: find if the first length coded string means anything. Usually comes as empty\r\n            // eslint-disable-next-line no-unused-vars\r\n            const _unknownString = packet.readLengthCodedString(encoding);\r\n            const gtid = packet.readLengthCodedString(encoding);\r\n            stateChanges.gtids = gtid.split(',');\r\n          } else {\r\n            // unsupported session track type. For now just ignore\r\n          }\r\n          packet.offset = stateEnd;\r\n        }\r\n      }\r\n    } else {\r\n      this.info = packet.readString(undefined, encoding);\r\n    }\r\n    if (stateChanges) {\r\n      this.stateChanges = stateChanges;\r\n    }\r\n    const m = this.info.match(/\\schanged:\\s*(\\d+)/i);\r\n    if (m !== null) {\r\n      this.changedRows = parseInt(m[1], 10);\r\n    } else {\r\n      this.changedRows = 0;\r\n    }\r\n  }\r\n\r\n  // TODO: should be consistent instance member, but it's just easier here to have just function\r\n  static toPacket(fieldCount, insertId) {\r\n    let length = 4 + Packet.lengthCodedNumberLength(fieldCount);\r\n    if (typeof insertId !== 'undefined') {\r\n      length += Packet.lengthCodedNumberLength(insertId);\r\n    }\r\n    const buffer = Buffer.allocUnsafe(length);\r\n    const packet = new Packet(0, buffer, 0, length);\r\n    packet.offset = 4;\r\n    packet.writeLengthCodedNumber(fieldCount);\r\n    if (typeof insertId !== 'undefined') {\r\n      packet.writeLengthCodedNumber(insertId);\r\n    }\r\n    return packet;\r\n  }\r\n}\r\n\r\nmodule.exports = ResultSetHeader;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/packets/resultset_header.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/packets/ssl_request.js":
/*!********************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/ssl_request.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\n\r\n\r\nconst ClientConstants = __webpack_require__(/*! ../constants/client */ \"(middleware)/./node_modules/mysql2/lib/constants/client.js\");\r\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(middleware)/./node_modules/mysql2/lib/packets/packet.js\");\r\n\r\nclass SSLRequest {\r\n  constructor(flags, charset) {\r\n    this.clientFlags = flags | ClientConstants.SSL;\r\n    this.charset = charset;\r\n  }\r\n\r\n  toPacket() {\r\n    const length = 36;\r\n    const buffer = Buffer.allocUnsafe(length);\r\n    const packet = new Packet(0, buffer, 0, length);\r\n    buffer.fill(0);\r\n    packet.offset = 4;\r\n    packet.writeInt32(this.clientFlags);\r\n    packet.writeInt32(0); // max packet size. todo: move to config\r\n    packet.writeInt8(this.charset);\r\n    return packet;\r\n  }\r\n}\r\n\r\nmodule.exports = SSLRequest;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcGFja2V0cy9zc2xfcmVxdWVzdC5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7QUFDYjtBQUNBLHdCQUF3QixtQkFBTyxDQUFDLHVGQUFxQjtBQUNyRCxlQUFlLG1CQUFPLENBQUMsbUZBQW1CO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixNQUFNO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL3NzbF9yZXF1ZXN0LmpzPzhlNDYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxuY29uc3QgQ2xpZW50Q29uc3RhbnRzID0gcmVxdWlyZSgnLi4vY29uc3RhbnRzL2NsaWVudCcpO1xyXG5jb25zdCBQYWNrZXQgPSByZXF1aXJlKCcuLi9wYWNrZXRzL3BhY2tldCcpO1xyXG5cclxuY2xhc3MgU1NMUmVxdWVzdCB7XHJcbiAgY29uc3RydWN0b3IoZmxhZ3MsIGNoYXJzZXQpIHtcclxuICAgIHRoaXMuY2xpZW50RmxhZ3MgPSBmbGFncyB8IENsaWVudENvbnN0YW50cy5TU0w7XHJcbiAgICB0aGlzLmNoYXJzZXQgPSBjaGFyc2V0O1xyXG4gIH1cclxuXHJcbiAgdG9QYWNrZXQoKSB7XHJcbiAgICBjb25zdCBsZW5ndGggPSAzNjtcclxuICAgIGNvbnN0IGJ1ZmZlciA9IEJ1ZmZlci5hbGxvY1Vuc2FmZShsZW5ndGgpO1xyXG4gICAgY29uc3QgcGFja2V0ID0gbmV3IFBhY2tldCgwLCBidWZmZXIsIDAsIGxlbmd0aCk7XHJcbiAgICBidWZmZXIuZmlsbCgwKTtcclxuICAgIHBhY2tldC5vZmZzZXQgPSA0O1xyXG4gICAgcGFja2V0LndyaXRlSW50MzIodGhpcy5jbGllbnRGbGFncyk7XHJcbiAgICBwYWNrZXQud3JpdGVJbnQzMigwKTsgLy8gbWF4IHBhY2tldCBzaXplLiB0b2RvOiBtb3ZlIHRvIGNvbmZpZ1xyXG4gICAgcGFja2V0LndyaXRlSW50OCh0aGlzLmNoYXJzZXQpO1xyXG4gICAgcmV0dXJuIHBhY2tldDtcclxuICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gU1NMUmVxdWVzdDtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/packets/ssl_request.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/packets/text_row.js":
/*!*****************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/text_row.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\n\r\n\r\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(middleware)/./node_modules/mysql2/lib/packets/packet.js\");\r\n\r\nclass TextRow {\r\n  constructor(columns) {\r\n    this.columns = columns || [];\r\n  }\r\n\r\n  static fromPacket(packet) {\r\n    // packet.reset(); // set offset to starting point?\r\n    const columns = [];\r\n    while (packet.haveMoreData()) {\r\n      columns.push(packet.readLengthCodedString());\r\n    }\r\n    return new TextRow(columns);\r\n  }\r\n\r\n  static toPacket(columns, encoding) {\r\n    const sequenceId = 0; // TODO remove, this is calculated now in connecton\r\n    let length = 0;\r\n    columns.forEach((val) => {\r\n      if (val === null || typeof val === 'undefined') {\r\n        ++length;\r\n        return;\r\n      }\r\n      length += Packet.lengthCodedStringLength(val.toString(10), encoding);\r\n    });\r\n    const buffer = Buffer.allocUnsafe(length + 4);\r\n    const packet = new Packet(sequenceId, buffer, 0, length + 4);\r\n    packet.offset = 4;\r\n    columns.forEach((val) => {\r\n      if (val === null) {\r\n        packet.writeNull();\r\n        return;\r\n      }\r\n      if (typeof val === 'undefined') {\r\n        packet.writeInt8(0);\r\n        return;\r\n      }\r\n      packet.writeLengthCodedString(val.toString(10), encoding);\r\n    });\r\n    return packet;\r\n  }\r\n}\r\n\r\nmodule.exports = TextRow;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcGFja2V0cy90ZXh0X3Jvdy5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7QUFDYjtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxtRkFBbUI7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxtQkFBbUIsTUFBTTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL3RleHRfcm93LmpzPzljODQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxuY29uc3QgUGFja2V0ID0gcmVxdWlyZSgnLi4vcGFja2V0cy9wYWNrZXQnKTtcclxuXHJcbmNsYXNzIFRleHRSb3cge1xyXG4gIGNvbnN0cnVjdG9yKGNvbHVtbnMpIHtcclxuICAgIHRoaXMuY29sdW1ucyA9IGNvbHVtbnMgfHwgW107XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgZnJvbVBhY2tldChwYWNrZXQpIHtcclxuICAgIC8vIHBhY2tldC5yZXNldCgpOyAvLyBzZXQgb2Zmc2V0IHRvIHN0YXJ0aW5nIHBvaW50P1xyXG4gICAgY29uc3QgY29sdW1ucyA9IFtdO1xyXG4gICAgd2hpbGUgKHBhY2tldC5oYXZlTW9yZURhdGEoKSkge1xyXG4gICAgICBjb2x1bW5zLnB1c2gocGFja2V0LnJlYWRMZW5ndGhDb2RlZFN0cmluZygpKTtcclxuICAgIH1cclxuICAgIHJldHVybiBuZXcgVGV4dFJvdyhjb2x1bW5zKTtcclxuICB9XHJcblxyXG4gIHN0YXRpYyB0b1BhY2tldChjb2x1bW5zLCBlbmNvZGluZykge1xyXG4gICAgY29uc3Qgc2VxdWVuY2VJZCA9IDA7IC8vIFRPRE8gcmVtb3ZlLCB0aGlzIGlzIGNhbGN1bGF0ZWQgbm93IGluIGNvbm5lY3RvblxyXG4gICAgbGV0IGxlbmd0aCA9IDA7XHJcbiAgICBjb2x1bW5zLmZvckVhY2goKHZhbCkgPT4ge1xyXG4gICAgICBpZiAodmFsID09PSBudWxsIHx8IHR5cGVvZiB2YWwgPT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgICAgKytsZW5ndGg7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICAgIGxlbmd0aCArPSBQYWNrZXQubGVuZ3RoQ29kZWRTdHJpbmdMZW5ndGgodmFsLnRvU3RyaW5nKDEwKSwgZW5jb2RpbmcpO1xyXG4gICAgfSk7XHJcbiAgICBjb25zdCBidWZmZXIgPSBCdWZmZXIuYWxsb2NVbnNhZmUobGVuZ3RoICsgNCk7XHJcbiAgICBjb25zdCBwYWNrZXQgPSBuZXcgUGFja2V0KHNlcXVlbmNlSWQsIGJ1ZmZlciwgMCwgbGVuZ3RoICsgNCk7XHJcbiAgICBwYWNrZXQub2Zmc2V0ID0gNDtcclxuICAgIGNvbHVtbnMuZm9yRWFjaCgodmFsKSA9PiB7XHJcbiAgICAgIGlmICh2YWwgPT09IG51bGwpIHtcclxuICAgICAgICBwYWNrZXQud3JpdGVOdWxsKCk7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICAgIGlmICh0eXBlb2YgdmFsID09PSAndW5kZWZpbmVkJykge1xyXG4gICAgICAgIHBhY2tldC53cml0ZUludDgoMCk7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICAgIHBhY2tldC53cml0ZUxlbmd0aENvZGVkU3RyaW5nKHZhbC50b1N0cmluZygxMCksIGVuY29kaW5nKTtcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIHBhY2tldDtcclxuICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gVGV4dFJvdztcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/packets/text_row.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/parsers/binary_parser.js":
/*!**********************************************************!*\
  !*** ./node_modules/mysql2/lib/parsers/binary_parser.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\nconst FieldFlags = __webpack_require__(/*! ../constants/field_flags.js */ \"(middleware)/./node_modules/mysql2/lib/constants/field_flags.js\");\r\nconst Charsets = __webpack_require__(/*! ../constants/charsets.js */ \"(middleware)/./node_modules/mysql2/lib/constants/charsets.js\");\r\nconst Types = __webpack_require__(/*! ../constants/types.js */ \"(middleware)/./node_modules/mysql2/lib/constants/types.js\");\r\nconst helpers = __webpack_require__(/*! ../helpers */ \"(middleware)/./node_modules/mysql2/lib/helpers.js\");\r\nconst genFunc = __webpack_require__(/*! generate-function */ \"(middleware)/./node_modules/generate-function/index.js\");\r\nconst parserCache = __webpack_require__(/*! ./parser_cache.js */ \"(middleware)/./node_modules/mysql2/lib/parsers/parser_cache.js\");\r\nconst typeNames = [];\r\nfor (const t in Types) {\r\n  typeNames[Types[t]] = t;\r\n}\r\n\r\nfunction readCodeFor(field, config, options, fieldNum) {\r\n  const supportBigNumbers = Boolean(\r\n    options.supportBigNumbers || config.supportBigNumbers\r\n  );\r\n  const bigNumberStrings = Boolean(\r\n    options.bigNumberStrings || config.bigNumberStrings\r\n  );\r\n  const timezone = options.timezone || config.timezone;\r\n  const dateStrings = options.dateStrings || config.dateStrings;\r\n  const unsigned = field.flags & FieldFlags.UNSIGNED;\r\n  switch (field.columnType) {\r\n    case Types.TINY:\r\n      return unsigned ? 'packet.readInt8();' : 'packet.readSInt8();';\r\n    case Types.SHORT:\r\n      return unsigned ? 'packet.readInt16();' : 'packet.readSInt16();';\r\n    case Types.LONG:\r\n    case Types.INT24: // in binary protocol int24 is encoded in 4 bytes int32\r\n      return unsigned ? 'packet.readInt32();' : 'packet.readSInt32();';\r\n    case Types.YEAR:\r\n      return 'packet.readInt16()';\r\n    case Types.FLOAT:\r\n      return 'packet.readFloat();';\r\n    case Types.DOUBLE:\r\n      return 'packet.readDouble();';\r\n    case Types.NULL:\r\n      return 'null;';\r\n    case Types.DATE:\r\n    case Types.DATETIME:\r\n    case Types.TIMESTAMP:\r\n    case Types.NEWDATE:\r\n      if (helpers.typeMatch(field.columnType, dateStrings, Types)) {\r\n        return `packet.readDateTimeString(${parseInt(field.decimals, 10)}, ${null}, ${field.columnType});`;\r\n      }\r\n      return `packet.readDateTime(${helpers.srcEscape(timezone)});`;\r\n    case Types.TIME:\r\n      return 'packet.readTimeString()';\r\n    case Types.DECIMAL:\r\n    case Types.NEWDECIMAL:\r\n      if (config.decimalNumbers) {\r\n        return 'packet.parseLengthCodedFloat();';\r\n      }\r\n      return 'packet.readLengthCodedString(\"ascii\");';\r\n    case Types.GEOMETRY:\r\n      return 'packet.parseGeometryValue();';\r\n    case Types.VECTOR:\r\n      return 'packet.parseVector()';\r\n    case Types.JSON:\r\n      // Since for JSON columns mysql always returns charset 63 (BINARY),\r\n      // we have to handle it according to JSON specs and use \"utf8\",\r\n      // see https://github.com/sidorares/node-mysql2/issues/409\r\n      return config.jsonStrings\r\n        ? 'packet.readLengthCodedString(\"utf8\")'\r\n        : 'JSON.parse(packet.readLengthCodedString(\"utf8\"));';\r\n    case Types.LONGLONG:\r\n      if (!supportBigNumbers) {\r\n        return unsigned\r\n          ? 'packet.readInt64JSNumber();'\r\n          : 'packet.readSInt64JSNumber();';\r\n      }\r\n      if (bigNumberStrings) {\r\n        return unsigned\r\n          ? 'packet.readInt64String();'\r\n          : 'packet.readSInt64String();';\r\n      }\r\n      return unsigned ? 'packet.readInt64();' : 'packet.readSInt64();';\r\n\r\n    default:\r\n      if (field.characterSet === Charsets.BINARY) {\r\n        return 'packet.readLengthCodedBuffer();';\r\n      }\r\n      return `packet.readLengthCodedString(fields[${fieldNum}].encoding)`;\r\n  }\r\n}\r\n\r\nfunction compile(fields, options, config) {\r\n  const parserFn = genFunc();\r\n  const nullBitmapLength = Math.floor((fields.length + 7 + 2) / 8);\r\n\r\n  function wrap(field, packet) {\r\n    return {\r\n      type: typeNames[field.columnType],\r\n      length: field.columnLength,\r\n      db: field.schema,\r\n      table: field.table,\r\n      name: field.name,\r\n      string: function (encoding = field.encoding) {\r\n        if (field.columnType === Types.JSON && encoding === field.encoding) {\r\n          // Since for JSON columns mysql always returns charset 63 (BINARY),\r\n          // we have to handle it according to JSON specs and use \"utf8\",\r\n          // see https://github.com/sidorares/node-mysql2/issues/1661\r\n          console.warn(\r\n            `typeCast: JSON column \"${field.name}\" is interpreted as BINARY by default, recommended to manually set utf8 encoding: \\`field.string(\"utf8\")\\``\r\n          );\r\n        }\r\n\r\n        if (\r\n          [Types.DATETIME, Types.NEWDATE, Types.TIMESTAMP, Types.DATE].includes(\r\n            field.columnType\r\n          )\r\n        ) {\r\n          return packet.readDateTimeString(parseInt(field.decimals, 10));\r\n        }\r\n\r\n        if (field.columnType === Types.TINY) {\r\n          const unsigned = field.flags & FieldFlags.UNSIGNED;\r\n\r\n          return String(unsigned ? packet.readInt8() : packet.readSInt8());\r\n        }\r\n\r\n        if (field.columnType === Types.TIME) {\r\n          return packet.readTimeString();\r\n        }\r\n\r\n        return packet.readLengthCodedString(encoding);\r\n      },\r\n      buffer: function () {\r\n        return packet.readLengthCodedBuffer();\r\n      },\r\n      geometry: function () {\r\n        return packet.parseGeometryValue();\r\n      },\r\n    };\r\n  }\r\n\r\n  parserFn('(function(){');\r\n  parserFn('return class BinaryRow {');\r\n  parserFn('constructor() {');\r\n  parserFn('}');\r\n\r\n  parserFn('next(packet, fields, options) {');\r\n  if (options.rowsAsArray) {\r\n    parserFn(`const result = new Array(${fields.length});`);\r\n  } else {\r\n    parserFn('const result = {};');\r\n  }\r\n\r\n  // Global typeCast\r\n  if (\r\n    typeof config.typeCast === 'function' &&\r\n    typeof options.typeCast !== 'function'\r\n  ) {\r\n    options.typeCast = config.typeCast;\r\n  }\r\n\r\n  parserFn('packet.readInt8();'); // status byte\r\n  for (let i = 0; i < nullBitmapLength; ++i) {\r\n    parserFn(`const nullBitmaskByte${i} = packet.readInt8();`);\r\n  }\r\n\r\n  let lvalue = '';\r\n  let currentFieldNullBit = 4;\r\n  let nullByteIndex = 0;\r\n  let fieldName = '';\r\n  let tableName = '';\r\n\r\n  for (let i = 0; i < fields.length; i++) {\r\n    fieldName = helpers.fieldEscape(fields[i].name);\r\n    // parserFn(`// ${fieldName}: ${typeNames[fields[i].columnType]}`);\r\n\r\n    if (typeof options.nestTables === 'string') {\r\n      lvalue = `result[${helpers.fieldEscape(fields[i].table + options.nestTables + fields[i].name)}]`;\r\n    } else if (options.nestTables === true) {\r\n      tableName = helpers.fieldEscape(fields[i].table);\r\n\r\n      parserFn(`if (!result[${tableName}]) result[${tableName}] = {};`);\r\n      lvalue = `result[${tableName}][${fieldName}]`;\r\n    } else if (options.rowsAsArray) {\r\n      lvalue = `result[${i.toString(10)}]`;\r\n    } else {\r\n      lvalue = `result[${fieldName}]`;\r\n    }\r\n\r\n    parserFn(`if (nullBitmaskByte${nullByteIndex} & ${currentFieldNullBit}) `);\r\n    parserFn(`${lvalue} = null;`);\r\n    parserFn('else {');\r\n\r\n    if (options.typeCast === false) {\r\n      parserFn(`${lvalue} = packet.readLengthCodedBuffer();`);\r\n    } else {\r\n      const fieldWrapperVar = `fieldWrapper${i}`;\r\n      parserFn(`const ${fieldWrapperVar} = wrap(fields[${i}], packet);`);\r\n      const readCode = readCodeFor(fields[i], config, options, i);\r\n\r\n      if (typeof options.typeCast === 'function') {\r\n        parserFn(\r\n          `${lvalue} = options.typeCast(${fieldWrapperVar}, function() { return ${readCode} });`\r\n        );\r\n      } else {\r\n        parserFn(`${lvalue} = ${readCode};`);\r\n      }\r\n    }\r\n    parserFn('}');\r\n\r\n    currentFieldNullBit *= 2;\r\n    if (currentFieldNullBit === 0x100) {\r\n      currentFieldNullBit = 1;\r\n      nullByteIndex++;\r\n    }\r\n  }\r\n\r\n  parserFn('return result;');\r\n  parserFn('}');\r\n  parserFn('};')('})()');\r\n\r\n  if (config.debug) {\r\n    helpers.printDebugWithCode(\r\n      'Compiled binary protocol row parser',\r\n      parserFn.toString()\r\n    );\r\n  }\r\n  return parserFn.toFunction({ wrap });\r\n}\r\n\r\nfunction getBinaryParser(fields, options, config) {\r\n  return parserCache.getParser('binary', fields, options, config, compile);\r\n}\r\n\r\nmodule.exports = getBinaryParser;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/parsers/binary_parser.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/parsers/parser_cache.js":
/*!*********************************************************!*\
  !*** ./node_modules/mysql2/lib/parsers/parser_cache.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\nconst { createLRU } = __webpack_require__(/*! lru.min */ \"(middleware)/./node_modules/lru.min/lib/index.js\");\r\n\r\nconst parserCache = createLRU({\r\n  max: 15000,\r\n});\r\n\r\nfunction keyFromFields(type, fields, options, config) {\r\n  const res = [\r\n    type,\r\n    typeof options.nestTables,\r\n    options.nestTables,\r\n    Boolean(options.rowsAsArray),\r\n    Boolean(options.supportBigNumbers || config.supportBigNumbers),\r\n    Boolean(options.bigNumberStrings || config.bigNumberStrings),\r\n    typeof options.typeCast,\r\n    options.timezone || config.timezone,\r\n    Boolean(options.decimalNumbers),\r\n    options.dateStrings,\r\n  ];\r\n\r\n  for (let i = 0; i < fields.length; ++i) {\r\n    const field = fields[i];\r\n\r\n    res.push([\r\n      field.name,\r\n      field.columnType,\r\n      field.length,\r\n      field.schema,\r\n      field.table,\r\n      field.flags,\r\n      field.characterSet,\r\n    ]);\r\n  }\r\n\r\n  return JSON.stringify(res, null, 0);\r\n}\r\n\r\nfunction getParser(type, fields, options, config, compiler) {\r\n  const key = keyFromFields(type, fields, options, config);\r\n  let parser = parserCache.get(key);\r\n\r\n  if (parser) {\r\n    return parser;\r\n  }\r\n\r\n  parser = compiler(fields, options, config);\r\n  parserCache.set(key, parser);\r\n  return parser;\r\n}\r\n\r\nfunction setMaxCache(max) {\r\n  parserCache.resize(max);\r\n}\r\n\r\nfunction clearCache() {\r\n  parserCache.clear();\r\n}\r\n\r\nmodule.exports = {\r\n  getParser: getParser,\r\n  setMaxCache: setMaxCache,\r\n  clearCache: clearCache,\r\n  _keyFromFields: keyFromFields,\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcGFyc2Vycy9wYXJzZXJfY2FjaGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLFFBQVEsWUFBWSxFQUFFLG1CQUFPLENBQUMsaUVBQVM7QUFDdkM7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixtQkFBbUI7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcGFyc2Vycy9wYXJzZXJfY2FjaGUuanM/Y2RmMCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG5jb25zdCB7IGNyZWF0ZUxSVSB9ID0gcmVxdWlyZSgnbHJ1Lm1pbicpO1xyXG5cclxuY29uc3QgcGFyc2VyQ2FjaGUgPSBjcmVhdGVMUlUoe1xyXG4gIG1heDogMTUwMDAsXHJcbn0pO1xyXG5cclxuZnVuY3Rpb24ga2V5RnJvbUZpZWxkcyh0eXBlLCBmaWVsZHMsIG9wdGlvbnMsIGNvbmZpZykge1xyXG4gIGNvbnN0IHJlcyA9IFtcclxuICAgIHR5cGUsXHJcbiAgICB0eXBlb2Ygb3B0aW9ucy5uZXN0VGFibGVzLFxyXG4gICAgb3B0aW9ucy5uZXN0VGFibGVzLFxyXG4gICAgQm9vbGVhbihvcHRpb25zLnJvd3NBc0FycmF5KSxcclxuICAgIEJvb2xlYW4ob3B0aW9ucy5zdXBwb3J0QmlnTnVtYmVycyB8fCBjb25maWcuc3VwcG9ydEJpZ051bWJlcnMpLFxyXG4gICAgQm9vbGVhbihvcHRpb25zLmJpZ051bWJlclN0cmluZ3MgfHwgY29uZmlnLmJpZ051bWJlclN0cmluZ3MpLFxyXG4gICAgdHlwZW9mIG9wdGlvbnMudHlwZUNhc3QsXHJcbiAgICBvcHRpb25zLnRpbWV6b25lIHx8IGNvbmZpZy50aW1lem9uZSxcclxuICAgIEJvb2xlYW4ob3B0aW9ucy5kZWNpbWFsTnVtYmVycyksXHJcbiAgICBvcHRpb25zLmRhdGVTdHJpbmdzLFxyXG4gIF07XHJcblxyXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgZmllbGRzLmxlbmd0aDsgKytpKSB7XHJcbiAgICBjb25zdCBmaWVsZCA9IGZpZWxkc1tpXTtcclxuXHJcbiAgICByZXMucHVzaChbXHJcbiAgICAgIGZpZWxkLm5hbWUsXHJcbiAgICAgIGZpZWxkLmNvbHVtblR5cGUsXHJcbiAgICAgIGZpZWxkLmxlbmd0aCxcclxuICAgICAgZmllbGQuc2NoZW1hLFxyXG4gICAgICBmaWVsZC50YWJsZSxcclxuICAgICAgZmllbGQuZmxhZ3MsXHJcbiAgICAgIGZpZWxkLmNoYXJhY3RlclNldCxcclxuICAgIF0pO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHJlcywgbnVsbCwgMCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGdldFBhcnNlcih0eXBlLCBmaWVsZHMsIG9wdGlvbnMsIGNvbmZpZywgY29tcGlsZXIpIHtcclxuICBjb25zdCBrZXkgPSBrZXlGcm9tRmllbGRzKHR5cGUsIGZpZWxkcywgb3B0aW9ucywgY29uZmlnKTtcclxuICBsZXQgcGFyc2VyID0gcGFyc2VyQ2FjaGUuZ2V0KGtleSk7XHJcblxyXG4gIGlmIChwYXJzZXIpIHtcclxuICAgIHJldHVybiBwYXJzZXI7XHJcbiAgfVxyXG5cclxuICBwYXJzZXIgPSBjb21waWxlcihmaWVsZHMsIG9wdGlvbnMsIGNvbmZpZyk7XHJcbiAgcGFyc2VyQ2FjaGUuc2V0KGtleSwgcGFyc2VyKTtcclxuICByZXR1cm4gcGFyc2VyO1xyXG59XHJcblxyXG5mdW5jdGlvbiBzZXRNYXhDYWNoZShtYXgpIHtcclxuICBwYXJzZXJDYWNoZS5yZXNpemUobWF4KTtcclxufVxyXG5cclxuZnVuY3Rpb24gY2xlYXJDYWNoZSgpIHtcclxuICBwYXJzZXJDYWNoZS5jbGVhcigpO1xyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuICBnZXRQYXJzZXI6IGdldFBhcnNlcixcclxuICBzZXRNYXhDYWNoZTogc2V0TWF4Q2FjaGUsXHJcbiAgY2xlYXJDYWNoZTogY2xlYXJDYWNoZSxcclxuICBfa2V5RnJvbUZpZWxkczoga2V5RnJvbUZpZWxkcyxcclxufTtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/parsers/parser_cache.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/parsers/static_binary_parser.js":
/*!*****************************************************************!*\
  !*** ./node_modules/mysql2/lib/parsers/static_binary_parser.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\nconst FieldFlags = __webpack_require__(/*! ../constants/field_flags.js */ \"(middleware)/./node_modules/mysql2/lib/constants/field_flags.js\");\r\nconst Charsets = __webpack_require__(/*! ../constants/charsets.js */ \"(middleware)/./node_modules/mysql2/lib/constants/charsets.js\");\r\nconst Types = __webpack_require__(/*! ../constants/types.js */ \"(middleware)/./node_modules/mysql2/lib/constants/types.js\");\r\nconst helpers = __webpack_require__(/*! ../helpers */ \"(middleware)/./node_modules/mysql2/lib/helpers.js\");\r\n\r\nconst typeNames = [];\r\nfor (const t in Types) {\r\n  typeNames[Types[t]] = t;\r\n}\r\n\r\nfunction getBinaryParser(fields, _options, config) {\r\n  function readCode(field, config, options, fieldNum, packet) {\r\n    const supportBigNumbers = Boolean(\r\n      options.supportBigNumbers || config.supportBigNumbers\r\n    );\r\n    const bigNumberStrings = Boolean(\r\n      options.bigNumberStrings || config.bigNumberStrings\r\n    );\r\n    const timezone = options.timezone || config.timezone;\r\n    const dateStrings = options.dateStrings || config.dateStrings;\r\n    const unsigned = field.flags & FieldFlags.UNSIGNED;\r\n\r\n    switch (field.columnType) {\r\n      case Types.TINY:\r\n        return unsigned ? packet.readInt8() : packet.readSInt8();\r\n      case Types.SHORT:\r\n        return unsigned ? packet.readInt16() : packet.readSInt16();\r\n      case Types.LONG:\r\n      case Types.INT24: // in binary protocol int24 is encoded in 4 bytes int32\r\n        return unsigned ? packet.readInt32() : packet.readSInt32();\r\n      case Types.YEAR:\r\n        return packet.readInt16();\r\n      case Types.FLOAT:\r\n        return packet.readFloat();\r\n      case Types.DOUBLE:\r\n        return packet.readDouble();\r\n      case Types.NULL:\r\n        return null;\r\n      case Types.DATE:\r\n      case Types.DATETIME:\r\n      case Types.TIMESTAMP:\r\n      case Types.NEWDATE:\r\n        return helpers.typeMatch(field.columnType, dateStrings, Types)\r\n          ? packet.readDateTimeString(\r\n              parseInt(field.decimals, 10),\r\n              null,\r\n              field.columnType\r\n            )\r\n          : packet.readDateTime(timezone);\r\n      case Types.TIME:\r\n        return packet.readTimeString();\r\n      case Types.DECIMAL:\r\n      case Types.NEWDECIMAL:\r\n        return config.decimalNumbers\r\n          ? packet.parseLengthCodedFloat()\r\n          : packet.readLengthCodedString('ascii');\r\n      case Types.GEOMETRY:\r\n        return packet.parseGeometryValue();\r\n      case Types.VECTOR:\r\n        return packet.parseVector();\r\n      case Types.JSON:\r\n        // Since for JSON columns mysql always returns charset 63 (BINARY),\r\n        // we have to handle it according to JSON specs and use \"utf8\",\r\n        // see https://github.com/sidorares/node-mysql2/issues/409\r\n        return config.jsonStrings\r\n          ? packet.readLengthCodedString('utf8')\r\n          : JSON.parse(packet.readLengthCodedString('utf8'));\r\n      case Types.LONGLONG:\r\n        if (!supportBigNumbers)\r\n          return unsigned\r\n            ? packet.readInt64JSNumber()\r\n            : packet.readSInt64JSNumber();\r\n        return bigNumberStrings\r\n          ? unsigned\r\n            ? packet.readInt64String()\r\n            : packet.readSInt64String()\r\n          : unsigned\r\n            ? packet.readInt64()\r\n            : packet.readSInt64();\r\n      default:\r\n        return field.characterSet === Charsets.BINARY\r\n          ? packet.readLengthCodedBuffer()\r\n          : packet.readLengthCodedString(fields[fieldNum].encoding);\r\n    }\r\n  }\r\n\r\n  return class BinaryRow {\r\n    constructor() {}\r\n\r\n    next(packet, fields, options) {\r\n      packet.readInt8(); // status byte\r\n\r\n      const nullBitmapLength = Math.floor((fields.length + 7 + 2) / 8);\r\n      const nullBitmaskBytes = new Array(nullBitmapLength);\r\n\r\n      for (let i = 0; i < nullBitmapLength; i++) {\r\n        nullBitmaskBytes[i] = packet.readInt8();\r\n      }\r\n\r\n      const result = options.rowsAsArray ? new Array(fields.length) : {};\r\n      let currentFieldNullBit = 4;\r\n      let nullByteIndex = 0;\r\n\r\n      for (let i = 0; i < fields.length; i++) {\r\n        const field = fields[i];\r\n        const typeCast =\r\n          options.typeCast !== undefined ? options.typeCast : config.typeCast;\r\n\r\n        let value;\r\n        if (nullBitmaskBytes[nullByteIndex] & currentFieldNullBit) {\r\n          value = null;\r\n        } else if (options.typeCast === false) {\r\n          value = packet.readLengthCodedBuffer();\r\n        } else {\r\n          const next = () => readCode(field, config, options, i, packet);\r\n          value =\r\n            typeof typeCast === 'function'\r\n              ? typeCast(\r\n                  {\r\n                    type: typeNames[field.columnType],\r\n                    length: field.columnLength,\r\n                    db: field.schema,\r\n                    table: field.table,\r\n                    name: field.name,\r\n                    string: function (encoding = field.encoding) {\r\n                      if (\r\n                        field.columnType === Types.JSON &&\r\n                        encoding === field.encoding\r\n                      ) {\r\n                        // Since for JSON columns mysql always returns charset 63 (BINARY),\r\n                        // we have to handle it according to JSON specs and use \"utf8\",\r\n                        // see https://github.com/sidorares/node-mysql2/issues/1661\r\n                        console.warn(\r\n                          `typeCast: JSON column \"${field.name}\" is interpreted as BINARY by default, recommended to manually set utf8 encoding: \\`field.string(\"utf8\")\\``\r\n                        );\r\n                      }\r\n\r\n                      if (\r\n                        [\r\n                          Types.DATETIME,\r\n                          Types.NEWDATE,\r\n                          Types.TIMESTAMP,\r\n                          Types.DATE,\r\n                        ].includes(field.columnType)\r\n                      ) {\r\n                        return packet.readDateTimeString(\r\n                          parseInt(field.decimals, 10)\r\n                        );\r\n                      }\r\n\r\n                      if (field.columnType === Types.TINY) {\r\n                        const unsigned = field.flags & FieldFlags.UNSIGNED;\r\n\r\n                        return String(\r\n                          unsigned ? packet.readInt8() : packet.readSInt8()\r\n                        );\r\n                      }\r\n\r\n                      if (field.columnType === Types.TIME) {\r\n                        return packet.readTimeString();\r\n                      }\r\n\r\n                      return packet.readLengthCodedString(encoding);\r\n                    },\r\n                    buffer: function () {\r\n                      return packet.readLengthCodedBuffer();\r\n                    },\r\n                    geometry: function () {\r\n                      return packet.parseGeometryValue();\r\n                    },\r\n                  },\r\n                  next\r\n                )\r\n              : next();\r\n        }\r\n\r\n        if (options.rowsAsArray) {\r\n          result[i] = value;\r\n        } else if (typeof options.nestTables === 'string') {\r\n          const key = helpers.fieldEscape(\r\n            field.table + options.nestTables + field.name,\r\n            false\r\n          );\r\n          result[key] = value;\r\n        } else if (options.nestTables === true) {\r\n          const tableName = helpers.fieldEscape(field.table, false);\r\n          if (!result[tableName]) {\r\n            result[tableName] = {};\r\n          }\r\n          const fieldName = helpers.fieldEscape(field.name, false);\r\n          result[tableName][fieldName] = value;\r\n        } else {\r\n          const key = helpers.fieldEscape(field.name, false);\r\n          result[key] = value;\r\n        }\r\n\r\n        currentFieldNullBit *= 2;\r\n        if (currentFieldNullBit === 0x100) {\r\n          currentFieldNullBit = 1;\r\n          nullByteIndex++;\r\n        }\r\n      }\r\n\r\n      return result;\r\n    }\r\n  };\r\n}\r\n\r\nmodule.exports = getBinaryParser;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/parsers/static_binary_parser.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/parsers/static_text_parser.js":
/*!***************************************************************!*\
  !*** ./node_modules/mysql2/lib/parsers/static_text_parser.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\nconst Types = __webpack_require__(/*! ../constants/types.js */ \"(middleware)/./node_modules/mysql2/lib/constants/types.js\");\r\nconst Charsets = __webpack_require__(/*! ../constants/charsets.js */ \"(middleware)/./node_modules/mysql2/lib/constants/charsets.js\");\r\nconst helpers = __webpack_require__(/*! ../helpers */ \"(middleware)/./node_modules/mysql2/lib/helpers.js\");\r\n\r\nconst typeNames = [];\r\nfor (const t in Types) {\r\n  typeNames[Types[t]] = t;\r\n}\r\n\r\nfunction readField({ packet, type, charset, encoding, config, options }) {\r\n  const supportBigNumbers = Boolean(\r\n    options.supportBigNumbers || config.supportBigNumbers\r\n  );\r\n  const bigNumberStrings = Boolean(\r\n    options.bigNumberStrings || config.bigNumberStrings\r\n  );\r\n  const timezone = options.timezone || config.timezone;\r\n  const dateStrings = options.dateStrings || config.dateStrings;\r\n\r\n  switch (type) {\r\n    case Types.TINY:\r\n    case Types.SHORT:\r\n    case Types.LONG:\r\n    case Types.INT24:\r\n    case Types.YEAR:\r\n      return packet.parseLengthCodedIntNoBigCheck();\r\n    case Types.LONGLONG:\r\n      if (supportBigNumbers && bigNumberStrings) {\r\n        return packet.parseLengthCodedIntString();\r\n      }\r\n      return packet.parseLengthCodedInt(supportBigNumbers);\r\n    case Types.FLOAT:\r\n    case Types.DOUBLE:\r\n      return packet.parseLengthCodedFloat();\r\n    case Types.NULL:\r\n    case Types.DECIMAL:\r\n    case Types.NEWDECIMAL:\r\n      if (config.decimalNumbers) {\r\n        return packet.parseLengthCodedFloat();\r\n      }\r\n      return packet.readLengthCodedString('ascii');\r\n    case Types.DATE:\r\n      if (helpers.typeMatch(type, dateStrings, Types)) {\r\n        return packet.readLengthCodedString('ascii');\r\n      }\r\n      return packet.parseDate(timezone);\r\n    case Types.DATETIME:\r\n    case Types.TIMESTAMP:\r\n      if (helpers.typeMatch(type, dateStrings, Types)) {\r\n        return packet.readLengthCodedString('ascii');\r\n      }\r\n      return packet.parseDateTime(timezone);\r\n    case Types.TIME:\r\n      return packet.readLengthCodedString('ascii');\r\n    case Types.GEOMETRY:\r\n      return packet.parseGeometryValue();\r\n    case Types.VECTOR:\r\n      return packet.parseVector();\r\n    case Types.JSON:\r\n      // Since for JSON columns mysql always returns charset 63 (BINARY),\r\n      // we have to handle it according to JSON specs and use \"utf8\",\r\n      // see https://github.com/sidorares/node-mysql2/issues/409\r\n      return config.jsonStrings\r\n        ? packet.readLengthCodedString('utf8')\r\n        : JSON.parse(packet.readLengthCodedString('utf8'));\r\n    default:\r\n      if (charset === Charsets.BINARY) {\r\n        return packet.readLengthCodedBuffer();\r\n      }\r\n      return packet.readLengthCodedString(encoding);\r\n  }\r\n}\r\n\r\nfunction createTypecastField(field, packet) {\r\n  return {\r\n    type: typeNames[field.columnType],\r\n    length: field.columnLength,\r\n    db: field.schema,\r\n    table: field.table,\r\n    name: field.name,\r\n    string: function (encoding = field.encoding) {\r\n      if (field.columnType === Types.JSON && encoding === field.encoding) {\r\n        // Since for JSON columns mysql always returns charset 63 (BINARY),\r\n        // we have to handle it according to JSON specs and use \"utf8\",\r\n        // see https://github.com/sidorares/node-mysql2/issues/1661\r\n        console.warn(\r\n          `typeCast: JSON column \"${field.name}\" is interpreted as BINARY by default, recommended to manually set utf8 encoding: \\`field.string(\"utf8\")\\``\r\n        );\r\n      }\r\n      return packet.readLengthCodedString(encoding);\r\n    },\r\n    buffer: function () {\r\n      return packet.readLengthCodedBuffer();\r\n    },\r\n    geometry: function () {\r\n      return packet.parseGeometryValue();\r\n    },\r\n  };\r\n}\r\n\r\nfunction getTextParser(_fields, _options, config) {\r\n  return {\r\n    next(packet, fields, options) {\r\n      const result = options.rowsAsArray ? [] : {};\r\n      for (let i = 0; i < fields.length; i++) {\r\n        const field = fields[i];\r\n        const typeCast = options.typeCast ? options.typeCast : config.typeCast;\r\n        const next = () =>\r\n          readField({\r\n            packet,\r\n            type: field.columnType,\r\n            encoding: field.encoding,\r\n            charset: field.characterSet,\r\n            config,\r\n            options,\r\n          });\r\n\r\n        let value;\r\n\r\n        if (options.typeCast === false) {\r\n          value = packet.readLengthCodedBuffer();\r\n        } else if (typeof typeCast === 'function') {\r\n          value = typeCast(createTypecastField(field, packet), next);\r\n        } else {\r\n          value = next();\r\n        }\r\n\r\n        if (options.rowsAsArray) {\r\n          result.push(value);\r\n        } else if (typeof options.nestTables === 'string') {\r\n          result[\r\n            `${helpers.fieldEscape(field.table, false)}${options.nestTables}${helpers.fieldEscape(field.name, false)}`\r\n          ] = value;\r\n        } else if (options.nestTables) {\r\n          const tableName = helpers.fieldEscape(field.table, false);\r\n          if (!result[tableName]) {\r\n            result[tableName] = {};\r\n          }\r\n          result[tableName][helpers.fieldEscape(field.name, false)] = value;\r\n        } else {\r\n          result[helpers.fieldEscape(field.name, false)] = value;\r\n        }\r\n      }\r\n\r\n      return result;\r\n    },\r\n  };\r\n}\r\n\r\nmodule.exports = getTextParser;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/parsers/static_text_parser.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/parsers/string.js":
/*!***************************************************!*\
  !*** ./node_modules/mysql2/lib/parsers/string.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\n\r\n\r\nconst Iconv = __webpack_require__(/*! iconv-lite */ \"(middleware)/./node_modules/iconv-lite/lib/index.js\");\r\nconst { createLRU } = __webpack_require__(/*! lru.min */ \"(middleware)/./node_modules/lru.min/lib/index.js\");\r\n\r\nconst decoderCache = createLRU({\r\n  max: 500,\r\n});\r\n\r\nexports.decode = function (buffer, encoding, start, end, options) {\r\n  if (Buffer.isEncoding(encoding)) {\r\n    return buffer.toString(encoding, start, end);\r\n  }\r\n\r\n  // Optimize for common case: encoding=\"short_string\", options=undefined.\r\n  let decoder;\r\n  if (!options) {\r\n    decoder = decoderCache.get(encoding);\r\n    if (!decoder) {\r\n      decoder = Iconv.getDecoder(encoding);\r\n      decoderCache.set(encoding, decoder);\r\n    }\r\n  } else {\r\n    const decoderArgs = { encoding, options };\r\n    const decoderKey = JSON.stringify(decoderArgs);\r\n    decoder = decoderCache.get(decoderKey);\r\n    if (!decoder) {\r\n      decoder = Iconv.getDecoder(decoderArgs.encoding, decoderArgs.options);\r\n      decoderCache.set(decoderKey, decoder);\r\n    }\r\n  }\r\n\r\n  const res = decoder.write(buffer.slice(start, end));\r\n  const trail = decoder.end();\r\n\r\n  return trail ? res + trail : res;\r\n};\r\n\r\nexports.encode = function (string, encoding, options) {\r\n  if (Buffer.isEncoding(encoding)) {\r\n    return Buffer.from(string, encoding);\r\n  }\r\n\r\n  const encoder = Iconv.getEncoder(encoding, options || {});\r\n\r\n  const res = encoder.write(string);\r\n  const trail = encoder.end();\r\n\r\n  return trail && trail.length > 0 ? Buffer.concat([res, trail]) : res;\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcGFyc2Vycy9zdHJpbmcuanMiLCJtYXBwaW5ncyI6IjtBQUFhO0FBQ2I7QUFDQSxjQUFjLG1CQUFPLENBQUMsdUVBQVk7QUFDbEMsUUFBUSxZQUFZLEVBQUUsbUJBQU8sQ0FBQyxpRUFBUztBQUN2QztBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxjQUFjO0FBQ2QsTUFBTSxNQUFNO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSiwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCxNQUFNLE1BQU07QUFDWixXQUFXLE1BQU07QUFDakI7QUFDQTtBQUNBLDBEQUEwRDtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyxNQUFNO0FBQzNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL3BhcnNlcnMvc3RyaW5nLmpzP2ViZjciXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxuY29uc3QgSWNvbnYgPSByZXF1aXJlKCdpY29udi1saXRlJyk7XHJcbmNvbnN0IHsgY3JlYXRlTFJVIH0gPSByZXF1aXJlKCdscnUubWluJyk7XHJcblxyXG5jb25zdCBkZWNvZGVyQ2FjaGUgPSBjcmVhdGVMUlUoe1xyXG4gIG1heDogNTAwLFxyXG59KTtcclxuXHJcbmV4cG9ydHMuZGVjb2RlID0gZnVuY3Rpb24gKGJ1ZmZlciwgZW5jb2RpbmcsIHN0YXJ0LCBlbmQsIG9wdGlvbnMpIHtcclxuICBpZiAoQnVmZmVyLmlzRW5jb2RpbmcoZW5jb2RpbmcpKSB7XHJcbiAgICByZXR1cm4gYnVmZmVyLnRvU3RyaW5nKGVuY29kaW5nLCBzdGFydCwgZW5kKTtcclxuICB9XHJcblxyXG4gIC8vIE9wdGltaXplIGZvciBjb21tb24gY2FzZTogZW5jb2Rpbmc9XCJzaG9ydF9zdHJpbmdcIiwgb3B0aW9ucz11bmRlZmluZWQuXHJcbiAgbGV0IGRlY29kZXI7XHJcbiAgaWYgKCFvcHRpb25zKSB7XHJcbiAgICBkZWNvZGVyID0gZGVjb2RlckNhY2hlLmdldChlbmNvZGluZyk7XHJcbiAgICBpZiAoIWRlY29kZXIpIHtcclxuICAgICAgZGVjb2RlciA9IEljb252LmdldERlY29kZXIoZW5jb2RpbmcpO1xyXG4gICAgICBkZWNvZGVyQ2FjaGUuc2V0KGVuY29kaW5nLCBkZWNvZGVyKTtcclxuICAgIH1cclxuICB9IGVsc2Uge1xyXG4gICAgY29uc3QgZGVjb2RlckFyZ3MgPSB7IGVuY29kaW5nLCBvcHRpb25zIH07XHJcbiAgICBjb25zdCBkZWNvZGVyS2V5ID0gSlNPTi5zdHJpbmdpZnkoZGVjb2RlckFyZ3MpO1xyXG4gICAgZGVjb2RlciA9IGRlY29kZXJDYWNoZS5nZXQoZGVjb2RlcktleSk7XHJcbiAgICBpZiAoIWRlY29kZXIpIHtcclxuICAgICAgZGVjb2RlciA9IEljb252LmdldERlY29kZXIoZGVjb2RlckFyZ3MuZW5jb2RpbmcsIGRlY29kZXJBcmdzLm9wdGlvbnMpO1xyXG4gICAgICBkZWNvZGVyQ2FjaGUuc2V0KGRlY29kZXJLZXksIGRlY29kZXIpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgY29uc3QgcmVzID0gZGVjb2Rlci53cml0ZShidWZmZXIuc2xpY2Uoc3RhcnQsIGVuZCkpO1xyXG4gIGNvbnN0IHRyYWlsID0gZGVjb2Rlci5lbmQoKTtcclxuXHJcbiAgcmV0dXJuIHRyYWlsID8gcmVzICsgdHJhaWwgOiByZXM7XHJcbn07XHJcblxyXG5leHBvcnRzLmVuY29kZSA9IGZ1bmN0aW9uIChzdHJpbmcsIGVuY29kaW5nLCBvcHRpb25zKSB7XHJcbiAgaWYgKEJ1ZmZlci5pc0VuY29kaW5nKGVuY29kaW5nKSkge1xyXG4gICAgcmV0dXJuIEJ1ZmZlci5mcm9tKHN0cmluZywgZW5jb2RpbmcpO1xyXG4gIH1cclxuXHJcbiAgY29uc3QgZW5jb2RlciA9IEljb252LmdldEVuY29kZXIoZW5jb2RpbmcsIG9wdGlvbnMgfHwge30pO1xyXG5cclxuICBjb25zdCByZXMgPSBlbmNvZGVyLndyaXRlKHN0cmluZyk7XHJcbiAgY29uc3QgdHJhaWwgPSBlbmNvZGVyLmVuZCgpO1xyXG5cclxuICByZXR1cm4gdHJhaWwgJiYgdHJhaWwubGVuZ3RoID4gMCA/IEJ1ZmZlci5jb25jYXQoW3JlcywgdHJhaWxdKSA6IHJlcztcclxufTtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/parsers/string.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/parsers/text_parser.js":
/*!********************************************************!*\
  !*** ./node_modules/mysql2/lib/parsers/text_parser.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\nconst Types = __webpack_require__(/*! ../constants/types.js */ \"(middleware)/./node_modules/mysql2/lib/constants/types.js\");\r\nconst Charsets = __webpack_require__(/*! ../constants/charsets.js */ \"(middleware)/./node_modules/mysql2/lib/constants/charsets.js\");\r\nconst helpers = __webpack_require__(/*! ../helpers */ \"(middleware)/./node_modules/mysql2/lib/helpers.js\");\r\nconst genFunc = __webpack_require__(/*! generate-function */ \"(middleware)/./node_modules/generate-function/index.js\");\r\nconst parserCache = __webpack_require__(/*! ./parser_cache.js */ \"(middleware)/./node_modules/mysql2/lib/parsers/parser_cache.js\");\r\n\r\nconst typeNames = [];\r\nfor (const t in Types) {\r\n  typeNames[Types[t]] = t;\r\n}\r\n\r\nfunction readCodeFor(type, charset, encodingExpr, config, options) {\r\n  const supportBigNumbers = Boolean(\r\n    options.supportBigNumbers || config.supportBigNumbers\r\n  );\r\n  const bigNumberStrings = Boolean(\r\n    options.bigNumberStrings || config.bigNumberStrings\r\n  );\r\n  const timezone = options.timezone || config.timezone;\r\n  const dateStrings = options.dateStrings || config.dateStrings;\r\n\r\n  switch (type) {\r\n    case Types.TINY:\r\n    case Types.SHORT:\r\n    case Types.LONG:\r\n    case Types.INT24:\r\n    case Types.YEAR:\r\n      return 'packet.parseLengthCodedIntNoBigCheck()';\r\n    case Types.LONGLONG:\r\n      if (supportBigNumbers && bigNumberStrings) {\r\n        return 'packet.parseLengthCodedIntString()';\r\n      }\r\n      return `packet.parseLengthCodedInt(${supportBigNumbers})`;\r\n    case Types.FLOAT:\r\n    case Types.DOUBLE:\r\n      return 'packet.parseLengthCodedFloat()';\r\n    case Types.NULL:\r\n      return 'packet.readLengthCodedNumber()';\r\n    case Types.DECIMAL:\r\n    case Types.NEWDECIMAL:\r\n      if (config.decimalNumbers) {\r\n        return 'packet.parseLengthCodedFloat()';\r\n      }\r\n      return 'packet.readLengthCodedString(\"ascii\")';\r\n    case Types.DATE:\r\n      if (helpers.typeMatch(type, dateStrings, Types)) {\r\n        return 'packet.readLengthCodedString(\"ascii\")';\r\n      }\r\n      return `packet.parseDate(${helpers.srcEscape(timezone)})`;\r\n    case Types.DATETIME:\r\n    case Types.TIMESTAMP:\r\n      if (helpers.typeMatch(type, dateStrings, Types)) {\r\n        return 'packet.readLengthCodedString(\"ascii\")';\r\n      }\r\n      return `packet.parseDateTime(${helpers.srcEscape(timezone)})`;\r\n    case Types.TIME:\r\n      return 'packet.readLengthCodedString(\"ascii\")';\r\n    case Types.GEOMETRY:\r\n      return 'packet.parseGeometryValue()';\r\n    case Types.VECTOR:\r\n      return 'packet.parseVector()';\r\n    case Types.JSON:\r\n      // Since for JSON columns mysql always returns charset 63 (BINARY),\r\n      // we have to handle it according to JSON specs and use \"utf8\",\r\n      // see https://github.com/sidorares/node-mysql2/issues/409\r\n      return config.jsonStrings\r\n        ? 'packet.readLengthCodedString(\"utf8\")'\r\n        : 'JSON.parse(packet.readLengthCodedString(\"utf8\"))';\r\n    default:\r\n      if (charset === Charsets.BINARY) {\r\n        return 'packet.readLengthCodedBuffer()';\r\n      }\r\n      return `packet.readLengthCodedString(${encodingExpr})`;\r\n  }\r\n}\r\n\r\nfunction compile(fields, options, config) {\r\n  // use global typeCast if current query doesn't specify one\r\n  if (\r\n    typeof config.typeCast === 'function' &&\r\n    typeof options.typeCast !== 'function'\r\n  ) {\r\n    options.typeCast = config.typeCast;\r\n  }\r\n\r\n  function wrap(field, _this) {\r\n    return {\r\n      type: typeNames[field.columnType],\r\n      length: field.columnLength,\r\n      db: field.schema,\r\n      table: field.table,\r\n      name: field.name,\r\n      string: function (encoding = field.encoding) {\r\n        if (field.columnType === Types.JSON && encoding === field.encoding) {\r\n          // Since for JSON columns mysql always returns charset 63 (BINARY),\r\n          // we have to handle it according to JSON specs and use \"utf8\",\r\n          // see https://github.com/sidorares/node-mysql2/issues/1661\r\n          console.warn(\r\n            `typeCast: JSON column \"${field.name}\" is interpreted as BINARY by default, recommended to manually set utf8 encoding: \\`field.string(\"utf8\")\\``\r\n          );\r\n        }\r\n\r\n        return _this.packet.readLengthCodedString(encoding);\r\n      },\r\n      buffer: function () {\r\n        return _this.packet.readLengthCodedBuffer();\r\n      },\r\n      geometry: function () {\r\n        return _this.packet.parseGeometryValue();\r\n      },\r\n    };\r\n  }\r\n\r\n  const parserFn = genFunc();\r\n\r\n  parserFn('(function () {')('return class TextRow {');\r\n\r\n  // constructor method\r\n  parserFn('constructor(fields) {');\r\n  // node-mysql typeCast compatibility wrapper\r\n  // see https://github.com/mysqljs/mysql/blob/96fdd0566b654436624e2375c7b6604b1f50f825/lib/protocol/packets/Field.js\r\n  if (typeof options.typeCast === 'function') {\r\n    parserFn('const _this = this;');\r\n    parserFn('for(let i=0; i<fields.length; ++i) {');\r\n    parserFn('this[`wrap${i}`] = wrap(fields[i], _this);');\r\n    parserFn('}');\r\n  }\r\n  parserFn('}');\r\n\r\n  // next method\r\n  parserFn('next(packet, fields, options) {');\r\n  parserFn('this.packet = packet;');\r\n  if (options.rowsAsArray) {\r\n    parserFn(`const result = new Array(${fields.length});`);\r\n  } else {\r\n    parserFn('const result = {};');\r\n  }\r\n\r\n  const resultTables = {};\r\n  let resultTablesArray = [];\r\n\r\n  if (options.nestTables === true) {\r\n    for (let i = 0; i < fields.length; i++) {\r\n      resultTables[fields[i].table] = 1;\r\n    }\r\n    resultTablesArray = Object.keys(resultTables);\r\n    for (let i = 0; i < resultTablesArray.length; i++) {\r\n      parserFn(`result[${helpers.fieldEscape(resultTablesArray[i])}] = {};`);\r\n    }\r\n  }\r\n\r\n  let lvalue = '';\r\n  let fieldName = '';\r\n  let tableName = '';\r\n  for (let i = 0; i < fields.length; i++) {\r\n    fieldName = helpers.fieldEscape(fields[i].name);\r\n    // parserFn(`// ${fieldName}: ${typeNames[fields[i].columnType]}`);\r\n\r\n    if (typeof options.nestTables === 'string') {\r\n      lvalue = `result[${helpers.fieldEscape(fields[i].table + options.nestTables + fields[i].name)}]`;\r\n    } else if (options.nestTables === true) {\r\n      tableName = helpers.fieldEscape(fields[i].table);\r\n\r\n      parserFn(`if (!result[${tableName}]) result[${tableName}] = {};`);\r\n      lvalue = `result[${tableName}][${fieldName}]`;\r\n    } else if (options.rowsAsArray) {\r\n      lvalue = `result[${i.toString(10)}]`;\r\n    } else {\r\n      lvalue = `result[${fieldName}]`;\r\n    }\r\n    if (options.typeCast === false) {\r\n      parserFn(`${lvalue} = packet.readLengthCodedBuffer();`);\r\n    } else {\r\n      const encodingExpr = `fields[${i}].encoding`;\r\n      const readCode = readCodeFor(\r\n        fields[i].columnType,\r\n        fields[i].characterSet,\r\n        encodingExpr,\r\n        config,\r\n        options\r\n      );\r\n      if (typeof options.typeCast === 'function') {\r\n        parserFn(\r\n          `${lvalue} = options.typeCast(this.wrap${i}, function() { return ${readCode} });`\r\n        );\r\n      } else {\r\n        parserFn(`${lvalue} = ${readCode};`);\r\n      }\r\n    }\r\n  }\r\n\r\n  parserFn('return result;');\r\n  parserFn('}');\r\n  parserFn('};')('})()');\r\n\r\n  if (config.debug) {\r\n    helpers.printDebugWithCode(\r\n      'Compiled text protocol row parser',\r\n      parserFn.toString()\r\n    );\r\n  }\r\n  if (typeof options.typeCast === 'function') {\r\n    return parserFn.toFunction({ wrap });\r\n  }\r\n  return parserFn.toFunction();\r\n}\r\n\r\nfunction getTextParser(fields, options, config) {\r\n  return parserCache.getParser('text', fields, options, config, compile);\r\n}\r\n\r\nmodule.exports = getTextParser;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/parsers/text_parser.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/pool.js":
/*!*****************************************!*\
  !*** ./node_modules/mysql2/lib/pool.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\nconst BasePool = __webpack_require__(/*! ./base/pool.js */ \"(middleware)/./node_modules/mysql2/lib/base/pool.js\");\r\n\r\nclass Pool extends BasePool {\r\n  promise(promiseImpl) {\r\n    const PromisePool = __webpack_require__(/*! ./promise/pool.js */ \"(middleware)/./node_modules/mysql2/lib/promise/pool.js\");\r\n    return new PromisePool(this, promiseImpl);\r\n  }\r\n}\r\n\r\nmodule.exports = Pool;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcG9vbC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsaUJBQWlCLG1CQUFPLENBQUMsMkVBQWdCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixtQkFBTyxDQUFDLGlGQUFtQjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL3Bvb2wuanM/ZjRhMSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG5jb25zdCBCYXNlUG9vbCA9IHJlcXVpcmUoJy4vYmFzZS9wb29sLmpzJyk7XHJcblxyXG5jbGFzcyBQb29sIGV4dGVuZHMgQmFzZVBvb2wge1xyXG4gIHByb21pc2UocHJvbWlzZUltcGwpIHtcclxuICAgIGNvbnN0IFByb21pc2VQb29sID0gcmVxdWlyZSgnLi9wcm9taXNlL3Bvb2wuanMnKTtcclxuICAgIHJldHVybiBuZXcgUHJvbWlzZVBvb2wodGhpcywgcHJvbWlzZUltcGwpO1xyXG4gIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBQb29sO1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/pool.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/pool_cluster.js":
/*!*************************************************!*\
  !*** ./node_modules/mysql2/lib/pool_cluster.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\nconst process = __webpack_require__(/*! process */ \"(middleware)/../../node_modules/process/browser.js\");\r\n\r\nconst Pool = __webpack_require__(/*! ./pool.js */ \"(middleware)/./node_modules/mysql2/lib/pool.js\");\r\nconst PoolConfig = __webpack_require__(/*! ./pool_config.js */ \"(middleware)/./node_modules/mysql2/lib/pool_config.js\");\r\nconst Connection = __webpack_require__(/*! ./connection.js */ \"(middleware)/./node_modules/mysql2/lib/connection.js\");\r\nconst EventEmitter = (__webpack_require__(/*! events */ \"events\").EventEmitter);\r\n\r\n/**\r\n * Selector\r\n */\r\nconst makeSelector = {\r\n  RR() {\r\n    let index = 0;\r\n    return (clusterIds) => clusterIds[index++ % clusterIds.length];\r\n  },\r\n  RANDOM() {\r\n    return (clusterIds) =>\r\n      clusterIds[Math.floor(Math.random() * clusterIds.length)];\r\n  },\r\n  ORDER() {\r\n    return (clusterIds) => clusterIds[0];\r\n  },\r\n};\r\n\r\nconst getMonotonicMilliseconds = function () {\r\n  let ms;\r\n\r\n  if (typeof process.hrtime === 'function') {\r\n    ms = process.hrtime();\r\n    ms = ms[0] * 1e3 + ms[1] * 1e-6;\r\n  } else {\r\n    ms = process.uptime() * 1000;\r\n  }\r\n\r\n  return Math.floor(ms);\r\n};\r\n\r\nconst patternRegExp = function (pattern) {\r\n  if (pattern instanceof RegExp) {\r\n    return pattern;\r\n  }\r\n\r\n  const source = pattern\r\n    .replace(/([.+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1')\r\n    .replace(/\\*/g, '.*');\r\n\r\n  return new RegExp(`^${source}$`);\r\n};\r\n\r\nclass PoolNamespace {\r\n  constructor(cluster, pattern, selector) {\r\n    this._cluster = cluster;\r\n    this._pattern = pattern;\r\n    this._selector = makeSelector[selector]();\r\n  }\r\n\r\n  getConnection(cb) {\r\n    const clusterNode = this._getClusterNode();\r\n    if (clusterNode === null) {\r\n      let err = new Error('Pool does Not exist.');\r\n      err.code = 'POOL_NOEXIST';\r\n\r\n      if (this._cluster._findNodeIds(this._pattern, true).length !== 0) {\r\n        err = new Error('Pool does Not have online node.');\r\n        err.code = 'POOL_NONEONLINE';\r\n      }\r\n\r\n      return cb(err);\r\n    }\r\n    return this._cluster._getConnection(clusterNode, (err, connection) => {\r\n      if (err) {\r\n        if (\r\n          this._cluster._canRetry &&\r\n          this._cluster._findNodeIds(this._pattern).length !== 0\r\n        ) {\r\n          this._cluster.emit('warn', err);\r\n          return this.getConnection(cb);\r\n        }\r\n\r\n        return cb(err);\r\n      }\r\n      return cb(null, connection);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * pool cluster query\r\n   * @param {*} sql\r\n   * @param {*} values\r\n   * @param {*} cb\r\n   * @returns query\r\n   */\r\n  query(sql, values, cb) {\r\n    const query = Connection.createQuery(sql, values, cb, {});\r\n    this.getConnection((err, conn) => {\r\n      if (err) {\r\n        if (typeof query.onResult === 'function') {\r\n          query.onResult(err);\r\n        } else {\r\n          query.emit('error', err);\r\n        }\r\n        return;\r\n      }\r\n      try {\r\n        conn.query(query).once('end', () => {\r\n          conn.release();\r\n        });\r\n      } catch (e) {\r\n        conn.release();\r\n        throw e;\r\n      }\r\n    });\r\n    return query;\r\n  }\r\n\r\n  /**\r\n   * pool cluster execute\r\n   * @param {*} sql\r\n   * @param {*} values\r\n   * @param {*} cb\r\n   */\r\n  execute(sql, values, cb) {\r\n    if (typeof values === 'function') {\r\n      cb = values;\r\n      values = [];\r\n    }\r\n    this.getConnection((err, conn) => {\r\n      if (err) {\r\n        return cb(err);\r\n      }\r\n      try {\r\n        conn.execute(sql, values, cb).once('end', () => {\r\n          conn.release();\r\n        });\r\n      } catch (e) {\r\n        conn.release();\r\n        throw e;\r\n      }\r\n    });\r\n  }\r\n\r\n  _getClusterNode() {\r\n    const foundNodeIds = this._cluster._findNodeIds(this._pattern);\r\n    if (foundNodeIds.length === 0) {\r\n      return null;\r\n    }\r\n    const nodeId =\r\n      foundNodeIds.length === 1\r\n        ? foundNodeIds[0]\r\n        : this._selector(foundNodeIds);\r\n    return this._cluster._getNode(nodeId);\r\n  }\r\n}\r\n\r\nclass PoolCluster extends EventEmitter {\r\n  constructor(config) {\r\n    super();\r\n    config = config || {};\r\n    this._canRetry =\r\n      typeof config.canRetry === 'undefined' ? true : config.canRetry;\r\n    this._removeNodeErrorCount = config.removeNodeErrorCount || 5;\r\n    this._restoreNodeTimeout = config.restoreNodeTimeout || 0;\r\n    this._defaultSelector = config.defaultSelector || 'RR';\r\n    this._closed = false;\r\n    this._lastId = 0;\r\n    this._nodes = {};\r\n    this._serviceableNodeIds = [];\r\n    this._namespaces = {};\r\n    this._findCaches = {};\r\n  }\r\n\r\n  of(pattern, selector) {\r\n    pattern = pattern || '*';\r\n    selector = selector || this._defaultSelector;\r\n    selector = selector.toUpperCase();\r\n    if (!makeSelector[selector] === 'undefined') {\r\n      selector = this._defaultSelector;\r\n    }\r\n    const key = pattern + selector;\r\n    if (typeof this._namespaces[key] === 'undefined') {\r\n      this._namespaces[key] = new PoolNamespace(this, pattern, selector);\r\n    }\r\n    return this._namespaces[key];\r\n  }\r\n\r\n  add(id, config) {\r\n    if (typeof id === 'object') {\r\n      config = id;\r\n      id = `CLUSTER::${++this._lastId}`;\r\n    }\r\n    if (typeof this._nodes[id] === 'undefined') {\r\n      this._nodes[id] = {\r\n        id: id,\r\n        errorCount: 0,\r\n        pool: new Pool({ config: new PoolConfig(config) }),\r\n        _offlineUntil: 0,\r\n      };\r\n      this._serviceableNodeIds.push(id);\r\n      this._clearFindCaches();\r\n    }\r\n  }\r\n\r\n  remove(pattern) {\r\n    const foundNodeIds = this._findNodeIds(pattern, true);\r\n\r\n    for (let i = 0; i < foundNodeIds.length; i++) {\r\n      const node = this._getNode(foundNodeIds[i]);\r\n\r\n      if (node) {\r\n        this._removeNode(node);\r\n      }\r\n    }\r\n  }\r\n\r\n  getConnection(pattern, selector, cb) {\r\n    let namespace;\r\n    if (typeof pattern === 'function') {\r\n      cb = pattern;\r\n      namespace = this.of();\r\n    } else {\r\n      if (typeof selector === 'function') {\r\n        cb = selector;\r\n        selector = this._defaultSelector;\r\n      }\r\n      namespace = this.of(pattern, selector);\r\n    }\r\n    namespace.getConnection(cb);\r\n  }\r\n\r\n  end(callback) {\r\n    const cb =\r\n      callback !== undefined\r\n        ? callback\r\n        : (err) => {\r\n            if (err) {\r\n              throw err;\r\n            }\r\n          };\r\n    if (this._closed) {\r\n      process.nextTick(cb);\r\n      return;\r\n    }\r\n\r\n    this._closed = true;\r\n\r\n    let calledBack = false;\r\n    let waitingClose = 0;\r\n    const onEnd = (err) => {\r\n      if (!calledBack && (err || --waitingClose <= 0)) {\r\n        calledBack = true;\r\n        return cb(err);\r\n      }\r\n    };\r\n\r\n    for (const id in this._nodes) {\r\n      waitingClose++;\r\n      this._nodes[id].pool.end(onEnd);\r\n    }\r\n\r\n    if (waitingClose === 0) {\r\n      process.nextTick(onEnd);\r\n    }\r\n  }\r\n\r\n  _findNodeIds(pattern, includeOffline) {\r\n    let currentTime = 0;\r\n    let foundNodeIds = this._findCaches[pattern];\r\n\r\n    if (foundNodeIds === undefined) {\r\n      const expression = patternRegExp(pattern);\r\n\r\n      foundNodeIds = this._serviceableNodeIds.filter((id) =>\r\n        id.match(expression)\r\n      );\r\n    }\r\n\r\n    this._findCaches[pattern] = foundNodeIds;\r\n\r\n    if (includeOffline) {\r\n      return foundNodeIds;\r\n    }\r\n\r\n    return foundNodeIds.filter((nodeId) => {\r\n      const node = this._getNode(nodeId);\r\n\r\n      if (!node._offlineUntil) {\r\n        return true;\r\n      }\r\n\r\n      if (!currentTime) {\r\n        currentTime = getMonotonicMilliseconds();\r\n      }\r\n\r\n      return node._offlineUntil <= currentTime;\r\n    });\r\n  }\r\n\r\n  _getNode(id) {\r\n    return this._nodes[id] || null;\r\n  }\r\n\r\n  _increaseErrorCount(node) {\r\n    const errorCount = ++node.errorCount;\r\n\r\n    if (this._removeNodeErrorCount > errorCount) {\r\n      return;\r\n    }\r\n\r\n    if (this._restoreNodeTimeout > 0) {\r\n      node._offlineUntil =\r\n        getMonotonicMilliseconds() + this._restoreNodeTimeout;\r\n      this.emit('offline', node.id);\r\n      return;\r\n    }\r\n\r\n    this._removeNode(node);\r\n    this.emit('remove', node.id);\r\n  }\r\n\r\n  _decreaseErrorCount(node) {\r\n    let errorCount = node.errorCount;\r\n\r\n    if (errorCount > this._removeNodeErrorCount) {\r\n      errorCount = this._removeNodeErrorCount;\r\n    }\r\n\r\n    if (errorCount < 1) {\r\n      errorCount = 1;\r\n    }\r\n\r\n    node.errorCount = errorCount - 1;\r\n\r\n    if (node._offlineUntil) {\r\n      node._offlineUntil = 0;\r\n      this.emit('online', node.id);\r\n    }\r\n  }\r\n\r\n  _getConnection(node, cb) {\r\n    node.pool.getConnection((err, connection) => {\r\n      if (err) {\r\n        this._increaseErrorCount(node);\r\n        return cb(err);\r\n      }\r\n      this._decreaseErrorCount(node);\r\n\r\n      connection._clusterId = node.id;\r\n      return cb(null, connection);\r\n    });\r\n  }\r\n\r\n  _removeNode(node) {\r\n    const index = this._serviceableNodeIds.indexOf(node.id);\r\n    if (index !== -1) {\r\n      this._serviceableNodeIds.splice(index, 1);\r\n      delete this._nodes[node.id];\r\n      this._clearFindCaches();\r\n      node.pool.end();\r\n    }\r\n  }\r\n\r\n  _clearFindCaches() {\r\n    this._findCaches = {};\r\n  }\r\n}\r\n\r\nmodule.exports = PoolCluster;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/pool_cluster.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/pool_config.js":
/*!************************************************!*\
  !*** ./node_modules/mysql2/lib/pool_config.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\nconst ConnectionConfig = __webpack_require__(/*! ./connection_config.js */ \"(middleware)/./node_modules/mysql2/lib/connection_config.js\");\r\n\r\nclass PoolConfig {\r\n  constructor(options) {\r\n    if (typeof options === 'string') {\r\n      options = ConnectionConfig.parseUrl(options);\r\n    }\r\n    this.connectionConfig = new ConnectionConfig(options);\r\n    this.waitForConnections =\r\n      options.waitForConnections === undefined\r\n        ? true\r\n        : Boolean(options.waitForConnections);\r\n    this.connectionLimit = isNaN(options.connectionLimit)\r\n      ? 10\r\n      : Number(options.connectionLimit);\r\n    this.maxIdle = isNaN(options.maxIdle)\r\n      ? this.connectionLimit\r\n      : Number(options.maxIdle);\r\n    this.idleTimeout = isNaN(options.idleTimeout)\r\n      ? 60000\r\n      : Number(options.idleTimeout);\r\n    this.queueLimit = isNaN(options.queueLimit)\r\n      ? 0\r\n      : Number(options.queueLimit);\r\n  }\r\n}\r\n\r\nmodule.exports = PoolConfig;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcG9vbF9jb25maWcuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLHlCQUF5QixtQkFBTyxDQUFDLDJGQUF3QjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcG9vbF9jb25maWcuanM/N2FmNSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG5jb25zdCBDb25uZWN0aW9uQ29uZmlnID0gcmVxdWlyZSgnLi9jb25uZWN0aW9uX2NvbmZpZy5qcycpO1xyXG5cclxuY2xhc3MgUG9vbENvbmZpZyB7XHJcbiAgY29uc3RydWN0b3Iob3B0aW9ucykge1xyXG4gICAgaWYgKHR5cGVvZiBvcHRpb25zID09PSAnc3RyaW5nJykge1xyXG4gICAgICBvcHRpb25zID0gQ29ubmVjdGlvbkNvbmZpZy5wYXJzZVVybChvcHRpb25zKTtcclxuICAgIH1cclxuICAgIHRoaXMuY29ubmVjdGlvbkNvbmZpZyA9IG5ldyBDb25uZWN0aW9uQ29uZmlnKG9wdGlvbnMpO1xyXG4gICAgdGhpcy53YWl0Rm9yQ29ubmVjdGlvbnMgPVxyXG4gICAgICBvcHRpb25zLndhaXRGb3JDb25uZWN0aW9ucyA9PT0gdW5kZWZpbmVkXHJcbiAgICAgICAgPyB0cnVlXHJcbiAgICAgICAgOiBCb29sZWFuKG9wdGlvbnMud2FpdEZvckNvbm5lY3Rpb25zKTtcclxuICAgIHRoaXMuY29ubmVjdGlvbkxpbWl0ID0gaXNOYU4ob3B0aW9ucy5jb25uZWN0aW9uTGltaXQpXHJcbiAgICAgID8gMTBcclxuICAgICAgOiBOdW1iZXIob3B0aW9ucy5jb25uZWN0aW9uTGltaXQpO1xyXG4gICAgdGhpcy5tYXhJZGxlID0gaXNOYU4ob3B0aW9ucy5tYXhJZGxlKVxyXG4gICAgICA/IHRoaXMuY29ubmVjdGlvbkxpbWl0XHJcbiAgICAgIDogTnVtYmVyKG9wdGlvbnMubWF4SWRsZSk7XHJcbiAgICB0aGlzLmlkbGVUaW1lb3V0ID0gaXNOYU4ob3B0aW9ucy5pZGxlVGltZW91dClcclxuICAgICAgPyA2MDAwMFxyXG4gICAgICA6IE51bWJlcihvcHRpb25zLmlkbGVUaW1lb3V0KTtcclxuICAgIHRoaXMucXVldWVMaW1pdCA9IGlzTmFOKG9wdGlvbnMucXVldWVMaW1pdClcclxuICAgICAgPyAwXHJcbiAgICAgIDogTnVtYmVyKG9wdGlvbnMucXVldWVMaW1pdCk7XHJcbiAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IFBvb2xDb25maWc7XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/pool_config.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/pool_connection.js":
/*!****************************************************!*\
  !*** ./node_modules/mysql2/lib/pool_connection.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\nconst BasePoolConnection = __webpack_require__(/*! ./base/pool_connection.js */ \"(middleware)/./node_modules/mysql2/lib/base/pool_connection.js\");\r\n\r\nclass PoolConnection extends BasePoolConnection {\r\n  promise(promiseImpl) {\r\n    const PromisePoolConnection = __webpack_require__(/*! ./promise/pool_connection.js */ \"(middleware)/./node_modules/mysql2/lib/promise/pool_connection.js\");\r\n    return new PromisePoolConnection(this, promiseImpl);\r\n  }\r\n}\r\n\r\nmodule.exports = PoolConnection;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcG9vbF9jb25uZWN0aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSwyQkFBMkIsbUJBQU8sQ0FBQyxpR0FBMkI7QUFDOUQ7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLG1CQUFPLENBQUMsdUdBQThCO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcG9vbF9jb25uZWN0aW9uLmpzPzNiMTgiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxuY29uc3QgQmFzZVBvb2xDb25uZWN0aW9uID0gcmVxdWlyZSgnLi9iYXNlL3Bvb2xfY29ubmVjdGlvbi5qcycpO1xyXG5cclxuY2xhc3MgUG9vbENvbm5lY3Rpb24gZXh0ZW5kcyBCYXNlUG9vbENvbm5lY3Rpb24ge1xyXG4gIHByb21pc2UocHJvbWlzZUltcGwpIHtcclxuICAgIGNvbnN0IFByb21pc2VQb29sQ29ubmVjdGlvbiA9IHJlcXVpcmUoJy4vcHJvbWlzZS9wb29sX2Nvbm5lY3Rpb24uanMnKTtcclxuICAgIHJldHVybiBuZXcgUHJvbWlzZVBvb2xDb25uZWN0aW9uKHRoaXMsIHByb21pc2VJbXBsKTtcclxuICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gUG9vbENvbm5lY3Rpb247XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/pool_connection.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/promise/connection.js":
/*!*******************************************************!*\
  !*** ./node_modules/mysql2/lib/promise/connection.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\nconst EventEmitter = (__webpack_require__(/*! events */ \"events\").EventEmitter);\r\nconst PromisePreparedStatementInfo = __webpack_require__(/*! ./prepared_statement_info.js */ \"(middleware)/./node_modules/mysql2/lib/promise/prepared_statement_info.js\");\r\nconst makeDoneCb = __webpack_require__(/*! ./make_done_cb.js */ \"(middleware)/./node_modules/mysql2/lib/promise/make_done_cb.js\");\r\nconst inheritEvents = __webpack_require__(/*! ./inherit_events.js */ \"(middleware)/./node_modules/mysql2/lib/promise/inherit_events.js\");\r\nconst BaseConnection = __webpack_require__(/*! ../base/connection.js */ \"(middleware)/./node_modules/mysql2/lib/base/connection.js\");\r\n\r\nclass PromiseConnection extends EventEmitter {\r\n  constructor(connection, promiseImpl) {\r\n    super();\r\n    this.connection = connection;\r\n    this.Promise = promiseImpl || Promise;\r\n    inheritEvents(connection, this, [\r\n      'error',\r\n      'drain',\r\n      'connect',\r\n      'end',\r\n      'enqueue',\r\n    ]);\r\n  }\r\n\r\n  release() {\r\n    this.connection.release();\r\n  }\r\n\r\n  query(query, params) {\r\n    const c = this.connection;\r\n    const localErr = new Error();\r\n    if (typeof params === 'function') {\r\n      throw new Error(\r\n        'Callback function is not available with promise clients.'\r\n      );\r\n    }\r\n    return new this.Promise((resolve, reject) => {\r\n      const done = makeDoneCb(resolve, reject, localErr);\r\n      if (params !== undefined) {\r\n        c.query(query, params, done);\r\n      } else {\r\n        c.query(query, done);\r\n      }\r\n    });\r\n  }\r\n\r\n  execute(query, params) {\r\n    const c = this.connection;\r\n    const localErr = new Error();\r\n    if (typeof params === 'function') {\r\n      throw new Error(\r\n        'Callback function is not available with promise clients.'\r\n      );\r\n    }\r\n    return new this.Promise((resolve, reject) => {\r\n      const done = makeDoneCb(resolve, reject, localErr);\r\n      if (params !== undefined) {\r\n        c.execute(query, params, done);\r\n      } else {\r\n        c.execute(query, done);\r\n      }\r\n    });\r\n  }\r\n\r\n  end() {\r\n    return new this.Promise((resolve) => {\r\n      this.connection.end(resolve);\r\n    });\r\n  }\r\n\r\n  beginTransaction() {\r\n    const c = this.connection;\r\n    const localErr = new Error();\r\n    return new this.Promise((resolve, reject) => {\r\n      const done = makeDoneCb(resolve, reject, localErr);\r\n      c.beginTransaction(done);\r\n    });\r\n  }\r\n\r\n  commit() {\r\n    const c = this.connection;\r\n    const localErr = new Error();\r\n    return new this.Promise((resolve, reject) => {\r\n      const done = makeDoneCb(resolve, reject, localErr);\r\n      c.commit(done);\r\n    });\r\n  }\r\n\r\n  rollback() {\r\n    const c = this.connection;\r\n    const localErr = new Error();\r\n    return new this.Promise((resolve, reject) => {\r\n      const done = makeDoneCb(resolve, reject, localErr);\r\n      c.rollback(done);\r\n    });\r\n  }\r\n\r\n  ping() {\r\n    const c = this.connection;\r\n    const localErr = new Error();\r\n    return new this.Promise((resolve, reject) => {\r\n      c.ping((err) => {\r\n        if (err) {\r\n          localErr.message = err.message;\r\n          localErr.code = err.code;\r\n          localErr.errno = err.errno;\r\n          localErr.sqlState = err.sqlState;\r\n          localErr.sqlMessage = err.sqlMessage;\r\n          reject(localErr);\r\n        } else {\r\n          resolve(true);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  connect() {\r\n    const c = this.connection;\r\n    const localErr = new Error();\r\n    return new this.Promise((resolve, reject) => {\r\n      c.connect((err, param) => {\r\n        if (err) {\r\n          localErr.message = err.message;\r\n          localErr.code = err.code;\r\n          localErr.errno = err.errno;\r\n          localErr.sqlState = err.sqlState;\r\n          localErr.sqlMessage = err.sqlMessage;\r\n          reject(localErr);\r\n        } else {\r\n          resolve(param);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  prepare(options) {\r\n    const c = this.connection;\r\n    const promiseImpl = this.Promise;\r\n    const localErr = new Error();\r\n    return new this.Promise((resolve, reject) => {\r\n      c.prepare(options, (err, statement) => {\r\n        if (err) {\r\n          localErr.message = err.message;\r\n          localErr.code = err.code;\r\n          localErr.errno = err.errno;\r\n          localErr.sqlState = err.sqlState;\r\n          localErr.sqlMessage = err.sqlMessage;\r\n          reject(localErr);\r\n        } else {\r\n          const wrappedStatement = new PromisePreparedStatementInfo(\r\n            statement,\r\n            promiseImpl\r\n          );\r\n          resolve(wrappedStatement);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  changeUser(options) {\r\n    const c = this.connection;\r\n    const localErr = new Error();\r\n    return new this.Promise((resolve, reject) => {\r\n      c.changeUser(options, (err) => {\r\n        if (err) {\r\n          localErr.message = err.message;\r\n          localErr.code = err.code;\r\n          localErr.errno = err.errno;\r\n          localErr.sqlState = err.sqlState;\r\n          localErr.sqlMessage = err.sqlMessage;\r\n          reject(localErr);\r\n        } else {\r\n          resolve();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  get config() {\r\n    return this.connection.config;\r\n  }\r\n\r\n  get threadId() {\r\n    return this.connection.threadId;\r\n  }\r\n}\r\n// patching PromiseConnection\r\n// create facade functions for prototype functions on \"Connection\" that are not yet\r\n// implemented with PromiseConnection\r\n\r\n// proxy synchronous functions only\r\n(function (functionsToWrap) {\r\n  for (let i = 0; functionsToWrap && i < functionsToWrap.length; i++) {\r\n    const func = functionsToWrap[i];\r\n\r\n    if (\r\n      typeof BaseConnection.prototype[func] === 'function' &&\r\n      PromiseConnection.prototype[func] === undefined\r\n    ) {\r\n      PromiseConnection.prototype[func] = (function factory(funcName) {\r\n        return function () {\r\n          return BaseConnection.prototype[funcName].apply(\r\n            this.connection,\r\n            arguments\r\n          );\r\n        };\r\n      })(func);\r\n    }\r\n  }\r\n})([\r\n  // synchronous functions\r\n  'close',\r\n  'createBinlogStream',\r\n  'destroy',\r\n  'escape',\r\n  'escapeId',\r\n  'format',\r\n  'pause',\r\n  'pipe',\r\n  'resume',\r\n  'unprepare',\r\n]);\r\n\r\nmodule.exports = PromiseConnection;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/promise/connection.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/promise/inherit_events.js":
/*!***********************************************************!*\
  !*** ./node_modules/mysql2/lib/promise/inherit_events.js ***!
  \***********************************************************/
/***/ ((module) => {

"use strict";
eval("\r\n\r\nfunction inheritEvents(source, target, events) {\r\n  const listeners = {};\r\n  target\r\n    .on('newListener', (eventName) => {\r\n      if (events.indexOf(eventName) >= 0 && !target.listenerCount(eventName)) {\r\n        source.on(\r\n          eventName,\r\n          (listeners[eventName] = function () {\r\n            const args = [].slice.call(arguments);\r\n            args.unshift(eventName);\r\n\r\n            target.emit.apply(target, args);\r\n          })\r\n        );\r\n      }\r\n    })\r\n    .on('removeListener', (eventName) => {\r\n      if (events.indexOf(eventName) >= 0 && !target.listenerCount(eventName)) {\r\n        source.removeListener(eventName, listeners[eventName]);\r\n        delete listeners[eventName];\r\n      }\r\n    });\r\n}\r\n\r\nmodule.exports = inheritEvents;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcHJvbWlzZS9pbmhlcml0X2V2ZW50cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcHJvbWlzZS9pbmhlcml0X2V2ZW50cy5qcz8wNzhkIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuXHJcbmZ1bmN0aW9uIGluaGVyaXRFdmVudHMoc291cmNlLCB0YXJnZXQsIGV2ZW50cykge1xyXG4gIGNvbnN0IGxpc3RlbmVycyA9IHt9O1xyXG4gIHRhcmdldFxyXG4gICAgLm9uKCduZXdMaXN0ZW5lcicsIChldmVudE5hbWUpID0+IHtcclxuICAgICAgaWYgKGV2ZW50cy5pbmRleE9mKGV2ZW50TmFtZSkgPj0gMCAmJiAhdGFyZ2V0Lmxpc3RlbmVyQ291bnQoZXZlbnROYW1lKSkge1xyXG4gICAgICAgIHNvdXJjZS5vbihcclxuICAgICAgICAgIGV2ZW50TmFtZSxcclxuICAgICAgICAgIChsaXN0ZW5lcnNbZXZlbnROYW1lXSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgY29uc3QgYXJncyA9IFtdLnNsaWNlLmNhbGwoYXJndW1lbnRzKTtcclxuICAgICAgICAgICAgYXJncy51bnNoaWZ0KGV2ZW50TmFtZSk7XHJcblxyXG4gICAgICAgICAgICB0YXJnZXQuZW1pdC5hcHBseSh0YXJnZXQsIGFyZ3MpO1xyXG4gICAgICAgICAgfSlcclxuICAgICAgICApO1xyXG4gICAgICB9XHJcbiAgICB9KVxyXG4gICAgLm9uKCdyZW1vdmVMaXN0ZW5lcicsIChldmVudE5hbWUpID0+IHtcclxuICAgICAgaWYgKGV2ZW50cy5pbmRleE9mKGV2ZW50TmFtZSkgPj0gMCAmJiAhdGFyZ2V0Lmxpc3RlbmVyQ291bnQoZXZlbnROYW1lKSkge1xyXG4gICAgICAgIHNvdXJjZS5yZW1vdmVMaXN0ZW5lcihldmVudE5hbWUsIGxpc3RlbmVyc1tldmVudE5hbWVdKTtcclxuICAgICAgICBkZWxldGUgbGlzdGVuZXJzW2V2ZW50TmFtZV07XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGluaGVyaXRFdmVudHM7XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/promise/inherit_events.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/promise/make_done_cb.js":
/*!*********************************************************!*\
  !*** ./node_modules/mysql2/lib/promise/make_done_cb.js ***!
  \*********************************************************/
/***/ ((module) => {

"use strict";
eval("\r\n\r\nfunction makeDoneCb(resolve, reject, localErr) {\r\n  return function (err, rows, fields) {\r\n    if (err) {\r\n      localErr.message = err.message;\r\n      localErr.code = err.code;\r\n      localErr.errno = err.errno;\r\n      localErr.sql = err.sql;\r\n      localErr.sqlState = err.sqlState;\r\n      localErr.sqlMessage = err.sqlMessage;\r\n      reject(localErr);\r\n    } else {\r\n      resolve([rows, fields]);\r\n    }\r\n  };\r\n}\r\n\r\nmodule.exports = makeDoneCb;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcHJvbWlzZS9tYWtlX2RvbmVfY2IuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wcm9taXNlL21ha2VfZG9uZV9jYi5qcz8xYWE3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuXHJcbmZ1bmN0aW9uIG1ha2VEb25lQ2IocmVzb2x2ZSwgcmVqZWN0LCBsb2NhbEVycikge1xyXG4gIHJldHVybiBmdW5jdGlvbiAoZXJyLCByb3dzLCBmaWVsZHMpIHtcclxuICAgIGlmIChlcnIpIHtcclxuICAgICAgbG9jYWxFcnIubWVzc2FnZSA9IGVyci5tZXNzYWdlO1xyXG4gICAgICBsb2NhbEVyci5jb2RlID0gZXJyLmNvZGU7XHJcbiAgICAgIGxvY2FsRXJyLmVycm5vID0gZXJyLmVycm5vO1xyXG4gICAgICBsb2NhbEVyci5zcWwgPSBlcnIuc3FsO1xyXG4gICAgICBsb2NhbEVyci5zcWxTdGF0ZSA9IGVyci5zcWxTdGF0ZTtcclxuICAgICAgbG9jYWxFcnIuc3FsTWVzc2FnZSA9IGVyci5zcWxNZXNzYWdlO1xyXG4gICAgICByZWplY3QobG9jYWxFcnIpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmVzb2x2ZShbcm93cywgZmllbGRzXSk7XHJcbiAgICB9XHJcbiAgfTtcclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBtYWtlRG9uZUNiO1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/promise/make_done_cb.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/promise/pool.js":
/*!*************************************************!*\
  !*** ./node_modules/mysql2/lib/promise/pool.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\nconst EventEmitter = (__webpack_require__(/*! events */ \"events\").EventEmitter);\r\nconst makeDoneCb = __webpack_require__(/*! ./make_done_cb.js */ \"(middleware)/./node_modules/mysql2/lib/promise/make_done_cb.js\");\r\nconst PromisePoolConnection = __webpack_require__(/*! ./pool_connection.js */ \"(middleware)/./node_modules/mysql2/lib/promise/pool_connection.js\");\r\nconst inheritEvents = __webpack_require__(/*! ./inherit_events.js */ \"(middleware)/./node_modules/mysql2/lib/promise/inherit_events.js\");\r\nconst BasePool = __webpack_require__(/*! ../base/pool.js */ \"(middleware)/./node_modules/mysql2/lib/base/pool.js\");\r\n\r\nclass PromisePool extends EventEmitter {\r\n  constructor(pool, thePromise) {\r\n    super();\r\n    this.pool = pool;\r\n    this.Promise = thePromise || Promise;\r\n    inheritEvents(pool, this, ['acquire', 'connection', 'enqueue', 'release']);\r\n  }\r\n\r\n  getConnection() {\r\n    const corePool = this.pool;\r\n    return new this.Promise((resolve, reject) => {\r\n      corePool.getConnection((err, coreConnection) => {\r\n        if (err) {\r\n          reject(err);\r\n        } else {\r\n          resolve(new PromisePoolConnection(coreConnection, this.Promise));\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  releaseConnection(connection) {\r\n    if (connection instanceof PromisePoolConnection) connection.release();\r\n  }\r\n\r\n  query(sql, args) {\r\n    const corePool = this.pool;\r\n    const localErr = new Error();\r\n    if (typeof args === 'function') {\r\n      throw new Error(\r\n        'Callback function is not available with promise clients.'\r\n      );\r\n    }\r\n    return new this.Promise((resolve, reject) => {\r\n      const done = makeDoneCb(resolve, reject, localErr);\r\n      if (args !== undefined) {\r\n        corePool.query(sql, args, done);\r\n      } else {\r\n        corePool.query(sql, done);\r\n      }\r\n    });\r\n  }\r\n\r\n  execute(sql, args) {\r\n    const corePool = this.pool;\r\n    const localErr = new Error();\r\n    if (typeof args === 'function') {\r\n      throw new Error(\r\n        'Callback function is not available with promise clients.'\r\n      );\r\n    }\r\n    return new this.Promise((resolve, reject) => {\r\n      const done = makeDoneCb(resolve, reject, localErr);\r\n      if (args) {\r\n        corePool.execute(sql, args, done);\r\n      } else {\r\n        corePool.execute(sql, done);\r\n      }\r\n    });\r\n  }\r\n\r\n  end() {\r\n    const corePool = this.pool;\r\n    const localErr = new Error();\r\n    return new this.Promise((resolve, reject) => {\r\n      corePool.end((err) => {\r\n        if (err) {\r\n          localErr.message = err.message;\r\n          localErr.code = err.code;\r\n          localErr.errno = err.errno;\r\n          localErr.sqlState = err.sqlState;\r\n          localErr.sqlMessage = err.sqlMessage;\r\n          reject(localErr);\r\n        } else {\r\n          resolve();\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\n(function (functionsToWrap) {\r\n  for (let i = 0; functionsToWrap && i < functionsToWrap.length; i++) {\r\n    const func = functionsToWrap[i];\r\n\r\n    if (\r\n      typeof BasePool.prototype[func] === 'function' &&\r\n      PromisePool.prototype[func] === undefined\r\n    ) {\r\n      PromisePool.prototype[func] = (function factory(funcName) {\r\n        return function () {\r\n          return BasePool.prototype[funcName].apply(this.pool, arguments);\r\n        };\r\n      })(func);\r\n    }\r\n  }\r\n})([\r\n  // synchronous functions\r\n  'escape',\r\n  'escapeId',\r\n  'format',\r\n]);\r\n\r\nmodule.exports = PromisePool;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcHJvbWlzZS9wb29sLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSxxQkFBcUIsMERBQThCO0FBQ25ELG1CQUFtQixtQkFBTyxDQUFDLHlGQUFtQjtBQUM5Qyw4QkFBOEIsbUJBQU8sQ0FBQywrRkFBc0I7QUFDNUQsc0JBQXNCLG1CQUFPLENBQUMsNkZBQXFCO0FBQ25ELGlCQUFpQixtQkFBTyxDQUFDLDRFQUFpQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsK0NBQStDO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcHJvbWlzZS9wb29sLmpzPzY0MWEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxuY29uc3QgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyO1xyXG5jb25zdCBtYWtlRG9uZUNiID0gcmVxdWlyZSgnLi9tYWtlX2RvbmVfY2IuanMnKTtcclxuY29uc3QgUHJvbWlzZVBvb2xDb25uZWN0aW9uID0gcmVxdWlyZSgnLi9wb29sX2Nvbm5lY3Rpb24uanMnKTtcclxuY29uc3QgaW5oZXJpdEV2ZW50cyA9IHJlcXVpcmUoJy4vaW5oZXJpdF9ldmVudHMuanMnKTtcclxuY29uc3QgQmFzZVBvb2wgPSByZXF1aXJlKCcuLi9iYXNlL3Bvb2wuanMnKTtcclxuXHJcbmNsYXNzIFByb21pc2VQb29sIGV4dGVuZHMgRXZlbnRFbWl0dGVyIHtcclxuICBjb25zdHJ1Y3Rvcihwb29sLCB0aGVQcm9taXNlKSB7XHJcbiAgICBzdXBlcigpO1xyXG4gICAgdGhpcy5wb29sID0gcG9vbDtcclxuICAgIHRoaXMuUHJvbWlzZSA9IHRoZVByb21pc2UgfHwgUHJvbWlzZTtcclxuICAgIGluaGVyaXRFdmVudHMocG9vbCwgdGhpcywgWydhY3F1aXJlJywgJ2Nvbm5lY3Rpb24nLCAnZW5xdWV1ZScsICdyZWxlYXNlJ10pO1xyXG4gIH1cclxuXHJcbiAgZ2V0Q29ubmVjdGlvbigpIHtcclxuICAgIGNvbnN0IGNvcmVQb29sID0gdGhpcy5wb29sO1xyXG4gICAgcmV0dXJuIG5ldyB0aGlzLlByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICBjb3JlUG9vbC5nZXRDb25uZWN0aW9uKChlcnIsIGNvcmVDb25uZWN0aW9uKSA9PiB7XHJcbiAgICAgICAgaWYgKGVycikge1xyXG4gICAgICAgICAgcmVqZWN0KGVycik7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHJlc29sdmUobmV3IFByb21pc2VQb29sQ29ubmVjdGlvbihjb3JlQ29ubmVjdGlvbiwgdGhpcy5Qcm9taXNlKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgcmVsZWFzZUNvbm5lY3Rpb24oY29ubmVjdGlvbikge1xyXG4gICAgaWYgKGNvbm5lY3Rpb24gaW5zdGFuY2VvZiBQcm9taXNlUG9vbENvbm5lY3Rpb24pIGNvbm5lY3Rpb24ucmVsZWFzZSgpO1xyXG4gIH1cclxuXHJcbiAgcXVlcnkoc3FsLCBhcmdzKSB7XHJcbiAgICBjb25zdCBjb3JlUG9vbCA9IHRoaXMucG9vbDtcclxuICAgIGNvbnN0IGxvY2FsRXJyID0gbmV3IEVycm9yKCk7XHJcbiAgICBpZiAodHlwZW9mIGFyZ3MgPT09ICdmdW5jdGlvbicpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKFxyXG4gICAgICAgICdDYWxsYmFjayBmdW5jdGlvbiBpcyBub3QgYXZhaWxhYmxlIHdpdGggcHJvbWlzZSBjbGllbnRzLidcclxuICAgICAgKTtcclxuICAgIH1cclxuICAgIHJldHVybiBuZXcgdGhpcy5Qcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgY29uc3QgZG9uZSA9IG1ha2VEb25lQ2IocmVzb2x2ZSwgcmVqZWN0LCBsb2NhbEVycik7XHJcbiAgICAgIGlmIChhcmdzICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICBjb3JlUG9vbC5xdWVyeShzcWwsIGFyZ3MsIGRvbmUpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGNvcmVQb29sLnF1ZXJ5KHNxbCwgZG9uZSk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZXhlY3V0ZShzcWwsIGFyZ3MpIHtcclxuICAgIGNvbnN0IGNvcmVQb29sID0gdGhpcy5wb29sO1xyXG4gICAgY29uc3QgbG9jYWxFcnIgPSBuZXcgRXJyb3IoKTtcclxuICAgIGlmICh0eXBlb2YgYXJncyA9PT0gJ2Z1bmN0aW9uJykge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXHJcbiAgICAgICAgJ0NhbGxiYWNrIGZ1bmN0aW9uIGlzIG5vdCBhdmFpbGFibGUgd2l0aCBwcm9taXNlIGNsaWVudHMuJ1xyXG4gICAgICApO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIG5ldyB0aGlzLlByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICBjb25zdCBkb25lID0gbWFrZURvbmVDYihyZXNvbHZlLCByZWplY3QsIGxvY2FsRXJyKTtcclxuICAgICAgaWYgKGFyZ3MpIHtcclxuICAgICAgICBjb3JlUG9vbC5leGVjdXRlKHNxbCwgYXJncywgZG9uZSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgY29yZVBvb2wuZXhlY3V0ZShzcWwsIGRvbmUpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGVuZCgpIHtcclxuICAgIGNvbnN0IGNvcmVQb29sID0gdGhpcy5wb29sO1xyXG4gICAgY29uc3QgbG9jYWxFcnIgPSBuZXcgRXJyb3IoKTtcclxuICAgIHJldHVybiBuZXcgdGhpcy5Qcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgY29yZVBvb2wuZW5kKChlcnIpID0+IHtcclxuICAgICAgICBpZiAoZXJyKSB7XHJcbiAgICAgICAgICBsb2NhbEVyci5tZXNzYWdlID0gZXJyLm1lc3NhZ2U7XHJcbiAgICAgICAgICBsb2NhbEVyci5jb2RlID0gZXJyLmNvZGU7XHJcbiAgICAgICAgICBsb2NhbEVyci5lcnJubyA9IGVyci5lcnJubztcclxuICAgICAgICAgIGxvY2FsRXJyLnNxbFN0YXRlID0gZXJyLnNxbFN0YXRlO1xyXG4gICAgICAgICAgbG9jYWxFcnIuc3FsTWVzc2FnZSA9IGVyci5zcWxNZXNzYWdlO1xyXG4gICAgICAgICAgcmVqZWN0KGxvY2FsRXJyKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgcmVzb2x2ZSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuXHJcbihmdW5jdGlvbiAoZnVuY3Rpb25zVG9XcmFwKSB7XHJcbiAgZm9yIChsZXQgaSA9IDA7IGZ1bmN0aW9uc1RvV3JhcCAmJiBpIDwgZnVuY3Rpb25zVG9XcmFwLmxlbmd0aDsgaSsrKSB7XHJcbiAgICBjb25zdCBmdW5jID0gZnVuY3Rpb25zVG9XcmFwW2ldO1xyXG5cclxuICAgIGlmIChcclxuICAgICAgdHlwZW9mIEJhc2VQb29sLnByb3RvdHlwZVtmdW5jXSA9PT0gJ2Z1bmN0aW9uJyAmJlxyXG4gICAgICBQcm9taXNlUG9vbC5wcm90b3R5cGVbZnVuY10gPT09IHVuZGVmaW5lZFxyXG4gICAgKSB7XHJcbiAgICAgIFByb21pc2VQb29sLnByb3RvdHlwZVtmdW5jXSA9IChmdW5jdGlvbiBmYWN0b3J5KGZ1bmNOYW1lKSB7XHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgIHJldHVybiBCYXNlUG9vbC5wcm90b3R5cGVbZnVuY05hbWVdLmFwcGx5KHRoaXMucG9vbCwgYXJndW1lbnRzKTtcclxuICAgICAgICB9O1xyXG4gICAgICB9KShmdW5jKTtcclxuICAgIH1cclxuICB9XHJcbn0pKFtcclxuICAvLyBzeW5jaHJvbm91cyBmdW5jdGlvbnNcclxuICAnZXNjYXBlJyxcclxuICAnZXNjYXBlSWQnLFxyXG4gICdmb3JtYXQnLFxyXG5dKTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gUHJvbWlzZVBvb2w7XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/promise/pool.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/promise/pool_cluster.js":
/*!*********************************************************!*\
  !*** ./node_modules/mysql2/lib/promise/pool_cluster.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\nconst PromisePoolConnection = __webpack_require__(/*! ./pool_connection */ \"(middleware)/./node_modules/mysql2/lib/promise/pool_connection.js\");\r\nconst makeDoneCb = __webpack_require__(/*! ./make_done_cb */ \"(middleware)/./node_modules/mysql2/lib/promise/make_done_cb.js\");\r\n\r\nclass PromisePoolNamespace {\r\n  constructor(poolNamespace, thePromise) {\r\n    this.poolNamespace = poolNamespace;\r\n    this.Promise = thePromise || Promise;\r\n  }\r\n\r\n  getConnection() {\r\n    const corePoolNamespace = this.poolNamespace;\r\n    return new this.Promise((resolve, reject) => {\r\n      corePoolNamespace.getConnection((err, coreConnection) => {\r\n        if (err) {\r\n          reject(err);\r\n        } else {\r\n          resolve(new PromisePoolConnection(coreConnection, this.Promise));\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  query(sql, values) {\r\n    const corePoolNamespace = this.poolNamespace;\r\n    const localErr = new Error();\r\n    if (typeof values === 'function') {\r\n      throw new Error(\r\n        'Callback function is not available with promise clients.'\r\n      );\r\n    }\r\n    return new this.Promise((resolve, reject) => {\r\n      const done = makeDoneCb(resolve, reject, localErr);\r\n      corePoolNamespace.query(sql, values, done);\r\n    });\r\n  }\r\n\r\n  execute(sql, values) {\r\n    const corePoolNamespace = this.poolNamespace;\r\n    const localErr = new Error();\r\n    if (typeof values === 'function') {\r\n      throw new Error(\r\n        'Callback function is not available with promise clients.'\r\n      );\r\n    }\r\n    return new this.Promise((resolve, reject) => {\r\n      const done = makeDoneCb(resolve, reject, localErr);\r\n      corePoolNamespace.execute(sql, values, done);\r\n    });\r\n  }\r\n}\r\n\r\nmodule.exports = PromisePoolNamespace;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcHJvbWlzZS9wb29sX2NsdXN0ZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDhCQUE4QixtQkFBTyxDQUFDLDRGQUFtQjtBQUN6RCxtQkFBbUIsbUJBQU8sQ0FBQyxzRkFBZ0I7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcHJvbWlzZS9wb29sX2NsdXN0ZXIuanM/NjZiMCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG5jb25zdCBQcm9taXNlUG9vbENvbm5lY3Rpb24gPSByZXF1aXJlKCcuL3Bvb2xfY29ubmVjdGlvbicpO1xyXG5jb25zdCBtYWtlRG9uZUNiID0gcmVxdWlyZSgnLi9tYWtlX2RvbmVfY2InKTtcclxuXHJcbmNsYXNzIFByb21pc2VQb29sTmFtZXNwYWNlIHtcclxuICBjb25zdHJ1Y3Rvcihwb29sTmFtZXNwYWNlLCB0aGVQcm9taXNlKSB7XHJcbiAgICB0aGlzLnBvb2xOYW1lc3BhY2UgPSBwb29sTmFtZXNwYWNlO1xyXG4gICAgdGhpcy5Qcm9taXNlID0gdGhlUHJvbWlzZSB8fCBQcm9taXNlO1xyXG4gIH1cclxuXHJcbiAgZ2V0Q29ubmVjdGlvbigpIHtcclxuICAgIGNvbnN0IGNvcmVQb29sTmFtZXNwYWNlID0gdGhpcy5wb29sTmFtZXNwYWNlO1xyXG4gICAgcmV0dXJuIG5ldyB0aGlzLlByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICBjb3JlUG9vbE5hbWVzcGFjZS5nZXRDb25uZWN0aW9uKChlcnIsIGNvcmVDb25uZWN0aW9uKSA9PiB7XHJcbiAgICAgICAgaWYgKGVycikge1xyXG4gICAgICAgICAgcmVqZWN0KGVycik7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHJlc29sdmUobmV3IFByb21pc2VQb29sQ29ubmVjdGlvbihjb3JlQ29ubmVjdGlvbiwgdGhpcy5Qcm9taXNlKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgcXVlcnkoc3FsLCB2YWx1ZXMpIHtcclxuICAgIGNvbnN0IGNvcmVQb29sTmFtZXNwYWNlID0gdGhpcy5wb29sTmFtZXNwYWNlO1xyXG4gICAgY29uc3QgbG9jYWxFcnIgPSBuZXcgRXJyb3IoKTtcclxuICAgIGlmICh0eXBlb2YgdmFsdWVzID09PSAnZnVuY3Rpb24nKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcihcclxuICAgICAgICAnQ2FsbGJhY2sgZnVuY3Rpb24gaXMgbm90IGF2YWlsYWJsZSB3aXRoIHByb21pc2UgY2xpZW50cy4nXHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gbmV3IHRoaXMuUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcbiAgICAgIGNvbnN0IGRvbmUgPSBtYWtlRG9uZUNiKHJlc29sdmUsIHJlamVjdCwgbG9jYWxFcnIpO1xyXG4gICAgICBjb3JlUG9vbE5hbWVzcGFjZS5xdWVyeShzcWwsIHZhbHVlcywgZG9uZSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGV4ZWN1dGUoc3FsLCB2YWx1ZXMpIHtcclxuICAgIGNvbnN0IGNvcmVQb29sTmFtZXNwYWNlID0gdGhpcy5wb29sTmFtZXNwYWNlO1xyXG4gICAgY29uc3QgbG9jYWxFcnIgPSBuZXcgRXJyb3IoKTtcclxuICAgIGlmICh0eXBlb2YgdmFsdWVzID09PSAnZnVuY3Rpb24nKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcihcclxuICAgICAgICAnQ2FsbGJhY2sgZnVuY3Rpb24gaXMgbm90IGF2YWlsYWJsZSB3aXRoIHByb21pc2UgY2xpZW50cy4nXHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gbmV3IHRoaXMuUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcbiAgICAgIGNvbnN0IGRvbmUgPSBtYWtlRG9uZUNiKHJlc29sdmUsIHJlamVjdCwgbG9jYWxFcnIpO1xyXG4gICAgICBjb3JlUG9vbE5hbWVzcGFjZS5leGVjdXRlKHNxbCwgdmFsdWVzLCBkb25lKTtcclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBQcm9taXNlUG9vbE5hbWVzcGFjZTtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/promise/pool_cluster.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/promise/pool_connection.js":
/*!************************************************************!*\
  !*** ./node_modules/mysql2/lib/promise/pool_connection.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\nconst PromiseConnection = __webpack_require__(/*! ./connection.js */ \"(middleware)/./node_modules/mysql2/lib/promise/connection.js\");\r\nconst BasePoolConnection = __webpack_require__(/*! ../base/pool_connection.js */ \"(middleware)/./node_modules/mysql2/lib/base/pool_connection.js\");\r\n\r\nclass PromisePoolConnection extends PromiseConnection {\r\n  constructor(connection, promiseImpl) {\r\n    super(connection, promiseImpl);\r\n  }\r\n\r\n  destroy() {\r\n    return BasePoolConnection.prototype.destroy.apply(\r\n      this.connection,\r\n      arguments\r\n    );\r\n  }\r\n}\r\n\r\nmodule.exports = PromisePoolConnection;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcHJvbWlzZS9wb29sX2Nvbm5lY3Rpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDBCQUEwQixtQkFBTyxDQUFDLHFGQUFpQjtBQUNuRCwyQkFBMkIsbUJBQU8sQ0FBQyxrR0FBNEI7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL3Byb21pc2UvcG9vbF9jb25uZWN0aW9uLmpzPzAzZGEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxuY29uc3QgUHJvbWlzZUNvbm5lY3Rpb24gPSByZXF1aXJlKCcuL2Nvbm5lY3Rpb24uanMnKTtcclxuY29uc3QgQmFzZVBvb2xDb25uZWN0aW9uID0gcmVxdWlyZSgnLi4vYmFzZS9wb29sX2Nvbm5lY3Rpb24uanMnKTtcclxuXHJcbmNsYXNzIFByb21pc2VQb29sQ29ubmVjdGlvbiBleHRlbmRzIFByb21pc2VDb25uZWN0aW9uIHtcclxuICBjb25zdHJ1Y3Rvcihjb25uZWN0aW9uLCBwcm9taXNlSW1wbCkge1xyXG4gICAgc3VwZXIoY29ubmVjdGlvbiwgcHJvbWlzZUltcGwpO1xyXG4gIH1cclxuXHJcbiAgZGVzdHJveSgpIHtcclxuICAgIHJldHVybiBCYXNlUG9vbENvbm5lY3Rpb24ucHJvdG90eXBlLmRlc3Ryb3kuYXBwbHkoXHJcbiAgICAgIHRoaXMuY29ubmVjdGlvbixcclxuICAgICAgYXJndW1lbnRzXHJcbiAgICApO1xyXG4gIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBQcm9taXNlUG9vbENvbm5lY3Rpb247XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/promise/pool_connection.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/lib/promise/prepared_statement_info.js":
/*!********************************************************************!*\
  !*** ./node_modules/mysql2/lib/promise/prepared_statement_info.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\nconst makeDoneCb = __webpack_require__(/*! ./make_done_cb.js */ \"(middleware)/./node_modules/mysql2/lib/promise/make_done_cb.js\");\r\n\r\nclass PromisePreparedStatementInfo {\r\n  constructor(statement, promiseImpl) {\r\n    this.statement = statement;\r\n    this.Promise = promiseImpl;\r\n  }\r\n\r\n  execute(parameters) {\r\n    const s = this.statement;\r\n    const localErr = new Error();\r\n    return new this.Promise((resolve, reject) => {\r\n      const done = makeDoneCb(resolve, reject, localErr);\r\n      if (parameters) {\r\n        s.execute(parameters, done);\r\n      } else {\r\n        s.execute(done);\r\n      }\r\n    });\r\n  }\r\n\r\n  close() {\r\n    return new this.Promise((resolve) => {\r\n      this.statement.close();\r\n      resolve();\r\n    });\r\n  }\r\n}\r\n\r\nmodule.exports = PromisePreparedStatementInfo;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcHJvbWlzZS9wcmVwYXJlZF9zdGF0ZW1lbnRfaW5mby5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsbUJBQW1CLG1CQUFPLENBQUMseUZBQW1CO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcHJvbWlzZS9wcmVwYXJlZF9zdGF0ZW1lbnRfaW5mby5qcz8zZDA4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuXHJcbmNvbnN0IG1ha2VEb25lQ2IgPSByZXF1aXJlKCcuL21ha2VfZG9uZV9jYi5qcycpO1xyXG5cclxuY2xhc3MgUHJvbWlzZVByZXBhcmVkU3RhdGVtZW50SW5mbyB7XHJcbiAgY29uc3RydWN0b3Ioc3RhdGVtZW50LCBwcm9taXNlSW1wbCkge1xyXG4gICAgdGhpcy5zdGF0ZW1lbnQgPSBzdGF0ZW1lbnQ7XHJcbiAgICB0aGlzLlByb21pc2UgPSBwcm9taXNlSW1wbDtcclxuICB9XHJcblxyXG4gIGV4ZWN1dGUocGFyYW1ldGVycykge1xyXG4gICAgY29uc3QgcyA9IHRoaXMuc3RhdGVtZW50O1xyXG4gICAgY29uc3QgbG9jYWxFcnIgPSBuZXcgRXJyb3IoKTtcclxuICAgIHJldHVybiBuZXcgdGhpcy5Qcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgY29uc3QgZG9uZSA9IG1ha2VEb25lQ2IocmVzb2x2ZSwgcmVqZWN0LCBsb2NhbEVycik7XHJcbiAgICAgIGlmIChwYXJhbWV0ZXJzKSB7XHJcbiAgICAgICAgcy5leGVjdXRlKHBhcmFtZXRlcnMsIGRvbmUpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHMuZXhlY3V0ZShkb25lKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBjbG9zZSgpIHtcclxuICAgIHJldHVybiBuZXcgdGhpcy5Qcm9taXNlKChyZXNvbHZlKSA9PiB7XHJcbiAgICAgIHRoaXMuc3RhdGVtZW50LmNsb3NlKCk7XHJcbiAgICAgIHJlc29sdmUoKTtcclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBQcm9taXNlUHJlcGFyZWRTdGF0ZW1lbnRJbmZvO1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/lib/promise/prepared_statement_info.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/promise.js":
/*!****************************************!*\
  !*** ./node_modules/mysql2/promise.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\nconst SqlString = __webpack_require__(/*! sqlstring */ \"(middleware)/./node_modules/sqlstring/index.js\");\r\nconst EventEmitter = (__webpack_require__(/*! events */ \"events\").EventEmitter);\r\nconst parserCache = __webpack_require__(/*! ./lib/parsers/parser_cache.js */ \"(middleware)/./node_modules/mysql2/lib/parsers/parser_cache.js\");\r\nconst PoolCluster = __webpack_require__(/*! ./lib/pool_cluster.js */ \"(middleware)/./node_modules/mysql2/lib/pool_cluster.js\");\r\nconst createConnection = __webpack_require__(/*! ./lib/create_connection.js */ \"(middleware)/./node_modules/mysql2/lib/create_connection.js\");\r\nconst createPool = __webpack_require__(/*! ./lib/create_pool.js */ \"(middleware)/./node_modules/mysql2/lib/create_pool.js\");\r\nconst createPoolCluster = __webpack_require__(/*! ./lib/create_pool_cluster.js */ \"(middleware)/./node_modules/mysql2/lib/create_pool_cluster.js\");\r\nconst PromiseConnection = __webpack_require__(/*! ./lib/promise/connection.js */ \"(middleware)/./node_modules/mysql2/lib/promise/connection.js\");\r\nconst PromisePool = __webpack_require__(/*! ./lib/promise/pool.js */ \"(middleware)/./node_modules/mysql2/lib/promise/pool.js\");\r\nconst makeDoneCb = __webpack_require__(/*! ./lib/promise/make_done_cb.js */ \"(middleware)/./node_modules/mysql2/lib/promise/make_done_cb.js\");\r\nconst PromisePoolConnection = __webpack_require__(/*! ./lib/promise/pool_connection.js */ \"(middleware)/./node_modules/mysql2/lib/promise/pool_connection.js\");\r\nconst inheritEvents = __webpack_require__(/*! ./lib/promise/inherit_events.js */ \"(middleware)/./node_modules/mysql2/lib/promise/inherit_events.js\");\r\nconst PromisePoolNamespace = __webpack_require__(/*! ./lib/promise/pool_cluster */ \"(middleware)/./node_modules/mysql2/lib/promise/pool_cluster.js\");\r\n\r\nfunction createConnectionPromise(opts) {\r\n  const coreConnection = createConnection(opts);\r\n  const createConnectionErr = new Error();\r\n  const thePromise = opts.Promise || Promise;\r\n  if (!thePromise) {\r\n    throw new Error(\r\n      'no Promise implementation available.' +\r\n        'Use promise-enabled node version or pass userland Promise' +\r\n        \" implementation as parameter, for example: { Promise: require('bluebird') }\"\r\n    );\r\n  }\r\n  return new thePromise((resolve, reject) => {\r\n    coreConnection.once('connect', () => {\r\n      resolve(new PromiseConnection(coreConnection, thePromise));\r\n    });\r\n    coreConnection.once('error', (err) => {\r\n      createConnectionErr.message = err.message;\r\n      createConnectionErr.code = err.code;\r\n      createConnectionErr.errno = err.errno;\r\n      createConnectionErr.sqlState = err.sqlState;\r\n      reject(createConnectionErr);\r\n    });\r\n  });\r\n}\r\n\r\n// note: the callback of \"changeUser\" is not called on success\r\n// hence there is no possibility to call \"resolve\"\r\n\r\nfunction createPromisePool(opts) {\r\n  const corePool = createPool(opts);\r\n  const thePromise = opts.Promise || Promise;\r\n  if (!thePromise) {\r\n    throw new Error(\r\n      'no Promise implementation available.' +\r\n        'Use promise-enabled node version or pass userland Promise' +\r\n        \" implementation as parameter, for example: { Promise: require('bluebird') }\"\r\n    );\r\n  }\r\n\r\n  return new PromisePool(corePool, thePromise);\r\n}\r\n\r\nclass PromisePoolCluster extends EventEmitter {\r\n  constructor(poolCluster, thePromise) {\r\n    super();\r\n    this.poolCluster = poolCluster;\r\n    this.Promise = thePromise || Promise;\r\n    inheritEvents(poolCluster, this, ['warn', 'remove', 'online', 'offline']);\r\n  }\r\n\r\n  getConnection(pattern, selector) {\r\n    const corePoolCluster = this.poolCluster;\r\n    return new this.Promise((resolve, reject) => {\r\n      corePoolCluster.getConnection(\r\n        pattern,\r\n        selector,\r\n        (err, coreConnection) => {\r\n          if (err) {\r\n            reject(err);\r\n          } else {\r\n            resolve(new PromisePoolConnection(coreConnection, this.Promise));\r\n          }\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  query(sql, args) {\r\n    const corePoolCluster = this.poolCluster;\r\n    const localErr = new Error();\r\n    if (typeof args === 'function') {\r\n      throw new Error(\r\n        'Callback function is not available with promise clients.'\r\n      );\r\n    }\r\n    return new this.Promise((resolve, reject) => {\r\n      const done = makeDoneCb(resolve, reject, localErr);\r\n      corePoolCluster.query(sql, args, done);\r\n    });\r\n  }\r\n\r\n  execute(sql, args) {\r\n    const corePoolCluster = this.poolCluster;\r\n    const localErr = new Error();\r\n    if (typeof args === 'function') {\r\n      throw new Error(\r\n        'Callback function is not available with promise clients.'\r\n      );\r\n    }\r\n    return new this.Promise((resolve, reject) => {\r\n      const done = makeDoneCb(resolve, reject, localErr);\r\n      corePoolCluster.execute(sql, args, done);\r\n    });\r\n  }\r\n\r\n  of(pattern, selector) {\r\n    return new PromisePoolNamespace(\r\n      this.poolCluster.of(pattern, selector),\r\n      this.Promise\r\n    );\r\n  }\r\n\r\n  end() {\r\n    const corePoolCluster = this.poolCluster;\r\n    const localErr = new Error();\r\n    return new this.Promise((resolve, reject) => {\r\n      corePoolCluster.end((err) => {\r\n        if (err) {\r\n          localErr.message = err.message;\r\n          localErr.code = err.code;\r\n          localErr.errno = err.errno;\r\n          localErr.sqlState = err.sqlState;\r\n          localErr.sqlMessage = err.sqlMessage;\r\n          reject(localErr);\r\n        } else {\r\n          resolve();\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * proxy poolCluster synchronous functions\r\n */\r\n(function (functionsToWrap) {\r\n  for (let i = 0; functionsToWrap && i < functionsToWrap.length; i++) {\r\n    const func = functionsToWrap[i];\r\n\r\n    if (\r\n      typeof PoolCluster.prototype[func] === 'function' &&\r\n      PromisePoolCluster.prototype[func] === undefined\r\n    ) {\r\n      PromisePoolCluster.prototype[func] = (function factory(funcName) {\r\n        return function () {\r\n          return PoolCluster.prototype[funcName].apply(\r\n            this.poolCluster,\r\n            arguments\r\n          );\r\n        };\r\n      })(func);\r\n    }\r\n  }\r\n})(['add', 'remove']);\r\n\r\nfunction createPromisePoolCluster(opts) {\r\n  const corePoolCluster = createPoolCluster(opts);\r\n  const thePromise = (opts && opts.Promise) || Promise;\r\n  if (!thePromise) {\r\n    throw new Error(\r\n      'no Promise implementation available.' +\r\n        'Use promise-enabled node version or pass userland Promise' +\r\n        \" implementation as parameter, for example: { Promise: require('bluebird') }\"\r\n    );\r\n  }\r\n  return new PromisePoolCluster(corePoolCluster, thePromise);\r\n}\r\n\r\nexports.createConnection = createConnectionPromise;\r\nexports.createPool = createPromisePool;\r\nexports.createPoolCluster = createPromisePoolCluster;\r\nexports.escape = SqlString.escape;\r\nexports.escapeId = SqlString.escapeId;\r\nexports.format = SqlString.format;\r\nexports.raw = SqlString.raw;\r\nexports.PromisePool = PromisePool;\r\nexports.PromiseConnection = PromiseConnection;\r\nexports.PromisePoolConnection = PromisePoolConnection;\r\n\r\nexports.__defineGetter__('Types', () => __webpack_require__(/*! ./lib/constants/types.js */ \"(middleware)/./node_modules/mysql2/lib/constants/types.js\"));\r\n\r\nexports.__defineGetter__('Charsets', () =>\r\n  __webpack_require__(/*! ./lib/constants/charsets.js */ \"(middleware)/./node_modules/mysql2/lib/constants/charsets.js\")\r\n);\r\n\r\nexports.__defineGetter__('CharsetToEncoding', () =>\r\n  __webpack_require__(/*! ./lib/constants/charset_encodings.js */ \"(middleware)/./node_modules/mysql2/lib/constants/charset_encodings.js\")\r\n);\r\n\r\nexports.setMaxParserCache = function (max) {\r\n  parserCache.setMaxCache(max);\r\n};\r\n\r\nexports.clearParserCache = function () {\r\n  parserCache.clearCache();\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/mysql2/promise.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/iconv-lite/encodings/tables/big5-added.json":
/*!******************************************************************!*\
  !*** ./node_modules/iconv-lite/encodings/tables/big5-added.json ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('[["8740","䏰䰲䘃䖦䕸𧉧䵷䖳𧲱䳢𧳅㮕䜶䝄䱇䱀𤊿𣘗𧍒𦺋𧃒䱗𪍑䝏䗚䲅𧱬䴇䪤䚡𦬣爥𥩔𡩣𣸆𣽡晍囻"],["8767","綕夝𨮹㷴霴𧯯寛𡵞媤㘥𩺰嫑宷峼杮薓𩥅瑡璝㡵𡵓𣚞𦀡㻬"],["87a1","𥣞㫵竼龗𤅡𨤍𣇪𠪊𣉞䌊蒄龖鐯䤰蘓墖靊鈘秐稲晠権袝瑌篅枂稬剏遆㓦珄𥶹瓆鿇垳䤯呌䄱𣚎堘穲𧭥讏䚮𦺈䆁𥶙箮𢒼鿈𢓁𢓉𢓌鿉蔄𣖻䂴鿊䓡𪷿拁灮鿋"],["8840","㇀",4,"𠄌㇅𠃑𠃍㇆㇇𠃋𡿨㇈𠃊㇉㇊㇋㇌𠄎㇍㇎ĀÁǍÀĒÉĚÈŌÓǑÒ࿿Ê̄Ế࿿Ê̌ỀÊāáǎàɑēéěèīíǐìōóǒòūúǔùǖǘǚ"],["88a1","ǜü࿿ê̄ế࿿ê̌ềêɡ⏚⏛"],["8940","𪎩𡅅"],["8943","攊"],["8946","丽滝鵎釟"],["894c","𧜵撑会伨侨兖兴农凤务动医华发变团声处备夲头学实実岚庆总斉柾栄桥济炼电纤纬纺织经统缆缷艺苏药视设询车轧轮"],["89a1","琑糼緍楆竉刧"],["89ab","醌碸酞肼"],["89b0","贋胶𠧧"],["89b5","肟黇䳍鷉鸌䰾𩷶𧀎鸊𪄳㗁"],["89c1","溚舾甙"],["89c5","䤑马骏龙禇𨑬𡷊𠗐𢫦两亁亀亇亿仫伷㑌侽㹈倃傈㑽㒓㒥円夅凛凼刅争剹劐匧㗇厩㕑厰㕓参吣㕭㕲㚁咓咣咴咹哐哯唘唣唨㖘唿㖥㖿嗗㗅"],["8a40","𧶄唥"],["8a43","𠱂𠴕𥄫喐𢳆㧬𠍁蹆𤶸𩓥䁓𨂾睺𢰸㨴䟕𨅝𦧲𤷪擝𠵼𠾴𠳕𡃴撍蹾𠺖𠰋𠽤𢲩𨉖𤓓"],["8a64","𠵆𩩍𨃩䟴𤺧𢳂骲㩧𩗴㿭㔆𥋇𩟔𧣈𢵄鵮頕"],["8a76","䏙𦂥撴哣𢵌𢯊𡁷㧻𡁯"],["8aa1","𦛚𦜖𧦠擪𥁒𠱃蹨𢆡𨭌𠜱"],["8aac","䠋𠆩㿺塳𢶍"],["8ab2","𤗈𠓼𦂗𠽌𠶖啹䂻䎺"],["8abb","䪴𢩦𡂝膪飵𠶜捹㧾𢝵跀嚡摼㹃"],["8ac9","𪘁𠸉𢫏𢳉"],["8ace","𡃈𣧂㦒㨆𨊛㕸𥹉𢃇噒𠼱𢲲𩜠㒼氽𤸻"],["8adf","𧕴𢺋𢈈𪙛𨳍𠹺𠰴𦠜羓𡃏𢠃𢤹㗻𥇣𠺌𠾍𠺪㾓𠼰𠵇𡅏𠹌"],["8af6","𠺫𠮩𠵈𡃀𡄽㿹𢚖搲𠾭"],["8b40","𣏴𧘹𢯎𠵾𠵿𢱑𢱕㨘𠺘𡃇𠼮𪘲𦭐𨳒𨶙𨳊閪哌苄喹"],["8b55","𩻃鰦骶𧝞𢷮煀腭胬尜𦕲脴㞗卟𨂽醶𠻺𠸏𠹷𠻻㗝𤷫㘉𠳖嚯𢞵𡃉𠸐𠹸𡁸𡅈𨈇𡑕𠹹𤹐𢶤婔𡀝𡀞𡃵𡃶垜𠸑"],["8ba1","𧚔𨋍𠾵𠹻𥅾㜃𠾶𡆀𥋘𪊽𤧚𡠺𤅷𨉼墙剨㘚𥜽箲孨䠀䬬鼧䧧鰟鮍𥭴𣄽嗻㗲嚉丨夂𡯁屮靑𠂆乛亻㔾尣彑忄㣺扌攵歺氵氺灬爫丬犭𤣩罒礻糹罓𦉪㓁"],["8bde","𦍋耂肀𦘒𦥑卝衤见𧢲讠贝钅镸长门𨸏韦页风飞饣𩠐鱼鸟黄歯龜丷𠂇阝户钢"],["8c40","倻淾𩱳龦㷉袏𤅎灷峵䬠𥇍㕙𥴰愢𨨲辧釶熑朙玺𣊁𪄇㲋𡦀䬐磤琂冮𨜏䀉橣𪊺䈣蘏𠩯稪𩥇𨫪靕灍匤𢁾鏴盙𨧣龧矝亣俰傼丯众龨吴綋墒壐𡶶庒庙忂𢜒斋"],["8ca1","𣏹椙橃𣱣泿"],["8ca7","爀𤔅玌㻛𤨓嬕璹讃𥲤𥚕窓篬糃繬苸薗龩袐龪躹龫迏蕟駠鈡龬𨶹𡐿䁱䊢娚"],["8cc9","顨杫䉶圽"],["8cce","藖𤥻芿𧄍䲁𦵴嵻𦬕𦾾龭龮宖龯曧繛湗秊㶈䓃𣉖𢞖䎚䔶"],["8ce6","峕𣬚諹屸㴒𣕑嵸龲煗䕘𤃬𡸣䱷㥸㑊𠆤𦱁諌侴𠈹妿腬顖𩣺弻"],["8d40","𠮟"],["8d42","𢇁𨥭䄂䚻𩁹㼇龳𪆵䃸㟖䛷𦱆䅼𨚲𧏿䕭㣔𥒚䕡䔛䶉䱻䵶䗪㿈𤬏㙡䓞䒽䇭崾嵈嵖㷼㠏嶤嶹㠠㠸幂庽弥徃㤈㤔㤿㥍惗愽峥㦉憷憹懏㦸戬抐拥挘㧸嚱"],["8da1","㨃揢揻搇摚㩋擀崕嘡龟㪗斆㪽旿晓㫲暒㬢朖㭂枤栀㭘桊梄㭲㭱㭻椉楃牜楤榟榅㮼槖㯝橥橴橱檂㯬檙㯲檫檵櫔櫶殁毁毪汵沪㳋洂洆洦涁㳯涤涱渕渘温溆𨧀溻滢滚齿滨滩漤漴㵆𣽁澁澾㵪㵵熷岙㶊瀬㶑灐灔灯灿炉𠌥䏁㗱𠻘"],["8e40","𣻗垾𦻓焾𥟠㙎榢𨯩孴穉𥣡𩓙穥穽𥦬窻窰竂竃燑𦒍䇊竚竝竪䇯咲𥰁笋筕笩𥌎𥳾箢筯莜𥮴𦱿篐萡箒箸𥴠㶭𥱥蒒篺簆簵𥳁籄粃𤢂粦晽𤕸糉糇糦籴糳糵糎"],["8ea1","繧䔝𦹄絝𦻖璍綉綫焵綳緒𤁗𦀩緤㴓緵𡟹緥𨍭縝𦄡𦅚繮纒䌫鑬縧罀罁罇礶𦋐駡羗𦍑羣𡙡𠁨䕜𣝦䔃𨌺翺𦒉者耈耝耨耯𪂇𦳃耻耼聡𢜔䦉𦘦𣷣𦛨朥肧𨩈脇脚墰𢛶汿𦒘𤾸擧𡒊舘𡡞橓𤩥𤪕䑺舩𠬍𦩒𣵾俹𡓽蓢荢𦬊𤦧𣔰𡝳𣷸芪椛芳䇛"],["8f40","蕋苐茚𠸖𡞴㛁𣅽𣕚艻苢茘𣺋𦶣𦬅𦮗𣗎㶿茝嗬莅䔋𦶥莬菁菓㑾𦻔橗蕚㒖𦹂𢻯葘𥯤葱㷓䓤檧葊𣲵祘蒨𦮖𦹷𦹃蓞萏莑䒠蒓蓤𥲑䉀𥳀䕃蔴嫲𦺙䔧蕳䔖枿蘖"],["8fa1","𨘥𨘻藁𧂈蘂𡖂𧃍䕫䕪蘨㙈𡢢号𧎚虾蝱𪃸蟮𢰧螱蟚蠏噡虬桖䘏衅衆𧗠𣶹𧗤衞袜䙛袴袵揁装睷𧜏覇覊覦覩覧覼𨨥觧𧤤𧪽誜瞓釾誐𧩙竩𧬺𣾏䜓𧬸煼謌謟𥐰𥕥謿譌譍誩𤩺讐讛誯𡛟䘕衏貛𧵔𧶏貫㜥𧵓賖𧶘𧶽贒贃𡤐賛灜贑𤳉㻐起"],["9040","趩𨀂𡀔𤦊㭼𨆼𧄌竧躭躶軃鋔輙輭𨍥𨐒辥錃𪊟𠩐辳䤪𨧞𨔽𣶻廸𣉢迹𪀔𨚼𨔁𢌥㦀𦻗逷𨔼𧪾遡𨕬𨘋邨𨜓郄𨛦邮都酧㫰醩釄粬𨤳𡺉鈎沟鉁鉢𥖹銹𨫆𣲛𨬌𥗛"],["90a1","𠴱錬鍫𨫡𨯫炏嫃𨫢𨫥䥥鉄𨯬𨰹𨯿鍳鑛躼閅閦鐦閠濶䊹𢙺𨛘𡉼𣸮䧟氜陻隖䅬隣𦻕懚隶磵𨫠隽双䦡𦲸𠉴𦐐𩂯𩃥𤫑𡤕𣌊霱虂霶䨏䔽䖅𤫩灵孁霛靜𩇕靗孊𩇫靟鐥僐𣂷𣂼鞉鞟鞱鞾韀韒韠𥑬韮琜𩐳響韵𩐝𧥺䫑頴頳顋顦㬎𧅵㵑𠘰𤅜"],["9140","𥜆飊颷飈飇䫿𦴧𡛓喰飡飦飬鍸餹𤨩䭲𩡗𩤅駵騌騻騐驘𥜥㛄𩂱𩯕髠髢𩬅髴䰎鬔鬭𨘀倴鬴𦦨㣃𣁽魐魀𩴾婅𡡣鮎𤉋鰂鯿鰌𩹨鷔𩾷𪆒𪆫𪃡𪄣𪇟鵾鶃𪄴鸎梈"],["91a1","鷄𢅛𪆓𪈠𡤻𪈳鴹𪂹𪊴麐麕麞麢䴴麪麯𤍤黁㭠㧥㴝伲㞾𨰫鼂鼈䮖鐤𦶢鼗鼖鼹嚟嚊齅馸𩂋韲葿齢齩竜龎爖䮾𤥵𤦻煷𤧸𤍈𤩑玞𨯚𡣺禟𨥾𨸶鍩鏳𨩄鋬鎁鏋𨥬𤒹爗㻫睲穃烐𤑳𤏸煾𡟯炣𡢾𣖙㻇𡢅𥐯𡟸㜢𡛻𡠹㛡𡝴𡣑𥽋㜣𡛀坛𤨥𡏾𡊨"],["9240","𡏆𡒶蔃𣚦蔃葕𤦔𧅥𣸱𥕜𣻻𧁒䓴𣛮𩦝𦼦柹㜳㰕㷧塬𡤢栐䁗𣜿𤃡𤂋𤄏𦰡哋嚞𦚱嚒𠿟𠮨𠸍鏆𨬓鎜仸儫㠙𤐶亼𠑥𠍿佋侊𥙑婨𠆫𠏋㦙𠌊𠐔㐵伩𠋀𨺳𠉵諚𠈌亘"],["92a1","働儍侢伃𤨎𣺊佂倮偬傁俌俥偘僼兙兛兝兞湶𣖕𣸹𣺿浲𡢄𣺉冨凃𠗠䓝𠒣𠒒𠒑赺𨪜𠜎剙劤𠡳勡鍮䙺熌𤎌𠰠𤦬𡃤槑𠸝瑹㻞璙琔瑖玘䮎𤪼𤂍叐㖄爏𤃉喴𠍅响𠯆圝鉝雴鍦埝垍坿㘾壋媙𨩆𡛺𡝯𡜐娬妸銏婾嫏娒𥥆𡧳𡡡𤊕㛵洅瑃娡𥺃"],["9340","媁𨯗𠐓鏠璌𡌃焅䥲鐈𨧻鎽㞠尞岞幞幈𡦖𡥼𣫮廍孏𡤃𡤄㜁𡢠㛝𡛾㛓脪𨩇𡶺𣑲𨦨弌弎𡤧𡞫婫𡜻孄蘔𧗽衠恾𢡠𢘫忛㺸𢖯𢖾𩂈𦽳懀𠀾𠁆𢘛憙憘恵𢲛𢴇𤛔𩅍"],["93a1","摱𤙥𢭪㨩𢬢𣑐𩣪𢹸挷𪑛撶挱揑𤧣𢵧护𢲡搻敫楲㯴𣂎𣊭𤦉𣊫唍𣋠𡣙𩐿曎𣊉𣆳㫠䆐𥖄𨬢𥖏𡛼𥕛𥐥磮𣄃𡠪𣈴㑤𣈏𣆂𤋉暎𦴤晫䮓昰𧡰𡷫晣𣋒𣋡昞𥡲㣑𣠺𣞼㮙𣞢𣏾瓐㮖枏𤘪梶栞㯄檾㡣𣟕𤒇樳橒櫉欅𡤒攑梘橌㯗橺歗𣿀𣲚鎠鋲𨯪𨫋"],["9440","銉𨀞𨧜鑧涥漋𤧬浧𣽿㶏渄𤀼娽渊塇洤硂焻𤌚𤉶烱牐犇犔𤞏𤜥兹𤪤𠗫瑺𣻸𣙟𤩊𤤗𥿡㼆㺱𤫟𨰣𣼵悧㻳瓌琼鎇琷䒟𦷪䕑疃㽣𤳙𤴆㽘畕癳𪗆㬙瑨𨫌𤦫𤦎㫻"],["94a1","㷍𤩎㻿𤧅𤣳釺圲鍂𨫣𡡤僟𥈡𥇧睸𣈲眎眏睻𤚗𣞁㩞𤣰琸璛㺿𤪺𤫇䃈𤪖𦆮錇𥖁砞碍碈磒珐祙𧝁𥛣䄎禛蒖禥樭𣻺稺秴䅮𡛦䄲鈵秱𠵌𤦌𠊙𣶺𡝮㖗啫㕰㚪𠇔𠰍竢婙𢛵𥪯𥪜娍𠉛磰娪𥯆竾䇹籝籭䈑𥮳𥺼𥺦糍𤧹𡞰粎籼粮檲緜縇緓罎𦉡"],["9540","𦅜𧭈綗𥺂䉪𦭵𠤖柖𠁎𣗏埄𦐒𦏸𤥢翝笧𠠬𥫩𥵃笌𥸎駦虅驣樜𣐿㧢𤧷𦖭騟𦖠蒀𧄧𦳑䓪脷䐂胆脉腂𦞴飃𦩂艢艥𦩑葓𦶧蘐𧈛媆䅿𡡀嬫𡢡嫤𡣘蚠蜨𣶏蠭𧐢娂"],["95a1","衮佅袇袿裦襥襍𥚃襔𧞅𧞄𨯵𨯙𨮜𨧹㺭蒣䛵䛏㟲訽訜𩑈彍鈫𤊄旔焩烄𡡅鵭貟賩𧷜妚矃姰䍮㛔踪躧𤰉輰轊䋴汘澻𢌡䢛潹溋𡟚鯩㚵𤤯邻邗啱䤆醻鐄𨩋䁢𨫼鐧𨰝𨰻蓥訫閙閧閗閖𨴴瑅㻂𤣿𤩂𤏪㻧𣈥随𨻧𨹦𨹥㻌𤧭𤩸𣿮琒瑫㻼靁𩂰"],["9640","桇䨝𩂓𥟟靝鍨𨦉𨰦𨬯𦎾銺嬑譩䤼珹𤈛鞛靱餸𠼦巁𨯅𤪲頟𩓚鋶𩗗釥䓀𨭐𤩧𨭤飜𨩅㼀鈪䤥萔餻饍𧬆㷽馛䭯馪驜𨭥𥣈檏騡嫾騯𩣱䮐𩥈馼䮽䮗鍽塲𡌂堢𤦸"],["96a1","𡓨硄𢜟𣶸棅㵽鑘㤧慐𢞁𢥫愇鱏鱓鱻鰵鰐魿鯏𩸭鮟𪇵𪃾鴡䲮𤄄鸘䲰鴌𪆴𪃭𪃳𩤯鶥蒽𦸒𦿟𦮂藼䔳𦶤𦺄𦷰萠藮𦸀𣟗𦁤秢𣖜𣙀䤭𤧞㵢鏛銾鍈𠊿碹鉷鑍俤㑀遤𥕝砽硔碶硋𡝗𣇉𤥁㚚佲濚濙瀞瀞吔𤆵垻壳垊鴖埗焴㒯𤆬燫𦱀𤾗嬨𡞵𨩉"],["9740","愌嫎娋䊼𤒈㜬䭻𨧼鎻鎸𡣖𠼝葲𦳀𡐓𤋺𢰦𤏁妔𣶷𦝁綨𦅛𦂤𤦹𤦋𨧺鋥珢㻩璴𨭣𡢟㻡𤪳櫘珳珻㻖𤨾𤪔𡟙𤩦𠎧𡐤𤧥瑈𤤖炥𤥶銄珦鍟𠓾錱𨫎𨨖鎆𨯧𥗕䤵𨪂煫"],["97a1","𤥃𠳿嚤𠘚𠯫𠲸唂秄𡟺緾𡛂𤩐𡡒䔮鐁㜊𨫀𤦭妰𡢿𡢃𧒄媡㛢𣵛㚰鉟婹𨪁𡡢鍴㳍𠪴䪖㦊僴㵩㵌𡎜煵䋻𨈘渏𩃤䓫浗𧹏灧沯㳖𣿭𣸭渂漌㵯𠏵畑㚼㓈䚀㻚䡱姄鉮䤾轁𨰜𦯀堒埈㛖𡑒烾𤍢𤩱𢿣𡊰𢎽梹楧𡎘𣓥𧯴𣛟𨪃𣟖𣏺𤲟樚𣚭𦲷萾䓟䓎"],["9840","𦴦𦵑𦲂𦿞漗𧄉茽𡜺菭𦲀𧁓𡟛妉媂𡞳婡婱𡤅𤇼㜭姯𡜼㛇熎鎐暚𤊥婮娫𤊓樫𣻹𧜶𤑛𤋊焝𤉙𨧡侰𦴨峂𤓎𧹍𤎽樌𤉖𡌄炦焳𤏩㶥泟勇𤩏繥姫崯㷳彜𤩝𡟟綤萦"],["98a1","咅𣫺𣌀𠈔坾𠣕𠘙㿥𡾞𪊶瀃𩅛嵰玏糓𨩙𩐠俈翧狍猐𧫴猸猹𥛶獁獈㺩𧬘遬燵𤣲珡臶㻊県㻑沢国琙琞琟㻢㻰㻴㻺瓓㼎㽓畂畭畲疍㽼痈痜㿀癍㿗癴㿜発𤽜熈嘣覀塩䀝睃䀹条䁅㗛瞘䁪䁯属瞾矋売砘点砜䂨砹硇硑硦葈𥔵礳栃礲䄃"],["9940","䄉禑禙辻稆込䅧窑䆲窼艹䇄竏竛䇏両筢筬筻簒簛䉠䉺类粜䊌粸䊔糭输烀𠳏総緔緐緽羮羴犟䎗耠耥笹耮耱联㷌垴炠肷胩䏭脌猪脎脒畠脔䐁㬹腖腙腚"],["99a1","䐓堺腼膄䐥膓䐭膥埯臁臤艔䒏芦艶苊苘苿䒰荗险榊萅烵葤惣蒈䔄蒾蓡蓸蔐蔸蕒䔻蕯蕰藠䕷虲蚒蚲蛯际螋䘆䘗袮裿褤襇覑𧥧訩訸誔誴豑賔賲贜䞘塟跃䟭仮踺嗘坔蹱嗵躰䠷軎転軤軭軲辷迁迊迌逳駄䢭飠鈓䤞鈨鉘鉫銱銮銿"],["9a40","鋣鋫鋳鋴鋽鍃鎄鎭䥅䥑麿鐗匁鐝鐭鐾䥪鑔鑹锭関䦧间阳䧥枠䨤靀䨵鞲韂噔䫤惨颹䬙飱塄餎餙冴餜餷饂饝饢䭰駅䮝騼鬏窃魩鮁鯝鯱鯴䱭鰠㝯𡯂鵉鰺"],["9aa1","黾噐鶓鶽鷀鷼银辶鹻麬麱麽黆铜黢黱黸竈齄𠂔𠊷𠎠椚铃妬𠓗塀铁㞹𠗕𠘕𠙶𡚺块煳𠫂𠫍𠮿呪吆𠯋咞𠯻𠰻𠱓𠱥𠱼惧𠲍噺𠲵𠳝𠳭𠵯𠶲𠷈楕鰯螥𠸄𠸎𠻗𠾐𠼭𠹳尠𠾼帋𡁜𡁏𡁶朞𡁻𡂈𡂖㙇𡂿𡃓𡄯𡄻卤蒭𡋣𡍵𡌶讁𡕷𡘙𡟃𡟇乸炻𡠭𡥪"],["9b40","𡨭𡩅𡰪𡱰𡲬𡻈拃𡻕𡼕熘桕𢁅槩㛈𢉼𢏗𢏺𢜪𢡱𢥏苽𢥧𢦓𢫕覥𢫨辠𢬎鞸𢬿顇骽𢱌"],["9b62","𢲈𢲷𥯨𢴈𢴒𢶷𢶕𢹂𢽴𢿌𣀳𣁦𣌟𣏞徱晈暿𧩹𣕧𣗳爁𤦺矗𣘚𣜖纇𠍆墵朎"],["9ba1","椘𣪧𧙗𥿢𣸑𣺹𧗾𢂚䣐䪸𤄙𨪚𤋮𤌍𤀻𤌴𤎖𤩅𠗊凒𠘑妟𡺨㮾𣳿𤐄𤓖垈𤙴㦛𤜯𨗨𩧉㝢𢇃譞𨭎駖𤠒𤣻𤨕爉𤫀𠱸奥𤺥𤾆𠝹軚𥀬劏圿煱𥊙𥐙𣽊𤪧喼𥑆𥑮𦭒釔㑳𥔿𧘲𥕞䜘𥕢𥕦𥟇𤤿𥡝偦㓻𣏌惞𥤃䝼𨥈𥪮𥮉𥰆𡶐垡煑澶𦄂𧰒遖𦆲𤾚譢𦐂𦑊"],["9c40","嵛𦯷輶𦒄𡤜諪𤧶𦒈𣿯𦔒䯀𦖿𦚵𢜛鑥𥟡憕娧晉侻嚹𤔡𦛼乪𤤴陖涏𦲽㘘襷𦞙𦡮𦐑𦡞營𦣇筂𩃀𠨑𦤦鄄𦤹穅鷰𦧺騦𦨭㙟𦑩𠀡禃𦨴𦭛崬𣔙菏𦮝䛐𦲤画补𦶮墶"],["9ca1","㜜𢖍𧁋𧇍㱔𧊀𧊅銁𢅺𧊋錰𧋦𤧐氹钟𧑐𠻸蠧裵𢤦𨑳𡞱溸𤨪𡠠㦤㚹尐秣䔿暶𩲭𩢤襃𧟌𧡘囖䃟𡘊㦡𣜯𨃨𡏅熭荦𧧝𩆨婧䲷𧂯𨦫𧧽𧨊𧬋𧵦𤅺筃祾𨀉澵𪋟樃𨌘厢𦸇鎿栶靝𨅯𨀣𦦵𡏭𣈯𨁈嶅𨰰𨂃圕頣𨥉嶫𤦈斾槕叒𤪥𣾁㰑朶𨂐𨃴𨄮𡾡𨅏"],["9d40","𨆉𨆯𨈚𨌆𨌯𨎊㗊𨑨𨚪䣺揦𨥖砈鉕𨦸䏲𨧧䏟𨧨𨭆𨯔姸𨰉輋𨿅𩃬筑𩄐𩄼㷷𩅞𤫊运犏嚋𩓧𩗩𩖰𩖸𩜲𩣑𩥉𩥪𩧃𩨨𩬎𩵚𩶛纟𩻸𩼣䲤镇𪊓熢𪋿䶑递𪗋䶜𠲜达嗁"],["9da1","辺𢒰边𤪓䔉繿潖檱仪㓤𨬬𧢝㜺躀𡟵𨀤𨭬𨮙𧨾𦚯㷫𧙕𣲷𥘵𥥖亚𥺁𦉘嚿𠹭踎孭𣺈𤲞揞拐𡟶𡡻攰嘭𥱊吚𥌑㷆𩶘䱽嘢嘞罉𥻘奵𣵀蝰东𠿪𠵉𣚺脗鵞贘瘻鱅癎瞹鍅吲腈苷嘥脲萘肽嗪祢噃吖𠺝㗎嘅嗱曱𨋢㘭甴嗰喺咗啲𠱁𠲖廐𥅈𠹶𢱢"],["9e40","𠺢麫絚嗞𡁵抝靭咔賍燶酶揼掹揾啩𢭃鱲𢺳冚㓟𠶧冧呍唞唓癦踭𦢊疱肶蠄螆裇膶萜𡃁䓬猄𤜆宐茋𦢓噻𢛴𧴯𤆣𧵳𦻐𧊶酰𡇙鈈𣳼𪚩𠺬𠻹牦𡲢䝎𤿂𧿹𠿫䃺"],["9ea1","鱝攟𢶠䣳𤟠𩵼𠿬𠸊恢𧖣𠿭"],["9ead","𦁈𡆇熣纎鵐业丄㕷嬍沲卧㚬㧜卽㚥𤘘墚𤭮舭呋垪𥪕𠥹"],["9ec5","㩒𢑥獴𩺬䴉鯭𣳾𩼰䱛𤾩𩖞𩿞葜𣶶𧊲𦞳𣜠挮紥𣻷𣸬㨪逈勌㹴㙺䗩𠒎癀嫰𠺶硺𧼮墧䂿噼鮋嵴癔𪐴麅䳡痹㟻愙𣃚𤏲"],["9ef5","噝𡊩垧𤥣𩸆刴𧂮㖭汊鵼"],["9f40","籖鬹埞𡝬屓擓𩓐𦌵𧅤蚭𠴨𦴢𤫢𠵱"],["9f4f","凾𡼏嶎霃𡷑麁遌笟鬂峑箣扨挵髿篏鬪籾鬮籂粆鰕篼鬉鼗鰛𤤾齚啳寃俽麘俲剠㸆勑坧偖妷帒韈鶫轜呩鞴饀鞺匬愰"],["9fa1","椬叚鰊鴂䰻陁榀傦畆𡝭駚剳"],["9fae","酙隁酜"],["9fb2","酑𨺗捿𦴣櫊嘑醎畺抅𠏼獏籰𥰡𣳽"],["9fc1","𤤙盖鮝个𠳔莾衂"],["9fc9","届槀僭坺刟巵从氱𠇲伹咜哚劚趂㗾弌㗳"],["9fdb","歒酼龥鮗頮颴骺麨麄煺笔"],["9fe7","毺蠘罸"],["9feb","嘠𪙊蹷齓"],["9ff0","跔蹏鸜踁抂𨍽踨蹵竓𤩷稾磘泪詧瘇"],["a040","𨩚鼦泎蟖痃𪊲硓咢贌狢獱謭猂瓱賫𤪻蘯徺袠䒷"],["a055","𡠻𦸅"],["a058","詾𢔛"],["a05b","惽癧髗鵄鍮鮏蟵"],["a063","蠏賷猬霡鮰㗖犲䰇籑饊𦅙慙䰄麖慽"],["a073","坟慯抦戹拎㩜懢厪𣏵捤栂㗒"],["a0a1","嵗𨯂迚𨸹"],["a0a6","僙𡵆礆匲阸𠼻䁥"],["a0ae","矾"],["a0b0","糂𥼚糚稭聦聣絍甅瓲覔舚朌聢𧒆聛瓰脃眤覉𦟌畓𦻑螩蟎臈螌詉貭譃眫瓸蓚㘵榲趦"],["a0d4","覩瑨涹蟁𤀑瓧㷛煶悤憜㳑煢恷"],["a0e2","罱𨬭牐惩䭾删㰘𣳇𥻗𧙖𥔱𡥄𡋾𩤃𦷜𧂭峁𦆭𨨏𣙷𠃮𦡆𤼎䕢嬟𦍌齐麦𦉫"],["a3c0","␀",31,"␡"],["c6a1","①",9,"⑴",9,"ⅰ",9,"丶丿亅亠冂冖冫勹匸卩厶夊宀巛⼳广廴彐彡攴无疒癶辵隶¨ˆヽヾゝゞ〃仝々〆〇ー［］✽ぁ",23],["c740","す",58,"ァアィイ"],["c7a1","ゥ",81,"А",5,"ЁЖ",4],["c840","Л",26,"ёж",25,"⇧↸↹㇏𠃌乚𠂊刂䒑"],["c8a1","龰冈龱𧘇"],["c8cd","￢￤＇＂㈱№℡゛゜⺀⺄⺆⺇⺈⺊⺌⺍⺕⺜⺝⺥⺧⺪⺬⺮⺶⺼⺾⻆⻊⻌⻍⻏⻖⻗⻞⻣"],["c8f5","ʃɐɛɔɵœøŋʊɪ"],["f9fe","￭"],["fa40","𠕇鋛𠗟𣿅蕌䊵珯况㙉𤥂𨧤鍄𡧛苮𣳈砼杄拟𤤳𨦪𠊠𦮳𡌅侫𢓭倈𦴩𧪄𣘀𤪱𢔓倩𠍾徤𠎀𠍇滛𠐟偽儁㑺儎顬㝃萖𤦤𠒇兠𣎴兪𠯿𢃼𠋥𢔰𠖎𣈳𡦃宂蝽𠖳𣲙冲冸"],["faa1","鴴凉减凑㳜凓𤪦决凢卂凭菍椾𣜭彻刋刦刼劵剗劔効勅簕蕂勠蘍𦬓包𨫞啉滙𣾀𠥔𣿬匳卄𠯢泋𡜦栛珕恊㺪㣌𡛨燝䒢卭却𨚫卾卿𡖖𡘓矦厓𨪛厠厫厮玧𥝲㽙玜叁叅汉义埾叙㪫𠮏叠𣿫𢶣叶𠱷吓灹唫晗浛呭𦭓𠵴啝咏咤䞦𡜍𠻝㶴𠵍"],["fb40","𨦼𢚘啇䳭启琗喆喩嘅𡣗𤀺䕒𤐵暳𡂴嘷曍𣊊暤暭噍噏磱囱鞇叾圀囯园𨭦㘣𡉏坆𤆥汮炋坂㚱𦱾埦𡐖堃𡑔𤍣堦𤯵塜墪㕡壠壜𡈼壻寿坃𪅐𤉸鏓㖡够梦㛃湙"],["fba1","𡘾娤啓𡚒蔅姉𠵎𦲁𦴪𡟜姙𡟻𡞲𦶦浱𡠨𡛕姹𦹅媫婣㛦𤦩婷㜈媖瑥嫓𦾡𢕔㶅𡤑㜲𡚸広勐孶斈孼𧨎䀄䡝𠈄寕慠𡨴𥧌𠖥寳宝䴐尅𡭄尓珎尔𡲥𦬨屉䣝岅峩峯嶋𡷹𡸷崐崘嵆𡺤岺巗苼㠭𤤁𢁉𢅳芇㠶㯂帮檊幵幺𤒼𠳓厦亷廐厨𡝱帉廴𨒂"],["fc40","廹廻㢠廼栾鐛弍𠇁弢㫞䢮𡌺强𦢈𢏐彘𢑱彣鞽𦹮彲鍀𨨶徧嶶㵟𥉐𡽪𧃸𢙨釖𠊞𨨩怱暅𡡷㥣㷇㘹垐𢞴祱㹀悞悤悳𤦂𤦏𧩓璤僡媠慤萤慂慈𦻒憁凴𠙖憇宪𣾷"],["fca1","𢡟懓𨮝𩥝懐㤲𢦀𢣁怣慜攞掋𠄘担𡝰拕𢸍捬𤧟㨗搸揸𡎎𡟼撐澊𢸶頔𤂌𥜝擡擥鑻㩦携㩗敍漖𤨨𤨣斅敭敟𣁾斵𤥀䬷旑䃘𡠩无旣忟𣐀昘𣇷𣇸晄𣆤𣆥晋𠹵晧𥇦晳晴𡸽𣈱𨗴𣇈𥌓矅𢣷馤朂𤎜𤨡㬫槺𣟂杞杧杢𤇍𩃭柗䓩栢湐鈼栁𣏦𦶠桝"],["fd40","𣑯槡樋𨫟楳棃𣗍椁椀㴲㨁𣘼㮀枬楡𨩊䋼椶榘㮡𠏉荣傐槹𣙙𢄪橅𣜃檝㯳枱櫈𩆜㰍欝𠤣惞欵歴𢟍溵𣫛𠎵𡥘㝀吡𣭚毡𣻼毜氷𢒋𤣱𦭑汚舦汹𣶼䓅𣶽𤆤𤤌𤤀"],["fda1","𣳉㛥㳫𠴲鮃𣇹𢒑羏样𦴥𦶡𦷫涖浜湼漄𤥿𤂅𦹲蔳𦽴凇沜渝萮𨬡港𣸯瑓𣾂秌湏媑𣁋濸㜍澝𣸰滺𡒗𤀽䕕鏰潄潜㵎潴𩅰㴻澟𤅄濓𤂑𤅕𤀹𣿰𣾴𤄿凟𤅖𤅗𤅀𦇝灋灾炧炁烌烕烖烟䄄㷨熴熖𤉷焫煅媈煊煮岜𤍥煏鍢𤋁焬𤑚𤨧𤨢熺𨯨炽爎"],["fe40","鑂爕夑鑃爤鍁𥘅爮牀𤥴梽牕牗㹕𣁄栍漽犂猪猫𤠣𨠫䣭𨠄猨献珏玪𠰺𦨮珉瑉𤇢𡛧𤨤昣㛅𤦷𤦍𤧻珷琕椃𤨦琹𠗃㻗瑜𢢭瑠𨺲瑇珤瑶莹瑬㜰瑴鏱樬璂䥓𤪌"],["fea1","𤅟𤩹𨮏孆𨰃𡢞瓈𡦈甎瓩甞𨻙𡩋寗𨺬鎅畍畊畧畮𤾂㼄𤴓疎瑝疞疴瘂瘬癑癏癯癶𦏵皐臯㟸𦤑𦤎皡皥皷盌𦾟葢𥂝𥅽𡸜眞眦着撯𥈠睘𣊬瞯𨥤𨥨𡛁矴砉𡍶𤨒棊碯磇磓隥礮𥗠磗礴碱𧘌辸袄𨬫𦂃𢘜禆褀椂禀𥡗禝𧬹礼禩渪𧄦㺨秆𩄍秔"]]');

/***/ }),

/***/ "(middleware)/./node_modules/iconv-lite/encodings/tables/cp936.json":
/*!*************************************************************!*\
  !*** ./node_modules/iconv-lite/encodings/tables/cp936.json ***!
  \*************************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('[["0","\\u0000",127,"€"],["8140","丂丄丅丆丏丒丗丟丠両丣並丩丮丯丱丳丵丷丼乀乁乂乄乆乊乑乕乗乚乛乢乣乤乥乧乨乪",5,"乲乴",9,"乿",6,"亇亊"],["8180","亐亖亗亙亜亝亞亣亪亯亰亱亴亶亷亸亹亼亽亾仈仌仏仐仒仚仛仜仠仢仦仧仩仭仮仯仱仴仸仹仺仼仾伀伂",6,"伋伌伒",4,"伜伝伡伣伨伩伬伭伮伱伳伵伷伹伻伾",4,"佄佅佇",5,"佒佔佖佡佢佦佨佪佫佭佮佱佲併佷佸佹佺佽侀侁侂侅來侇侊侌侎侐侒侓侕侖侘侙侚侜侞侟価侢"],["8240","侤侫侭侰",4,"侶",8,"俀俁係俆俇俈俉俋俌俍俒",4,"俙俛俠俢俤俥俧俫俬俰俲俴俵俶俷俹俻俼俽俿",11],["8280","個倎倐們倓倕倖倗倛倝倞倠倢倣値倧倫倯",10,"倻倽倿偀偁偂偄偅偆偉偊偋偍偐",4,"偖偗偘偙偛偝",7,"偦",5,"偭",8,"偸偹偺偼偽傁傂傃傄傆傇傉傊傋傌傎",20,"傤傦傪傫傭",4,"傳",6,"傼"],["8340","傽",17,"僐",5,"僗僘僙僛",10,"僨僩僪僫僯僰僱僲僴僶",4,"僼",9,"儈"],["8380","儉儊儌",5,"儓",13,"儢",28,"兂兇兊兌兎兏児兒兓兗兘兙兛兝",4,"兣兤兦內兩兪兯兲兺兾兿冃冄円冇冊冋冎冏冐冑冓冔冘冚冝冞冟冡冣冦",4,"冭冮冴冸冹冺冾冿凁凂凃凅凈凊凍凎凐凒",5],["8440","凘凙凚凜凞凟凢凣凥",5,"凬凮凱凲凴凷凾刄刅刉刋刌刏刐刓刔刕刜刞刟刡刢刣別刦刧刪刬刯刱刲刴刵刼刾剄",5,"剋剎剏剒剓剕剗剘"],["8480","剙剚剛剝剟剠剢剣剤剦剨剫剬剭剮剰剱剳",9,"剾劀劃",4,"劉",6,"劑劒劔",6,"劜劤劥劦劧劮劯劰労",9,"勀勁勂勄勅勆勈勊勌勍勎勏勑勓勔動勗務",5,"勠勡勢勣勥",10,"勱",7,"勻勼勽匁匂匃匄匇匉匊匋匌匎"],["8540","匑匒匓匔匘匛匜匞匟匢匤匥匧匨匩匫匬匭匯",9,"匼匽區卂卄卆卋卌卍卐協単卙卛卝卥卨卪卬卭卲卶卹卻卼卽卾厀厁厃厇厈厊厎厏"],["8580","厐",4,"厖厗厙厛厜厞厠厡厤厧厪厫厬厭厯",6,"厷厸厹厺厼厽厾叀參",4,"収叏叐叒叓叕叚叜叝叞叡叢叧叴叺叾叿吀吂吅吇吋吔吘吙吚吜吢吤吥吪吰吳吶吷吺吽吿呁呂呄呅呇呉呌呍呎呏呑呚呝",4,"呣呥呧呩",7,"呴呹呺呾呿咁咃咅咇咈咉咊咍咑咓咗咘咜咞咟咠咡"],["8640","咢咥咮咰咲咵咶咷咹咺咼咾哃哅哊哋哖哘哛哠",4,"哫哬哯哰哱哴",5,"哻哾唀唂唃唄唅唈唊",4,"唒唓唕",5,"唜唝唞唟唡唥唦"],["8680","唨唩唫唭唲唴唵唶唸唹唺唻唽啀啂啅啇啈啋",4,"啑啒啓啔啗",4,"啝啞啟啠啢啣啨啩啫啯",5,"啹啺啽啿喅喆喌喍喎喐喒喓喕喖喗喚喛喞喠",6,"喨",8,"喲喴営喸喺喼喿",4,"嗆嗇嗈嗊嗋嗎嗏嗐嗕嗗",4,"嗞嗠嗢嗧嗩嗭嗮嗰嗱嗴嗶嗸",4,"嗿嘂嘃嘄嘅"],["8740","嘆嘇嘊嘋嘍嘐",7,"嘙嘚嘜嘝嘠嘡嘢嘥嘦嘨嘩嘪嘫嘮嘯嘰嘳嘵嘷嘸嘺嘼嘽嘾噀",11,"噏",4,"噕噖噚噛噝",4],["8780","噣噥噦噧噭噮噯噰噲噳噴噵噷噸噹噺噽",7,"嚇",6,"嚐嚑嚒嚔",14,"嚤",10,"嚰",6,"嚸嚹嚺嚻嚽",12,"囋",8,"囕囖囘囙囜団囥",5,"囬囮囯囲図囶囷囸囻囼圀圁圂圅圇國",6],["8840","園",9,"圝圞圠圡圢圤圥圦圧圫圱圲圴",4,"圼圽圿坁坃坄坅坆坈坉坋坒",4,"坘坙坢坣坥坧坬坮坰坱坲坴坵坸坹坺坽坾坿垀"],["8880","垁垇垈垉垊垍",4,"垔",6,"垜垝垞垟垥垨垪垬垯垰垱垳垵垶垷垹",8,"埄",6,"埌埍埐埑埓埖埗埛埜埞埡埢埣埥",7,"埮埰埱埲埳埵埶執埻埼埾埿堁堃堄堅堈堉堊堌堎堏堐堒堓堔堖堗堘堚堛堜堝堟堢堣堥",4,"堫",4,"報堲堳場堶",7],["8940","堾",5,"塅",6,"塎塏塐塒塓塕塖塗塙",4,"塟",5,"塦",4,"塭",16,"塿墂墄墆墇墈墊墋墌"],["8980","墍",4,"墔",4,"墛墜墝墠",7,"墪",17,"墽墾墿壀壂壃壄壆",10,"壒壓壔壖",13,"壥",5,"壭壯壱売壴壵壷壸壺",7,"夃夅夆夈",4,"夎夐夑夒夓夗夘夛夝夞夠夡夢夣夦夨夬夰夲夳夵夶夻"],["8a40","夽夾夿奀奃奅奆奊奌奍奐奒奓奙奛",4,"奡奣奤奦",12,"奵奷奺奻奼奾奿妀妅妉妋妌妎妏妐妑妔妕妘妚妛妜妝妟妠妡妢妦"],["8a80","妧妬妭妰妱妳",5,"妺妼妽妿",6,"姇姈姉姌姍姎姏姕姖姙姛姞",4,"姤姦姧姩姪姫姭",11,"姺姼姽姾娀娂娊娋娍娎娏娐娒娔娕娖娗娙娚娛娝娞娡娢娤娦娧娨娪",6,"娳娵娷",4,"娽娾娿婁",4,"婇婈婋",9,"婖婗婘婙婛",5],["8b40","婡婣婤婥婦婨婩婫",8,"婸婹婻婼婽婾媀",17,"媓",6,"媜",13,"媫媬"],["8b80","媭",4,"媴媶媷媹",4,"媿嫀嫃",5,"嫊嫋嫍",4,"嫓嫕嫗嫙嫚嫛嫝嫞嫟嫢嫤嫥嫧嫨嫪嫬",4,"嫲",22,"嬊",11,"嬘",25,"嬳嬵嬶嬸",7,"孁",6],["8c40","孈",7,"孒孖孞孠孡孧孨孫孭孮孯孲孴孶孷學孹孻孼孾孿宂宆宊宍宎宐宑宒宔宖実宧宨宩宬宭宮宯宱宲宷宺宻宼寀寁寃寈寉寊寋寍寎寏"],["8c80","寑寔",8,"寠寢寣實寧審",4,"寯寱",6,"寽対尀専尃尅將專尋尌對導尐尒尓尗尙尛尞尟尠尡尣尦尨尩尪尫尭尮尯尰尲尳尵尶尷屃屄屆屇屌屍屒屓屔屖屗屘屚屛屜屝屟屢層屧",6,"屰屲",6,"屻屼屽屾岀岃",4,"岉岊岋岎岏岒岓岕岝",4,"岤",4],["8d40","岪岮岯岰岲岴岶岹岺岻岼岾峀峂峃峅",5,"峌",5,"峓",5,"峚",6,"峢峣峧峩峫峬峮峯峱",9,"峼",4],["8d80","崁崄崅崈",5,"崏",4,"崕崗崘崙崚崜崝崟",4,"崥崨崪崫崬崯",4,"崵",7,"崿",7,"嵈嵉嵍",10,"嵙嵚嵜嵞",10,"嵪嵭嵮嵰嵱嵲嵳嵵",12,"嶃",21,"嶚嶛嶜嶞嶟嶠"],["8e40","嶡",21,"嶸",12,"巆",6,"巎",12,"巜巟巠巣巤巪巬巭"],["8e80","巰巵巶巸",4,"巿帀帄帇帉帊帋帍帎帒帓帗帞",7,"帨",4,"帯帰帲",4,"帹帺帾帿幀幁幃幆",5,"幍",6,"幖",4,"幜幝幟幠幣",14,"幵幷幹幾庁庂広庅庈庉庌庍庎庒庘庛庝庡庢庣庤庨",4,"庮",4,"庴庺庻庼庽庿",6],["8f40","廆廇廈廋",5,"廔廕廗廘廙廚廜",11,"廩廫",8,"廵廸廹廻廼廽弅弆弇弉弌弍弎弐弒弔弖弙弚弜弝弞弡弢弣弤"],["8f80","弨弫弬弮弰弲",6,"弻弽弾弿彁",14,"彑彔彙彚彛彜彞彟彠彣彥彧彨彫彮彯彲彴彵彶彸彺彽彾彿徃徆徍徎徏徑従徔徖徚徛徝從徟徠徢",5,"復徫徬徯",5,"徶徸徹徺徻徾",4,"忇忈忊忋忎忓忔忕忚忛応忞忟忢忣忥忦忨忩忬忯忰忲忳忴忶忷忹忺忼怇"],["9040","怈怉怋怌怐怑怓怗怘怚怞怟怢怣怤怬怭怮怰",4,"怶",4,"怽怾恀恄",6,"恌恎恏恑恓恔恖恗恘恛恜恞恟恠恡恥恦恮恱恲恴恵恷恾悀"],["9080","悁悂悅悆悇悈悊悋悎悏悐悑悓悕悗悘悙悜悞悡悢悤悥悧悩悪悮悰悳悵悶悷悹悺悽",7,"惇惈惉惌",4,"惒惓惔惖惗惙惛惞惡",4,"惪惱惲惵惷惸惻",4,"愂愃愄愅愇愊愋愌愐",4,"愖愗愘愙愛愜愝愞愡愢愥愨愩愪愬",18,"慀",6],["9140","慇慉態慍慏慐慒慓慔慖",6,"慞慟慠慡慣慤慥慦慩",6,"慱慲慳慴慶慸",18,"憌憍憏",4,"憕"],["9180","憖",6,"憞",8,"憪憫憭",9,"憸",5,"憿懀懁懃",4,"應懌",4,"懓懕",16,"懧",13,"懶",8,"戀",5,"戇戉戓戔戙戜戝戞戠戣戦戧戨戩戫戭戯戰戱戲戵戶戸",4,"扂扄扅扆扊"],["9240","扏扐払扖扗扙扚扜",6,"扤扥扨扱扲扴扵扷扸扺扻扽抁抂抃抅抆抇抈抋",5,"抔抙抜抝択抣抦抧抩抪抭抮抯抰抲抳抴抶抷抸抺抾拀拁"],["9280","拃拋拏拑拕拝拞拠拡拤拪拫拰拲拵拸拹拺拻挀挃挄挅挆挊挋挌挍挏挐挒挓挔挕挗挘挙挜挦挧挩挬挭挮挰挱挳",5,"挻挼挾挿捀捁捄捇捈捊捑捒捓捔捖",7,"捠捤捥捦捨捪捫捬捯捰捲捳捴捵捸捹捼捽捾捿掁掃掄掅掆掋掍掑掓掔掕掗掙",6,"採掤掦掫掯掱掲掵掶掹掻掽掿揀"],["9340","揁揂揃揅揇揈揊揋揌揑揓揔揕揗",6,"揟揢揤",4,"揫揬揮揯揰揱揳揵揷揹揺揻揼揾搃搄搆",4,"損搎搑搒搕",5,"搝搟搢搣搤"],["9380","搥搧搨搩搫搮",5,"搵",4,"搻搼搾摀摂摃摉摋",6,"摓摕摖摗摙",4,"摟",7,"摨摪摫摬摮",9,"摻",6,"撃撆撈",8,"撓撔撗撘撚撛撜撝撟",4,"撥撦撧撨撪撫撯撱撲撳撴撶撹撻撽撾撿擁擃擄擆",6,"擏擑擓擔擕擖擙據"],["9440","擛擜擝擟擠擡擣擥擧",24,"攁",7,"攊",7,"攓",4,"攙",8],["9480","攢攣攤攦",4,"攬攭攰攱攲攳攷攺攼攽敀",4,"敆敇敊敋敍敎敐敒敓敔敗敘敚敜敟敠敡敤敥敧敨敩敪敭敮敯敱敳敵敶數",14,"斈斉斊斍斎斏斒斔斕斖斘斚斝斞斠斢斣斦斨斪斬斮斱",7,"斺斻斾斿旀旂旇旈旉旊旍旐旑旓旔旕旘",7,"旡旣旤旪旫"],["9540","旲旳旴旵旸旹旻",4,"昁昄昅昇昈昉昋昍昐昑昒昖昗昘昚昛昜昞昡昢昣昤昦昩昪昫昬昮昰昲昳昷",4,"昽昿晀時晄",6,"晍晎晐晑晘"],["9580","晙晛晜晝晞晠晢晣晥晧晩",4,"晱晲晳晵晸晹晻晼晽晿暀暁暃暅暆暈暉暊暋暍暎暏暐暒暓暔暕暘",4,"暞",8,"暩",4,"暯",4,"暵暶暷暸暺暻暼暽暿",25,"曚曞",7,"曧曨曪",5,"曱曵曶書曺曻曽朁朂會"],["9640","朄朅朆朇朌朎朏朑朒朓朖朘朙朚朜朞朠",5,"朧朩朮朰朲朳朶朷朸朹朻朼朾朿杁杄杅杇杊杋杍杒杔杕杗",4,"杝杢杣杤杦杧杫杬杮東杴杶"],["9680","杸杹杺杻杽枀枂枃枅枆枈枊枌枍枎枏枑枒枓枔枖枙枛枟枠枡枤枦枩枬枮枱枲枴枹",7,"柂柅",9,"柕柖柗柛柟柡柣柤柦柧柨柪柫柭柮柲柵",7,"柾栁栂栃栄栆栍栐栒栔栕栘",4,"栞栟栠栢",6,"栫",6,"栴栵栶栺栻栿桇桋桍桏桒桖",5],["9740","桜桝桞桟桪桬",7,"桵桸",8,"梂梄梇",7,"梐梑梒梔梕梖梘",9,"梣梤梥梩梪梫梬梮梱梲梴梶梷梸"],["9780","梹",6,"棁棃",5,"棊棌棎棏棐棑棓棔棖棗棙棛",4,"棡棢棤",9,"棯棲棳棴棶棷棸棻棽棾棿椀椂椃椄椆",4,"椌椏椑椓",11,"椡椢椣椥",7,"椮椯椱椲椳椵椶椷椸椺椻椼椾楀楁楃",16,"楕楖楘楙楛楜楟"],["9840","楡楢楤楥楧楨楩楪楬業楯楰楲",4,"楺楻楽楾楿榁榃榅榊榋榌榎",5,"榖榗榙榚榝",9,"榩榪榬榮榯榰榲榳榵榶榸榹榺榼榽"],["9880","榾榿槀槂",7,"構槍槏槑槒槓槕",5,"槜槝槞槡",11,"槮槯槰槱槳",9,"槾樀",9,"樋",11,"標",5,"樠樢",5,"権樫樬樭樮樰樲樳樴樶",6,"樿",4,"橅橆橈",7,"橑",6,"橚"],["9940","橜",4,"橢橣橤橦",10,"橲",6,"橺橻橽橾橿檁檂檃檅",8,"檏檒",4,"檘",7,"檡",5],["9980","檧檨檪檭",114,"欥欦欨",6],["9a40","欯欰欱欳欴欵欶欸欻欼欽欿歀歁歂歄歅歈歊歋歍",11,"歚",7,"歨歩歫",13,"歺歽歾歿殀殅殈"],["9a80","殌殎殏殐殑殔殕殗殘殙殜",4,"殢",7,"殫",7,"殶殸",6,"毀毃毄毆",4,"毌毎毐毑毘毚毜",4,"毢",7,"毬毭毮毰毱毲毴毶毷毸毺毻毼毾",6,"氈",4,"氎氒気氜氝氞氠氣氥氫氬氭氱氳氶氷氹氺氻氼氾氿汃汄汅汈汋",4,"汑汒汓汖汘"],["9b40","汙汚汢汣汥汦汧汫",4,"汱汳汵汷汸決汻汼汿沀沄沇沊沋沍沎沑沒沕沖沗沘沚沜沝沞沠沢沨沬沯沰沴沵沶沷沺泀況泂泃泆泇泈泋泍泎泏泑泒泘"],["9b80","泙泚泜泝泟泤泦泧泩泬泭泲泴泹泿洀洂洃洅洆洈洉洊洍洏洐洑洓洔洕洖洘洜洝洟",5,"洦洨洩洬洭洯洰洴洶洷洸洺洿浀浂浄浉浌浐浕浖浗浘浛浝浟浡浢浤浥浧浨浫浬浭浰浱浲浳浵浶浹浺浻浽",4,"涃涄涆涇涊涋涍涏涐涒涖",4,"涜涢涥涬涭涰涱涳涴涶涷涹",5,"淁淂淃淈淉淊"],["9c40","淍淎淏淐淒淓淔淕淗淚淛淜淟淢淣淥淧淨淩淪淭淯淰淲淴淵淶淸淺淽",7,"渆渇済渉渋渏渒渓渕渘渙減渜渞渟渢渦渧渨渪測渮渰渱渳渵"],["9c80","渶渷渹渻",7,"湅",7,"湏湐湑湒湕湗湙湚湜湝湞湠",10,"湬湭湯",14,"満溁溂溄溇溈溊",4,"溑",6,"溙溚溛溝溞溠溡溣溤溦溨溩溫溬溭溮溰溳溵溸溹溼溾溿滀滃滄滅滆滈滉滊滌滍滎滐滒滖滘滙滛滜滝滣滧滪",5],["9d40","滰滱滲滳滵滶滷滸滺",7,"漃漄漅漇漈漊",4,"漐漑漒漖",9,"漡漢漣漥漦漧漨漬漮漰漲漴漵漷",6,"漿潀潁潂"],["9d80","潃潄潅潈潉潊潌潎",9,"潙潚潛潝潟潠潡潣潤潥潧",5,"潯潰潱潳潵潶潷潹潻潽",6,"澅澆澇澊澋澏",12,"澝澞澟澠澢",4,"澨",10,"澴澵澷澸澺",5,"濁濃",5,"濊",6,"濓",10,"濟濢濣濤濥"],["9e40","濦",7,"濰",32,"瀒",7,"瀜",6,"瀤",6],["9e80","瀫",9,"瀶瀷瀸瀺",17,"灍灎灐",13,"灟",11,"灮灱灲灳灴灷灹灺灻災炁炂炃炄炆炇炈炋炌炍炏炐炑炓炗炘炚炛炞",12,"炰炲炴炵炶為炾炿烄烅烆烇烉烋",12,"烚"],["9f40","烜烝烞烠烡烢烣烥烪烮烰",6,"烸烺烻烼烾",10,"焋",4,"焑焒焔焗焛",10,"焧",7,"焲焳焴"],["9f80","焵焷",13,"煆煇煈煉煋煍煏",12,"煝煟",4,"煥煩",4,"煯煰煱煴煵煶煷煹煻煼煾",5,"熅",4,"熋熌熍熎熐熑熒熓熕熖熗熚",4,"熡",6,"熩熪熫熭",5,"熴熶熷熸熺",8,"燄",9,"燏",4],["a040","燖",9,"燡燢燣燤燦燨",5,"燯",9,"燺",11,"爇",19],["a080","爛爜爞",9,"爩爫爭爮爯爲爳爴爺爼爾牀",6,"牉牊牋牎牏牐牑牓牔牕牗牘牚牜牞牠牣牤牥牨牪牫牬牭牰牱牳牴牶牷牸牻牼牽犂犃犅",4,"犌犎犐犑犓",11,"犠",11,"犮犱犲犳犵犺",6,"狅狆狇狉狊狋狌狏狑狓狔狕狖狘狚狛"],["a1a1","　、。·ˉˇ¨〃々—～‖…‘’“”〔〕〈",7,"〖〗【】±×÷∶∧∨∑∏∪∩∈∷√⊥∥∠⌒⊙∫∮≡≌≈∽∝≠≮≯≤≥∞∵∴♂♀°′″℃＄¤￠￡‰§№☆★○●◎◇◆□■△▲※→←↑↓〓"],["a2a1","ⅰ",9],["a2b1","⒈",19,"⑴",19,"①",9],["a2e5","㈠",9],["a2f1","Ⅰ",11],["a3a1","！＂＃￥％",88,"￣"],["a4a1","ぁ",82],["a5a1","ァ",85],["a6a1","Α",16,"Σ",6],["a6c1","α",16,"σ",6],["a6e0","︵︶︹︺︿﹀︽︾﹁﹂﹃﹄"],["a6ee","︻︼︷︸︱"],["a6f4","︳︴"],["a7a1","А",5,"ЁЖ",25],["a7d1","а",5,"ёж",25],["a840","ˊˋ˙–―‥‵℅℉↖↗↘↙∕∟∣≒≦≧⊿═",35,"▁",6],["a880","█",7,"▓▔▕▼▽◢◣◤◥☉⊕〒〝〞"],["a8a1","āáǎàēéěèīíǐìōóǒòūúǔùǖǘǚǜüêɑ"],["a8bd","ńň"],["a8c0","ɡ"],["a8c5","ㄅ",36],["a940","〡",8,"㊣㎎㎏㎜㎝㎞㎡㏄㏎㏑㏒㏕︰￢￤"],["a959","℡㈱"],["a95c","‐"],["a960","ー゛゜ヽヾ〆ゝゞ﹉",9,"﹔﹕﹖﹗﹙",8],["a980","﹢",4,"﹨﹩﹪﹫"],["a996","〇"],["a9a4","─",75],["aa40","狜狝狟狢",5,"狪狫狵狶狹狽狾狿猀猂猄",5,"猋猌猍猏猐猑猒猔猘猙猚猟猠猣猤猦猧猨猭猯猰猲猳猵猶猺猻猼猽獀",8],["aa80","獉獊獋獌獎獏獑獓獔獕獖獘",7,"獡",10,"獮獰獱"],["ab40","獲",11,"獿",4,"玅玆玈玊玌玍玏玐玒玓玔玕玗玘玙玚玜玝玞玠玡玣",5,"玪玬玭玱玴玵玶玸玹玼玽玾玿珁珃",4],["ab80","珋珌珎珒",6,"珚珛珜珝珟珡珢珣珤珦珨珪珫珬珮珯珰珱珳",4],["ac40","珸",10,"琄琇琈琋琌琍琎琑",8,"琜",5,"琣琤琧琩琫琭琯琱琲琷",4,"琽琾琿瑀瑂",11],["ac80","瑎",6,"瑖瑘瑝瑠",12,"瑮瑯瑱",4,"瑸瑹瑺"],["ad40","瑻瑼瑽瑿璂璄璅璆璈璉璊璌璍璏璑",10,"璝璟",7,"璪",15,"璻",12],["ad80","瓈",9,"瓓",8,"瓝瓟瓡瓥瓧",6,"瓰瓱瓲"],["ae40","瓳瓵瓸",6,"甀甁甂甃甅",7,"甎甐甒甔甕甖甗甛甝甞甠",4,"甦甧甪甮甴甶甹甼甽甿畁畂畃畄畆畇畉畊畍畐畑畒畓畕畖畗畘"],["ae80","畝",7,"畧畨畩畫",6,"畳畵當畷畺",4,"疀疁疂疄疅疇"],["af40","疈疉疊疌疍疎疐疓疕疘疛疜疞疢疦",4,"疭疶疷疺疻疿痀痁痆痋痌痎痏痐痑痓痗痙痚痜痝痟痠痡痥痩痬痭痮痯痲痳痵痶痷痸痺痻痽痾瘂瘄瘆瘇"],["af80","瘈瘉瘋瘍瘎瘏瘑瘒瘓瘔瘖瘚瘜瘝瘞瘡瘣瘧瘨瘬瘮瘯瘱瘲瘶瘷瘹瘺瘻瘽癁療癄"],["b040","癅",6,"癎",5,"癕癗",4,"癝癟癠癡癢癤",6,"癬癭癮癰",7,"癹発發癿皀皁皃皅皉皊皌皍皏皐皒皔皕皗皘皚皛"],["b080","皜",7,"皥",8,"皯皰皳皵",9,"盀盁盃啊阿埃挨哎唉哀皑癌蔼矮艾碍爱隘鞍氨安俺按暗岸胺案肮昂盎凹敖熬翱袄傲奥懊澳芭捌扒叭吧笆八疤巴拔跋靶把耙坝霸罢爸白柏百摆佰败拜稗斑班搬扳般颁板版扮拌伴瓣半办绊邦帮梆榜膀绑棒磅蚌镑傍谤苞胞包褒剥"],["b140","盄盇盉盋盌盓盕盙盚盜盝盞盠",4,"盦",7,"盰盳盵盶盷盺盻盽盿眀眂眃眅眆眊県眎",10,"眛眜眝眞眡眣眤眥眧眪眫"],["b180","眬眮眰",4,"眹眻眽眾眿睂睄睅睆睈",7,"睒",7,"睜薄雹保堡饱宝抱报暴豹鲍爆杯碑悲卑北辈背贝钡倍狈备惫焙被奔苯本笨崩绷甭泵蹦迸逼鼻比鄙笔彼碧蓖蔽毕毙毖币庇痹闭敝弊必辟壁臂避陛鞭边编贬扁便变卞辨辩辫遍标彪膘表鳖憋别瘪彬斌濒滨宾摈兵冰柄丙秉饼炳"],["b240","睝睞睟睠睤睧睩睪睭",11,"睺睻睼瞁瞂瞃瞆",5,"瞏瞐瞓",11,"瞡瞣瞤瞦瞨瞫瞭瞮瞯瞱瞲瞴瞶",4],["b280","瞼瞾矀",12,"矎",8,"矘矙矚矝",4,"矤病并玻菠播拨钵波博勃搏铂箔伯帛舶脖膊渤泊驳捕卜哺补埠不布步簿部怖擦猜裁材才财睬踩采彩菜蔡餐参蚕残惭惨灿苍舱仓沧藏操糙槽曹草厕策侧册测层蹭插叉茬茶查碴搽察岔差诧拆柴豺搀掺蝉馋谗缠铲产阐颤昌猖"],["b340","矦矨矪矯矰矱矲矴矵矷矹矺矻矼砃",5,"砊砋砎砏砐砓砕砙砛砞砠砡砢砤砨砪砫砮砯砱砲砳砵砶砽砿硁硂硃硄硆硈硉硊硋硍硏硑硓硔硘硙硚"],["b380","硛硜硞",11,"硯",7,"硸硹硺硻硽",6,"场尝常长偿肠厂敞畅唱倡超抄钞朝嘲潮巢吵炒车扯撤掣彻澈郴臣辰尘晨忱沉陈趁衬撑称城橙成呈乘程惩澄诚承逞骋秤吃痴持匙池迟弛驰耻齿侈尺赤翅斥炽充冲虫崇宠抽酬畴踌稠愁筹仇绸瞅丑臭初出橱厨躇锄雏滁除楚"],["b440","碄碅碆碈碊碋碏碐碒碔碕碖碙碝碞碠碢碤碦碨",7,"碵碶碷碸確碻碼碽碿磀磂磃磄磆磇磈磌磍磎磏磑磒磓磖磗磘磚",9],["b480","磤磥磦磧磩磪磫磭",4,"磳磵磶磸磹磻",5,"礂礃礄礆",6,"础储矗搐触处揣川穿椽传船喘串疮窗幢床闯创吹炊捶锤垂春椿醇唇淳纯蠢戳绰疵茨磁雌辞慈瓷词此刺赐次聪葱囱匆从丛凑粗醋簇促蹿篡窜摧崔催脆瘁粹淬翠村存寸磋撮搓措挫错搭达答瘩打大呆歹傣戴带殆代贷袋待逮"],["b540","礍",5,"礔",9,"礟",4,"礥",14,"礵",4,"礽礿祂祃祄祅祇祊",8,"祔祕祘祙祡祣"],["b580","祤祦祩祪祫祬祮祰",6,"祹祻",4,"禂禃禆禇禈禉禋禌禍禎禐禑禒怠耽担丹单郸掸胆旦氮但惮淡诞弹蛋当挡党荡档刀捣蹈倒岛祷导到稻悼道盗德得的蹬灯登等瞪凳邓堤低滴迪敌笛狄涤翟嫡抵底地蒂第帝弟递缔颠掂滇碘点典靛垫电佃甸店惦奠淀殿碉叼雕凋刁掉吊钓调跌爹碟蝶迭谍叠"],["b640","禓",6,"禛",11,"禨",10,"禴",4,"禼禿秂秄秅秇秈秊秌秎秏秐秓秔秖秗秙",5,"秠秡秢秥秨秪"],["b680","秬秮秱",6,"秹秺秼秾秿稁稄稅稇稈稉稊稌稏",4,"稕稖稘稙稛稜丁盯叮钉顶鼎锭定订丢东冬董懂动栋侗恫冻洞兜抖斗陡豆逗痘都督毒犊独读堵睹赌杜镀肚度渡妒端短锻段断缎堆兑队对墩吨蹲敦顿囤钝盾遁掇哆多夺垛躲朵跺舵剁惰堕蛾峨鹅俄额讹娥恶厄扼遏鄂饿恩而儿耳尔饵洱二"],["b740","稝稟稡稢稤",14,"稴稵稶稸稺稾穀",5,"穇",9,"穒",4,"穘",16],["b780","穩",6,"穱穲穳穵穻穼穽穾窂窅窇窉窊窋窌窎窏窐窓窔窙窚窛窞窡窢贰发罚筏伐乏阀法珐藩帆番翻樊矾钒繁凡烦反返范贩犯饭泛坊芳方肪房防妨仿访纺放菲非啡飞肥匪诽吠肺废沸费芬酚吩氛分纷坟焚汾粉奋份忿愤粪丰封枫蜂峰锋风疯烽逢冯缝讽奉凤佛否夫敷肤孵扶拂辐幅氟符伏俘服"],["b840","窣窤窧窩窪窫窮",4,"窴",10,"竀",10,"竌",9,"竗竘竚竛竜竝竡竢竤竧",5,"竮竰竱竲竳"],["b880","竴",4,"竻竼竾笀笁笂笅笇笉笌笍笎笐笒笓笖笗笘笚笜笝笟笡笢笣笧笩笭浮涪福袱弗甫抚辅俯釜斧脯腑府腐赴副覆赋复傅付阜父腹负富讣附妇缚咐噶嘎该改概钙盖溉干甘杆柑竿肝赶感秆敢赣冈刚钢缸肛纲岗港杠篙皋高膏羔糕搞镐稿告哥歌搁戈鸽胳疙割革葛格蛤阁隔铬个各给根跟耕更庚羹"],["b940","笯笰笲笴笵笶笷笹笻笽笿",5,"筆筈筊筍筎筓筕筗筙筜筞筟筡筣",10,"筯筰筳筴筶筸筺筼筽筿箁箂箃箄箆",6,"箎箏"],["b980","箑箒箓箖箘箙箚箛箞箟箠箣箤箥箮箯箰箲箳箵箶箷箹",7,"篂篃範埂耿梗工攻功恭龚供躬公宫弓巩汞拱贡共钩勾沟苟狗垢构购够辜菇咕箍估沽孤姑鼓古蛊骨谷股故顾固雇刮瓜剐寡挂褂乖拐怪棺关官冠观管馆罐惯灌贯光广逛瑰规圭硅归龟闺轨鬼诡癸桂柜跪贵刽辊滚棍锅郭国果裹过哈"],["ba40","篅篈築篊篋篍篎篏篐篒篔",4,"篛篜篞篟篠篢篣篤篧篨篩篫篬篭篯篰篲",4,"篸篹篺篻篽篿",7,"簈簉簊簍簎簐",5,"簗簘簙"],["ba80","簚",4,"簠",5,"簨簩簫",12,"簹",5,"籂骸孩海氦亥害骇酣憨邯韩含涵寒函喊罕翰撼捍旱憾悍焊汗汉夯杭航壕嚎豪毫郝好耗号浩呵喝荷菏核禾和何合盒貉阂河涸赫褐鹤贺嘿黑痕很狠恨哼亨横衡恒轰哄烘虹鸿洪宏弘红喉侯猴吼厚候后呼乎忽瑚壶葫胡蝴狐糊湖"],["bb40","籃",9,"籎",36,"籵",5,"籾",9],["bb80","粈粊",6,"粓粔粖粙粚粛粠粡粣粦粧粨粩粫粬粭粯粰粴",4,"粺粻弧虎唬护互沪户花哗华猾滑画划化话槐徊怀淮坏欢环桓还缓换患唤痪豢焕涣宦幻荒慌黄磺蝗簧皇凰惶煌晃幌恍谎灰挥辉徽恢蛔回毁悔慧卉惠晦贿秽会烩汇讳诲绘荤昏婚魂浑混豁活伙火获或惑霍货祸击圾基机畸稽积箕"],["bc40","粿糀糂糃糄糆糉糋糎",6,"糘糚糛糝糞糡",6,"糩",5,"糰",7,"糹糺糼",13,"紋",5],["bc80","紑",14,"紡紣紤紥紦紨紩紪紬紭紮細",6,"肌饥迹激讥鸡姬绩缉吉极棘辑籍集及急疾汲即嫉级挤几脊己蓟技冀季伎祭剂悸济寄寂计记既忌际妓继纪嘉枷夹佳家加荚颊贾甲钾假稼价架驾嫁歼监坚尖笺间煎兼肩艰奸缄茧检柬碱硷拣捡简俭剪减荐槛鉴践贱见键箭件"],["bd40","紷",54,"絯",7],["bd80","絸",32,"健舰剑饯渐溅涧建僵姜将浆江疆蒋桨奖讲匠酱降蕉椒礁焦胶交郊浇骄娇嚼搅铰矫侥脚狡角饺缴绞剿教酵轿较叫窖揭接皆秸街阶截劫节桔杰捷睫竭洁结解姐戒藉芥界借介疥诫届巾筋斤金今津襟紧锦仅谨进靳晋禁近烬浸"],["be40","継",12,"綧",6,"綯",42],["be80","線",32,"尽劲荆兢茎睛晶鲸京惊精粳经井警景颈静境敬镜径痉靖竟竞净炯窘揪究纠玖韭久灸九酒厩救旧臼舅咎就疚鞠拘狙疽居驹菊局咀矩举沮聚拒据巨具距踞锯俱句惧炬剧捐鹃娟倦眷卷绢撅攫抉掘倔爵觉决诀绝均菌钧军君峻"],["bf40","緻",62],["bf80","縺縼",4,"繂",4,"繈",21,"俊竣浚郡骏喀咖卡咯开揩楷凯慨刊堪勘坎砍看康慷糠扛抗亢炕考拷烤靠坷苛柯棵磕颗科壳咳可渴克刻客课肯啃垦恳坑吭空恐孔控抠口扣寇枯哭窟苦酷库裤夸垮挎跨胯块筷侩快宽款匡筐狂框矿眶旷况亏盔岿窥葵奎魁傀"],["c040","繞",35,"纃",23,"纜纝纞"],["c080","纮纴纻纼绖绤绬绹缊缐缞缷缹缻",6,"罃罆",9,"罒罓馈愧溃坤昆捆困括扩廓阔垃拉喇蜡腊辣啦莱来赖蓝婪栏拦篮阑兰澜谰揽览懒缆烂滥琅榔狼廊郎朗浪捞劳牢老佬姥酪烙涝勒乐雷镭蕾磊累儡垒擂肋类泪棱楞冷厘梨犁黎篱狸离漓理李里鲤礼莉荔吏栗丽厉励砾历利傈例俐"],["c140","罖罙罛罜罝罞罠罣",4,"罫罬罭罯罰罳罵罶罷罸罺罻罼罽罿羀羂",7,"羋羍羏",4,"羕",4,"羛羜羠羢羣羥羦羨",6,"羱"],["c180","羳",4,"羺羻羾翀翂翃翄翆翇翈翉翋翍翏",4,"翖翗翙",5,"翢翣痢立粒沥隶力璃哩俩联莲连镰廉怜涟帘敛脸链恋炼练粮凉梁粱良两辆量晾亮谅撩聊僚疗燎寥辽潦了撂镣廖料列裂烈劣猎琳林磷霖临邻鳞淋凛赁吝拎玲菱零龄铃伶羚凌灵陵岭领另令溜琉榴硫馏留刘瘤流柳六龙聋咙笼窿"],["c240","翤翧翨翪翫翬翭翯翲翴",6,"翽翾翿耂耇耈耉耊耎耏耑耓耚耛耝耞耟耡耣耤耫",5,"耲耴耹耺耼耾聀聁聄聅聇聈聉聎聏聐聑聓聕聖聗"],["c280","聙聛",13,"聫",5,"聲",11,"隆垄拢陇楼娄搂篓漏陋芦卢颅庐炉掳卤虏鲁麓碌露路赂鹿潞禄录陆戮驴吕铝侣旅履屡缕虑氯律率滤绿峦挛孪滦卵乱掠略抡轮伦仑沦纶论萝螺罗逻锣箩骡裸落洛骆络妈麻玛码蚂马骂嘛吗埋买麦卖迈脉瞒馒蛮满蔓曼慢漫"],["c340","聾肁肂肅肈肊肍",5,"肔肕肗肙肞肣肦肧肨肬肰肳肵肶肸肹肻胅胇",4,"胏",6,"胘胟胠胢胣胦胮胵胷胹胻胾胿脀脁脃脄脅脇脈脋"],["c380","脌脕脗脙脛脜脝脟",12,"脭脮脰脳脴脵脷脹",4,"脿谩芒茫盲氓忙莽猫茅锚毛矛铆卯茂冒帽貌贸么玫枚梅酶霉煤没眉媒镁每美昧寐妹媚门闷们萌蒙檬盟锰猛梦孟眯醚靡糜迷谜弥米秘觅泌蜜密幂棉眠绵冕免勉娩缅面苗描瞄藐秒渺庙妙蔑灭民抿皿敏悯闽明螟鸣铭名命谬摸"],["c440","腀",5,"腇腉腍腎腏腒腖腗腘腛",4,"腡腢腣腤腦腨腪腫腬腯腲腳腵腶腷腸膁膃",4,"膉膋膌膍膎膐膒",5,"膙膚膞",4,"膤膥"],["c480","膧膩膫",7,"膴",5,"膼膽膾膿臄臅臇臈臉臋臍",6,"摹蘑模膜磨摩魔抹末莫墨默沫漠寞陌谋牟某拇牡亩姆母墓暮幕募慕木目睦牧穆拿哪呐钠那娜纳氖乃奶耐奈南男难囊挠脑恼闹淖呢馁内嫩能妮霓倪泥尼拟你匿腻逆溺蔫拈年碾撵捻念娘酿鸟尿捏聂孽啮镊镍涅您柠狞凝宁"],["c540","臔",14,"臤臥臦臨臩臫臮",4,"臵",5,"臽臿舃與",4,"舎舏舑舓舕",5,"舝舠舤舥舦舧舩舮舲舺舼舽舿"],["c580","艀艁艂艃艅艆艈艊艌艍艎艐",7,"艙艛艜艝艞艠",7,"艩拧泞牛扭钮纽脓浓农弄奴努怒女暖虐疟挪懦糯诺哦欧鸥殴藕呕偶沤啪趴爬帕怕琶拍排牌徘湃派攀潘盘磐盼畔判叛乓庞旁耪胖抛咆刨炮袍跑泡呸胚培裴赔陪配佩沛喷盆砰抨烹澎彭蓬棚硼篷膨朋鹏捧碰坯砒霹批披劈琵毗"],["c640","艪艫艬艭艱艵艶艷艸艻艼芀芁芃芅芆芇芉芌芐芓芔芕芖芚芛芞芠芢芣芧芲芵芶芺芻芼芿苀苂苃苅苆苉苐苖苙苚苝苢苧苨苩苪苬苭苮苰苲苳苵苶苸"],["c680","苺苼",4,"茊茋茍茐茒茓茖茘茙茝",9,"茩茪茮茰茲茷茻茽啤脾疲皮匹痞僻屁譬篇偏片骗飘漂瓢票撇瞥拼频贫品聘乒坪苹萍平凭瓶评屏坡泼颇婆破魄迫粕剖扑铺仆莆葡菩蒲埔朴圃普浦谱曝瀑期欺栖戚妻七凄漆柒沏其棋奇歧畦崎脐齐旗祈祁骑起岂乞企启契砌器气迄弃汽泣讫掐"],["c740","茾茿荁荂荄荅荈荊",4,"荓荕",4,"荝荢荰",6,"荹荺荾",6,"莇莈莊莋莌莍莏莐莑莔莕莖莗莙莚莝莟莡",6,"莬莭莮"],["c780","莯莵莻莾莿菂菃菄菆菈菉菋菍菎菐菑菒菓菕菗菙菚菛菞菢菣菤菦菧菨菫菬菭恰洽牵扦钎铅千迁签仟谦乾黔钱钳前潜遣浅谴堑嵌欠歉枪呛腔羌墙蔷强抢橇锹敲悄桥瞧乔侨巧鞘撬翘峭俏窍切茄且怯窃钦侵亲秦琴勤芹擒禽寝沁青轻氢倾卿清擎晴氰情顷请庆琼穷秋丘邱球求囚酋泅趋区蛆曲躯屈驱渠"],["c840","菮華菳",4,"菺菻菼菾菿萀萂萅萇萈萉萊萐萒",5,"萙萚萛萞",5,"萩",7,"萲",5,"萹萺萻萾",7,"葇葈葉"],["c880","葊",6,"葒",4,"葘葝葞葟葠葢葤",4,"葪葮葯葰葲葴葷葹葻葼取娶龋趣去圈颧权醛泉全痊拳犬券劝缺炔瘸却鹊榷确雀裙群然燃冉染瓤壤攘嚷让饶扰绕惹热壬仁人忍韧任认刃妊纫扔仍日戎茸蓉荣融熔溶容绒冗揉柔肉茹蠕儒孺如辱乳汝入褥软阮蕊瑞锐闰润若弱撒洒萨腮鳃塞赛三叁"],["c940","葽",4,"蒃蒄蒅蒆蒊蒍蒏",7,"蒘蒚蒛蒝蒞蒟蒠蒢",12,"蒰蒱蒳蒵蒶蒷蒻蒼蒾蓀蓂蓃蓅蓆蓇蓈蓋蓌蓎蓏蓒蓔蓕蓗"],["c980","蓘",4,"蓞蓡蓢蓤蓧",4,"蓭蓮蓯蓱",10,"蓽蓾蔀蔁蔂伞散桑嗓丧搔骚扫嫂瑟色涩森僧莎砂杀刹沙纱傻啥煞筛晒珊苫杉山删煽衫闪陕擅赡膳善汕扇缮墒伤商赏晌上尚裳梢捎稍烧芍勺韶少哨邵绍奢赊蛇舌舍赦摄射慑涉社设砷申呻伸身深娠绅神沈审婶甚肾慎渗声生甥牲升绳"],["ca40","蔃",8,"蔍蔎蔏蔐蔒蔔蔕蔖蔘蔙蔛蔜蔝蔞蔠蔢",8,"蔭",9,"蔾",4,"蕄蕅蕆蕇蕋",10],["ca80","蕗蕘蕚蕛蕜蕝蕟",4,"蕥蕦蕧蕩",8,"蕳蕵蕶蕷蕸蕼蕽蕿薀薁省盛剩胜圣师失狮施湿诗尸虱十石拾时什食蚀实识史矢使屎驶始式示士世柿事拭誓逝势是嗜噬适仕侍释饰氏市恃室视试收手首守寿授售受瘦兽蔬枢梳殊抒输叔舒淑疏书赎孰熟薯暑曙署蜀黍鼠属术述树束戍竖墅庶数漱"],["cb40","薂薃薆薈",6,"薐",10,"薝",6,"薥薦薧薩薫薬薭薱",5,"薸薺",6,"藂",6,"藊",4,"藑藒"],["cb80","藔藖",5,"藝",6,"藥藦藧藨藪",14,"恕刷耍摔衰甩帅栓拴霜双爽谁水睡税吮瞬顺舜说硕朔烁斯撕嘶思私司丝死肆寺嗣四伺似饲巳松耸怂颂送宋讼诵搜艘擞嗽苏酥俗素速粟僳塑溯宿诉肃酸蒜算虽隋随绥髓碎岁穗遂隧祟孙损笋蓑梭唆缩琐索锁所塌他它她塔"],["cc40","藹藺藼藽藾蘀",4,"蘆",10,"蘒蘓蘔蘕蘗",15,"蘨蘪",13,"蘹蘺蘻蘽蘾蘿虀"],["cc80","虁",11,"虒虓處",4,"虛虜虝號虠虡虣",7,"獭挞蹋踏胎苔抬台泰酞太态汰坍摊贪瘫滩坛檀痰潭谭谈坦毯袒碳探叹炭汤塘搪堂棠膛唐糖倘躺淌趟烫掏涛滔绦萄桃逃淘陶讨套特藤腾疼誊梯剔踢锑提题蹄啼体替嚏惕涕剃屉天添填田甜恬舔腆挑条迢眺跳贴铁帖厅听烃"],["cd40","虭虯虰虲",6,"蚃",6,"蚎",4,"蚔蚖",5,"蚞",4,"蚥蚦蚫蚭蚮蚲蚳蚷蚸蚹蚻",4,"蛁蛂蛃蛅蛈蛌蛍蛒蛓蛕蛖蛗蛚蛜"],["cd80","蛝蛠蛡蛢蛣蛥蛦蛧蛨蛪蛫蛬蛯蛵蛶蛷蛺蛻蛼蛽蛿蜁蜄蜅蜆蜋蜌蜎蜏蜐蜑蜔蜖汀廷停亭庭挺艇通桐酮瞳同铜彤童桶捅筒统痛偷投头透凸秃突图徒途涂屠土吐兔湍团推颓腿蜕褪退吞屯臀拖托脱鸵陀驮驼椭妥拓唾挖哇蛙洼娃瓦袜歪外豌弯湾玩顽丸烷完碗挽晚皖惋宛婉万腕汪王亡枉网往旺望忘妄威"],["ce40","蜙蜛蜝蜟蜠蜤蜦蜧蜨蜪蜫蜬蜭蜯蜰蜲蜳蜵蜶蜸蜹蜺蜼蜽蝀",6,"蝊蝋蝍蝏蝐蝑蝒蝔蝕蝖蝘蝚",5,"蝡蝢蝦",7,"蝯蝱蝲蝳蝵"],["ce80","蝷蝸蝹蝺蝿螀螁螄螆螇螉螊螌螎",4,"螔螕螖螘",6,"螠",4,"巍微危韦违桅围唯惟为潍维苇萎委伟伪尾纬未蔚味畏胃喂魏位渭谓尉慰卫瘟温蚊文闻纹吻稳紊问嗡翁瓮挝蜗涡窝我斡卧握沃巫呜钨乌污诬屋无芜梧吾吴毋武五捂午舞伍侮坞戊雾晤物勿务悟误昔熙析西硒矽晰嘻吸锡牺"],["cf40","螥螦螧螩螪螮螰螱螲螴螶螷螸螹螻螼螾螿蟁",4,"蟇蟈蟉蟌",4,"蟔",6,"蟜蟝蟞蟟蟡蟢蟣蟤蟦蟧蟨蟩蟫蟬蟭蟯",9],["cf80","蟺蟻蟼蟽蟿蠀蠁蠂蠄",5,"蠋",7,"蠔蠗蠘蠙蠚蠜",4,"蠣稀息希悉膝夕惜熄烯溪汐犀檄袭席习媳喜铣洗系隙戏细瞎虾匣霞辖暇峡侠狭下厦夏吓掀锨先仙鲜纤咸贤衔舷闲涎弦嫌显险现献县腺馅羡宪陷限线相厢镶香箱襄湘乡翔祥详想响享项巷橡像向象萧硝霄削哮嚣销消宵淆晓"],["d040","蠤",13,"蠳",5,"蠺蠻蠽蠾蠿衁衂衃衆",5,"衎",5,"衕衖衘衚",6,"衦衧衪衭衯衱衳衴衵衶衸衹衺"],["d080","衻衼袀袃袆袇袉袊袌袎袏袐袑袓袔袕袗",4,"袝",4,"袣袥",5,"小孝校肖啸笑效楔些歇蝎鞋协挟携邪斜胁谐写械卸蟹懈泄泻谢屑薪芯锌欣辛新忻心信衅星腥猩惺兴刑型形邢行醒幸杏性姓兄凶胸匈汹雄熊休修羞朽嗅锈秀袖绣墟戌需虚嘘须徐许蓄酗叙旭序畜恤絮婿绪续轩喧宣悬旋玄"],["d140","袬袮袯袰袲",4,"袸袹袺袻袽袾袿裀裃裄裇裈裊裋裌裍裏裐裑裓裖裗裚",4,"裠裡裦裧裩",6,"裲裵裶裷裺裻製裿褀褁褃",5],["d180","褉褋",4,"褑褔",4,"褜",4,"褢褣褤褦褧褨褩褬褭褮褯褱褲褳褵褷选癣眩绚靴薛学穴雪血勋熏循旬询寻驯巡殉汛训讯逊迅压押鸦鸭呀丫芽牙蚜崖衙涯雅哑亚讶焉咽阉烟淹盐严研蜒岩延言颜阎炎沿奄掩眼衍演艳堰燕厌砚雁唁彦焰宴谚验殃央鸯秧杨扬佯疡羊洋阳氧仰痒养样漾邀腰妖瑶"],["d240","褸",8,"襂襃襅",24,"襠",5,"襧",19,"襼"],["d280","襽襾覀覂覄覅覇",26,"摇尧遥窑谣姚咬舀药要耀椰噎耶爷野冶也页掖业叶曳腋夜液一壹医揖铱依伊衣颐夷遗移仪胰疑沂宜姨彝椅蚁倚已乙矣以艺抑易邑屹亿役臆逸肄疫亦裔意毅忆义益溢诣议谊译异翼翌绎茵荫因殷音阴姻吟银淫寅饮尹引隐"],["d340","覢",30,"觃觍觓觔觕觗觘觙觛觝觟觠觡觢觤觧觨觩觪觬觭觮觰觱觲觴",6],["d380","觻",4,"訁",5,"計",21,"印英樱婴鹰应缨莹萤营荧蝇迎赢盈影颖硬映哟拥佣臃痈庸雍踊蛹咏泳涌永恿勇用幽优悠忧尤由邮铀犹油游酉有友右佑釉诱又幼迂淤于盂榆虞愚舆余俞逾鱼愉渝渔隅予娱雨与屿禹宇语羽玉域芋郁吁遇喻峪御愈欲狱育誉"],["d440","訞",31,"訿",8,"詉",21],["d480","詟",25,"詺",6,"浴寓裕预豫驭鸳渊冤元垣袁原援辕园员圆猿源缘远苑愿怨院曰约越跃钥岳粤月悦阅耘云郧匀陨允运蕴酝晕韵孕匝砸杂栽哉灾宰载再在咱攒暂赞赃脏葬遭糟凿藻枣早澡蚤躁噪造皂灶燥责择则泽贼怎增憎曾赠扎喳渣札轧"],["d540","誁",7,"誋",7,"誔",46],["d580","諃",32,"铡闸眨栅榨咋乍炸诈摘斋宅窄债寨瞻毡詹粘沾盏斩辗崭展蘸栈占战站湛绽樟章彰漳张掌涨杖丈帐账仗胀瘴障招昭找沼赵照罩兆肇召遮折哲蛰辙者锗蔗这浙珍斟真甄砧臻贞针侦枕疹诊震振镇阵蒸挣睁征狰争怔整拯正政"],["d640","諤",34,"謈",27],["d680","謤謥謧",30,"帧症郑证芝枝支吱蜘知肢脂汁之织职直植殖执值侄址指止趾只旨纸志挚掷至致置帜峙制智秩稚质炙痔滞治窒中盅忠钟衷终种肿重仲众舟周州洲诌粥轴肘帚咒皱宙昼骤珠株蛛朱猪诸诛逐竹烛煮拄瞩嘱主著柱助蛀贮铸筑"],["d740","譆",31,"譧",4,"譭",25],["d780","讇",24,"讬讱讻诇诐诪谉谞住注祝驻抓爪拽专砖转撰赚篆桩庄装妆撞壮状椎锥追赘坠缀谆准捉拙卓桌琢茁酌啄着灼浊兹咨资姿滋淄孜紫仔籽滓子自渍字鬃棕踪宗综总纵邹走奏揍租足卒族祖诅阻组钻纂嘴醉最罪尊遵昨左佐柞做作坐座"],["d840","谸",8,"豂豃豄豅豈豊豋豍",7,"豖豗豘豙豛",5,"豣",6,"豬",6,"豴豵豶豷豻",6,"貃貄貆貇"],["d880","貈貋貍",6,"貕貖貗貙",20,"亍丌兀丐廿卅丕亘丞鬲孬噩丨禺丿匕乇夭爻卮氐囟胤馗毓睾鼗丶亟鼐乜乩亓芈孛啬嘏仄厍厝厣厥厮靥赝匚叵匦匮匾赜卦卣刂刈刎刭刳刿剀剌剞剡剜蒯剽劂劁劐劓冂罔亻仃仉仂仨仡仫仞伛仳伢佤仵伥伧伉伫佞佧攸佚佝"],["d940","貮",62],["d980","賭",32,"佟佗伲伽佶佴侑侉侃侏佾佻侪佼侬侔俦俨俪俅俚俣俜俑俟俸倩偌俳倬倏倮倭俾倜倌倥倨偾偃偕偈偎偬偻傥傧傩傺僖儆僭僬僦僮儇儋仝氽佘佥俎龠汆籴兮巽黉馘冁夔勹匍訇匐凫夙兕亠兖亳衮袤亵脔裒禀嬴蠃羸冫冱冽冼"],["da40","贎",14,"贠赑赒赗赟赥赨赩赪赬赮赯赱赲赸",8,"趂趃趆趇趈趉趌",4,"趒趓趕",9,"趠趡"],["da80","趢趤",12,"趲趶趷趹趻趽跀跁跂跅跇跈跉跊跍跐跒跓跔凇冖冢冥讠讦讧讪讴讵讷诂诃诋诏诎诒诓诔诖诘诙诜诟诠诤诨诩诮诰诳诶诹诼诿谀谂谄谇谌谏谑谒谔谕谖谙谛谘谝谟谠谡谥谧谪谫谮谯谲谳谵谶卩卺阝阢阡阱阪阽阼陂陉陔陟陧陬陲陴隈隍隗隰邗邛邝邙邬邡邴邳邶邺"],["db40","跕跘跙跜跠跡跢跥跦跧跩跭跮跰跱跲跴跶跼跾",6,"踆踇踈踋踍踎踐踑踒踓踕",7,"踠踡踤",4,"踫踭踰踲踳踴踶踷踸踻踼踾"],["db80","踿蹃蹅蹆蹌",4,"蹓",5,"蹚",11,"蹧蹨蹪蹫蹮蹱邸邰郏郅邾郐郄郇郓郦郢郜郗郛郫郯郾鄄鄢鄞鄣鄱鄯鄹酃酆刍奂劢劬劭劾哿勐勖勰叟燮矍廴凵凼鬯厶弁畚巯坌垩垡塾墼壅壑圩圬圪圳圹圮圯坜圻坂坩垅坫垆坼坻坨坭坶坳垭垤垌垲埏垧垴垓垠埕埘埚埙埒垸埴埯埸埤埝"],["dc40","蹳蹵蹷",4,"蹽蹾躀躂躃躄躆躈",6,"躑躒躓躕",6,"躝躟",11,"躭躮躰躱躳",6,"躻",7],["dc80","軃",10,"軏",21,"堋堍埽埭堀堞堙塄堠塥塬墁墉墚墀馨鼙懿艹艽艿芏芊芨芄芎芑芗芙芫芸芾芰苈苊苣芘芷芮苋苌苁芩芴芡芪芟苄苎芤苡茉苷苤茏茇苜苴苒苘茌苻苓茑茚茆茔茕苠苕茜荑荛荜茈莒茼茴茱莛荞茯荏荇荃荟荀茗荠茭茺茳荦荥"],["dd40","軥",62],["dd80","輤",32,"荨茛荩荬荪荭荮莰荸莳莴莠莪莓莜莅荼莶莩荽莸荻莘莞莨莺莼菁萁菥菘堇萘萋菝菽菖萜萸萑萆菔菟萏萃菸菹菪菅菀萦菰菡葜葑葚葙葳蒇蒈葺蒉葸萼葆葩葶蒌蒎萱葭蓁蓍蓐蓦蒽蓓蓊蒿蒺蓠蒡蒹蒴蒗蓥蓣蔌甍蔸蓰蔹蔟蔺"],["de40","轅",32,"轪辀辌辒辝辠辡辢辤辥辦辧辪辬辭辮辯農辳辴辵辷辸辺辻込辿迀迃迆"],["de80","迉",4,"迏迒迖迗迚迠迡迣迧迬迯迱迲迴迵迶迺迻迼迾迿逇逈逌逎逓逕逘蕖蔻蓿蓼蕙蕈蕨蕤蕞蕺瞢蕃蕲蕻薤薨薇薏蕹薮薜薅薹薷薰藓藁藜藿蘧蘅蘩蘖蘼廾弈夼奁耷奕奚奘匏尢尥尬尴扌扪抟抻拊拚拗拮挢拶挹捋捃掭揶捱捺掎掴捭掬掊捩掮掼揲揸揠揿揄揞揎摒揆掾摅摁搋搛搠搌搦搡摞撄摭撖"],["df40","這逜連逤逥逧",5,"逰",4,"逷逹逺逽逿遀遃遅遆遈",4,"過達違遖遙遚遜",5,"遤遦遧適遪遫遬遯",4,"遶",6,"遾邁"],["df80","還邅邆邇邉邊邌",4,"邒邔邖邘邚邜邞邟邠邤邥邧邨邩邫邭邲邷邼邽邿郀摺撷撸撙撺擀擐擗擤擢攉攥攮弋忒甙弑卟叱叽叩叨叻吒吖吆呋呒呓呔呖呃吡呗呙吣吲咂咔呷呱呤咚咛咄呶呦咝哐咭哂咴哒咧咦哓哔呲咣哕咻咿哌哙哚哜咩咪咤哝哏哞唛哧唠哽唔哳唢唣唏唑唧唪啧喏喵啉啭啁啕唿啐唼"],["e040","郂郃郆郈郉郋郌郍郒郔郕郖郘郙郚郞郟郠郣郤郥郩郪郬郮郰郱郲郳郵郶郷郹郺郻郼郿鄀鄁鄃鄅",19,"鄚鄛鄜"],["e080","鄝鄟鄠鄡鄤",10,"鄰鄲",6,"鄺",8,"酄唷啖啵啶啷唳唰啜喋嗒喃喱喹喈喁喟啾嗖喑啻嗟喽喾喔喙嗪嗷嗉嘟嗑嗫嗬嗔嗦嗝嗄嗯嗥嗲嗳嗌嗍嗨嗵嗤辔嘞嘈嘌嘁嘤嘣嗾嘀嘧嘭噘嘹噗嘬噍噢噙噜噌噔嚆噤噱噫噻噼嚅嚓嚯囔囗囝囡囵囫囹囿圄圊圉圜帏帙帔帑帱帻帼"],["e140","酅酇酈酑酓酔酕酖酘酙酛酜酟酠酦酧酨酫酭酳酺酻酼醀",4,"醆醈醊醎醏醓",6,"醜",5,"醤",5,"醫醬醰醱醲醳醶醷醸醹醻"],["e180","醼",10,"釈釋釐釒",9,"針",8,"帷幄幔幛幞幡岌屺岍岐岖岈岘岙岑岚岜岵岢岽岬岫岱岣峁岷峄峒峤峋峥崂崃崧崦崮崤崞崆崛嵘崾崴崽嵬嵛嵯嵝嵫嵋嵊嵩嵴嶂嶙嶝豳嶷巅彳彷徂徇徉後徕徙徜徨徭徵徼衢彡犭犰犴犷犸狃狁狎狍狒狨狯狩狲狴狷猁狳猃狺"],["e240","釦",62],["e280","鈥",32,"狻猗猓猡猊猞猝猕猢猹猥猬猸猱獐獍獗獠獬獯獾舛夥飧夤夂饣饧",5,"饴饷饽馀馄馇馊馍馐馑馓馔馕庀庑庋庖庥庠庹庵庾庳赓廒廑廛廨廪膺忄忉忖忏怃忮怄忡忤忾怅怆忪忭忸怙怵怦怛怏怍怩怫怊怿怡恸恹恻恺恂"],["e340","鉆",45,"鉵",16],["e380","銆",7,"銏",24,"恪恽悖悚悭悝悃悒悌悛惬悻悱惝惘惆惚悴愠愦愕愣惴愀愎愫慊慵憬憔憧憷懔懵忝隳闩闫闱闳闵闶闼闾阃阄阆阈阊阋阌阍阏阒阕阖阗阙阚丬爿戕氵汔汜汊沣沅沐沔沌汨汩汴汶沆沩泐泔沭泷泸泱泗沲泠泖泺泫泮沱泓泯泾"],["e440","銨",5,"銯",24,"鋉",31],["e480","鋩",32,"洹洧洌浃浈洇洄洙洎洫浍洮洵洚浏浒浔洳涑浯涞涠浞涓涔浜浠浼浣渚淇淅淞渎涿淠渑淦淝淙渖涫渌涮渫湮湎湫溲湟溆湓湔渲渥湄滟溱溘滠漭滢溥溧溽溻溷滗溴滏溏滂溟潢潆潇漤漕滹漯漶潋潴漪漉漩澉澍澌潸潲潼潺濑"],["e540","錊",51,"錿",10],["e580","鍊",31,"鍫濉澧澹澶濂濡濮濞濠濯瀚瀣瀛瀹瀵灏灞宀宄宕宓宥宸甯骞搴寤寮褰寰蹇謇辶迓迕迥迮迤迩迦迳迨逅逄逋逦逑逍逖逡逵逶逭逯遄遑遒遐遨遘遢遛暹遴遽邂邈邃邋彐彗彖彘尻咫屐屙孱屣屦羼弪弩弭艴弼鬻屮妁妃妍妩妪妣"],["e640","鍬",34,"鎐",27],["e680","鎬",29,"鏋鏌鏍妗姊妫妞妤姒妲妯姗妾娅娆姝娈姣姘姹娌娉娲娴娑娣娓婀婧婊婕娼婢婵胬媪媛婷婺媾嫫媲嫒嫔媸嫠嫣嫱嫖嫦嫘嫜嬉嬗嬖嬲嬷孀尕尜孚孥孳孑孓孢驵驷驸驺驿驽骀骁骅骈骊骐骒骓骖骘骛骜骝骟骠骢骣骥骧纟纡纣纥纨纩"],["e740","鏎",7,"鏗",54],["e780","鐎",32,"纭纰纾绀绁绂绉绋绌绐绔绗绛绠绡绨绫绮绯绱绲缍绶绺绻绾缁缂缃缇缈缋缌缏缑缒缗缙缜缛缟缡",6,"缪缫缬缭缯",4,"缵幺畿巛甾邕玎玑玮玢玟珏珂珑玷玳珀珉珈珥珙顼琊珩珧珞玺珲琏琪瑛琦琥琨琰琮琬"],["e840","鐯",14,"鐿",43,"鑬鑭鑮鑯"],["e880","鑰",20,"钑钖钘铇铏铓铔铚铦铻锜锠琛琚瑁瑜瑗瑕瑙瑷瑭瑾璜璎璀璁璇璋璞璨璩璐璧瓒璺韪韫韬杌杓杞杈杩枥枇杪杳枘枧杵枨枞枭枋杷杼柰栉柘栊柩枰栌柙枵柚枳柝栀柃枸柢栎柁柽栲栳桠桡桎桢桄桤梃栝桕桦桁桧桀栾桊桉栩梵梏桴桷梓桫棂楮棼椟椠棹"],["e940","锧锳锽镃镈镋镕镚镠镮镴镵長",7,"門",42],["e980","閫",32,"椤棰椋椁楗棣椐楱椹楠楂楝榄楫榀榘楸椴槌榇榈槎榉楦楣楹榛榧榻榫榭槔榱槁槊槟榕槠榍槿樯槭樗樘橥槲橄樾檠橐橛樵檎橹樽樨橘橼檑檐檩檗檫猷獒殁殂殇殄殒殓殍殚殛殡殪轫轭轱轲轳轵轶轸轷轹轺轼轾辁辂辄辇辋"],["ea40","闌",27,"闬闿阇阓阘阛阞阠阣",6,"阫阬阭阯阰阷阸阹阺阾陁陃陊陎陏陑陒陓陖陗"],["ea80","陘陙陚陜陝陞陠陣陥陦陫陭",4,"陳陸",12,"隇隉隊辍辎辏辘辚軎戋戗戛戟戢戡戥戤戬臧瓯瓴瓿甏甑甓攴旮旯旰昊昙杲昃昕昀炅曷昝昴昱昶昵耆晟晔晁晏晖晡晗晷暄暌暧暝暾曛曜曦曩贲贳贶贻贽赀赅赆赈赉赇赍赕赙觇觊觋觌觎觏觐觑牮犟牝牦牯牾牿犄犋犍犏犒挈挲掰"],["eb40","隌階隑隒隓隕隖隚際隝",9,"隨",7,"隱隲隴隵隷隸隺隻隿雂雃雈雊雋雐雑雓雔雖",9,"雡",6,"雫"],["eb80","雬雭雮雰雱雲雴雵雸雺電雼雽雿霂霃霅霊霋霌霐霑霒霔霕霗",4,"霝霟霠搿擘耄毪毳毽毵毹氅氇氆氍氕氘氙氚氡氩氤氪氲攵敕敫牍牒牖爰虢刖肟肜肓肼朊肽肱肫肭肴肷胧胨胩胪胛胂胄胙胍胗朐胝胫胱胴胭脍脎胲胼朕脒豚脶脞脬脘脲腈腌腓腴腙腚腱腠腩腼腽腭腧塍媵膈膂膑滕膣膪臌朦臊膻"],["ec40","霡",8,"霫霬霮霯霱霳",4,"霺霻霼霽霿",18,"靔靕靗靘靚靜靝靟靣靤靦靧靨靪",7],["ec80","靲靵靷",4,"靽",7,"鞆",4,"鞌鞎鞏鞐鞓鞕鞖鞗鞙",4,"臁膦欤欷欹歃歆歙飑飒飓飕飙飚殳彀毂觳斐齑斓於旆旄旃旌旎旒旖炀炜炖炝炻烀炷炫炱烨烊焐焓焖焯焱煳煜煨煅煲煊煸煺熘熳熵熨熠燠燔燧燹爝爨灬焘煦熹戾戽扃扈扉礻祀祆祉祛祜祓祚祢祗祠祯祧祺禅禊禚禧禳忑忐"],["ed40","鞞鞟鞡鞢鞤",6,"鞬鞮鞰鞱鞳鞵",46],["ed80","韤韥韨韮",4,"韴韷",23,"怼恝恚恧恁恙恣悫愆愍慝憩憝懋懑戆肀聿沓泶淼矶矸砀砉砗砘砑斫砭砜砝砹砺砻砟砼砥砬砣砩硎硭硖硗砦硐硇硌硪碛碓碚碇碜碡碣碲碹碥磔磙磉磬磲礅磴礓礤礞礴龛黹黻黼盱眄眍盹眇眈眚眢眙眭眦眵眸睐睑睇睃睚睨"],["ee40","頏",62],["ee80","顎",32,"睢睥睿瞍睽瞀瞌瞑瞟瞠瞰瞵瞽町畀畎畋畈畛畲畹疃罘罡罟詈罨罴罱罹羁罾盍盥蠲钅钆钇钋钊钌钍钏钐钔钗钕钚钛钜钣钤钫钪钭钬钯钰钲钴钶",4,"钼钽钿铄铈",6,"铐铑铒铕铖铗铙铘铛铞铟铠铢铤铥铧铨铪"],["ef40","顯",5,"颋颎颒颕颙颣風",37,"飏飐飔飖飗飛飜飝飠",4],["ef80","飥飦飩",30,"铩铫铮铯铳铴铵铷铹铼铽铿锃锂锆锇锉锊锍锎锏锒",4,"锘锛锝锞锟锢锪锫锩锬锱锲锴锶锷锸锼锾锿镂锵镄镅镆镉镌镎镏镒镓镔镖镗镘镙镛镞镟镝镡镢镤",8,"镯镱镲镳锺矧矬雉秕秭秣秫稆嵇稃稂稞稔"],["f040","餈",4,"餎餏餑",28,"餯",26],["f080","饊",9,"饖",12,"饤饦饳饸饹饻饾馂馃馉稹稷穑黏馥穰皈皎皓皙皤瓞瓠甬鸠鸢鸨",4,"鸲鸱鸶鸸鸷鸹鸺鸾鹁鹂鹄鹆鹇鹈鹉鹋鹌鹎鹑鹕鹗鹚鹛鹜鹞鹣鹦",6,"鹱鹭鹳疒疔疖疠疝疬疣疳疴疸痄疱疰痃痂痖痍痣痨痦痤痫痧瘃痱痼痿瘐瘀瘅瘌瘗瘊瘥瘘瘕瘙"],["f140","馌馎馚",10,"馦馧馩",47],["f180","駙",32,"瘛瘼瘢瘠癀瘭瘰瘿瘵癃瘾瘳癍癞癔癜癖癫癯翊竦穸穹窀窆窈窕窦窠窬窨窭窳衤衩衲衽衿袂袢裆袷袼裉裢裎裣裥裱褚裼裨裾裰褡褙褓褛褊褴褫褶襁襦襻疋胥皲皴矜耒耔耖耜耠耢耥耦耧耩耨耱耋耵聃聆聍聒聩聱覃顸颀颃"],["f240","駺",62],["f280","騹",32,"颉颌颍颏颔颚颛颞颟颡颢颥颦虍虔虬虮虿虺虼虻蚨蚍蚋蚬蚝蚧蚣蚪蚓蚩蚶蛄蚵蛎蚰蚺蚱蚯蛉蛏蚴蛩蛱蛲蛭蛳蛐蜓蛞蛴蛟蛘蛑蜃蜇蛸蜈蜊蜍蜉蜣蜻蜞蜥蜮蜚蜾蝈蜴蜱蜩蜷蜿螂蜢蝽蝾蝻蝠蝰蝌蝮螋蝓蝣蝼蝤蝙蝥螓螯螨蟒"],["f340","驚",17,"驲骃骉骍骎骔骕骙骦骩",6,"骲骳骴骵骹骻骽骾骿髃髄髆",4,"髍髎髏髐髒體髕髖髗髙髚髛髜"],["f380","髝髞髠髢髣髤髥髧髨髩髪髬髮髰",8,"髺髼",6,"鬄鬅鬆蟆螈螅螭螗螃螫蟥螬螵螳蟋蟓螽蟑蟀蟊蟛蟪蟠蟮蠖蠓蟾蠊蠛蠡蠹蠼缶罂罄罅舐竺竽笈笃笄笕笊笫笏筇笸笪笙笮笱笠笥笤笳笾笞筘筚筅筵筌筝筠筮筻筢筲筱箐箦箧箸箬箝箨箅箪箜箢箫箴篑篁篌篝篚篥篦篪簌篾篼簏簖簋"],["f440","鬇鬉",5,"鬐鬑鬒鬔",10,"鬠鬡鬢鬤",10,"鬰鬱鬳",7,"鬽鬾鬿魀魆魊魋魌魎魐魒魓魕",5],["f480","魛",32,"簟簪簦簸籁籀臾舁舂舄臬衄舡舢舣舭舯舨舫舸舻舳舴舾艄艉艋艏艚艟艨衾袅袈裘裟襞羝羟羧羯羰羲籼敉粑粝粜粞粢粲粼粽糁糇糌糍糈糅糗糨艮暨羿翎翕翥翡翦翩翮翳糸絷綦綮繇纛麸麴赳趄趔趑趱赧赭豇豉酊酐酎酏酤"],["f540","魼",62],["f580","鮻",32,"酢酡酰酩酯酽酾酲酴酹醌醅醐醍醑醢醣醪醭醮醯醵醴醺豕鹾趸跫踅蹙蹩趵趿趼趺跄跖跗跚跞跎跏跛跆跬跷跸跣跹跻跤踉跽踔踝踟踬踮踣踯踺蹀踹踵踽踱蹉蹁蹂蹑蹒蹊蹰蹶蹼蹯蹴躅躏躔躐躜躞豸貂貊貅貘貔斛觖觞觚觜"],["f640","鯜",62],["f680","鰛",32,"觥觫觯訾謦靓雩雳雯霆霁霈霏霎霪霭霰霾龀龃龅",5,"龌黾鼋鼍隹隼隽雎雒瞿雠銎銮鋈錾鍪鏊鎏鐾鑫鱿鲂鲅鲆鲇鲈稣鲋鲎鲐鲑鲒鲔鲕鲚鲛鲞",5,"鲥",4,"鲫鲭鲮鲰",7,"鲺鲻鲼鲽鳄鳅鳆鳇鳊鳋"],["f740","鰼",62],["f780","鱻鱽鱾鲀鲃鲄鲉鲊鲌鲏鲓鲖鲗鲘鲙鲝鲪鲬鲯鲹鲾",4,"鳈鳉鳑鳒鳚鳛鳠鳡鳌",4,"鳓鳔鳕鳗鳘鳙鳜鳝鳟鳢靼鞅鞑鞒鞔鞯鞫鞣鞲鞴骱骰骷鹘骶骺骼髁髀髅髂髋髌髑魅魃魇魉魈魍魑飨餍餮饕饔髟髡髦髯髫髻髭髹鬈鬏鬓鬟鬣麽麾縻麂麇麈麋麒鏖麝麟黛黜黝黠黟黢黩黧黥黪黯鼢鼬鼯鼹鼷鼽鼾齄"],["f840","鳣",62],["f880","鴢",32],["f940","鵃",62],["f980","鶂",32],["fa40","鶣",62],["fa80","鷢",32],["fb40","鸃",27,"鸤鸧鸮鸰鸴鸻鸼鹀鹍鹐鹒鹓鹔鹖鹙鹝鹟鹠鹡鹢鹥鹮鹯鹲鹴",9,"麀"],["fb80","麁麃麄麅麆麉麊麌",5,"麔",8,"麞麠",5,"麧麨麩麪"],["fc40","麫",8,"麵麶麷麹麺麼麿",4,"黅黆黇黈黊黋黌黐黒黓黕黖黗黙黚點黡黣黤黦黨黫黬黭黮黰",8,"黺黽黿",6],["fc80","鼆",4,"鼌鼏鼑鼒鼔鼕鼖鼘鼚",5,"鼡鼣",8,"鼭鼮鼰鼱"],["fd40","鼲",4,"鼸鼺鼼鼿",4,"齅",10,"齒",38],["fd80","齹",5,"龁龂龍",11,"龜龝龞龡",4,"郎凉秊裏隣"],["fe40","兀嗀﨎﨏﨑﨓﨔礼﨟蘒﨡﨣﨤﨧﨨﨩"]]');

/***/ }),

/***/ "(middleware)/./node_modules/iconv-lite/encodings/tables/cp949.json":
/*!*************************************************************!*\
  !*** ./node_modules/iconv-lite/encodings/tables/cp949.json ***!
  \*************************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('[["0","\\u0000",127],["8141","갂갃갅갆갋",4,"갘갞갟갡갢갣갥",6,"갮갲갳갴"],["8161","갵갶갷갺갻갽갾갿걁",9,"걌걎",5,"걕"],["8181","걖걗걙걚걛걝",18,"걲걳걵걶걹걻",4,"겂겇겈겍겎겏겑겒겓겕",6,"겞겢",5,"겫겭겮겱",6,"겺겾겿곀곂곃곅곆곇곉곊곋곍",7,"곖곘",7,"곢곣곥곦곩곫곭곮곲곴곷",4,"곾곿괁괂괃괅괇",4,"괎괐괒괓"],["8241","괔괕괖괗괙괚괛괝괞괟괡",7,"괪괫괮",5],["8261","괶괷괹괺괻괽",6,"굆굈굊",5,"굑굒굓굕굖굗"],["8281","굙",7,"굢굤",7,"굮굯굱굲굷굸굹굺굾궀궃",4,"궊궋궍궎궏궑",10,"궞",5,"궥",17,"궸",7,"귂귃귅귆귇귉",6,"귒귔",7,"귝귞귟귡귢귣귥",18],["8341","귺귻귽귾긂",5,"긊긌긎",5,"긕",7],["8361","긝",18,"긲긳긵긶긹긻긼"],["8381","긽긾긿깂깄깇깈깉깋깏깑깒깓깕깗",4,"깞깢깣깤깦깧깪깫깭깮깯깱",6,"깺깾",5,"꺆",5,"꺍",46,"꺿껁껂껃껅",6,"껎껒",5,"껚껛껝",8],["8441","껦껧껩껪껬껮",5,"껵껶껷껹껺껻껽",8],["8461","꼆꼉꼊꼋꼌꼎꼏꼑",18],["8481","꼤",7,"꼮꼯꼱꼳꼵",6,"꼾꽀꽄꽅꽆꽇꽊",5,"꽑",10,"꽞",5,"꽦",18,"꽺",5,"꾁꾂꾃꾅꾆꾇꾉",6,"꾒꾓꾔꾖",5,"꾝",26,"꾺꾻꾽꾾"],["8541","꾿꿁",5,"꿊꿌꿏",4,"꿕",6,"꿝",4],["8561","꿢",5,"꿪",5,"꿲꿳꿵꿶꿷꿹",6,"뀂뀃"],["8581","뀅",6,"뀍뀎뀏뀑뀒뀓뀕",6,"뀞",9,"뀩",26,"끆끇끉끋끍끏끐끑끒끖끘끚끛끜끞",29,"끾끿낁낂낃낅",6,"낎낐낒",5,"낛낝낞낣낤"],["8641","낥낦낧낪낰낲낶낷낹낺낻낽",6,"냆냊",5,"냒"],["8661","냓냕냖냗냙",6,"냡냢냣냤냦",10],["8681","냱",22,"넊넍넎넏넑넔넕넖넗넚넞",4,"넦넧넩넪넫넭",6,"넶넺",5,"녂녃녅녆녇녉",6,"녒녓녖녗녙녚녛녝녞녟녡",22,"녺녻녽녾녿놁놃",4,"놊놌놎놏놐놑놕놖놗놙놚놛놝"],["8741","놞",9,"놩",15],["8761","놹",18,"뇍뇎뇏뇑뇒뇓뇕"],["8781","뇖",5,"뇞뇠",7,"뇪뇫뇭뇮뇯뇱",7,"뇺뇼뇾",5,"눆눇눉눊눍",6,"눖눘눚",5,"눡",18,"눵",6,"눽",26,"뉙뉚뉛뉝뉞뉟뉡",6,"뉪",4],["8841","뉯",4,"뉶",5,"뉽",6,"늆늇늈늊",4],["8861","늏늒늓늕늖늗늛",4,"늢늤늧늨늩늫늭늮늯늱늲늳늵늶늷"],["8881","늸",15,"닊닋닍닎닏닑닓",4,"닚닜닞닟닠닡닣닧닩닪닰닱닲닶닼닽닾댂댃댅댆댇댉",6,"댒댖",5,"댝",54,"덗덙덚덝덠덡덢덣"],["8941","덦덨덪덬덭덯덲덳덵덶덷덹",6,"뎂뎆",5,"뎍"],["8961","뎎뎏뎑뎒뎓뎕",10,"뎢",5,"뎩뎪뎫뎭"],["8981","뎮",21,"돆돇돉돊돍돏돑돒돓돖돘돚돜돞돟돡돢돣돥돦돧돩",18,"돽",18,"됑",6,"됙됚됛됝됞됟됡",6,"됪됬",7,"됵",15],["8a41","둅",10,"둒둓둕둖둗둙",6,"둢둤둦"],["8a61","둧",4,"둭",18,"뒁뒂"],["8a81","뒃",4,"뒉",19,"뒞",5,"뒥뒦뒧뒩뒪뒫뒭",7,"뒶뒸뒺",5,"듁듂듃듅듆듇듉",6,"듑듒듓듔듖",5,"듞듟듡듢듥듧",4,"듮듰듲",5,"듹",26,"딖딗딙딚딝"],["8b41","딞",5,"딦딫",4,"딲딳딵딶딷딹",6,"땂땆"],["8b61","땇땈땉땊땎땏땑땒땓땕",6,"땞땢",8],["8b81","땫",52,"떢떣떥떦떧떩떬떭떮떯떲떶",4,"떾떿뗁뗂뗃뗅",6,"뗎뗒",5,"뗙",18,"뗭",18],["8c41","똀",15,"똒똓똕똖똗똙",4],["8c61","똞",6,"똦",5,"똭",6,"똵",5],["8c81","똻",12,"뙉",26,"뙥뙦뙧뙩",50,"뚞뚟뚡뚢뚣뚥",5,"뚭뚮뚯뚰뚲",16],["8d41","뛃",16,"뛕",8],["8d61","뛞",17,"뛱뛲뛳뛵뛶뛷뛹뛺"],["8d81","뛻",4,"뜂뜃뜄뜆",33,"뜪뜫뜭뜮뜱",6,"뜺뜼",7,"띅띆띇띉띊띋띍",6,"띖",9,"띡띢띣띥띦띧띩",6,"띲띴띶",5,"띾띿랁랂랃랅",6,"랎랓랔랕랚랛랝랞"],["8e41","랟랡",6,"랪랮",5,"랶랷랹",8],["8e61","럂",4,"럈럊",19],["8e81","럞",13,"럮럯럱럲럳럵",6,"럾렂",4,"렊렋렍렎렏렑",6,"렚렜렞",5,"렦렧렩렪렫렭",6,"렶렺",5,"롁롂롃롅",11,"롒롔",7,"롞롟롡롢롣롥",6,"롮롰롲",5,"롹롺롻롽",7],["8f41","뢅",7,"뢎",17],["8f61","뢠",7,"뢩",6,"뢱뢲뢳뢵뢶뢷뢹",4],["8f81","뢾뢿룂룄룆",5,"룍룎룏룑룒룓룕",7,"룞룠룢",5,"룪룫룭룮룯룱",6,"룺룼룾",5,"뤅",18,"뤙",6,"뤡",26,"뤾뤿륁륂륃륅",6,"륍륎륐륒",5],["9041","륚륛륝륞륟륡",6,"륪륬륮",5,"륶륷륹륺륻륽"],["9061","륾",5,"릆릈릋릌릏",15],["9081","릟",12,"릮릯릱릲릳릵",6,"릾맀맂",5,"맊맋맍맓",4,"맚맜맟맠맢맦맧맩맪맫맭",6,"맶맻",4,"먂",5,"먉",11,"먖",33,"먺먻먽먾먿멁멃멄멅멆"],["9141","멇멊멌멏멐멑멒멖멗멙멚멛멝",6,"멦멪",5],["9161","멲멳멵멶멷멹",9,"몆몈몉몊몋몍",5],["9181","몓",20,"몪몭몮몯몱몳",4,"몺몼몾",5,"뫅뫆뫇뫉",14,"뫚",33,"뫽뫾뫿묁묂묃묅",7,"묎묐묒",5,"묙묚묛묝묞묟묡",6],["9241","묨묪묬",7,"묷묹묺묿",4,"뭆뭈뭊뭋뭌뭎뭑뭒"],["9261","뭓뭕뭖뭗뭙",7,"뭢뭤",7,"뭭",4],["9281","뭲",21,"뮉뮊뮋뮍뮎뮏뮑",18,"뮥뮦뮧뮩뮪뮫뮭",6,"뮵뮶뮸",7,"믁믂믃믅믆믇믉",6,"믑믒믔",35,"믺믻믽믾밁"],["9341","밃",4,"밊밎밐밒밓밙밚밠밡밢밣밦밨밪밫밬밮밯밲밳밵"],["9361","밶밷밹",6,"뱂뱆뱇뱈뱊뱋뱎뱏뱑",8],["9381","뱚뱛뱜뱞",37,"벆벇벉벊벍벏",4,"벖벘벛",4,"벢벣벥벦벩",6,"벲벶",5,"벾벿볁볂볃볅",7,"볎볒볓볔볖볗볙볚볛볝",22,"볷볹볺볻볽"],["9441","볾",5,"봆봈봊",5,"봑봒봓봕",8],["9461","봞",5,"봥",6,"봭",12],["9481","봺",5,"뵁",6,"뵊뵋뵍뵎뵏뵑",6,"뵚",9,"뵥뵦뵧뵩",22,"붂붃붅붆붋",4,"붒붔붖붗붘붛붝",6,"붥",10,"붱",6,"붹",24],["9541","뷒뷓뷖뷗뷙뷚뷛뷝",11,"뷪",5,"뷱"],["9561","뷲뷳뷵뷶뷷뷹",6,"븁븂븄븆",5,"븎븏븑븒븓"],["9581","븕",6,"븞븠",35,"빆빇빉빊빋빍빏",4,"빖빘빜빝빞빟빢빣빥빦빧빩빫",4,"빲빶",4,"빾빿뺁뺂뺃뺅",6,"뺎뺒",5,"뺚",13,"뺩",14],["9641","뺸",23,"뻒뻓"],["9661","뻕뻖뻙",6,"뻡뻢뻦",5,"뻭",8],["9681","뻶",10,"뼂",5,"뼊",13,"뼚뼞",33,"뽂뽃뽅뽆뽇뽉",6,"뽒뽓뽔뽖",44],["9741","뾃",16,"뾕",8],["9761","뾞",17,"뾱",7],["9781","뾹",11,"뿆",5,"뿎뿏뿑뿒뿓뿕",6,"뿝뿞뿠뿢",89,"쀽쀾쀿"],["9841","쁀",16,"쁒",5,"쁙쁚쁛"],["9861","쁝쁞쁟쁡",6,"쁪",15],["9881","쁺",21,"삒삓삕삖삗삙",6,"삢삤삦",5,"삮삱삲삷",4,"삾샂샃샄샆샇샊샋샍샎샏샑",6,"샚샞",5,"샦샧샩샪샫샭",6,"샶샸샺",5,"섁섂섃섅섆섇섉",6,"섑섒섓섔섖",5,"섡섢섥섨섩섪섫섮"],["9941","섲섳섴섵섷섺섻섽섾섿셁",6,"셊셎",5,"셖셗"],["9961","셙셚셛셝",6,"셦셪",5,"셱셲셳셵셶셷셹셺셻"],["9981","셼",8,"솆",5,"솏솑솒솓솕솗",4,"솞솠솢솣솤솦솧솪솫솭솮솯솱",11,"솾",5,"쇅쇆쇇쇉쇊쇋쇍",6,"쇕쇖쇙",6,"쇡쇢쇣쇥쇦쇧쇩",6,"쇲쇴",7,"쇾쇿숁숂숃숅",6,"숎숐숒",5,"숚숛숝숞숡숢숣"],["9a41","숤숥숦숧숪숬숮숰숳숵",16],["9a61","쉆쉇쉉",6,"쉒쉓쉕쉖쉗쉙",6,"쉡쉢쉣쉤쉦"],["9a81","쉧",4,"쉮쉯쉱쉲쉳쉵",6,"쉾슀슂",5,"슊",5,"슑",6,"슙슚슜슞",5,"슦슧슩슪슫슮",5,"슶슸슺",33,"싞싟싡싢싥",5,"싮싰싲싳싴싵싷싺싽싾싿쌁",6,"쌊쌋쌎쌏"],["9b41","쌐쌑쌒쌖쌗쌙쌚쌛쌝",6,"쌦쌧쌪",8],["9b61","쌳",17,"썆",7],["9b81","썎",25,"썪썫썭썮썯썱썳",4,"썺썻썾",5,"쎅쎆쎇쎉쎊쎋쎍",50,"쏁",22,"쏚"],["9c41","쏛쏝쏞쏡쏣",4,"쏪쏫쏬쏮",5,"쏶쏷쏹",5],["9c61","쏿",8,"쐉",6,"쐑",9],["9c81","쐛",8,"쐥",6,"쐭쐮쐯쐱쐲쐳쐵",6,"쐾",9,"쑉",26,"쑦쑧쑩쑪쑫쑭",6,"쑶쑷쑸쑺",5,"쒁",18,"쒕",6,"쒝",12],["9d41","쒪",13,"쒹쒺쒻쒽",8],["9d61","쓆",25],["9d81","쓠",8,"쓪",5,"쓲쓳쓵쓶쓷쓹쓻쓼쓽쓾씂",9,"씍씎씏씑씒씓씕",6,"씝",10,"씪씫씭씮씯씱",6,"씺씼씾",5,"앆앇앋앏앐앑앒앖앚앛앜앟앢앣앥앦앧앩",6,"앲앶",5,"앾앿얁얂얃얅얆얈얉얊얋얎얐얒얓얔"],["9e41","얖얙얚얛얝얞얟얡",7,"얪",9,"얶"],["9e61","얷얺얿",4,"엋엍엏엒엓엕엖엗엙",6,"엢엤엦엧"],["9e81","엨엩엪엫엯엱엲엳엵엸엹엺엻옂옃옄옉옊옋옍옎옏옑",6,"옚옝",6,"옦옧옩옪옫옯옱옲옶옸옺옼옽옾옿왂왃왅왆왇왉",6,"왒왖",5,"왞왟왡",10,"왭왮왰왲",5,"왺왻왽왾왿욁",6,"욊욌욎",5,"욖욗욙욚욛욝",6,"욦"],["9f41","욨욪",5,"욲욳욵욶욷욻",4,"웂웄웆",5,"웎"],["9f61","웏웑웒웓웕",6,"웞웟웢",5,"웪웫웭웮웯웱웲"],["9f81","웳",4,"웺웻웼웾",5,"윆윇윉윊윋윍",6,"윖윘윚",5,"윢윣윥윦윧윩",6,"윲윴윶윸윹윺윻윾윿읁읂읃읅",4,"읋읎읐읙읚읛읝읞읟읡",6,"읩읪읬",7,"읶읷읹읺읻읿잀잁잂잆잋잌잍잏잒잓잕잙잛",4,"잢잧",4,"잮잯잱잲잳잵잶잷"],["a041","잸잹잺잻잾쟂",5,"쟊쟋쟍쟏쟑",6,"쟙쟚쟛쟜"],["a061","쟞",5,"쟥쟦쟧쟩쟪쟫쟭",13],["a081","쟻",4,"젂젃젅젆젇젉젋",4,"젒젔젗",4,"젞젟젡젢젣젥",6,"젮젰젲",5,"젹젺젻젽젾젿졁",6,"졊졋졎",5,"졕",26,"졲졳졵졶졷졹졻",4,"좂좄좈좉좊좎",5,"좕",7,"좞좠좢좣좤"],["a141","좥좦좧좩",18,"좾좿죀죁"],["a161","죂죃죅죆죇죉죊죋죍",6,"죖죘죚",5,"죢죣죥"],["a181","죦",14,"죶",5,"죾죿줁줂줃줇",4,"줎　、。·‥…¨〃­―∥＼∼‘’“”〔〕〈",9,"±×÷≠≤≥∞∴°′″℃Å￠￡￥♂♀∠⊥⌒∂∇≡≒§※☆★○●◎◇◆□■△▲▽▼→←↑↓↔〓≪≫√∽∝∵∫∬∈∋⊆⊇⊂⊃∪∩∧∨￢"],["a241","줐줒",5,"줙",18],["a261","줭",6,"줵",18],["a281","쥈",7,"쥒쥓쥕쥖쥗쥙",6,"쥢쥤",7,"쥭쥮쥯⇒⇔∀∃´～ˇ˘˝˚˙¸˛¡¿ː∮∑∏¤℉‰◁◀▷▶♤♠♡♥♧♣⊙◈▣◐◑▒▤▥▨▧▦▩♨☏☎☜☞¶†‡↕↗↙↖↘♭♩♪♬㉿㈜№㏇™㏂㏘℡€®"],["a341","쥱쥲쥳쥵",6,"쥽",10,"즊즋즍즎즏"],["a361","즑",6,"즚즜즞",16],["a381","즯",16,"짂짃짅짆짉짋",4,"짒짔짗짘짛！",58,"￦］",32,"￣"],["a441","짞짟짡짣짥짦짨짩짪짫짮짲",5,"짺짻짽짾짿쨁쨂쨃쨄"],["a461","쨅쨆쨇쨊쨎",5,"쨕쨖쨗쨙",12],["a481","쨦쨧쨨쨪",28,"ㄱ",93],["a541","쩇",4,"쩎쩏쩑쩒쩓쩕",6,"쩞쩢",5,"쩩쩪"],["a561","쩫",17,"쩾",5,"쪅쪆"],["a581","쪇",16,"쪙",14,"ⅰ",9],["a5b0","Ⅰ",9],["a5c1","Α",16,"Σ",6],["a5e1","α",16,"σ",6],["a641","쪨",19,"쪾쪿쫁쫂쫃쫅"],["a661","쫆",5,"쫎쫐쫒쫔쫕쫖쫗쫚",5,"쫡",6],["a681","쫨쫩쫪쫫쫭",6,"쫵",18,"쬉쬊─│┌┐┘└├┬┤┴┼━┃┏┓┛┗┣┳┫┻╋┠┯┨┷┿┝┰┥┸╂┒┑┚┙┖┕┎┍┞┟┡┢┦┧┩┪┭┮┱┲┵┶┹┺┽┾╀╁╃",7],["a741","쬋",4,"쬑쬒쬓쬕쬖쬗쬙",6,"쬢",7],["a761","쬪",22,"쭂쭃쭄"],["a781","쭅쭆쭇쭊쭋쭍쭎쭏쭑",6,"쭚쭛쭜쭞",5,"쭥",7,"㎕㎖㎗ℓ㎘㏄㎣㎤㎥㎦㎙",9,"㏊㎍㎎㎏㏏㎈㎉㏈㎧㎨㎰",9,"㎀",4,"㎺",5,"㎐",4,"Ω㏀㏁㎊㎋㎌㏖㏅㎭㎮㎯㏛㎩㎪㎫㎬㏝㏐㏓㏃㏉㏜㏆"],["a841","쭭",10,"쭺",14],["a861","쮉",18,"쮝",6],["a881","쮤",19,"쮹",11,"ÆÐªĦ"],["a8a6","Ĳ"],["a8a8","ĿŁØŒºÞŦŊ"],["a8b1","㉠",27,"ⓐ",25,"①",14,"½⅓⅔¼¾⅛⅜⅝⅞"],["a941","쯅",14,"쯕",10],["a961","쯠쯡쯢쯣쯥쯦쯨쯪",18],["a981","쯽",14,"찎찏찑찒찓찕",6,"찞찟찠찣찤æđðħıĳĸŀłøœßþŧŋŉ㈀",27,"⒜",25,"⑴",14,"¹²³⁴ⁿ₁₂₃₄"],["aa41","찥찦찪찫찭찯찱",6,"찺찿",4,"챆챇챉챊챋챍챎"],["aa61","챏",4,"챖챚",5,"챡챢챣챥챧챩",6,"챱챲"],["aa81","챳챴챶",29,"ぁ",82],["ab41","첔첕첖첗첚첛첝첞첟첡",6,"첪첮",5,"첶첷첹"],["ab61","첺첻첽",6,"쳆쳈쳊",5,"쳑쳒쳓쳕",5],["ab81","쳛",8,"쳥",6,"쳭쳮쳯쳱",12,"ァ",85],["ac41","쳾쳿촀촂",5,"촊촋촍촎촏촑",6,"촚촜촞촟촠"],["ac61","촡촢촣촥촦촧촩촪촫촭",11,"촺",4],["ac81","촿",28,"쵝쵞쵟А",5,"ЁЖ",25],["acd1","а",5,"ёж",25],["ad41","쵡쵢쵣쵥",6,"쵮쵰쵲",5,"쵹",7],["ad61","춁",6,"춉",10,"춖춗춙춚춛춝춞춟"],["ad81","춠춡춢춣춦춨춪",5,"춱",18,"췅"],["ae41","췆",5,"췍췎췏췑",16],["ae61","췢",5,"췩췪췫췭췮췯췱",6,"췺췼췾",4],["ae81","츃츅츆츇츉츊츋츍",6,"츕츖츗츘츚",5,"츢츣츥츦츧츩츪츫"],["af41","츬츭츮츯츲츴츶",19],["af61","칊",13,"칚칛칝칞칢",5,"칪칬"],["af81","칮",5,"칶칷칹칺칻칽",6,"캆캈캊",5,"캒캓캕캖캗캙"],["b041","캚",5,"캢캦",5,"캮",12],["b061","캻",5,"컂",19],["b081","컖",13,"컦컧컩컪컭",6,"컶컺",5,"가각간갇갈갉갊감",7,"같",4,"갠갤갬갭갯갰갱갸갹갼걀걋걍걔걘걜거걱건걷걸걺검겁것겄겅겆겉겊겋게겐겔겜겝겟겠겡겨격겪견겯결겸겹겻겼경곁계곈곌곕곗고곡곤곧골곪곬곯곰곱곳공곶과곽관괄괆"],["b141","켂켃켅켆켇켉",6,"켒켔켖",5,"켝켞켟켡켢켣"],["b161","켥",6,"켮켲",5,"켹",11],["b181","콅",14,"콖콗콙콚콛콝",6,"콦콨콪콫콬괌괍괏광괘괜괠괩괬괭괴괵괸괼굄굅굇굉교굔굘굡굣구국군굳굴굵굶굻굼굽굿궁궂궈궉권궐궜궝궤궷귀귁귄귈귐귑귓규균귤그극근귿글긁금급긋긍긔기긱긴긷길긺김깁깃깅깆깊까깍깎깐깔깖깜깝깟깠깡깥깨깩깬깰깸"],["b241","콭콮콯콲콳콵콶콷콹",6,"쾁쾂쾃쾄쾆",5,"쾍"],["b261","쾎",18,"쾢",5,"쾩"],["b281","쾪",5,"쾱",18,"쿅",6,"깹깻깼깽꺄꺅꺌꺼꺽꺾껀껄껌껍껏껐껑께껙껜껨껫껭껴껸껼꼇꼈꼍꼐꼬꼭꼰꼲꼴꼼꼽꼿꽁꽂꽃꽈꽉꽐꽜꽝꽤꽥꽹꾀꾄꾈꾐꾑꾕꾜꾸꾹꾼꿀꿇꿈꿉꿋꿍꿎꿔꿜꿨꿩꿰꿱꿴꿸뀀뀁뀄뀌뀐뀔뀜뀝뀨끄끅끈끊끌끎끓끔끕끗끙"],["b341","쿌",19,"쿢쿣쿥쿦쿧쿩"],["b361","쿪",5,"쿲쿴쿶",5,"쿽쿾쿿퀁퀂퀃퀅",5],["b381","퀋",5,"퀒",5,"퀙",19,"끝끼끽낀낄낌낍낏낑나낙낚난낟날낡낢남납낫",4,"낱낳내낵낸낼냄냅냇냈냉냐냑냔냘냠냥너넉넋넌널넒넓넘넙넛넜넝넣네넥넨넬넴넵넷넸넹녀녁년녈념녑녔녕녘녜녠노녹논놀놂놈놉놋농높놓놔놘놜놨뇌뇐뇔뇜뇝"],["b441","퀮",5,"퀶퀷퀹퀺퀻퀽",6,"큆큈큊",5],["b461","큑큒큓큕큖큗큙",6,"큡",10,"큮큯"],["b481","큱큲큳큵",6,"큾큿킀킂",18,"뇟뇨뇩뇬뇰뇹뇻뇽누눅눈눋눌눔눕눗눙눠눴눼뉘뉜뉠뉨뉩뉴뉵뉼늄늅늉느늑는늘늙늚늠늡늣능늦늪늬늰늴니닉닌닐닒님닙닛닝닢다닥닦단닫",4,"닳담답닷",4,"닿대댁댄댈댐댑댓댔댕댜더덕덖던덛덜덞덟덤덥"],["b541","킕",14,"킦킧킩킪킫킭",5],["b561","킳킶킸킺",5,"탂탃탅탆탇탊",5,"탒탖",4],["b581","탛탞탟탡탢탣탥",6,"탮탲",5,"탹",11,"덧덩덫덮데덱덴델뎀뎁뎃뎄뎅뎌뎐뎔뎠뎡뎨뎬도독돈돋돌돎돐돔돕돗동돛돝돠돤돨돼됐되된될됨됩됫됴두둑둔둘둠둡둣둥둬뒀뒈뒝뒤뒨뒬뒵뒷뒹듀듄듈듐듕드득든듣들듦듬듭듯등듸디딕딘딛딜딤딥딧딨딩딪따딱딴딸"],["b641","턅",7,"턎",17],["b661","턠",15,"턲턳턵턶턷턹턻턼턽턾"],["b681","턿텂텆",5,"텎텏텑텒텓텕",6,"텞텠텢",5,"텩텪텫텭땀땁땃땄땅땋때땍땐땔땜땝땟땠땡떠떡떤떨떪떫떰떱떳떴떵떻떼떽뗀뗄뗌뗍뗏뗐뗑뗘뗬또똑똔똘똥똬똴뙈뙤뙨뚜뚝뚠뚤뚫뚬뚱뛔뛰뛴뛸뜀뜁뜅뜨뜩뜬뜯뜰뜸뜹뜻띄띈띌띔띕띠띤띨띰띱띳띵라락란랄람랍랏랐랑랒랖랗"],["b741","텮",13,"텽",6,"톅톆톇톉톊"],["b761","톋",20,"톢톣톥톦톧"],["b781","톩",6,"톲톴톶톷톸톹톻톽톾톿퇁",14,"래랙랜랠램랩랫랬랭랴략랸럇량러럭런럴럼럽럿렀렁렇레렉렌렐렘렙렛렝려력련렬렴렵렷렸령례롄롑롓로록론롤롬롭롯롱롸롼뢍뢨뢰뢴뢸룀룁룃룅료룐룔룝룟룡루룩룬룰룸룹룻룽뤄뤘뤠뤼뤽륀륄륌륏륑류륙륜률륨륩"],["b841","퇐",7,"퇙",17],["b861","퇫",8,"퇵퇶퇷퇹",13],["b881","툈툊",5,"툑",24,"륫륭르륵른를름릅릇릉릊릍릎리릭린릴림립릿링마막만많",4,"맘맙맛망맞맡맣매맥맨맬맴맵맷맸맹맺먀먁먈먕머먹먼멀멂멈멉멋멍멎멓메멕멘멜멤멥멧멨멩며멱면멸몃몄명몇몌모목몫몬몰몲몸몹못몽뫄뫈뫘뫙뫼"],["b941","툪툫툮툯툱툲툳툵",6,"툾퉀퉂",5,"퉉퉊퉋퉌"],["b961","퉍",14,"퉝",6,"퉥퉦퉧퉨"],["b981","퉩",22,"튂튃튅튆튇튉튊튋튌묀묄묍묏묑묘묜묠묩묫무묵묶문묻물묽묾뭄뭅뭇뭉뭍뭏뭐뭔뭘뭡뭣뭬뮈뮌뮐뮤뮨뮬뮴뮷므믄믈믐믓미믹민믿밀밂밈밉밋밌밍및밑바",4,"받",4,"밤밥밧방밭배백밴밸뱀뱁뱃뱄뱅뱉뱌뱍뱐뱝버벅번벋벌벎범법벗"],["ba41","튍튎튏튒튓튔튖",5,"튝튞튟튡튢튣튥",6,"튭"],["ba61","튮튯튰튲",5,"튺튻튽튾틁틃",4,"틊틌",5],["ba81","틒틓틕틖틗틙틚틛틝",6,"틦",9,"틲틳틵틶틷틹틺벙벚베벡벤벧벨벰벱벳벴벵벼벽변별볍볏볐병볕볘볜보복볶본볼봄봅봇봉봐봔봤봬뵀뵈뵉뵌뵐뵘뵙뵤뵨부북분붇불붉붊붐붑붓붕붙붚붜붤붰붸뷔뷕뷘뷜뷩뷰뷴뷸븀븃븅브븍븐블븜븝븟비빅빈빌빎빔빕빗빙빚빛빠빡빤"],["bb41","틻",4,"팂팄팆",5,"팏팑팒팓팕팗",4,"팞팢팣"],["bb61","팤팦팧팪팫팭팮팯팱",6,"팺팾",5,"퍆퍇퍈퍉"],["bb81","퍊",31,"빨빪빰빱빳빴빵빻빼빽뺀뺄뺌뺍뺏뺐뺑뺘뺙뺨뻐뻑뻔뻗뻘뻠뻣뻤뻥뻬뼁뼈뼉뼘뼙뼛뼜뼝뽀뽁뽄뽈뽐뽑뽕뾔뾰뿅뿌뿍뿐뿔뿜뿟뿡쀼쁑쁘쁜쁠쁨쁩삐삑삔삘삠삡삣삥사삭삯산삳살삵삶삼삽삿샀상샅새색샌샐샘샙샛샜생샤"],["bc41","퍪",17,"퍾퍿펁펂펃펅펆펇"],["bc61","펈펉펊펋펎펒",5,"펚펛펝펞펟펡",6,"펪펬펮"],["bc81","펯",4,"펵펶펷펹펺펻펽",6,"폆폇폊",5,"폑",5,"샥샨샬샴샵샷샹섀섄섈섐섕서",4,"섣설섦섧섬섭섯섰성섶세섹센셀셈셉셋셌셍셔셕션셜셤셥셧셨셩셰셴셸솅소속솎손솔솖솜솝솟송솥솨솩솬솰솽쇄쇈쇌쇔쇗쇘쇠쇤쇨쇰쇱쇳쇼쇽숀숄숌숍숏숑수숙순숟술숨숩숫숭"],["bd41","폗폙",7,"폢폤",7,"폮폯폱폲폳폵폶폷"],["bd61","폸폹폺폻폾퐀퐂",5,"퐉",13],["bd81","퐗",5,"퐞",25,"숯숱숲숴쉈쉐쉑쉔쉘쉠쉥쉬쉭쉰쉴쉼쉽쉿슁슈슉슐슘슛슝스슥슨슬슭슴습슷승시식신싣실싫심십싯싱싶싸싹싻싼쌀쌈쌉쌌쌍쌓쌔쌕쌘쌜쌤쌥쌨쌩썅써썩썬썰썲썸썹썼썽쎄쎈쎌쏀쏘쏙쏜쏟쏠쏢쏨쏩쏭쏴쏵쏸쐈쐐쐤쐬쐰"],["be41","퐸",7,"푁푂푃푅",14],["be61","푔",7,"푝푞푟푡푢푣푥",7,"푮푰푱푲"],["be81","푳",4,"푺푻푽푾풁풃",4,"풊풌풎",5,"풕",8,"쐴쐼쐽쑈쑤쑥쑨쑬쑴쑵쑹쒀쒔쒜쒸쒼쓩쓰쓱쓴쓸쓺쓿씀씁씌씐씔씜씨씩씬씰씸씹씻씽아악안앉않알앍앎앓암압앗았앙앝앞애액앤앨앰앱앳앴앵야약얀얄얇얌얍얏양얕얗얘얜얠얩어억언얹얻얼얽얾엄",6,"엌엎"],["bf41","풞",10,"풪",14],["bf61","풹",18,"퓍퓎퓏퓑퓒퓓퓕"],["bf81","퓖",5,"퓝퓞퓠",7,"퓩퓪퓫퓭퓮퓯퓱",6,"퓹퓺퓼에엑엔엘엠엡엣엥여역엮연열엶엷염",5,"옅옆옇예옌옐옘옙옛옜오옥온올옭옮옰옳옴옵옷옹옻와왁완왈왐왑왓왔왕왜왝왠왬왯왱외왹왼욀욈욉욋욍요욕욘욜욤욥욧용우욱운울욹욺움웁웃웅워웍원월웜웝웠웡웨"],["c041","퓾",5,"픅픆픇픉픊픋픍",6,"픖픘",5],["c061","픞",25],["c081","픸픹픺픻픾픿핁핂핃핅",6,"핎핐핒",5,"핚핛핝핞핟핡핢핣웩웬웰웸웹웽위윅윈윌윔윕윗윙유육윤율윰윱윳융윷으윽은을읊음읍읏응",7,"읜읠읨읫이익인일읽읾잃임입잇있잉잊잎자작잔잖잗잘잚잠잡잣잤장잦재잭잰잴잼잽잿쟀쟁쟈쟉쟌쟎쟐쟘쟝쟤쟨쟬저적전절젊"],["c141","핤핦핧핪핬핮",5,"핶핷핹핺핻핽",6,"햆햊햋"],["c161","햌햍햎햏햑",19,"햦햧"],["c181","햨",31,"점접젓정젖제젝젠젤젬젭젯젱져젼졀졈졉졌졍졔조족존졸졺좀좁좃종좆좇좋좌좍좔좝좟좡좨좼좽죄죈죌죔죕죗죙죠죡죤죵주죽준줄줅줆줌줍줏중줘줬줴쥐쥑쥔쥘쥠쥡쥣쥬쥰쥴쥼즈즉즌즐즘즙즛증지직진짇질짊짐집짓"],["c241","헊헋헍헎헏헑헓",4,"헚헜헞",5,"헦헧헩헪헫헭헮"],["c261","헯",4,"헶헸헺",5,"혂혃혅혆혇혉",6,"혒"],["c281","혖",5,"혝혞혟혡혢혣혥",7,"혮",9,"혺혻징짖짙짚짜짝짠짢짤짧짬짭짯짰짱째짹짼쨀쨈쨉쨋쨌쨍쨔쨘쨩쩌쩍쩐쩔쩜쩝쩟쩠쩡쩨쩽쪄쪘쪼쪽쫀쫄쫌쫍쫏쫑쫓쫘쫙쫠쫬쫴쬈쬐쬔쬘쬠쬡쭁쭈쭉쭌쭐쭘쭙쭝쭤쭸쭹쮜쮸쯔쯤쯧쯩찌찍찐찔찜찝찡찢찧차착찬찮찰참찹찻"],["c341","혽혾혿홁홂홃홄홆홇홊홌홎홏홐홒홓홖홗홙홚홛홝",4],["c361","홢",4,"홨홪",5,"홲홳홵",11],["c381","횁횂횄횆",5,"횎횏횑횒횓횕",7,"횞횠횢",5,"횩횪찼창찾채책챈챌챔챕챗챘챙챠챤챦챨챰챵처척천철첨첩첫첬청체첵첸첼쳄쳅쳇쳉쳐쳔쳤쳬쳰촁초촉촌촐촘촙촛총촤촨촬촹최쵠쵤쵬쵭쵯쵱쵸춈추축춘출춤춥춧충춰췄췌췐취췬췰췸췹췻췽츄츈츌츔츙츠측츤츨츰츱츳층"],["c441","횫횭횮횯횱",7,"횺횼",7,"훆훇훉훊훋"],["c461","훍훎훏훐훒훓훕훖훘훚",5,"훡훢훣훥훦훧훩",4],["c481","훮훯훱훲훳훴훶",5,"훾훿휁휂휃휅",11,"휒휓휔치칙친칟칠칡침칩칫칭카칵칸칼캄캅캇캉캐캑캔캘캠캡캣캤캥캬캭컁커컥컨컫컬컴컵컷컸컹케켁켄켈켐켑켓켕켜켠켤켬켭켯켰켱켸코콕콘콜콤콥콧콩콰콱콴콸쾀쾅쾌쾡쾨쾰쿄쿠쿡쿤쿨쿰쿱쿳쿵쿼퀀퀄퀑퀘퀭퀴퀵퀸퀼"],["c541","휕휖휗휚휛휝휞휟휡",6,"휪휬휮",5,"휶휷휹"],["c561","휺휻휽",6,"흅흆흈흊",5,"흒흓흕흚",4],["c581","흟흢흤흦흧흨흪흫흭흮흯흱흲흳흵",6,"흾흿힀힂",5,"힊힋큄큅큇큉큐큔큘큠크큭큰클큼큽킁키킥킨킬킴킵킷킹타탁탄탈탉탐탑탓탔탕태택탠탤탬탭탯탰탱탸턍터턱턴털턺텀텁텃텄텅테텍텐텔템텝텟텡텨텬텼톄톈토톡톤톨톰톱톳통톺톼퇀퇘퇴퇸툇툉툐투툭툰툴툼툽툿퉁퉈퉜"],["c641","힍힎힏힑",6,"힚힜힞",5],["c6a1","퉤튀튁튄튈튐튑튕튜튠튤튬튱트특튼튿틀틂틈틉틋틔틘틜틤틥티틱틴틸팀팁팃팅파팍팎판팔팖팜팝팟팠팡팥패팩팬팰팸팹팻팼팽퍄퍅퍼퍽펀펄펌펍펏펐펑페펙펜펠펨펩펫펭펴편펼폄폅폈평폐폘폡폣포폭폰폴폼폽폿퐁"],["c7a1","퐈퐝푀푄표푠푤푭푯푸푹푼푿풀풂품풉풋풍풔풩퓌퓐퓔퓜퓟퓨퓬퓰퓸퓻퓽프픈플픔픕픗피픽핀필핌핍핏핑하학한할핥함합핫항해핵핸핼햄햅햇했행햐향허헉헌헐헒험헙헛헝헤헥헨헬헴헵헷헹혀혁현혈혐협혓혔형혜혠"],["c8a1","혤혭호혹혼홀홅홈홉홋홍홑화확환활홧황홰홱홴횃횅회획횐횔횝횟횡효횬횰횹횻후훅훈훌훑훔훗훙훠훤훨훰훵훼훽휀휄휑휘휙휜휠휨휩휫휭휴휵휸휼흄흇흉흐흑흔흖흗흘흙흠흡흣흥흩희흰흴흼흽힁히힉힌힐힘힙힛힝"],["caa1","伽佳假價加可呵哥嘉嫁家暇架枷柯歌珂痂稼苛茄街袈訶賈跏軻迦駕刻却各恪慤殼珏脚覺角閣侃刊墾奸姦干幹懇揀杆柬桿澗癎看磵稈竿簡肝艮艱諫間乫喝曷渴碣竭葛褐蝎鞨勘坎堪嵌感憾戡敢柑橄減甘疳監瞰紺邯鑑鑒龕"],["cba1","匣岬甲胛鉀閘剛堈姜岡崗康强彊慷江畺疆糠絳綱羌腔舡薑襁講鋼降鱇介价個凱塏愷愾慨改槪漑疥皆盖箇芥蓋豈鎧開喀客坑更粳羹醵倨去居巨拒据據擧渠炬祛距踞車遽鉅鋸乾件健巾建愆楗腱虔蹇鍵騫乞傑杰桀儉劍劒檢"],["cca1","瞼鈐黔劫怯迲偈憩揭擊格檄激膈覡隔堅牽犬甄絹繭肩見譴遣鵑抉決潔結缺訣兼慊箝謙鉗鎌京俓倞傾儆勁勍卿坰境庚徑慶憬擎敬景暻更梗涇炅烱璟璥瓊痙硬磬竟競絅經耕耿脛莖警輕逕鏡頃頸驚鯨係啓堺契季屆悸戒桂械"],["cda1","棨溪界癸磎稽系繫繼計誡谿階鷄古叩告呱固姑孤尻庫拷攷故敲暠枯槁沽痼皐睾稿羔考股膏苦苽菰藁蠱袴誥賈辜錮雇顧高鼓哭斛曲梏穀谷鵠困坤崑昆梱棍滾琨袞鯤汨滑骨供公共功孔工恐恭拱控攻珙空蚣貢鞏串寡戈果瓜"],["cea1","科菓誇課跨過鍋顆廓槨藿郭串冠官寬慣棺款灌琯瓘管罐菅觀貫關館刮恝括适侊光匡壙廣曠洸炚狂珖筐胱鑛卦掛罫乖傀塊壞怪愧拐槐魁宏紘肱轟交僑咬喬嬌嶠巧攪敎校橋狡皎矯絞翹膠蕎蛟較轎郊餃驕鮫丘久九仇俱具勾"],["cfa1","區口句咎嘔坵垢寇嶇廐懼拘救枸柩構歐毆毬求溝灸狗玖球瞿矩究絿耉臼舅舊苟衢謳購軀逑邱鉤銶駒驅鳩鷗龜國局菊鞠鞫麴君窘群裙軍郡堀屈掘窟宮弓穹窮芎躬倦券勸卷圈拳捲權淃眷厥獗蕨蹶闕机櫃潰詭軌饋句晷歸貴"],["d0a1","鬼龜叫圭奎揆槻珪硅窺竅糾葵規赳逵閨勻均畇筠菌鈞龜橘克剋劇戟棘極隙僅劤勤懃斤根槿瑾筋芹菫覲謹近饉契今妗擒昑檎琴禁禽芩衾衿襟金錦伋及急扱汲級給亘兢矜肯企伎其冀嗜器圻基埼夔奇妓寄岐崎己幾忌技旗旣"],["d1a1","朞期杞棋棄機欺氣汽沂淇玘琦琪璂璣畸畿碁磯祁祇祈祺箕紀綺羈耆耭肌記譏豈起錡錤飢饑騎騏驥麒緊佶吉拮桔金喫儺喇奈娜懦懶拏拿癩",5,"那樂",4,"諾酪駱亂卵暖欄煖爛蘭難鸞捏捺南嵐枏楠湳濫男藍襤拉"],["d2a1","納臘蠟衲囊娘廊",4,"乃來內奈柰耐冷女年撚秊念恬拈捻寧寗努勞奴弩怒擄櫓爐瑙盧",5,"駑魯",10,"濃籠聾膿農惱牢磊腦賂雷尿壘",7,"嫩訥杻紐勒",5,"能菱陵尼泥匿溺多茶"],["d3a1","丹亶但單團壇彖斷旦檀段湍短端簞緞蛋袒鄲鍛撻澾獺疸達啖坍憺擔曇淡湛潭澹痰聃膽蕁覃談譚錟沓畓答踏遝唐堂塘幢戇撞棠當糖螳黨代垈坮大對岱帶待戴擡玳臺袋貸隊黛宅德悳倒刀到圖堵塗導屠島嶋度徒悼挑掉搗桃"],["d4a1","棹櫂淘渡滔濤燾盜睹禱稻萄覩賭跳蹈逃途道都鍍陶韜毒瀆牘犢獨督禿篤纛讀墩惇敦旽暾沌焞燉豚頓乭突仝冬凍動同憧東桐棟洞潼疼瞳童胴董銅兜斗杜枓痘竇荳讀豆逗頭屯臀芚遁遯鈍得嶝橙燈登等藤謄鄧騰喇懶拏癩羅"],["d5a1","蘿螺裸邏樂洛烙珞絡落諾酪駱丹亂卵欄欒瀾爛蘭鸞剌辣嵐擥攬欖濫籃纜藍襤覽拉臘蠟廊朗浪狼琅瑯螂郞來崍徠萊冷掠略亮倆兩凉梁樑粮粱糧良諒輛量侶儷勵呂廬慮戾旅櫚濾礪藜蠣閭驢驪麗黎力曆歷瀝礫轢靂憐戀攣漣"],["d6a1","煉璉練聯蓮輦連鍊冽列劣洌烈裂廉斂殮濂簾獵令伶囹寧岺嶺怜玲笭羚翎聆逞鈴零靈領齡例澧禮醴隷勞怒撈擄櫓潞瀘爐盧老蘆虜路輅露魯鷺鹵碌祿綠菉錄鹿麓論壟弄朧瀧瓏籠聾儡瀨牢磊賂賚賴雷了僚寮廖料燎療瞭聊蓼"],["d7a1","遼鬧龍壘婁屢樓淚漏瘻累縷蔞褸鏤陋劉旒柳榴流溜瀏琉瑠留瘤硫謬類六戮陸侖倫崙淪綸輪律慄栗率隆勒肋凜凌楞稜綾菱陵俚利厘吏唎履悧李梨浬犁狸理璃異痢籬罹羸莉裏裡里釐離鯉吝潾燐璘藺躪隣鱗麟林淋琳臨霖砬"],["d8a1","立笠粒摩瑪痲碼磨馬魔麻寞幕漠膜莫邈万卍娩巒彎慢挽晩曼滿漫灣瞞萬蔓蠻輓饅鰻唜抹末沫茉襪靺亡妄忘忙望網罔芒茫莽輞邙埋妹媒寐昧枚梅每煤罵買賣邁魅脈貊陌驀麥孟氓猛盲盟萌冪覓免冕勉棉沔眄眠綿緬面麵滅"],["d9a1","蔑冥名命明暝椧溟皿瞑茗蓂螟酩銘鳴袂侮冒募姆帽慕摸摹暮某模母毛牟牡瑁眸矛耗芼茅謀謨貌木沐牧目睦穆鶩歿沒夢朦蒙卯墓妙廟描昴杳渺猫竗苗錨務巫憮懋戊拇撫无楙武毋無珷畝繆舞茂蕪誣貿霧鵡墨默們刎吻問文"],["daa1","汶紊紋聞蚊門雯勿沕物味媚尾嵋彌微未梶楣渼湄眉米美薇謎迷靡黴岷悶愍憫敏旻旼民泯玟珉緡閔密蜜謐剝博拍搏撲朴樸泊珀璞箔粕縛膊舶薄迫雹駁伴半反叛拌搬攀斑槃泮潘班畔瘢盤盼磐磻礬絆般蟠返頒飯勃拔撥渤潑"],["dba1","發跋醱鉢髮魃倣傍坊妨尨幇彷房放方旁昉枋榜滂磅紡肪膀舫芳蒡蚌訪謗邦防龐倍俳北培徘拜排杯湃焙盃背胚裴裵褙賠輩配陪伯佰帛柏栢白百魄幡樊煩燔番磻繁蕃藩飜伐筏罰閥凡帆梵氾汎泛犯範范法琺僻劈壁擘檗璧癖"],["dca1","碧蘗闢霹便卞弁變辨辯邊別瞥鱉鼈丙倂兵屛幷昞昺柄棅炳甁病秉竝輧餠騈保堡報寶普步洑湺潽珤甫菩補褓譜輔伏僕匐卜宓復服福腹茯蔔複覆輹輻馥鰒本乶俸奉封峯峰捧棒烽熢琫縫蓬蜂逢鋒鳳不付俯傅剖副否咐埠夫婦"],["dda1","孚孵富府復扶敷斧浮溥父符簿缶腐腑膚艀芙莩訃負賦賻赴趺部釜阜附駙鳧北分吩噴墳奔奮忿憤扮昐汾焚盆粉糞紛芬賁雰不佛弗彿拂崩朋棚硼繃鵬丕備匕匪卑妃婢庇悲憊扉批斐枇榧比毖毗毘沸泌琵痺砒碑秕秘粃緋翡肥"],["dea1","脾臂菲蜚裨誹譬費鄙非飛鼻嚬嬪彬斌檳殯浜濱瀕牝玭貧賓頻憑氷聘騁乍事些仕伺似使俟僿史司唆嗣四士奢娑寫寺射巳師徙思捨斜斯柶査梭死沙泗渣瀉獅砂社祀祠私篩紗絲肆舍莎蓑蛇裟詐詞謝賜赦辭邪飼駟麝削數朔索"],["dfa1","傘刪山散汕珊産疝算蒜酸霰乷撒殺煞薩三參杉森渗芟蔘衫揷澁鈒颯上傷像償商喪嘗孀尙峠常床庠廂想桑橡湘爽牀狀相祥箱翔裳觴詳象賞霜塞璽賽嗇塞穡索色牲生甥省笙墅壻嶼序庶徐恕抒捿敍暑曙書栖棲犀瑞筮絮緖署"],["e0a1","胥舒薯西誓逝鋤黍鼠夕奭席惜昔晳析汐淅潟石碩蓆釋錫仙僊先善嬋宣扇敾旋渲煽琁瑄璇璿癬禪線繕羨腺膳船蘚蟬詵跣選銑鐥饍鮮卨屑楔泄洩渫舌薛褻設說雪齧剡暹殲纖蟾贍閃陝攝涉燮葉城姓宬性惺成星晟猩珹盛省筬"],["e1a1","聖聲腥誠醒世勢歲洗稅笹細說貰召嘯塑宵小少巢所掃搔昭梳沼消溯瀟炤燒甦疏疎瘙笑篠簫素紹蔬蕭蘇訴逍遡邵銷韶騷俗屬束涑粟續謖贖速孫巽損蓀遜飡率宋悚松淞訟誦送頌刷殺灑碎鎖衰釗修受嗽囚垂壽嫂守岫峀帥愁"],["e2a1","戍手授搜收數樹殊水洙漱燧狩獸琇璲瘦睡秀穗竪粹綏綬繡羞脩茱蒐蓚藪袖誰讐輸遂邃酬銖銹隋隧隨雖需須首髓鬚叔塾夙孰宿淑潚熟琡璹肅菽巡徇循恂旬栒楯橓殉洵淳珣盾瞬筍純脣舜荀蓴蕣詢諄醇錞順馴戌術述鉥崇崧"],["e3a1","嵩瑟膝蝨濕拾習褶襲丞乘僧勝升承昇繩蠅陞侍匙嘶始媤尸屎屍市弑恃施是時枾柴猜矢示翅蒔蓍視試詩諡豕豺埴寔式息拭植殖湜熄篒蝕識軾食飾伸侁信呻娠宸愼新晨燼申神紳腎臣莘薪藎蜃訊身辛辰迅失室實悉審尋心沁"],["e4a1","沈深瀋甚芯諶什十拾雙氏亞俄兒啞娥峨我牙芽莪蛾衙訝阿雅餓鴉鵝堊岳嶽幄惡愕握樂渥鄂鍔顎鰐齷安岸按晏案眼雁鞍顔鮟斡謁軋閼唵岩巖庵暗癌菴闇壓押狎鴨仰央怏昻殃秧鴦厓哀埃崖愛曖涯碍艾隘靄厄扼掖液縊腋額"],["e5a1","櫻罌鶯鸚也倻冶夜惹揶椰爺耶若野弱掠略約若葯蒻藥躍亮佯兩凉壤孃恙揚攘敭暘梁楊樣洋瀁煬痒瘍禳穰糧羊良襄諒讓釀陽量養圄御於漁瘀禦語馭魚齬億憶抑檍臆偃堰彦焉言諺孼蘖俺儼嚴奄掩淹嶪業円予余勵呂女如廬"],["e6a1","旅歟汝濾璵礖礪與艅茹輿轝閭餘驪麗黎亦力域役易曆歷疫繹譯轢逆驛嚥堧姸娟宴年延憐戀捐挻撚椽沇沿涎涓淵演漣烟然煙煉燃燕璉硏硯秊筵緣練縯聯衍軟輦蓮連鉛鍊鳶列劣咽悅涅烈熱裂說閱厭廉念捻染殮炎焰琰艶苒"],["e7a1","簾閻髥鹽曄獵燁葉令囹塋寧嶺嶸影怜映暎楹榮永泳渶潁濚瀛瀯煐營獰玲瑛瑩瓔盈穎纓羚聆英詠迎鈴鍈零霙靈領乂倪例刈叡曳汭濊猊睿穢芮藝蘂禮裔詣譽豫醴銳隸霓預五伍俉傲午吾吳嗚塢墺奧娛寤悟惡懊敖旿晤梧汚澳"],["e8a1","烏熬獒筽蜈誤鰲鼇屋沃獄玉鈺溫瑥瘟穩縕蘊兀壅擁瓮甕癰翁邕雍饔渦瓦窩窪臥蛙蝸訛婉完宛梡椀浣玩琓琬碗緩翫脘腕莞豌阮頑曰往旺枉汪王倭娃歪矮外嵬巍猥畏了僚僥凹堯夭妖姚寥寮尿嶢拗搖撓擾料曜樂橈燎燿瑤療"],["e9a1","窈窯繇繞耀腰蓼蟯要謠遙遼邀饒慾欲浴縟褥辱俑傭冗勇埇墉容庸慂榕涌湧溶熔瑢用甬聳茸蓉踊鎔鏞龍于佑偶優又友右宇寓尤愚憂旴牛玗瑀盂祐禑禹紆羽芋藕虞迂遇郵釪隅雨雩勖彧旭昱栯煜稶郁頊云暈橒殞澐熉耘芸蕓"],["eaa1","運隕雲韻蔚鬱亐熊雄元原員圓園垣媛嫄寃怨愿援沅洹湲源爰猿瑗苑袁轅遠阮院願鴛月越鉞位偉僞危圍委威尉慰暐渭爲瑋緯胃萎葦蔿蝟衛褘謂違韋魏乳侑儒兪劉唯喩孺宥幼幽庾悠惟愈愉揄攸有杻柔柚柳楡楢油洧流游溜"],["eba1","濡猶猷琉瑜由留癒硫紐維臾萸裕誘諛諭踰蹂遊逾遺酉釉鍮類六堉戮毓肉育陸倫允奫尹崙淪潤玧胤贇輪鈗閏律慄栗率聿戎瀜絨融隆垠恩慇殷誾銀隱乙吟淫蔭陰音飮揖泣邑凝應膺鷹依倚儀宜意懿擬椅毅疑矣義艤薏蟻衣誼"],["eca1","議醫二以伊利吏夷姨履已弛彛怡易李梨泥爾珥理異痍痢移罹而耳肄苡荑裏裡貽貳邇里離飴餌匿溺瀷益翊翌翼謚人仁刃印吝咽因姻寅引忍湮燐璘絪茵藺蚓認隣靭靷鱗麟一佚佾壹日溢逸鎰馹任壬妊姙恁林淋稔臨荏賃入卄"],["eda1","立笠粒仍剩孕芿仔刺咨姉姿子字孜恣慈滋炙煮玆瓷疵磁紫者自茨蔗藉諮資雌作勺嚼斫昨灼炸爵綽芍酌雀鵲孱棧殘潺盞岑暫潛箴簪蠶雜丈仗匠場墻壯奬將帳庄張掌暲杖樟檣欌漿牆狀獐璋章粧腸臟臧莊葬蔣薔藏裝贓醬長"],["eea1","障再哉在宰才材栽梓渽滓災縡裁財載齋齎爭箏諍錚佇低儲咀姐底抵杵楮樗沮渚狙猪疽箸紵苧菹著藷詛貯躇這邸雎齟勣吊嫡寂摘敵滴狄炙的積笛籍績翟荻謫賊赤跡蹟迪迹適鏑佃佺傳全典前剪塡塼奠專展廛悛戰栓殿氈澱"],["efa1","煎琠田甸畑癲筌箋箭篆纏詮輾轉鈿銓錢鐫電顚顫餞切截折浙癤竊節絶占岾店漸点粘霑鮎點接摺蝶丁井亭停偵呈姃定幀庭廷征情挺政整旌晶晸柾楨檉正汀淀淨渟湞瀞炡玎珽町睛碇禎程穽精綎艇訂諪貞鄭酊釘鉦鋌錠霆靖"],["f0a1","靜頂鼎制劑啼堤帝弟悌提梯濟祭第臍薺製諸蹄醍除際霽題齊俎兆凋助嘲弔彫措操早晁曺曹朝條棗槽漕潮照燥爪璪眺祖祚租稠窕粗糟組繰肇藻蚤詔調趙躁造遭釣阻雕鳥族簇足鏃存尊卒拙猝倧宗從悰慫棕淙琮種終綜縱腫"],["f1a1","踪踵鍾鐘佐坐左座挫罪主住侏做姝胄呪周嗾奏宙州廚晝朱柱株注洲湊澍炷珠疇籌紂紬綢舟蛛註誅走躊輳週酎酒鑄駐竹粥俊儁准埈寯峻晙樽浚準濬焌畯竣蠢逡遵雋駿茁中仲衆重卽櫛楫汁葺增憎曾拯烝甑症繒蒸證贈之只"],["f2a1","咫地址志持指摯支旨智枝枳止池沚漬知砥祉祗紙肢脂至芝芷蜘誌識贄趾遲直稙稷織職唇嗔塵振搢晉晋桭榛殄津溱珍瑨璡畛疹盡眞瞋秦縉縝臻蔯袗診賑軫辰進鎭陣陳震侄叱姪嫉帙桎瓆疾秩窒膣蛭質跌迭斟朕什執潗緝輯"],["f3a1","鏶集徵懲澄且侘借叉嗟嵯差次此磋箚茶蹉車遮捉搾着窄錯鑿齪撰澯燦璨瓚竄簒纂粲纘讚贊鑽餐饌刹察擦札紮僭參塹慘慙懺斬站讒讖倉倡創唱娼廠彰愴敞昌昶暢槍滄漲猖瘡窓脹艙菖蒼債埰寀寨彩採砦綵菜蔡采釵冊柵策"],["f4a1","責凄妻悽處倜刺剔尺慽戚拓擲斥滌瘠脊蹠陟隻仟千喘天川擅泉淺玔穿舛薦賤踐遷釧闡阡韆凸哲喆徹撤澈綴輟轍鐵僉尖沾添甛瞻簽籤詹諂堞妾帖捷牒疊睫諜貼輒廳晴淸聽菁請靑鯖切剃替涕滯締諦逮遞體初剿哨憔抄招梢"],["f5a1","椒楚樵炒焦硝礁礎秒稍肖艸苕草蕉貂超酢醋醮促囑燭矗蜀觸寸忖村邨叢塚寵悤憁摠總聰蔥銃撮催崔最墜抽推椎楸樞湫皺秋芻萩諏趨追鄒酋醜錐錘鎚雛騶鰍丑畜祝竺筑築縮蓄蹙蹴軸逐春椿瑃出朮黜充忠沖蟲衝衷悴膵萃"],["f6a1","贅取吹嘴娶就炊翠聚脆臭趣醉驟鷲側仄厠惻測層侈値嗤峙幟恥梔治淄熾痔痴癡稚穉緇緻置致蚩輜雉馳齒則勅飭親七柒漆侵寢枕沈浸琛砧針鍼蟄秤稱快他咤唾墮妥惰打拖朶楕舵陀馱駝倬卓啄坼度托拓擢晫柝濁濯琢琸託"],["f7a1","鐸呑嘆坦彈憚歎灘炭綻誕奪脫探眈耽貪塔搭榻宕帑湯糖蕩兌台太怠態殆汰泰笞胎苔跆邰颱宅擇澤撑攄兎吐土討慟桶洞痛筒統通堆槌腿褪退頹偸套妬投透鬪慝特闖坡婆巴把播擺杷波派爬琶破罷芭跛頗判坂板版瓣販辦鈑"],["f8a1","阪八叭捌佩唄悖敗沛浿牌狽稗覇貝彭澎烹膨愎便偏扁片篇編翩遍鞭騙貶坪平枰萍評吠嬖幣廢弊斃肺蔽閉陛佈包匍匏咆哺圃布怖抛抱捕暴泡浦疱砲胞脯苞葡蒲袍褒逋鋪飽鮑幅暴曝瀑爆輻俵剽彪慓杓標漂瓢票表豹飇飄驃"],["f9a1","品稟楓諷豊風馮彼披疲皮被避陂匹弼必泌珌畢疋筆苾馝乏逼下何厦夏廈昰河瑕荷蝦賀遐霞鰕壑學虐謔鶴寒恨悍旱汗漢澣瀚罕翰閑閒限韓割轄函含咸啣喊檻涵緘艦銜陷鹹合哈盒蛤閤闔陜亢伉姮嫦巷恒抗杭桁沆港缸肛航"],["faa1","行降項亥偕咳垓奚孩害懈楷海瀣蟹解該諧邂駭骸劾核倖幸杏荇行享向嚮珦鄕響餉饗香噓墟虛許憲櫶獻軒歇險驗奕爀赫革俔峴弦懸晛泫炫玄玹現眩睍絃絢縣舷衒見賢鉉顯孑穴血頁嫌俠協夾峽挾浹狹脅脇莢鋏頰亨兄刑型"],["fba1","形泂滎瀅灐炯熒珩瑩荊螢衡逈邢鎣馨兮彗惠慧暳蕙蹊醯鞋乎互呼壕壺好岵弧戶扈昊晧毫浩淏湖滸澔濠濩灝狐琥瑚瓠皓祜糊縞胡芦葫蒿虎號蝴護豪鎬頀顥惑或酷婚昏混渾琿魂忽惚笏哄弘汞泓洪烘紅虹訌鴻化和嬅樺火畵"],["fca1","禍禾花華話譁貨靴廓擴攫確碻穫丸喚奐宦幻患換歡晥桓渙煥環紈還驩鰥活滑猾豁闊凰幌徨恍惶愰慌晃晄榥況湟滉潢煌璜皇篁簧荒蝗遑隍黃匯回廻徊恢悔懷晦會檜淮澮灰獪繪膾茴蛔誨賄劃獲宖橫鐄哮嚆孝效斅曉梟涍淆"],["fda1","爻肴酵驍侯候厚后吼喉嗅帿後朽煦珝逅勛勳塤壎焄熏燻薰訓暈薨喧暄煊萱卉喙毁彙徽揮暉煇諱輝麾休携烋畦虧恤譎鷸兇凶匈洶胸黑昕欣炘痕吃屹紇訖欠欽歆吸恰洽翕興僖凞喜噫囍姬嬉希憙憘戱晞曦熙熹熺犧禧稀羲詰"]]');

/***/ }),

/***/ "(middleware)/./node_modules/iconv-lite/encodings/tables/cp950.json":
/*!*************************************************************!*\
  !*** ./node_modules/iconv-lite/encodings/tables/cp950.json ***!
  \*************************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('[["0","\\u0000",127],["a140","　，、。．‧；：？！︰…‥﹐﹑﹒·﹔﹕﹖﹗｜–︱—︳╴︴﹏（）︵︶｛｝︷︸〔〕︹︺【】︻︼《》︽︾〈〉︿﹀「」﹁﹂『』﹃﹄﹙﹚"],["a1a1","﹛﹜﹝﹞‘’“”〝〞‵′＃＆＊※§〃○●△▲◎☆★◇◆□■▽▼㊣℅¯￣＿ˍ﹉﹊﹍﹎﹋﹌﹟﹠﹡＋－×÷±√＜＞＝≦≧≠∞≒≡﹢",4,"～∩∪⊥∠∟⊿㏒㏑∫∮∵∴♀♂⊕⊙↑↓←→↖↗↙↘∥∣／"],["a240","＼∕﹨＄￥〒￠￡％＠℃℉﹩﹪﹫㏕㎜㎝㎞㏎㎡㎎㎏㏄°兙兛兞兝兡兣嗧瓩糎▁",7,"▏▎▍▌▋▊▉┼┴┬┤├▔─│▕┌┐└┘╭"],["a2a1","╮╰╯═╞╪╡◢◣◥◤╱╲╳０",9,"Ⅰ",9,"〡",8,"十卄卅Ａ",25,"ａ",21],["a340","ｗｘｙｚΑ",16,"Σ",6,"α",16,"σ",6,"ㄅ",10],["a3a1","ㄐ",25,"˙ˉˊˇˋ"],["a3e1","€"],["a440","一乙丁七乃九了二人儿入八几刀刁力匕十卜又三下丈上丫丸凡久么也乞于亡兀刃勺千叉口土士夕大女子孑孓寸小尢尸山川工己已巳巾干廾弋弓才"],["a4a1","丑丐不中丰丹之尹予云井互五亢仁什仃仆仇仍今介仄元允內六兮公冗凶分切刈勻勾勿化匹午升卅卞厄友及反壬天夫太夭孔少尤尺屯巴幻廿弔引心戈戶手扎支文斗斤方日曰月木欠止歹毋比毛氏水火爪父爻片牙牛犬王丙"],["a540","世丕且丘主乍乏乎以付仔仕他仗代令仙仞充兄冉冊冬凹出凸刊加功包匆北匝仟半卉卡占卯卮去可古右召叮叩叨叼司叵叫另只史叱台句叭叻四囚外"],["a5a1","央失奴奶孕它尼巨巧左市布平幼弁弘弗必戊打扔扒扑斥旦朮本未末札正母民氐永汁汀氾犯玄玉瓜瓦甘生用甩田由甲申疋白皮皿目矛矢石示禾穴立丞丟乒乓乩亙交亦亥仿伉伙伊伕伍伐休伏仲件任仰仳份企伋光兇兆先全"],["a640","共再冰列刑划刎刖劣匈匡匠印危吉吏同吊吐吁吋各向名合吃后吆吒因回囝圳地在圭圬圯圩夙多夷夸妄奸妃好她如妁字存宇守宅安寺尖屹州帆并年"],["a6a1","式弛忙忖戎戌戍成扣扛托收早旨旬旭曲曳有朽朴朱朵次此死氖汝汗汙江池汐汕污汛汍汎灰牟牝百竹米糸缶羊羽老考而耒耳聿肉肋肌臣自至臼舌舛舟艮色艾虫血行衣西阡串亨位住佇佗佞伴佛何估佐佑伽伺伸佃佔似但佣"],["a740","作你伯低伶余佝佈佚兌克免兵冶冷別判利刪刨劫助努劬匣即卵吝吭吞吾否呎吧呆呃吳呈呂君吩告吹吻吸吮吵吶吠吼呀吱含吟听囪困囤囫坊坑址坍"],["a7a1","均坎圾坐坏圻壯夾妝妒妨妞妣妙妖妍妤妓妊妥孝孜孚孛完宋宏尬局屁尿尾岐岑岔岌巫希序庇床廷弄弟彤形彷役忘忌志忍忱快忸忪戒我抄抗抖技扶抉扭把扼找批扳抒扯折扮投抓抑抆改攻攸旱更束李杏材村杜杖杞杉杆杠"],["a840","杓杗步每求汞沙沁沈沉沅沛汪決沐汰沌汨沖沒汽沃汲汾汴沆汶沍沔沘沂灶灼災灸牢牡牠狄狂玖甬甫男甸皂盯矣私秀禿究系罕肖肓肝肘肛肚育良芒"],["a8a1","芋芍見角言谷豆豕貝赤走足身車辛辰迂迆迅迄巡邑邢邪邦那酉釆里防阮阱阪阬並乖乳事些亞享京佯依侍佳使佬供例來侃佰併侈佩佻侖佾侏侑佺兔兒兕兩具其典冽函刻券刷刺到刮制剁劾劻卒協卓卑卦卷卸卹取叔受味呵"],["a940","咖呸咕咀呻呷咄咒咆呼咐呱呶和咚呢周咋命咎固垃坷坪坩坡坦坤坼夜奉奇奈奄奔妾妻委妹妮姑姆姐姍始姓姊妯妳姒姅孟孤季宗定官宜宙宛尚屈居"],["a9a1","屆岷岡岸岩岫岱岳帘帚帖帕帛帑幸庚店府底庖延弦弧弩往征彿彼忝忠忽念忿怏怔怯怵怖怪怕怡性怩怫怛或戕房戾所承拉拌拄抿拂抹拒招披拓拔拋拈抨抽押拐拙拇拍抵拚抱拘拖拗拆抬拎放斧於旺昔易昌昆昂明昀昏昕昊"],["aa40","昇服朋杭枋枕東果杳杷枇枝林杯杰板枉松析杵枚枓杼杪杲欣武歧歿氓氛泣注泳沱泌泥河沽沾沼波沫法泓沸泄油況沮泗泅泱沿治泡泛泊沬泯泜泖泠"],["aaa1","炕炎炒炊炙爬爭爸版牧物狀狎狙狗狐玩玨玟玫玥甽疝疙疚的盂盲直知矽社祀祁秉秈空穹竺糾罔羌羋者肺肥肢肱股肫肩肴肪肯臥臾舍芳芝芙芭芽芟芹花芬芥芯芸芣芰芾芷虎虱初表軋迎返近邵邸邱邶采金長門阜陀阿阻附"],["ab40","陂隹雨青非亟亭亮信侵侯便俠俑俏保促侶俘俟俊俗侮俐俄係俚俎俞侷兗冒冑冠剎剃削前剌剋則勇勉勃勁匍南卻厚叛咬哀咨哎哉咸咦咳哇哂咽咪品"],["aba1","哄哈咯咫咱咻咩咧咿囿垂型垠垣垢城垮垓奕契奏奎奐姜姘姿姣姨娃姥姪姚姦威姻孩宣宦室客宥封屎屏屍屋峙峒巷帝帥帟幽庠度建弈弭彥很待徊律徇後徉怒思怠急怎怨恍恰恨恢恆恃恬恫恪恤扁拜挖按拼拭持拮拽指拱拷"],["ac40","拯括拾拴挑挂政故斫施既春昭映昧是星昨昱昤曷柿染柱柔某柬架枯柵柩柯柄柑枴柚查枸柏柞柳枰柙柢柝柒歪殃殆段毒毗氟泉洋洲洪流津洌洱洞洗"],["aca1","活洽派洶洛泵洹洧洸洩洮洵洎洫炫為炳炬炯炭炸炮炤爰牲牯牴狩狠狡玷珊玻玲珍珀玳甚甭畏界畎畋疫疤疥疢疣癸皆皇皈盈盆盃盅省盹相眉看盾盼眇矜砂研砌砍祆祉祈祇禹禺科秒秋穿突竿竽籽紂紅紀紉紇約紆缸美羿耄"],["ad40","耐耍耑耶胖胥胚胃胄背胡胛胎胞胤胝致舢苧范茅苣苛苦茄若茂茉苒苗英茁苜苔苑苞苓苟苯茆虐虹虻虺衍衫要觔計訂訃貞負赴赳趴軍軌述迦迢迪迥"],["ada1","迭迫迤迨郊郎郁郃酋酊重閂限陋陌降面革韋韭音頁風飛食首香乘亳倌倍倣俯倦倥俸倩倖倆值借倚倒們俺倀倔倨俱倡個候倘俳修倭倪俾倫倉兼冤冥冢凍凌准凋剖剜剔剛剝匪卿原厝叟哨唐唁唷哼哥哲唆哺唔哩哭員唉哮哪"],["ae40","哦唧唇哽唏圃圄埂埔埋埃堉夏套奘奚娑娘娜娟娛娓姬娠娣娩娥娌娉孫屘宰害家宴宮宵容宸射屑展屐峭峽峻峪峨峰島崁峴差席師庫庭座弱徒徑徐恙"],["aea1","恣恥恐恕恭恩息悄悟悚悍悔悌悅悖扇拳挈拿捎挾振捕捂捆捏捉挺捐挽挪挫挨捍捌效敉料旁旅時晉晏晃晒晌晅晁書朔朕朗校核案框桓根桂桔栩梳栗桌桑栽柴桐桀格桃株桅栓栘桁殊殉殷氣氧氨氦氤泰浪涕消涇浦浸海浙涓"],["af40","浬涉浮浚浴浩涌涊浹涅浥涔烊烘烤烙烈烏爹特狼狹狽狸狷玆班琉珮珠珪珞畔畝畜畚留疾病症疲疳疽疼疹痂疸皋皰益盍盎眩真眠眨矩砰砧砸砝破砷"],["afa1","砥砭砠砟砲祕祐祠祟祖神祝祗祚秤秣秧租秦秩秘窄窈站笆笑粉紡紗紋紊素索純紐紕級紜納紙紛缺罟羔翅翁耆耘耕耙耗耽耿胱脂胰脅胭胴脆胸胳脈能脊胼胯臭臬舀舐航舫舨般芻茫荒荔荊茸荐草茵茴荏茲茹茶茗荀茱茨荃"],["b040","虔蚊蚪蚓蚤蚩蚌蚣蚜衰衷袁袂衽衹記訐討訌訕訊託訓訖訏訑豈豺豹財貢起躬軒軔軏辱送逆迷退迺迴逃追逅迸邕郡郝郢酒配酌釘針釗釜釙閃院陣陡"],["b0a1","陛陝除陘陞隻飢馬骨高鬥鬲鬼乾偺偽停假偃偌做偉健偶偎偕偵側偷偏倏偯偭兜冕凰剪副勒務勘動匐匏匙匿區匾參曼商啪啦啄啞啡啃啊唱啖問啕唯啤唸售啜唬啣唳啁啗圈國圉域堅堊堆埠埤基堂堵執培夠奢娶婁婉婦婪婀"],["b140","娼婢婚婆婊孰寇寅寄寂宿密尉專將屠屜屝崇崆崎崛崖崢崑崩崔崙崤崧崗巢常帶帳帷康庸庶庵庾張強彗彬彩彫得徙從徘御徠徜恿患悉悠您惋悴惦悽"],["b1a1","情悻悵惜悼惘惕惆惟悸惚惇戚戛扈掠控捲掖探接捷捧掘措捱掩掉掃掛捫推掄授掙採掬排掏掀捻捩捨捺敝敖救教敗啟敏敘敕敔斜斛斬族旋旌旎晝晚晤晨晦晞曹勗望梁梯梢梓梵桿桶梱梧梗械梃棄梭梆梅梔條梨梟梡梂欲殺"],["b240","毫毬氫涎涼淳淙液淡淌淤添淺清淇淋涯淑涮淞淹涸混淵淅淒渚涵淚淫淘淪深淮淨淆淄涪淬涿淦烹焉焊烽烯爽牽犁猜猛猖猓猙率琅琊球理現琍瓠瓶"],["b2a1","瓷甜產略畦畢異疏痔痕疵痊痍皎盔盒盛眷眾眼眶眸眺硫硃硎祥票祭移窒窕笠笨笛第符笙笞笮粒粗粕絆絃統紮紹紼絀細紳組累終紲紱缽羞羚翌翎習耜聊聆脯脖脣脫脩脰脤舂舵舷舶船莎莞莘荸莢莖莽莫莒莊莓莉莠荷荻荼"],["b340","莆莧處彪蛇蛀蚶蛄蚵蛆蛋蚱蚯蛉術袞袈被袒袖袍袋覓規訪訝訣訥許設訟訛訢豉豚販責貫貨貪貧赧赦趾趺軛軟這逍通逗連速逝逐逕逞造透逢逖逛途"],["b3a1","部郭都酗野釵釦釣釧釭釩閉陪陵陳陸陰陴陶陷陬雀雪雩章竟頂頃魚鳥鹵鹿麥麻傢傍傅備傑傀傖傘傚最凱割剴創剩勞勝勛博厥啻喀喧啼喊喝喘喂喜喪喔喇喋喃喳單喟唾喲喚喻喬喱啾喉喫喙圍堯堪場堤堰報堡堝堠壹壺奠"],["b440","婷媚婿媒媛媧孳孱寒富寓寐尊尋就嵌嵐崴嵇巽幅帽幀幃幾廊廁廂廄弼彭復循徨惑惡悲悶惠愜愣惺愕惰惻惴慨惱愎惶愉愀愒戟扉掣掌描揀揩揉揆揍"],["b4a1","插揣提握揖揭揮捶援揪換摒揚揹敞敦敢散斑斐斯普晰晴晶景暑智晾晷曾替期朝棺棕棠棘棗椅棟棵森棧棹棒棲棣棋棍植椒椎棉棚楮棻款欺欽殘殖殼毯氮氯氬港游湔渡渲湧湊渠渥渣減湛湘渤湖湮渭渦湯渴湍渺測湃渝渾滋"],["b540","溉渙湎湣湄湲湩湟焙焚焦焰無然煮焜牌犄犀猶猥猴猩琺琪琳琢琥琵琶琴琯琛琦琨甥甦畫番痢痛痣痙痘痞痠登發皖皓皴盜睏短硝硬硯稍稈程稅稀窘"],["b5a1","窗窖童竣等策筆筐筒答筍筋筏筑粟粥絞結絨絕紫絮絲絡給絢絰絳善翔翕耋聒肅腕腔腋腑腎脹腆脾腌腓腴舒舜菩萃菸萍菠菅萋菁華菱菴著萊菰萌菌菽菲菊萸萎萄菜萇菔菟虛蛟蛙蛭蛔蛛蛤蛐蛞街裁裂袱覃視註詠評詞証詁"],["b640","詔詛詐詆訴診訶詖象貂貯貼貳貽賁費賀貴買貶貿貸越超趁跎距跋跚跑跌跛跆軻軸軼辜逮逵週逸進逶鄂郵鄉郾酣酥量鈔鈕鈣鈉鈞鈍鈐鈇鈑閔閏開閑"],["b6a1","間閒閎隊階隋陽隅隆隍陲隄雁雅雄集雇雯雲韌項順須飧飪飯飩飲飭馮馭黃黍黑亂傭債傲傳僅傾催傷傻傯僇剿剷剽募勦勤勢勣匯嗟嗨嗓嗦嗎嗜嗇嗑嗣嗤嗯嗚嗡嗅嗆嗥嗉園圓塞塑塘塗塚塔填塌塭塊塢塒塋奧嫁嫉嫌媾媽媼"],["b740","媳嫂媲嵩嵯幌幹廉廈弒彙徬微愚意慈感想愛惹愁愈慎慌慄慍愾愴愧愍愆愷戡戢搓搾搞搪搭搽搬搏搜搔損搶搖搗搆敬斟新暗暉暇暈暖暄暘暍會榔業"],["b7a1","楚楷楠楔極椰概楊楨楫楞楓楹榆楝楣楛歇歲毀殿毓毽溢溯滓溶滂源溝滇滅溥溘溼溺溫滑準溜滄滔溪溧溴煎煙煩煤煉照煜煬煦煌煥煞煆煨煖爺牒猷獅猿猾瑯瑚瑕瑟瑞瑁琿瑙瑛瑜當畸瘀痰瘁痲痱痺痿痴痳盞盟睛睫睦睞督"],["b840","睹睪睬睜睥睨睢矮碎碰碗碘碌碉硼碑碓硿祺祿禁萬禽稜稚稠稔稟稞窟窠筷節筠筮筧粱粳粵經絹綑綁綏絛置罩罪署義羨群聖聘肆肄腱腰腸腥腮腳腫"],["b8a1","腹腺腦舅艇蒂葷落萱葵葦葫葉葬葛萼萵葡董葩葭葆虞虜號蛹蜓蜈蜇蜀蛾蛻蜂蜃蜆蜊衙裟裔裙補裘裝裡裊裕裒覜解詫該詳試詩詰誇詼詣誠話誅詭詢詮詬詹詻訾詨豢貊貉賊資賈賄貲賃賂賅跡跟跨路跳跺跪跤跦躲較載軾輊"],["b940","辟農運遊道遂達逼違遐遇遏過遍遑逾遁鄒鄗酬酪酩釉鈷鉗鈸鈽鉀鈾鉛鉋鉤鉑鈴鉉鉍鉅鈹鈿鉚閘隘隔隕雍雋雉雊雷電雹零靖靴靶預頑頓頊頒頌飼飴"],["b9a1","飽飾馳馱馴髡鳩麂鼎鼓鼠僧僮僥僖僭僚僕像僑僱僎僩兢凳劃劂匱厭嗾嘀嘛嘗嗽嘔嘆嘉嘍嘎嗷嘖嘟嘈嘐嗶團圖塵塾境墓墊塹墅塽壽夥夢夤奪奩嫡嫦嫩嫗嫖嫘嫣孵寞寧寡寥實寨寢寤察對屢嶄嶇幛幣幕幗幔廓廖弊彆彰徹慇"],["ba40","愿態慷慢慣慟慚慘慵截撇摘摔撤摸摟摺摑摧搴摭摻敲斡旗旖暢暨暝榜榨榕槁榮槓構榛榷榻榫榴槐槍榭槌榦槃榣歉歌氳漳演滾漓滴漩漾漠漬漏漂漢"],["baa1","滿滯漆漱漸漲漣漕漫漯澈漪滬漁滲滌滷熔熙煽熊熄熒爾犒犖獄獐瑤瑣瑪瑰瑭甄疑瘧瘍瘋瘉瘓盡監瞄睽睿睡磁碟碧碳碩碣禎福禍種稱窪窩竭端管箕箋筵算箝箔箏箸箇箄粹粽精綻綰綜綽綾綠緊綴網綱綺綢綿綵綸維緒緇綬"],["bb40","罰翠翡翟聞聚肇腐膀膏膈膊腿膂臧臺與舔舞艋蓉蒿蓆蓄蒙蒞蒲蒜蓋蒸蓀蓓蒐蒼蓑蓊蜿蜜蜻蜢蜥蜴蜘蝕蜷蜩裳褂裴裹裸製裨褚裯誦誌語誣認誡誓誤"],["bba1","說誥誨誘誑誚誧豪貍貌賓賑賒赫趙趕跼輔輒輕輓辣遠遘遜遣遙遞遢遝遛鄙鄘鄞酵酸酷酴鉸銀銅銘銖鉻銓銜銨鉼銑閡閨閩閣閥閤隙障際雌雒需靼鞅韶頗領颯颱餃餅餌餉駁骯骰髦魁魂鳴鳶鳳麼鼻齊億儀僻僵價儂儈儉儅凜"],["bc40","劇劈劉劍劊勰厲嘮嘻嘹嘲嘿嘴嘩噓噎噗噴嘶嘯嘰墀墟增墳墜墮墩墦奭嬉嫻嬋嫵嬌嬈寮寬審寫層履嶝嶔幢幟幡廢廚廟廝廣廠彈影德徵慶慧慮慝慕憂"],["bca1","慼慰慫慾憧憐憫憎憬憚憤憔憮戮摩摯摹撞撲撈撐撰撥撓撕撩撒撮播撫撚撬撙撢撳敵敷數暮暫暴暱樣樟槨樁樞標槽模樓樊槳樂樅槭樑歐歎殤毅毆漿潼澄潑潦潔澆潭潛潸潮澎潺潰潤澗潘滕潯潠潟熟熬熱熨牖犛獎獗瑩璋璃"],["bd40","瑾璀畿瘠瘩瘟瘤瘦瘡瘢皚皺盤瞎瞇瞌瞑瞋磋磅確磊碾磕碼磐稿稼穀稽稷稻窯窮箭箱範箴篆篇篁箠篌糊締練緯緻緘緬緝編緣線緞緩綞緙緲緹罵罷羯"],["bda1","翩耦膛膜膝膠膚膘蔗蔽蔚蓮蔬蔭蔓蔑蔣蔡蔔蓬蔥蓿蔆螂蝴蝶蝠蝦蝸蝨蝙蝗蝌蝓衛衝褐複褒褓褕褊誼諒談諄誕請諸課諉諂調誰論諍誶誹諛豌豎豬賠賞賦賤賬賭賢賣賜質賡赭趟趣踫踐踝踢踏踩踟踡踞躺輝輛輟輩輦輪輜輞"],["be40","輥適遮遨遭遷鄰鄭鄧鄱醇醉醋醃鋅銻銷鋪銬鋤鋁銳銼鋒鋇鋰銲閭閱霄霆震霉靠鞍鞋鞏頡頫頜颳養餓餒餘駝駐駟駛駑駕駒駙骷髮髯鬧魅魄魷魯鴆鴉"],["bea1","鴃麩麾黎墨齒儒儘儔儐儕冀冪凝劑劓勳噙噫噹噩噤噸噪器噥噱噯噬噢噶壁墾壇壅奮嬝嬴學寰導彊憲憑憩憊懍憶憾懊懈戰擅擁擋撻撼據擄擇擂操撿擒擔撾整曆曉暹曄曇暸樽樸樺橙橫橘樹橄橢橡橋橇樵機橈歙歷氅濂澱澡"],["bf40","濃澤濁澧澳激澹澶澦澠澴熾燉燐燒燈燕熹燎燙燜燃燄獨璜璣璘璟璞瓢甌甍瘴瘸瘺盧盥瞠瞞瞟瞥磨磚磬磧禦積穎穆穌穋窺篙簑築篤篛篡篩篦糕糖縊"],["bfa1","縑縈縛縣縞縝縉縐罹羲翰翱翮耨膳膩膨臻興艘艙蕊蕙蕈蕨蕩蕃蕉蕭蕪蕞螃螟螞螢融衡褪褲褥褫褡親覦諦諺諫諱謀諜諧諮諾謁謂諷諭諳諶諼豫豭貓賴蹄踱踴蹂踹踵輻輯輸輳辨辦遵遴選遲遼遺鄴醒錠錶鋸錳錯錢鋼錫錄錚"],["c040","錐錦錡錕錮錙閻隧隨險雕霎霑霖霍霓霏靛靜靦鞘頰頸頻頷頭頹頤餐館餞餛餡餚駭駢駱骸骼髻髭鬨鮑鴕鴣鴦鴨鴒鴛默黔龍龜優償儡儲勵嚎嚀嚐嚅嚇"],["c0a1","嚏壕壓壑壎嬰嬪嬤孺尷屨嶼嶺嶽嶸幫彌徽應懂懇懦懋戲戴擎擊擘擠擰擦擬擱擢擭斂斃曙曖檀檔檄檢檜櫛檣橾檗檐檠歜殮毚氈濘濱濟濠濛濤濫濯澀濬濡濩濕濮濰燧營燮燦燥燭燬燴燠爵牆獰獲璩環璦璨癆療癌盪瞳瞪瞰瞬"],["c140","瞧瞭矯磷磺磴磯礁禧禪穗窿簇簍篾篷簌篠糠糜糞糢糟糙糝縮績繆縷縲繃縫總縱繅繁縴縹繈縵縿縯罄翳翼聱聲聰聯聳臆臃膺臂臀膿膽臉膾臨舉艱薪"],["c1a1","薄蕾薜薑薔薯薛薇薨薊虧蟀蟑螳蟒蟆螫螻螺蟈蟋褻褶襄褸褽覬謎謗謙講謊謠謝謄謐豁谿豳賺賽購賸賻趨蹉蹋蹈蹊轄輾轂轅輿避遽還邁邂邀鄹醣醞醜鍍鎂錨鍵鍊鍥鍋錘鍾鍬鍛鍰鍚鍔闊闋闌闈闆隱隸雖霜霞鞠韓顆颶餵騁"],["c240","駿鮮鮫鮪鮭鴻鴿麋黏點黜黝黛鼾齋叢嚕嚮壙壘嬸彝懣戳擴擲擾攆擺擻擷斷曜朦檳檬櫃檻檸櫂檮檯歟歸殯瀉瀋濾瀆濺瀑瀏燻燼燾燸獷獵璧璿甕癖癘"],["c2a1","癒瞽瞿瞻瞼礎禮穡穢穠竄竅簫簧簪簞簣簡糧織繕繞繚繡繒繙罈翹翻職聶臍臏舊藏薩藍藐藉薰薺薹薦蟯蟬蟲蟠覆覲觴謨謹謬謫豐贅蹙蹣蹦蹤蹟蹕軀轉轍邇邃邈醫醬釐鎔鎊鎖鎢鎳鎮鎬鎰鎘鎚鎗闔闖闐闕離雜雙雛雞霤鞣鞦"],["c340","鞭韹額顏題顎顓颺餾餿餽餮馥騎髁鬃鬆魏魎魍鯊鯉鯽鯈鯀鵑鵝鵠黠鼕鼬儳嚥壞壟壢寵龐廬懲懷懶懵攀攏曠曝櫥櫝櫚櫓瀛瀟瀨瀚瀝瀕瀘爆爍牘犢獸"],["c3a1","獺璽瓊瓣疇疆癟癡矇礙禱穫穩簾簿簸簽簷籀繫繭繹繩繪羅繳羶羹羸臘藩藝藪藕藤藥藷蟻蠅蠍蟹蟾襠襟襖襞譁譜識證譚譎譏譆譙贈贊蹼蹲躇蹶蹬蹺蹴轔轎辭邊邋醱醮鏡鏑鏟鏃鏈鏜鏝鏖鏢鏍鏘鏤鏗鏨關隴難霪霧靡韜韻類"],["c440","願顛颼饅饉騖騙鬍鯨鯧鯖鯛鶉鵡鵲鵪鵬麒麗麓麴勸嚨嚷嚶嚴嚼壤孀孃孽寶巉懸懺攘攔攙曦朧櫬瀾瀰瀲爐獻瓏癢癥礦礪礬礫竇競籌籃籍糯糰辮繽繼"],["c4a1","纂罌耀臚艦藻藹蘑藺蘆蘋蘇蘊蠔蠕襤覺觸議譬警譯譟譫贏贍躉躁躅躂醴釋鐘鐃鏽闡霰飄饒饑馨騫騰騷騵鰓鰍鹹麵黨鼯齟齣齡儷儸囁囀囂夔屬巍懼懾攝攜斕曩櫻欄櫺殲灌爛犧瓖瓔癩矓籐纏續羼蘗蘭蘚蠣蠢蠡蠟襪襬覽譴"],["c540","護譽贓躊躍躋轟辯醺鐮鐳鐵鐺鐸鐲鐫闢霸霹露響顧顥饗驅驃驀騾髏魔魑鰭鰥鶯鶴鷂鶸麝黯鼙齜齦齧儼儻囈囊囉孿巔巒彎懿攤權歡灑灘玀瓤疊癮癬"],["c5a1","禳籠籟聾聽臟襲襯觼讀贖贗躑躓轡酈鑄鑑鑒霽霾韃韁顫饕驕驍髒鬚鱉鰱鰾鰻鷓鷗鼴齬齪龔囌巖戀攣攫攪曬欐瓚竊籤籣籥纓纖纔臢蘸蘿蠱變邐邏鑣鑠鑤靨顯饜驚驛驗髓體髑鱔鱗鱖鷥麟黴囑壩攬灞癱癲矗罐羈蠶蠹衢讓讒"],["c640","讖艷贛釀鑪靂靈靄韆顰驟鬢魘鱟鷹鷺鹼鹽鼇齷齲廳欖灣籬籮蠻觀躡釁鑲鑰顱饞髖鬣黌灤矚讚鑷韉驢驥纜讜躪釅鑽鑾鑼鱷鱸黷豔鑿鸚爨驪鬱鸛鸞籲"],["c940","乂乜凵匚厂万丌乇亍囗兀屮彳丏冇与丮亓仂仉仈冘勼卬厹圠夃夬尐巿旡殳毌气爿丱丼仨仜仩仡仝仚刌匜卌圢圣夗夯宁宄尒尻屴屳帄庀庂忉戉扐氕"],["c9a1","氶汃氿氻犮犰玊禸肊阞伎优伬仵伔仱伀价伈伝伂伅伢伓伄仴伒冱刓刉刐劦匢匟卍厊吇囡囟圮圪圴夼妀奼妅奻奾奷奿孖尕尥屼屺屻屾巟幵庄异弚彴忕忔忏扜扞扤扡扦扢扙扠扚扥旯旮朾朹朸朻机朿朼朳氘汆汒汜汏汊汔汋"],["ca40","汌灱牞犴犵玎甪癿穵网艸艼芀艽艿虍襾邙邗邘邛邔阢阤阠阣佖伻佢佉体佤伾佧佒佟佁佘伭伳伿佡冏冹刜刞刡劭劮匉卣卲厎厏吰吷吪呔呅吙吜吥吘"],["caa1","吽呏呁吨吤呇囮囧囥坁坅坌坉坋坒夆奀妦妘妠妗妎妢妐妏妧妡宎宒尨尪岍岏岈岋岉岒岊岆岓岕巠帊帎庋庉庌庈庍弅弝彸彶忒忑忐忭忨忮忳忡忤忣忺忯忷忻怀忴戺抃抌抎抏抔抇扱扻扺扰抁抈扷扽扲扴攷旰旴旳旲旵杅杇"],["cb40","杙杕杌杈杝杍杚杋毐氙氚汸汧汫沄沋沏汱汯汩沚汭沇沕沜汦汳汥汻沎灴灺牣犿犽狃狆狁犺狅玕玗玓玔玒町甹疔疕皁礽耴肕肙肐肒肜芐芏芅芎芑芓"],["cba1","芊芃芄豸迉辿邟邡邥邞邧邠阰阨阯阭丳侘佼侅佽侀侇佶佴侉侄佷佌侗佪侚佹侁佸侐侜侔侞侒侂侕佫佮冞冼冾刵刲刳剆刱劼匊匋匼厒厔咇呿咁咑咂咈呫呺呾呥呬呴呦咍呯呡呠咘呣呧呤囷囹坯坲坭坫坱坰坶垀坵坻坳坴坢"],["cc40","坨坽夌奅妵妺姏姎妲姌姁妶妼姃姖妱妽姀姈妴姇孢孥宓宕屄屇岮岤岠岵岯岨岬岟岣岭岢岪岧岝岥岶岰岦帗帔帙弨弢弣弤彔徂彾彽忞忥怭怦怙怲怋"],["cca1","怴怊怗怳怚怞怬怢怍怐怮怓怑怌怉怜戔戽抭抴拑抾抪抶拊抮抳抯抻抩抰抸攽斨斻昉旼昄昒昈旻昃昋昍昅旽昑昐曶朊枅杬枎枒杶杻枘枆构杴枍枌杺枟枑枙枃杽极杸杹枔欥殀歾毞氝沓泬泫泮泙沶泔沭泧沷泐泂沺泃泆泭泲"],["cd40","泒泝沴沊沝沀泞泀洰泍泇沰泹泏泩泑炔炘炅炓炆炄炑炖炂炚炃牪狖狋狘狉狜狒狔狚狌狑玤玡玭玦玢玠玬玝瓝瓨甿畀甾疌疘皯盳盱盰盵矸矼矹矻矺"],["cda1","矷祂礿秅穸穻竻籵糽耵肏肮肣肸肵肭舠芠苀芫芚芘芛芵芧芮芼芞芺芴芨芡芩苂芤苃芶芢虰虯虭虮豖迒迋迓迍迖迕迗邲邴邯邳邰阹阽阼阺陃俍俅俓侲俉俋俁俔俜俙侻侳俛俇俖侺俀侹俬剄剉勀勂匽卼厗厖厙厘咺咡咭咥哏"],["ce40","哃茍咷咮哖咶哅哆咠呰咼咢咾呲哞咰垵垞垟垤垌垗垝垛垔垘垏垙垥垚垕壴复奓姡姞姮娀姱姝姺姽姼姶姤姲姷姛姩姳姵姠姾姴姭宨屌峐峘峌峗峋峛"],["cea1","峞峚峉峇峊峖峓峔峏峈峆峎峟峸巹帡帢帣帠帤庰庤庢庛庣庥弇弮彖徆怷怹恔恲恞恅恓恇恉恛恌恀恂恟怤恄恘恦恮扂扃拏挍挋拵挎挃拫拹挏挌拸拶挀挓挔拺挕拻拰敁敃斪斿昶昡昲昵昜昦昢昳昫昺昝昴昹昮朏朐柁柲柈枺"],["cf40","柜枻柸柘柀枷柅柫柤柟枵柍枳柷柶柮柣柂枹柎柧柰枲柼柆柭柌枮柦柛柺柉柊柃柪柋欨殂殄殶毖毘毠氠氡洨洴洭洟洼洿洒洊泚洳洄洙洺洚洑洀洝浂"],["cfa1","洁洘洷洃洏浀洇洠洬洈洢洉洐炷炟炾炱炰炡炴炵炩牁牉牊牬牰牳牮狊狤狨狫狟狪狦狣玅珌珂珈珅玹玶玵玴珫玿珇玾珃珆玸珋瓬瓮甮畇畈疧疪癹盄眈眃眄眅眊盷盻盺矧矨砆砑砒砅砐砏砎砉砃砓祊祌祋祅祄秕种秏秖秎窀"],["d040","穾竑笀笁籺籸籹籿粀粁紃紈紁罘羑羍羾耇耎耏耔耷胘胇胠胑胈胂胐胅胣胙胜胊胕胉胏胗胦胍臿舡芔苙苾苹茇苨茀苕茺苫苖苴苬苡苲苵茌苻苶苰苪"],["d0a1","苤苠苺苳苭虷虴虼虳衁衎衧衪衩觓訄訇赲迣迡迮迠郱邽邿郕郅邾郇郋郈釔釓陔陏陑陓陊陎倞倅倇倓倢倰倛俵俴倳倷倬俶俷倗倜倠倧倵倯倱倎党冔冓凊凄凅凈凎剡剚剒剞剟剕剢勍匎厞唦哢唗唒哧哳哤唚哿唄唈哫唑唅哱"],["d140","唊哻哷哸哠唎唃唋圁圂埌堲埕埒垺埆垽垼垸垶垿埇埐垹埁夎奊娙娖娭娮娕娏娗娊娞娳孬宧宭宬尃屖屔峬峿峮峱峷崀峹帩帨庨庮庪庬弳弰彧恝恚恧"],["d1a1","恁悢悈悀悒悁悝悃悕悛悗悇悜悎戙扆拲挐捖挬捄捅挶捃揤挹捋捊挼挩捁挴捘捔捙挭捇挳捚捑挸捗捀捈敊敆旆旃旄旂晊晟晇晑朒朓栟栚桉栲栳栻桋桏栖栱栜栵栫栭栯桎桄栴栝栒栔栦栨栮桍栺栥栠欬欯欭欱欴歭肂殈毦毤"],["d240","毨毣毢毧氥浺浣浤浶洍浡涒浘浢浭浯涑涍淯浿涆浞浧浠涗浰浼浟涂涘洯浨涋浾涀涄洖涃浻浽浵涐烜烓烑烝烋缹烢烗烒烞烠烔烍烅烆烇烚烎烡牂牸"],["d2a1","牷牶猀狺狴狾狶狳狻猁珓珙珥珖玼珧珣珩珜珒珛珔珝珚珗珘珨瓞瓟瓴瓵甡畛畟疰痁疻痄痀疿疶疺皊盉眝眛眐眓眒眣眑眕眙眚眢眧砣砬砢砵砯砨砮砫砡砩砳砪砱祔祛祏祜祓祒祑秫秬秠秮秭秪秜秞秝窆窉窅窋窌窊窇竘笐"],["d340","笄笓笅笏笈笊笎笉笒粄粑粊粌粈粍粅紞紝紑紎紘紖紓紟紒紏紌罜罡罞罠罝罛羖羒翃翂翀耖耾耹胺胲胹胵脁胻脀舁舯舥茳茭荄茙荑茥荖茿荁茦茜茢"],["d3a1","荂荎茛茪茈茼荍茖茤茠茷茯茩荇荅荌荓茞茬荋茧荈虓虒蚢蚨蚖蚍蚑蚞蚇蚗蚆蚋蚚蚅蚥蚙蚡蚧蚕蚘蚎蚝蚐蚔衃衄衭衵衶衲袀衱衿衯袃衾衴衼訒豇豗豻貤貣赶赸趵趷趶軑軓迾迵适迿迻逄迼迶郖郠郙郚郣郟郥郘郛郗郜郤酐"],["d440","酎酏釕釢釚陜陟隼飣髟鬯乿偰偪偡偞偠偓偋偝偲偈偍偁偛偊偢倕偅偟偩偫偣偤偆偀偮偳偗偑凐剫剭剬剮勖勓匭厜啵啶唼啍啐唴唪啑啢唶唵唰啒啅"],["d4a1","唌唲啥啎唹啈唭唻啀啋圊圇埻堔埢埶埜埴堀埭埽堈埸堋埳埏堇埮埣埲埥埬埡堎埼堐埧堁堌埱埩埰堍堄奜婠婘婕婧婞娸娵婭婐婟婥婬婓婤婗婃婝婒婄婛婈媎娾婍娹婌婰婩婇婑婖婂婜孲孮寁寀屙崞崋崝崚崠崌崨崍崦崥崏"],["d540","崰崒崣崟崮帾帴庱庴庹庲庳弶弸徛徖徟悊悐悆悾悰悺惓惔惏惤惙惝惈悱惛悷惊悿惃惍惀挲捥掊掂捽掽掞掭掝掗掫掎捯掇掐据掯捵掜捭掮捼掤挻掟"],["d5a1","捸掅掁掑掍捰敓旍晥晡晛晙晜晢朘桹梇梐梜桭桮梮梫楖桯梣梬梩桵桴梲梏桷梒桼桫桲梪梀桱桾梛梖梋梠梉梤桸桻梑梌梊桽欶欳欷欸殑殏殍殎殌氪淀涫涴涳湴涬淩淢涷淶淔渀淈淠淟淖涾淥淜淝淛淴淊涽淭淰涺淕淂淏淉"],["d640","淐淲淓淽淗淍淣涻烺焍烷焗烴焌烰焄烳焐烼烿焆焓焀烸烶焋焂焎牾牻牼牿猝猗猇猑猘猊猈狿猏猞玈珶珸珵琄琁珽琇琀珺珼珿琌琋珴琈畤畣痎痒痏"],["d6a1","痋痌痑痐皏皉盓眹眯眭眱眲眴眳眽眥眻眵硈硒硉硍硊硌砦硅硐祤祧祩祪祣祫祡离秺秸秶秷窏窔窐笵筇笴笥笰笢笤笳笘笪笝笱笫笭笯笲笸笚笣粔粘粖粣紵紽紸紶紺絅紬紩絁絇紾紿絊紻紨罣羕羜羝羛翊翋翍翐翑翇翏翉耟"],["d740","耞耛聇聃聈脘脥脙脛脭脟脬脞脡脕脧脝脢舑舸舳舺舴舲艴莐莣莨莍荺荳莤荴莏莁莕莙荵莔莩荽莃莌莝莛莪莋荾莥莯莈莗莰荿莦莇莮荶莚虙虖蚿蚷"],["d7a1","蛂蛁蛅蚺蚰蛈蚹蚳蚸蛌蚴蚻蚼蛃蚽蚾衒袉袕袨袢袪袚袑袡袟袘袧袙袛袗袤袬袌袓袎覂觖觙觕訰訧訬訞谹谻豜豝豽貥赽赻赹趼跂趹趿跁軘軞軝軜軗軠軡逤逋逑逜逌逡郯郪郰郴郲郳郔郫郬郩酖酘酚酓酕釬釴釱釳釸釤釹釪"],["d840","釫釷釨釮镺閆閈陼陭陫陱陯隿靪頄飥馗傛傕傔傞傋傣傃傌傎傝偨傜傒傂傇兟凔匒匑厤厧喑喨喥喭啷噅喢喓喈喏喵喁喣喒喤啽喌喦啿喕喡喎圌堩堷"],["d8a1","堙堞堧堣堨埵塈堥堜堛堳堿堶堮堹堸堭堬堻奡媯媔媟婺媢媞婸媦婼媥媬媕媮娷媄媊媗媃媋媩婻婽媌媜媏媓媝寪寍寋寔寑寊寎尌尰崷嵃嵫嵁嵋崿崵嵑嵎嵕崳崺嵒崽崱嵙嵂崹嵉崸崼崲崶嵀嵅幄幁彘徦徥徫惉悹惌惢惎惄愔"],["d940","惲愊愖愅惵愓惸惼惾惁愃愘愝愐惿愄愋扊掔掱掰揎揥揨揯揃撝揳揊揠揶揕揲揵摡揟掾揝揜揄揘揓揂揇揌揋揈揰揗揙攲敧敪敤敜敨敥斌斝斞斮旐旒"],["d9a1","晼晬晻暀晱晹晪晲朁椌棓椄棜椪棬棪棱椏棖棷棫棤棶椓椐棳棡椇棌椈楰梴椑棯棆椔棸棐棽棼棨椋椊椗棎棈棝棞棦棴棑椆棔棩椕椥棇欹欻欿欼殔殗殙殕殽毰毲毳氰淼湆湇渟湉溈渼渽湅湢渫渿湁湝湳渜渳湋湀湑渻渃渮湞"],["da40","湨湜湡渱渨湠湱湫渹渢渰湓湥渧湸湤湷湕湹湒湦渵渶湚焠焞焯烻焮焱焣焥焢焲焟焨焺焛牋牚犈犉犆犅犋猒猋猰猢猱猳猧猲猭猦猣猵猌琮琬琰琫琖"],["daa1","琚琡琭琱琤琣琝琩琠琲瓻甯畯畬痧痚痡痦痝痟痤痗皕皒盚睆睇睄睍睅睊睎睋睌矞矬硠硤硥硜硭硱硪确硰硩硨硞硢祴祳祲祰稂稊稃稌稄窙竦竤筊笻筄筈筌筎筀筘筅粢粞粨粡絘絯絣絓絖絧絪絏絭絜絫絒絔絩絑絟絎缾缿罥"],["db40","罦羢羠羡翗聑聏聐胾胔腃腊腒腏腇脽腍脺臦臮臷臸臹舄舼舽舿艵茻菏菹萣菀菨萒菧菤菼菶萐菆菈菫菣莿萁菝菥菘菿菡菋菎菖菵菉萉萏菞萑萆菂菳"],["dba1","菕菺菇菑菪萓菃菬菮菄菻菗菢萛菛菾蛘蛢蛦蛓蛣蛚蛪蛝蛫蛜蛬蛩蛗蛨蛑衈衖衕袺裗袹袸裀袾袶袼袷袽袲褁裉覕覘覗觝觚觛詎詍訹詙詀詗詘詄詅詒詈詑詊詌詏豟貁貀貺貾貰貹貵趄趀趉跘跓跍跇跖跜跏跕跙跈跗跅軯軷軺"],["dc40","軹軦軮軥軵軧軨軶軫軱軬軴軩逭逴逯鄆鄬鄄郿郼鄈郹郻鄁鄀鄇鄅鄃酡酤酟酢酠鈁鈊鈥鈃鈚鈦鈏鈌鈀鈒釿釽鈆鈄鈧鈂鈜鈤鈙鈗鈅鈖镻閍閌閐隇陾隈"],["dca1","隉隃隀雂雈雃雱雰靬靰靮頇颩飫鳦黹亃亄亶傽傿僆傮僄僊傴僈僂傰僁傺傱僋僉傶傸凗剺剸剻剼嗃嗛嗌嗐嗋嗊嗝嗀嗔嗄嗩喿嗒喍嗏嗕嗢嗖嗈嗲嗍嗙嗂圔塓塨塤塏塍塉塯塕塎塝塙塥塛堽塣塱壼嫇嫄嫋媺媸媱媵媰媿嫈媻嫆"],["dd40","媷嫀嫊媴媶嫍媹媐寖寘寙尟尳嵱嵣嵊嵥嵲嵬嵞嵨嵧嵢巰幏幎幊幍幋廅廌廆廋廇彀徯徭惷慉慊愫慅愶愲愮慆愯慏愩慀戠酨戣戥戤揅揱揫搐搒搉搠搤"],["dda1","搳摃搟搕搘搹搷搢搣搌搦搰搨摁搵搯搊搚摀搥搧搋揧搛搮搡搎敯斒旓暆暌暕暐暋暊暙暔晸朠楦楟椸楎楢楱椿楅楪椹楂楗楙楺楈楉椵楬椳椽楥棰楸椴楩楀楯楄楶楘楁楴楌椻楋椷楜楏楑椲楒椯楻椼歆歅歃歂歈歁殛嗀毻毼"],["de40","毹毷毸溛滖滈溏滀溟溓溔溠溱溹滆滒溽滁溞滉溷溰滍溦滏溲溾滃滜滘溙溒溎溍溤溡溿溳滐滊溗溮溣煇煔煒煣煠煁煝煢煲煸煪煡煂煘煃煋煰煟煐煓"],["dea1","煄煍煚牏犍犌犑犐犎猼獂猻猺獀獊獉瑄瑊瑋瑒瑑瑗瑀瑏瑐瑎瑂瑆瑍瑔瓡瓿瓾瓽甝畹畷榃痯瘏瘃痷痾痼痹痸瘐痻痶痭痵痽皙皵盝睕睟睠睒睖睚睩睧睔睙睭矠碇碚碔碏碄碕碅碆碡碃硹碙碀碖硻祼禂祽祹稑稘稙稒稗稕稢稓"],["df40","稛稐窣窢窞竫筦筤筭筴筩筲筥筳筱筰筡筸筶筣粲粴粯綈綆綀綍絿綅絺綎絻綃絼綌綔綄絽綒罭罫罧罨罬羦羥羧翛翜耡腤腠腷腜腩腛腢腲朡腞腶腧腯"],["dfa1","腄腡舝艉艄艀艂艅蓱萿葖葶葹蒏蒍葥葑葀蒆葧萰葍葽葚葙葴葳葝蔇葞萷萺萴葺葃葸萲葅萩菙葋萯葂萭葟葰萹葎葌葒葯蓅蒎萻葇萶萳葨葾葄萫葠葔葮葐蜋蜄蛷蜌蛺蛖蛵蝍蛸蜎蜉蜁蛶蜍蜅裖裋裍裎裞裛裚裌裐覅覛觟觥觤"],["e040","觡觠觢觜触詶誆詿詡訿詷誂誄詵誃誁詴詺谼豋豊豥豤豦貆貄貅賌赨赩趑趌趎趏趍趓趔趐趒跰跠跬跱跮跐跩跣跢跧跲跫跴輆軿輁輀輅輇輈輂輋遒逿"],["e0a1","遄遉逽鄐鄍鄏鄑鄖鄔鄋鄎酮酯鉈鉒鈰鈺鉦鈳鉥鉞銃鈮鉊鉆鉭鉬鉏鉠鉧鉯鈶鉡鉰鈱鉔鉣鉐鉲鉎鉓鉌鉖鈲閟閜閞閛隒隓隑隗雎雺雽雸雵靳靷靸靲頏頍頎颬飶飹馯馲馰馵骭骫魛鳪鳭鳧麀黽僦僔僗僨僳僛僪僝僤僓僬僰僯僣僠"],["e140","凘劀劁勩勫匰厬嘧嘕嘌嘒嗼嘏嘜嘁嘓嘂嗺嘝嘄嗿嗹墉塼墐墘墆墁塿塴墋塺墇墑墎塶墂墈塻墔墏壾奫嫜嫮嫥嫕嫪嫚嫭嫫嫳嫢嫠嫛嫬嫞嫝嫙嫨嫟孷寠"],["e1a1","寣屣嶂嶀嵽嶆嵺嶁嵷嶊嶉嶈嵾嵼嶍嵹嵿幘幙幓廘廑廗廎廜廕廙廒廔彄彃彯徶愬愨慁慞慱慳慒慓慲慬憀慴慔慺慛慥愻慪慡慖戩戧戫搫摍摛摝摴摶摲摳摽摵摦撦摎撂摞摜摋摓摠摐摿搿摬摫摙摥摷敳斠暡暠暟朅朄朢榱榶槉"],["e240","榠槎榖榰榬榼榑榙榎榧榍榩榾榯榿槄榽榤槔榹槊榚槏榳榓榪榡榞槙榗榐槂榵榥槆歊歍歋殞殟殠毃毄毾滎滵滱漃漥滸漷滻漮漉潎漙漚漧漘漻漒滭漊"],["e2a1","漶潳滹滮漭潀漰漼漵滫漇漎潃漅滽滶漹漜滼漺漟漍漞漈漡熇熐熉熀熅熂熏煻熆熁熗牄牓犗犕犓獃獍獑獌瑢瑳瑱瑵瑲瑧瑮甀甂甃畽疐瘖瘈瘌瘕瘑瘊瘔皸瞁睼瞅瞂睮瞀睯睾瞃碲碪碴碭碨硾碫碞碥碠碬碢碤禘禊禋禖禕禔禓"],["e340","禗禈禒禐稫穊稰稯稨稦窨窫窬竮箈箜箊箑箐箖箍箌箛箎箅箘劄箙箤箂粻粿粼粺綧綷緂綣綪緁緀緅綝緎緄緆緋緌綯綹綖綼綟綦綮綩綡緉罳翢翣翥翞"],["e3a1","耤聝聜膉膆膃膇膍膌膋舕蒗蒤蒡蒟蒺蓎蓂蒬蒮蒫蒹蒴蓁蓍蒪蒚蒱蓐蒝蒧蒻蒢蒔蓇蓌蒛蒩蒯蒨蓖蒘蒶蓏蒠蓗蓔蓒蓛蒰蒑虡蜳蜣蜨蝫蝀蜮蜞蜡蜙蜛蝃蜬蝁蜾蝆蜠蜲蜪蜭蜼蜒蜺蜱蜵蝂蜦蜧蜸蜤蜚蜰蜑裷裧裱裲裺裾裮裼裶裻"],["e440","裰裬裫覝覡覟覞觩觫觨誫誙誋誒誏誖谽豨豩賕賏賗趖踉踂跿踍跽踊踃踇踆踅跾踀踄輐輑輎輍鄣鄜鄠鄢鄟鄝鄚鄤鄡鄛酺酲酹酳銥銤鉶銛鉺銠銔銪銍"],["e4a1","銦銚銫鉹銗鉿銣鋮銎銂銕銢鉽銈銡銊銆銌銙銧鉾銇銩銝銋鈭隞隡雿靘靽靺靾鞃鞀鞂靻鞄鞁靿韎韍頖颭颮餂餀餇馝馜駃馹馻馺駂馽駇骱髣髧鬾鬿魠魡魟鳱鳲鳵麧僿儃儰僸儆儇僶僾儋儌僽儊劋劌勱勯噈噂噌嘵噁噊噉噆噘"],["e540","噚噀嘳嘽嘬嘾嘸嘪嘺圚墫墝墱墠墣墯墬墥墡壿嫿嫴嫽嫷嫶嬃嫸嬂嫹嬁嬇嬅嬏屧嶙嶗嶟嶒嶢嶓嶕嶠嶜嶡嶚嶞幩幝幠幜緳廛廞廡彉徲憋憃慹憱憰憢憉"],["e5a1","憛憓憯憭憟憒憪憡憍慦憳戭摮摰撖撠撅撗撜撏撋撊撌撣撟摨撱撘敶敺敹敻斲斳暵暰暩暲暷暪暯樀樆樗槥槸樕槱槤樠槿槬槢樛樝槾樧槲槮樔槷槧橀樈槦槻樍槼槫樉樄樘樥樏槶樦樇槴樖歑殥殣殢殦氁氀毿氂潁漦潾澇濆澒"],["e640","澍澉澌潢潏澅潚澖潶潬澂潕潲潒潐潗澔澓潝漀潡潫潽潧澐潓澋潩潿澕潣潷潪潻熲熯熛熰熠熚熩熵熝熥熞熤熡熪熜熧熳犘犚獘獒獞獟獠獝獛獡獚獙"],["e6a1","獢璇璉璊璆璁瑽璅璈瑼瑹甈甇畾瘥瘞瘙瘝瘜瘣瘚瘨瘛皜皝皞皛瞍瞏瞉瞈磍碻磏磌磑磎磔磈磃磄磉禚禡禠禜禢禛歶稹窲窴窳箷篋箾箬篎箯箹篊箵糅糈糌糋緷緛緪緧緗緡縃緺緦緶緱緰緮緟罶羬羰羭翭翫翪翬翦翨聤聧膣膟"],["e740","膞膕膢膙膗舖艏艓艒艐艎艑蔤蔻蔏蔀蔩蔎蔉蔍蔟蔊蔧蔜蓻蔫蓺蔈蔌蓴蔪蓲蔕蓷蓫蓳蓼蔒蓪蓩蔖蓾蔨蔝蔮蔂蓽蔞蓶蔱蔦蓧蓨蓰蓯蓹蔘蔠蔰蔋蔙蔯虢"],["e7a1","蝖蝣蝤蝷蟡蝳蝘蝔蝛蝒蝡蝚蝑蝞蝭蝪蝐蝎蝟蝝蝯蝬蝺蝮蝜蝥蝏蝻蝵蝢蝧蝩衚褅褌褔褋褗褘褙褆褖褑褎褉覢覤覣觭觰觬諏諆誸諓諑諔諕誻諗誾諀諅諘諃誺誽諙谾豍貏賥賟賙賨賚賝賧趠趜趡趛踠踣踥踤踮踕踛踖踑踙踦踧"],["e840","踔踒踘踓踜踗踚輬輤輘輚輠輣輖輗遳遰遯遧遫鄯鄫鄩鄪鄲鄦鄮醅醆醊醁醂醄醀鋐鋃鋄鋀鋙銶鋏鋱鋟鋘鋩鋗鋝鋌鋯鋂鋨鋊鋈鋎鋦鋍鋕鋉鋠鋞鋧鋑鋓"],["e8a1","銵鋡鋆銴镼閬閫閮閰隤隢雓霅霈霂靚鞊鞎鞈韐韏頞頝頦頩頨頠頛頧颲餈飺餑餔餖餗餕駜駍駏駓駔駎駉駖駘駋駗駌骳髬髫髳髲髱魆魃魧魴魱魦魶魵魰魨魤魬鳼鳺鳽鳿鳷鴇鴀鳹鳻鴈鴅鴄麃黓鼏鼐儜儓儗儚儑凞匴叡噰噠噮"],["e940","噳噦噣噭噲噞噷圜圛壈墽壉墿墺壂墼壆嬗嬙嬛嬡嬔嬓嬐嬖嬨嬚嬠嬞寯嶬嶱嶩嶧嶵嶰嶮嶪嶨嶲嶭嶯嶴幧幨幦幯廩廧廦廨廥彋徼憝憨憖懅憴懆懁懌憺"],["e9a1","憿憸憌擗擖擐擏擉撽撉擃擛擳擙攳敿敼斢曈暾曀曊曋曏暽暻暺曌朣樴橦橉橧樲橨樾橝橭橶橛橑樨橚樻樿橁橪橤橐橏橔橯橩橠樼橞橖橕橍橎橆歕歔歖殧殪殫毈毇氄氃氆澭濋澣濇澼濎濈潞濄澽澞濊澨瀄澥澮澺澬澪濏澿澸"],["ea40","澢濉澫濍澯澲澰燅燂熿熸燖燀燁燋燔燊燇燏熽燘熼燆燚燛犝犞獩獦獧獬獥獫獪瑿璚璠璔璒璕璡甋疀瘯瘭瘱瘽瘳瘼瘵瘲瘰皻盦瞚瞝瞡瞜瞛瞢瞣瞕瞙"],["eaa1","瞗磝磩磥磪磞磣磛磡磢磭磟磠禤穄穈穇窶窸窵窱窷篞篣篧篝篕篥篚篨篹篔篪篢篜篫篘篟糒糔糗糐糑縒縡縗縌縟縠縓縎縜縕縚縢縋縏縖縍縔縥縤罃罻罼罺羱翯耪耩聬膱膦膮膹膵膫膰膬膴膲膷膧臲艕艖艗蕖蕅蕫蕍蕓蕡蕘"],["eb40","蕀蕆蕤蕁蕢蕄蕑蕇蕣蔾蕛蕱蕎蕮蕵蕕蕧蕠薌蕦蕝蕔蕥蕬虣虥虤螛螏螗螓螒螈螁螖螘蝹螇螣螅螐螑螝螄螔螜螚螉褞褦褰褭褮褧褱褢褩褣褯褬褟觱諠"],["eba1","諢諲諴諵諝謔諤諟諰諈諞諡諨諿諯諻貑貒貐賵賮賱賰賳赬赮趥趧踳踾踸蹀蹅踶踼踽蹁踰踿躽輶輮輵輲輹輷輴遶遹遻邆郺鄳鄵鄶醓醐醑醍醏錧錞錈錟錆錏鍺錸錼錛錣錒錁鍆錭錎錍鋋錝鋺錥錓鋹鋷錴錂錤鋿錩錹錵錪錔錌"],["ec40","錋鋾錉錀鋻錖閼闍閾閹閺閶閿閵閽隩雔霋霒霐鞙鞗鞔韰韸頵頯頲餤餟餧餩馞駮駬駥駤駰駣駪駩駧骹骿骴骻髶髺髹髷鬳鮀鮅鮇魼魾魻鮂鮓鮒鮐魺鮕"],["eca1","魽鮈鴥鴗鴠鴞鴔鴩鴝鴘鴢鴐鴙鴟麈麆麇麮麭黕黖黺鼒鼽儦儥儢儤儠儩勴嚓嚌嚍嚆嚄嚃噾嚂噿嚁壖壔壏壒嬭嬥嬲嬣嬬嬧嬦嬯嬮孻寱寲嶷幬幪徾徻懃憵憼懧懠懥懤懨懞擯擩擣擫擤擨斁斀斶旚曒檍檖檁檥檉檟檛檡檞檇檓檎"],["ed40","檕檃檨檤檑橿檦檚檅檌檒歛殭氉濌澩濴濔濣濜濭濧濦濞濲濝濢濨燡燱燨燲燤燰燢獳獮獯璗璲璫璐璪璭璱璥璯甐甑甒甏疄癃癈癉癇皤盩瞵瞫瞲瞷瞶"],["eda1","瞴瞱瞨矰磳磽礂磻磼磲礅磹磾礄禫禨穜穛穖穘穔穚窾竀竁簅簏篲簀篿篻簎篴簋篳簂簉簃簁篸篽簆篰篱簐簊糨縭縼繂縳顈縸縪繉繀繇縩繌縰縻縶繄縺罅罿罾罽翴翲耬膻臄臌臊臅臇膼臩艛艚艜薃薀薏薧薕薠薋薣蕻薤薚薞"],["ee40","蕷蕼薉薡蕺蕸蕗薎薖薆薍薙薝薁薢薂薈薅蕹蕶薘薐薟虨螾螪螭蟅螰螬螹螵螼螮蟉蟃蟂蟌螷螯蟄蟊螴螶螿螸螽蟞螲褵褳褼褾襁襒褷襂覭覯覮觲觳謞"],["eea1","謘謖謑謅謋謢謏謒謕謇謍謈謆謜謓謚豏豰豲豱豯貕貔賹赯蹎蹍蹓蹐蹌蹇轃轀邅遾鄸醚醢醛醙醟醡醝醠鎡鎃鎯鍤鍖鍇鍼鍘鍜鍶鍉鍐鍑鍠鍭鎏鍌鍪鍹鍗鍕鍒鍏鍱鍷鍻鍡鍞鍣鍧鎀鍎鍙闇闀闉闃闅閷隮隰隬霠霟霘霝霙鞚鞡鞜"],["ef40","鞞鞝韕韔韱顁顄顊顉顅顃餥餫餬餪餳餲餯餭餱餰馘馣馡騂駺駴駷駹駸駶駻駽駾駼騃骾髾髽鬁髼魈鮚鮨鮞鮛鮦鮡鮥鮤鮆鮢鮠鮯鴳鵁鵧鴶鴮鴯鴱鴸鴰"],["efa1","鵅鵂鵃鴾鴷鵀鴽翵鴭麊麉麍麰黈黚黻黿鼤鼣鼢齔龠儱儭儮嚘嚜嚗嚚嚝嚙奰嬼屩屪巀幭幮懘懟懭懮懱懪懰懫懖懩擿攄擽擸攁攃擼斔旛曚曛曘櫅檹檽櫡櫆檺檶檷櫇檴檭歞毉氋瀇瀌瀍瀁瀅瀔瀎濿瀀濻瀦濼濷瀊爁燿燹爃燽獶"],["f040","璸瓀璵瓁璾璶璻瓂甔甓癜癤癙癐癓癗癚皦皽盬矂瞺磿礌礓礔礉礐礒礑禭禬穟簜簩簙簠簟簭簝簦簨簢簥簰繜繐繖繣繘繢繟繑繠繗繓羵羳翷翸聵臑臒"],["f0a1","臐艟艞薴藆藀藃藂薳薵薽藇藄薿藋藎藈藅薱薶藒蘤薸薷薾虩蟧蟦蟢蟛蟫蟪蟥蟟蟳蟤蟔蟜蟓蟭蟘蟣螤蟗蟙蠁蟴蟨蟝襓襋襏襌襆襐襑襉謪謧謣謳謰謵譇謯謼謾謱謥謷謦謶謮謤謻謽謺豂豵貙貘貗賾贄贂贀蹜蹢蹠蹗蹖蹞蹥蹧"],["f140","蹛蹚蹡蹝蹩蹔轆轇轈轋鄨鄺鄻鄾醨醥醧醯醪鎵鎌鎒鎷鎛鎝鎉鎧鎎鎪鎞鎦鎕鎈鎙鎟鎍鎱鎑鎲鎤鎨鎴鎣鎥闒闓闑隳雗雚巂雟雘雝霣霢霥鞬鞮鞨鞫鞤鞪"],["f1a1","鞢鞥韗韙韖韘韺顐顑顒颸饁餼餺騏騋騉騍騄騑騊騅騇騆髀髜鬈鬄鬅鬩鬵魊魌魋鯇鯆鯃鮿鯁鮵鮸鯓鮶鯄鮹鮽鵜鵓鵏鵊鵛鵋鵙鵖鵌鵗鵒鵔鵟鵘鵚麎麌黟鼁鼀鼖鼥鼫鼪鼩鼨齌齕儴儵劖勷厴嚫嚭嚦嚧嚪嚬壚壝壛夒嬽嬾嬿巃幰"],["f240","徿懻攇攐攍攉攌攎斄旞旝曞櫧櫠櫌櫑櫙櫋櫟櫜櫐櫫櫏櫍櫞歠殰氌瀙瀧瀠瀖瀫瀡瀢瀣瀩瀗瀤瀜瀪爌爊爇爂爅犥犦犤犣犡瓋瓅璷瓃甖癠矉矊矄矱礝礛"],["f2a1","礡礜礗礞禰穧穨簳簼簹簬簻糬糪繶繵繸繰繷繯繺繲繴繨罋罊羃羆羷翽翾聸臗臕艤艡艣藫藱藭藙藡藨藚藗藬藲藸藘藟藣藜藑藰藦藯藞藢蠀蟺蠃蟶蟷蠉蠌蠋蠆蟼蠈蟿蠊蠂襢襚襛襗襡襜襘襝襙覈覷覶觶譐譈譊譀譓譖譔譋譕"],["f340","譑譂譒譗豃豷豶貚贆贇贉趬趪趭趫蹭蹸蹳蹪蹯蹻軂轒轑轏轐轓辴酀鄿醰醭鏞鏇鏏鏂鏚鏐鏹鏬鏌鏙鎩鏦鏊鏔鏮鏣鏕鏄鏎鏀鏒鏧镽闚闛雡霩霫霬霨霦"],["f3a1","鞳鞷鞶韝韞韟顜顙顝顗颿颽颻颾饈饇饃馦馧騚騕騥騝騤騛騢騠騧騣騞騜騔髂鬋鬊鬎鬌鬷鯪鯫鯠鯞鯤鯦鯢鯰鯔鯗鯬鯜鯙鯥鯕鯡鯚鵷鶁鶊鶄鶈鵱鶀鵸鶆鶋鶌鵽鵫鵴鵵鵰鵩鶅鵳鵻鶂鵯鵹鵿鶇鵨麔麑黀黼鼭齀齁齍齖齗齘匷嚲"],["f440","嚵嚳壣孅巆巇廮廯忀忁懹攗攖攕攓旟曨曣曤櫳櫰櫪櫨櫹櫱櫮櫯瀼瀵瀯瀷瀴瀱灂瀸瀿瀺瀹灀瀻瀳灁爓爔犨獽獼璺皫皪皾盭矌矎矏矍矲礥礣礧礨礤礩"],["f4a1","禲穮穬穭竷籉籈籊籇籅糮繻繾纁纀羺翿聹臛臙舋艨艩蘢藿蘁藾蘛蘀藶蘄蘉蘅蘌藽蠙蠐蠑蠗蠓蠖襣襦覹觷譠譪譝譨譣譥譧譭趮躆躈躄轙轖轗轕轘轚邍酃酁醷醵醲醳鐋鐓鏻鐠鐏鐔鏾鐕鐐鐨鐙鐍鏵鐀鏷鐇鐎鐖鐒鏺鐉鏸鐊鏿"],["f540","鏼鐌鏶鐑鐆闞闠闟霮霯鞹鞻韽韾顠顢顣顟飁飂饐饎饙饌饋饓騲騴騱騬騪騶騩騮騸騭髇髊髆鬐鬒鬑鰋鰈鯷鰅鰒鯸鱀鰇鰎鰆鰗鰔鰉鶟鶙鶤鶝鶒鶘鶐鶛"],["f5a1","鶠鶔鶜鶪鶗鶡鶚鶢鶨鶞鶣鶿鶩鶖鶦鶧麙麛麚黥黤黧黦鼰鼮齛齠齞齝齙龑儺儹劘劗囃嚽嚾孈孇巋巏廱懽攛欂櫼欃櫸欀灃灄灊灈灉灅灆爝爚爙獾甗癪矐礭礱礯籔籓糲纊纇纈纋纆纍罍羻耰臝蘘蘪蘦蘟蘣蘜蘙蘧蘮蘡蘠蘩蘞蘥"],["f640","蠩蠝蠛蠠蠤蠜蠫衊襭襩襮襫觺譹譸譅譺譻贐贔趯躎躌轞轛轝酆酄酅醹鐿鐻鐶鐩鐽鐼鐰鐹鐪鐷鐬鑀鐱闥闤闣霵霺鞿韡顤飉飆飀饘饖騹騽驆驄驂驁騺"],["f6a1","騿髍鬕鬗鬘鬖鬺魒鰫鰝鰜鰬鰣鰨鰩鰤鰡鶷鶶鶼鷁鷇鷊鷏鶾鷅鷃鶻鶵鷎鶹鶺鶬鷈鶱鶭鷌鶳鷍鶲鹺麜黫黮黭鼛鼘鼚鼱齎齥齤龒亹囆囅囋奱孋孌巕巑廲攡攠攦攢欋欈欉氍灕灖灗灒爞爟犩獿瓘瓕瓙瓗癭皭礵禴穰穱籗籜籙籛籚"],["f740","糴糱纑罏羇臞艫蘴蘵蘳蘬蘲蘶蠬蠨蠦蠪蠥襱覿覾觻譾讄讂讆讅譿贕躕躔躚躒躐躖躗轠轢酇鑌鑐鑊鑋鑏鑇鑅鑈鑉鑆霿韣顪顩飋饔饛驎驓驔驌驏驈驊"],["f7a1","驉驒驐髐鬙鬫鬻魖魕鱆鱈鰿鱄鰹鰳鱁鰼鰷鰴鰲鰽鰶鷛鷒鷞鷚鷋鷐鷜鷑鷟鷩鷙鷘鷖鷵鷕鷝麶黰鼵鼳鼲齂齫龕龢儽劙壨壧奲孍巘蠯彏戁戃戄攩攥斖曫欑欒欏毊灛灚爢玂玁玃癰矔籧籦纕艬蘺虀蘹蘼蘱蘻蘾蠰蠲蠮蠳襶襴襳觾"],["f840","讌讎讋讈豅贙躘轤轣醼鑢鑕鑝鑗鑞韄韅頀驖驙鬞鬟鬠鱒鱘鱐鱊鱍鱋鱕鱙鱌鱎鷻鷷鷯鷣鷫鷸鷤鷶鷡鷮鷦鷲鷰鷢鷬鷴鷳鷨鷭黂黐黲黳鼆鼜鼸鼷鼶齃齏"],["f8a1","齱齰齮齯囓囍孎屭攭曭曮欓灟灡灝灠爣瓛瓥矕礸禷禶籪纗羉艭虃蠸蠷蠵衋讔讕躞躟躠躝醾醽釂鑫鑨鑩雥靆靃靇韇韥驞髕魙鱣鱧鱦鱢鱞鱠鸂鷾鸇鸃鸆鸅鸀鸁鸉鷿鷽鸄麠鼞齆齴齵齶囔攮斸欘欙欗欚灢爦犪矘矙礹籩籫糶纚"],["f940","纘纛纙臠臡虆虇虈襹襺襼襻觿讘讙躥躤躣鑮鑭鑯鑱鑳靉顲饟鱨鱮鱭鸋鸍鸐鸏鸒鸑麡黵鼉齇齸齻齺齹圞灦籯蠼趲躦釃鑴鑸鑶鑵驠鱴鱳鱱鱵鸔鸓黶鼊"],["f9a1","龤灨灥糷虪蠾蠽蠿讞貜躩軉靋顳顴飌饡馫驤驦驧鬤鸕鸗齈戇欞爧虌躨钂钀钁驩驨鬮鸙爩虋讟钃鱹麷癵驫鱺鸝灩灪麤齾齉龘碁銹裏墻恒粧嫺╔╦╗╠╬╣╚╩╝╒╤╕╞╪╡╘╧╛╓╥╖╟╫╢╙╨╜║═╭╮╰╯▓"]]');

/***/ }),

/***/ "(middleware)/./node_modules/iconv-lite/encodings/tables/eucjp.json":
/*!*************************************************************!*\
  !*** ./node_modules/iconv-lite/encodings/tables/eucjp.json ***!
  \*************************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('[["0","\\u0000",127],["8ea1","｡",62],["a1a1","　、。，．・：；？！゛゜´｀¨＾￣＿ヽヾゝゞ〃仝々〆〇ー―‐／＼～∥｜…‥‘’“”（）〔〕［］｛｝〈",9,"＋－±×÷＝≠＜＞≦≧∞∴♂♀°′″℃￥＄￠￡％＃＆＊＠§☆★○●◎◇"],["a2a1","◆□■△▲▽▼※〒→←↑↓〓"],["a2ba","∈∋⊆⊇⊂⊃∪∩"],["a2ca","∧∨￢⇒⇔∀∃"],["a2dc","∠⊥⌒∂∇≡≒≪≫√∽∝∵∫∬"],["a2f2","Å‰♯♭♪†‡¶"],["a2fe","◯"],["a3b0","０",9],["a3c1","Ａ",25],["a3e1","ａ",25],["a4a1","ぁ",82],["a5a1","ァ",85],["a6a1","Α",16,"Σ",6],["a6c1","α",16,"σ",6],["a7a1","А",5,"ЁЖ",25],["a7d1","а",5,"ёж",25],["a8a1","─│┌┐┘└├┬┤┴┼━┃┏┓┛┗┣┳┫┻╋┠┯┨┷┿┝┰┥┸╂"],["ada1","①",19,"Ⅰ",9],["adc0","㍉㌔㌢㍍㌘㌧㌃㌶㍑㍗㌍㌦㌣㌫㍊㌻㎜㎝㎞㎎㎏㏄㎡"],["addf","㍻〝〟№㏍℡㊤",4,"㈱㈲㈹㍾㍽㍼≒≡∫∮∑√⊥∠∟⊿∵∩∪"],["b0a1","亜唖娃阿哀愛挨姶逢葵茜穐悪握渥旭葦芦鯵梓圧斡扱宛姐虻飴絢綾鮎或粟袷安庵按暗案闇鞍杏以伊位依偉囲夷委威尉惟意慰易椅為畏異移維緯胃萎衣謂違遺医井亥域育郁磯一壱溢逸稲茨芋鰯允印咽員因姻引飲淫胤蔭"],["b1a1","院陰隠韻吋右宇烏羽迂雨卯鵜窺丑碓臼渦嘘唄欝蔚鰻姥厩浦瓜閏噂云運雲荏餌叡営嬰影映曳栄永泳洩瑛盈穎頴英衛詠鋭液疫益駅悦謁越閲榎厭円園堰奄宴延怨掩援沿演炎焔煙燕猿縁艶苑薗遠鉛鴛塩於汚甥凹央奥往応"],["b2a1","押旺横欧殴王翁襖鴬鴎黄岡沖荻億屋憶臆桶牡乙俺卸恩温穏音下化仮何伽価佳加可嘉夏嫁家寡科暇果架歌河火珂禍禾稼箇花苛茄荷華菓蝦課嘩貨迦過霞蚊俄峨我牙画臥芽蛾賀雅餓駕介会解回塊壊廻快怪悔恢懐戒拐改"],["b3a1","魁晦械海灰界皆絵芥蟹開階貝凱劾外咳害崖慨概涯碍蓋街該鎧骸浬馨蛙垣柿蛎鈎劃嚇各廓拡撹格核殻獲確穫覚角赫較郭閣隔革学岳楽額顎掛笠樫橿梶鰍潟割喝恰括活渇滑葛褐轄且鰹叶椛樺鞄株兜竃蒲釜鎌噛鴨栢茅萱"],["b4a1","粥刈苅瓦乾侃冠寒刊勘勧巻喚堪姦完官寛干幹患感慣憾換敢柑桓棺款歓汗漢澗潅環甘監看竿管簡緩缶翰肝艦莞観諌貫還鑑間閑関陥韓館舘丸含岸巌玩癌眼岩翫贋雁頑顔願企伎危喜器基奇嬉寄岐希幾忌揮机旗既期棋棄"],["b5a1","機帰毅気汽畿祈季稀紀徽規記貴起軌輝飢騎鬼亀偽儀妓宜戯技擬欺犠疑祇義蟻誼議掬菊鞠吉吃喫桔橘詰砧杵黍却客脚虐逆丘久仇休及吸宮弓急救朽求汲泣灸球究窮笈級糾給旧牛去居巨拒拠挙渠虚許距鋸漁禦魚亨享京"],["b6a1","供侠僑兇競共凶協匡卿叫喬境峡強彊怯恐恭挟教橋況狂狭矯胸脅興蕎郷鏡響饗驚仰凝尭暁業局曲極玉桐粁僅勤均巾錦斤欣欽琴禁禽筋緊芹菌衿襟謹近金吟銀九倶句区狗玖矩苦躯駆駈駒具愚虞喰空偶寓遇隅串櫛釧屑屈"],["b7a1","掘窟沓靴轡窪熊隈粂栗繰桑鍬勲君薫訓群軍郡卦袈祁係傾刑兄啓圭珪型契形径恵慶慧憩掲携敬景桂渓畦稽系経継繋罫茎荊蛍計詣警軽頚鶏芸迎鯨劇戟撃激隙桁傑欠決潔穴結血訣月件倹倦健兼券剣喧圏堅嫌建憲懸拳捲"],["b8a1","検権牽犬献研硯絹県肩見謙賢軒遣鍵険顕験鹸元原厳幻弦減源玄現絃舷言諺限乎個古呼固姑孤己庫弧戸故枯湖狐糊袴股胡菰虎誇跨鈷雇顧鼓五互伍午呉吾娯後御悟梧檎瑚碁語誤護醐乞鯉交佼侯候倖光公功効勾厚口向"],["b9a1","后喉坑垢好孔孝宏工巧巷幸広庚康弘恒慌抗拘控攻昂晃更杭校梗構江洪浩港溝甲皇硬稿糠紅紘絞綱耕考肯肱腔膏航荒行衡講貢購郊酵鉱砿鋼閤降項香高鴻剛劫号合壕拷濠豪轟麹克刻告国穀酷鵠黒獄漉腰甑忽惚骨狛込"],["baa1","此頃今困坤墾婚恨懇昏昆根梱混痕紺艮魂些佐叉唆嵯左差査沙瑳砂詐鎖裟坐座挫債催再最哉塞妻宰彩才採栽歳済災采犀砕砦祭斎細菜裁載際剤在材罪財冴坂阪堺榊肴咲崎埼碕鷺作削咋搾昨朔柵窄策索錯桜鮭笹匙冊刷"],["bba1","察拶撮擦札殺薩雑皐鯖捌錆鮫皿晒三傘参山惨撒散桟燦珊産算纂蚕讃賛酸餐斬暫残仕仔伺使刺司史嗣四士始姉姿子屍市師志思指支孜斯施旨枝止死氏獅祉私糸紙紫肢脂至視詞詩試誌諮資賜雌飼歯事似侍児字寺慈持時"],["bca1","次滋治爾璽痔磁示而耳自蒔辞汐鹿式識鴫竺軸宍雫七叱執失嫉室悉湿漆疾質実蔀篠偲柴芝屡蕊縞舎写射捨赦斜煮社紗者謝車遮蛇邪借勺尺杓灼爵酌釈錫若寂弱惹主取守手朱殊狩珠種腫趣酒首儒受呪寿授樹綬需囚収周"],["bda1","宗就州修愁拾洲秀秋終繍習臭舟蒐衆襲讐蹴輯週酋酬集醜什住充十従戎柔汁渋獣縦重銃叔夙宿淑祝縮粛塾熟出術述俊峻春瞬竣舜駿准循旬楯殉淳準潤盾純巡遵醇順処初所暑曙渚庶緒署書薯藷諸助叙女序徐恕鋤除傷償"],["bea1","勝匠升召哨商唱嘗奨妾娼宵将小少尚庄床廠彰承抄招掌捷昇昌昭晶松梢樟樵沼消渉湘焼焦照症省硝礁祥称章笑粧紹肖菖蒋蕉衝裳訟証詔詳象賞醤鉦鍾鐘障鞘上丈丞乗冗剰城場壌嬢常情擾条杖浄状畳穣蒸譲醸錠嘱埴飾"],["bfa1","拭植殖燭織職色触食蝕辱尻伸信侵唇娠寝審心慎振新晋森榛浸深申疹真神秦紳臣芯薪親診身辛進針震人仁刃塵壬尋甚尽腎訊迅陣靭笥諏須酢図厨逗吹垂帥推水炊睡粋翠衰遂酔錐錘随瑞髄崇嵩数枢趨雛据杉椙菅頗雀裾"],["c0a1","澄摺寸世瀬畝是凄制勢姓征性成政整星晴棲栖正清牲生盛精聖声製西誠誓請逝醒青静斉税脆隻席惜戚斥昔析石積籍績脊責赤跡蹟碩切拙接摂折設窃節説雪絶舌蝉仙先千占宣専尖川戦扇撰栓栴泉浅洗染潜煎煽旋穿箭線"],["c1a1","繊羨腺舛船薦詮賎践選遷銭銑閃鮮前善漸然全禅繕膳糎噌塑岨措曾曽楚狙疏疎礎祖租粗素組蘇訴阻遡鼠僧創双叢倉喪壮奏爽宋層匝惣想捜掃挿掻操早曹巣槍槽漕燥争痩相窓糟総綜聡草荘葬蒼藻装走送遭鎗霜騒像増憎"],["c2a1","臓蔵贈造促側則即息捉束測足速俗属賊族続卒袖其揃存孫尊損村遜他多太汰詑唾堕妥惰打柁舵楕陀駄騨体堆対耐岱帯待怠態戴替泰滞胎腿苔袋貸退逮隊黛鯛代台大第醍題鷹滝瀧卓啄宅托択拓沢濯琢託鐸濁諾茸凧蛸只"],["c3a1","叩但達辰奪脱巽竪辿棚谷狸鱈樽誰丹単嘆坦担探旦歎淡湛炭短端箪綻耽胆蛋誕鍛団壇弾断暖檀段男談値知地弛恥智池痴稚置致蜘遅馳築畜竹筑蓄逐秩窒茶嫡着中仲宙忠抽昼柱注虫衷註酎鋳駐樗瀦猪苧著貯丁兆凋喋寵"],["c4a1","帖帳庁弔張彫徴懲挑暢朝潮牒町眺聴脹腸蝶調諜超跳銚長頂鳥勅捗直朕沈珍賃鎮陳津墜椎槌追鎚痛通塚栂掴槻佃漬柘辻蔦綴鍔椿潰坪壷嬬紬爪吊釣鶴亭低停偵剃貞呈堤定帝底庭廷弟悌抵挺提梯汀碇禎程締艇訂諦蹄逓"],["c5a1","邸鄭釘鼎泥摘擢敵滴的笛適鏑溺哲徹撤轍迭鉄典填天展店添纏甜貼転顛点伝殿澱田電兎吐堵塗妬屠徒斗杜渡登菟賭途都鍍砥砺努度土奴怒倒党冬凍刀唐塔塘套宕島嶋悼投搭東桃梼棟盗淘湯涛灯燈当痘祷等答筒糖統到"],["c6a1","董蕩藤討謄豆踏逃透鐙陶頭騰闘働動同堂導憧撞洞瞳童胴萄道銅峠鴇匿得徳涜特督禿篤毒独読栃橡凸突椴届鳶苫寅酉瀞噸屯惇敦沌豚遁頓呑曇鈍奈那内乍凪薙謎灘捺鍋楢馴縄畷南楠軟難汝二尼弐迩匂賑肉虹廿日乳入"],["c7a1","如尿韮任妊忍認濡禰祢寧葱猫熱年念捻撚燃粘乃廼之埜嚢悩濃納能脳膿農覗蚤巴把播覇杷波派琶破婆罵芭馬俳廃拝排敗杯盃牌背肺輩配倍培媒梅楳煤狽買売賠陪這蝿秤矧萩伯剥博拍柏泊白箔粕舶薄迫曝漠爆縛莫駁麦"],["c8a1","函箱硲箸肇筈櫨幡肌畑畠八鉢溌発醗髪伐罰抜筏閥鳩噺塙蛤隼伴判半反叛帆搬斑板氾汎版犯班畔繁般藩販範釆煩頒飯挽晩番盤磐蕃蛮匪卑否妃庇彼悲扉批披斐比泌疲皮碑秘緋罷肥被誹費避非飛樋簸備尾微枇毘琵眉美"],["c9a1","鼻柊稗匹疋髭彦膝菱肘弼必畢筆逼桧姫媛紐百謬俵彪標氷漂瓢票表評豹廟描病秒苗錨鋲蒜蛭鰭品彬斌浜瀕貧賓頻敏瓶不付埠夫婦富冨布府怖扶敷斧普浮父符腐膚芙譜負賦赴阜附侮撫武舞葡蕪部封楓風葺蕗伏副復幅服"],["caa1","福腹複覆淵弗払沸仏物鮒分吻噴墳憤扮焚奮粉糞紛雰文聞丙併兵塀幣平弊柄並蔽閉陛米頁僻壁癖碧別瞥蔑箆偏変片篇編辺返遍便勉娩弁鞭保舗鋪圃捕歩甫補輔穂募墓慕戊暮母簿菩倣俸包呆報奉宝峰峯崩庖抱捧放方朋"],["cba1","法泡烹砲縫胞芳萌蓬蜂褒訪豊邦鋒飽鳳鵬乏亡傍剖坊妨帽忘忙房暴望某棒冒紡肪膨謀貌貿鉾防吠頬北僕卜墨撲朴牧睦穆釦勃没殆堀幌奔本翻凡盆摩磨魔麻埋妹昧枚毎哩槙幕膜枕鮪柾鱒桝亦俣又抹末沫迄侭繭麿万慢満"],["cca1","漫蔓味未魅巳箕岬密蜜湊蓑稔脈妙粍民眠務夢無牟矛霧鵡椋婿娘冥名命明盟迷銘鳴姪牝滅免棉綿緬面麺摸模茂妄孟毛猛盲網耗蒙儲木黙目杢勿餅尤戻籾貰問悶紋門匁也冶夜爺耶野弥矢厄役約薬訳躍靖柳薮鑓愉愈油癒"],["cda1","諭輸唯佑優勇友宥幽悠憂揖有柚湧涌猶猷由祐裕誘遊邑郵雄融夕予余与誉輿預傭幼妖容庸揚揺擁曜楊様洋溶熔用窯羊耀葉蓉要謡踊遥陽養慾抑欲沃浴翌翼淀羅螺裸来莱頼雷洛絡落酪乱卵嵐欄濫藍蘭覧利吏履李梨理璃"],["cea1","痢裏裡里離陸律率立葎掠略劉流溜琉留硫粒隆竜龍侶慮旅虜了亮僚両凌寮料梁涼猟療瞭稜糧良諒遼量陵領力緑倫厘林淋燐琳臨輪隣鱗麟瑠塁涙累類令伶例冷励嶺怜玲礼苓鈴隷零霊麗齢暦歴列劣烈裂廉恋憐漣煉簾練聯"],["cfa1","蓮連錬呂魯櫓炉賂路露労婁廊弄朗楼榔浪漏牢狼篭老聾蝋郎六麓禄肋録論倭和話歪賄脇惑枠鷲亙亘鰐詫藁蕨椀湾碗腕"],["d0a1","弌丐丕个丱丶丼丿乂乖乘亂亅豫亊舒弍于亞亟亠亢亰亳亶从仍仄仆仂仗仞仭仟价伉佚估佛佝佗佇佶侈侏侘佻佩佰侑佯來侖儘俔俟俎俘俛俑俚俐俤俥倚倨倔倪倥倅伜俶倡倩倬俾俯們倆偃假會偕偐偈做偖偬偸傀傚傅傴傲"],["d1a1","僉僊傳僂僖僞僥僭僣僮價僵儉儁儂儖儕儔儚儡儺儷儼儻儿兀兒兌兔兢竸兩兪兮冀冂囘册冉冏冑冓冕冖冤冦冢冩冪冫决冱冲冰况冽凅凉凛几處凩凭凰凵凾刄刋刔刎刧刪刮刳刹剏剄剋剌剞剔剪剴剩剳剿剽劍劔劒剱劈劑辨"],["d2a1","辧劬劭劼劵勁勍勗勞勣勦飭勠勳勵勸勹匆匈甸匍匐匏匕匚匣匯匱匳匸區卆卅丗卉卍凖卞卩卮夘卻卷厂厖厠厦厥厮厰厶參簒雙叟曼燮叮叨叭叺吁吽呀听吭吼吮吶吩吝呎咏呵咎呟呱呷呰咒呻咀呶咄咐咆哇咢咸咥咬哄哈咨"],["d3a1","咫哂咤咾咼哘哥哦唏唔哽哮哭哺哢唹啀啣啌售啜啅啖啗唸唳啝喙喀咯喊喟啻啾喘喞單啼喃喩喇喨嗚嗅嗟嗄嗜嗤嗔嘔嗷嘖嗾嗽嘛嗹噎噐營嘴嘶嘲嘸噫噤嘯噬噪嚆嚀嚊嚠嚔嚏嚥嚮嚶嚴囂嚼囁囃囀囈囎囑囓囗囮囹圀囿圄圉"],["d4a1","圈國圍圓團圖嗇圜圦圷圸坎圻址坏坩埀垈坡坿垉垓垠垳垤垪垰埃埆埔埒埓堊埖埣堋堙堝塲堡塢塋塰毀塒堽塹墅墹墟墫墺壞墻墸墮壅壓壑壗壙壘壥壜壤壟壯壺壹壻壼壽夂夊夐夛梦夥夬夭夲夸夾竒奕奐奎奚奘奢奠奧奬奩"],["d5a1","奸妁妝佞侫妣妲姆姨姜妍姙姚娥娟娑娜娉娚婀婬婉娵娶婢婪媚媼媾嫋嫂媽嫣嫗嫦嫩嫖嫺嫻嬌嬋嬖嬲嫐嬪嬶嬾孃孅孀孑孕孚孛孥孩孰孳孵學斈孺宀它宦宸寃寇寉寔寐寤實寢寞寥寫寰寶寳尅將專對尓尠尢尨尸尹屁屆屎屓"],["d6a1","屐屏孱屬屮乢屶屹岌岑岔妛岫岻岶岼岷峅岾峇峙峩峽峺峭嶌峪崋崕崗嵜崟崛崑崔崢崚崙崘嵌嵒嵎嵋嵬嵳嵶嶇嶄嶂嶢嶝嶬嶮嶽嶐嶷嶼巉巍巓巒巖巛巫已巵帋帚帙帑帛帶帷幄幃幀幎幗幔幟幢幤幇幵并幺麼广庠廁廂廈廐廏"],["d7a1","廖廣廝廚廛廢廡廨廩廬廱廳廰廴廸廾弃弉彝彜弋弑弖弩弭弸彁彈彌彎弯彑彖彗彙彡彭彳彷徃徂彿徊很徑徇從徙徘徠徨徭徼忖忻忤忸忱忝悳忿怡恠怙怐怩怎怱怛怕怫怦怏怺恚恁恪恷恟恊恆恍恣恃恤恂恬恫恙悁悍惧悃悚"],["d8a1","悄悛悖悗悒悧悋惡悸惠惓悴忰悽惆悵惘慍愕愆惶惷愀惴惺愃愡惻惱愍愎慇愾愨愧慊愿愼愬愴愽慂慄慳慷慘慙慚慫慴慯慥慱慟慝慓慵憙憖憇憬憔憚憊憑憫憮懌懊應懷懈懃懆憺懋罹懍懦懣懶懺懴懿懽懼懾戀戈戉戍戌戔戛"],["d9a1","戞戡截戮戰戲戳扁扎扞扣扛扠扨扼抂抉找抒抓抖拔抃抔拗拑抻拏拿拆擔拈拜拌拊拂拇抛拉挌拮拱挧挂挈拯拵捐挾捍搜捏掖掎掀掫捶掣掏掉掟掵捫捩掾揩揀揆揣揉插揶揄搖搴搆搓搦搶攝搗搨搏摧摯摶摎攪撕撓撥撩撈撼"],["daa1","據擒擅擇撻擘擂擱擧舉擠擡抬擣擯攬擶擴擲擺攀擽攘攜攅攤攣攫攴攵攷收攸畋效敖敕敍敘敞敝敲數斂斃變斛斟斫斷旃旆旁旄旌旒旛旙无旡旱杲昊昃旻杳昵昶昴昜晏晄晉晁晞晝晤晧晨晟晢晰暃暈暎暉暄暘暝曁暹曉暾暼"],["dba1","曄暸曖曚曠昿曦曩曰曵曷朏朖朞朦朧霸朮朿朶杁朸朷杆杞杠杙杣杤枉杰枩杼杪枌枋枦枡枅枷柯枴柬枳柩枸柤柞柝柢柮枹柎柆柧檜栞框栩桀桍栲桎梳栫桙档桷桿梟梏梭梔條梛梃檮梹桴梵梠梺椏梍桾椁棊椈棘椢椦棡椌棍"],["dca1","棔棧棕椶椒椄棗棣椥棹棠棯椨椪椚椣椡棆楹楷楜楸楫楔楾楮椹楴椽楙椰楡楞楝榁楪榲榮槐榿槁槓榾槎寨槊槝榻槃榧樮榑榠榜榕榴槞槨樂樛槿權槹槲槧樅榱樞槭樔槫樊樒櫁樣樓橄樌橲樶橸橇橢橙橦橈樸樢檐檍檠檄檢檣"],["dda1","檗蘗檻櫃櫂檸檳檬櫞櫑櫟檪櫚櫪櫻欅蘖櫺欒欖鬱欟欸欷盜欹飮歇歃歉歐歙歔歛歟歡歸歹歿殀殄殃殍殘殕殞殤殪殫殯殲殱殳殷殼毆毋毓毟毬毫毳毯麾氈氓气氛氤氣汞汕汢汪沂沍沚沁沛汾汨汳沒沐泄泱泓沽泗泅泝沮沱沾"],["dea1","沺泛泯泙泪洟衍洶洫洽洸洙洵洳洒洌浣涓浤浚浹浙涎涕濤涅淹渕渊涵淇淦涸淆淬淞淌淨淒淅淺淙淤淕淪淮渭湮渮渙湲湟渾渣湫渫湶湍渟湃渺湎渤滿渝游溂溪溘滉溷滓溽溯滄溲滔滕溏溥滂溟潁漑灌滬滸滾漿滲漱滯漲滌"],["dfa1","漾漓滷澆潺潸澁澀潯潛濳潭澂潼潘澎澑濂潦澳澣澡澤澹濆澪濟濕濬濔濘濱濮濛瀉瀋濺瀑瀁瀏濾瀛瀚潴瀝瀘瀟瀰瀾瀲灑灣炙炒炯烱炬炸炳炮烟烋烝烙焉烽焜焙煥煕熈煦煢煌煖煬熏燻熄熕熨熬燗熹熾燒燉燔燎燠燬燧燵燼"],["e0a1","燹燿爍爐爛爨爭爬爰爲爻爼爿牀牆牋牘牴牾犂犁犇犒犖犢犧犹犲狃狆狄狎狒狢狠狡狹狷倏猗猊猜猖猝猴猯猩猥猾獎獏默獗獪獨獰獸獵獻獺珈玳珎玻珀珥珮珞璢琅瑯琥珸琲琺瑕琿瑟瑙瑁瑜瑩瑰瑣瑪瑶瑾璋璞璧瓊瓏瓔珱"],["e1a1","瓠瓣瓧瓩瓮瓲瓰瓱瓸瓷甄甃甅甌甎甍甕甓甞甦甬甼畄畍畊畉畛畆畚畩畤畧畫畭畸當疆疇畴疊疉疂疔疚疝疥疣痂疳痃疵疽疸疼疱痍痊痒痙痣痞痾痿痼瘁痰痺痲痳瘋瘍瘉瘟瘧瘠瘡瘢瘤瘴瘰瘻癇癈癆癜癘癡癢癨癩癪癧癬癰"],["e2a1","癲癶癸發皀皃皈皋皎皖皓皙皚皰皴皸皹皺盂盍盖盒盞盡盥盧盪蘯盻眈眇眄眩眤眞眥眦眛眷眸睇睚睨睫睛睥睿睾睹瞎瞋瞑瞠瞞瞰瞶瞹瞿瞼瞽瞻矇矍矗矚矜矣矮矼砌砒礦砠礪硅碎硴碆硼碚碌碣碵碪碯磑磆磋磔碾碼磅磊磬"],["e3a1","磧磚磽磴礇礒礑礙礬礫祀祠祗祟祚祕祓祺祿禊禝禧齋禪禮禳禹禺秉秕秧秬秡秣稈稍稘稙稠稟禀稱稻稾稷穃穗穉穡穢穩龝穰穹穽窈窗窕窘窖窩竈窰窶竅竄窿邃竇竊竍竏竕竓站竚竝竡竢竦竭竰笂笏笊笆笳笘笙笞笵笨笶筐"],["e4a1","筺笄筍笋筌筅筵筥筴筧筰筱筬筮箝箘箟箍箜箚箋箒箏筝箙篋篁篌篏箴篆篝篩簑簔篦篥籠簀簇簓篳篷簗簍篶簣簧簪簟簷簫簽籌籃籔籏籀籐籘籟籤籖籥籬籵粃粐粤粭粢粫粡粨粳粲粱粮粹粽糀糅糂糘糒糜糢鬻糯糲糴糶糺紆"],["e5a1","紂紜紕紊絅絋紮紲紿紵絆絳絖絎絲絨絮絏絣經綉絛綏絽綛綺綮綣綵緇綽綫總綢綯緜綸綟綰緘緝緤緞緻緲緡縅縊縣縡縒縱縟縉縋縢繆繦縻縵縹繃縷縲縺繧繝繖繞繙繚繹繪繩繼繻纃緕繽辮繿纈纉續纒纐纓纔纖纎纛纜缸缺"],["e6a1","罅罌罍罎罐网罕罔罘罟罠罨罩罧罸羂羆羃羈羇羌羔羞羝羚羣羯羲羹羮羶羸譱翅翆翊翕翔翡翦翩翳翹飜耆耄耋耒耘耙耜耡耨耿耻聊聆聒聘聚聟聢聨聳聲聰聶聹聽聿肄肆肅肛肓肚肭冐肬胛胥胙胝胄胚胖脉胯胱脛脩脣脯腋"],["e7a1","隋腆脾腓腑胼腱腮腥腦腴膃膈膊膀膂膠膕膤膣腟膓膩膰膵膾膸膽臀臂膺臉臍臑臙臘臈臚臟臠臧臺臻臾舁舂舅與舊舍舐舖舩舫舸舳艀艙艘艝艚艟艤艢艨艪艫舮艱艷艸艾芍芒芫芟芻芬苡苣苟苒苴苳苺莓范苻苹苞茆苜茉苙"],["e8a1","茵茴茖茲茱荀茹荐荅茯茫茗茘莅莚莪莟莢莖茣莎莇莊荼莵荳荵莠莉莨菴萓菫菎菽萃菘萋菁菷萇菠菲萍萢萠莽萸蔆菻葭萪萼蕚蒄葷葫蒭葮蒂葩葆萬葯葹萵蓊葢蒹蒿蒟蓙蓍蒻蓚蓐蓁蓆蓖蒡蔡蓿蓴蔗蔘蔬蔟蔕蔔蓼蕀蕣蕘蕈"],["e9a1","蕁蘂蕋蕕薀薤薈薑薊薨蕭薔薛藪薇薜蕷蕾薐藉薺藏薹藐藕藝藥藜藹蘊蘓蘋藾藺蘆蘢蘚蘰蘿虍乕虔號虧虱蚓蚣蚩蚪蚋蚌蚶蚯蛄蛆蚰蛉蠣蚫蛔蛞蛩蛬蛟蛛蛯蜒蜆蜈蜀蜃蛻蜑蜉蜍蛹蜊蜴蜿蜷蜻蜥蜩蜚蝠蝟蝸蝌蝎蝴蝗蝨蝮蝙"],["eaa1","蝓蝣蝪蠅螢螟螂螯蟋螽蟀蟐雖螫蟄螳蟇蟆螻蟯蟲蟠蠏蠍蟾蟶蟷蠎蟒蠑蠖蠕蠢蠡蠱蠶蠹蠧蠻衄衂衒衙衞衢衫袁衾袞衵衽袵衲袂袗袒袮袙袢袍袤袰袿袱裃裄裔裘裙裝裹褂裼裴裨裲褄褌褊褓襃褞褥褪褫襁襄褻褶褸襌褝襠襞"],["eba1","襦襤襭襪襯襴襷襾覃覈覊覓覘覡覩覦覬覯覲覺覽覿觀觚觜觝觧觴觸訃訖訐訌訛訝訥訶詁詛詒詆詈詼詭詬詢誅誂誄誨誡誑誥誦誚誣諄諍諂諚諫諳諧諤諱謔諠諢諷諞諛謌謇謚諡謖謐謗謠謳鞫謦謫謾謨譁譌譏譎證譖譛譚譫"],["eca1","譟譬譯譴譽讀讌讎讒讓讖讙讚谺豁谿豈豌豎豐豕豢豬豸豺貂貉貅貊貍貎貔豼貘戝貭貪貽貲貳貮貶賈賁賤賣賚賽賺賻贄贅贊贇贏贍贐齎贓賍贔贖赧赭赱赳趁趙跂趾趺跏跚跖跌跛跋跪跫跟跣跼踈踉跿踝踞踐踟蹂踵踰踴蹊"],["eda1","蹇蹉蹌蹐蹈蹙蹤蹠踪蹣蹕蹶蹲蹼躁躇躅躄躋躊躓躑躔躙躪躡躬躰軆躱躾軅軈軋軛軣軼軻軫軾輊輅輕輒輙輓輜輟輛輌輦輳輻輹轅轂輾轌轉轆轎轗轜轢轣轤辜辟辣辭辯辷迚迥迢迪迯邇迴逅迹迺逑逕逡逍逞逖逋逧逶逵逹迸"],["eea1","遏遐遑遒逎遉逾遖遘遞遨遯遶隨遲邂遽邁邀邊邉邏邨邯邱邵郢郤扈郛鄂鄒鄙鄲鄰酊酖酘酣酥酩酳酲醋醉醂醢醫醯醪醵醴醺釀釁釉釋釐釖釟釡釛釼釵釶鈞釿鈔鈬鈕鈑鉞鉗鉅鉉鉤鉈銕鈿鉋鉐銜銖銓銛鉚鋏銹銷鋩錏鋺鍄錮"],["efa1","錙錢錚錣錺錵錻鍜鍠鍼鍮鍖鎰鎬鎭鎔鎹鏖鏗鏨鏥鏘鏃鏝鏐鏈鏤鐚鐔鐓鐃鐇鐐鐶鐫鐵鐡鐺鑁鑒鑄鑛鑠鑢鑞鑪鈩鑰鑵鑷鑽鑚鑼鑾钁鑿閂閇閊閔閖閘閙閠閨閧閭閼閻閹閾闊濶闃闍闌闕闔闖關闡闥闢阡阨阮阯陂陌陏陋陷陜陞"],["f0a1","陝陟陦陲陬隍隘隕隗險隧隱隲隰隴隶隸隹雎雋雉雍襍雜霍雕雹霄霆霈霓霎霑霏霖霙霤霪霰霹霽霾靄靆靈靂靉靜靠靤靦靨勒靫靱靹鞅靼鞁靺鞆鞋鞏鞐鞜鞨鞦鞣鞳鞴韃韆韈韋韜韭齏韲竟韶韵頏頌頸頤頡頷頽顆顏顋顫顯顰"],["f1a1","顱顴顳颪颯颱颶飄飃飆飩飫餃餉餒餔餘餡餝餞餤餠餬餮餽餾饂饉饅饐饋饑饒饌饕馗馘馥馭馮馼駟駛駝駘駑駭駮駱駲駻駸騁騏騅駢騙騫騷驅驂驀驃騾驕驍驛驗驟驢驥驤驩驫驪骭骰骼髀髏髑髓體髞髟髢髣髦髯髫髮髴髱髷"],["f2a1","髻鬆鬘鬚鬟鬢鬣鬥鬧鬨鬩鬪鬮鬯鬲魄魃魏魍魎魑魘魴鮓鮃鮑鮖鮗鮟鮠鮨鮴鯀鯊鮹鯆鯏鯑鯒鯣鯢鯤鯔鯡鰺鯲鯱鯰鰕鰔鰉鰓鰌鰆鰈鰒鰊鰄鰮鰛鰥鰤鰡鰰鱇鰲鱆鰾鱚鱠鱧鱶鱸鳧鳬鳰鴉鴈鳫鴃鴆鴪鴦鶯鴣鴟鵄鴕鴒鵁鴿鴾鵆鵈"],["f3a1","鵝鵞鵤鵑鵐鵙鵲鶉鶇鶫鵯鵺鶚鶤鶩鶲鷄鷁鶻鶸鶺鷆鷏鷂鷙鷓鷸鷦鷭鷯鷽鸚鸛鸞鹵鹹鹽麁麈麋麌麒麕麑麝麥麩麸麪麭靡黌黎黏黐黔黜點黝黠黥黨黯黴黶黷黹黻黼黽鼇鼈皷鼕鼡鼬鼾齊齒齔齣齟齠齡齦齧齬齪齷齲齶龕龜龠"],["f4a1","堯槇遙瑤凜熙"],["f9a1","纊褜鍈銈蓜俉炻昱棈鋹曻彅丨仡仼伀伃伹佖侒侊侚侔俍偀倢俿倞偆偰偂傔僴僘兊兤冝冾凬刕劜劦勀勛匀匇匤卲厓厲叝﨎咜咊咩哿喆坙坥垬埈埇﨏塚增墲夋奓奛奝奣妤妺孖寀甯寘寬尞岦岺峵崧嵓﨑嵂嵭嶸嶹巐弡弴彧德"],["faa1","忞恝悅悊惞惕愠惲愑愷愰憘戓抦揵摠撝擎敎昀昕昻昉昮昞昤晥晗晙晴晳暙暠暲暿曺朎朗杦枻桒柀栁桄棏﨓楨﨔榘槢樰橫橆橳橾櫢櫤毖氿汜沆汯泚洄涇浯涖涬淏淸淲淼渹湜渧渼溿澈澵濵瀅瀇瀨炅炫焏焄煜煆煇凞燁燾犱"],["fba1","犾猤猪獷玽珉珖珣珒琇珵琦琪琩琮瑢璉璟甁畯皂皜皞皛皦益睆劯砡硎硤硺礰礼神祥禔福禛竑竧靖竫箞精絈絜綷綠緖繒罇羡羽茁荢荿菇菶葈蒴蕓蕙蕫﨟薰蘒﨡蠇裵訒訷詹誧誾諟諸諶譓譿賰賴贒赶﨣軏﨤逸遧郞都鄕鄧釚"],["fca1","釗釞釭釮釤釥鈆鈐鈊鈺鉀鈼鉎鉙鉑鈹鉧銧鉷鉸鋧鋗鋙鋐﨧鋕鋠鋓錥錡鋻﨨錞鋿錝錂鍰鍗鎤鏆鏞鏸鐱鑅鑈閒隆﨩隝隯霳霻靃靍靏靑靕顗顥飯飼餧館馞驎髙髜魵魲鮏鮱鮻鰀鵰鵫鶴鸙黑"],["fcf1","ⅰ",9,"￢￤＇＂"],["8fa2af","˘ˇ¸˙˝¯˛˚～΄΅"],["8fa2c2","¡¦¿"],["8fa2eb","ºª©®™¤№"],["8fa6e1","ΆΈΉΊΪ"],["8fa6e7","Ό"],["8fa6e9","ΎΫ"],["8fa6ec","Ώ"],["8fa6f1","άέήίϊΐόςύϋΰώ"],["8fa7c2","Ђ",10,"ЎЏ"],["8fa7f2","ђ",10,"ўџ"],["8fa9a1","ÆĐ"],["8fa9a4","Ħ"],["8fa9a6","Ĳ"],["8fa9a8","ŁĿ"],["8fa9ab","ŊØŒ"],["8fa9af","ŦÞ"],["8fa9c1","æđðħıĳĸłŀŉŋøœßŧþ"],["8faaa1","ÁÀÄÂĂǍĀĄÅÃĆĈČÇĊĎÉÈËÊĚĖĒĘ"],["8faaba","ĜĞĢĠĤÍÌÏÎǏİĪĮĨĴĶĹĽĻŃŇŅÑÓÒÖÔǑŐŌÕŔŘŖŚŜŠŞŤŢÚÙÜÛŬǓŰŪŲŮŨǗǛǙǕŴÝŸŶŹŽŻ"],["8faba1","áàäâăǎāąåãćĉčçċďéèëêěėēęǵĝğ"],["8fabbd","ġĥíìïîǐ"],["8fabc5","īįĩĵķĺľļńňņñóòöôǒőōõŕřŗśŝšşťţúùüûŭǔűūųůũǘǜǚǖŵýÿŷźžż"],["8fb0a1","丂丄丅丌丒丟丣两丨丫丮丯丰丵乀乁乄乇乑乚乜乣乨乩乴乵乹乿亍亖亗亝亯亹仃仐仚仛仠仡仢仨仯仱仳仵份仾仿伀伂伃伈伋伌伒伕伖众伙伮伱你伳伵伷伹伻伾佀佂佈佉佋佌佒佔佖佘佟佣佪佬佮佱佷佸佹佺佽佾侁侂侄"],["8fb1a1","侅侉侊侌侎侐侒侓侔侗侙侚侞侟侲侷侹侻侼侽侾俀俁俅俆俈俉俋俌俍俏俒俜俠俢俰俲俼俽俿倀倁倄倇倊倌倎倐倓倗倘倛倜倝倞倢倧倮倰倲倳倵偀偁偂偅偆偊偌偎偑偒偓偗偙偟偠偢偣偦偧偪偭偰偱倻傁傃傄傆傊傎傏傐"],["8fb2a1","傒傓傔傖傛傜傞",4,"傪傯傰傹傺傽僀僃僄僇僌僎僐僓僔僘僜僝僟僢僤僦僨僩僯僱僶僺僾儃儆儇儈儋儌儍儎僲儐儗儙儛儜儝儞儣儧儨儬儭儯儱儳儴儵儸儹兂兊兏兓兕兗兘兟兤兦兾冃冄冋冎冘冝冡冣冭冸冺冼冾冿凂"],["8fb3a1","凈减凑凒凓凕凘凞凢凥凮凲凳凴凷刁刂刅划刓刕刖刘刢刨刱刲刵刼剅剉剕剗剘剚剜剟剠剡剦剮剷剸剹劀劂劅劊劌劓劕劖劗劘劚劜劤劥劦劧劯劰劶劷劸劺劻劽勀勄勆勈勌勏勑勔勖勛勜勡勥勨勩勪勬勰勱勴勶勷匀匃匊匋"],["8fb4a1","匌匑匓匘匛匜匞匟匥匧匨匩匫匬匭匰匲匵匼匽匾卂卌卋卙卛卡卣卥卬卭卲卹卾厃厇厈厎厓厔厙厝厡厤厪厫厯厲厴厵厷厸厺厽叀叅叏叒叓叕叚叝叞叠另叧叵吂吓吚吡吧吨吪启吱吴吵呃呄呇呍呏呞呢呤呦呧呩呫呭呮呴呿"],["8fb5a1","咁咃咅咈咉咍咑咕咖咜咟咡咦咧咩咪咭咮咱咷咹咺咻咿哆哊响哎哠哪哬哯哶哼哾哿唀唁唅唈唉唌唍唎唕唪唫唲唵唶唻唼唽啁啇啉啊啍啐啑啘啚啛啞啠啡啤啦啿喁喂喆喈喎喏喑喒喓喔喗喣喤喭喲喿嗁嗃嗆嗉嗋嗌嗎嗑嗒"],["8fb6a1","嗓嗗嗘嗛嗞嗢嗩嗶嗿嘅嘈嘊嘍",5,"嘙嘬嘰嘳嘵嘷嘹嘻嘼嘽嘿噀噁噃噄噆噉噋噍噏噔噞噠噡噢噣噦噩噭噯噱噲噵嚄嚅嚈嚋嚌嚕嚙嚚嚝嚞嚟嚦嚧嚨嚩嚫嚬嚭嚱嚳嚷嚾囅囉囊囋囏囐囌囍囙囜囝囟囡囤",4,"囱囫园"],["8fb7a1","囶囷圁圂圇圊圌圑圕圚圛圝圠圢圣圤圥圩圪圬圮圯圳圴圽圾圿坅坆坌坍坒坢坥坧坨坫坭",4,"坳坴坵坷坹坺坻坼坾垁垃垌垔垗垙垚垜垝垞垟垡垕垧垨垩垬垸垽埇埈埌埏埕埝埞埤埦埧埩埭埰埵埶埸埽埾埿堃堄堈堉埡"],["8fb8a1","堌堍堛堞堟堠堦堧堭堲堹堿塉塌塍塏塐塕塟塡塤塧塨塸塼塿墀墁墇墈墉墊墌墍墏墐墔墖墝墠墡墢墦墩墱墲壄墼壂壈壍壎壐壒壔壖壚壝壡壢壩壳夅夆夋夌夒夓夔虁夝夡夣夤夨夯夰夳夵夶夿奃奆奒奓奙奛奝奞奟奡奣奫奭"],["8fb9a1","奯奲奵奶她奻奼妋妌妎妒妕妗妟妤妧妭妮妯妰妳妷妺妼姁姃姄姈姊姍姒姝姞姟姣姤姧姮姯姱姲姴姷娀娄娌娍娎娒娓娞娣娤娧娨娪娭娰婄婅婇婈婌婐婕婞婣婥婧婭婷婺婻婾媋媐媓媖媙媜媞媟媠媢媧媬媱媲媳媵媸媺媻媿"],["8fbaa1","嫄嫆嫈嫏嫚嫜嫠嫥嫪嫮嫵嫶嫽嬀嬁嬈嬗嬴嬙嬛嬝嬡嬥嬭嬸孁孋孌孒孖孞孨孮孯孼孽孾孿宁宄宆宊宎宐宑宓宔宖宨宩宬宭宯宱宲宷宺宼寀寁寍寏寖",4,"寠寯寱寴寽尌尗尞尟尣尦尩尫尬尮尰尲尵尶屙屚屜屢屣屧屨屩"],["8fbba1","屭屰屴屵屺屻屼屽岇岈岊岏岒岝岟岠岢岣岦岪岲岴岵岺峉峋峒峝峗峮峱峲峴崁崆崍崒崫崣崤崦崧崱崴崹崽崿嵂嵃嵆嵈嵕嵑嵙嵊嵟嵠嵡嵢嵤嵪嵭嵰嵹嵺嵾嵿嶁嶃嶈嶊嶒嶓嶔嶕嶙嶛嶟嶠嶧嶫嶰嶴嶸嶹巃巇巋巐巎巘巙巠巤"],["8fbca1","巩巸巹帀帇帍帒帔帕帘帟帠帮帨帲帵帾幋幐幉幑幖幘幛幜幞幨幪",4,"幰庀庋庎庢庤庥庨庪庬庱庳庽庾庿廆廌廋廎廑廒廔廕廜廞廥廫异弆弇弈弎弙弜弝弡弢弣弤弨弫弬弮弰弴弶弻弽弿彀彄彅彇彍彐彔彘彛彠彣彤彧"],["8fbda1","彯彲彴彵彸彺彽彾徉徍徏徖徜徝徢徧徫徤徬徯徰徱徸忄忇忈忉忋忐",4,"忞忡忢忨忩忪忬忭忮忯忲忳忶忺忼怇怊怍怓怔怗怘怚怟怤怭怳怵恀恇恈恉恌恑恔恖恗恝恡恧恱恾恿悂悆悈悊悎悑悓悕悘悝悞悢悤悥您悰悱悷"],["8fbea1","悻悾惂惄惈惉惊惋惎惏惔惕惙惛惝惞惢惥惲惵惸惼惽愂愇愊愌愐",4,"愖愗愙愜愞愢愪愫愰愱愵愶愷愹慁慅慆慉慞慠慬慲慸慻慼慿憀憁憃憄憋憍憒憓憗憘憜憝憟憠憥憨憪憭憸憹憼懀懁懂懎懏懕懜懝懞懟懡懢懧懩懥"],["8fbfa1","懬懭懯戁戃戄戇戓戕戜戠戢戣戧戩戫戹戽扂扃扄扆扌扐扑扒扔扖扚扜扤扭扯扳扺扽抍抎抏抐抦抨抳抶抷抺抾抿拄拎拕拖拚拪拲拴拼拽挃挄挊挋挍挐挓挖挘挩挪挭挵挶挹挼捁捂捃捄捆捊捋捎捒捓捔捘捛捥捦捬捭捱捴捵"],["8fc0a1","捸捼捽捿掂掄掇掊掐掔掕掙掚掞掤掦掭掮掯掽揁揅揈揎揑揓揔揕揜揠揥揪揬揲揳揵揸揹搉搊搐搒搔搘搞搠搢搤搥搩搪搯搰搵搽搿摋摏摑摒摓摔摚摛摜摝摟摠摡摣摭摳摴摻摽撅撇撏撐撑撘撙撛撝撟撡撣撦撨撬撳撽撾撿"],["8fc1a1","擄擉擊擋擌擎擐擑擕擗擤擥擩擪擭擰擵擷擻擿攁攄攈攉攊攏攓攔攖攙攛攞攟攢攦攩攮攱攺攼攽敃敇敉敐敒敔敟敠敧敫敺敽斁斅斊斒斕斘斝斠斣斦斮斲斳斴斿旂旈旉旎旐旔旖旘旟旰旲旴旵旹旾旿昀昄昈昉昍昑昒昕昖昝"],["8fc2a1","昞昡昢昣昤昦昩昪昫昬昮昰昱昳昹昷晀晅晆晊晌晑晎晗晘晙晛晜晠晡曻晪晫晬晾晳晵晿晷晸晹晻暀晼暋暌暍暐暒暙暚暛暜暟暠暤暭暱暲暵暻暿曀曂曃曈曌曎曏曔曛曟曨曫曬曮曺朅朇朎朓朙朜朠朢朳朾杅杇杈杌杔杕杝"],["8fc3a1","杦杬杮杴杶杻极构枎枏枑枓枖枘枙枛枰枱枲枵枻枼枽柹柀柂柃柅柈柉柒柗柙柜柡柦柰柲柶柷桒栔栙栝栟栨栧栬栭栯栰栱栳栻栿桄桅桊桌桕桗桘桛桫桮",4,"桵桹桺桻桼梂梄梆梈梖梘梚梜梡梣梥梩梪梮梲梻棅棈棌棏"],["8fc4a1","棐棑棓棖棙棜棝棥棨棪棫棬棭棰棱棵棶棻棼棽椆椉椊椐椑椓椖椗椱椳椵椸椻楂楅楉楎楗楛楣楤楥楦楨楩楬楰楱楲楺楻楿榀榍榒榖榘榡榥榦榨榫榭榯榷榸榺榼槅槈槑槖槗槢槥槮槯槱槳槵槾樀樁樃樏樑樕樚樝樠樤樨樰樲"],["8fc5a1","樴樷樻樾樿橅橆橉橊橎橐橑橒橕橖橛橤橧橪橱橳橾檁檃檆檇檉檋檑檛檝檞檟檥檫檯檰檱檴檽檾檿櫆櫉櫈櫌櫐櫔櫕櫖櫜櫝櫤櫧櫬櫰櫱櫲櫼櫽欂欃欆欇欉欏欐欑欗欛欞欤欨欫欬欯欵欶欻欿歆歊歍歒歖歘歝歠歧歫歮歰歵歽"],["8fc6a1","歾殂殅殗殛殟殠殢殣殨殩殬殭殮殰殸殹殽殾毃毄毉毌毖毚毡毣毦毧毮毱毷毹毿氂氄氅氉氍氎氐氒氙氟氦氧氨氬氮氳氵氶氺氻氿汊汋汍汏汒汔汙汛汜汫汭汯汴汶汸汹汻沅沆沇沉沔沕沗沘沜沟沰沲沴泂泆泍泏泐泑泒泔泖"],["8fc7a1","泚泜泠泧泩泫泬泮泲泴洄洇洊洎洏洑洓洚洦洧洨汧洮洯洱洹洼洿浗浞浟浡浥浧浯浰浼涂涇涑涒涔涖涗涘涪涬涴涷涹涽涿淄淈淊淎淏淖淛淝淟淠淢淥淩淯淰淴淶淼渀渄渞渢渧渲渶渹渻渼湄湅湈湉湋湏湑湒湓湔湗湜湝湞"],["8fc8a1","湢湣湨湳湻湽溍溓溙溠溧溭溮溱溳溻溿滀滁滃滇滈滊滍滎滏滫滭滮滹滻滽漄漈漊漌漍漖漘漚漛漦漩漪漯漰漳漶漻漼漭潏潑潒潓潗潙潚潝潞潡潢潨潬潽潾澃澇澈澋澌澍澐澒澓澔澖澚澟澠澥澦澧澨澮澯澰澵澶澼濅濇濈濊"],["8fc9a1","濚濞濨濩濰濵濹濼濽瀀瀅瀆瀇瀍瀗瀠瀣瀯瀴瀷瀹瀼灃灄灈灉灊灋灔灕灝灞灎灤灥灬灮灵灶灾炁炅炆炔",4,"炛炤炫炰炱炴炷烊烑烓烔烕烖烘烜烤烺焃",4,"焋焌焏焞焠焫焭焯焰焱焸煁煅煆煇煊煋煐煒煗煚煜煞煠"],["8fcaa1","煨煹熀熅熇熌熒熚熛熠熢熯熰熲熳熺熿燀燁燄燋燌燓燖燙燚燜燸燾爀爇爈爉爓爗爚爝爟爤爫爯爴爸爹牁牂牃牅牎牏牐牓牕牖牚牜牞牠牣牨牫牮牯牱牷牸牻牼牿犄犉犍犎犓犛犨犭犮犱犴犾狁狇狉狌狕狖狘狟狥狳狴狺狻"],["8fcba1","狾猂猄猅猇猋猍猒猓猘猙猞猢猤猧猨猬猱猲猵猺猻猽獃獍獐獒獖獘獝獞獟獠獦獧獩獫獬獮獯獱獷獹獼玀玁玃玅玆玎玐玓玕玗玘玜玞玟玠玢玥玦玪玫玭玵玷玹玼玽玿珅珆珉珋珌珏珒珓珖珙珝珡珣珦珧珩珴珵珷珹珺珻珽"],["8fcca1","珿琀琁琄琇琊琑琚琛琤琦琨",9,"琹瑀瑃瑄瑆瑇瑋瑍瑑瑒瑗瑝瑢瑦瑧瑨瑫瑭瑮瑱瑲璀璁璅璆璇璉璏璐璑璒璘璙璚璜璟璠璡璣璦璨璩璪璫璮璯璱璲璵璹璻璿瓈瓉瓌瓐瓓瓘瓚瓛瓞瓟瓤瓨瓪瓫瓯瓴瓺瓻瓼瓿甆"],["8fcda1","甒甖甗甠甡甤甧甩甪甯甶甹甽甾甿畀畃畇畈畎畐畒畗畞畟畡畯畱畹",5,"疁疅疐疒疓疕疙疜疢疤疴疺疿痀痁痄痆痌痎痏痗痜痟痠痡痤痧痬痮痯痱痹瘀瘂瘃瘄瘇瘈瘊瘌瘏瘒瘓瘕瘖瘙瘛瘜瘝瘞瘣瘥瘦瘩瘭瘲瘳瘵瘸瘹"],["8fcea1","瘺瘼癊癀癁癃癄癅癉癋癕癙癟癤癥癭癮癯癱癴皁皅皌皍皕皛皜皝皟皠皢",6,"皪皭皽盁盅盉盋盌盎盔盙盠盦盨盬盰盱盶盹盼眀眆眊眎眒眔眕眗眙眚眜眢眨眭眮眯眴眵眶眹眽眾睂睅睆睊睍睎睏睒睖睗睜睞睟睠睢"],["8fcfa1","睤睧睪睬睰睲睳睴睺睽瞀瞄瞌瞍瞔瞕瞖瞚瞟瞢瞧瞪瞮瞯瞱瞵瞾矃矉矑矒矕矙矞矟矠矤矦矪矬矰矱矴矸矻砅砆砉砍砎砑砝砡砢砣砭砮砰砵砷硃硄硇硈硌硎硒硜硞硠硡硣硤硨硪确硺硾碊碏碔碘碡碝碞碟碤碨碬碭碰碱碲碳"],["8fd0a1","碻碽碿磇磈磉磌磎磒磓磕磖磤磛磟磠磡磦磪磲磳礀磶磷磺磻磿礆礌礐礚礜礞礟礠礥礧礩礭礱礴礵礻礽礿祄祅祆祊祋祏祑祔祘祛祜祧祩祫祲祹祻祼祾禋禌禑禓禔禕禖禘禛禜禡禨禩禫禯禱禴禸离秂秄秇秈秊秏秔秖秚秝秞"],["8fd1a1","秠秢秥秪秫秭秱秸秼稂稃稇稉稊稌稑稕稛稞稡稧稫稭稯稰稴稵稸稹稺穄穅穇穈穌穕穖穙穜穝穟穠穥穧穪穭穵穸穾窀窂窅窆窊窋窐窑窔窞窠窣窬窳窵窹窻窼竆竉竌竎竑竛竨竩竫竬竱竴竻竽竾笇笔笟笣笧笩笪笫笭笮笯笰"],["8fd2a1","笱笴笽笿筀筁筇筎筕筠筤筦筩筪筭筯筲筳筷箄箉箎箐箑箖箛箞箠箥箬箯箰箲箵箶箺箻箼箽篂篅篈篊篔篖篗篙篚篛篨篪篲篴篵篸篹篺篼篾簁簂簃簄簆簉簋簌簎簏簙簛簠簥簦簨簬簱簳簴簶簹簺籆籊籕籑籒籓籙",5],["8fd3a1","籡籣籧籩籭籮籰籲籹籼籽粆粇粏粔粞粠粦粰粶粷粺粻粼粿糄糇糈糉糍糏糓糔糕糗糙糚糝糦糩糫糵紃紇紈紉紏紑紒紓紖紝紞紣紦紪紭紱紼紽紾絀絁絇絈絍絑絓絗絙絚絜絝絥絧絪絰絸絺絻絿綁綂綃綅綆綈綋綌綍綑綖綗綝"],["8fd4a1","綞綦綧綪綳綶綷綹緂",4,"緌緍緎緗緙縀緢緥緦緪緫緭緱緵緶緹緺縈縐縑縕縗縜縝縠縧縨縬縭縯縳縶縿繄繅繇繎繐繒繘繟繡繢繥繫繮繯繳繸繾纁纆纇纊纍纑纕纘纚纝纞缼缻缽缾缿罃罄罇罏罒罓罛罜罝罡罣罤罥罦罭"],["8fd5a1","罱罽罾罿羀羋羍羏羐羑羖羗羜羡羢羦羪羭羴羼羿翀翃翈翎翏翛翟翣翥翨翬翮翯翲翺翽翾翿耇耈耊耍耎耏耑耓耔耖耝耞耟耠耤耦耬耮耰耴耵耷耹耺耼耾聀聄聠聤聦聭聱聵肁肈肎肜肞肦肧肫肸肹胈胍胏胒胔胕胗胘胠胭胮"],["8fd6a1","胰胲胳胶胹胺胾脃脋脖脗脘脜脞脠脤脧脬脰脵脺脼腅腇腊腌腒腗腠腡腧腨腩腭腯腷膁膐膄膅膆膋膎膖膘膛膞膢膮膲膴膻臋臃臅臊臎臏臕臗臛臝臞臡臤臫臬臰臱臲臵臶臸臹臽臿舀舃舏舓舔舙舚舝舡舢舨舲舴舺艃艄艅艆"],["8fd7a1","艋艎艏艑艖艜艠艣艧艭艴艻艽艿芀芁芃芄芇芉芊芎芑芔芖芘芚芛芠芡芣芤芧芨芩芪芮芰芲芴芷芺芼芾芿苆苐苕苚苠苢苤苨苪苭苯苶苷苽苾茀茁茇茈茊茋荔茛茝茞茟茡茢茬茭茮茰茳茷茺茼茽荂荃荄荇荍荎荑荕荖荗荰荸"],["8fd8a1","荽荿莀莂莄莆莍莒莔莕莘莙莛莜莝莦莧莩莬莾莿菀菇菉菏菐菑菔菝荓菨菪菶菸菹菼萁萆萊萏萑萕萙莭萯萹葅葇葈葊葍葏葑葒葖葘葙葚葜葠葤葥葧葪葰葳葴葶葸葼葽蒁蒅蒒蒓蒕蒞蒦蒨蒩蒪蒯蒱蒴蒺蒽蒾蓀蓂蓇蓈蓌蓏蓓"],["8fd9a1","蓜蓧蓪蓯蓰蓱蓲蓷蔲蓺蓻蓽蔂蔃蔇蔌蔎蔐蔜蔞蔢蔣蔤蔥蔧蔪蔫蔯蔳蔴蔶蔿蕆蕏",4,"蕖蕙蕜",6,"蕤蕫蕯蕹蕺蕻蕽蕿薁薅薆薉薋薌薏薓薘薝薟薠薢薥薧薴薶薷薸薼薽薾薿藂藇藊藋藎薭藘藚藟藠藦藨藭藳藶藼"],["8fdaa1","藿蘀蘄蘅蘍蘎蘐蘑蘒蘘蘙蘛蘞蘡蘧蘩蘶蘸蘺蘼蘽虀虂虆虒虓虖虗虘虙虝虠",4,"虩虬虯虵虶虷虺蚍蚑蚖蚘蚚蚜蚡蚦蚧蚨蚭蚱蚳蚴蚵蚷蚸蚹蚿蛀蛁蛃蛅蛑蛒蛕蛗蛚蛜蛠蛣蛥蛧蚈蛺蛼蛽蜄蜅蜇蜋蜎蜏蜐蜓蜔蜙蜞蜟蜡蜣"],["8fdba1","蜨蜮蜯蜱蜲蜹蜺蜼蜽蜾蝀蝃蝅蝍蝘蝝蝡蝤蝥蝯蝱蝲蝻螃",6,"螋螌螐螓螕螗螘螙螞螠螣螧螬螭螮螱螵螾螿蟁蟈蟉蟊蟎蟕蟖蟙蟚蟜蟟蟢蟣蟤蟪蟫蟭蟱蟳蟸蟺蟿蠁蠃蠆蠉蠊蠋蠐蠙蠒蠓蠔蠘蠚蠛蠜蠞蠟蠨蠭蠮蠰蠲蠵"],["8fdca1","蠺蠼衁衃衅衈衉衊衋衎衑衕衖衘衚衜衟衠衤衩衱衹衻袀袘袚袛袜袟袠袨袪袺袽袾裀裊",4,"裑裒裓裛裞裧裯裰裱裵裷褁褆褍褎褏褕褖褘褙褚褜褠褦褧褨褰褱褲褵褹褺褾襀襂襅襆襉襏襒襗襚襛襜襡襢襣襫襮襰襳襵襺"],["8fdda1","襻襼襽覉覍覐覔覕覛覜覟覠覥覰覴覵覶覷覼觔",4,"觥觩觫觭觱觳觶觹觽觿訄訅訇訏訑訒訔訕訞訠訢訤訦訫訬訯訵訷訽訾詀詃詅詇詉詍詎詓詖詗詘詜詝詡詥詧詵詶詷詹詺詻詾詿誀誃誆誋誏誐誒誖誗誙誟誧誩誮誯誳"],["8fdea1","誶誷誻誾諃諆諈諉諊諑諓諔諕諗諝諟諬諰諴諵諶諼諿謅謆謋謑謜謞謟謊謭謰謷謼譂",4,"譈譒譓譔譙譍譞譣譭譶譸譹譼譾讁讄讅讋讍讏讔讕讜讞讟谸谹谽谾豅豇豉豋豏豑豓豔豗豘豛豝豙豣豤豦豨豩豭豳豵豶豻豾貆"],["8fdfa1","貇貋貐貒貓貙貛貜貤貹貺賅賆賉賋賏賖賕賙賝賡賨賬賯賰賲賵賷賸賾賿贁贃贉贒贗贛赥赩赬赮赿趂趄趈趍趐趑趕趞趟趠趦趫趬趯趲趵趷趹趻跀跅跆跇跈跊跎跑跔跕跗跙跤跥跧跬跰趼跱跲跴跽踁踄踅踆踋踑踔踖踠踡踢"],["8fe0a1","踣踦踧踱踳踶踷踸踹踽蹀蹁蹋蹍蹎蹏蹔蹛蹜蹝蹞蹡蹢蹩蹬蹭蹯蹰蹱蹹蹺蹻躂躃躉躐躒躕躚躛躝躞躢躧躩躭躮躳躵躺躻軀軁軃軄軇軏軑軔軜軨軮軰軱軷軹軺軭輀輂輇輈輏輐輖輗輘輞輠輡輣輥輧輨輬輭輮輴輵輶輷輺轀轁"],["8fe1a1","轃轇轏轑",4,"轘轝轞轥辝辠辡辤辥辦辵辶辸达迀迁迆迊迋迍运迒迓迕迠迣迤迨迮迱迵迶迻迾适逄逈逌逘逛逨逩逯逪逬逭逳逴逷逿遃遄遌遛遝遢遦遧遬遰遴遹邅邈邋邌邎邐邕邗邘邙邛邠邡邢邥邰邲邳邴邶邽郌邾郃"],["8fe2a1","郄郅郇郈郕郗郘郙郜郝郟郥郒郶郫郯郰郴郾郿鄀鄄鄅鄆鄈鄍鄐鄔鄖鄗鄘鄚鄜鄞鄠鄥鄢鄣鄧鄩鄮鄯鄱鄴鄶鄷鄹鄺鄼鄽酃酇酈酏酓酗酙酚酛酡酤酧酭酴酹酺酻醁醃醅醆醊醎醑醓醔醕醘醞醡醦醨醬醭醮醰醱醲醳醶醻醼醽醿"],["8fe3a1","釂釃釅釓釔釗釙釚釞釤釥釩釪釬",5,"釷釹釻釽鈀鈁鈄鈅鈆鈇鈉鈊鈌鈐鈒鈓鈖鈘鈜鈝鈣鈤鈥鈦鈨鈮鈯鈰鈳鈵鈶鈸鈹鈺鈼鈾鉀鉂鉃鉆鉇鉊鉍鉎鉏鉑鉘鉙鉜鉝鉠鉡鉥鉧鉨鉩鉮鉯鉰鉵",4,"鉻鉼鉽鉿銈銉銊銍銎銒銗"],["8fe4a1","銙銟銠銤銥銧銨銫銯銲銶銸銺銻銼銽銿",4,"鋅鋆鋇鋈鋋鋌鋍鋎鋐鋓鋕鋗鋘鋙鋜鋝鋟鋠鋡鋣鋥鋧鋨鋬鋮鋰鋹鋻鋿錀錂錈錍錑錔錕錜錝錞錟錡錤錥錧錩錪錳錴錶錷鍇鍈鍉鍐鍑鍒鍕鍗鍘鍚鍞鍤鍥鍧鍩鍪鍭鍯鍰鍱鍳鍴鍶"],["8fe5a1","鍺鍽鍿鎀鎁鎂鎈鎊鎋鎍鎏鎒鎕鎘鎛鎞鎡鎣鎤鎦鎨鎫鎴鎵鎶鎺鎩鏁鏄鏅鏆鏇鏉",4,"鏓鏙鏜鏞鏟鏢鏦鏧鏹鏷鏸鏺鏻鏽鐁鐂鐄鐈鐉鐍鐎鐏鐕鐖鐗鐟鐮鐯鐱鐲鐳鐴鐻鐿鐽鑃鑅鑈鑊鑌鑕鑙鑜鑟鑡鑣鑨鑫鑭鑮鑯鑱鑲钄钃镸镹"],["8fe6a1","镾閄閈閌閍閎閝閞閟閡閦閩閫閬閴閶閺閽閿闆闈闉闋闐闑闒闓闙闚闝闞闟闠闤闦阝阞阢阤阥阦阬阱阳阷阸阹阺阼阽陁陒陔陖陗陘陡陮陴陻陼陾陿隁隂隃隄隉隑隖隚隝隟隤隥隦隩隮隯隳隺雊雒嶲雘雚雝雞雟雩雯雱雺霂"],["8fe7a1","霃霅霉霚霛霝霡霢霣霨霱霳靁靃靊靎靏靕靗靘靚靛靣靧靪靮靳靶靷靸靻靽靿鞀鞉鞕鞖鞗鞙鞚鞞鞟鞢鞬鞮鞱鞲鞵鞶鞸鞹鞺鞼鞾鞿韁韄韅韇韉韊韌韍韎韐韑韔韗韘韙韝韞韠韛韡韤韯韱韴韷韸韺頇頊頙頍頎頔頖頜頞頠頣頦"],["8fe8a1","頫頮頯頰頲頳頵頥頾顄顇顊顑顒顓顖顗顙顚顢顣顥顦顪顬颫颭颮颰颴颷颸颺颻颿飂飅飈飌飡飣飥飦飧飪飳飶餂餇餈餑餕餖餗餚餛餜餟餢餦餧餫餱",4,"餹餺餻餼饀饁饆饇饈饍饎饔饘饙饛饜饞饟饠馛馝馟馦馰馱馲馵"],["8fe9a1","馹馺馽馿駃駉駓駔駙駚駜駞駧駪駫駬駰駴駵駹駽駾騂騃騄騋騌騐騑騖騞騠騢騣騤騧騭騮騳騵騶騸驇驁驄驊驋驌驎驑驔驖驝骪骬骮骯骲骴骵骶骹骻骾骿髁髃髆髈髎髐髒髕髖髗髛髜髠髤髥髧髩髬髲髳髵髹髺髽髿",4],["8feaa1","鬄鬅鬈鬉鬋鬌鬍鬎鬐鬒鬖鬙鬛鬜鬠鬦鬫鬭鬳鬴鬵鬷鬹鬺鬽魈魋魌魕魖魗魛魞魡魣魥魦魨魪",4,"魳魵魷魸魹魿鮀鮄鮅鮆鮇鮉鮊鮋鮍鮏鮐鮔鮚鮝鮞鮦鮧鮩鮬鮰鮱鮲鮷鮸鮻鮼鮾鮿鯁鯇鯈鯎鯐鯗鯘鯝鯟鯥鯧鯪鯫鯯鯳鯷鯸"],["8feba1","鯹鯺鯽鯿鰀鰂鰋鰏鰑鰖鰘鰙鰚鰜鰞鰢鰣鰦",4,"鰱鰵鰶鰷鰽鱁鱃鱄鱅鱉鱊鱎鱏鱐鱓鱔鱖鱘鱛鱝鱞鱟鱣鱩鱪鱜鱫鱨鱮鱰鱲鱵鱷鱻鳦鳲鳷鳹鴋鴂鴑鴗鴘鴜鴝鴞鴯鴰鴲鴳鴴鴺鴼鵅鴽鵂鵃鵇鵊鵓鵔鵟鵣鵢鵥鵩鵪鵫鵰鵶鵷鵻"],["8feca1","鵼鵾鶃鶄鶆鶊鶍鶎鶒鶓鶕鶖鶗鶘鶡鶪鶬鶮鶱鶵鶹鶼鶿鷃鷇鷉鷊鷔鷕鷖鷗鷚鷞鷟鷠鷥鷧鷩鷫鷮鷰鷳鷴鷾鸊鸂鸇鸎鸐鸑鸒鸕鸖鸙鸜鸝鹺鹻鹼麀麂麃麄麅麇麎麏麖麘麛麞麤麨麬麮麯麰麳麴麵黆黈黋黕黟黤黧黬黭黮黰黱黲黵"],["8feda1","黸黿鼂鼃鼉鼏鼐鼑鼒鼔鼖鼗鼙鼚鼛鼟鼢鼦鼪鼫鼯鼱鼲鼴鼷鼹鼺鼼鼽鼿齁齃",4,"齓齕齖齗齘齚齝齞齨齩齭",4,"齳齵齺齽龏龐龑龒龔龖龗龞龡龢龣龥"]]');

/***/ }),

/***/ "(middleware)/./node_modules/iconv-lite/encodings/tables/gb18030-ranges.json":
/*!**********************************************************************!*\
  !*** ./node_modules/iconv-lite/encodings/tables/gb18030-ranges.json ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"uChars":[128,165,169,178,184,216,226,235,238,244,248,251,253,258,276,284,300,325,329,334,364,463,465,467,469,471,473,475,477,506,594,610,712,716,730,930,938,962,970,1026,1104,1106,8209,8215,8218,8222,8231,8241,8244,8246,8252,8365,8452,8454,8458,8471,8482,8556,8570,8596,8602,8713,8720,8722,8726,8731,8737,8740,8742,8748,8751,8760,8766,8777,8781,8787,8802,8808,8816,8854,8858,8870,8896,8979,9322,9372,9548,9588,9616,9622,9634,9652,9662,9672,9676,9680,9702,9735,9738,9793,9795,11906,11909,11913,11917,11928,11944,11947,11951,11956,11960,11964,11979,12284,12292,12312,12319,12330,12351,12436,12447,12535,12543,12586,12842,12850,12964,13200,13215,13218,13253,13263,13267,13270,13384,13428,13727,13839,13851,14617,14703,14801,14816,14964,15183,15471,15585,16471,16736,17208,17325,17330,17374,17623,17997,18018,18212,18218,18301,18318,18760,18811,18814,18820,18823,18844,18848,18872,19576,19620,19738,19887,40870,59244,59336,59367,59413,59417,59423,59431,59437,59443,59452,59460,59478,59493,63789,63866,63894,63976,63986,64016,64018,64021,64025,64034,64037,64042,65074,65093,65107,65112,65127,65132,65375,65510,65536],"gbChars":[0,36,38,45,50,81,89,95,96,100,103,104,105,109,126,133,148,172,175,179,208,306,307,308,309,310,311,312,313,341,428,443,544,545,558,741,742,749,750,805,819,820,7922,7924,7925,7927,7934,7943,7944,7945,7950,8062,8148,8149,8152,8164,8174,8236,8240,8262,8264,8374,8380,8381,8384,8388,8390,8392,8393,8394,8396,8401,8406,8416,8419,8424,8437,8439,8445,8482,8485,8496,8521,8603,8936,8946,9046,9050,9063,9066,9076,9092,9100,9108,9111,9113,9131,9162,9164,9218,9219,11329,11331,11334,11336,11346,11361,11363,11366,11370,11372,11375,11389,11682,11686,11687,11692,11694,11714,11716,11723,11725,11730,11736,11982,11989,12102,12336,12348,12350,12384,12393,12395,12397,12510,12553,12851,12962,12973,13738,13823,13919,13933,14080,14298,14585,14698,15583,15847,16318,16434,16438,16481,16729,17102,17122,17315,17320,17402,17418,17859,17909,17911,17915,17916,17936,17939,17961,18664,18703,18814,18962,19043,33469,33470,33471,33484,33485,33490,33497,33501,33505,33513,33520,33536,33550,37845,37921,37948,38029,38038,38064,38065,38066,38069,38075,38076,38078,39108,39109,39113,39114,39115,39116,39265,39394,189000]}');

/***/ }),

/***/ "(middleware)/./node_modules/iconv-lite/encodings/tables/gbk-added.json":
/*!*****************************************************************!*\
  !*** ./node_modules/iconv-lite/encodings/tables/gbk-added.json ***!
  \*****************************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('[["a140","",62],["a180","",32],["a240","",62],["a280","",32],["a2ab","",5],["a2e3","€"],["a2ef",""],["a2fd",""],["a340","",62],["a380","",31,"　"],["a440","",62],["a480","",32],["a4f4","",10],["a540","",62],["a580","",32],["a5f7","",7],["a640","",62],["a680","",32],["a6b9","",7],["a6d9","",6],["a6ec",""],["a6f3",""],["a6f6","",8],["a740","",62],["a780","",32],["a7c2","",14],["a7f2","",12],["a896","",10],["a8bc","ḿ"],["a8bf","ǹ"],["a8c1",""],["a8ea","",20],["a958",""],["a95b",""],["a95d",""],["a989","〾⿰",11],["a997","",12],["a9f0","",14],["aaa1","",93],["aba1","",93],["aca1","",93],["ada1","",93],["aea1","",93],["afa1","",93],["d7fa","",4],["f8a1","",93],["f9a1","",93],["faa1","",93],["fba1","",93],["fca1","",93],["fda1","",93],["fe50","⺁⺄㑳㑇⺈⺋㖞㘚㘎⺌⺗㥮㤘㧏㧟㩳㧐㭎㱮㳠⺧⺪䁖䅟⺮䌷⺳⺶⺷䎱䎬⺻䏝䓖䙡䙌"],["fe80","䜣䜩䝼䞍⻊䥇䥺䥽䦂䦃䦅䦆䦟䦛䦷䦶䲣䲟䲠䲡䱷䲢䴓",6,"䶮",93],["8135f437",""]]');

/***/ }),

/***/ "(middleware)/./node_modules/iconv-lite/encodings/tables/shiftjis.json":
/*!****************************************************************!*\
  !*** ./node_modules/iconv-lite/encodings/tables/shiftjis.json ***!
  \****************************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('[["0","\\u0000",128],["a1","｡",62],["8140","　、。，．・：；？！゛゜´｀¨＾￣＿ヽヾゝゞ〃仝々〆〇ー―‐／＼～∥｜…‥‘’“”（）〔〕［］｛｝〈",9,"＋－±×"],["8180","÷＝≠＜＞≦≧∞∴♂♀°′″℃￥＄￠￡％＃＆＊＠§☆★○●◎◇◆□■△▲▽▼※〒→←↑↓〓"],["81b8","∈∋⊆⊇⊂⊃∪∩"],["81c8","∧∨￢⇒⇔∀∃"],["81da","∠⊥⌒∂∇≡≒≪≫√∽∝∵∫∬"],["81f0","Å‰♯♭♪†‡¶"],["81fc","◯"],["824f","０",9],["8260","Ａ",25],["8281","ａ",25],["829f","ぁ",82],["8340","ァ",62],["8380","ム",22],["839f","Α",16,"Σ",6],["83bf","α",16,"σ",6],["8440","А",5,"ЁЖ",25],["8470","а",5,"ёж",7],["8480","о",17],["849f","─│┌┐┘└├┬┤┴┼━┃┏┓┛┗┣┳┫┻╋┠┯┨┷┿┝┰┥┸╂"],["8740","①",19,"Ⅰ",9],["875f","㍉㌔㌢㍍㌘㌧㌃㌶㍑㍗㌍㌦㌣㌫㍊㌻㎜㎝㎞㎎㎏㏄㎡"],["877e","㍻"],["8780","〝〟№㏍℡㊤",4,"㈱㈲㈹㍾㍽㍼≒≡∫∮∑√⊥∠∟⊿∵∩∪"],["889f","亜唖娃阿哀愛挨姶逢葵茜穐悪握渥旭葦芦鯵梓圧斡扱宛姐虻飴絢綾鮎或粟袷安庵按暗案闇鞍杏以伊位依偉囲夷委威尉惟意慰易椅為畏異移維緯胃萎衣謂違遺医井亥域育郁磯一壱溢逸稲茨芋鰯允印咽員因姻引飲淫胤蔭"],["8940","院陰隠韻吋右宇烏羽迂雨卯鵜窺丑碓臼渦嘘唄欝蔚鰻姥厩浦瓜閏噂云運雲荏餌叡営嬰影映曳栄永泳洩瑛盈穎頴英衛詠鋭液疫益駅悦謁越閲榎厭円"],["8980","園堰奄宴延怨掩援沿演炎焔煙燕猿縁艶苑薗遠鉛鴛塩於汚甥凹央奥往応押旺横欧殴王翁襖鴬鴎黄岡沖荻億屋憶臆桶牡乙俺卸恩温穏音下化仮何伽価佳加可嘉夏嫁家寡科暇果架歌河火珂禍禾稼箇花苛茄荷華菓蝦課嘩貨迦過霞蚊俄峨我牙画臥芽蛾賀雅餓駕介会解回塊壊廻快怪悔恢懐戒拐改"],["8a40","魁晦械海灰界皆絵芥蟹開階貝凱劾外咳害崖慨概涯碍蓋街該鎧骸浬馨蛙垣柿蛎鈎劃嚇各廓拡撹格核殻獲確穫覚角赫較郭閣隔革学岳楽額顎掛笠樫"],["8a80","橿梶鰍潟割喝恰括活渇滑葛褐轄且鰹叶椛樺鞄株兜竃蒲釜鎌噛鴨栢茅萱粥刈苅瓦乾侃冠寒刊勘勧巻喚堪姦完官寛干幹患感慣憾換敢柑桓棺款歓汗漢澗潅環甘監看竿管簡緩缶翰肝艦莞観諌貫還鑑間閑関陥韓館舘丸含岸巌玩癌眼岩翫贋雁頑顔願企伎危喜器基奇嬉寄岐希幾忌揮机旗既期棋棄"],["8b40","機帰毅気汽畿祈季稀紀徽規記貴起軌輝飢騎鬼亀偽儀妓宜戯技擬欺犠疑祇義蟻誼議掬菊鞠吉吃喫桔橘詰砧杵黍却客脚虐逆丘久仇休及吸宮弓急救"],["8b80","朽求汲泣灸球究窮笈級糾給旧牛去居巨拒拠挙渠虚許距鋸漁禦魚亨享京供侠僑兇競共凶協匡卿叫喬境峡強彊怯恐恭挟教橋況狂狭矯胸脅興蕎郷鏡響饗驚仰凝尭暁業局曲極玉桐粁僅勤均巾錦斤欣欽琴禁禽筋緊芹菌衿襟謹近金吟銀九倶句区狗玖矩苦躯駆駈駒具愚虞喰空偶寓遇隅串櫛釧屑屈"],["8c40","掘窟沓靴轡窪熊隈粂栗繰桑鍬勲君薫訓群軍郡卦袈祁係傾刑兄啓圭珪型契形径恵慶慧憩掲携敬景桂渓畦稽系経継繋罫茎荊蛍計詣警軽頚鶏芸迎鯨"],["8c80","劇戟撃激隙桁傑欠決潔穴結血訣月件倹倦健兼券剣喧圏堅嫌建憲懸拳捲検権牽犬献研硯絹県肩見謙賢軒遣鍵険顕験鹸元原厳幻弦減源玄現絃舷言諺限乎個古呼固姑孤己庫弧戸故枯湖狐糊袴股胡菰虎誇跨鈷雇顧鼓五互伍午呉吾娯後御悟梧檎瑚碁語誤護醐乞鯉交佼侯候倖光公功効勾厚口向"],["8d40","后喉坑垢好孔孝宏工巧巷幸広庚康弘恒慌抗拘控攻昂晃更杭校梗構江洪浩港溝甲皇硬稿糠紅紘絞綱耕考肯肱腔膏航荒行衡講貢購郊酵鉱砿鋼閤降"],["8d80","項香高鴻剛劫号合壕拷濠豪轟麹克刻告国穀酷鵠黒獄漉腰甑忽惚骨狛込此頃今困坤墾婚恨懇昏昆根梱混痕紺艮魂些佐叉唆嵯左差査沙瑳砂詐鎖裟坐座挫債催再最哉塞妻宰彩才採栽歳済災采犀砕砦祭斎細菜裁載際剤在材罪財冴坂阪堺榊肴咲崎埼碕鷺作削咋搾昨朔柵窄策索錯桜鮭笹匙冊刷"],["8e40","察拶撮擦札殺薩雑皐鯖捌錆鮫皿晒三傘参山惨撒散桟燦珊産算纂蚕讃賛酸餐斬暫残仕仔伺使刺司史嗣四士始姉姿子屍市師志思指支孜斯施旨枝止"],["8e80","死氏獅祉私糸紙紫肢脂至視詞詩試誌諮資賜雌飼歯事似侍児字寺慈持時次滋治爾璽痔磁示而耳自蒔辞汐鹿式識鴫竺軸宍雫七叱執失嫉室悉湿漆疾質実蔀篠偲柴芝屡蕊縞舎写射捨赦斜煮社紗者謝車遮蛇邪借勺尺杓灼爵酌釈錫若寂弱惹主取守手朱殊狩珠種腫趣酒首儒受呪寿授樹綬需囚収周"],["8f40","宗就州修愁拾洲秀秋終繍習臭舟蒐衆襲讐蹴輯週酋酬集醜什住充十従戎柔汁渋獣縦重銃叔夙宿淑祝縮粛塾熟出術述俊峻春瞬竣舜駿准循旬楯殉淳"],["8f80","準潤盾純巡遵醇順処初所暑曙渚庶緒署書薯藷諸助叙女序徐恕鋤除傷償勝匠升召哨商唱嘗奨妾娼宵将小少尚庄床廠彰承抄招掌捷昇昌昭晶松梢樟樵沼消渉湘焼焦照症省硝礁祥称章笑粧紹肖菖蒋蕉衝裳訟証詔詳象賞醤鉦鍾鐘障鞘上丈丞乗冗剰城場壌嬢常情擾条杖浄状畳穣蒸譲醸錠嘱埴飾"],["9040","拭植殖燭織職色触食蝕辱尻伸信侵唇娠寝審心慎振新晋森榛浸深申疹真神秦紳臣芯薪親診身辛進針震人仁刃塵壬尋甚尽腎訊迅陣靭笥諏須酢図厨"],["9080","逗吹垂帥推水炊睡粋翠衰遂酔錐錘随瑞髄崇嵩数枢趨雛据杉椙菅頗雀裾澄摺寸世瀬畝是凄制勢姓征性成政整星晴棲栖正清牲生盛精聖声製西誠誓請逝醒青静斉税脆隻席惜戚斥昔析石積籍績脊責赤跡蹟碩切拙接摂折設窃節説雪絶舌蝉仙先千占宣専尖川戦扇撰栓栴泉浅洗染潜煎煽旋穿箭線"],["9140","繊羨腺舛船薦詮賎践選遷銭銑閃鮮前善漸然全禅繕膳糎噌塑岨措曾曽楚狙疏疎礎祖租粗素組蘇訴阻遡鼠僧創双叢倉喪壮奏爽宋層匝惣想捜掃挿掻"],["9180","操早曹巣槍槽漕燥争痩相窓糟総綜聡草荘葬蒼藻装走送遭鎗霜騒像増憎臓蔵贈造促側則即息捉束測足速俗属賊族続卒袖其揃存孫尊損村遜他多太汰詑唾堕妥惰打柁舵楕陀駄騨体堆対耐岱帯待怠態戴替泰滞胎腿苔袋貸退逮隊黛鯛代台大第醍題鷹滝瀧卓啄宅托択拓沢濯琢託鐸濁諾茸凧蛸只"],["9240","叩但達辰奪脱巽竪辿棚谷狸鱈樽誰丹単嘆坦担探旦歎淡湛炭短端箪綻耽胆蛋誕鍛団壇弾断暖檀段男談値知地弛恥智池痴稚置致蜘遅馳築畜竹筑蓄"],["9280","逐秩窒茶嫡着中仲宙忠抽昼柱注虫衷註酎鋳駐樗瀦猪苧著貯丁兆凋喋寵帖帳庁弔張彫徴懲挑暢朝潮牒町眺聴脹腸蝶調諜超跳銚長頂鳥勅捗直朕沈珍賃鎮陳津墜椎槌追鎚痛通塚栂掴槻佃漬柘辻蔦綴鍔椿潰坪壷嬬紬爪吊釣鶴亭低停偵剃貞呈堤定帝底庭廷弟悌抵挺提梯汀碇禎程締艇訂諦蹄逓"],["9340","邸鄭釘鼎泥摘擢敵滴的笛適鏑溺哲徹撤轍迭鉄典填天展店添纏甜貼転顛点伝殿澱田電兎吐堵塗妬屠徒斗杜渡登菟賭途都鍍砥砺努度土奴怒倒党冬"],["9380","凍刀唐塔塘套宕島嶋悼投搭東桃梼棟盗淘湯涛灯燈当痘祷等答筒糖統到董蕩藤討謄豆踏逃透鐙陶頭騰闘働動同堂導憧撞洞瞳童胴萄道銅峠鴇匿得徳涜特督禿篤毒独読栃橡凸突椴届鳶苫寅酉瀞噸屯惇敦沌豚遁頓呑曇鈍奈那内乍凪薙謎灘捺鍋楢馴縄畷南楠軟難汝二尼弐迩匂賑肉虹廿日乳入"],["9440","如尿韮任妊忍認濡禰祢寧葱猫熱年念捻撚燃粘乃廼之埜嚢悩濃納能脳膿農覗蚤巴把播覇杷波派琶破婆罵芭馬俳廃拝排敗杯盃牌背肺輩配倍培媒梅"],["9480","楳煤狽買売賠陪這蝿秤矧萩伯剥博拍柏泊白箔粕舶薄迫曝漠爆縛莫駁麦函箱硲箸肇筈櫨幡肌畑畠八鉢溌発醗髪伐罰抜筏閥鳩噺塙蛤隼伴判半反叛帆搬斑板氾汎版犯班畔繁般藩販範釆煩頒飯挽晩番盤磐蕃蛮匪卑否妃庇彼悲扉批披斐比泌疲皮碑秘緋罷肥被誹費避非飛樋簸備尾微枇毘琵眉美"],["9540","鼻柊稗匹疋髭彦膝菱肘弼必畢筆逼桧姫媛紐百謬俵彪標氷漂瓢票表評豹廟描病秒苗錨鋲蒜蛭鰭品彬斌浜瀕貧賓頻敏瓶不付埠夫婦富冨布府怖扶敷"],["9580","斧普浮父符腐膚芙譜負賦赴阜附侮撫武舞葡蕪部封楓風葺蕗伏副復幅服福腹複覆淵弗払沸仏物鮒分吻噴墳憤扮焚奮粉糞紛雰文聞丙併兵塀幣平弊柄並蔽閉陛米頁僻壁癖碧別瞥蔑箆偏変片篇編辺返遍便勉娩弁鞭保舗鋪圃捕歩甫補輔穂募墓慕戊暮母簿菩倣俸包呆報奉宝峰峯崩庖抱捧放方朋"],["9640","法泡烹砲縫胞芳萌蓬蜂褒訪豊邦鋒飽鳳鵬乏亡傍剖坊妨帽忘忙房暴望某棒冒紡肪膨謀貌貿鉾防吠頬北僕卜墨撲朴牧睦穆釦勃没殆堀幌奔本翻凡盆"],["9680","摩磨魔麻埋妹昧枚毎哩槙幕膜枕鮪柾鱒桝亦俣又抹末沫迄侭繭麿万慢満漫蔓味未魅巳箕岬密蜜湊蓑稔脈妙粍民眠務夢無牟矛霧鵡椋婿娘冥名命明盟迷銘鳴姪牝滅免棉綿緬面麺摸模茂妄孟毛猛盲網耗蒙儲木黙目杢勿餅尤戻籾貰問悶紋門匁也冶夜爺耶野弥矢厄役約薬訳躍靖柳薮鑓愉愈油癒"],["9740","諭輸唯佑優勇友宥幽悠憂揖有柚湧涌猶猷由祐裕誘遊邑郵雄融夕予余与誉輿預傭幼妖容庸揚揺擁曜楊様洋溶熔用窯羊耀葉蓉要謡踊遥陽養慾抑欲"],["9780","沃浴翌翼淀羅螺裸来莱頼雷洛絡落酪乱卵嵐欄濫藍蘭覧利吏履李梨理璃痢裏裡里離陸律率立葎掠略劉流溜琉留硫粒隆竜龍侶慮旅虜了亮僚両凌寮料梁涼猟療瞭稜糧良諒遼量陵領力緑倫厘林淋燐琳臨輪隣鱗麟瑠塁涙累類令伶例冷励嶺怜玲礼苓鈴隷零霊麗齢暦歴列劣烈裂廉恋憐漣煉簾練聯"],["9840","蓮連錬呂魯櫓炉賂路露労婁廊弄朗楼榔浪漏牢狼篭老聾蝋郎六麓禄肋録論倭和話歪賄脇惑枠鷲亙亘鰐詫藁蕨椀湾碗腕"],["989f","弌丐丕个丱丶丼丿乂乖乘亂亅豫亊舒弍于亞亟亠亢亰亳亶从仍仄仆仂仗仞仭仟价伉佚估佛佝佗佇佶侈侏侘佻佩佰侑佯來侖儘俔俟俎俘俛俑俚俐俤俥倚倨倔倪倥倅伜俶倡倩倬俾俯們倆偃假會偕偐偈做偖偬偸傀傚傅傴傲"],["9940","僉僊傳僂僖僞僥僭僣僮價僵儉儁儂儖儕儔儚儡儺儷儼儻儿兀兒兌兔兢竸兩兪兮冀冂囘册冉冏冑冓冕冖冤冦冢冩冪冫决冱冲冰况冽凅凉凛几處凩凭"],["9980","凰凵凾刄刋刔刎刧刪刮刳刹剏剄剋剌剞剔剪剴剩剳剿剽劍劔劒剱劈劑辨辧劬劭劼劵勁勍勗勞勣勦飭勠勳勵勸勹匆匈甸匍匐匏匕匚匣匯匱匳匸區卆卅丗卉卍凖卞卩卮夘卻卷厂厖厠厦厥厮厰厶參簒雙叟曼燮叮叨叭叺吁吽呀听吭吼吮吶吩吝呎咏呵咎呟呱呷呰咒呻咀呶咄咐咆哇咢咸咥咬哄哈咨"],["9a40","咫哂咤咾咼哘哥哦唏唔哽哮哭哺哢唹啀啣啌售啜啅啖啗唸唳啝喙喀咯喊喟啻啾喘喞單啼喃喩喇喨嗚嗅嗟嗄嗜嗤嗔嘔嗷嘖嗾嗽嘛嗹噎噐營嘴嘶嘲嘸"],["9a80","噫噤嘯噬噪嚆嚀嚊嚠嚔嚏嚥嚮嚶嚴囂嚼囁囃囀囈囎囑囓囗囮囹圀囿圄圉圈國圍圓團圖嗇圜圦圷圸坎圻址坏坩埀垈坡坿垉垓垠垳垤垪垰埃埆埔埒埓堊埖埣堋堙堝塲堡塢塋塰毀塒堽塹墅墹墟墫墺壞墻墸墮壅壓壑壗壙壘壥壜壤壟壯壺壹壻壼壽夂夊夐夛梦夥夬夭夲夸夾竒奕奐奎奚奘奢奠奧奬奩"],["9b40","奸妁妝佞侫妣妲姆姨姜妍姙姚娥娟娑娜娉娚婀婬婉娵娶婢婪媚媼媾嫋嫂媽嫣嫗嫦嫩嫖嫺嫻嬌嬋嬖嬲嫐嬪嬶嬾孃孅孀孑孕孚孛孥孩孰孳孵學斈孺宀"],["9b80","它宦宸寃寇寉寔寐寤實寢寞寥寫寰寶寳尅將專對尓尠尢尨尸尹屁屆屎屓屐屏孱屬屮乢屶屹岌岑岔妛岫岻岶岼岷峅岾峇峙峩峽峺峭嶌峪崋崕崗嵜崟崛崑崔崢崚崙崘嵌嵒嵎嵋嵬嵳嵶嶇嶄嶂嶢嶝嶬嶮嶽嶐嶷嶼巉巍巓巒巖巛巫已巵帋帚帙帑帛帶帷幄幃幀幎幗幔幟幢幤幇幵并幺麼广庠廁廂廈廐廏"],["9c40","廖廣廝廚廛廢廡廨廩廬廱廳廰廴廸廾弃弉彝彜弋弑弖弩弭弸彁彈彌彎弯彑彖彗彙彡彭彳彷徃徂彿徊很徑徇從徙徘徠徨徭徼忖忻忤忸忱忝悳忿怡恠"],["9c80","怙怐怩怎怱怛怕怫怦怏怺恚恁恪恷恟恊恆恍恣恃恤恂恬恫恙悁悍惧悃悚悄悛悖悗悒悧悋惡悸惠惓悴忰悽惆悵惘慍愕愆惶惷愀惴惺愃愡惻惱愍愎慇愾愨愧慊愿愼愬愴愽慂慄慳慷慘慙慚慫慴慯慥慱慟慝慓慵憙憖憇憬憔憚憊憑憫憮懌懊應懷懈懃懆憺懋罹懍懦懣懶懺懴懿懽懼懾戀戈戉戍戌戔戛"],["9d40","戞戡截戮戰戲戳扁扎扞扣扛扠扨扼抂抉找抒抓抖拔抃抔拗拑抻拏拿拆擔拈拜拌拊拂拇抛拉挌拮拱挧挂挈拯拵捐挾捍搜捏掖掎掀掫捶掣掏掉掟掵捫"],["9d80","捩掾揩揀揆揣揉插揶揄搖搴搆搓搦搶攝搗搨搏摧摯摶摎攪撕撓撥撩撈撼據擒擅擇撻擘擂擱擧舉擠擡抬擣擯攬擶擴擲擺攀擽攘攜攅攤攣攫攴攵攷收攸畋效敖敕敍敘敞敝敲數斂斃變斛斟斫斷旃旆旁旄旌旒旛旙无旡旱杲昊昃旻杳昵昶昴昜晏晄晉晁晞晝晤晧晨晟晢晰暃暈暎暉暄暘暝曁暹曉暾暼"],["9e40","曄暸曖曚曠昿曦曩曰曵曷朏朖朞朦朧霸朮朿朶杁朸朷杆杞杠杙杣杤枉杰枩杼杪枌枋枦枡枅枷柯枴柬枳柩枸柤柞柝柢柮枹柎柆柧檜栞框栩桀桍栲桎"],["9e80","梳栫桙档桷桿梟梏梭梔條梛梃檮梹桴梵梠梺椏梍桾椁棊椈棘椢椦棡椌棍棔棧棕椶椒椄棗棣椥棹棠棯椨椪椚椣椡棆楹楷楜楸楫楔楾楮椹楴椽楙椰楡楞楝榁楪榲榮槐榿槁槓榾槎寨槊槝榻槃榧樮榑榠榜榕榴槞槨樂樛槿權槹槲槧樅榱樞槭樔槫樊樒櫁樣樓橄樌橲樶橸橇橢橙橦橈樸樢檐檍檠檄檢檣"],["9f40","檗蘗檻櫃櫂檸檳檬櫞櫑櫟檪櫚櫪櫻欅蘖櫺欒欖鬱欟欸欷盜欹飮歇歃歉歐歙歔歛歟歡歸歹歿殀殄殃殍殘殕殞殤殪殫殯殲殱殳殷殼毆毋毓毟毬毫毳毯"],["9f80","麾氈氓气氛氤氣汞汕汢汪沂沍沚沁沛汾汨汳沒沐泄泱泓沽泗泅泝沮沱沾沺泛泯泙泪洟衍洶洫洽洸洙洵洳洒洌浣涓浤浚浹浙涎涕濤涅淹渕渊涵淇淦涸淆淬淞淌淨淒淅淺淙淤淕淪淮渭湮渮渙湲湟渾渣湫渫湶湍渟湃渺湎渤滿渝游溂溪溘滉溷滓溽溯滄溲滔滕溏溥滂溟潁漑灌滬滸滾漿滲漱滯漲滌"],["e040","漾漓滷澆潺潸澁澀潯潛濳潭澂潼潘澎澑濂潦澳澣澡澤澹濆澪濟濕濬濔濘濱濮濛瀉瀋濺瀑瀁瀏濾瀛瀚潴瀝瀘瀟瀰瀾瀲灑灣炙炒炯烱炬炸炳炮烟烋烝"],["e080","烙焉烽焜焙煥煕熈煦煢煌煖煬熏燻熄熕熨熬燗熹熾燒燉燔燎燠燬燧燵燼燹燿爍爐爛爨爭爬爰爲爻爼爿牀牆牋牘牴牾犂犁犇犒犖犢犧犹犲狃狆狄狎狒狢狠狡狹狷倏猗猊猜猖猝猴猯猩猥猾獎獏默獗獪獨獰獸獵獻獺珈玳珎玻珀珥珮珞璢琅瑯琥珸琲琺瑕琿瑟瑙瑁瑜瑩瑰瑣瑪瑶瑾璋璞璧瓊瓏瓔珱"],["e140","瓠瓣瓧瓩瓮瓲瓰瓱瓸瓷甄甃甅甌甎甍甕甓甞甦甬甼畄畍畊畉畛畆畚畩畤畧畫畭畸當疆疇畴疊疉疂疔疚疝疥疣痂疳痃疵疽疸疼疱痍痊痒痙痣痞痾痿"],["e180","痼瘁痰痺痲痳瘋瘍瘉瘟瘧瘠瘡瘢瘤瘴瘰瘻癇癈癆癜癘癡癢癨癩癪癧癬癰癲癶癸發皀皃皈皋皎皖皓皙皚皰皴皸皹皺盂盍盖盒盞盡盥盧盪蘯盻眈眇眄眩眤眞眥眦眛眷眸睇睚睨睫睛睥睿睾睹瞎瞋瞑瞠瞞瞰瞶瞹瞿瞼瞽瞻矇矍矗矚矜矣矮矼砌砒礦砠礪硅碎硴碆硼碚碌碣碵碪碯磑磆磋磔碾碼磅磊磬"],["e240","磧磚磽磴礇礒礑礙礬礫祀祠祗祟祚祕祓祺祿禊禝禧齋禪禮禳禹禺秉秕秧秬秡秣稈稍稘稙稠稟禀稱稻稾稷穃穗穉穡穢穩龝穰穹穽窈窗窕窘窖窩竈窰"],["e280","窶竅竄窿邃竇竊竍竏竕竓站竚竝竡竢竦竭竰笂笏笊笆笳笘笙笞笵笨笶筐筺笄筍笋筌筅筵筥筴筧筰筱筬筮箝箘箟箍箜箚箋箒箏筝箙篋篁篌篏箴篆篝篩簑簔篦篥籠簀簇簓篳篷簗簍篶簣簧簪簟簷簫簽籌籃籔籏籀籐籘籟籤籖籥籬籵粃粐粤粭粢粫粡粨粳粲粱粮粹粽糀糅糂糘糒糜糢鬻糯糲糴糶糺紆"],["e340","紂紜紕紊絅絋紮紲紿紵絆絳絖絎絲絨絮絏絣經綉絛綏絽綛綺綮綣綵緇綽綫總綢綯緜綸綟綰緘緝緤緞緻緲緡縅縊縣縡縒縱縟縉縋縢繆繦縻縵縹繃縷"],["e380","縲縺繧繝繖繞繙繚繹繪繩繼繻纃緕繽辮繿纈纉續纒纐纓纔纖纎纛纜缸缺罅罌罍罎罐网罕罔罘罟罠罨罩罧罸羂羆羃羈羇羌羔羞羝羚羣羯羲羹羮羶羸譱翅翆翊翕翔翡翦翩翳翹飜耆耄耋耒耘耙耜耡耨耿耻聊聆聒聘聚聟聢聨聳聲聰聶聹聽聿肄肆肅肛肓肚肭冐肬胛胥胙胝胄胚胖脉胯胱脛脩脣脯腋"],["e440","隋腆脾腓腑胼腱腮腥腦腴膃膈膊膀膂膠膕膤膣腟膓膩膰膵膾膸膽臀臂膺臉臍臑臙臘臈臚臟臠臧臺臻臾舁舂舅與舊舍舐舖舩舫舸舳艀艙艘艝艚艟艤"],["e480","艢艨艪艫舮艱艷艸艾芍芒芫芟芻芬苡苣苟苒苴苳苺莓范苻苹苞茆苜茉苙茵茴茖茲茱荀茹荐荅茯茫茗茘莅莚莪莟莢莖茣莎莇莊荼莵荳荵莠莉莨菴萓菫菎菽萃菘萋菁菷萇菠菲萍萢萠莽萸蔆菻葭萪萼蕚蒄葷葫蒭葮蒂葩葆萬葯葹萵蓊葢蒹蒿蒟蓙蓍蒻蓚蓐蓁蓆蓖蒡蔡蓿蓴蔗蔘蔬蔟蔕蔔蓼蕀蕣蕘蕈"],["e540","蕁蘂蕋蕕薀薤薈薑薊薨蕭薔薛藪薇薜蕷蕾薐藉薺藏薹藐藕藝藥藜藹蘊蘓蘋藾藺蘆蘢蘚蘰蘿虍乕虔號虧虱蚓蚣蚩蚪蚋蚌蚶蚯蛄蛆蚰蛉蠣蚫蛔蛞蛩蛬"],["e580","蛟蛛蛯蜒蜆蜈蜀蜃蛻蜑蜉蜍蛹蜊蜴蜿蜷蜻蜥蜩蜚蝠蝟蝸蝌蝎蝴蝗蝨蝮蝙蝓蝣蝪蠅螢螟螂螯蟋螽蟀蟐雖螫蟄螳蟇蟆螻蟯蟲蟠蠏蠍蟾蟶蟷蠎蟒蠑蠖蠕蠢蠡蠱蠶蠹蠧蠻衄衂衒衙衞衢衫袁衾袞衵衽袵衲袂袗袒袮袙袢袍袤袰袿袱裃裄裔裘裙裝裹褂裼裴裨裲褄褌褊褓襃褞褥褪褫襁襄褻褶褸襌褝襠襞"],["e640","襦襤襭襪襯襴襷襾覃覈覊覓覘覡覩覦覬覯覲覺覽覿觀觚觜觝觧觴觸訃訖訐訌訛訝訥訶詁詛詒詆詈詼詭詬詢誅誂誄誨誡誑誥誦誚誣諄諍諂諚諫諳諧"],["e680","諤諱謔諠諢諷諞諛謌謇謚諡謖謐謗謠謳鞫謦謫謾謨譁譌譏譎證譖譛譚譫譟譬譯譴譽讀讌讎讒讓讖讙讚谺豁谿豈豌豎豐豕豢豬豸豺貂貉貅貊貍貎貔豼貘戝貭貪貽貲貳貮貶賈賁賤賣賚賽賺賻贄贅贊贇贏贍贐齎贓賍贔贖赧赭赱赳趁趙跂趾趺跏跚跖跌跛跋跪跫跟跣跼踈踉跿踝踞踐踟蹂踵踰踴蹊"],["e740","蹇蹉蹌蹐蹈蹙蹤蹠踪蹣蹕蹶蹲蹼躁躇躅躄躋躊躓躑躔躙躪躡躬躰軆躱躾軅軈軋軛軣軼軻軫軾輊輅輕輒輙輓輜輟輛輌輦輳輻輹轅轂輾轌轉轆轎轗轜"],["e780","轢轣轤辜辟辣辭辯辷迚迥迢迪迯邇迴逅迹迺逑逕逡逍逞逖逋逧逶逵逹迸遏遐遑遒逎遉逾遖遘遞遨遯遶隨遲邂遽邁邀邊邉邏邨邯邱邵郢郤扈郛鄂鄒鄙鄲鄰酊酖酘酣酥酩酳酲醋醉醂醢醫醯醪醵醴醺釀釁釉釋釐釖釟釡釛釼釵釶鈞釿鈔鈬鈕鈑鉞鉗鉅鉉鉤鉈銕鈿鉋鉐銜銖銓銛鉚鋏銹銷鋩錏鋺鍄錮"],["e840","錙錢錚錣錺錵錻鍜鍠鍼鍮鍖鎰鎬鎭鎔鎹鏖鏗鏨鏥鏘鏃鏝鏐鏈鏤鐚鐔鐓鐃鐇鐐鐶鐫鐵鐡鐺鑁鑒鑄鑛鑠鑢鑞鑪鈩鑰鑵鑷鑽鑚鑼鑾钁鑿閂閇閊閔閖閘閙"],["e880","閠閨閧閭閼閻閹閾闊濶闃闍闌闕闔闖關闡闥闢阡阨阮阯陂陌陏陋陷陜陞陝陟陦陲陬隍隘隕隗險隧隱隲隰隴隶隸隹雎雋雉雍襍雜霍雕雹霄霆霈霓霎霑霏霖霙霤霪霰霹霽霾靄靆靈靂靉靜靠靤靦靨勒靫靱靹鞅靼鞁靺鞆鞋鞏鞐鞜鞨鞦鞣鞳鞴韃韆韈韋韜韭齏韲竟韶韵頏頌頸頤頡頷頽顆顏顋顫顯顰"],["e940","顱顴顳颪颯颱颶飄飃飆飩飫餃餉餒餔餘餡餝餞餤餠餬餮餽餾饂饉饅饐饋饑饒饌饕馗馘馥馭馮馼駟駛駝駘駑駭駮駱駲駻駸騁騏騅駢騙騫騷驅驂驀驃"],["e980","騾驕驍驛驗驟驢驥驤驩驫驪骭骰骼髀髏髑髓體髞髟髢髣髦髯髫髮髴髱髷髻鬆鬘鬚鬟鬢鬣鬥鬧鬨鬩鬪鬮鬯鬲魄魃魏魍魎魑魘魴鮓鮃鮑鮖鮗鮟鮠鮨鮴鯀鯊鮹鯆鯏鯑鯒鯣鯢鯤鯔鯡鰺鯲鯱鯰鰕鰔鰉鰓鰌鰆鰈鰒鰊鰄鰮鰛鰥鰤鰡鰰鱇鰲鱆鰾鱚鱠鱧鱶鱸鳧鳬鳰鴉鴈鳫鴃鴆鴪鴦鶯鴣鴟鵄鴕鴒鵁鴿鴾鵆鵈"],["ea40","鵝鵞鵤鵑鵐鵙鵲鶉鶇鶫鵯鵺鶚鶤鶩鶲鷄鷁鶻鶸鶺鷆鷏鷂鷙鷓鷸鷦鷭鷯鷽鸚鸛鸞鹵鹹鹽麁麈麋麌麒麕麑麝麥麩麸麪麭靡黌黎黏黐黔黜點黝黠黥黨黯"],["ea80","黴黶黷黹黻黼黽鼇鼈皷鼕鼡鼬鼾齊齒齔齣齟齠齡齦齧齬齪齷齲齶龕龜龠堯槇遙瑤凜熙"],["ed40","纊褜鍈銈蓜俉炻昱棈鋹曻彅丨仡仼伀伃伹佖侒侊侚侔俍偀倢俿倞偆偰偂傔僴僘兊兤冝冾凬刕劜劦勀勛匀匇匤卲厓厲叝﨎咜咊咩哿喆坙坥垬埈埇﨏"],["ed80","塚增墲夋奓奛奝奣妤妺孖寀甯寘寬尞岦岺峵崧嵓﨑嵂嵭嶸嶹巐弡弴彧德忞恝悅悊惞惕愠惲愑愷愰憘戓抦揵摠撝擎敎昀昕昻昉昮昞昤晥晗晙晴晳暙暠暲暿曺朎朗杦枻桒柀栁桄棏﨓楨﨔榘槢樰橫橆橳橾櫢櫤毖氿汜沆汯泚洄涇浯涖涬淏淸淲淼渹湜渧渼溿澈澵濵瀅瀇瀨炅炫焏焄煜煆煇凞燁燾犱"],["ee40","犾猤猪獷玽珉珖珣珒琇珵琦琪琩琮瑢璉璟甁畯皂皜皞皛皦益睆劯砡硎硤硺礰礼神祥禔福禛竑竧靖竫箞精絈絜綷綠緖繒罇羡羽茁荢荿菇菶葈蒴蕓蕙"],["ee80","蕫﨟薰蘒﨡蠇裵訒訷詹誧誾諟諸諶譓譿賰賴贒赶﨣軏﨤逸遧郞都鄕鄧釚釗釞釭釮釤釥鈆鈐鈊鈺鉀鈼鉎鉙鉑鈹鉧銧鉷鉸鋧鋗鋙鋐﨧鋕鋠鋓錥錡鋻﨨錞鋿錝錂鍰鍗鎤鏆鏞鏸鐱鑅鑈閒隆﨩隝隯霳霻靃靍靏靑靕顗顥飯飼餧館馞驎髙髜魵魲鮏鮱鮻鰀鵰鵫鶴鸙黑"],["eeef","ⅰ",9,"￢￤＇＂"],["f040","",62],["f080","",124],["f140","",62],["f180","",124],["f240","",62],["f280","",124],["f340","",62],["f380","",124],["f440","",62],["f480","",124],["f540","",62],["f580","",124],["f640","",62],["f680","",124],["f740","",62],["f780","",124],["f840","",62],["f880","",124],["f940",""],["fa40","ⅰ",9,"Ⅰ",9,"￢￤＇＂㈱№℡∵纊褜鍈銈蓜俉炻昱棈鋹曻彅丨仡仼伀伃伹佖侒侊侚侔俍偀倢俿倞偆偰偂傔僴僘兊"],["fa80","兤冝冾凬刕劜劦勀勛匀匇匤卲厓厲叝﨎咜咊咩哿喆坙坥垬埈埇﨏塚增墲夋奓奛奝奣妤妺孖寀甯寘寬尞岦岺峵崧嵓﨑嵂嵭嶸嶹巐弡弴彧德忞恝悅悊惞惕愠惲愑愷愰憘戓抦揵摠撝擎敎昀昕昻昉昮昞昤晥晗晙晴晳暙暠暲暿曺朎朗杦枻桒柀栁桄棏﨓楨﨔榘槢樰橫橆橳橾櫢櫤毖氿汜沆汯泚洄涇浯"],["fb40","涖涬淏淸淲淼渹湜渧渼溿澈澵濵瀅瀇瀨炅炫焏焄煜煆煇凞燁燾犱犾猤猪獷玽珉珖珣珒琇珵琦琪琩琮瑢璉璟甁畯皂皜皞皛皦益睆劯砡硎硤硺礰礼神"],["fb80","祥禔福禛竑竧靖竫箞精絈絜綷綠緖繒罇羡羽茁荢荿菇菶葈蒴蕓蕙蕫﨟薰蘒﨡蠇裵訒訷詹誧誾諟諸諶譓譿賰賴贒赶﨣軏﨤逸遧郞都鄕鄧釚釗釞釭釮釤釥鈆鈐鈊鈺鉀鈼鉎鉙鉑鈹鉧銧鉷鉸鋧鋗鋙鋐﨧鋕鋠鋓錥錡鋻﨨錞鋿錝錂鍰鍗鎤鏆鏞鏸鐱鑅鑈閒隆﨩隝隯霳霻靃靍靏靑靕顗顥飯飼餧館馞驎髙"],["fc40","髜魵魲鮏鮱鮻鰀鵰鵫鶴鸙黑"]]');

/***/ }),

/***/ "(middleware)/./node_modules/mysql2/package.json":
/*!******************************************!*\
  !*** ./node_modules/mysql2/package.json ***!
  \******************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"name":"mysql2","version":"3.14.1","description":"fast mysql driver. Implements core protocol, prepared statements, ssl and compression in native JS","main":"index.js","typings":"typings/mysql/index","type":"commonjs","scripts":{"lint":"eslint . && prettier --check .","lint:fix":"eslint . --fix && prettier --write .","test":"poku -d -r=verbose --sequential test/esm test/unit test/integration","test:bun":"bun poku -d --sequential test/esm test/unit test/integration","test:deno":"deno run --allow-read --allow-env --allow-run npm:poku -d --sequential --denoAllow=\\"read,env,net,sys\\" test/esm test/unit test/integration","test:tsc-build":"cd \\"test/tsc-build\\" && npx tsc -p \\"tsconfig.json\\"","coverage-test":"c8 npm run test","benchmark":"node ./benchmarks/benchmark.js","wait-port":"wait-on"},"repository":{"type":"git","url":"git+https://github.com/sidorares/node-mysql2.git"},"homepage":"https://sidorares.github.io/node-mysql2/docs","keywords":["mysql","client","server"],"files":["lib","typings/mysql","index.js","index.d.ts","promise.js","promise.d.ts"],"exports":{".":"./index.js","./package.json":"./package.json","./promise":"./promise.js","./promise.js":"./promise.js"},"engines":{"node":">= 8.0"},"author":"Andrey Sidorov <andrey.sidorov@gmail.com>","license":"MIT","dependencies":{"aws-ssl-profiles":"^1.1.1","denque":"^2.1.0","generate-function":"^2.3.1","iconv-lite":"^0.6.3","long":"^5.2.1","lru.min":"^1.0.0","named-placeholders":"^1.1.3","seq-queue":"^0.0.5","sqlstring":"^2.3.2"},"devDependencies":{"@eslint/eslintrc":"^3.3.0","@eslint/js":"^9.21.0","@eslint/markdown":"^6.2.2","@types/node":"^22.0.0","@typescript-eslint/eslint-plugin":"^8.26.0","@typescript-eslint/parser":"^8.26.0","assert-diff":"^3.0.2","benchmark":"^2.1.4","c8":"^10.1.1","error-stack-parser":"^2.0.3","eslint-config-prettier":"^10.0.2","eslint-plugin-async-await":"^0.0.0","eslint-plugin-markdown":"^5.1.0","eslint-plugin-prettier":"^5.2.3","globals":"^16.0.0","poku":"^3.0.0","portfinder":"^1.0.28","prettier":"^3.0.0","typescript":"^5.0.2"}}');

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ var __webpack_exports__ = (__webpack_exec__("(middleware)/./node_modules/next/dist/build/webpack/loaders/next-middleware-loader.js?absolutePagePath=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website%5Cmiddleware.ts&page=%2Fmiddleware&rootDir=C%3A%5CUsers%5CASUS%5CAngularWebApp%5Ccrumbled-website&matchers=&preferredRegion=&middlewareConfig=e30%3D!"));
/******/ (_ENTRIES = typeof _ENTRIES === "undefined" ? {} : _ENTRIES).middleware_middleware = __webpack_exports__;
/******/ }
]);